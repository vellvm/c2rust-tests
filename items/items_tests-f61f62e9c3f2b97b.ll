; ModuleID = '24gv3y10vt3ug10t'
source_filename = "24gv3y10vt3ug10t"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::ffi::c_str::CStr" = type { [0 x i8] }
%"core::ffi::VaListImpl" = type { i32, i32, i8*, i8*, %"core::marker::PhantomData<&mut &core::ffi::c_void>" }
%"core::marker::PhantomData<&mut &core::ffi::c_void>" = type {}
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"[closure@src/test_varargs.rs:73:1: 79:2]" = type {}
%"[closure@src/test_noop.rs:22:1: 28:2]" = type {}
%"[closure@src/test_varargs.rs:41:1: 46:2]" = type {}
%"[closure@src/test_varargs.rs:83:1: 89:2]" = type {}
%"[closure@src/test_varargs.rs:51:1: 57:2]" = type {}
%"[closure@src/test_varargs.rs:103:1: 109:2]" = type {}
%"[closure@src/test_noop.rs:14:1: 19:2]" = type {}
%"[closure@src/test_functions.rs:9:1: 14:2]" = type {}
%"[closure@src/test_linking.rs:12:1: 28:2]" = type {}
%"[closure@src/test_fn_attrs.rs:4:1: 64:2]" = type {}
%"[closure@src/test_varargs.rs:62:1: 69:2]" = type {}
%"[closure@src/test_varargs.rs:93:1: 99:2]" = type {}
%"[closure@src/test_varargs.rs:113:1: 119:2]" = type {}
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"alloc::ffi::c_str::NulError" = type { i64, %"alloc::vec::Vec<u8>" }
%"varargs::vastruct" = type { %"core::ffi::VaListImpl" }
%"core::option::Option<core::convert::Infallible>::None" = type {}
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::str::pattern::TwoWaySearcher" = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::StrSearcher" = type { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, %"core::str::pattern::StrSearcherImpl" }
%"core::str::pattern::StrSearcherImpl" = type { i64, [8 x i64] }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]" = type {}
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>" = type { i64, [4 x i64] }
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err" = type { [1 x i64], %"alloc::ffi::c_str::NulError" }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"core::fmt::Opaque" = type {}
%"core::option::Option<core::fmt::Arguments>::Some" = type { %"core::fmt::Arguments" }
%"alloc::alloc::Global" = type {}
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>" = type { %"core::ffi::VaListImpl" }
%"core::str::pattern::StrSearcherImpl::TwoWay" = type { [1 x i64], %"core::str::pattern::TwoWaySearcher" }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::str::pattern::EmptyNeedle" = type { i64, i64, i8, i8, i8, [5 x i8] }
%"core::str::pattern::StrSearcherImpl::Empty" = type { [1 x i64], %"core::str::pattern::EmptyNeedle" }
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"test::types::TestDescAndFn" = type { %"test::types::TestDesc", %"test::types::TestFn" }
%"test::types::TestDesc" = type { %"test::types::TestName", { i8*, i64 }, %"test::options::ShouldPanic", i8, i8, i8, i8, [4 x i8] }
%"test::types::TestName" = type { i8, [39 x i8] }
%"test::options::ShouldPanic" = type { i64, [2 x i64] }
%"test::types::TestFn" = type { i64, [2 x i64] }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5d703a7dbb78ea20E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i32 (i64**)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17he3358dbf817acd06E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd0fde3f377fa9f03E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd0fde3f377fa9f03E" to i8*) }>, align 8, !dbg !0
@alloc158 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc159 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc158, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc161 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc556 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs" }>, align 1
@alloc557 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc556, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\88\01\00\00\0D\00\00\00" }>, align 8
@alloc578 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/pattern.rs" }>, align 1
@alloc559 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc578, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00\14\00\00\00" }>, align 8
@alloc561 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc578, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00!\00\00\00" }>, align 8
@alloc563 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc578, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00\14\00\00\00" }>, align 8
@alloc565 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc578, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00!\00\00\00" }>, align 8
@alloc566 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"alloc::ffi::c_str::NulError"*)* @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17hd06c3484267b3946E" to i8*), [16 x i8] c" \00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"alloc::ffi::c_str::NulError"*, %"core::fmt::Formatter"*)* @"_ZN64_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6ddf2cfa3845ef5E" to i8*) }>, align 8, !dbg !24
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (double**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$f64$GT$17h6a3355b55063efb7E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (double**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9be428947809936eE" to i8*) }>, align 8, !dbg !71
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i32**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h7a6644d12aade1d6E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i32**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4cc1ce3e266e3b6dE" to i8*) }>, align 8, !dbg !81
@alloc172 = private unnamed_addr constant <{ [4 x i8] }> zeroinitializer, align 4
@alloc149 = private unnamed_addr constant <{ [67 x i8] }> <{ [67 x i8] c"the test returned a termination value with a non-zero status code (" }>, align 1
@alloc151 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c") which indicates a failure" }>, align 1
@alloc150 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [67 x i8] }>, <{ [67 x i8] }>* @alloc149, i32 0, i32 0, i32 0), [8 x i8] c"C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc151, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc576 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/test/src/lib.rs" }>, align 1
@alloc577 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc576, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00\B8\00\00\00\05\00\00\00" }>, align 8
@alloc579 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc578, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\1C\04\00\00\17\00\00\00" }>, align 8
@rust_mut = global <{ [4 x i8] }> <{ [4 x i8] c"\01\00\00\00" }>, align 4, !dbg !91
@rust_y = global <{ [4 x i8] }> <{ [4 x i8] c"\02\00\00\00" }>, align 4, !dbg !96
@alloc1 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"%d, %f\0A\00" }>, align 1
@alloc4 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"%s\00" }>, align 1
@alloc3 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"%f\00" }>, align 1
@alloc2 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"%d\00" }>, align 1
@alloc590 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"src/varargs.rs" }>, align 1
@alloc581 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc590, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00v\00\00\004\00\00\00" }>, align 8
@alloc583 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc590, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00y\00\00\004\00\00\00" }>, align 8
@alloc585 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc590, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\86\00\00\004\00\00\00" }>, align 8
@alloc587 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc590, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\89\00\00\004\00\00\00" }>, align 8
@alloc589 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc590, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\AB\00\00\00\09\00\00\00" }>, align 8
@str.4 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc591 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc590, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\B4\00\00\00\09\00\00\00" }>, align 8
@alloc594 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"src/test_noop.rs" }>, align 1
@alloc593 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc594, i32 0, i32 0, i32 0), [16 x i8] c"\10\00\00\00\00\00\00\00\1A\00\00\00\05\00\00\00" }>, align 8
@alloc595 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc594, i32 0, i32 0, i32 0), [16 x i8] c"\10\00\00\00\00\00\00\00\1B\00\00\00\05\00\00\00" }>, align 8
@alloc606 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"src/test_linking.rs" }>, align 1
@alloc597 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc606, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\11\00\00\00\05\00\00\00" }>, align 8
@alloc206 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\03\00\00\00" }>, align 4
@alloc599 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc606, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\12\00\00\00\05\00\00\00" }>, align 8
@alloc601 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc606, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\13\00\00\00\05\00\00\00" }>, align 8
@alloc603 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc606, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\19\00\00\00\05\00\00\00" }>, align 8
@alloc222 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\04\00\00\00" }>, align 4
@alloc605 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc606, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\1A\00\00\00\05\00\00\00" }>, align 8
@alloc607 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc606, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\1B\00\00\00\05\00\00\00" }>, align 8
@alloc608 = private unnamed_addr constant <{ [2057 x i8] }> <{ [2057 x i8] c"#![allow(\0A    dead_code,\0A    mutable_transmutes,\0A    non_camel_case_types,\0A    non_snake_case,\0A    non_upper_case_globals,\0A    unused_assignments,\0A    unused_mut\0A)]\0A#![feature(linkage)]\0Aextern \22C\22 {\0A    #[link_name = \22inline_extern\22]\0A    fn aliased_fn();\0A}\0A#[inline(always)]\0Aunsafe extern \22C\22 fn rust_always_inline_static() {}\0A#[inline(never)]\0Aunsafe extern \22C\22 fn rust_noinline_static() {}\0A#[inline]\0Aunsafe extern \22C\22 fn rust_inline_static() {}\0A#[inline]\0Aunsafe extern \22C\22 fn rust_alt_kw_inline_static() {}\0A#[inline]\0Aunsafe extern \22C\22 fn rust_gnu_inline_static() {}\0A#[cold]\0Aunsafe extern \22C\22 fn rust_cold_used_attrs() {}\0A#[inline(always)]\0Aunsafe extern \22C\22 fn rust_always_inline_nonstatic() {}\0A#[inline]\0Aunsafe extern \22C\22 fn rust_gnu_inline_nonstatic() {}\0A#[no_mangle]\0A#[inline(never)]\0Apub unsafe extern \22C\22 fn rust_noinline_nonstatic() {}\0A#[inline]\0Aunsafe extern \22C\22 fn rust_inline_nonstatic() {}\0A#[inline]\0Aunsafe extern \22C\22 fn rust_alt_kw_inline_nonstatic() {}\0A#[no_mangle]\0A#[inline]\0A#[linkage = \22external\22]\0Apub unsafe extern \22C\22 fn rust_inline_extern() {}\0A#[no_mangle]\0A#[inline]\0A#[linkage = \22external\22]\0Apub unsafe extern \22C\22 fn rust_alt_kw_inline_extern() {}\0A#[no_mangle]\0A#[inline(always)]\0Apub unsafe extern \22C\22 fn rust_always_inline_extern() {}\0A#[inline]\0Aunsafe extern \22C\22 fn rust_gnu_inline_extern() {}\0A#[inline(always)]\0Aunsafe extern \22C\22 fn rust_always_inline_gnu_inline_extern() {}\0A#[inline]\0Aunsafe extern \22C\22 fn rust_gnu_inline_non_canonical_definition_extern() {}\0A#[no_mangle]\0Apub unsafe extern \22C\22 fn rust_ensure_use() {\0A    rust_always_inline_static();\0A    rust_always_inline_nonstatic();\0A    rust_gnu_inline_nonstatic();\0A    rust_inline_static();\0A    rust_alt_kw_inline_static();\0A    rust_noinline_static();\0A    rust_inline_nonstatic();\0A    rust_alt_kw_inline_nonstatic();\0A    rust_gnu_inline_static();\0A    rust_inline_extern();\0A    rust_alt_kw_inline_extern();\0A    rust_always_inline_extern();\0A    rust_gnu_inline_extern();\0A    rust_always_inline_gnu_inline_extern();\0A    rust_gnu_inline_non_canonical_definition_extern();\0A    aliased_fn();\0A}\0A" }>, align 1
@alloc609 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"#[inline(always)]\0Aunsafe extern \22C\22 fn rust_always_inline_static" }>, align 1
@alloc610 = private unnamed_addr constant <{ [108 x i8] }> <{ [108 x i8] c"assertion failed: src.contains(\\\22#[inline(always)]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_always_inline_static\\\22)" }>, align 1
@alloc679 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"src/test_fn_attrs.rs" }>, align 1
@alloc612 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\19\00\00\00\05\00\00\00" }>, align 8
@alloc613 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"#[inline(never)]\0Aunsafe extern \22C\22 fn rust_noinline_static" }>, align 1
@alloc614 = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"assertion failed: src.contains(\\\22#[inline(never)]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_noinline_static\\\22)" }>, align 1
@alloc616 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\1A\00\00\00\05\00\00\00" }>, align 8
@alloc617 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"#[inline]\0Aunsafe extern \22C\22 fn rust_inline_static" }>, align 1
@alloc618 = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_inline_static\\\22)" }>, align 1
@alloc620 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\1B\00\00\00\05\00\00\00" }>, align 8
@alloc621 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"#[inline]\0Aunsafe extern \22C\22 fn rust_alt_kw_inline_static" }>, align 1
@alloc622 = private unnamed_addr constant <{ [100 x i8] }> <{ [100 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_alt_kw_inline_static\\\22)" }>, align 1
@alloc624 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\1C\00\00\00\05\00\00\00" }>, align 8
@alloc625 = private unnamed_addr constant <{ [53 x i8] }> <{ [53 x i8] c"#[inline]\0Aunsafe extern \22C\22 fn rust_gnu_inline_static" }>, align 1
@alloc626 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_gnu_inline_static\\\22)" }>, align 1
@alloc628 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\1D\00\00\00\05\00\00\00" }>, align 8
@alloc629 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"#[cold]\0Aunsafe extern \22C\22 fn rust_cold_used_attrs" }>, align 1
@alloc630 = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"assertion failed: src.contains(\\\22#[cold]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_cold_used_attrs\\\22)" }>, align 1
@alloc632 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\1E\00\00\00\05\00\00\00" }>, align 8
@alloc633 = private unnamed_addr constant <{ [67 x i8] }> <{ [67 x i8] c"#[inline(always)]\0Aunsafe extern \22C\22 fn rust_always_inline_nonstatic" }>, align 1
@alloc634 = private unnamed_addr constant <{ [111 x i8] }> <{ [111 x i8] c"assertion failed: src.contains(\\\22#[inline(always)]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_always_inline_nonstatic\\\22)" }>, align 1
@alloc636 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00#\00\00\00\05\00\00\00" }>, align 8
@alloc637 = private unnamed_addr constant <{ [65 x i8] }> <{ [65 x i8] c"#[inline(never)]\0Apub unsafe extern \22C\22 fn rust_noinline_nonstatic" }>, align 1
@alloc638 = private unnamed_addr constant <{ [109 x i8] }> <{ [109 x i8] c"assertion failed: src.contains(\\\22#[inline(never)]\\\\npub unsafe extern \\\\\\\22C\\\\\\\22 fn rust_noinline_nonstatic\\\22)" }>, align 1
@alloc640 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00$\00\00\00\05\00\00\00" }>, align 8
@alloc641 = private unnamed_addr constant <{ [52 x i8] }> <{ [52 x i8] c"#[inline]\0Aunsafe extern \22C\22 fn rust_inline_nonstatic" }>, align 1
@alloc642 = private unnamed_addr constant <{ [96 x i8] }> <{ [96 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_inline_nonstatic\\\22)" }>, align 1
@alloc644 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00%\00\00\00\05\00\00\00" }>, align 8
@alloc645 = private unnamed_addr constant <{ [59 x i8] }> <{ [59 x i8] c"#[inline]\0Aunsafe extern \22C\22 fn rust_alt_kw_inline_nonstatic" }>, align 1
@alloc646 = private unnamed_addr constant <{ [103 x i8] }> <{ [103 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_alt_kw_inline_nonstatic\\\22)" }>, align 1
@alloc648 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00&\00\00\00\05\00\00\00" }>, align 8
@alloc649 = private unnamed_addr constant <{ [56 x i8] }> <{ [56 x i8] c"#[inline]\0Aunsafe extern \22C\22 fn rust_gnu_inline_nonstatic" }>, align 1
@alloc650 = private unnamed_addr constant <{ [100 x i8] }> <{ [100 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_gnu_inline_nonstatic\\\22)" }>, align 1
@alloc652 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00'\00\00\00\05\00\00\00" }>, align 8
@alloc653 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"#[inline]\0A#[linkage = \22external\22]\0Apub unsafe extern \22C\22 fn rust_inline_extern" }>, align 1
@alloc654 = private unnamed_addr constant <{ [129 x i8] }> <{ [129 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\n#[linkage = \\\\\\\22external\\\\\\\22]\\\\npub unsafe extern \\\\\\\22C\\\\\\\22 fn rust_inline_extern\\\22)" }>, align 1
@alloc656 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00-\00\00\00\05\00\00\00" }>, align 8
@alloc657 = private unnamed_addr constant <{ [84 x i8] }> <{ [84 x i8] c"#[inline]\0A#[linkage = \22external\22]\0Apub unsafe extern \22C\22 fn rust_alt_kw_inline_extern" }>, align 1
@alloc658 = private unnamed_addr constant <{ [136 x i8] }> <{ [136 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\n#[linkage = \\\\\\\22external\\\\\\\22]\\\\npub unsafe extern \\\\\\\22C\\\\\\\22 fn rust_alt_kw_inline_extern\\\22)" }>, align 1
@alloc660 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\000\00\00\00\05\00\00\00" }>, align 8
@alloc661 = private unnamed_addr constant <{ [68 x i8] }> <{ [68 x i8] c"#[inline(always)]\0Apub unsafe extern \22C\22 fn rust_always_inline_extern" }>, align 1
@alloc662 = private unnamed_addr constant <{ [112 x i8] }> <{ [112 x i8] c"assertion failed: src.contains(\\\22#[inline(always)]\\\\npub unsafe extern \\\\\\\22C\\\\\\\22 fn rust_always_inline_extern\\\22)" }>, align 1
@alloc664 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\001\00\00\00\05\00\00\00" }>, align 8
@alloc665 = private unnamed_addr constant <{ [53 x i8] }> <{ [53 x i8] c"#[inline]\0Aunsafe extern \22C\22 fn rust_gnu_inline_extern" }>, align 1
@alloc666 = private unnamed_addr constant <{ [97 x i8] }> <{ [97 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_gnu_inline_extern\\\22)" }>, align 1
@alloc668 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\002\00\00\00\05\00\00\00" }>, align 8
@alloc669 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"#[inline(always)]\0Aunsafe extern \22C\22 fn rust_always_inline_gnu_inline_extern" }>, align 1
@alloc670 = private unnamed_addr constant <{ [119 x i8] }> <{ [119 x i8] c"assertion failed: src.contains(\\\22#[inline(always)]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_always_inline_gnu_inline_extern\\\22)" }>, align 1
@alloc672 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\003\00\00\00\05\00\00\00" }>, align 8
@alloc673 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"#[inline]\0Aunsafe extern \22C\22 fn rust_gnu_inline_non_canonical_definition_extern" }>, align 1
@alloc674 = private unnamed_addr constant <{ [122 x i8] }> <{ [122 x i8] c"assertion failed: src.contains(\\\22#[inline]\\\\nunsafe extern \\\\\\\22C\\\\\\\22 fn rust_gnu_inline_non_canonical_definition_extern\\\22)" }>, align 1
@alloc676 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\006\00\00\00\05\00\00\00" }>, align 8
@alloc677 = private unnamed_addr constant <{ [68 x i8] }> <{ [68 x i8] c"extern \22C\22 {\0A    #[link_name = \22inline_extern\22]\0A    fn aliased_fn();" }>, align 1
@alloc678 = private unnamed_addr constant <{ [120 x i8] }> <{ [120 x i8] c"assertion failed: src.contains(\\\22extern \\\\\\\22C\\\\\\\22 {\\\\n    #[link_name = \\\\\\\22inline_extern\\\\\\\22]\\\\n    fn aliased_fn();\\\22)" }>, align 1
@alloc680 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc679, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00<\00\00\00\09\00\00\00" }>, align 8
@alloc699 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"%d, %f\0A" }>, align 1
@alloc702 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"src/test_varargs.rs" }>, align 1
@alloc683 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\004\00\00\00,\00\00\00" }>, align 8
@alloc684 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"%d, %f, %s\0A" }>, align 1
@alloc686 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00?\00\00\000\00\00\00" }>, align 8
@alloc687 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"test" }>, align 1
@alloc689 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00@\00\00\00)\00\00\00" }>, align 8
@alloc692 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00J\00\00\00,\00\00\00" }>, align 8
@alloc695 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00T\00\00\00,\00\00\00" }>, align 8
@alloc698 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00^\00\00\00,\00\00\00" }>, align 8
@alloc701 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00h\00\00\00,\00\00\00" }>, align 8
@alloc703 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc702, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00u\00\00\00\09\00\00\00" }>, align 8
@alloc8 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"test_noop::test_noop" }>, align 1
@alloc452 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc8, i32 0, i32 0, i32 0), [8 x i8] c"\14\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17ha270832fbeaf6911E to i8*), [8 x i8] undef }>, align 8
@alloc18 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"test_noop::test_nofnargs" }>, align 1
@alloc453 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @alloc18, i32 0, i32 0, i32 0), [8 x i8] c"\18\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h5736f6ce427174a2E to i8*), [8 x i8] undef }>, align 8
@alloc30 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"test_linking::test_linking" }>, align 1
@alloc454 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc30, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hd483a72806981ebcE to i8*), [8 x i8] undef }>, align 8
@alloc40 = private unnamed_addr constant <{ [44 x i8] }> <{ [44 x i8] c"test_functions::test_coreutils_static_assert" }>, align 1
@alloc455 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [44 x i8] }>, <{ [44 x i8] }>* @alloc40, i32 0, i32 0, i32 0), [8 x i8] c",\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hca7b06276e5a34b4E to i8*), [8 x i8] undef }>, align 8
@alloc50 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"test_fn_attrs::test_fn_attrs" }>, align 1
@alloc456 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [28 x i8] }>, <{ [28 x i8] }>* @alloc50, i32 0, i32 0, i32 0), [8 x i8] c"\1C\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hd56a9f4381f21938E to i8*), [8 x i8] undef }>, align 8
@alloc60 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"test_varargs::test_call_printf" }>, align 1
@alloc457 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [30 x i8] }>, <{ [30 x i8] }>* @alloc60, i32 0, i32 0, i32 0), [8 x i8] c"\1E\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h6214936ae3873b08E to i8*), [8 x i8] undef }>, align 8
@alloc70 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c"test_varargs::test_call_vprintf" }>, align 1
@alloc458 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [31 x i8] }>, <{ [31 x i8] }>* @alloc70, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h77aa248235f6fc7bE to i8*), [8 x i8] undef }>, align 8
@alloc80 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"test_varargs::test_my_printf" }>, align 1
@alloc459 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [28 x i8] }>, <{ [28 x i8] }>* @alloc80, i32 0, i32 0, i32 0), [8 x i8] c"\1C\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hd6c9cf14983b1622E to i8*), [8 x i8] undef }>, align 8
@alloc90 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"test_varargs::test_simple_vacopy" }>, align 1
@alloc460 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [32 x i8] }>, <{ [32 x i8] }>* @alloc90, i32 0, i32 0, i32 0), [8 x i8] c" \00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h470a16ca416fea68E to i8*), [8 x i8] undef }>, align 8
@alloc100 = private unnamed_addr constant <{ [39 x i8] }> <{ [39 x i8] c"test_varargs::test_valist_struct_member" }>, align 1
@alloc461 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [39 x i8] }>, <{ [39 x i8] }>* @alloc100, i32 0, i32 0, i32 0), [8 x i8] c"'\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h77268db247ff65b5E to i8*), [8 x i8] undef }>, align 8
@alloc110 = private unnamed_addr constant <{ [47 x i8] }> <{ [47 x i8] c"test_varargs::test_valist_struct_pointer_member" }>, align 1
@alloc462 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [47 x i8] }>, <{ [47 x i8] }>* @alloc110, i32 0, i32 0, i32 0), [8 x i8] c"/\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hd8abc731315913cdE to i8*), [8 x i8] undef }>, align 8
@alloc120 = private unnamed_addr constant <{ [33 x i8] }> <{ [33 x i8] c"test_varargs::test_restart_valist" }>, align 1
@alloc463 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [33 x i8] }>, <{ [33 x i8] }>* @alloc120, i32 0, i32 0, i32 0), [8 x i8] c"!\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h861b3bcfb9bac322E to i8*), [8 x i8] undef }>, align 8
@alloc130 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"test_varargs::test_sample_stddev" }>, align 1
@alloc464 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [32 x i8] }>, <{ [32 x i8] }>* @alloc130, i32 0, i32 0, i32 0), [8 x i8] c" \00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17he9f295bdf9616028E to i8*), [8 x i8] undef }>, align 8
@alloc465 = private unnamed_addr constant <{ i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }> <{ i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc452, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc453, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc454, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc455, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc456, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc457, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc458, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc459, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc460, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc461, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc462, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc463, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc464, i32 0, i32 0, i32 0) }>, align 8
@__rustc_debug_gdb_scripts_section__ = linkonce_odr unnamed_addr constant [34 x i8] c"\01gdb_load_rust_pretty_printers.py\00", section ".debug_gdb_scripts", align 1

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hb17d977b9330e67cE"(i8* %unique) unnamed_addr #0 !dbg !203 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %unique.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !209, metadata !DIExpression()), !dbg !210
  store i8* %unique, i8** %self.dbg.spill, align 8, !dbg !211
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !212, metadata !DIExpression()), !dbg !220
  store i8* %unique, i8** %self.dbg.spill1, align 8, !dbg !220
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !221, metadata !DIExpression()), !dbg !226
  store i8* %unique, i8** %ptr.dbg.spill, align 8, !dbg !226
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !228, metadata !DIExpression()), !dbg !233
  store i8* %unique, i8** %0, align 8, !dbg !233
  %1 = load i8*, i8** %0, align 8, !dbg !235, !nonnull !23, !noundef !23
  ret i8* %1, !dbg !235
}

; std::sys_common::backtrace::__rust_begin_short_backtrace
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h3dcbdf874863fb13E(void ()* %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !236 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dummy.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca void ()*, align 8
  %result.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !244, metadata !DIExpression()), !dbg !249
  store void ()* %f, void ()** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %f.dbg.spill, metadata !243, metadata !DIExpression()), !dbg !250
  call void @llvm.dbg.declare(metadata {}* %dummy.dbg.spill, metadata !251, metadata !DIExpression()), !dbg !260
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h793ca64f3c1536f2E(void ()* %f), !dbg !262
  br label %bb1, !dbg !262

bb1:                                              ; preds = %start
  call void asm sideeffect "", "r,~{memory}"({}* undef), !dbg !260, !srcloc !263
  br label %bb4, !dbg !260

bb4:                                              ; preds = %bb1
  ret void, !dbg !264

bb2:                                              ; No predecessors!
  br label %bb3, !dbg !265

bb3:                                              ; preds = %bb2
  %1 = bitcast { i8*, i32 }* %0 to i8**, !dbg !266
  %2 = load i8*, i8** %1, align 8, !dbg !266
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !266
  %4 = load i32, i32* %3, align 8, !dbg !266
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0, !dbg !266
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1, !dbg !266
  resume { i8*, i32 } %6, !dbg !266
}

; std::rt::lang_start
; Function Attrs: nonlazybind uwtable
define hidden i64 @_ZN3std2rt10lang_start17h65989a39d4366ac2E(void ()* %main, i64 %argc, i8** %argv) unnamed_addr #2 !dbg !267 {
start:
  %v.dbg.spill = alloca i64, align 8
  %argv.dbg.spill = alloca i8**, align 8
  %argc.dbg.spill = alloca i64, align 8
  %main.dbg.spill = alloca void ()*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64, align 8
  store void ()* %main, void ()** %main.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %main.dbg.spill, metadata !274, metadata !DIExpression()), !dbg !279
  store i64 %argc, i64* %argc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %argc.dbg.spill, metadata !275, metadata !DIExpression()), !dbg !280
  store i8** %argv, i8*** %argv.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.dbg.spill, metadata !276, metadata !DIExpression()), !dbg !281
  %0 = bitcast i64** %_8 to void ()**, !dbg !282
  store void ()* %main, void ()** %0, align 8, !dbg !282
  %_5.0 = bitcast i64** %_8 to {}*, !dbg !283
; call std::rt::lang_start_internal
  %1 = call i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1 %_5.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.0 to [3 x i64]*), i64 %argc, i8** %argv), !dbg !284
  store i64 %1, i64* %_4, align 8, !dbg !284
  br label %bb1, !dbg !284

bb1:                                              ; preds = %start
  %v = load i64, i64* %_4, align 8, !dbg !285
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !285
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !277, metadata !DIExpression()), !dbg !286
  ret i64 %v, !dbg !287
}

; std::rt::lang_start::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd0fde3f377fa9f03E"(i64** align 8 %_1) unnamed_addr #0 !dbg !288 {
start:
  %self.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i64**, align 8
  %self = alloca i8, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  %0 = load i64**, i64*** %_1.dbg.spill, align 8, !nonnull !23, !align !294, !noundef !23
  %1 = bitcast i64** %0 to void ()**
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !293, metadata !DIExpression(DW_OP_deref)), !dbg !295
  call void @llvm.dbg.declare(metadata i8* %self, metadata !296, metadata !DIExpression()), !dbg !314
  %2 = bitcast i64** %_1 to void ()**, !dbg !316
  %_4 = load void ()*, void ()** %2, align 8, !dbg !316, !nonnull !23, !noundef !23
; call std::sys_common::backtrace::__rust_begin_short_backtrace
  call void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h3dcbdf874863fb13E(void ()* %_4), !dbg !315
  br label %bb1, !dbg !315

bb1:                                              ; preds = %start
; call <() as std::process::Termination>::report
  %3 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17he2d2acc5dba4a248E"(), !dbg !315
  store i8 %3, i8* %self, align 1, !dbg !315
  br label %bb2, !dbg !315

bb2:                                              ; preds = %bb1
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !314
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !317, metadata !DIExpression()), !dbg !325
  %_6 = load i8, i8* %self, align 1, !dbg !325
  %4 = zext i8 %_6 to i32, !dbg !325
  ret i32 %4, !dbg !327
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4cc1ce3e266e3b6dE"(i32** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !328 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32**, align 8
  store i32** %self, i32*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %self.dbg.spill, metadata !387, metadata !DIExpression()), !dbg !391
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !388, metadata !DIExpression()), !dbg !392
  %_6 = load i32*, i32** %self, align 8, !dbg !393, !nonnull !23, !align !394, !noundef !23
; call core::fmt::num::<impl core::fmt::Debug for i32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hcddc92d572cb5de9E"(i32* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !395
  br label %bb1, !dbg !395

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !396
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9be428947809936eE"(double** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !397 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca double**, align 8
  store double** %self, double*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double*** %self.dbg.spill, metadata !402, metadata !DIExpression()), !dbg !406
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !403, metadata !DIExpression()), !dbg !407
  %_6 = load double*, double** %self, align 8, !dbg !408, !nonnull !23, !align !294, !noundef !23
; call core::fmt::float::<impl core::fmt::Debug for f64>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt5float50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$f64$GT$3fmt17hd598d3675624ef64E"(double* align 8 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !409
  br label %bb1, !dbg !409

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !410
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h225f3d09039f53a3E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !411 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !419, metadata !DIExpression()), !dbg !421
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !420, metadata !DIExpression()), !dbg !422
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !423
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !424, metadata !DIExpression()), !dbg !432
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !433
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !431, metadata !DIExpression()), !dbg !432
  %1 = add nuw i64 %start1, %n, !dbg !432
  store i64 %1, i64* %0, align 8, !dbg !432
  %2 = load i64, i64* %0, align 8, !dbg !432
  br label %bb1, !dbg !432

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !434
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h5d3b8e6580969331E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !435 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !437, metadata !DIExpression()), !dbg !439
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !438, metadata !DIExpression()), !dbg !440
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !441
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !442, metadata !DIExpression()), !dbg !447
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !448
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !446, metadata !DIExpression()), !dbg !447
  %1 = sub nuw i64 %start1, %n, !dbg !447
  store i64 %1, i64* %0, align 8, !dbg !447
  %2 = load i64, i64* %0, align 8, !dbg !447
  br label %bb1, !dbg !447

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !449
}

; core::intrinsics::const_eval_select
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core10intrinsics17const_eval_select17h168407bbf0f28c3dE(i8* align 1 %arg.0, i64 %arg.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !450 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %called_at_rt.dbg.spill = alloca {}, align 1
  %_called_in_const.dbg.spill = alloca {}, align 1
  %arg.dbg.spill = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %arg.dbg.spill, i32 0, i32 0
  store i8* %arg.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %arg.dbg.spill, i32 0, i32 1
  store i64 %arg.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %arg.dbg.spill, metadata !476, metadata !DIExpression()), !dbg !484
  call void @llvm.dbg.declare(metadata {}* %_called_in_const.dbg.spill, metadata !477, metadata !DIExpression()), !dbg !485
  call void @llvm.dbg.declare(metadata {}* %called_at_rt.dbg.spill, metadata !478, metadata !DIExpression()), !dbg !486
  %3 = bitcast i8* %arg.0 to [0 x i8]*, !dbg !487
; invoke core::ops::function::FnOnce::call_once
  %4 = invoke { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ops8function6FnOnce9call_once17h461c99379196a0a7E([0 x i8]* align 1 %3, i64 %arg.1)
          to label %bb1 unwind label %cleanup, !dbg !487

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !488

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %10 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %4, 0, !dbg !487
  %11 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %4, 1, !dbg !487
  br label %bb2, !dbg !488

bb4:                                              ; preds = %bb3
  %12 = bitcast { i8*, i32 }* %0 to i8**, !dbg !489
  %13 = load i8*, i8** %12, align 8, !dbg !489
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !489
  %15 = load i32, i32* %14, align 8, !dbg !489
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !489
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !489
  resume { i8*, i32 } %17, !dbg !489

bb2:                                              ; preds = %bb1
  %18 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %10, 0, !dbg !490
  %19 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %18, i64 %11, 1, !dbg !490
  ret { %"core::ffi::c_str::CStr"*, i64 } %19, !dbg !490
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3cmp3Ord3max17heb94650d3533541dE(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !491 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %3 = alloca i64, align 8
  %other = alloca i64, align 8
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  store i64 %1, i64* %other, align 8
  call void @llvm.dbg.declare(metadata i64* %self, metadata !495, metadata !DIExpression()), !dbg !499
  call void @llvm.dbg.declare(metadata i64* %other, metadata !496, metadata !DIExpression()), !dbg !500
  store i8 1, i8* %_9, align 1, !dbg !501
  store i8 1, i8* %_8, align 1, !dbg !501
; invoke core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %4 = invoke i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hb3f07e57d892c0cbE"(i64* align 8 %self, i64* align 8 %other)
          to label %bb1 unwind label %cleanup, !dbg !501, !range !502

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !503

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %4, i8* %_3, align 1, !dbg !501
  %_7 = load i8, i8* %_3, align 1, !dbg !501, !range !502, !noundef !23
  switch i8 %_7, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !504

bb13:                                             ; preds = %bb8
  %10 = load i8, i8* %_9, align 1, !dbg !503, !range !505, !noundef !23
  %11 = trunc i8 %10 to i1, !dbg !503
  br i1 %11, label %bb12, label %bb9, !dbg !503

bb3:                                              ; preds = %bb1
  unreachable, !dbg !501

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_8, align 1, !dbg !506
  %12 = load i64, i64* %other, align 8, !dbg !506
  store i64 %12, i64* %3, align 8, !dbg !506
  br label %bb5, !dbg !506

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1, !dbg !507
  %13 = load i64, i64* %self, align 8, !dbg !507
  store i64 %13, i64* %3, align 8, !dbg !507
  br label %bb5, !dbg !507

bb5:                                              ; preds = %bb4, %bb2
  %14 = load i8, i8* %_8, align 1, !dbg !503, !range !505, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !503
  br i1 %15, label %bb10, label %bb6, !dbg !503

bb6:                                              ; preds = %bb10, %bb5
  %16 = load i8, i8* %_9, align 1, !dbg !503, !range !505, !noundef !23
  %17 = trunc i8 %16 to i1, !dbg !503
  br i1 %17, label %bb11, label %bb7, !dbg !503

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !503

bb9:                                              ; preds = %bb12, %bb13
  %18 = bitcast { i8*, i32 }* %2 to i8**, !dbg !508
  %19 = load i8*, i8** %18, align 8, !dbg !508
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !508
  %21 = load i32, i32* %20, align 8, !dbg !508
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !508
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !508
  resume { i8*, i32 } %23, !dbg !508

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !503

bb7:                                              ; preds = %bb11, %bb6
  %24 = load i64, i64* %3, align 8, !dbg !509
  ret i64 %24, !dbg !509

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !503
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hb3f07e57d892c0cbE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !510 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !517, metadata !DIExpression()), !dbg !519
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !518, metadata !DIExpression()), !dbg !520
  %_4 = load i64, i64* %self, align 8, !dbg !521
  %_5 = load i64, i64* %other, align 8, !dbg !522
  %_3 = icmp ult i64 %_4, %_5, !dbg !521
  br i1 %_3, label %bb1, label %bb2, !dbg !521

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !523
  %_8 = load i64, i64* %other, align 8, !dbg !524
  %_6 = icmp eq i64 %_7, %_8, !dbg !523
  br i1 %_6, label %bb3, label %bb4, !dbg !523

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !525
  br label %bb6, !dbg !526

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !527, !range !502, !noundef !23
  ret i8 %1, !dbg !527

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !528
  br label %bb5, !dbg !529

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !530
  br label %bb5, !dbg !529

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !526
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h36ac290b4ba6899eE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !531 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !537, metadata !DIExpression()), !dbg !539
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !538, metadata !DIExpression()), !dbg !540
  %_3 = load i64, i64* %self, align 8, !dbg !541
  %_4 = load i64, i64* %other, align 8, !dbg !542
  %0 = icmp ult i64 %_3, %_4, !dbg !541
  ret i1 %0, !dbg !543
}

; core::ffi::VaListImpl::as_va_list
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %self) unnamed_addr #0 !dbg !544 {
start:
  %self.dbg.spill = alloca %"core::ffi::VaListImpl"*, align 8
  %0 = alloca i64*, align 8
  store %"core::ffi::VaListImpl"* %self, %"core::ffi::VaListImpl"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"** %self.dbg.spill, metadata !570, metadata !DIExpression()), !dbg !571
  %1 = bitcast i64** %0 to %"core::ffi::VaListImpl"**, !dbg !572
  store %"core::ffi::VaListImpl"* %self, %"core::ffi::VaListImpl"** %1, align 8, !dbg !572
  %2 = load i64*, i64** %0, align 8, !dbg !573, !nonnull !23, !align !294, !noundef !23
  ret i64* %2, !dbg !573
}

; core::ffi::VaListImpl::arg
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ffi10VaListImpl3arg17h346cf3d2ff706f30E(%"core::ffi::VaListImpl"* align 8 %self) unnamed_addr #0 !dbg !574 {
start:
  %0 = alloca i32, align 4
  %self.dbg.spill = alloca %"core::ffi::VaListImpl"*, align 8
  store %"core::ffi::VaListImpl"* %self, %"core::ffi::VaListImpl"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"** %self.dbg.spill, metadata !578, metadata !DIExpression()), !dbg !579
  %1 = va_arg %"core::ffi::VaListImpl"* %self, i32, !dbg !580
  store i32 %1, i32* %0, align 4, !dbg !580
  %2 = load i32, i32* %0, align 4, !dbg !580
  br label %bb1, !dbg !580

bb1:                                              ; preds = %start
  ret i32 %2, !dbg !581
}

; core::ffi::VaListImpl::arg
; Function Attrs: inlinehint nonlazybind uwtable
define internal double @_ZN4core3ffi10VaListImpl3arg17h527596819821ca88E(%"core::ffi::VaListImpl"* align 8 %self) unnamed_addr #0 !dbg !582 {
start:
  %0 = alloca double, align 8
  %self.dbg.spill = alloca %"core::ffi::VaListImpl"*, align 8
  store %"core::ffi::VaListImpl"* %self, %"core::ffi::VaListImpl"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"** %self.dbg.spill, metadata !586, metadata !DIExpression()), !dbg !587
  %1 = va_arg %"core::ffi::VaListImpl"* %self, double, !dbg !588
  store double %1, double* %0, align 8, !dbg !588
  %2 = load double, double* %0, align 8, !dbg !588
  br label %bb1, !dbg !588

bb1:                                              ; preds = %start
  ret double %2, !dbg !589
}

; core::ffi::VaListImpl::arg
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN4core3ffi10VaListImpl3arg17hf947328bb00d6431E(%"core::ffi::VaListImpl"* align 8 %self) unnamed_addr #0 !dbg !590 {
start:
  %0 = alloca i8*, align 8
  %self.dbg.spill = alloca %"core::ffi::VaListImpl"*, align 8
  store %"core::ffi::VaListImpl"* %self, %"core::ffi::VaListImpl"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"** %self.dbg.spill, metadata !595, metadata !DIExpression()), !dbg !598
  %1 = va_arg %"core::ffi::VaListImpl"* %self, i8*, !dbg !599
  store i8* %1, i8** %0, align 8, !dbg !599
  %2 = load i8*, i8** %0, align 8, !dbg !599
  br label %bb1, !dbg !599

bb1:                                              ; preds = %start
  ret i8* %2, !dbg !600
}

; core::ffi::c_str::CStr::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !601 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { %"core::ffi::c_str::CStr"*, i64 }, align 8
  %0 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %self.dbg.spill, i32 0, i32 0
  store %"core::ffi::c_str::CStr"* %self.0, %"core::ffi::c_str::CStr"** %0, align 8
  %1 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { %"core::ffi::c_str::CStr"*, i64 }* %self.dbg.spill, metadata !607, metadata !DIExpression()), !dbg !608
  %self.01 = bitcast %"core::ffi::c_str::CStr"* %self.0 to [0 x i8]*, !dbg !609
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !609
  store [0 x i8]* %self.01, [0 x i8]** %2, align 8, !dbg !609
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !609
  store i64 %self.1, i64* %3, align 8, !dbg !609
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !610, metadata !DIExpression()), !dbg !626
  %4 = bitcast [0 x i8]* %self.01 to i8*, !dbg !626
  ret i8* %4, !dbg !627
}

; core::fmt::num::<impl core::fmt::Debug for i32>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hcddc92d572cb5de9E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !628 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32*, align 8
  %0 = alloca i8, align 1
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !635, metadata !DIExpression()), !dbg !637
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !636, metadata !DIExpression()), !dbg !638
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8 %f), !dbg !639
  br label %bb1, !dbg !639

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !639

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8 %f), !dbg !640
  br label %bb5, !dbg !640

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h46ab6094afed2354E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !641
  %2 = zext i1 %1 to i8, !dbg !641
  store i8 %2, i8* %0, align 1, !dbg !641
  br label %bb3, !dbg !641

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !642

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !643, !range !505, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !643
  ret i1 %4, !dbg !643

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !640

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !644
  %6 = zext i1 %5 to i8, !dbg !644
  store i8 %6, i8* %0, align 1, !dbg !644
  br label %bb9, !dbg !644

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h827553a54a7e037dE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !645
  %8 = zext i1 %7 to i8, !dbg !645
  store i8 %8, i8* %0, align 1, !dbg !645
  br label %bb7, !dbg !645

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !646

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !642

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !646
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h1abf688bf72f1613E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !647 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !724, metadata !DIExpression()), !dbg !726
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !725, metadata !DIExpression()), !dbg !727
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !728
  br i1 %_4, label %bb1, label %bb2, !dbg !728

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !729
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !730
  %5 = zext i1 %_9 to i8, !dbg !728
  store i8 %5, i8* %_3, align 1, !dbg !728
  br label %bb3, !dbg !728

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !728
  br label %bb3, !dbg !728

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !728, !range !505, !noundef !23
  %7 = trunc i8 %6 to i1, !dbg !728
  br i1 %7, label %bb4, label %bb6, !dbg !728

bb6:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_24 to {}**, !dbg !731
  store {}* null, {}** %8, align 8, !dbg !731
  %9 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !732
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !732
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !732
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !732
  store i64 %pieces.1, i64* %11, align 8, !dbg !732
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1, !dbg !732
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0, !dbg !732
  %14 = load i64*, i64** %13, align 8, !dbg !732, !align !294
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1, !dbg !732
  %16 = load i64, i64* %15, align 8, !dbg !732
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !732
  store i64* %14, i64** %17, align 8, !dbg !732
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !732
  store i64 %16, i64* %18, align 8, !dbg !732
  %19 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2, !dbg !732
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !732
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !732
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !732
  store i64 %args.1, i64* %21, align 8, !dbg !732
  ret void, !dbg !733

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h1abf688bf72f1613E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc159 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc161 to [0 x { i8*, i64* }]*), i64 0), !dbg !734
  br label %bb5, !dbg !734

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc557 to %"core::panic::location::Location"*)) #15, !dbg !734
  unreachable, !dbg !734
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem7replace17ha68ea4317dd069c4E(i64* align 8 %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !735 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %result.dbg.spill = alloca i64, align 8
  %slot.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill = alloca i64*, align 8
  %src.dbg.spill2 = alloca i64*, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  %src1 = alloca i64, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !741, metadata !DIExpression()), !dbg !745
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !742, metadata !DIExpression()), !dbg !746
  call void @llvm.dbg.declare(metadata i64* %src1, metadata !747, metadata !DIExpression()), !dbg !756
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !758, metadata !DIExpression()), !dbg !777
  store i64* %dest, i64** %src.dbg.spill2, align 8, !dbg !779
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill2, metadata !766, metadata !DIExpression()), !dbg !780
  %1 = bitcast i64* %tmp to {}*, !dbg !781
  store i64* %tmp, i64** %self.dbg.spill, align 8, !dbg !777
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !788, metadata !DIExpression()), !dbg !795
  %2 = bitcast i64* %tmp to i8*, !dbg !777
  %3 = bitcast i64* %dest to i8*, !dbg !777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !777
  %self = load i64, i64* %tmp, align 8, !dbg !777
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !777
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !797, metadata !DIExpression()), !dbg !811
  br label %bb4, !dbg !811

bb4:                                              ; preds = %start
  store i64 %self, i64* %slot.dbg.spill, align 8, !dbg !811
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill, metadata !813, metadata !DIExpression()), !dbg !820
  store i64 %self, i64* %result.dbg.spill, align 8, !dbg !820
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !743, metadata !DIExpression()), !dbg !822
  store i64* %dest, i64** %dst.dbg.spill, align 8, !dbg !823
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !755, metadata !DIExpression()), !dbg !756
  store i64 %src, i64* %src1, align 8, !dbg !824
  %4 = bitcast i64* %dest to i8*, !dbg !756
  %5 = bitcast i64* %src1 to i8*, !dbg !756
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !756
  ret i64 %self, !dbg !825

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !826

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !827
  %7 = load i8*, i8** %6, align 8, !dbg !827
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !827
  %9 = load i32, i32* %8, align 8, !dbg !827
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !827
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !827
  resume { i8*, i32 } %11, !dbg !827

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !826
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h47da74691c4ba223E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !828 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !832, metadata !DIExpression()), !dbg !837
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !833, metadata !DIExpression()), !dbg !838
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !839
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !840, metadata !DIExpression()), !dbg !853
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !854
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !849, metadata !DIExpression()), !dbg !853
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !853
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !853
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !853
  %6 = zext i1 %5 to i8, !dbg !853
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !853
  store i64 %4, i64* %7, align 8, !dbg !853
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !853
  store i8 %6, i8* %8, align 8, !dbg !853
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !853
  %_13.0 = load i64, i64* %9, align 8, !dbg !853
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !853
  %11 = load i8, i8* %10, align 8, !dbg !853, !range !505, !noundef !23
  %_13.1 = trunc i8 %11 to i1, !dbg !853
  br label %bb5, !dbg !853

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !853
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !850, metadata !DIExpression()), !dbg !855
  %12 = zext i1 %_13.1 to i8, !dbg !853
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !853
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !852, metadata !DIExpression()), !dbg !855
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !855
  store i64 %_13.0, i64* %13, align 8, !dbg !855
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !855
  %15 = zext i1 %_13.1 to i8, !dbg !855
  store i8 %15, i8* %14, align 8, !dbg !855
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !856
  %a = load i64, i64* %16, align 8, !dbg !856
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !856
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !834, metadata !DIExpression()), !dbg !857
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !858
  %18 = load i8, i8* %17, align 8, !dbg !858, !range !505, !noundef !23
  %b = trunc i8 %18 to i1, !dbg !858
  %19 = zext i1 %b to i8, !dbg !858
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !858
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !836, metadata !DIExpression()), !dbg !859
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !860
  %21 = zext i1 %20 to i8, !dbg !860
  store i8 %21, i8* %0, align 1, !dbg !860
  %22 = load i8, i8* %0, align 1, !dbg !860, !range !505, !noundef !23
  %_8 = trunc i8 %22 to i1, !dbg !860
  br label %bb1, !dbg !860

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !860

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !861
  store i64 %a, i64* %23, align 8, !dbg !861
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !861
  store i64 1, i64* %24, align 8, !dbg !861
  br label %bb4, !dbg !862

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !863
  store i64 0, i64* %25, align 8, !dbg !863
  br label %bb4, !dbg !862

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !864
  %27 = load i64, i64* %26, align 8, !dbg !864, !range !865, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !864
  %29 = load i64, i64* %28, align 8, !dbg !864
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !864
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !864
  ret { i64, i64 } %31, !dbg !864
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17he3358dbf817acd06E"(i64** %_1) unnamed_addr #0 !dbg !866 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  %_2 = alloca {}, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !875, metadata !DIExpression()), !dbg !880
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !876, metadata !DIExpression()), !dbg !880
  %0 = load i64*, i64** %_1, align 8, !dbg !880, !nonnull !23, !noundef !23
; call core::ops::function::FnOnce::call_once
  %1 = call i32 @_ZN4core3ops8function6FnOnce9call_once17hf73420e894a2abd6E(i64* %0), !dbg !880
  br label %bb1, !dbg !880

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !880
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ops8function6FnOnce9call_once17h461c99379196a0a7E([0 x i8]* align 1 %0, i64 %1) unnamed_addr #0 !dbg !881 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { i8*, i64 }, align 8
  %2 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !885, metadata !DIExpression()), !dbg !890
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %_2, metadata !886, metadata !DIExpression()), !dbg !890
  %5 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*, !dbg !890
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !890
  %7 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !890, !nonnull !23, !align !891, !noundef !23
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !890
  %9 = load i64, i64* %8, align 8, !dbg !890
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::rt_impl
  %10 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7rt_impl17h7896654501f3620cE([0 x i8]* align 1 %7, i64 %9), !dbg !890
  %11 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %10, 0, !dbg !890
  %12 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %10, 1, !dbg !890
  br label %bb1, !dbg !890

bb1:                                              ; preds = %start
  %13 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %11, 0, !dbg !890
  %14 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %13, i64 %12, 1, !dbg !890
  ret { %"core::ffi::c_str::CStr"*, i64 } %14, !dbg !890
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h470a16ca416fea68E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !892 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_varargs.rs:73:1: 79:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:73:1: 79:2]"* %_1, metadata !899, metadata !DIExpression()), !dbg !903
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !900, metadata !DIExpression()), !dbg !903
; invoke items_tests::test_varargs::test_simple_vacopy::{{closure}}
  invoke void @"_ZN11items_tests12test_varargs18test_simple_vacopy28_$u7b$$u7b$closure$u7d$$u7d$17hce8dd81165069b8dE"(%"[closure@src/test_varargs.rs:73:1: 79:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !903

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !903

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !903

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !903
  %7 = load i8*, i8** %6, align 8, !dbg !903
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !903
  %9 = load i32, i32* %8, align 8, !dbg !903
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !903
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !903
  resume { i8*, i32 } %11, !dbg !903

bb2:                                              ; preds = %bb1
  ret void, !dbg !903
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h5736f6ce427174a2E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !904 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_noop.rs:22:1: 28:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_noop.rs:22:1: 28:2]"* %_1, metadata !911, metadata !DIExpression()), !dbg !915
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !912, metadata !DIExpression()), !dbg !915
; invoke items_tests::test_noop::test_nofnargs::{{closure}}
  invoke void @"_ZN11items_tests9test_noop13test_nofnargs28_$u7b$$u7b$closure$u7d$$u7d$17h7138966bf29b488dE"(%"[closure@src/test_noop.rs:22:1: 28:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !915

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !915

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !915

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !915
  %7 = load i8*, i8** %6, align 8, !dbg !915
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !915
  %9 = load i32, i32* %8, align 8, !dbg !915
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !915
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !915
  resume { i8*, i32 } %11, !dbg !915

bb2:                                              ; preds = %bb1
  ret void, !dbg !915
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h6214936ae3873b08E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !916 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_varargs.rs:41:1: 46:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:41:1: 46:2]"* %_1, metadata !922, metadata !DIExpression()), !dbg !926
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !923, metadata !DIExpression()), !dbg !926
; invoke items_tests::test_varargs::test_call_printf::{{closure}}
  invoke void @"_ZN11items_tests12test_varargs16test_call_printf28_$u7b$$u7b$closure$u7d$$u7d$17h7769b24fd3ad455bE"(%"[closure@src/test_varargs.rs:41:1: 46:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !926

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !926

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !926

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !926
  %7 = load i8*, i8** %6, align 8, !dbg !926
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !926
  %9 = load i32, i32* %8, align 8, !dbg !926
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !926
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !926
  resume { i8*, i32 } %11, !dbg !926

bb2:                                              ; preds = %bb1
  ret void, !dbg !926
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h77268db247ff65b5E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !927 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_varargs.rs:83:1: 89:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:83:1: 89:2]"* %_1, metadata !933, metadata !DIExpression()), !dbg !937
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !934, metadata !DIExpression()), !dbg !937
; invoke items_tests::test_varargs::test_valist_struct_member::{{closure}}
  invoke void @"_ZN11items_tests12test_varargs25test_valist_struct_member28_$u7b$$u7b$closure$u7d$$u7d$17h5c1477b770555c50E"(%"[closure@src/test_varargs.rs:83:1: 89:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !937

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !937

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !937

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !937
  %7 = load i8*, i8** %6, align 8, !dbg !937
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !937
  %9 = load i32, i32* %8, align 8, !dbg !937
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !937
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !937
  resume { i8*, i32 } %11, !dbg !937

bb2:                                              ; preds = %bb1
  ret void, !dbg !937
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h77aa248235f6fc7bE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !938 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_varargs.rs:51:1: 57:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:51:1: 57:2]"* %_1, metadata !944, metadata !DIExpression()), !dbg !948
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !945, metadata !DIExpression()), !dbg !948
; invoke items_tests::test_varargs::test_call_vprintf::{{closure}}
  invoke void @"_ZN11items_tests12test_varargs17test_call_vprintf28_$u7b$$u7b$closure$u7d$$u7d$17h7f42e6bd2a229663E"(%"[closure@src/test_varargs.rs:51:1: 57:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !948

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !948

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !948

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !948
  %7 = load i8*, i8** %6, align 8, !dbg !948
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !948
  %9 = load i32, i32* %8, align 8, !dbg !948
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !948
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !948
  resume { i8*, i32 } %11, !dbg !948

bb2:                                              ; preds = %bb1
  ret void, !dbg !948
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h793ca64f3c1536f2E(void ()* %_1) unnamed_addr #0 !dbg !949 {
start:
  %_1.dbg.spill = alloca void ()*, align 8
  %_2 = alloca {}, align 1
  store void ()* %_1, void ()** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %_1.dbg.spill, metadata !951, metadata !DIExpression()), !dbg !955
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !952, metadata !DIExpression()), !dbg !955
  call void %_1(), !dbg !955
  br label %bb1, !dbg !955

bb1:                                              ; preds = %start
  ret void, !dbg !955
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h861b3bcfb9bac322E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !956 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_varargs.rs:103:1: 109:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:103:1: 109:2]"* %_1, metadata !962, metadata !DIExpression()), !dbg !966
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !963, metadata !DIExpression()), !dbg !966
; invoke items_tests::test_varargs::test_restart_valist::{{closure}}
  invoke void @"_ZN11items_tests12test_varargs19test_restart_valist28_$u7b$$u7b$closure$u7d$$u7d$17h62cd1bc9af715e26E"(%"[closure@src/test_varargs.rs:103:1: 109:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !966

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !966

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !966

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !966
  %7 = load i8*, i8** %6, align 8, !dbg !966
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !966
  %9 = load i32, i32* %8, align 8, !dbg !966
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !966
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !966
  resume { i8*, i32 } %11, !dbg !966

bb2:                                              ; preds = %bb1
  ret void, !dbg !966
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17ha270832fbeaf6911E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !967 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_noop.rs:14:1: 19:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_noop.rs:14:1: 19:2]"* %_1, metadata !973, metadata !DIExpression()), !dbg !977
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !974, metadata !DIExpression()), !dbg !977
; invoke items_tests::test_noop::test_noop::{{closure}}
  invoke void @"_ZN11items_tests9test_noop9test_noop28_$u7b$$u7b$closure$u7d$$u7d$17h25e9900ed25c3047E"(%"[closure@src/test_noop.rs:14:1: 19:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !977

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !977

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !977

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !977
  %7 = load i8*, i8** %6, align 8, !dbg !977
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !977
  %9 = load i32, i32* %8, align 8, !dbg !977
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !977
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !977
  resume { i8*, i32 } %11, !dbg !977

bb2:                                              ; preds = %bb1
  ret void, !dbg !977
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hca7b06276e5a34b4E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !978 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_functions.rs:9:1: 14:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_functions.rs:9:1: 14:2]"* %_1, metadata !985, metadata !DIExpression()), !dbg !989
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !986, metadata !DIExpression()), !dbg !989
; invoke items_tests::test_functions::test_coreutils_static_assert::{{closure}}
  invoke void @"_ZN11items_tests14test_functions28test_coreutils_static_assert28_$u7b$$u7b$closure$u7d$$u7d$17h7050d3523f1ec425E"(%"[closure@src/test_functions.rs:9:1: 14:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !989

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !989

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !989

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !989
  %7 = load i8*, i8** %6, align 8, !dbg !989
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !989
  %9 = load i32, i32* %8, align 8, !dbg !989
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !989
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !989
  resume { i8*, i32 } %11, !dbg !989

bb2:                                              ; preds = %bb1
  ret void, !dbg !989
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hd483a72806981ebcE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !990 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_linking.rs:12:1: 28:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_linking.rs:12:1: 28:2]"* %_1, metadata !997, metadata !DIExpression()), !dbg !1001
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !998, metadata !DIExpression()), !dbg !1001
; invoke items_tests::test_linking::test_linking::{{closure}}
  invoke void @"_ZN11items_tests12test_linking12test_linking28_$u7b$$u7b$closure$u7d$$u7d$17h0e727e4d4b2158baE"(%"[closure@src/test_linking.rs:12:1: 28:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1001

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1001

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1001

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1001
  %7 = load i8*, i8** %6, align 8, !dbg !1001
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1001
  %9 = load i32, i32* %8, align 8, !dbg !1001
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1001
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1001
  resume { i8*, i32 } %11, !dbg !1001

bb2:                                              ; preds = %bb1
  ret void, !dbg !1001
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hd56a9f4381f21938E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1002 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_fn_attrs.rs:4:1: 64:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_fn_attrs.rs:4:1: 64:2]"* %_1, metadata !1009, metadata !DIExpression()), !dbg !1013
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1010, metadata !DIExpression()), !dbg !1013
; invoke items_tests::test_fn_attrs::test_fn_attrs::{{closure}}
  invoke void @"_ZN11items_tests13test_fn_attrs13test_fn_attrs28_$u7b$$u7b$closure$u7d$$u7d$17h714141d32e086469E"(%"[closure@src/test_fn_attrs.rs:4:1: 64:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1013

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1013

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1013

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1013
  %7 = load i8*, i8** %6, align 8, !dbg !1013
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1013
  %9 = load i32, i32* %8, align 8, !dbg !1013
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1013
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1013
  resume { i8*, i32 } %11, !dbg !1013

bb2:                                              ; preds = %bb1
  ret void, !dbg !1013
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hd6c9cf14983b1622E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1014 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_varargs.rs:62:1: 69:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:62:1: 69:2]"* %_1, metadata !1020, metadata !DIExpression()), !dbg !1024
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1021, metadata !DIExpression()), !dbg !1024
; invoke items_tests::test_varargs::test_my_printf::{{closure}}
  invoke void @"_ZN11items_tests12test_varargs14test_my_printf28_$u7b$$u7b$closure$u7d$$u7d$17hbbba3c461f8facb5E"(%"[closure@src/test_varargs.rs:62:1: 69:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1024

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1024

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1024

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1024
  %7 = load i8*, i8** %6, align 8, !dbg !1024
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1024
  %9 = load i32, i32* %8, align 8, !dbg !1024
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1024
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1024
  resume { i8*, i32 } %11, !dbg !1024

bb2:                                              ; preds = %bb1
  ret void, !dbg !1024
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hd8abc731315913cdE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1025 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_varargs.rs:93:1: 99:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:93:1: 99:2]"* %_1, metadata !1031, metadata !DIExpression()), !dbg !1035
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1032, metadata !DIExpression()), !dbg !1035
; invoke items_tests::test_varargs::test_valist_struct_pointer_member::{{closure}}
  invoke void @"_ZN11items_tests12test_varargs33test_valist_struct_pointer_member28_$u7b$$u7b$closure$u7d$$u7d$17h9352fcc9fc119ee9E"(%"[closure@src/test_varargs.rs:93:1: 99:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1035

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1035

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1035

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1035
  %7 = load i8*, i8** %6, align 8, !dbg !1035
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1035
  %9 = load i32, i32* %8, align 8, !dbg !1035
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1035
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1035
  resume { i8*, i32 } %11, !dbg !1035

bb2:                                              ; preds = %bb1
  ret void, !dbg !1035
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17he9f295bdf9616028E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1036 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_varargs.rs:113:1: 119:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:113:1: 119:2]"* %_1, metadata !1042, metadata !DIExpression()), !dbg !1046
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1043, metadata !DIExpression()), !dbg !1046
; invoke items_tests::test_varargs::test_sample_stddev::{{closure}}
  invoke void @"_ZN11items_tests12test_varargs18test_sample_stddev28_$u7b$$u7b$closure$u7d$$u7d$17h5b0b6323e1a2b9e7E"(%"[closure@src/test_varargs.rs:113:1: 119:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1046

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1046

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1046

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1046
  %7 = load i8*, i8** %6, align 8, !dbg !1046
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1046
  %9 = load i32, i32* %8, align 8, !dbg !1046
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1046
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1046
  resume { i8*, i32 } %11, !dbg !1046

bb2:                                              ; preds = %bb1
  ret void, !dbg !1046
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17hf73420e894a2abd6E(i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1047 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !1051, metadata !DIExpression()), !dbg !1053
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1052, metadata !DIExpression()), !dbg !1053
; invoke std::rt::lang_start::{{closure}}
  %2 = invoke i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd0fde3f377fa9f03E"(i64** align 8 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1053

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1053

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1053

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1053
  %9 = load i8*, i8** %8, align 8, !dbg !1053
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1053
  %11 = load i32, i32* %10, align 8, !dbg !1053
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !1053
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !1053
  resume { i8*, i32 } %13, !dbg !1053

bb2:                                              ; preds = %bb1
  ret i32 %2, !dbg !1053
}

; core::ptr::drop_in_place<&f64>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$f64$GT$17h6a3355b55063efb7E"(double** %_1) unnamed_addr #0 !dbg !1054 {
start:
  %_1.dbg.spill = alloca double**, align 8
  store double** %_1, double*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double*** %_1.dbg.spill, metadata !1059, metadata !DIExpression()), !dbg !1062
  ret void, !dbg !1062
}

; core::ptr::drop_in_place<&i32>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h7a6644d12aade1d6E"(i32** %_1) unnamed_addr #0 !dbg !1063 {
start:
  %_1.dbg.spill = alloca i32**, align 8
  store i32** %_1, i32*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %_1.dbg.spill, metadata !1068, metadata !DIExpression()), !dbg !1071
  ret void, !dbg !1071
}

; core::ptr::drop_in_place<core::ffi::VaListImpl>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %_1) unnamed_addr #2 !dbg !1072 {
start:
  %_1.dbg.spill = alloca %"core::ffi::VaListImpl"*, align 8
  store %"core::ffi::VaListImpl"* %_1, %"core::ffi::VaListImpl"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"** %_1.dbg.spill, metadata !1077, metadata !DIExpression()), !dbg !1080
; call <core::ffi::VaListImpl as core::ops::drop::Drop>::drop
  call void @"_ZN63_$LT$core..ffi..VaListImpl$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb93fc25a64ad027fE"(%"core::ffi::VaListImpl"* align 8 %_1), !dbg !1080
  br label %bb1, !dbg !1080

bb1:                                              ; preds = %start
  ret void, !dbg !1080
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hb51816728a6c9bbcE"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1081 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %_1, %"alloc::vec::Vec<u8>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %_1.dbg.spill, metadata !1086, metadata !DIExpression()), !dbg !1089
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf355b8d3bd7b28f5E"(%"alloc::vec::Vec<u8>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !1089

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !1089
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17ha323cba6f3d73791E"({ i8*, i64 }* %1) #16
          to label %bb1 unwind label %abort, !dbg !1089

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !1089
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17ha323cba6f3d73791E"({ i8*, i64 }* %7), !dbg !1089
  br label %bb2, !dbg !1089

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !1089
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !1089
  unreachable, !dbg !1089

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1089
  %10 = load i8*, i8** %9, align 8, !dbg !1089
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1089
  %12 = load i32, i32* %11, align 8, !dbg !1089
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !1089
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !1089
  resume { i8*, i32 } %14, !dbg !1089

bb2:                                              ; preds = %bb4
  ret void, !dbg !1089
}

; core::ptr::drop_in_place<alloc::ffi::c_str::CString>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %_1) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1090 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !1102, metadata !DIExpression()), !dbg !1105
; invoke <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
  invoke void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4267592d6ad554dbE"({ i8*, i64 }* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !1105

bb3:                                              ; preds = %cleanup
  %1 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !1105
; invoke core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h02185211e6a35737E"({ [0 x i8]*, i64 }* %1) #16
          to label %bb1 unwind label %abort, !dbg !1105

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !1105
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h02185211e6a35737E"({ [0 x i8]*, i64 }* %7), !dbg !1105
  br label %bb2, !dbg !1105

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !1105
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !1105
  unreachable, !dbg !1105

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1105
  %10 = load i8*, i8** %9, align 8, !dbg !1105
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1105
  %12 = load i32, i32* %11, align 8, !dbg !1105
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !1105
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !1105
  resume { i8*, i32 } %14, !dbg !1105

bb2:                                              ; preds = %bb4
  ret void, !dbg !1105
}

; core::ptr::drop_in_place<alloc::ffi::c_str::NulError>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17hd06c3484267b3946E"(%"alloc::ffi::c_str::NulError"* %_1) unnamed_addr #2 !dbg !1106 {
start:
  %_1.dbg.spill = alloca %"alloc::ffi::c_str::NulError"*, align 8
  store %"alloc::ffi::c_str::NulError"* %_1, %"alloc::ffi::c_str::NulError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::ffi::c_str::NulError"** %_1.dbg.spill, metadata !1111, metadata !DIExpression()), !dbg !1114
  %0 = getelementptr inbounds %"alloc::ffi::c_str::NulError", %"alloc::ffi::c_str::NulError"* %_1, i32 0, i32 1, !dbg !1114
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hb51816728a6c9bbcE"(%"alloc::vec::Vec<u8>"* %0), !dbg !1114
  br label %bb1, !dbg !1114

bb1:                                              ; preds = %start
  ret void, !dbg !1114
}

; core::ptr::drop_in_place<items_tests::varargs::vastruct>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E"(%"varargs::vastruct"* %_1) unnamed_addr #2 !dbg !1115 {
start:
  %_1.dbg.spill = alloca %"varargs::vastruct"*, align 8
  store %"varargs::vastruct"* %_1, %"varargs::vastruct"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"varargs::vastruct"** %_1.dbg.spill, metadata !1124, metadata !DIExpression()), !dbg !1127
  %0 = bitcast %"varargs::vastruct"* %_1 to %"core::ffi::VaListImpl"*, !dbg !1127
; call core::ptr::drop_in_place<core::ffi::VaListImpl>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %0), !dbg !1127
  br label %bb1, !dbg !1127

bb1:                                              ; preds = %start
  ret void, !dbg !1127
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17ha323cba6f3d73791E"({ i8*, i64 }* %_1) unnamed_addr #2 !dbg !1128 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !1133, metadata !DIExpression()), !dbg !1136
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1c28ae7813adc08cE"({ i8*, i64 }* align 8 %_1), !dbg !1136
  br label %bb1, !dbg !1136

bb1:                                              ; preds = %start
  ret void, !dbg !1136
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h02185211e6a35737E"({ [0 x i8]*, i64 }* %_1) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1137 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %_1, { [0 x i8]*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %_1.dbg.spill, metadata !1142, metadata !DIExpression()), !dbg !1145
  br label %bb3, !dbg !1145

bb3:                                              ; preds = %start
  %1 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !1145
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !1145
  %3 = load i8*, i8** %2, align 8, !dbg !1145, !nonnull !23, !noundef !23
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !1145
  %5 = load i64, i64* %4, align 8, !dbg !1145
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hff0ed9975f7a7ec0E(i8* %3, i64 %5), !dbg !1145
  br label %bb1, !dbg !1145

bb4:                                              ; No predecessors!
  %6 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !1145
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0, !dbg !1145
  %8 = load i8*, i8** %7, align 8, !dbg !1145, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1, !dbg !1145
  %10 = load i64, i64* %9, align 8, !dbg !1145
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hff0ed9975f7a7ec0E(i8* %8, i64 %10) #16
          to label %bb2 unwind label %abort, !dbg !1145

abort:                                            ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !1145
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !1145
  unreachable, !dbg !1145

bb2:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1145
  %13 = load i8*, i8** %12, align 8, !dbg !1145
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1145
  %15 = load i32, i32* %14, align 8, !dbg !1145
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !1145
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !1145
  resume { i8*, i32 } %17, !dbg !1145

bb1:                                              ; preds = %bb3
  ret void, !dbg !1145
}

; core::ptr::drop_in_place<std::rt::lang_start<()>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5d703a7dbb78ea20E"(i64** %_1) unnamed_addr #0 !dbg !1146 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !1150, metadata !DIExpression()), !dbg !1153
  ret void, !dbg !1153
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @_ZN4core3str11validations15next_code_point17h648e628bdbab7c31E({ i8*, i8* }* align 8 %bytes) unnamed_addr #0 !dbg !1154 {
start:
  %byte.dbg.spill16 = alloca i8, align 1
  %ch.dbg.spill15 = alloca i32, align 4
  %w.dbg.spill = alloca i8, align 1
  %val.dbg.spill14 = alloca i8*, align 8
  %y_z.dbg.spill = alloca i32, align 4
  %byte.dbg.spill12 = alloca i8, align 1
  %ch.dbg.spill11 = alloca i32, align 4
  %z.dbg.spill = alloca i8, align 1
  %val.dbg.spill9 = alloca i8*, align 8
  %byte.dbg.spill7 = alloca i8, align 1
  %ch.dbg.spill = alloca i32, align 4
  %y.dbg.spill = alloca i8, align 1
  %val.dbg.spill6 = alloca i8*, align 8
  %init.dbg.spill = alloca i32, align 4
  %byte.dbg.spill = alloca i8, align 1
  %x.dbg.spill = alloca i8, align 1
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill1 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %bytes.dbg.spill = alloca { i8*, i8* }*, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %ch = alloca i32, align 4
  %self2 = alloca i8*, align 8
  %self = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i8*, i8* }* %bytes, { i8*, i8* }** %bytes.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %bytes.dbg.spill, metadata !1185, metadata !DIExpression()), !dbg !1222
  call void @llvm.dbg.declare(metadata i8** %self, metadata !1223, metadata !DIExpression()), !dbg !1262
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !1188, metadata !DIExpression()), !dbg !1264
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill1, metadata !1265, metadata !DIExpression()), !dbg !1272
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !1274, metadata !DIExpression()), !dbg !1283
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !1212, metadata !DIExpression()), !dbg !1285
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !1286, metadata !DIExpression()), !dbg !1293
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !1295, metadata !DIExpression()), !dbg !1302
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %1 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa9da4098f8d73adE"({ i8*, i8* }* align 8 %bytes), !dbg !1263
  store i8* %1, i8** %self, align 8, !dbg !1263
  br label %bb1, !dbg !1263

bb1:                                              ; preds = %start
  %2 = bitcast i8** %self to {}**, !dbg !1262
  %3 = load {}*, {}** %2, align 8, !dbg !1262
  %4 = icmp eq {}* %3, null, !dbg !1262
  %_51 = select i1 %4, i64 0, i64 1, !dbg !1262
  switch i64 %_51, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !1262

bb18:                                             ; preds = %bb1
  unreachable, !dbg !1262

bb17:                                             ; preds = %bb1
  %5 = bitcast i8** %_4 to {}**, !dbg !1262
  store {}* null, {}** %5, align 8, !dbg !1262
  br label %bb2, !dbg !1262

bb19:                                             ; preds = %bb1
  %v = load i8*, i8** %self, align 8, !dbg !1262, !nonnull !23, !align !891, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !1262
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !1259, metadata !DIExpression()), !dbg !1304
  store i8* %v, i8** %_4, align 8, !dbg !1304
  br label %bb2, !dbg !1262

bb2:                                              ; preds = %bb17, %bb19
  %6 = bitcast i8** %_4 to {}**, !dbg !1263
  %7 = load {}*, {}** %6, align 8, !dbg !1263
  %8 = icmp eq {}* %7, null, !dbg !1263
  %_7 = select i1 %8, i64 1, i64 0, !dbg !1263
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !1263

bb4:                                              ; preds = %bb2
  unreachable, !dbg !1263

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !dbg !1263, !nonnull !23, !align !891, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !1263
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !1206, metadata !DIExpression()), !dbg !1305
  %x = load i8, i8* %val, align 1, !dbg !1306
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !1306
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !1186, metadata !DIExpression()), !dbg !1307
  %_11 = icmp ult i8 %x, -128, !dbg !1308
  br i1 %_11, label %bb6, label %bb7, !dbg !1308

bb5:                                              ; preds = %bb2
  %9 = bitcast { i32, i32 }* %0 to i32*, !dbg !1272
  store i32 0, i32* %9, align 4, !dbg !1272
  br label %bb15, !dbg !1309

bb15:                                             ; preds = %bb6, %bb5
  br label %bb16, !dbg !1312

bb7:                                              ; preds = %bb3
  store i8 %x, i8* %byte.dbg.spill, align 1, !dbg !1313
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !1314, metadata !DIExpression()), !dbg !1320
  %_55 = and i8 %x, 31, !dbg !1320
  %init = zext i8 %_55 to i32, !dbg !1320
  store i32 %init, i32* %init.dbg.spill, align 4, !dbg !1320
  call void @llvm.dbg.declare(metadata i32* %init.dbg.spill, metadata !1208, metadata !DIExpression()), !dbg !1322
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %10 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa9da4098f8d73adE"({ i8*, i8* }* align 8 %bytes), !dbg !1284
  store i8* %10, i8** %self2, align 8, !dbg !1284
  br label %bb8, !dbg !1284

bb6:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32, !dbg !1323
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !1324
  store i32 %_13, i32* %11, align 4, !dbg !1324
  %12 = bitcast { i32, i32 }* %0 to i32*, !dbg !1324
  store i32 1, i32* %12, align 4, !dbg !1324
  br label %bb15, !dbg !1325

bb16:                                             ; preds = %bb14, %bb15
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !1312
  %14 = load i32, i32* %13, align 4, !dbg !1312, !range !1327, !noundef !23
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !1312
  %16 = load i32, i32* %15, align 4, !dbg !1312
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0, !dbg !1312
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1, !dbg !1312
  ret { i32, i32 } %18, !dbg !1312

bb8:                                              ; preds = %bb7
  %19 = bitcast i8** %self2 to {}**, !dbg !1283
  %20 = load {}*, {}** %19, align 8, !dbg !1283
  %21 = icmp eq {}* %20, null, !dbg !1283
  %_59 = select i1 %21, i64 0, i64 1, !dbg !1283
  switch i64 %_59, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ], !dbg !1283

bb21:                                             ; preds = %bb8
  unreachable, !dbg !1283

bb20:                                             ; preds = %bb8
  unreachable, !dbg !1328

bb22:                                             ; preds = %bb8
  %val5 = load i8*, i8** %self2, align 8, !dbg !1283, !nonnull !23, !align !891, !noundef !23
  store i8* %val5, i8** %val.dbg.spill6, align 8, !dbg !1283
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill6, metadata !1280, metadata !DIExpression()), !dbg !1332
  %y = load i8, i8* %val5, align 1, !dbg !1333
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !1333
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !1210, metadata !DIExpression()), !dbg !1334
  store i32 %init, i32* %ch.dbg.spill, align 4, !dbg !1335
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !1336, metadata !DIExpression()), !dbg !1342
  store i8 %y, i8* %byte.dbg.spill7, align 1, !dbg !1344
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill7, metadata !1341, metadata !DIExpression()), !dbg !1342
  %_60 = shl i32 %init, 6, !dbg !1342
  %_63 = and i8 %y, 63, !dbg !1342
  %_62 = zext i8 %_63 to i32, !dbg !1342
  %22 = or i32 %_60, %_62, !dbg !1342
  store i32 %22, i32* %ch, align 4, !dbg !1342
  %_24 = icmp uge i8 %x, -32, !dbg !1345
  br i1 %_24, label %bb9, label %bb14, !dbg !1345

bb14:                                             ; preds = %bb13, %bb22
  %_50 = load i32, i32* %ch, align 4, !dbg !1346
  %23 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !1347
  store i32 %_50, i32* %23, align 4, !dbg !1347
  %24 = bitcast { i32, i32 }* %0 to i32*, !dbg !1347
  store i32 1, i32* %24, align 4, !dbg !1347
  br label %bb16, !dbg !1312

bb9:                                              ; preds = %bb22
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %25 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa9da4098f8d73adE"({ i8*, i8* }* align 8 %bytes), !dbg !1294
  store i8* %25, i8** %self3, align 8, !dbg !1294
  br label %bb10, !dbg !1294

bb10:                                             ; preds = %bb9
  %26 = bitcast i8** %self3 to {}**, !dbg !1293
  %27 = load {}*, {}** %26, align 8, !dbg !1293
  %28 = icmp eq {}* %27, null, !dbg !1293
  %_66 = select i1 %28, i64 0, i64 1, !dbg !1293
  switch i64 %_66, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ], !dbg !1293

bb24:                                             ; preds = %bb10
  unreachable, !dbg !1293

bb23:                                             ; preds = %bb10
  unreachable, !dbg !1348

bb25:                                             ; preds = %bb10
  %val8 = load i8*, i8** %self3, align 8, !dbg !1293, !nonnull !23, !align !891, !noundef !23
  store i8* %val8, i8** %val.dbg.spill9, align 8, !dbg !1293
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill9, metadata !1290, metadata !DIExpression()), !dbg !1352
  %z = load i8, i8* %val8, align 1, !dbg !1353
  store i8 %z, i8* %z.dbg.spill, align 1, !dbg !1353
  call void @llvm.dbg.declare(metadata i8* %z.dbg.spill, metadata !1214, metadata !DIExpression()), !dbg !1354
  %_32 = and i8 %y, 63, !dbg !1355
  %ch10 = zext i8 %_32 to i32, !dbg !1355
  store i32 %ch10, i32* %ch.dbg.spill11, align 4, !dbg !1355
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill11, metadata !1356, metadata !DIExpression()), !dbg !1360
  store i8 %z, i8* %byte.dbg.spill12, align 1, !dbg !1362
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill12, metadata !1359, metadata !DIExpression()), !dbg !1360
  %_67 = shl i32 %ch10, 6, !dbg !1360
  %_70 = and i8 %z, 63, !dbg !1360
  %_69 = zext i8 %_70 to i32, !dbg !1360
  %y_z = or i32 %_67, %_69, !dbg !1360
  store i32 %y_z, i32* %y_z.dbg.spill, align 4, !dbg !1360
  call void @llvm.dbg.declare(metadata i32* %y_z.dbg.spill, metadata !1216, metadata !DIExpression()), !dbg !1363
  %_35 = shl i32 %init, 12, !dbg !1364
  %29 = or i32 %_35, %y_z, !dbg !1365
  store i32 %29, i32* %ch, align 4, !dbg !1365
  %_38 = icmp uge i8 %x, -16, !dbg !1366
  br i1 %_38, label %bb11, label %bb13, !dbg !1366

bb13:                                             ; preds = %bb28, %bb25
  br label %bb14, !dbg !1367

bb11:                                             ; preds = %bb25
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %30 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa9da4098f8d73adE"({ i8*, i8* }* align 8 %bytes), !dbg !1303
  store i8* %30, i8** %self4, align 8, !dbg !1303
  br label %bb12, !dbg !1303

bb12:                                             ; preds = %bb11
  %31 = bitcast i8** %self4 to {}**, !dbg !1302
  %32 = load {}*, {}** %31, align 8, !dbg !1302
  %33 = icmp eq {}* %32, null, !dbg !1302
  %_73 = select i1 %33, i64 0, i64 1, !dbg !1302
  switch i64 %_73, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ], !dbg !1302

bb27:                                             ; preds = %bb12
  unreachable, !dbg !1302

bb26:                                             ; preds = %bb12
  unreachable, !dbg !1368

bb28:                                             ; preds = %bb12
  %val13 = load i8*, i8** %self4, align 8, !dbg !1302, !nonnull !23, !align !891, !noundef !23
  store i8* %val13, i8** %val.dbg.spill14, align 8, !dbg !1302
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill14, metadata !1299, metadata !DIExpression()), !dbg !1372
  %w = load i8, i8* %val13, align 1, !dbg !1373
  store i8 %w, i8* %w.dbg.spill, align 1, !dbg !1373
  call void @llvm.dbg.declare(metadata i8* %w.dbg.spill, metadata !1218, metadata !DIExpression()), !dbg !1374
  %_45 = and i32 %init, 7, !dbg !1375
  %_44 = shl i32 %_45, 18, !dbg !1375
  store i32 %y_z, i32* %ch.dbg.spill15, align 4, !dbg !1376
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill15, metadata !1377, metadata !DIExpression()), !dbg !1381
  store i8 %w, i8* %byte.dbg.spill16, align 1, !dbg !1383
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill16, metadata !1380, metadata !DIExpression()), !dbg !1381
  %_74 = shl i32 %y_z, 6, !dbg !1381
  %_77 = and i8 %w, 63, !dbg !1381
  %_76 = zext i8 %_77 to i32, !dbg !1381
  %_47 = or i32 %_74, %_76, !dbg !1381
  %34 = or i32 %_44, %_47, !dbg !1384
  store i32 %34, i32* %ch, align 4, !dbg !1384
  br label %bb13, !dbg !1385
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hbd67d1e56763f3f2E"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !1386 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %index.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1392, metadata !DIExpression()), !dbg !1396
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1393, metadata !DIExpression()), !dbg !1397
  %5 = icmp eq i64 %index, 0, !dbg !1398
  br i1 %5, label %bb1, label %bb2, !dbg !1398

bb1:                                              ; preds = %start
  store i8 1, i8* %2, align 1, !dbg !1399
  br label %bb7, !dbg !1400

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !1401
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !1401
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !1401
  store i64 %self.1, i64* %7, align 8, !dbg !1401
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !1402, metadata !DIExpression()), !dbg !1407
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !1407
  store [0 x i8]* %self.0, [0 x i8]** %8, align 8, !dbg !1407
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !1407
  store i64 %self.1, i64* %9, align 8, !dbg !1407
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !1407
  %_6.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !1407, !nonnull !23, !align !891, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !1407
  %_6.1 = load i64, i64* %11, align 8, !dbg !1407
  br label %bb8, !dbg !1407

bb8:                                              ; preds = %bb2
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !1401
  store [0 x i8]* %_6.0, [0 x i8]** %12, align 8, !dbg !1401
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !1401
  store i64 %_6.1, i64* %13, align 8, !dbg !1401
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !1408, metadata !DIExpression()), !dbg !1417
  store i64 %index, i64* %index.dbg.spill3, align 8, !dbg !1418
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill3, metadata !1414, metadata !DIExpression()), !dbg !1417
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %14 = call align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17heeb6b4d4f761f61aE"(i64 %index, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !1417
  store i8* %14, i8** %_4, align 8, !dbg !1417
  br label %bb9, !dbg !1417

bb9:                                              ; preds = %bb8
  %15 = bitcast i8** %_4 to {}**, !dbg !1401
  %16 = load {}*, {}** %15, align 8, !dbg !1401
  %17 = icmp eq {}* %16, null, !dbg !1401
  %_9 = select i1 %17, i64 0, i64 1, !dbg !1401
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ], !dbg !1419

bb4:                                              ; preds = %bb9
  unreachable, !dbg !1401

bb5:                                              ; preds = %bb9
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !1420
  store [0 x i8]* %self.0, [0 x i8]** %18, align 8, !dbg !1420
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !1420
  store i64 %self.1, i64* %19, align 8, !dbg !1420
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !1421, metadata !DIExpression()), !dbg !1426
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !1426
  store [0 x i8]* %self.0, [0 x i8]** %20, align 8, !dbg !1426
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !1426
  store i64 %self.1, i64* %21, align 8, !dbg !1426
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !1427, metadata !DIExpression()), !dbg !1430
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !1430
  store [0 x i8]* %self.0, [0 x i8]** %22, align 8, !dbg !1430
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !1430
  store i64 %self.1, i64* %23, align 8, !dbg !1430
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !1430
  %_22.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !1430, !nonnull !23, !align !891, !noundef !23
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !1430
  %_22.1 = load i64, i64* %25, align 8, !dbg !1430
  br label %bb10, !dbg !1430

bb3:                                              ; preds = %bb9
  %_15 = load i8*, i8** %_4, align 8, !dbg !1432, !nonnull !23, !align !891, !noundef !23
  %b = load i8, i8* %_15, align 1, !dbg !1432
  store i8 %b, i8* %b.dbg.spill, align 1, !dbg !1432
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1394, metadata !DIExpression()), !dbg !1433
  store i8 %b, i8* %self.dbg.spill4, align 1, !dbg !1434
  call void @llvm.dbg.declare(metadata i8* %self.dbg.spill4, metadata !1435, metadata !DIExpression()), !dbg !1443
  %26 = icmp sge i8 %b, -64, !dbg !1443
  %27 = zext i1 %26 to i8, !dbg !1443
  store i8 %27, i8* %2, align 1, !dbg !1443
  br label %bb6, !dbg !1444

bb6:                                              ; preds = %bb10, %bb3
  br label %bb7, !dbg !1400

bb10:                                             ; preds = %bb5
  %28 = icmp eq i64 %index, %_22.1, !dbg !1445
  %29 = zext i1 %28 to i8, !dbg !1445
  store i8 %29, i8* %2, align 1, !dbg !1445
  br label %bb6, !dbg !1446

bb7:                                              ; preds = %bb1, %bb6
  %30 = load i8, i8* %2, align 1, !dbg !1400, !range !505, !noundef !23
  %31 = trunc i8 %30 to i1, !dbg !1400
  ret i1 %31, !dbg !1400
}

; core::str::<impl str>::contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %pat.0, i64 %pat.1) unnamed_addr #0 !dbg !1447 {
start:
  %pat.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1451, metadata !DIExpression()), !dbg !1455
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %pat.dbg.spill, i32 0, i32 0
  store [0 x i8]* %pat.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %pat.dbg.spill, i32 0, i32 1
  store i64 %pat.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %pat.dbg.spill, metadata !1452, metadata !DIExpression()), !dbg !1456
; call core::str::pattern::Pattern::is_contained_in
  %4 = call zeroext i1 @_ZN4core3str7pattern7Pattern15is_contained_in17hb3e21f3a96f4b49eE([0 x i8]* align 1 %pat.0, i64 %pat.1, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !1457
  br label %bb1, !dbg !1457

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !1458
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h80a97136f9aa87bfE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !1459 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %len.dbg.spill9 = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill8 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_30 = alloca { i8*, i64 }, align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1476, metadata !DIExpression()), !dbg !1488
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1477, metadata !DIExpression()), !dbg !1489
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 0, !dbg !1490
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8, !dbg !1490
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 1, !dbg !1490
  store i64 %slice.1, i64* %4, align 8, !dbg !1490
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill1, metadata !1478, metadata !DIExpression()), !dbg !1491
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !1492
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !1492
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !1492
  store i64 %slice.1, i64* %6, align 8, !dbg !1492
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !1493, metadata !DIExpression()), !dbg !1502
  %self3 = bitcast [0 x i8]* %slice.0 to i8*, !dbg !1502
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !1502
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !1503, metadata !DIExpression()), !dbg !1511
  store i64 %self, i64* %count.dbg.spill, align 8, !dbg !1512
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1510, metadata !DIExpression()), !dbg !1511
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !1511
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !1513, metadata !DIExpression()), !dbg !1520
  store i64 %self, i64* %count.dbg.spill6, align 8, !dbg !1511
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !1519, metadata !DIExpression()), !dbg !1520
  %7 = getelementptr inbounds i8, i8* %self3, i64 %self, !dbg !1520
  store i8* %7, i8** %0, align 8, !dbg !1520
  %ptr = load i8*, i8** %0, align 8, !dbg !1520
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !1520
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1484, metadata !DIExpression()), !dbg !1522
  br label %bb1, !dbg !1520

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !1523
  store [0 x i8]* %slice.0, [0 x i8]** %8, align 8, !dbg !1523
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !1523
  store i64 %slice.1, i64* %9, align 8, !dbg !1523
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !1524, metadata !DIExpression()), !dbg !1530
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill8, i32 0, i32 0, !dbg !1530
  store [0 x i8]* %slice.0, [0 x i8]** %10, align 8, !dbg !1530
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill8, i32 0, i32 1, !dbg !1530
  store i64 %slice.1, i64* %11, align 8, !dbg !1530
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill8, metadata !1531, metadata !DIExpression()), !dbg !1537
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { [0 x i8]*, i64 }*, !dbg !1537
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0, !dbg !1537
  store [0 x i8]* %slice.0, [0 x i8]** %13, align 8, !dbg !1537
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1, !dbg !1537
  store i64 %slice.1, i64* %14, align 8, !dbg !1537
  %15 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { i8*, i64 }*, !dbg !1537
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 1, !dbg !1537
  %_10 = load i64, i64* %16, align 8, !dbg !1537
  %len = sub i64 %_10, %self, !dbg !1523
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !1523
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1486, metadata !DIExpression()), !dbg !1539
  store i8* %ptr, i8** %data.dbg.spill, align 8, !dbg !1540
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1541, metadata !DIExpression()), !dbg !1548
  store i64 %len, i64* %len.dbg.spill9, align 8, !dbg !1550
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill9, metadata !1547, metadata !DIExpression()), !dbg !1548
  store i8* %ptr, i8** %self.dbg.spill10, align 8, !dbg !1548
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !1551, metadata !DIExpression()), !dbg !1559
  %data_address = bitcast i8* %ptr to {}*, !dbg !1559
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1559
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1561, metadata !DIExpression()), !dbg !1568
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !1548
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1567, metadata !DIExpression()), !dbg !1568
  %17 = bitcast { i8*, i64 }* %_30 to {}**, !dbg !1568
  store {}* %data_address, {}** %17, align 8, !dbg !1568
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_30, i32 0, i32 1, !dbg !1568
  store i64 %len, i64* %18, align 8, !dbg !1568
  %19 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_29 to { i8*, i64 }*, !dbg !1568
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_30, i32 0, i32 0, !dbg !1568
  %21 = load i8*, i8** %20, align 8, !dbg !1568
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_30, i32 0, i32 1, !dbg !1568
  %23 = load i64, i64* %22, align 8, !dbg !1568
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %19, i32 0, i32 0, !dbg !1568
  store i8* %21, i8** %24, align 8, !dbg !1568
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %19, i32 0, i32 1, !dbg !1568
  store i64 %23, i64* %25, align 8, !dbg !1568
  %26 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_29 to { [0 x i8]*, i64 }*, !dbg !1568
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !1568
  %_13.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !1568
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !1568
  %_13.1 = load i64, i64* %28, align 8, !dbg !1568
  %29 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0, !dbg !1570
  %30 = insertvalue { [0 x i8]*, i64 } %29, i64 %_13.1, 1, !dbg !1570
  ret { [0 x i8]*, i64 } %30, !dbg !1570
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17hbcbfc7b531f185c4E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !1571 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1588, metadata !DIExpression()), !dbg !1590
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1589, metadata !DIExpression()), !dbg !1591
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hbd67d1e56763f3f2E"([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %self), !dbg !1592
  br label %bb1, !dbg !1592

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !1592

bb4:                                              ; preds = %bb1
  %3 = bitcast { i8*, i64 }* %0 to {}**, !dbg !1593
  store {}* null, {}** %3, align 8, !dbg !1593
  br label %bb5, !dbg !1594

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
  %4 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h80a97136f9aa87bfE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1595
  %_8.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !1595
  %_8.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !1595
  br label %bb3, !dbg !1595

bb3:                                              ; preds = %bb2
  %5 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !1596
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !1596
  store [0 x i8]* %_8.0, [0 x i8]** %6, align 8, !dbg !1596
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !1596
  store i64 %_8.1, i64* %7, align 8, !dbg !1596
  br label %bb5, !dbg !1594

bb5:                                              ; preds = %bb4, %bb3
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !1597
  %9 = load i8*, i8** %8, align 8, !dbg !1597, !align !891
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !1597
  %11 = load i64, i64* %10, align 8, !dbg !1597
  %12 = insertvalue { i8*, i64 } undef, i8* %9, 0, !dbg !1597
  %13 = insertvalue { i8*, i64 } %12, i64 %11, 1, !dbg !1597
  ret { i8*, i64 } %13, !dbg !1597
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h97f66a9983957c89E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1598 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_9 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1602, metadata !DIExpression()), !dbg !1609
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1603, metadata !DIExpression()), !dbg !1610
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !1611
  store [0 x i8]* %slice.0, [0 x i8]** %4, align 8, !dbg !1611
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !1611
  store i64 %slice.1, i64* %5, align 8, !dbg !1611
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !1612, metadata !DIExpression()), !dbg !1616
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !1616
  store [0 x i8]* %slice.0, [0 x i8]** %6, align 8, !dbg !1616
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !1616
  store i64 %slice.1, i64* %7, align 8, !dbg !1616
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !1617, metadata !DIExpression()), !dbg !1621
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !1621
  store [0 x i8]* %slice.0, [0 x i8]** %8, align 8, !dbg !1621
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !1621
  store i64 %slice.1, i64* %9, align 8, !dbg !1621
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !1621
  %_18.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !1621, !nonnull !23, !align !891, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !1621
  %_18.1 = load i64, i64* %11, align 8, !dbg !1621
  br label %bb5, !dbg !1621

bb5:                                              ; preds = %start
  %12 = bitcast { i64, i64 }* %_5 to i64*, !dbg !1623
  store i64 %self, i64* %12, align 8, !dbg !1623
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !1623
  store i64 %_18.1, i64* %13, align 8, !dbg !1623
  %14 = bitcast { i64, i64 }* %_5 to i64*, !dbg !1624
  %start3 = load i64, i64* %14, align 8, !dbg !1624
  store i64 %start3, i64* %start.dbg.spill, align 8, !dbg !1624
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !1604, metadata !DIExpression()), !dbg !1625
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !1626
  %end = load i64, i64* %15, align 8, !dbg !1626
  store i64 %end, i64* %end.dbg.spill, align 8, !dbg !1626
  call void @llvm.dbg.declare(metadata i64* %end.dbg.spill, metadata !1606, metadata !DIExpression()), !dbg !1627
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %16 = call { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17hbcbfc7b531f185c4E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1), !dbg !1628
  store { i8*, i64 } %16, { i8*, i64 }* %_9, align 8, !dbg !1628
  br label %bb1, !dbg !1628

bb1:                                              ; preds = %bb5
  %17 = bitcast { i8*, i64 }* %_9 to {}**, !dbg !1628
  %18 = load {}*, {}** %17, align 8, !dbg !1628
  %19 = icmp eq {}* %18, null, !dbg !1628
  %_12 = select i1 %19, i64 0, i64 1, !dbg !1628
  switch i64 %_12, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !1629

bb3:                                              ; preds = %bb1
  unreachable, !dbg !1628

bb2:                                              ; preds = %bb1
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h062f63050b85fc0cE([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %start3, i64 %end, %"core::panic::location::Location"* align 8 %0) #15, !dbg !1630
  unreachable, !dbg !1630

bb4:                                              ; preds = %bb1
  %20 = bitcast { i8*, i64 }* %_9 to { [0 x i8]*, i64 }*, !dbg !1631
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !1631
  %s.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !1631, !nonnull !23, !align !891, !noundef !23
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !1631
  %s.1 = load i64, i64* %22, align 8, !dbg !1631
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !1631
  store [0 x i8]* %s.0, [0 x i8]** %23, align 8, !dbg !1631
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !1631
  store i64 %s.1, i64* %24, align 8, !dbg !1631
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1607, metadata !DIExpression()), !dbg !1632
  %25 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0, !dbg !1633
  %26 = insertvalue { [0 x i8]*, i64 } %25, i64 %s.1, 1, !dbg !1633
  ret { [0 x i8]*, i64 } %26, !dbg !1633
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern14TwoWaySearcher4next17h6962a7f9d502e88aE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1, [0 x i8]* align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 !dbg !1634 {
start:
  %match_pos.dbg.spill = alloca i64, align 8
  %i.dbg.spill14 = alloca i64, align 8
  %self.dbg.spill12 = alloca { i64, i64 }*, align 8
  %self.dbg.spill11 = alloca { i64, i64 }*, align 8
  %self.dbg.spill10 = alloca { i64, i64 }, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %byte.dbg.spill = alloca i8, align 1
  %self.dbg.spill7 = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %tail_byte.dbg.spill = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %needle_last.dbg.spill = alloca i64, align 8
  %old_pos.dbg.spill = alloca i64, align 8
  %long_period.dbg.spill = alloca i8, align 1
  %needle.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %_76 = alloca { i64, i64 }, align 8
  %iter5 = alloca { i64, i64 }, align 8
  %self4 = alloca { i64, i64 }, align 8
  %start3 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  store %"core::str::pattern::TwoWaySearcher"* %self, %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill, metadata !1668, metadata !DIExpression()), !dbg !1710
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !1669, metadata !DIExpression()), !dbg !1711
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle.dbg.spill, i32 0, i32 0
  store [0 x i8]* %needle.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle.dbg.spill, i32 0, i32 1
  store i64 %needle.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %needle.dbg.spill, metadata !1670, metadata !DIExpression()), !dbg !1712
  %5 = zext i1 %long_period to i8
  store i8 %5, i8* %long_period.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %long_period.dbg.spill, metadata !1671, metadata !DIExpression()), !dbg !1713
  call void @llvm.dbg.declare(metadata i64* %start1, metadata !1680, metadata !DIExpression()), !dbg !1714
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !1715, metadata !DIExpression()), !dbg !1727
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !1682, metadata !DIExpression()), !dbg !1729
  call void @llvm.dbg.declare(metadata i64* %start3, metadata !1690, metadata !DIExpression()), !dbg !1730
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self4, metadata !1731, metadata !DIExpression()), !dbg !1742
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter5, metadata !1692, metadata !DIExpression()), !dbg !1744
  %6 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1745
  %old_pos = load i64, i64* %6, align 8, !dbg !1745
  store i64 %old_pos, i64* %old_pos.dbg.spill, align 8, !dbg !1745
  call void @llvm.dbg.declare(metadata i64* %old_pos.dbg.spill, metadata !1672, metadata !DIExpression()), !dbg !1746
  %needle_last = sub i64 %needle.1, 1, !dbg !1747
  store i64 %needle_last, i64* %needle_last.dbg.spill, align 8, !dbg !1747
  call void @llvm.dbg.declare(metadata i64* %needle_last.dbg.spill, metadata !1674, metadata !DIExpression()), !dbg !1748
  br label %bb1, !dbg !1749

bb1:                                              ; preds = %bb47, %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !1750
  store [0 x i8]* %haystack.0, [0 x i8]** %7, align 8, !dbg !1750
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !1750
  store i64 %haystack.1, i64* %8, align 8, !dbg !1750
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !1751, metadata !DIExpression()), !dbg !1756
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1757
  %_13 = load i64, i64* %9, align 8, !dbg !1757
  %index = add i64 %_13, %needle_last, !dbg !1757
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !1757
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1755, metadata !DIExpression()), !dbg !1756
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %10 = call align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17heeb6b4d4f761f61aE"(i64 %index, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !1756
  store i8* %10, i8** %_10, align 8, !dbg !1756
  br label %bb49, !dbg !1756

bb49:                                             ; preds = %bb1
  %11 = bitcast i8** %_10 to {}**, !dbg !1750
  %12 = load {}*, {}** %11, align 8, !dbg !1750
  %13 = icmp eq {}* %12, null, !dbg !1750
  %_15 = select i1 %13, i64 0, i64 1, !dbg !1750
  switch i64 %_15, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !1758

bb3:                                              ; preds = %bb49
  unreachable, !dbg !1750

bb2:                                              ; preds = %bb49
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1759
  store i64 %haystack.1, i64* %14, align 8, !dbg !1759
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1760
  %_20 = load i64, i64* %15, align 8, !dbg !1760
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hda9f75ab38cb40d1E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %old_pos, i64 %_20), !dbg !1761
  br label %bb5, !dbg !1761

bb4:                                              ; preds = %bb49
  %_108 = load i8*, i8** %_10, align 8, !dbg !1762, !nonnull !23, !align !891, !noundef !23
  %b = load i8, i8* %_108, align 1, !dbg !1762
  store i8 %b, i8* %b.dbg.spill, align 1, !dbg !1762
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1678, metadata !DIExpression()), !dbg !1763
  store i8 %b, i8* %tail_byte.dbg.spill, align 1, !dbg !1764
  call void @llvm.dbg.declare(metadata i8* %tail_byte.dbg.spill, metadata !1676, metadata !DIExpression()), !dbg !1765
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb52141c99a9bb598E"(), !dbg !1766
  br label %bb9, !dbg !1766

bb9:                                              ; preds = %bb4
  br i1 %_22, label %bb7, label %bb6, !dbg !1766

bb6:                                              ; preds = %bb9
  store i8 0, i8* %_21, align 1, !dbg !1766
  br label %bb8, !dbg !1766

bb7:                                              ; preds = %bb9
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1767
  %_25 = load i64, i64* %16, align 8, !dbg !1767
  %_23 = icmp ne i64 %old_pos, %_25, !dbg !1768
  %17 = zext i1 %_23 to i8, !dbg !1766
  store i8 %17, i8* %_21, align 1, !dbg !1766
  br label %bb8, !dbg !1766

bb8:                                              ; preds = %bb6, %bb7
  %18 = load i8, i8* %_21, align 1, !dbg !1766, !range !505, !noundef !23
  %19 = trunc i8 %18 to i1, !dbg !1766
  br i1 %19, label %bb10, label %bb12, !dbg !1766

bb12:                                             ; preds = %bb8
  store %"core::str::pattern::TwoWaySearcher"* %self, %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill7, align 8, !dbg !1769
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill7, metadata !1770, metadata !DIExpression()), !dbg !1777
  store i8 %b, i8* %byte.dbg.spill, align 1, !dbg !1778
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !1776, metadata !DIExpression()), !dbg !1777
  %20 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 3, !dbg !1777
  %_113 = load i64, i64* %20, align 8, !dbg !1777
  %_115 = and i8 %b, 63, !dbg !1777
  %_114 = zext i8 %_115 to i64, !dbg !1777
  %21 = and i64 %_114, 63, !dbg !1777
  %_112 = lshr i64 %_113, %21, !dbg !1777
  %_111 = and i64 %_112, 1, !dbg !1777
  %_29 = icmp ne i64 %_111, 0, !dbg !1777
  %_28 = xor i1 %_29, true, !dbg !1779
  br i1 %_28, label %bb13, label %bb16, !dbg !1779

bb10:                                             ; preds = %bb8
  %22 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1780
  %_27 = load i64, i64* %22, align 8, !dbg !1780
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hda9f75ab38cb40d1E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %old_pos, i64 %_27), !dbg !1781
  br label %bb11, !dbg !1781

bb11:                                             ; preds = %bb10
  br label %bb48, !dbg !1782

bb48:                                             ; preds = %bb5, %bb45, %bb11
  ret void, !dbg !1784

bb16:                                             ; preds = %bb12
  br i1 %long_period, label %bb17, label %bb18, !dbg !1785

bb13:                                             ; preds = %bb12
  %23 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1786
  %24 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1786
  %25 = load i64, i64* %24, align 8, !dbg !1786
  %26 = add i64 %25, %needle.1, !dbg !1786
  store i64 %26, i64* %23, align 8, !dbg !1786
  %_34 = xor i1 %long_period, true, !dbg !1787
  br i1 %_34, label %bb14, label %bb15, !dbg !1787

bb15:                                             ; preds = %bb14, %bb13
  br label %bb47, !dbg !1782

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !1788
  store i64 0, i64* %27, align 8, !dbg !1788
  br label %bb15, !dbg !1789

bb47:                                             ; preds = %bb46, %bb15
  br label %bb1, !dbg !1790

bb18:                                             ; preds = %bb16
  %28 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !1792
  %v1 = load i64, i64* %28, align 8, !dbg !1792
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !1792
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !1793, metadata !DIExpression()), !dbg !1798
  %29 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !1800
  %v2 = load i64, i64* %29, align 8, !dbg !1800
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !1800
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !1797, metadata !DIExpression()), !dbg !1798
; call core::cmp::Ord::max
  %30 = call i64 @_ZN4core3cmp3Ord3max17heb94650d3533541dE(i64 %v1, i64 %v2), !dbg !1798
  store i64 %30, i64* %start1, align 8, !dbg !1798
  br label %bb50, !dbg !1798

bb17:                                             ; preds = %bb16
  %31 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !1801
  %32 = load i64, i64* %31, align 8, !dbg !1801
  store i64 %32, i64* %start1, align 8, !dbg !1801
  br label %bb19, !dbg !1802

bb19:                                             ; preds = %bb50, %bb17
  %_42 = load i64, i64* %start1, align 8, !dbg !1728
  %33 = bitcast { i64, i64 }* %self2 to i64*, !dbg !1728
  store i64 %_42, i64* %33, align 8, !dbg !1728
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !1728
  store i64 %needle.1, i64* %34, align 8, !dbg !1728
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 0, !dbg !1727
  %_40.0 = load i64, i64* %35, align 8, !dbg !1727
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !1727
  %_40.1 = load i64, i64* %36, align 8, !dbg !1727
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !1728
  store i64 %_40.0, i64* %37, align 8, !dbg !1728
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !1728
  store i64 %_40.1, i64* %38, align 8, !dbg !1728
  br label %bb20, !dbg !1803

bb50:                                             ; preds = %bb18
  br label %bb19, !dbg !1802

bb20:                                             ; preds = %bb29, %bb19
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !1729
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !1804, metadata !DIExpression()), !dbg !1814
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %39 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hd8a51031829ef59cE"({ i64, i64 }* align 8 %iter), !dbg !1814
  store { i64, i64 } %39, { i64, i64 }* %_46, align 8, !dbg !1814
  br label %bb51, !dbg !1814

bb51:                                             ; preds = %bb20
  %40 = bitcast { i64, i64 }* %_46 to i64*, !dbg !1729
  %_49 = load i64, i64* %40, align 8, !dbg !1729, !range !865, !noundef !23
  switch i64 %_49, label %bb22 [
    i64 0, label %bb23
    i64 1, label %bb21
  ], !dbg !1729

bb22:                                             ; preds = %bb51
  unreachable, !dbg !1729

bb23:                                             ; preds = %bb51
  br i1 %long_period, label %bb30, label %bb31, !dbg !1815

bb21:                                             ; preds = %bb51
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_46, i32 0, i32 1, !dbg !1816
  %i = load i64, i64* %41, align 8, !dbg !1816
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !1816
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !1688, metadata !DIExpression()), !dbg !1817
  %_55 = icmp ult i64 %i, %needle.1, !dbg !1818
  %42 = call i1 @llvm.expect.i1(i1 %_55, i1 true), !dbg !1818
  br i1 %42, label %bb24, label %panic, !dbg !1818

bb24:                                             ; preds = %bb21
  %43 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i, !dbg !1818
  %_52 = load i8, i8* %43, align 1, !dbg !1818
  %44 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1819
  %_58 = load i64, i64* %44, align 8, !dbg !1819
  %_57 = add i64 %_58, %i, !dbg !1819
  %_61 = icmp ult i64 %_57, %haystack.1, !dbg !1820
  %45 = call i1 @llvm.expect.i1(i1 %_61, i1 true), !dbg !1820
  br i1 %45, label %bb25, label %panic9, !dbg !1820

panic:                                            ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc559 to %"core::panic::location::Location"*)) #15, !dbg !1818
  unreachable, !dbg !1818

bb25:                                             ; preds = %bb24
  %46 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57, !dbg !1820
  %_56 = load i8, i8* %46, align 1, !dbg !1820
  %_51 = icmp ne i8 %_52, %_56, !dbg !1818
  br i1 %_51, label %bb26, label %bb29, !dbg !1818

panic9:                                           ; preds = %bb24
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc561 to %"core::panic::location::Location"*)) #15, !dbg !1820
  unreachable, !dbg !1820

bb29:                                             ; preds = %bb25
  br label %bb20, !dbg !1803

bb26:                                             ; preds = %bb25
  %47 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !1821
  %_65 = load i64, i64* %47, align 8, !dbg !1821
  %_63 = sub i64 %i, %_65, !dbg !1822
  %_62 = add i64 %_63, 1, !dbg !1822
  %48 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1823
  %49 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1823
  %50 = load i64, i64* %49, align 8, !dbg !1823
  %51 = add i64 %50, %_62, !dbg !1823
  store i64 %51, i64* %48, align 8, !dbg !1823
  %_66 = xor i1 %long_period, true, !dbg !1824
  br i1 %_66, label %bb27, label %bb28, !dbg !1824

bb28:                                             ; preds = %bb27, %bb26
  br label %bb46, !dbg !1825

bb27:                                             ; preds = %bb26
  %52 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !1827
  store i64 0, i64* %52, align 8, !dbg !1827
  br label %bb28, !dbg !1828

bb46:                                             ; preds = %bb41, %bb28
  br label %bb47, !dbg !1782

bb31:                                             ; preds = %bb23
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !1829
  %54 = load i64, i64* %53, align 8, !dbg !1829
  store i64 %54, i64* %start3, align 8, !dbg !1829
  br label %bb32, !dbg !1830

bb30:                                             ; preds = %bb23
  store i64 0, i64* %start3, align 8, !dbg !1831
  br label %bb32, !dbg !1830

bb32:                                             ; preds = %bb31, %bb30
  %_73 = load i64, i64* %start3, align 8, !dbg !1832
  %55 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !1833
  %_74 = load i64, i64* %55, align 8, !dbg !1833
  %56 = bitcast { i64, i64 }* %self4 to i64*, !dbg !1743
  store i64 %_73, i64* %56, align 8, !dbg !1743
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 1, !dbg !1743
  store i64 %_74, i64* %57, align 8, !dbg !1743
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 0, !dbg !1742
  %_120.0 = load i64, i64* %58, align 8, !dbg !1742
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 1, !dbg !1742
  %_120.1 = load i64, i64* %59, align 8, !dbg !1742
; call core::iter::adapters::rev::Rev<T>::new
  %60 = call { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h14fc142aaebf8b7eE"(i64 %_120.0, i64 %_120.1), !dbg !1742
  %self.0 = extractvalue { i64, i64 } %60, 0, !dbg !1742
  %self.1 = extractvalue { i64, i64 } %60, 1, !dbg !1742
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !1742
  store i64 %self.0, i64* %61, align 8, !dbg !1742
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !1742
  store i64 %self.1, i64* %62, align 8, !dbg !1742
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill10, metadata !1834, metadata !DIExpression()), !dbg !1842
  br label %bb52, !dbg !1742

bb52:                                             ; preds = %bb32
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter5, i32 0, i32 0, !dbg !1743
  store i64 %self.0, i64* %63, align 8, !dbg !1743
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter5, i32 0, i32 1, !dbg !1743
  store i64 %self.1, i64* %64, align 8, !dbg !1743
  br label %bb33, !dbg !1843

bb33:                                             ; preds = %bb42, %bb52
  store { i64, i64 }* %iter5, { i64, i64 }** %self.dbg.spill11, align 8, !dbg !1744
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill11, metadata !1844, metadata !DIExpression()), !dbg !1853
  store { i64, i64 }* %iter5, { i64, i64 }** %self.dbg.spill12, align 8, !dbg !1853
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill12, metadata !1854, metadata !DIExpression()), !dbg !1859
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %65 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h83600a7c9863ba0eE"({ i64, i64 }* align 8 %iter5), !dbg !1859
  store { i64, i64 } %65, { i64, i64 }* %_76, align 8, !dbg !1859
  br label %bb53, !dbg !1859

bb53:                                             ; preds = %bb33
  %66 = bitcast { i64, i64 }* %_76 to i64*, !dbg !1744
  %_79 = load i64, i64* %66, align 8, !dbg !1744, !range !865, !noundef !23
  switch i64 %_79, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !1744

bb35:                                             ; preds = %bb53
  unreachable, !dbg !1744

bb36:                                             ; preds = %bb53
  %67 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1861
  %match_pos = load i64, i64* %67, align 8, !dbg !1861
  store i64 %match_pos, i64* %match_pos.dbg.spill, align 8, !dbg !1861
  call void @llvm.dbg.declare(metadata i64* %match_pos.dbg.spill, metadata !1703, metadata !DIExpression()), !dbg !1862
  %68 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1863
  %69 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1863
  %70 = load i64, i64* %69, align 8, !dbg !1863
  %71 = add i64 %70, %needle.1, !dbg !1863
  store i64 %71, i64* %68, align 8, !dbg !1863
  %_101 = xor i1 %long_period, true, !dbg !1864
  br i1 %_101, label %bb43, label %bb44, !dbg !1864

bb34:                                             ; preds = %bb53
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_76, i32 0, i32 1, !dbg !1865
  %i13 = load i64, i64* %72, align 8, !dbg !1865
  store i64 %i13, i64* %i.dbg.spill14, align 8, !dbg !1865
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill14, metadata !1701, metadata !DIExpression()), !dbg !1866
  %_85 = icmp ult i64 %i13, %needle.1, !dbg !1867
  %73 = call i1 @llvm.expect.i1(i1 %_85, i1 true), !dbg !1867
  br i1 %73, label %bb37, label %panic15, !dbg !1867

bb37:                                             ; preds = %bb34
  %74 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i13, !dbg !1867
  %_82 = load i8, i8* %74, align 1, !dbg !1867
  %75 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1868
  %_88 = load i64, i64* %75, align 8, !dbg !1868
  %_87 = add i64 %_88, %i13, !dbg !1868
  %_91 = icmp ult i64 %_87, %haystack.1, !dbg !1869
  %76 = call i1 @llvm.expect.i1(i1 %_91, i1 true), !dbg !1869
  br i1 %76, label %bb38, label %panic16, !dbg !1869

panic15:                                          ; preds = %bb34
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %i13, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc563 to %"core::panic::location::Location"*)) #15, !dbg !1867
  unreachable, !dbg !1867

bb38:                                             ; preds = %bb37
  %77 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87, !dbg !1869
  %_86 = load i8, i8* %77, align 1, !dbg !1869
  %_81 = icmp ne i8 %_82, %_86, !dbg !1867
  br i1 %_81, label %bb39, label %bb42, !dbg !1867

panic16:                                          ; preds = %bb37
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc565 to %"core::panic::location::Location"*)) #15, !dbg !1869
  unreachable, !dbg !1869

bb42:                                             ; preds = %bb38
  br label %bb33, !dbg !1843

bb39:                                             ; preds = %bb38
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2, !dbg !1870
  %_92 = load i64, i64* %78, align 8, !dbg !1870
  %79 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1871
  %80 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1871
  %81 = load i64, i64* %80, align 8, !dbg !1871
  %82 = add i64 %81, %_92, !dbg !1871
  store i64 %82, i64* %79, align 8, !dbg !1871
  %_93 = xor i1 %long_period, true, !dbg !1872
  br i1 %_93, label %bb40, label %bb41, !dbg !1872

bb41:                                             ; preds = %bb40, %bb39
  br label %bb46, !dbg !1825

bb40:                                             ; preds = %bb39
  %83 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2, !dbg !1873
  %_97 = load i64, i64* %83, align 8, !dbg !1873
  %84 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !1874
  %85 = sub i64 %needle.1, %_97, !dbg !1874
  store i64 %85, i64* %84, align 8, !dbg !1874
  br label %bb41, !dbg !1875

bb44:                                             ; preds = %bb43, %bb36
  %_104 = add i64 %match_pos, %needle.1, !dbg !1876
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hc559d9f21266915fE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %match_pos, i64 %_104), !dbg !1877
  br label %bb45, !dbg !1877

bb43:                                             ; preds = %bb36
  %86 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !1878
  store i64 0, i64* %86, align 8, !dbg !1878
  br label %bb44, !dbg !1879

bb45:                                             ; preds = %bb44
  br label %bb48, !dbg !1782

bb5:                                              ; preds = %bb2
  br label %bb48, !dbg !1790
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern14TwoWaySearcher4next17h7d87489eb065f5dbE(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1, [0 x i8]* align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 !dbg !1880 {
start:
  %match_pos.dbg.spill = alloca i64, align 8
  %i.dbg.spill14 = alloca i64, align 8
  %self.dbg.spill12 = alloca { i64, i64 }*, align 8
  %self.dbg.spill11 = alloca { i64, i64 }*, align 8
  %self.dbg.spill10 = alloca { i64, i64 }, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %byte.dbg.spill = alloca i8, align 1
  %self.dbg.spill7 = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %tail_byte.dbg.spill = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %needle_last.dbg.spill = alloca i64, align 8
  %old_pos.dbg.spill = alloca i64, align 8
  %long_period.dbg.spill = alloca i8, align 1
  %needle.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %_76 = alloca { i64, i64 }, align 8
  %iter5 = alloca { i64, i64 }, align 8
  %self4 = alloca { i64, i64 }, align 8
  %start3 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  store %"core::str::pattern::TwoWaySearcher"* %self, %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill, metadata !1901, metadata !DIExpression()), !dbg !1932
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !1902, metadata !DIExpression()), !dbg !1933
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle.dbg.spill, i32 0, i32 0
  store [0 x i8]* %needle.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle.dbg.spill, i32 0, i32 1
  store i64 %needle.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %needle.dbg.spill, metadata !1903, metadata !DIExpression()), !dbg !1934
  %5 = zext i1 %long_period to i8
  store i8 %5, i8* %long_period.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %long_period.dbg.spill, metadata !1904, metadata !DIExpression()), !dbg !1935
  call void @llvm.dbg.declare(metadata i64* %start1, metadata !1913, metadata !DIExpression()), !dbg !1936
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !1937, metadata !DIExpression()), !dbg !1941
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !1915, metadata !DIExpression()), !dbg !1943
  call void @llvm.dbg.declare(metadata i64* %start3, metadata !1919, metadata !DIExpression()), !dbg !1944
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self4, metadata !1945, metadata !DIExpression()), !dbg !1949
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter5, metadata !1921, metadata !DIExpression()), !dbg !1951
  %6 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1952
  %old_pos = load i64, i64* %6, align 8, !dbg !1952
  store i64 %old_pos, i64* %old_pos.dbg.spill, align 8, !dbg !1952
  call void @llvm.dbg.declare(metadata i64* %old_pos.dbg.spill, metadata !1905, metadata !DIExpression()), !dbg !1953
  %needle_last = sub i64 %needle.1, 1, !dbg !1954
  store i64 %needle_last, i64* %needle_last.dbg.spill, align 8, !dbg !1954
  call void @llvm.dbg.declare(metadata i64* %needle_last.dbg.spill, metadata !1907, metadata !DIExpression()), !dbg !1955
  br label %bb1, !dbg !1956

bb1:                                              ; preds = %bb47, %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !1957
  store [0 x i8]* %haystack.0, [0 x i8]** %7, align 8, !dbg !1957
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !1957
  store i64 %haystack.1, i64* %8, align 8, !dbg !1957
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !1958, metadata !DIExpression()), !dbg !1963
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1964
  %_13 = load i64, i64* %9, align 8, !dbg !1964
  %index = add i64 %_13, %needle_last, !dbg !1964
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !1964
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1962, metadata !DIExpression()), !dbg !1963
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %10 = call align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17heeb6b4d4f761f61aE"(i64 %index, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !1963
  store i8* %10, i8** %_10, align 8, !dbg !1963
  br label %bb49, !dbg !1963

bb49:                                             ; preds = %bb1
  %11 = bitcast i8** %_10 to {}**, !dbg !1957
  %12 = load {}*, {}** %11, align 8, !dbg !1957
  %13 = icmp eq {}* %12, null, !dbg !1957
  %_15 = select i1 %13, i64 0, i64 1, !dbg !1957
  switch i64 %_15, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !1965

bb3:                                              ; preds = %bb49
  unreachable, !dbg !1957

bb2:                                              ; preds = %bb49
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1966
  store i64 %haystack.1, i64* %14, align 8, !dbg !1966
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1967
  %_20 = load i64, i64* %15, align 8, !dbg !1967
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h7964d54b180e7969E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %old_pos, i64 %_20), !dbg !1968
  br label %bb5, !dbg !1968

bb4:                                              ; preds = %bb49
  %_108 = load i8*, i8** %_10, align 8, !dbg !1969, !nonnull !23, !align !891, !noundef !23
  %b = load i8, i8* %_108, align 1, !dbg !1969
  store i8 %b, i8* %b.dbg.spill, align 1, !dbg !1969
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1911, metadata !DIExpression()), !dbg !1970
  store i8 %b, i8* %tail_byte.dbg.spill, align 1, !dbg !1971
  call void @llvm.dbg.declare(metadata i8* %tail_byte.dbg.spill, metadata !1909, metadata !DIExpression()), !dbg !1972
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h0c69b4227548a848E"(), !dbg !1973
  br label %bb9, !dbg !1973

bb9:                                              ; preds = %bb4
  br i1 %_22, label %bb7, label %bb6, !dbg !1973

bb6:                                              ; preds = %bb9
  store i8 0, i8* %_21, align 1, !dbg !1973
  br label %bb8, !dbg !1973

bb7:                                              ; preds = %bb9
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1974
  %_25 = load i64, i64* %16, align 8, !dbg !1974
  %_23 = icmp ne i64 %old_pos, %_25, !dbg !1975
  %17 = zext i1 %_23 to i8, !dbg !1973
  store i8 %17, i8* %_21, align 1, !dbg !1973
  br label %bb8, !dbg !1973

bb8:                                              ; preds = %bb6, %bb7
  %18 = load i8, i8* %_21, align 1, !dbg !1973, !range !505, !noundef !23
  %19 = trunc i8 %18 to i1, !dbg !1973
  br i1 %19, label %bb10, label %bb12, !dbg !1973

bb12:                                             ; preds = %bb8
  store %"core::str::pattern::TwoWaySearcher"* %self, %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill7, align 8, !dbg !1976
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill7, metadata !1977, metadata !DIExpression()), !dbg !1981
  store i8 %b, i8* %byte.dbg.spill, align 1, !dbg !1982
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !1980, metadata !DIExpression()), !dbg !1981
  %20 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 3, !dbg !1981
  %_113 = load i64, i64* %20, align 8, !dbg !1981
  %_115 = and i8 %b, 63, !dbg !1981
  %_114 = zext i8 %_115 to i64, !dbg !1981
  %21 = and i64 %_114, 63, !dbg !1981
  %_112 = lshr i64 %_113, %21, !dbg !1981
  %_111 = and i64 %_112, 1, !dbg !1981
  %_29 = icmp ne i64 %_111, 0, !dbg !1981
  %_28 = xor i1 %_29, true, !dbg !1983
  br i1 %_28, label %bb13, label %bb16, !dbg !1983

bb10:                                             ; preds = %bb8
  %22 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1984
  %_27 = load i64, i64* %22, align 8, !dbg !1984
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h7964d54b180e7969E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %old_pos, i64 %_27), !dbg !1985
  br label %bb11, !dbg !1985

bb11:                                             ; preds = %bb10
  br label %bb48, !dbg !1986

bb48:                                             ; preds = %bb5, %bb45, %bb11
  ret void, !dbg !1988

bb16:                                             ; preds = %bb12
  br i1 %long_period, label %bb17, label %bb18, !dbg !1989

bb13:                                             ; preds = %bb12
  %23 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1990
  %24 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !1990
  %25 = load i64, i64* %24, align 8, !dbg !1990
  %26 = add i64 %25, %needle.1, !dbg !1990
  store i64 %26, i64* %23, align 8, !dbg !1990
  %_34 = xor i1 %long_period, true, !dbg !1991
  br i1 %_34, label %bb14, label %bb15, !dbg !1991

bb15:                                             ; preds = %bb14, %bb13
  br label %bb47, !dbg !1986

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !1992
  store i64 0, i64* %27, align 8, !dbg !1992
  br label %bb15, !dbg !1993

bb47:                                             ; preds = %bb46, %bb15
  br label %bb1, !dbg !1994

bb18:                                             ; preds = %bb16
  %28 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !1996
  %v1 = load i64, i64* %28, align 8, !dbg !1996
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !1996
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !1997, metadata !DIExpression()), !dbg !2002
  %29 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !2004
  %v2 = load i64, i64* %29, align 8, !dbg !2004
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !2004
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !2001, metadata !DIExpression()), !dbg !2002
; call core::cmp::Ord::max
  %30 = call i64 @_ZN4core3cmp3Ord3max17heb94650d3533541dE(i64 %v1, i64 %v2), !dbg !2002
  store i64 %30, i64* %start1, align 8, !dbg !2002
  br label %bb50, !dbg !2002

bb17:                                             ; preds = %bb16
  %31 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !2005
  %32 = load i64, i64* %31, align 8, !dbg !2005
  store i64 %32, i64* %start1, align 8, !dbg !2005
  br label %bb19, !dbg !2006

bb19:                                             ; preds = %bb50, %bb17
  %_42 = load i64, i64* %start1, align 8, !dbg !1942
  %33 = bitcast { i64, i64 }* %self2 to i64*, !dbg !1942
  store i64 %_42, i64* %33, align 8, !dbg !1942
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !1942
  store i64 %needle.1, i64* %34, align 8, !dbg !1942
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 0, !dbg !1941
  %_40.0 = load i64, i64* %35, align 8, !dbg !1941
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !1941
  %_40.1 = load i64, i64* %36, align 8, !dbg !1941
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !1942
  store i64 %_40.0, i64* %37, align 8, !dbg !1942
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !1942
  store i64 %_40.1, i64* %38, align 8, !dbg !1942
  br label %bb20, !dbg !2007

bb50:                                             ; preds = %bb18
  br label %bb19, !dbg !2006

bb20:                                             ; preds = %bb29, %bb19
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !1943
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !2008, metadata !DIExpression()), !dbg !2012
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %39 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hd8a51031829ef59cE"({ i64, i64 }* align 8 %iter), !dbg !2012
  store { i64, i64 } %39, { i64, i64 }* %_46, align 8, !dbg !2012
  br label %bb51, !dbg !2012

bb51:                                             ; preds = %bb20
  %40 = bitcast { i64, i64 }* %_46 to i64*, !dbg !1943
  %_49 = load i64, i64* %40, align 8, !dbg !1943, !range !865, !noundef !23
  switch i64 %_49, label %bb22 [
    i64 0, label %bb23
    i64 1, label %bb21
  ], !dbg !1943

bb22:                                             ; preds = %bb51
  unreachable, !dbg !1943

bb23:                                             ; preds = %bb51
  br i1 %long_period, label %bb30, label %bb31, !dbg !2013

bb21:                                             ; preds = %bb51
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_46, i32 0, i32 1, !dbg !2014
  %i = load i64, i64* %41, align 8, !dbg !2014
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !2014
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !1917, metadata !DIExpression()), !dbg !2015
  %_55 = icmp ult i64 %i, %needle.1, !dbg !2016
  %42 = call i1 @llvm.expect.i1(i1 %_55, i1 true), !dbg !2016
  br i1 %42, label %bb24, label %panic, !dbg !2016

bb24:                                             ; preds = %bb21
  %43 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i, !dbg !2016
  %_52 = load i8, i8* %43, align 1, !dbg !2016
  %44 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !2017
  %_58 = load i64, i64* %44, align 8, !dbg !2017
  %_57 = add i64 %_58, %i, !dbg !2017
  %_61 = icmp ult i64 %_57, %haystack.1, !dbg !2018
  %45 = call i1 @llvm.expect.i1(i1 %_61, i1 true), !dbg !2018
  br i1 %45, label %bb25, label %panic9, !dbg !2018

panic:                                            ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc559 to %"core::panic::location::Location"*)) #15, !dbg !2016
  unreachable, !dbg !2016

bb25:                                             ; preds = %bb24
  %46 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57, !dbg !2018
  %_56 = load i8, i8* %46, align 1, !dbg !2018
  %_51 = icmp ne i8 %_52, %_56, !dbg !2016
  br i1 %_51, label %bb26, label %bb29, !dbg !2016

panic9:                                           ; preds = %bb24
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc561 to %"core::panic::location::Location"*)) #15, !dbg !2018
  unreachable, !dbg !2018

bb29:                                             ; preds = %bb25
  br label %bb20, !dbg !2007

bb26:                                             ; preds = %bb25
  %47 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !2019
  %_65 = load i64, i64* %47, align 8, !dbg !2019
  %_63 = sub i64 %i, %_65, !dbg !2020
  %_62 = add i64 %_63, 1, !dbg !2020
  %48 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !2021
  %49 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !2021
  %50 = load i64, i64* %49, align 8, !dbg !2021
  %51 = add i64 %50, %_62, !dbg !2021
  store i64 %51, i64* %48, align 8, !dbg !2021
  %_66 = xor i1 %long_period, true, !dbg !2022
  br i1 %_66, label %bb27, label %bb28, !dbg !2022

bb28:                                             ; preds = %bb27, %bb26
  br label %bb46, !dbg !2023

bb27:                                             ; preds = %bb26
  %52 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !2025
  store i64 0, i64* %52, align 8, !dbg !2025
  br label %bb28, !dbg !2026

bb46:                                             ; preds = %bb41, %bb28
  br label %bb47, !dbg !1986

bb31:                                             ; preds = %bb23
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !2027
  %54 = load i64, i64* %53, align 8, !dbg !2027
  store i64 %54, i64* %start3, align 8, !dbg !2027
  br label %bb32, !dbg !2028

bb30:                                             ; preds = %bb23
  store i64 0, i64* %start3, align 8, !dbg !2029
  br label %bb32, !dbg !2028

bb32:                                             ; preds = %bb31, %bb30
  %_73 = load i64, i64* %start3, align 8, !dbg !2030
  %55 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !2031
  %_74 = load i64, i64* %55, align 8, !dbg !2031
  %56 = bitcast { i64, i64 }* %self4 to i64*, !dbg !1950
  store i64 %_73, i64* %56, align 8, !dbg !1950
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 1, !dbg !1950
  store i64 %_74, i64* %57, align 8, !dbg !1950
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 0, !dbg !1949
  %_120.0 = load i64, i64* %58, align 8, !dbg !1949
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 1, !dbg !1949
  %_120.1 = load i64, i64* %59, align 8, !dbg !1949
; call core::iter::adapters::rev::Rev<T>::new
  %60 = call { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h14fc142aaebf8b7eE"(i64 %_120.0, i64 %_120.1), !dbg !1949
  %self.0 = extractvalue { i64, i64 } %60, 0, !dbg !1949
  %self.1 = extractvalue { i64, i64 } %60, 1, !dbg !1949
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !1949
  store i64 %self.0, i64* %61, align 8, !dbg !1949
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !1949
  store i64 %self.1, i64* %62, align 8, !dbg !1949
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill10, metadata !2032, metadata !DIExpression()), !dbg !2036
  br label %bb52, !dbg !1949

bb52:                                             ; preds = %bb32
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter5, i32 0, i32 0, !dbg !1950
  store i64 %self.0, i64* %63, align 8, !dbg !1950
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter5, i32 0, i32 1, !dbg !1950
  store i64 %self.1, i64* %64, align 8, !dbg !1950
  br label %bb33, !dbg !2037

bb33:                                             ; preds = %bb42, %bb52
  store { i64, i64 }* %iter5, { i64, i64 }** %self.dbg.spill11, align 8, !dbg !1951
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill11, metadata !2038, metadata !DIExpression()), !dbg !2042
  store { i64, i64 }* %iter5, { i64, i64 }** %self.dbg.spill12, align 8, !dbg !2042
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill12, metadata !2043, metadata !DIExpression()), !dbg !2047
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %65 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h83600a7c9863ba0eE"({ i64, i64 }* align 8 %iter5), !dbg !2047
  store { i64, i64 } %65, { i64, i64 }* %_76, align 8, !dbg !2047
  br label %bb53, !dbg !2047

bb53:                                             ; preds = %bb33
  %66 = bitcast { i64, i64 }* %_76 to i64*, !dbg !1951
  %_79 = load i64, i64* %66, align 8, !dbg !1951, !range !865, !noundef !23
  switch i64 %_79, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !1951

bb35:                                             ; preds = %bb53
  unreachable, !dbg !1951

bb36:                                             ; preds = %bb53
  %67 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !2049
  %match_pos = load i64, i64* %67, align 8, !dbg !2049
  store i64 %match_pos, i64* %match_pos.dbg.spill, align 8, !dbg !2049
  call void @llvm.dbg.declare(metadata i64* %match_pos.dbg.spill, metadata !1925, metadata !DIExpression()), !dbg !2050
  %68 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !2051
  %69 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !2051
  %70 = load i64, i64* %69, align 8, !dbg !2051
  %71 = add i64 %70, %needle.1, !dbg !2051
  store i64 %71, i64* %68, align 8, !dbg !2051
  %_101 = xor i1 %long_period, true, !dbg !2052
  br i1 %_101, label %bb43, label %bb44, !dbg !2052

bb34:                                             ; preds = %bb53
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_76, i32 0, i32 1, !dbg !2053
  %i13 = load i64, i64* %72, align 8, !dbg !2053
  store i64 %i13, i64* %i.dbg.spill14, align 8, !dbg !2053
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill14, metadata !1923, metadata !DIExpression()), !dbg !2054
  %_85 = icmp ult i64 %i13, %needle.1, !dbg !2055
  %73 = call i1 @llvm.expect.i1(i1 %_85, i1 true), !dbg !2055
  br i1 %73, label %bb37, label %panic15, !dbg !2055

bb37:                                             ; preds = %bb34
  %74 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i13, !dbg !2055
  %_82 = load i8, i8* %74, align 1, !dbg !2055
  %75 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !2056
  %_88 = load i64, i64* %75, align 8, !dbg !2056
  %_87 = add i64 %_88, %i13, !dbg !2056
  %_91 = icmp ult i64 %_87, %haystack.1, !dbg !2057
  %76 = call i1 @llvm.expect.i1(i1 %_91, i1 true), !dbg !2057
  br i1 %76, label %bb38, label %panic16, !dbg !2057

panic15:                                          ; preds = %bb34
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %i13, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc563 to %"core::panic::location::Location"*)) #15, !dbg !2055
  unreachable, !dbg !2055

bb38:                                             ; preds = %bb37
  %77 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87, !dbg !2057
  %_86 = load i8, i8* %77, align 1, !dbg !2057
  %_81 = icmp ne i8 %_82, %_86, !dbg !2055
  br i1 %_81, label %bb39, label %bb42, !dbg !2055

panic16:                                          ; preds = %bb37
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc565 to %"core::panic::location::Location"*)) #15, !dbg !2057
  unreachable, !dbg !2057

bb42:                                             ; preds = %bb38
  br label %bb33, !dbg !2037

bb39:                                             ; preds = %bb38
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2, !dbg !2058
  %_92 = load i64, i64* %78, align 8, !dbg !2058
  %79 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !2059
  %80 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !2059
  %81 = load i64, i64* %80, align 8, !dbg !2059
  %82 = add i64 %81, %_92, !dbg !2059
  store i64 %82, i64* %79, align 8, !dbg !2059
  %_93 = xor i1 %long_period, true, !dbg !2060
  br i1 %_93, label %bb40, label %bb41, !dbg !2060

bb41:                                             ; preds = %bb40, %bb39
  br label %bb46, !dbg !2023

bb40:                                             ; preds = %bb39
  %83 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2, !dbg !2061
  %_97 = load i64, i64* %83, align 8, !dbg !2061
  %84 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !2062
  %85 = sub i64 %needle.1, %_97, !dbg !2062
  store i64 %85, i64* %84, align 8, !dbg !2062
  br label %bb41, !dbg !2063

bb44:                                             ; preds = %bb43, %bb36
  %_104 = add i64 %match_pos, %needle.1, !dbg !2064
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17he875a91c80a0f86dE"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %match_pos, i64 %_104), !dbg !2065
  br label %bb45, !dbg !2065

bb43:                                             ; preds = %bb36
  %86 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !2066
  store i64 0, i64* %86, align 8, !dbg !2066
  br label %bb44, !dbg !2067

bb45:                                             ; preds = %bb44
  br label %bb48, !dbg !1986

bb5:                                              ; preds = %bb2
  br label %bb48, !dbg !1994
}

; core::str::pattern::Pattern::is_contained_in
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3str7pattern7Pattern15is_contained_in17hb3e21f3a96f4b49eE([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2068 {
start:
  %self.dbg.spill1 = alloca %"core::option::Option<(usize, usize)>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_6 = alloca %"core::str::pattern::StrSearcher", align 8
  %_4 = alloca %"core::option::Option<(usize, usize)>", align 8
  %1 = alloca i8, align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2071, metadata !DIExpression()), !dbg !2075
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !2072, metadata !DIExpression()), !dbg !2076
; call <&str as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd40404a44a279b2dE"(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher") %_6, [0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !2077
  br label %bb1, !dbg !2077

bb1:                                              ; preds = %start
; invoke <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
  invoke void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h26c97d8fb1832ad5E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_4, %"core::str::pattern::StrSearcher"* align 8 %_6)
          to label %bb2 unwind label %cleanup, !dbg !2077

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !2078

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store %"core::option::Option<(usize, usize)>"* %_4, %"core::option::Option<(usize, usize)>"** %self.dbg.spill1, align 8, !dbg !2077
  call void @llvm.dbg.declare(metadata %"core::option::Option<(usize, usize)>"** %self.dbg.spill1, metadata !2079, metadata !DIExpression()), !dbg !2086
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %_4 to i64*, !dbg !2086
  %_9 = load i64, i64* %11, align 8, !dbg !2086, !range !865, !noundef !23
  %12 = icmp eq i64 %_9, 1, !dbg !2086
  br i1 %12, label %bb8, label %bb7, !dbg !2086

bb6:                                              ; preds = %bb5
  %13 = bitcast { i8*, i32 }* %0 to i8**, !dbg !2087
  %14 = load i8*, i8** %13, align 8, !dbg !2087
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !2087
  %16 = load i32, i32* %15, align 8, !dbg !2087
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0, !dbg !2087
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1, !dbg !2087
  resume { i8*, i32 } %18, !dbg !2087

bb8:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1, !dbg !2086
  br label %bb3, !dbg !2086

bb7:                                              ; preds = %bb2
  store i8 0, i8* %1, align 1, !dbg !2086
  br label %bb3, !dbg !2086

bb3:                                              ; preds = %bb8, %bb7
  br label %bb4, !dbg !2078

bb4:                                              ; preds = %bb3
  %19 = load i8, i8* %1, align 1, !dbg !2088, !range !505, !noundef !23
  %20 = trunc i8 %19 to i1, !dbg !2088
  ret i1 %20, !dbg !2088
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817h2ae2e3433924ffc4E(i32 %code) unnamed_addr #0 !dbg !2089 {
start:
  %code.dbg.spill = alloca i32, align 4
  %0 = alloca i64, align 8
  store i32 %code, i32* %code.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !2096, metadata !DIExpression()), !dbg !2097
  %_2 = icmp ult i32 %code, 128, !dbg !2098
  br i1 %_2, label %bb1, label %bb2, !dbg !2098

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048, !dbg !2099
  br i1 %_4, label %bb3, label %bb4, !dbg !2099

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8, !dbg !2100
  br label %bb9, !dbg !2101

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8, !dbg !2102
  ret i64 %1, !dbg !2102

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536, !dbg !2103
  br i1 %_6, label %bb5, label %bb6, !dbg !2103

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8, !dbg !2104
  br label %bb8, !dbg !2105

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9, !dbg !2101

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8, !dbg !2106
  br label %bb7, !dbg !2107

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8, !dbg !2108
  br label %bb7, !dbg !2107

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8, !dbg !2105
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h14fc142aaebf8b7eE"(i64 %iter.0, i64 %iter.1) unnamed_addr #2 !dbg !2109 {
start:
  %iter.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter.dbg.spill, metadata !2111, metadata !DIExpression()), !dbg !2112
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2113
  store i64 %iter.0, i64* %3, align 8, !dbg !2113
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2113
  store i64 %iter.1, i64* %4, align 8, !dbg !2113
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2114
  %6 = load i64, i64* %5, align 8, !dbg !2114
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2114
  %8 = load i64, i64* %7, align 8, !dbg !2114
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !2114
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !2114
  ret { i64, i64 } %10, !dbg !2114
}

; core::alloc::layout::Layout::from_size_valid_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17hc30ce28b3d614478E(i64 %size, i64 %align) unnamed_addr #0 !dbg !2115 {
start:
  %n.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %self1 = alloca i64, align 8
  %self = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2146, metadata !DIExpression()), !dbg !2148
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !2147, metadata !DIExpression()), !dbg !2149
  call void @llvm.dbg.declare(metadata i64* %self, metadata !2150, metadata !DIExpression()), !dbg !2161
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !2163, metadata !DIExpression()), !dbg !2170
  store i64 %align, i64* %self1, align 8, !dbg !2162
  %_15 = load i64, i64* %self1, align 8, !dbg !2170, !range !2171, !noundef !23
  store i64 %_15, i64* %n.dbg.spill, align 8, !dbg !2170
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2172, metadata !DIExpression()), !dbg !2186
  store i64 %_15, i64* %self, align 8, !dbg !2186
  %_8 = load i64, i64* %self, align 8, !dbg !2161
  %_7 = sub i64 %_8, 1, !dbg !2188
  %_5 = sub i64 9223372036854775807, %_7, !dbg !2189
  %_3 = icmp ugt i64 %size, %_5, !dbg !2190
  br i1 %_3, label %bb1, label %bb2, !dbg !2190

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_11 to i64*, !dbg !2191
  store i64 %size, i64* %1, align 8, !dbg !2191
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !2191
  store i64 %align, i64* %2, align 8, !dbg !2191
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !2192
  %4 = load i64, i64* %3, align 8, !dbg !2192
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !2192
  %6 = load i64, i64* %5, align 8, !dbg !2192, !range !2171, !noundef !23
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2192
  store i64 %4, i64* %7, align 8, !dbg !2192
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2192
  store i64 %6, i64* %8, align 8, !dbg !2192
  br label %bb3, !dbg !2193

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2194
  store i64 0, i64* %9, align 8, !dbg !2194
  br label %bb3, !dbg !2193

bb3:                                              ; preds = %bb2, %bb1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2193
  %11 = load i64, i64* %10, align 8, !dbg !2193
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2193
  %13 = load i64, i64* %12, align 8, !dbg !2193, !range !2195, !noundef !23
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !2193
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !2193
  ret { i64, i64 } %15, !dbg !2193
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h1a1ed60865c4d910E(i64 %n) unnamed_addr #0 !dbg !2196 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2200, metadata !DIExpression()), !dbg !2220
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2221, metadata !DIExpression()), !dbg !2265
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2267, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !2273, metadata !DIExpression()), !dbg !2277
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !2203, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !2279, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !2262, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !2286, metadata !DIExpression()), !dbg !2294
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h47da74691c4ba223E"(i64 1, i64 %n), !dbg !2266
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !2266
  br label %bb1, !dbg !2266

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !2277
  %_15 = load i64, i64* %3, align 8, !dbg !2277, !range !865, !noundef !23
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !2277

bb9:                                              ; preds = %bb1
  unreachable, !dbg !2277

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !2277
  store i64 1, i64* %4, align 8, !dbg !2277
  br label %bb11, !dbg !2277

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2277
  %v = load i64, i64* %5, align 8, !dbg !2277
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2277
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2274, metadata !DIExpression()), !dbg !2295
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2295
  store i64 %v, i64* %6, align 8, !dbg !2295
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !2295
  store i64 0, i64* %7, align 8, !dbg !2295
  br label %bb11, !dbg !2277

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !2265
  %_18 = load i64, i64* %8, align 8, !dbg !2265, !range !865, !noundef !23
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !2265

bb13:                                             ; preds = %bb11
  unreachable, !dbg !2265

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2265
  %v4 = load i64, i64* %9, align 8, !dbg !2265
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !2265
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !2259, metadata !DIExpression()), !dbg !2296
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !2296
  store i64 %v4, i64* %10, align 8, !dbg !2296
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !2296
  store i64 0, i64* %11, align 8, !dbg !2296
  br label %bb2, !dbg !2265

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !2293
  store i64 1, i64* %12, align 8, !dbg !2293
  br label %bb2, !dbg !2265

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !2266
  %_9 = load i64, i64* %13, align 8, !dbg !2266, !range !865, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !2266

bb4:                                              ; preds = %bb2
  unreachable, !dbg !2266

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !2266
  %val = load i64, i64* %14, align 8, !dbg !2266
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !2266
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !2218, metadata !DIExpression()), !dbg !2297
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !2297
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !2201, metadata !DIExpression()), !dbg !2298
  store i64 1, i64* %align.dbg.spill, align 8, !dbg !2299
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !2309, metadata !DIExpression()), !dbg !2323
  store i64 1, i64* %0, align 8, !dbg !2323
  %_14 = load i64, i64* %0, align 8, !dbg !2323, !range !2171, !noundef !23
  br label %bb15, !dbg !2323

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5bfff8f27a8cb229E"(), !dbg !2294
  br label %bb16, !dbg !2294

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !2294
  store i64 0, i64* %15, align 8, !dbg !2294
  br label %bb7, !dbg !2325

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !2325
  %17 = load i64, i64* %16, align 8, !dbg !2325
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !2325
  %19 = load i64, i64* %18, align 8, !dbg !2325, !range !2195, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !2325
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !2325
  ret { i64, i64 } %21, !dbg !2325

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17hc30ce28b3d614478E(i64 %val, i64 %_14), !dbg !2326
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !2326
  br label %bb6, !dbg !2326

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !2325
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hd3a30fbd2fa28250E"(i64* align 8 %self) unnamed_addr #0 !dbg !2327 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !2335, metadata !DIExpression()), !dbg !2336
  %0 = load i64, i64* %self, align 8, !dbg !2337
  ret i64 %0, !dbg !2338
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h6a2c828c3ba02e68E"([0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2339 {
start:
  %ptr.dbg.spill10 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill9 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %3 = alloca { i8*, i8* }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2344, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2347, metadata !DIExpression()), !dbg !2350
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !2351, metadata !DIExpression()), !dbg !2358
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !2371
  store [0 x i8]* %slice.0, [0 x i8]** %6, align 8, !dbg !2371
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !2371
  store i64 %slice.1, i64* %7, align 8, !dbg !2371
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2372, metadata !DIExpression()), !dbg !2378
  %ptr = bitcast [0 x i8]* %slice.0 to i8*, !dbg !2378
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2378
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2345, metadata !DIExpression()), !dbg !2379
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !2370
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !2368, metadata !DIExpression()), !dbg !2380
  store i8* %ptr, i8** %self.dbg.spill2, align 8, !dbg !2380
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !2381, metadata !DIExpression()), !dbg !2388
  %8 = bitcast {}** %2 to i64*, !dbg !2390
  store i64 0, i64* %8, align 8, !dbg !2390
  %data_address = load {}*, {}** %2, align 8, !dbg !2390
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2390
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2357, metadata !DIExpression()), !dbg !2358
  br label %bb5, !dbg !2390

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !2358
  store {}* %data_address, {}** %9, align 8, !dbg !2358
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !2358
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !2358
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !2358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !2358
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !2358
  %other = load i8*, i8** %13, align 8, !dbg !2358
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !2358
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2387, metadata !DIExpression()), !dbg !2388
  %14 = icmp eq i8* %ptr, %other, !dbg !2388
  %15 = zext i1 %14 to i8, !dbg !2388
  store i8 %15, i8* %1, align 1, !dbg !2388
  %16 = load i8, i8* %1, align 1, !dbg !2388, !range !505, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !2388
  br label %bb6, !dbg !2388

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !2398
  call void @llvm.assume(i1 %_5), !dbg !2399
  br label %bb1, !dbg !2399

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !2400

bb2:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill6, align 8, !dbg !2401
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !2402, metadata !DIExpression()), !dbg !2407
  store i64 %slice.1, i64* %count.dbg.spill7, align 8, !dbg !2408
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !2406, metadata !DIExpression()), !dbg !2407
  store i8* %ptr, i8** %self.dbg.spill8, align 8, !dbg !2407
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !2409, metadata !DIExpression()), !dbg !2414
  store i64 %slice.1, i64* %count.dbg.spill9, align 8, !dbg !2407
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill9, metadata !2413, metadata !DIExpression()), !dbg !2414
  %17 = getelementptr i8, i8* %ptr, i64 %slice.1, !dbg !2414
  store i8* %17, i8** %0, align 8, !dbg !2414
  %_10 = load i8*, i8** %0, align 8, !dbg !2414
  br label %bb7, !dbg !2414

bb3:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !2416
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !2417, metadata !DIExpression()), !dbg !2422
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !2423
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2421, metadata !DIExpression()), !dbg !2422
  store i8* %ptr, i8** %self.dbg.spill4, align 8, !dbg !2422
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !2424, metadata !DIExpression()), !dbg !2429
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !2422
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !2428, metadata !DIExpression()), !dbg !2429
  %18 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1, !dbg !2429
  store i8* %18, i8** %end, align 8, !dbg !2429
  br label %bb8, !dbg !2429

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !2431

bb4:                                              ; preds = %bb7, %bb8
  store i8* %ptr, i8** %ptr.dbg.spill10, align 8, !dbg !2432
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill10, metadata !2433, metadata !DIExpression()), !dbg !2437
  store i8* %ptr, i8** %_18, align 8, !dbg !2437
  %_21 = load i8*, i8** %end, align 8, !dbg !2439
  %19 = bitcast { i8*, i8* }* %3 to i8**, !dbg !2440
  %20 = load i8*, i8** %_18, align 8, !dbg !2440, !nonnull !23, !noundef !23
  store i8* %20, i8** %19, align 8, !dbg !2440
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !2440
  store i8* %_21, i8** %21, align 8, !dbg !2440
  %22 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0, !dbg !2441
  %23 = load i8*, i8** %22, align 8, !dbg !2441, !nonnull !23, !noundef !23
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !2441
  %25 = load i8*, i8** %24, align 8, !dbg !2441
  %26 = insertvalue { i8*, i8* } undef, i8* %23, 0, !dbg !2441
  %27 = insertvalue { i8*, i8* } %26, i8* %25, 1, !dbg !2441
  ret { i8*, i8* } %27, !dbg !2441

bb7:                                              ; preds = %bb2
  store i8* %_10, i8** %end, align 8, !dbg !2401
  br label %bb4, !dbg !2431
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core6option15Option$LT$T$GT$3map17h4faef3789a1c70e1E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !2442 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !2463, metadata !DIExpression()), !dbg !2470
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %f.dbg.spill, metadata !2464, metadata !DIExpression()), !dbg !2471
  store i8 1, i8* %_9, align 1, !dbg !2472
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !2472
  %6 = load i32, i32* %5, align 4, !dbg !2472, !range !1327, !noundef !23
  %_3 = zext i32 %6 to i64, !dbg !2472
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2473

bb2:                                              ; preds = %start
  unreachable, !dbg !2472

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4, !dbg !2474
  br label %bb7, !dbg !2474

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !2475
  %x = load i32, i32* %7, align 4, !dbg !2475
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !2475
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !2465, metadata !DIExpression()), !dbg !2476
  store i8 0, i8* %_9, align 1, !dbg !2477
  store i32 %x, i32* %_7, align 4, !dbg !2477
  %8 = load i32, i32* %_7, align 4, !dbg !2477
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h00b9a47e61eb0887E"(i32 %8), !dbg !2477, !range !2478
  br label %bb4, !dbg !2477

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4, !dbg !2479
  br label %bb7, !dbg !2480

bb7:                                              ; preds = %bb1, %bb4
  %9 = load i8, i8* %_9, align 1, !dbg !2481, !range !505, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !2481
  br i1 %10, label %bb6, label %bb5, !dbg !2481

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i32, i32* %2, align 4, !dbg !2482, !range !2483, !noundef !23
  ret i32 %11, !dbg !2482

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2481
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1c463d819f51973fE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2484 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %e = alloca %"alloc::ffi::c_str::NulError", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self, metadata !2503, metadata !DIExpression()), !dbg !2508
  call void @llvm.dbg.declare(metadata %"alloc::ffi::c_str::NulError"* %e, metadata !2506, metadata !DIExpression()), !dbg !2509
  %2 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self to i64*, !dbg !2510
  %_2 = load i64, i64* %2, align 8, !dbg !2510, !range !865, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2511

bb2:                                              ; preds = %start
  unreachable, !dbg !2510

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"*, !dbg !2512
  %4 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"* %3, i32 0, i32 1, !dbg !2512
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 0, !dbg !2512
  %t.0 = load i8*, i8** %5, align 8, !dbg !2512, !nonnull !23, !align !891, !noundef !23
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 1, !dbg !2512
  %t.1 = load i64, i64* %6, align 8, !dbg !2512
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2512
  store i8* %t.0, i8** %7, align 8, !dbg !2512
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2512
  store i64 %t.1, i64* %8, align 8, !dbg !2512
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !2504, metadata !DIExpression()), !dbg !2513
  %9 = insertvalue { i8*, i64 } undef, i8* %t.0, 0, !dbg !2514
  %10 = insertvalue { i8*, i64 } %9, i64 %t.1, 1, !dbg !2514
  ret { i8*, i64 } %10, !dbg !2514

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"*, !dbg !2515
  %12 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"* %11, i32 0, i32 1, !dbg !2515
  %13 = bitcast %"alloc::ffi::c_str::NulError"* %e to i8*, !dbg !2515
  %14 = bitcast %"alloc::ffi::c_str::NulError"* %12 to i8*, !dbg !2515
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 32, i1 false), !dbg !2515
  %_7.0 = bitcast %"alloc::ffi::c_str::NulError"* %e to {}*, !dbg !2516
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc566 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.1 to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #15
          to label %unreachable unwind label %cleanup, !dbg !2517

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::NulError>
  invoke void @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17hd06c3484267b3946E"(%"alloc::ffi::c_str::NulError"* %e) #16
          to label %bb5 unwind label %abort, !dbg !2518

cleanup:                                          ; preds = %bb1
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %20 = landingpad { i8*, i32 }
          cleanup, !dbg !2519
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !2519
  unreachable, !dbg !2519

bb5:                                              ; preds = %bb4
  %21 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2519
  %22 = load i8*, i8** %21, align 8, !dbg !2519
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2519
  %24 = load i32, i32* %23, align 8, !dbg !2519
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0, !dbg !2519
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1, !dbg !2519
  resume { i8*, i32 } %26, !dbg !2519
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h657c06880f59f018E(i8 %kind, double* align 8 %0, double* align 8 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !2520 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca double*, align 8
  %left = alloca double*, align 8
  store double* %0, double** %left, align 8
  store double* %1, double** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2538, metadata !DIExpression()), !dbg !2544
  call void @llvm.dbg.declare(metadata double** %left, metadata !2539, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.declare(metadata double** %right, metadata !2540, metadata !DIExpression()), !dbg !2546
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !2541, metadata !DIExpression()), !dbg !2547
  %_7.0 = bitcast double** %left to {}*, !dbg !2548
  %_10.0 = bitcast double** %right to {}*, !dbg !2549
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !2550
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !2550
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2550
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #15, !dbg !2551
  unreachable, !dbg !2551
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 %kind, i32* align 4 %0, i32* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !2552 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca i32*, align 8
  %left = alloca i32*, align 8
  store i32* %0, i32** %left, align 8
  store i32* %1, i32** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2556, metadata !DIExpression()), !dbg !2562
  call void @llvm.dbg.declare(metadata i32** %left, metadata !2557, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.declare(metadata i32** %right, metadata !2558, metadata !DIExpression()), !dbg !2564
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !2559, metadata !DIExpression()), !dbg !2565
  %_7.0 = bitcast i32** %left to {}*, !dbg !2566
  %_10.0 = bitcast i32** %right to {}*, !dbg !2567
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !2568
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !2568
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2568
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #15, !dbg !2569
  unreachable, !dbg !2569
}

; test::assert_test_result
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4test18assert_test_result17h06d890d4de79c7ceE() unnamed_addr #2 !dbg !2570 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i32*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca i32*, align 8
  %x.dbg.spill = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %result.dbg.spill = alloca {}, align 1
  %_30 = alloca { i8*, i64* }, align 8
  %_29 = alloca [1 x { i8*, i64* }], align 8
  %_22 = alloca %"core::fmt::Arguments", align 8
  %_21 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %_5 = alloca { i32*, i32* }, align 8
  %self = alloca i8, align 1
  %code = alloca i32, align 4
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !2574, metadata !DIExpression()), !dbg !2585
  call void @llvm.dbg.declare(metadata i32* %code, metadata !2575, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.declare(metadata i8* %self, metadata !2587, metadata !DIExpression()), !dbg !2591
; call <() as std::process::Termination>::report
  %2 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17he2d2acc5dba4a248E"(), !dbg !2592
  store i8 %2, i8* %self, align 1, !dbg !2592
  br label %bb1, !dbg !2592

bb1:                                              ; preds = %start
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !2591
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2593, metadata !DIExpression()), !dbg !2597
  %_36 = load i8, i8* %self, align 1, !dbg !2597
  %3 = zext i8 %_36 to i32, !dbg !2597
  store i32 %3, i32* %code, align 4, !dbg !2597
  %4 = bitcast { i32*, i32* }* %_5 to i32**, !dbg !2599
  store i32* %code, i32** %4, align 8, !dbg !2599
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1, !dbg !2599
  store i32* bitcast (<{ [4 x i8] }>* @alloc172 to i32*), i32** %5, align 8, !dbg !2599
  %6 = bitcast { i32*, i32* }* %_5 to i32**, !dbg !2599
  %left_val = load i32*, i32** %6, align 8, !dbg !2599, !nonnull !23, !align !394, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !2599
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !2577, metadata !DIExpression()), !dbg !2600
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1, !dbg !2599
  %right_val = load i32*, i32** %7, align 8, !dbg !2599, !nonnull !23, !align !394, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !2599
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !2581, metadata !DIExpression()), !dbg !2600
  %_12 = load i32, i32* %left_val, align 4, !dbg !2600
  %_13 = load i32, i32* %right_val, align 4, !dbg !2600
  %_11 = icmp eq i32 %_12, %_13, !dbg !2600
  %_10 = xor i1 %_11, true, !dbg !2600
  br i1 %_10, label %bb2, label %bb4, !dbg !2600

bb4:                                              ; preds = %bb1
  ret void, !dbg !2601

bb2:                                              ; preds = %bb1
  store i32* %code, i32** %x.dbg.spill, align 8, !dbg !2602
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill, metadata !2603, metadata !DIExpression()), !dbg !2609
  store i32* %code, i32** %x.dbg.spill1, align 8, !dbg !2609
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill1, metadata !2611, metadata !DIExpression()), !dbg !2619
  store i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE", i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !2609
  call void @llvm.dbg.declare(metadata i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !2618, metadata !DIExpression()), !dbg !2619
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !2619
  %_39 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !2619, !nonnull !23, !noundef !23
  br label %bb5, !dbg !2619

bb5:                                              ; preds = %bb2
  %8 = bitcast i32* %code to %"core::fmt::Opaque"*, !dbg !2619
  store %"core::fmt::Opaque"* %8, %"core::fmt::Opaque"** %0, align 8, !dbg !2619
  %_41 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !2619, !nonnull !23, !align !891, !noundef !23
  br label %bb6, !dbg !2619

bb6:                                              ; preds = %bb5
  %9 = bitcast { i8*, i64* }* %_30 to %"core::fmt::Opaque"**, !dbg !2619
  store %"core::fmt::Opaque"* %_41, %"core::fmt::Opaque"** %9, align 8, !dbg !2619
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 1, !dbg !2619
  %11 = bitcast i64** %10 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !2619
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_39, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %11, align 8, !dbg !2619
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 0, !dbg !2602
  %13 = load i8*, i8** %12, align 8, !dbg !2602, !nonnull !23, !align !891, !noundef !23
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 1, !dbg !2602
  %15 = load i64*, i64** %14, align 8, !dbg !2602, !nonnull !23, !noundef !23
  %16 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_29, i64 0, i64 0, !dbg !2602
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 0, !dbg !2602
  store i8* %13, i8** %17, align 8, !dbg !2602
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 1, !dbg !2602
  store i64* %15, i64** %18, align 8, !dbg !2602
  %_26.0 = bitcast [1 x { i8*, i64* }]* %_29 to [0 x { i8*, i64* }]*, !dbg !2602
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h1abf688bf72f1613E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_22, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc150 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_26.0, i64 1), !dbg !2602
  br label %bb3, !dbg !2602

bb3:                                              ; preds = %bb6
  %19 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_21 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !2602
  %20 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %19 to %"core::fmt::Arguments"*, !dbg !2602
  %21 = bitcast %"core::fmt::Arguments"* %20 to i8*, !dbg !2602
  %22 = bitcast %"core::fmt::Arguments"* %_22 to i8*, !dbg !2602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 48, i1 false), !dbg !2602
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_21, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc577 to %"core::panic::location::Location"*)) #15, !dbg !2602
  unreachable, !dbg !2602
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5bfff8f27a8cb229E"() unnamed_addr #2 !dbg !2621 {
start:
  %t.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %t.dbg.spill, metadata !2627, metadata !DIExpression()), !dbg !2630
  ret void, !dbg !2631
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h278858b7010f978aE"(i8* %self) unnamed_addr #2 !dbg !2632 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2635, metadata !DIExpression()), !dbg !2639
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hb17d977b9330e67cE"(i8* %self), !dbg !2640
  br label %bb1, !dbg !2640

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !2641
}

; <() as std::process::Termination>::report
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17he2d2acc5dba4a248E"() unnamed_addr #0 !dbg !2642 {
start:
  %self.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %self.dbg.spill, metadata !2647, metadata !DIExpression()), !dbg !2648
  ret i8 0, !dbg !2649
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd40404a44a279b2dE"(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher") %0, [0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !2650 {
start:
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2680, metadata !DIExpression()), !dbg !2682
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !2681, metadata !DIExpression()), !dbg !2683
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h13dd5abbb92d502eE(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher") %0, [0 x i8]* align 1 %haystack.0, i64 %haystack.1, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !2684
  br label %bb1, !dbg !2684

bb1:                                              ; preds = %start
  ret void, !dbg !2685
}

; alloc::ffi::c_str::CString::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc3ffi5c_str7CString3new17h7396a6d41c1bb395E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %0, [0 x i8]* align 1 %t.0, i64 %t.1) unnamed_addr #2 !dbg !2686 {
start:
  %t.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 0
  store [0 x i8]* %t.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %t.dbg.spill, metadata !2691, metadata !DIExpression()), !dbg !2692
; call <&str as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
  call void @"_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h2b2077657056158aE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %0, [0 x i8]* align 1 %t.0, i64 %t.1), !dbg !2693
  br label %bb1, !dbg !2693

bb1:                                              ; preds = %start
  ret void, !dbg !2694
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h25e70bc17883dcaeE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !2695 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !2701, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !2705, metadata !DIExpression()), !dbg !2713
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !2729
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !2729
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !2730, metadata !DIExpression()), !dbg !2738
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !2738
  %self3 = load i8*, i8** %2, align 8, !dbg !2738, !nonnull !23, !noundef !23
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !2738
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !2739, metadata !DIExpression()), !dbg !2743
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !2743
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2745, metadata !DIExpression()), !dbg !2749
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !2749
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2702, metadata !DIExpression()), !dbg !2751
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !2728
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !2726, metadata !DIExpression()), !dbg !2752
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !2752
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !2753, metadata !DIExpression()), !dbg !2760
  %3 = bitcast {}** %1 to i64*, !dbg !2762
  store i64 0, i64* %3, align 8, !dbg !2762
  %data_address = load {}*, {}** %1, align 8, !dbg !2762
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2762
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2712, metadata !DIExpression()), !dbg !2713
  br label %bb2, !dbg !2762

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !2713
  store {}* %data_address, {}** %4, align 8, !dbg !2713
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !2713
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !2713
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !2713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !2713
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !2713
  %other = load i8*, i8** %8, align 8, !dbg !2713
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !2713
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2759, metadata !DIExpression()), !dbg !2760
  %9 = icmp eq i8* %self3, %other, !dbg !2760
  %10 = zext i1 %9 to i8, !dbg !2760
  store i8 %10, i8* %0, align 1, !dbg !2760
  %11 = load i8, i8* %0, align 1, !dbg !2760, !range !505, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !2760
  br label %bb3, !dbg !2760

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !2770
  call void @llvm.assume(i1 %_4), !dbg !2771
  br label %bb1, !dbg !2771

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !2772
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hff0ed9975f7a7ec0E(i8* %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2773 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64 }, align 8
  %self.dbg.spill14 = alloca { i8*, i64 }, align 8
  %self.dbg.spill13 = alloca { i8*, i64 }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64 }, align 8
  %self.dbg.spill4 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64 }, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr, metadata !2786, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !2787, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2792, metadata !DIExpression()), !dbg !2796
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !2797, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !2803, metadata !DIExpression()), !dbg !2810
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill, align 8, !dbg !2821
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2822, metadata !DIExpression()), !dbg !2829
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !2829
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !2830, metadata !DIExpression()), !dbg !2837
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !2837
  %self.0 = load i8*, i8** %8, align 8, !dbg !2837, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !2837
  %self.1 = load i64, i64* %9, align 8, !dbg !2837
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2837
  store i8* %self.0, i8** %10, align 8, !dbg !2837
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2837
  store i64 %self.1, i64* %11, align 8, !dbg !2837
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !2839, metadata !DIExpression()), !dbg !2849
  %_22.0 = bitcast i8* %self.0 to [0 x i8]*, !dbg !2849
  %12 = mul nsw i64 %self.1, 1, !dbg !2851
  store i64 %12, i64* %5, align 8, !dbg !2851
  %size = load i64, i64* %5, align 8, !dbg !2851
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !2851
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2788, metadata !DIExpression()), !dbg !2852
  br label %bb1, !dbg !2851

bb1:                                              ; preds = %start
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill3, align 8, !dbg !2853
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill3, metadata !2854, metadata !DIExpression()), !dbg !2858
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill4, align 8, !dbg !2858
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill4, metadata !2859, metadata !DIExpression()), !dbg !2863
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !2863
  %self.05 = load i8*, i8** %13, align 8, !dbg !2863, !nonnull !23, !noundef !23
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !2863
  %self.16 = load i64, i64* %14, align 8, !dbg !2863
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !2863
  store i8* %self.05, i8** %15, align 8, !dbg !2863
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !2863
  store i64 %self.16, i64* %16, align 8, !dbg !2863
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill7, metadata !2865, metadata !DIExpression()), !dbg !2869
  %_26.0 = bitcast i8* %self.05 to [0 x i8]*, !dbg !2869
  %17 = mul nsw i64 %self.16, 1, !dbg !2871
  store i64 1, i64* %4, align 8, !dbg !2871
  %align = load i64, i64* %4, align 8, !dbg !2871
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !2871
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !2790, metadata !DIExpression()), !dbg !2872
  br label %bb2, !dbg !2871

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !2873
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !2874, metadata !DIExpression()), !dbg !2881
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !2883
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !2880, metadata !DIExpression()), !dbg !2881
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !2881
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !2884, metadata !DIExpression()), !dbg !2891
  store i64 %align, i64* %3, align 8, !dbg !2891
  %_28 = load i64, i64* %3, align 8, !dbg !2891, !range !2171, !noundef !23
  br label %bb7, !dbg !2891

bb7:                                              ; preds = %bb2
  %18 = bitcast { i64, i64 }* %layout to i64*, !dbg !2881
  store i64 %size, i64* %18, align 8, !dbg !2881
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2881
  store i64 %_28, i64* %19, align 8, !dbg !2881
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !2820
  %self.011 = load i8*, i8** %20, align 8, !dbg !2820, !nonnull !23, !noundef !23
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !2820
  %self.112 = load i64, i64* %21, align 8, !dbg !2820
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !2820
  store i8* %self.011, i8** %22, align 8, !dbg !2820
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !2820
  store i64 %self.112, i64* %23, align 8, !dbg !2820
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill13, metadata !2816, metadata !DIExpression()), !dbg !2893
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !2893
  store i8* %self.011, i8** %24, align 8, !dbg !2893
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !2893
  store i64 %self.112, i64* %25, align 8, !dbg !2893
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill14, metadata !2894, metadata !DIExpression()), !dbg !2900
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 0, !dbg !2900
  store i8* %self.011, i8** %26, align 8, !dbg !2900
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 1, !dbg !2900
  store i64 %self.112, i64* %27, align 8, !dbg !2900
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill15, metadata !2902, metadata !DIExpression()), !dbg !2906
  %_37.0 = bitcast i8* %self.011 to [0 x i8]*, !dbg !2906
  %ptr16 = bitcast [0 x i8]* %_37.0 to i8*, !dbg !2900
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !2900
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2908, metadata !DIExpression()), !dbg !2912
  store i8* %ptr16, i8** %pointer, align 8, !dbg !2912
  %_41 = load i8*, i8** %pointer, align 8, !dbg !2810, !nonnull !23, !noundef !23
  store i8* %_41, i8** %unique, align 8, !dbg !2810
  %self = load i8*, i8** %unique, align 8, !dbg !2801, !nonnull !23, !noundef !23
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !2801
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !2914, metadata !DIExpression()), !dbg !2918
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !2918
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !2920, metadata !DIExpression()), !dbg !2924
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !2924
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !2926, metadata !DIExpression()), !dbg !2930
  store i8* %self, i8** %_15, align 8, !dbg !2930
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2932
  %_18.0 = load i64, i64* %28, align 8, !dbg !2932
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2932
  %_18.1 = load i64, i64* %29, align 8, !dbg !2932, !range !2171, !noundef !23
  %30 = load i8*, i8** %_15, align 8, !dbg !2933, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17had23d52f6a466459E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %30, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !2933

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !2934

cleanup:                                          ; preds = %bb7
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !2934

bb6:                                              ; preds = %bb5
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !2935
  %37 = load i8*, i8** %36, align 8, !dbg !2935
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !2935
  %39 = load i32, i32* %38, align 8, !dbg !2935
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !2935
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !2935
  resume { i8*, i32 } %41, !dbg !2935

bb4:                                              ; preds = %bb3
  ret void, !dbg !2936
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h572fdba627a57ca0E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i8*, i64 }* align 8 %self) unnamed_addr #2 !dbg !2937 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2958, metadata !DIExpression()), !dbg !2961
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2962, metadata !DIExpression()), !dbg !2971
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !2973, metadata !DIExpression()), !dbg !2977
  br i1 false, label %bb1, label %bb2, !dbg !2986

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !2986
  br label %bb3, !dbg !2986

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2987
  %_5 = load i64, i64* %1, align 8, !dbg !2987
  %_4 = icmp eq i64 %_5, 0, !dbg !2987
  %2 = zext i1 %_4 to i8, !dbg !2986
  store i8 %2, i8* %_2, align 1, !dbg !2986
  br label %bb3, !dbg !2986

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !2986, !range !505, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !2986
  br i1 %4, label %bb4, label %bb5, !dbg !2986

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2988
  %_8 = load i64, i64* %5, align 8, !dbg !2988
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h1a1ed60865c4d910E(i64 %_8), !dbg !2972
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !2972
  br label %bb6, !dbg !2972

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !2989
  store i64 0, i64* %7, align 8, !dbg !2989
  br label %bb8, !dbg !2990

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !2991

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2971
  %9 = load i64, i64* %8, align 8, !dbg !2971, !range !2195, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !2971
  %_15 = select i1 %10, i64 1, i64 0, !dbg !2971
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !2971

bb10:                                             ; preds = %bb6
  unreachable, !dbg !2971

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !2971
  %t.0 = load i64, i64* %11, align 8, !dbg !2971
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2971
  %t.1 = load i64, i64* %12, align 8, !dbg !2971, !range !2171, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2971
  store i64 %t.0, i64* %13, align 8, !dbg !2971
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2971
  store i64 %t.1, i64* %14, align 8, !dbg !2971
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2968, metadata !DIExpression()), !dbg !2992
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !2992
  store i64 %t.0, i64* %15, align 8, !dbg !2992
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !2992
  store i64 %t.1, i64* %16, align 8, !dbg !2992
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2959, metadata !DIExpression()), !dbg !2993
  %17 = bitcast { i8*, i64 }* %self to i8**, !dbg !2985
  %self2 = load i8*, i8** %17, align 8, !dbg !2985, !nonnull !23, !noundef !23
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !2985
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !2983, metadata !DIExpression()), !dbg !2994
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !2994
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !2995, metadata !DIExpression()), !dbg !3001
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !3001
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !3003, metadata !DIExpression()), !dbg !3007
  store i8* %self2, i8** %ptr.dbg.spill, align 8, !dbg !3001
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3009, metadata !DIExpression()), !dbg !3013
  store i8* %self2, i8** %pointer, align 8, !dbg !3013
  %_26 = load i8*, i8** %pointer, align 8, !dbg !2977, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !2977
  %18 = load i8*, i8** %_11, align 8, !dbg !2985, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h278858b7010f978aE"(i8* %18), !dbg !2985
  br label %bb7, !dbg !2985

bb9:                                              ; preds = %bb6
  unreachable, !dbg !3015

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !3019
  store i8* %_10, i8** %19, align 8, !dbg !3019
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !3019
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !3019
  store i64 %t.0, i64* %21, align 8, !dbg !3019
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !3019
  store i64 %t.1, i64* %22, align 8, !dbg !3019
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3020
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !3020
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !3020
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !3020
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !3020
  br label %bb8, !dbg !2990
}

; <core::ffi::VaListImpl as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %0, %"core::ffi::VaListImpl"* align 8 %self) unnamed_addr #0 !dbg !3021 {
start:
  %self.dbg.spill2 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"*, align 8
  %self.dbg.spill = alloca %"core::ffi::VaListImpl"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>", align 8
  %self1 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>", align 8
  %dest = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>", align 8
  store %"core::ffi::VaListImpl"* %self, %"core::ffi::VaListImpl"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"** %self.dbg.spill, metadata !3027, metadata !DIExpression()), !dbg !3037
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %dest, metadata !3028, metadata !DIExpression()), !dbg !3038
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %self1, metadata !3039, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot, metadata !3047, metadata !DIExpression()), !dbg !3053
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %dest to {}*, !dbg !3055
  store %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %dest, %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"** %self.dbg.spill2, align 8, !dbg !3061
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"** %self.dbg.spill2, metadata !3062, metadata !DIExpression()), !dbg !3069
  %_4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %dest to %"core::ffi::VaListImpl"*, !dbg !3069
  %2 = bitcast %"core::ffi::VaListImpl"* %_4 to i8*, !dbg !3070
  %3 = bitcast %"core::ffi::VaListImpl"* %self to i8*, !dbg !3070
  call void @llvm.va_copy(i8* %2, i8* %3), !dbg !3070
  br label %bb1, !dbg !3070

bb1:                                              ; preds = %start
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %self1 to i8*, !dbg !3046
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %dest to i8*, !dbg !3046
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !3046
  br label %bb2, !dbg !3045

bb2:                                              ; preds = %bb1
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %self1 to %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"*, !dbg !3045
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot to i8*, !dbg !3045
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %6 to i8*, !dbg !3045
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !3045
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot to %"core::ffi::VaListImpl"*, !dbg !3053
  %10 = bitcast %"core::ffi::VaListImpl"* %0 to i8*, !dbg !3053
  %11 = bitcast %"core::ffi::VaListImpl"* %9 to i8*, !dbg !3053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !3053
  ret void, !dbg !3071
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17had23d52f6a466459E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !3072 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !3078, metadata !DIExpression()), !dbg !3081
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3079, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3080, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !3084, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !3092, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !3106, metadata !DIExpression()), !dbg !3110
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !3111
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !3112, metadata !DIExpression()), !dbg !3116
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !3116
  %_4 = load i64, i64* %4, align 8, !dbg !3116
  %5 = icmp eq i64 %_4, 0, !dbg !3111
  br i1 %5, label %bb2, label %bb1, !dbg !3111

bb2:                                              ; preds = %start
  br label %bb3, !dbg !3117

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !3118
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !3119, metadata !DIExpression()), !dbg !3123
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !3123
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !3089, metadata !DIExpression()), !dbg !3090
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3124
  %7 = load i64, i64* %6, align 8, !dbg !3124
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3124
  %9 = load i64, i64* %8, align 8, !dbg !3124, !range !2171, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !3124
  store i64 %7, i64* %10, align 8, !dbg !3124
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !3124
  store i64 %9, i64* %11, align 8, !dbg !3124
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !3090
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !3125, metadata !DIExpression()), !dbg !3129
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !3129
  %_11 = load i64, i64* %12, align 8, !dbg !3129
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !3090
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !3103, metadata !DIExpression()), !dbg !3131
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !3131
  %14 = load i64, i64* %13, align 8, !dbg !3131, !range !2171, !noundef !23
  store i64 %14, i64* %self3, align 8, !dbg !3131
  %_18 = load i64, i64* %self3, align 8, !dbg !3110, !range !2171, !noundef !23
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !3110
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3132, metadata !DIExpression()), !dbg !3139
  store i64 %_18, i64* %self2, align 8, !dbg !3139
  %_13 = load i64, i64* %self2, align 8, !dbg !3096
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #18, !dbg !3090
  br label %bb4, !dbg !3090

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !3117

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !3141
}

; <core::ffi::VaList as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 %"core::ffi::VaListImpl"* @"_ZN64_$LT$core..ffi..VaList$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h06a960b63165b6c6E"(i64** align 8 %self) unnamed_addr #0 !dbg !3142 {
start:
  %self.dbg.spill = alloca i64**, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !3148, metadata !DIExpression()), !dbg !3149
  %_3 = bitcast i64** %self to %"core::ffi::VaListImpl"**, !dbg !3150
  %_4 = load %"core::ffi::VaListImpl"*, %"core::ffi::VaListImpl"** %_3, align 8, !dbg !3150, !nonnull !23, !align !294, !noundef !23
  ret %"core::ffi::VaListImpl"* %_4, !dbg !3151
}

; <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4267592d6ad554dbE"({ i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !3152 {
start:
  %0 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3158, metadata !DIExpression()), !dbg !3159
  %1 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !3160
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !3160
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !3160, !nonnull !23, !align !891, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !3160
  %_4.1 = load i64, i64* %3, align 8, !dbg !3160
  %4 = bitcast [0 x i8]* %_4.0 to i8*, !dbg !3160
  %_5.0 = bitcast i8* %4 to [0 x i8]*, !dbg !3160
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !3160
  store [0 x i8]* %_5.0, [0 x i8]** %5, align 8, !dbg !3160
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !3160
  store i64 %_4.1, i64* %6, align 8, !dbg !3160
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !3161, metadata !DIExpression()), !dbg !3173
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !3173
  store [0 x i8]* %_5.0, [0 x i8]** %7, align 8, !dbg !3173
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !3173
  store i64 %_4.1, i64* %8, align 8, !dbg !3173
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !3174, metadata !DIExpression()), !dbg !3193
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !3193
  store [0 x i8]* %_5.0, [0 x i8]** %9, align 8, !dbg !3193
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !3193
  store i64 %_4.1, i64* %10, align 8, !dbg !3193
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !3195, metadata !DIExpression()), !dbg !3202
  %self3 = bitcast [0 x i8]* %_5.0 to i8*, !dbg !3202
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !3202
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !3204, metadata !DIExpression()), !dbg !3211
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !3211
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !3212, metadata !DIExpression()), !dbg !3219
  %11 = getelementptr inbounds i8, i8* %self3, i64 0, !dbg !3219
  store i8* %11, i8** %0, align 8, !dbg !3219
  %_20 = load i8*, i8** %0, align 8, !dbg !3219
  br label %bb1, !dbg !3219

bb1:                                              ; preds = %start
  store i8 0, i8* %_20, align 1, !dbg !3221
  ret void, !dbg !3222
}

; <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !3223 {
start:
  %bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_8 = alloca { i8*, i64 }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3229, metadata !DIExpression()), !dbg !3230
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !3231
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !3232, metadata !DIExpression()), !dbg !3237
  %_5 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !3237
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 0, !dbg !3237
  %_6.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !3237, !nonnull !23, !align !891, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_5, i32 0, i32 1, !dbg !3237
  %_6.1 = load i64, i64* %1, align 8, !dbg !3237
  %2 = bitcast [0 x i8]* %_6.0 to i8*, !dbg !3237
  %_7.0 = bitcast i8* %2 to [0 x i8]*, !dbg !3237
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 0, !dbg !3231
  store [0 x i8]* %_7.0, [0 x i8]** %3, align 8, !dbg !3231
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 1, !dbg !3231
  store i64 %_6.1, i64* %4, align 8, !dbg !3231
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %bytes.dbg.spill, metadata !3238, metadata !DIExpression()), !dbg !3242
  %5 = bitcast { i8*, i64 }* %_8 to { [0 x i8]*, i64 }*, !dbg !3242
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !3242
  store [0 x i8]* %_7.0, [0 x i8]** %6, align 8, !dbg !3242
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !3242
  store i64 %_6.1, i64* %7, align 8, !dbg !3242
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_8, i32 0, i32 0, !dbg !3242
  %9 = load i8*, i8** %8, align 8, !dbg !3242, !nonnull !23, !align !891, !noundef !23
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_8, i32 0, i32 1, !dbg !3242
  %11 = load i64, i64* %10, align 8, !dbg !3242
; call core::intrinsics::const_eval_select
  %12 = call { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core10intrinsics17const_eval_select17h168407bbf0f28c3dE(i8* align 1 %9, i64 %11), !dbg !3242
  %13 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %12, 0, !dbg !3242
  %14 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %12, 1, !dbg !3242
  br label %bb1, !dbg !3242

bb1:                                              ; preds = %start
  %15 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } undef, %"core::ffi::c_str::CStr"* %13, 0, !dbg !3244
  %16 = insertvalue { %"core::ffi::c_str::CStr"*, i64 } %15, i64 %14, 1, !dbg !3244
  ret { %"core::ffi::c_str::CStr"*, i64 } %16, !dbg !3244
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf355b8d3bd7b28f5E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #2 !dbg !3245 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !3250, metadata !DIExpression()), !dbg !3251
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h25e70bc17883dcaeE"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !3252
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !3252
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3253, metadata !DIExpression()), !dbg !3260
  br label %bb1, !dbg !3252

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !3262
  %len = load i64, i64* %0, align 8, !dbg !3262
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !3262
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3259, metadata !DIExpression()), !dbg !3260
  store i8* %data, i8** %self.dbg.spill1, align 8, !dbg !3260
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !3263, metadata !DIExpression()), !dbg !3269
  %data_address = bitcast i8* %data to {}*, !dbg !3269
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3269
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3271, metadata !DIExpression()), !dbg !3278
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !3260
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !3277, metadata !DIExpression()), !dbg !3278
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !3278
  store {}* %data_address, {}** %1, align 8, !dbg !3278
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !3278
  store i64 %len, i64* %2, align 8, !dbg !3278
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { i8*, i64 }*, !dbg !3278
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !3278
  %5 = load i8*, i8** %4, align 8, !dbg !3278
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !3278
  %7 = load i64, i64* %6, align 8, !dbg !3278
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3278
  store i8* %5, i8** %8, align 8, !dbg !3278
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3278
  store i64 %7, i64* %9, align 8, !dbg !3278
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { [0 x i8]*, i64 }*, !dbg !3278
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !3278
  %_2.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !3278
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !3278
  %_2.1 = load i64, i64* %12, align 8, !dbg !3278
  br label %bb2, !dbg !3280

bb2:                                              ; preds = %bb1
  ret void, !dbg !3281
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17heeb6b4d4f761f61aE"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !3282 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %1 = alloca i8*, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3286, metadata !DIExpression()), !dbg !3288
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !3287, metadata !DIExpression()), !dbg !3289
  %_3 = icmp ult i64 %self, %slice.1, !dbg !3290
  br i1 %_3, label %bb1, label %bb2, !dbg !3290

bb2:                                              ; preds = %start
  %4 = bitcast i8** %1 to {}**, !dbg !3291
  store {}* null, {}** %4, align 8, !dbg !3291
  br label %bb3, !dbg !3292

bb1:                                              ; preds = %start
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !3293
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !3294, metadata !DIExpression()), !dbg !3309
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 0, !dbg !3310
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !3310
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 1, !dbg !3310
  store i64 %slice.1, i64* %6, align 8, !dbg !3310
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill2, metadata !3299, metadata !DIExpression()), !dbg !3309
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !3309
  store [0 x i8]* %slice.0, [0 x i8]** %7, align 8, !dbg !3309
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !3309
  store i64 %slice.1, i64* %8, align 8, !dbg !3309
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !3311, metadata !DIExpression()), !dbg !3315
  %self4 = bitcast [0 x i8]* %slice.0 to i8*, !dbg !3315
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !3315
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !3317, metadata !DIExpression()), !dbg !3322
  store i64 %self, i64* %count.dbg.spill, align 8, !dbg !3309
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !3321, metadata !DIExpression()), !dbg !3322
  store i8* %self4, i8** %self.dbg.spill6, align 8, !dbg !3322
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !3323, metadata !DIExpression()), !dbg !3328
  store i64 %self, i64* %count.dbg.spill7, align 8, !dbg !3322
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !3327, metadata !DIExpression()), !dbg !3328
  %9 = getelementptr inbounds i8, i8* %self4, i64 %self, !dbg !3328
  store i8* %9, i8** %0, align 8, !dbg !3328
  %_9 = load i8*, i8** %0, align 8, !dbg !3328
  br label %bb4, !dbg !3328

bb4:                                              ; preds = %bb1
  store i8* %_9, i8** %1, align 8, !dbg !3330
  br label %bb3, !dbg !3292

bb3:                                              ; preds = %bb2, %bb4
  %10 = load i8*, i8** %1, align 8, !dbg !3331, !align !891
  ret i8* %10, !dbg !3331
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1c28ae7813adc08cE"({ i8*, i64 }* align 8 %self) unnamed_addr #2 !dbg !3332 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !3338, metadata !DIExpression()), !dbg !3342
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h572fdba627a57ca0E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i8*, i64 }* align 8 %self), !dbg !3343
  br label %bb1, !dbg !3343

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !3344
  %1 = load i64, i64* %0, align 8, !dbg !3344, !range !2195, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !3344
  %_4 = select i1 %2, i64 0, i64 1, !dbg !3344
  %3 = icmp eq i64 %_4, 1, !dbg !3344
  br i1 %3, label %bb2, label %bb4, !dbg !3344

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3345
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !3345
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !3345
  %ptr = load i8*, i8** %6, align 8, !dbg !3345, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !3345
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3339, metadata !DIExpression()), !dbg !3345
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !3346
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !3346
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !3346
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3346
  %layout.0 = load i64, i64* %10, align 8, !dbg !3346
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3346
  %layout.1 = load i64, i64* %11, align 8, !dbg !3346, !range !2171, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !3346
  store i64 %layout.0, i64* %12, align 8, !dbg !3346
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !3346
  store i64 %layout.1, i64* %13, align 8, !dbg !3346
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3341, metadata !DIExpression()), !dbg !3346
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !3347
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17had23d52f6a466459E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !3347
  br label %bb3, !dbg !3347

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3348

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3349
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h26c97d8fb1832ad5E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::StrSearcher"* align 8 %self) unnamed_addr #0 !dbg !3350 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %4 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %is_long.dbg.spill = alloca i8, align 1
  %searcher.dbg.spill = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::StrSearcher"*, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  store %"core::str::pattern::StrSearcher"* %self, %"core::str::pattern::StrSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::StrSearcher"** %self.dbg.spill, metadata !3356, metadata !DIExpression()), !dbg !3364
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !3365
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to i64*, !dbg !3365
  %_2 = load i64, i64* %6, align 8, !dbg !3365, !range !865, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3366

bb2:                                              ; preds = %start
  unreachable, !dbg !3365

bb3:                                              ; preds = %start
  br label %bb4, !dbg !3367

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !3368
  %8 = bitcast %"core::str::pattern::StrSearcherImpl"* %7 to %"core::str::pattern::StrSearcherImpl::TwoWay"*, !dbg !3368
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %8, i32 0, i32 1, !dbg !3368
  store %"core::str::pattern::TwoWaySearcher"* %searcher, %"core::str::pattern::TwoWaySearcher"** %searcher.dbg.spill, align 8, !dbg !3368
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %searcher.dbg.spill, metadata !3360, metadata !DIExpression()), !dbg !3369
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6, !dbg !3370
  %_13 = load i64, i64* %9, align 8, !dbg !3370
  %is_long = icmp eq i64 %_13, -1, !dbg !3370
  %10 = zext i1 %is_long to i8, !dbg !3370
  store i8 %10, i8* %is_long.dbg.spill, align 1, !dbg !3370
  call void @llvm.dbg.declare(metadata i8* %is_long.dbg.spill, metadata !3362, metadata !DIExpression()), !dbg !3371
  br i1 %is_long, label %bb10, label %bb12, !dbg !3372

bb12:                                             ; preds = %bb1
  %11 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !3373
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !3373
  %_31.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !3373, !nonnull !23, !align !891, !noundef !23
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !3373
  %_31.1 = load i64, i64* %13, align 8, !dbg !3373
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !3373
  store [0 x i8]* %_31.0, [0 x i8]** %14, align 8, !dbg !3373
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !3373
  store i64 %_31.1, i64* %15, align 8, !dbg !3373
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !3374, metadata !DIExpression()), !dbg !3378
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !3378
  store [0 x i8]* %_31.0, [0 x i8]** %16, align 8, !dbg !3378
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !3378
  store i64 %_31.1, i64* %17, align 8, !dbg !3378
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !3378
  %_24.0 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !3378, !nonnull !23, !align !891, !noundef !23
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !3378
  %_24.1 = load i64, i64* %19, align 8, !dbg !3378
  br label %bb19, !dbg !3378

bb10:                                             ; preds = %bb1
  %20 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !3379
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !3379
  %_29.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !3379, !nonnull !23, !align !891, !noundef !23
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !3379
  %_29.1 = load i64, i64* %22, align 8, !dbg !3379
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !3379
  store [0 x i8]* %_29.0, [0 x i8]** %23, align 8, !dbg !3379
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !3379
  store i64 %_29.1, i64* %24, align 8, !dbg !3379
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !3380, metadata !DIExpression()), !dbg !3384
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !3384
  store [0 x i8]* %_29.0, [0 x i8]** %25, align 8, !dbg !3384
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !3384
  store i64 %_29.1, i64* %26, align 8, !dbg !3384
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !3384
  %_17.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !3384, !nonnull !23, !align !891, !noundef !23
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !3384
  %_17.1 = load i64, i64* %28, align 8, !dbg !3384
  br label %bb17, !dbg !3384

bb17:                                             ; preds = %bb10
  %29 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1, !dbg !3385
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !3385
  %_30.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !3385, !nonnull !23, !align !891, !noundef !23
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !3385
  %_30.1 = load i64, i64* %31, align 8, !dbg !3385
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !3385
  store [0 x i8]* %_30.0, [0 x i8]** %32, align 8, !dbg !3385
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !3385
  store i64 %_30.1, i64* %33, align 8, !dbg !3385
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !3386, metadata !DIExpression()), !dbg !3390
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !3390
  store [0 x i8]* %_30.0, [0 x i8]** %34, align 8, !dbg !3390
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !3390
  store i64 %_30.1, i64* %35, align 8, !dbg !3390
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !3390
  %_20.0 = load [0 x i8]*, [0 x i8]** %36, align 8, !dbg !3390, !nonnull !23, !align !891, !noundef !23
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !3390
  %_20.1 = load i64, i64* %37, align 8, !dbg !3390
  br label %bb18, !dbg !3390

bb18:                                             ; preds = %bb17
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h6962a7f9d502e88aE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %searcher, [0 x i8]* align 1 %_17.0, i64 %_17.1, [0 x i8]* align 1 %_20.0, i64 %_20.1, i1 zeroext true), !dbg !3391
  br label %bb11, !dbg !3391

bb11:                                             ; preds = %bb18
  br label %bb14, !dbg !3392

bb14:                                             ; preds = %bb13, %bb11
  br label %bb16, !dbg !3393

bb19:                                             ; preds = %bb12
  %38 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1, !dbg !3394
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 0, !dbg !3394
  %_32.0 = load [0 x i8]*, [0 x i8]** %39, align 8, !dbg !3394, !nonnull !23, !align !891, !noundef !23
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 1, !dbg !3394
  %_32.1 = load i64, i64* %40, align 8, !dbg !3394
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !3394
  store [0 x i8]* %_32.0, [0 x i8]** %41, align 8, !dbg !3394
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !3394
  store i64 %_32.1, i64* %42, align 8, !dbg !3394
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !3395, metadata !DIExpression()), !dbg !3399
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !3399
  store [0 x i8]* %_32.0, [0 x i8]** %43, align 8, !dbg !3399
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !3399
  store i64 %_32.1, i64* %44, align 8, !dbg !3399
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !3399
  %_27.0 = load [0 x i8]*, [0 x i8]** %45, align 8, !dbg !3399, !nonnull !23, !align !891, !noundef !23
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !3399
  %_27.1 = load i64, i64* %46, align 8, !dbg !3399
  br label %bb20, !dbg !3399

bb20:                                             ; preds = %bb19
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h6962a7f9d502e88aE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %searcher, [0 x i8]* align 1 %_24.0, i64 %_24.1, [0 x i8]* align 1 %_27.0, i64 %_27.1, i1 zeroext false), !dbg !3400
  br label %bb13, !dbg !3400

bb13:                                             ; preds = %bb20
  br label %bb14, !dbg !3392

bb16:                                             ; preds = %bb15, %bb14
  ret void, !dbg !3401

bb4:                                              ; preds = %bb6, %bb3
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h248c3240d52f538eE"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_3, %"core::str::pattern::StrSearcher"* align 8 %self), !dbg !3402
  br label %bb5, !dbg !3402

bb5:                                              ; preds = %bb4
  %47 = bitcast %"core::str::pattern::SearchStep"* %_3 to i64*, !dbg !3402
  %_5 = load i64, i64* %47, align 8, !dbg !3402, !range !3403, !noundef !23
  switch i64 %_5, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
    i64 2, label %bb9
  ], !dbg !3404

bb7:                                              ; preds = %bb5
  unreachable, !dbg !3402

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*, !dbg !3405
  %49 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %48, i32 0, i32 1, !dbg !3405
  %a = load i64, i64* %49, align 8, !dbg !3405
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !3405
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !3357, metadata !DIExpression()), !dbg !3406
  %50 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*, !dbg !3407
  %51 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %50, i32 0, i32 2, !dbg !3407
  %b = load i64, i64* %51, align 8, !dbg !3407
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !3407
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !3359, metadata !DIExpression()), !dbg !3408
  %52 = bitcast { i64, i64 }* %_8 to i64*, !dbg !3409
  store i64 %a, i64* %52, align 8, !dbg !3409
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1, !dbg !3409
  store i64 %b, i64* %53, align 8, !dbg !3409
  %54 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !3410
  %55 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %54, i32 0, i32 1, !dbg !3410
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0, !dbg !3410
  %57 = load i64, i64* %56, align 8, !dbg !3410
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1, !dbg !3410
  %59 = load i64, i64* %58, align 8, !dbg !3410
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %55, i32 0, i32 0, !dbg !3410
  store i64 %57, i64* %60, align 8, !dbg !3410
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %55, i32 0, i32 1, !dbg !3410
  store i64 %59, i64* %61, align 8, !dbg !3410
  %62 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !3410
  store i64 1, i64* %62, align 8, !dbg !3410
  br label %bb15, !dbg !3411

bb6:                                              ; preds = %bb5
  br label %bb4, !dbg !3367

bb9:                                              ; preds = %bb5
  %63 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !3413
  store i64 0, i64* %63, align 8, !dbg !3413
  br label %bb15, !dbg !3414

bb15:                                             ; preds = %bb8, %bb9
  br label %bb16, !dbg !3401
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h248c3240d52f538eE"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::StrSearcher"* align 8 %self) unnamed_addr #0 !dbg !3415 {
start:
  %self.dbg.spill12 = alloca i32, align 4
  %ch.dbg.spill = alloca i32, align 4
  %self.dbg.spill11 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill10 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill9 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill8 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %pos.dbg.spill = alloca i64, align 8
  %is_match.dbg.spill = alloca i8, align 1
  %searcher.dbg.spill6 = alloca %"core::str::pattern::EmptyNeedle"*, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %is_long.dbg.spill = alloca i8, align 1
  %4 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %searcher.dbg.spill = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::StrSearcher"*, align 8
  %otherwise = alloca %"core::str::pattern::SearchStep", align 8
  %b = alloca i64, align 8
  %_32 = alloca %"core::str::pattern::SearchStep", align 8
  %index = alloca i64, align 8
  %_10 = alloca { i8*, i8* }, align 8
  %_8 = alloca i32, align 4
  store %"core::str::pattern::StrSearcher"* %self, %"core::str::pattern::StrSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::StrSearcher"** %self.dbg.spill, metadata !3419, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.declare(metadata i64* %index, metadata !3439, metadata !DIExpression()), !dbg !3449
  call void @llvm.dbg.declare(metadata i64* %b, metadata !3435, metadata !DIExpression()), !dbg !3451
  call void @llvm.dbg.declare(metadata %"core::str::pattern::SearchStep"* %otherwise, metadata !3436, metadata !DIExpression()), !dbg !3452
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !3453
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to i64*, !dbg !3453
  %_2 = load i64, i64* %6, align 8, !dbg !3453, !range !865, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3454

bb2:                                              ; preds = %start
  unreachable, !dbg !3453

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !3455
  %8 = bitcast %"core::str::pattern::StrSearcherImpl"* %7 to %"core::str::pattern::StrSearcherImpl::Empty"*, !dbg !3455
  %searcher5 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", %"core::str::pattern::StrSearcherImpl::Empty"* %8, i32 0, i32 1, !dbg !3455
  store %"core::str::pattern::EmptyNeedle"* %searcher5, %"core::str::pattern::EmptyNeedle"** %searcher.dbg.spill6, align 8, !dbg !3455
  call void @llvm.dbg.declare(metadata %"core::str::pattern::EmptyNeedle"** %searcher.dbg.spill6, metadata !3420, metadata !DIExpression()), !dbg !3456
  %9 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 4, !dbg !3457
  %10 = load i8, i8* %9, align 2, !dbg !3457, !range !505, !noundef !23
  %_4 = trunc i8 %10 to i1, !dbg !3457
  br i1 %_4, label %bb4, label %bb5, !dbg !3457

bb1:                                              ; preds = %start
  %11 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !3458
  %12 = bitcast %"core::str::pattern::StrSearcherImpl"* %11 to %"core::str::pattern::StrSearcherImpl::TwoWay"*, !dbg !3458
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %12, i32 0, i32 1, !dbg !3458
  store %"core::str::pattern::TwoWaySearcher"* %searcher, %"core::str::pattern::TwoWaySearcher"** %searcher.dbg.spill, align 8, !dbg !3458
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %searcher.dbg.spill, metadata !3429, metadata !DIExpression()), !dbg !3459
  %13 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4, !dbg !3460
  %_27 = load i64, i64* %13, align 8, !dbg !3460
  %14 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !3461
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !3461
  %_54.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !dbg !3461, !nonnull !23, !align !891, !noundef !23
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !3461
  %_54.1 = load i64, i64* %16, align 8, !dbg !3461
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !3461
  store [0 x i8]* %_54.0, [0 x i8]** %17, align 8, !dbg !3461
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !3461
  store i64 %_54.1, i64* %18, align 8, !dbg !3461
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !3462, metadata !DIExpression()), !dbg !3466
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !3466
  store [0 x i8]* %_54.0, [0 x i8]** %19, align 8, !dbg !3466
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !3466
  store i64 %_54.1, i64* %20, align 8, !dbg !3466
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !3467, metadata !DIExpression()), !dbg !3471
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !3471
  store [0 x i8]* %_54.0, [0 x i8]** %21, align 8, !dbg !3471
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !3471
  store i64 %_54.1, i64* %22, align 8, !dbg !3471
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !3471
  %_60.0 = load [0 x i8]*, [0 x i8]** %23, align 8, !dbg !3471, !nonnull !23, !align !891, !noundef !23
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !3471
  %_60.1 = load i64, i64* %24, align 8, !dbg !3471
  br label %bb23, !dbg !3471

bb23:                                             ; preds = %bb1
  %_26 = icmp eq i64 %_27, %_60.1, !dbg !3460
  br i1 %_26, label %bb12, label %bb13, !dbg !3460

bb13:                                             ; preds = %bb23
  %25 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6, !dbg !3473
  %_31 = load i64, i64* %25, align 8, !dbg !3473
  %is_long = icmp eq i64 %_31, -1, !dbg !3473
  %26 = zext i1 %is_long to i8, !dbg !3473
  store i8 %26, i8* %is_long.dbg.spill, align 1, !dbg !3473
  call void @llvm.dbg.declare(metadata i8* %is_long.dbg.spill, metadata !3431, metadata !DIExpression()), !dbg !3474
  %27 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !3475
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0, !dbg !3475
  %_56.0 = load [0 x i8]*, [0 x i8]** %28, align 8, !dbg !3475, !nonnull !23, !align !891, !noundef !23
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1, !dbg !3475
  %_56.1 = load i64, i64* %29, align 8, !dbg !3475
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !3475
  store [0 x i8]* %_56.0, [0 x i8]** %30, align 8, !dbg !3475
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !3475
  store i64 %_56.1, i64* %31, align 8, !dbg !3475
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !3476, metadata !DIExpression()), !dbg !3480
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !3480
  store [0 x i8]* %_56.0, [0 x i8]** %32, align 8, !dbg !3480
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !3480
  store i64 %_56.1, i64* %33, align 8, !dbg !3480
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !3480
  %_35.0 = load [0 x i8]*, [0 x i8]** %34, align 8, !dbg !3480, !nonnull !23, !align !891, !noundef !23
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !3480
  %_35.1 = load i64, i64* %35, align 8, !dbg !3480
  br label %bb30, !dbg !3480

bb12:                                             ; preds = %bb23
  %36 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !3481
  store i64 2, i64* %36, align 8, !dbg !3481
  br label %bb22, !dbg !3482

bb22:                                             ; preds = %bb11, %bb4, %bb21, %bb12
  ret void, !dbg !3484

bb30:                                             ; preds = %bb13
  %37 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1, !dbg !3485
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0, !dbg !3485
  %_57.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !3485, !nonnull !23, !align !891, !noundef !23
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1, !dbg !3485
  %_57.1 = load i64, i64* %39, align 8, !dbg !3485
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !3485
  store [0 x i8]* %_57.0, [0 x i8]** %40, align 8, !dbg !3485
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !3485
  store i64 %_57.1, i64* %41, align 8, !dbg !3485
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !3486, metadata !DIExpression()), !dbg !3490
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !3490
  store [0 x i8]* %_57.0, [0 x i8]** %42, align 8, !dbg !3490
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !3490
  store i64 %_57.1, i64* %43, align 8, !dbg !3490
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !3490
  %_38.0 = load [0 x i8]*, [0 x i8]** %44, align 8, !dbg !3490, !nonnull !23, !align !891, !noundef !23
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !3490
  %_38.1 = load i64, i64* %45, align 8, !dbg !3490
  br label %bb31, !dbg !3490

bb31:                                             ; preds = %bb30
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h7d87489eb065f5dbE(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_32, %"core::str::pattern::TwoWaySearcher"* align 8 %searcher, [0 x i8]* align 1 %_35.0, i64 %_35.1, [0 x i8]* align 1 %_38.0, i64 %_38.1, i1 zeroext %is_long), !dbg !3491
  br label %bb14, !dbg !3491

bb14:                                             ; preds = %bb31
  %46 = bitcast %"core::str::pattern::SearchStep"* %_32 to i64*, !dbg !3491
  %_41 = load i64, i64* %46, align 8, !dbg !3491, !range !3403, !noundef !23
  %47 = icmp eq i64 %_41, 1, !dbg !3492
  br i1 %47, label %bb16, label %bb15, !dbg !3492

bb16:                                             ; preds = %bb14
  %48 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*, !dbg !3493
  %49 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %48, i32 0, i32 1, !dbg !3493
  %a = load i64, i64* %49, align 8, !dbg !3493
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !3493
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !3433, metadata !DIExpression()), !dbg !3494
  %50 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*, !dbg !3495
  %51 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %50, i32 0, i32 2, !dbg !3495
  %52 = load i64, i64* %51, align 8, !dbg !3495
  store i64 %52, i64* %b, align 8, !dbg !3495
  br label %bb17, !dbg !3496

bb15:                                             ; preds = %bb14
  %53 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*, !dbg !3497
  %54 = bitcast %"core::str::pattern::SearchStep"* %_32 to i8*, !dbg !3497
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false), !dbg !3497
  %55 = bitcast %"core::str::pattern::SearchStep"* %0 to i8*, !dbg !3498
  %56 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*, !dbg !3498
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false), !dbg !3498
  br label %bb21, !dbg !3499

bb21:                                             ; preds = %bb32, %bb15
  br label %bb22, !dbg !3500

bb17:                                             ; preds = %bb19, %bb16
  %57 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !3501
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %57, i32 0, i32 0, !dbg !3501
  %_58.0 = load [0 x i8]*, [0 x i8]** %58, align 8, !dbg !3501, !nonnull !23, !align !891, !noundef !23
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %57, i32 0, i32 1, !dbg !3501
  %_58.1 = load i64, i64* %59, align 8, !dbg !3501
  %_47 = load i64, i64* %b, align 8, !dbg !3502
; call core::str::<impl str>::is_char_boundary
  %_45 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hbd67d1e56763f3f2E"([0 x i8]* align 1 %_58.0, i64 %_58.1, i64 %_47), !dbg !3501
  br label %bb18, !dbg !3501

bb18:                                             ; preds = %bb17
  %_44 = xor i1 %_45, true, !dbg !3503
  br i1 %_44, label %bb19, label %bb20, !dbg !3503

bb20:                                             ; preds = %bb18
  %v1 = load i64, i64* %b, align 8, !dbg !3504
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !3504
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !3505, metadata !DIExpression()), !dbg !3510
  %60 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4, !dbg !3512
  %v2 = load i64, i64* %60, align 8, !dbg !3512
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !3512
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !3509, metadata !DIExpression()), !dbg !3510
; call core::cmp::Ord::max
  %_48 = call i64 @_ZN4core3cmp3Ord3max17heb94650d3533541dE(i64 %v1, i64 %v2), !dbg !3510
  br label %bb32, !dbg !3510

bb19:                                             ; preds = %bb18
  %61 = load i64, i64* %b, align 8, !dbg !3513
  %62 = add i64 %61, 1, !dbg !3513
  store i64 %62, i64* %b, align 8, !dbg !3513
  br label %bb17, !dbg !3496

bb32:                                             ; preds = %bb20
  %63 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4, !dbg !3514
  store i64 %_48, i64* %63, align 8, !dbg !3514
  %_52 = load i64, i64* %b, align 8, !dbg !3515
  %64 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !3516
  %65 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %64, i32 0, i32 1, !dbg !3516
  store i64 %a, i64* %65, align 8, !dbg !3516
  %66 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !3516
  %67 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %66, i32 0, i32 2, !dbg !3516
  store i64 %_52, i64* %67, align 8, !dbg !3516
  %68 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !3516
  store i64 1, i64* %68, align 8, !dbg !3516
  br label %bb21, !dbg !3517

bb5:                                              ; preds = %bb3
  %69 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 2, !dbg !3518
  %70 = load i8, i8* %69, align 8, !dbg !3518, !range !505, !noundef !23
  %is_match = trunc i8 %70 to i1, !dbg !3518
  %71 = zext i1 %is_match to i8, !dbg !3518
  store i8 %71, i8* %is_match.dbg.spill, align 1, !dbg !3518
  call void @llvm.dbg.declare(metadata i8* %is_match.dbg.spill, metadata !3423, metadata !DIExpression()), !dbg !3519
  %72 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 2, !dbg !3520
  %73 = load i8, i8* %72, align 8, !dbg !3520, !range !505, !noundef !23
  %_6 = trunc i8 %73 to i1, !dbg !3520
  %74 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 2, !dbg !3521
  %75 = xor i1 %_6, true, !dbg !3521
  %76 = zext i1 %75 to i8, !dbg !3521
  store i8 %76, i8* %74, align 8, !dbg !3521
  %77 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher5 to i64*, !dbg !3522
  %pos = load i64, i64* %77, align 8, !dbg !3522
  store i64 %pos, i64* %pos.dbg.spill, align 8, !dbg !3522
  call void @llvm.dbg.declare(metadata i64* %pos.dbg.spill, metadata !3425, metadata !DIExpression()), !dbg !3523
  %78 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !3450
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %78, i32 0, i32 0, !dbg !3450
  %_55.0 = load [0 x i8]*, [0 x i8]** %79, align 8, !dbg !3450, !nonnull !23, !align !891, !noundef !23
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %78, i32 0, i32 1, !dbg !3450
  %_55.1 = load i64, i64* %80, align 8, !dbg !3450
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !3450
  store [0 x i8]* %_55.0, [0 x i8]** %81, align 8, !dbg !3450
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !3450
  store i64 %_55.1, i64* %82, align 8, !dbg !3450
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !3446, metadata !DIExpression()), !dbg !3449
  store i64 %pos, i64* %index, align 8, !dbg !3524
  %_63 = load i64, i64* %index, align 8, !dbg !3449
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %83 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h97f66a9983957c89E"(i64 %_63, [0 x i8]* align 1 %_55.0, i64 %_55.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc579 to %"core::panic::location::Location"*)), !dbg !3449
  %_12.0 = extractvalue { [0 x i8]*, i64 } %83, 0, !dbg !3449
  %_12.1 = extractvalue { [0 x i8]*, i64 } %83, 1, !dbg !3449
  br label %bb24, !dbg !3449

bb4:                                              ; preds = %bb3
  %84 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !3525
  store i64 2, i64* %84, align 8, !dbg !3525
  br label %bb22, !dbg !3482

bb24:                                             ; preds = %bb5
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill8, i32 0, i32 0, !dbg !3450
  store [0 x i8]* %_12.0, [0 x i8]** %85, align 8, !dbg !3450
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill8, i32 0, i32 1, !dbg !3450
  store i64 %_12.1, i64* %86, align 8, !dbg !3450
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill8, metadata !3526, metadata !DIExpression()), !dbg !3535
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill9, i32 0, i32 0, !dbg !3535
  store [0 x i8]* %_12.0, [0 x i8]** %87, align 8, !dbg !3535
  %88 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill9, i32 0, i32 1, !dbg !3535
  store i64 %_12.1, i64* %88, align 8, !dbg !3535
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill9, metadata !3536, metadata !DIExpression()), !dbg !3540
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !3540
  store [0 x i8]* %_12.0, [0 x i8]** %89, align 8, !dbg !3540
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !3540
  store i64 %_12.1, i64* %90, align 8, !dbg !3540
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !3540
  %_67.0 = load [0 x i8]*, [0 x i8]** %91, align 8, !dbg !3540, !nonnull !23, !align !891, !noundef !23
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !3540
  %_67.1 = load i64, i64* %92, align 8, !dbg !3540
  br label %bb25, !dbg !3540

bb25:                                             ; preds = %bb24
  %93 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !3535
  store [0 x i8]* %_67.0, [0 x i8]** %93, align 8, !dbg !3535
  %94 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !3535
  store i64 %_67.1, i64* %94, align 8, !dbg !3535
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill10, metadata !3542, metadata !DIExpression()), !dbg !3546
; call core::slice::iter::Iter<T>::new
  %95 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h6a2c828c3ba02e68E"([0 x i8]* align 1 %_67.0, i64 %_67.1), !dbg !3546
  %_65.0 = extractvalue { i8*, i8* } %95, 0, !dbg !3546
  %_65.1 = extractvalue { i8*, i8* } %95, 1, !dbg !3546
  br label %bb26, !dbg !3546

bb26:                                             ; preds = %bb25
  %96 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 0, !dbg !3535
  store i8* %_65.0, i8** %96, align 8, !dbg !3535
  %97 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1, !dbg !3535
  store i8* %_65.1, i8** %97, align 8, !dbg !3535
  store { i8*, i8* }* %_10, { i8*, i8* }** %self.dbg.spill11, align 8, !dbg !3450
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill11, metadata !3547, metadata !DIExpression()), !dbg !3555
; call core::str::validations::next_code_point
  %98 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h648e628bdbab7c31E({ i8*, i8* }* align 8 %_10), !dbg !3555
  %_71.0 = extractvalue { i32, i32 } %98, 0, !dbg !3555
  %_71.1 = extractvalue { i32, i32 } %98, 1, !dbg !3555
  br label %bb27, !dbg !3555

bb27:                                             ; preds = %bb26
; call core::option::Option<T>::map
  %99 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h4faef3789a1c70e1E"(i32 %_71.0, i32 %_71.1), !dbg !3555, !range !2483
  store i32 %99, i32* %_8, align 4, !dbg !3555
  br label %bb28, !dbg !3555

bb28:                                             ; preds = %bb27
  br i1 %is_match, label %bb8, label %bb9, !dbg !3556

bb9:                                              ; preds = %bb28
  %100 = load i32, i32* %_8, align 4, !dbg !3450, !range !2483, !noundef !23
  %101 = sub i32 %100, 1114112, !dbg !3450
  %102 = icmp eq i32 %101, 0, !dbg !3450
  %_16 = select i1 %102, i64 0, i64 1, !dbg !3450
  switch i64 %_16, label %bb7 [
    i64 0, label %bb10
    i64 1, label %bb6
  ], !dbg !3557

bb8:                                              ; preds = %bb28
  %103 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !3558
  %104 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %103, i32 0, i32 1, !dbg !3558
  store i64 %pos, i64* %104, align 8, !dbg !3558
  %105 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !3558
  %106 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %105, i32 0, i32 2, !dbg !3558
  store i64 %pos, i64* %106, align 8, !dbg !3558
  %107 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !3558
  store i64 0, i64* %107, align 8, !dbg !3558
  br label %bb11, !dbg !3559

bb11:                                             ; preds = %bb10, %bb29, %bb8
  br label %bb22, !dbg !3560

bb7:                                              ; preds = %bb9
  unreachable, !dbg !3450

bb10:                                             ; preds = %bb9
  %108 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 4, !dbg !3561
  store i8 1, i8* %108, align 2, !dbg !3561
  %109 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !3562
  store i64 2, i64* %109, align 8, !dbg !3562
  br label %bb11, !dbg !3562

bb6:                                              ; preds = %bb9
  %ch = load i32, i32* %_8, align 4, !dbg !3563, !range !2478, !noundef !23
  store i32 %ch, i32* %ch.dbg.spill, align 4, !dbg !3563
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !3427, metadata !DIExpression()), !dbg !3564
  store i32 %ch, i32* %self.dbg.spill12, align 4, !dbg !3565
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill12, metadata !3566, metadata !DIExpression()), !dbg !3573
; call core::char::methods::len_utf8
  %_21 = call i64 @_ZN4core4char7methods8len_utf817h2ae2e3433924ffc4E(i32 %ch), !dbg !3573
  br label %bb29, !dbg !3573

bb29:                                             ; preds = %bb6
  %110 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher5 to i64*, !dbg !3574
  %111 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher5 to i64*, !dbg !3574
  %112 = load i64, i64* %111, align 8, !dbg !3574
  %113 = add i64 %112, %_21, !dbg !3574
  store i64 %113, i64* %110, align 8, !dbg !3574
  %114 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher5 to i64*, !dbg !3575
  %_24 = load i64, i64* %114, align 8, !dbg !3575
  %115 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !3576
  %116 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %115, i32 0, i32 1, !dbg !3576
  store i64 %pos, i64* %116, align 8, !dbg !3576
  %117 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !3576
  %118 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %117, i32 0, i32 2, !dbg !3576
  store i64 %_24, i64* %118, align 8, !dbg !3576
  %119 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !3576
  store i64 1, i64* %119, align 8, !dbg !3576
  br label %bb11, !dbg !3577
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h00b9a47e61eb0887E"(i32 %ch) unnamed_addr #0 !dbg !3578 {
start:
  %0 = alloca i32, align 4
  %i.dbg.spill1 = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %_1.dbg.spill, metadata !3583, metadata !DIExpression()), !dbg !3584
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !3582, metadata !DIExpression()), !dbg !3585
  store i32 %ch, i32* %i.dbg.spill, align 4, !dbg !3586
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !3587, metadata !DIExpression()), !dbg !3594
  store i32 %ch, i32* %i.dbg.spill1, align 4, !dbg !3594
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill1, metadata !3596, metadata !DIExpression()), !dbg !3602
  store i32 %ch, i32* %0, align 4, !dbg !3602
  %1 = load i32, i32* %0, align 4, !dbg !3602, !range !2478, !noundef !23
  br label %bb1, !dbg !3602

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !3604
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb52141c99a9bb598E"() unnamed_addr #0 !dbg !3605 {
start:
  ret i1 false, !dbg !3609
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hc559d9f21266915fE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %a, i64 %b) unnamed_addr #0 !dbg !3610 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %a, i64* %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !3614, metadata !DIExpression()), !dbg !3616
  store i64 %b, i64* %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !3615, metadata !DIExpression()), !dbg !3617
  %1 = bitcast { i64, i64 }* %_3 to i64*, !dbg !3618
  store i64 %a, i64* %1, align 8, !dbg !3618
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !3618
  store i64 %b, i64* %2, align 8, !dbg !3618
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !3619
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1, !dbg !3619
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !3619
  %6 = load i64, i64* %5, align 8, !dbg !3619
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !3619
  %8 = load i64, i64* %7, align 8, !dbg !3619
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0, !dbg !3619
  store i64 %6, i64* %9, align 8, !dbg !3619
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1, !dbg !3619
  store i64 %8, i64* %10, align 8, !dbg !3619
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !3619
  store i64 1, i64* %11, align 8, !dbg !3619
  ret void, !dbg !3620
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hda9f75ab38cb40d1E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %_a, i64 %_b) unnamed_addr #0 !dbg !3621 {
start:
  %_b.dbg.spill = alloca i64, align 8
  %_a.dbg.spill = alloca i64, align 8
  store i64 %_a, i64* %_a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %_a.dbg.spill, metadata !3623, metadata !DIExpression()), !dbg !3625
  store i64 %_b, i64* %_b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %_b.dbg.spill, metadata !3624, metadata !DIExpression()), !dbg !3626
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !3627
  store i64 0, i64* %1, align 8, !dbg !3627
  ret void, !dbg !3628
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h83600a7c9863ba0eE"({ i64, i64 }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3629 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %1 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3632, metadata !DIExpression()), !dbg !3633
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !3634
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3635
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h36ac290b4ba6899eE"(i64* align 8 %_3, i64* align 8 %_4), !dbg !3634
  br label %bb1, !dbg !3634

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !3634

bb6:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %1 to i64*, !dbg !3636
  store i64 0, i64* %2, align 8, !dbg !3636
  br label %bb7, !dbg !3637

bb2:                                              ; preds = %bb1
  %_7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3638
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hd3a30fbd2fa28250E"(i64* align 8 %_7), !dbg !3638
  br label %bb3, !dbg !3638

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::backward_unchecked
  %_5 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h5d3b8e6580969331E"(i64 %_6, i64 1), !dbg !3639
  br label %bb4, !dbg !3639

bb4:                                              ; preds = %bb3
  br label %bb9, !dbg !3640

bb9:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3640
  store i64 %_5, i64* %3, align 8, !dbg !3640
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3641
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_8 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hd3a30fbd2fa28250E"(i64* align 8 %_9), !dbg !3641
  br label %bb5, !dbg !3641

bb8:                                              ; No predecessors!
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3640
  store i64 %_5, i64* %4, align 8, !dbg !3640
  %5 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3642
  %6 = load i8*, i8** %5, align 8, !dbg !3642
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3642
  %8 = load i32, i32* %7, align 8, !dbg !3642
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0, !dbg !3642
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1, !dbg !3642
  resume { i8*, i32 } %10, !dbg !3642

bb5:                                              ; preds = %bb9
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !3643
  store i64 %_8, i64* %11, align 8, !dbg !3643
  %12 = bitcast { i64, i64 }* %1 to i64*, !dbg !3643
  store i64 1, i64* %12, align 8, !dbg !3643
  br label %bb7, !dbg !3637

bb7:                                              ; preds = %bb6, %bb5
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !3644
  %14 = load i64, i64* %13, align 8, !dbg !3644, !range !865, !noundef !23
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !3644
  %16 = load i64, i64* %15, align 8, !dbg !3644
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !3644
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !3644
  ret { i64, i64 } %18, !dbg !3644
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hd8a51031829ef59cE"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !3645 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3647, metadata !DIExpression()), !dbg !3650
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !3651
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3652
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h36ac290b4ba6899eE"(i64* align 8 %_3, i64* align 8 %_4), !dbg !3651
  br label %bb1, !dbg !3651

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !3651

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !3653
  store i64 0, i64* %1, align 8, !dbg !3653
  br label %bb7, !dbg !3654

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !3655
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hd3a30fbd2fa28250E"(i64* align 8 %_7), !dbg !3655
  br label %bb3, !dbg !3655

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h225f3d09039f53a3E"(i64 %_6, i64 1), !dbg !3656
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !3656
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3648, metadata !DIExpression()), !dbg !3657
  br label %bb4, !dbg !3656

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !3658
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17ha68ea4317dd069c4E(i64* align 8 %_10, i64 %n), !dbg !3659
  br label %bb5, !dbg !3659

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3660
  store i64 %_8, i64* %2, align 8, !dbg !3660
  %3 = bitcast { i64, i64 }* %0 to i64*, !dbg !3660
  store i64 1, i64* %3, align 8, !dbg !3660
  br label %bb7, !dbg !3654

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3661
  %5 = load i64, i64* %4, align 8, !dbg !3661, !range !865, !noundef !23
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3661
  %7 = load i64, i64* %6, align 8, !dbg !3661
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !3661
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !3661
  ret { i64, i64 } %9, !dbg !3661
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h0c69b4227548a848E"() unnamed_addr #0 !dbg !3662 {
start:
  ret i1 true, !dbg !3664
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17he875a91c80a0f86dE"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %a, i64 %b) unnamed_addr #0 !dbg !3665 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  store i64 %a, i64* %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !3669, metadata !DIExpression()), !dbg !3671
  store i64 %b, i64* %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !3670, metadata !DIExpression()), !dbg !3672
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !3673
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %1, i32 0, i32 1, !dbg !3673
  store i64 %a, i64* %2, align 8, !dbg !3673
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !3673
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %3, i32 0, i32 2, !dbg !3673
  store i64 %b, i64* %4, align 8, !dbg !3673
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !3673
  store i64 0, i64* %5, align 8, !dbg !3673
  ret void, !dbg !3674
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h7964d54b180e7969E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %a, i64 %b) unnamed_addr #0 !dbg !3675 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  store i64 %a, i64* %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !3677, metadata !DIExpression()), !dbg !3679
  store i64 %b, i64* %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !3678, metadata !DIExpression()), !dbg !3680
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !3681
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %1, i32 0, i32 1, !dbg !3681
  store i64 %a, i64* %2, align 8, !dbg !3681
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !3681
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %3, i32 0, i32 2, !dbg !3681
  store i64 %b, i64* %4, align 8, !dbg !3681
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !3681
  store i64 1, i64* %5, align 8, !dbg !3681
  ret void, !dbg !3682
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa9da4098f8d73adE"({ i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !3683 {
start:
  %self.dbg.spill23 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill20 = alloca i8*, align 8
  %self.dbg.spill19 = alloca i8*, align 8
  %old.dbg.spill = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill12 = alloca i8*, align 8
  %data_address.dbg.spill10 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_62 = alloca i8*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3689, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !3691, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !3705, metadata !DIExpression()), !dbg !3710
  %7 = bitcast { i8*, i8* }* %self to i8**, !dbg !3704
  %self2 = load i8*, i8** %7, align 8, !dbg !3704, !nonnull !23, !noundef !23
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !3704
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !3719, metadata !DIExpression()), !dbg !3723
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !3723
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !3702, metadata !DIExpression()), !dbg !3724
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !3724
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !3725, metadata !DIExpression()), !dbg !3730
  %8 = bitcast {}** %5 to i64*, !dbg !3732
  store i64 0, i64* %8, align 8, !dbg !3732
  %data_address = load {}*, {}** %5, align 8, !dbg !3732
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3732
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3695, metadata !DIExpression()), !dbg !3696
  br label %bb9, !dbg !3732

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !3696
  store {}* %data_address, {}** %9, align 8, !dbg !3696
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !3696
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !3696
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !3696
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !3696
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !3696
  %other = load i8*, i8** %13, align 8, !dbg !3696
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !3696
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !3729, metadata !DIExpression()), !dbg !3730
  %14 = icmp eq i8* %self2, %other, !dbg !3730
  %15 = zext i1 %14 to i8, !dbg !3730
  store i8 %15, i8* %4, align 1, !dbg !3730
  %16 = load i8, i8* %4, align 1, !dbg !3730, !range !505, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !3730
  br label %bb10, !dbg !3730

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !3738
  call void @llvm.assume(i1 %_3), !dbg !3739
  br label %bb1, !dbg !3739

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !3740

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !3741

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3718
  %self6 = load i8*, i8** %17, align 8, !dbg !3718
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !3718
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !3716, metadata !DIExpression()), !dbg !3742
  store i8* %self6, i8** %self.dbg.spill8, align 8, !dbg !3742
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !3743, metadata !DIExpression()), !dbg !3748
  %18 = bitcast {}** %3 to i64*, !dbg !3750
  store i64 0, i64* %18, align 8, !dbg !3750
  %data_address9 = load {}*, {}** %3, align 8, !dbg !3750
  store {}* %data_address9, {}** %data_address.dbg.spill10, align 8, !dbg !3750
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill10, metadata !3709, metadata !DIExpression()), !dbg !3710
  br label %bb11, !dbg !3750

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !3710
  store {}* %data_address9, {}** %19, align 8, !dbg !3710
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !3710
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !3710
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !3710
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !3710
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !3710
  %other11 = load i8*, i8** %23, align 8, !dbg !3710
  store i8* %other11, i8** %other.dbg.spill12, align 8, !dbg !3710
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill12, metadata !3747, metadata !DIExpression()), !dbg !3748
  %24 = icmp eq i8* %self6, %other11, !dbg !3748
  %25 = zext i1 %24 to i8, !dbg !3748
  store i8 %25, i8* %2, align 1, !dbg !3748
  %26 = load i8, i8* %2, align 1, !dbg !3748, !range !505, !noundef !23
  %_10 = trunc i8 %26 to i1, !dbg !3748
  br label %bb12, !dbg !3748

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !3756
  call void @llvm.assume(i1 %_9), !dbg !3757
  br label %bb3, !dbg !3757

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !3741

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i8*, i8* }* %self to i8**, !dbg !3758
  %self13 = load i8*, i8** %27, align 8, !dbg !3758, !nonnull !23, !noundef !23
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !3758
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !3759, metadata !DIExpression()), !dbg !3763
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3758
  %_16 = load i8*, i8** %28, align 8, !dbg !3758
  %_12 = icmp eq i8* %self13, %_16, !dbg !3758
  br i1 %_12, label %bb6, label %bb7, !dbg !3758

bb7:                                              ; preds = %bb5
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill15, align 8, !dbg !3765
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill15, metadata !3766, metadata !DIExpression()), !dbg !3774
  br i1 false, label %bb13, label %bb14, !dbg !3774

bb6:                                              ; preds = %bb5
  %29 = bitcast i8** %6 to {}**, !dbg !3776
  store {}* null, {}** %29, align 8, !dbg !3776
  br label %bb8, !dbg !3777

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i8*, i8** %6, align 8, !dbg !3778, !align !891
  ret i8* %30, !dbg !3778

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3774
  %_56 = load i8*, i8** %31, align 8, !dbg !3774
  store i8* %_56, i8** %self.dbg.spill21, align 8, !dbg !3774
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !3779, metadata !DIExpression()), !dbg !3784
  %32 = getelementptr i8, i8* %_56, i64 -1, !dbg !3784
  store i8* %32, i8** %0, align 8, !dbg !3784
  %_54 = load i8*, i8** %0, align 8, !dbg !3784
  br label %bb16, !dbg !3784

bb14:                                             ; preds = %bb7
  %33 = bitcast { i8*, i8* }* %self to i8**, !dbg !3774
  %self16 = load i8*, i8** %33, align 8, !dbg !3774, !nonnull !23, !noundef !23
  store i8* %self16, i8** %self.dbg.spill17, align 8, !dbg !3774
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !3786, metadata !DIExpression()), !dbg !3790
  store i8* %self16, i8** %old.dbg.spill, align 8, !dbg !3790
  call void @llvm.dbg.declare(metadata i8** %old.dbg.spill, metadata !3772, metadata !DIExpression()), !dbg !3792
  %34 = bitcast { i8*, i8* }* %self to i8**, !dbg !3792
  %self18 = load i8*, i8** %34, align 8, !dbg !3792, !nonnull !23, !noundef !23
  store i8* %self18, i8** %self.dbg.spill19, align 8, !dbg !3792
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill19, metadata !3793, metadata !DIExpression()), !dbg !3797
  store i8* %self18, i8** %self.dbg.spill20, align 8, !dbg !3797
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill20, metadata !3799, metadata !DIExpression()), !dbg !3804
  %35 = getelementptr inbounds i8, i8* %self18, i64 1, !dbg !3804
  store i8* %35, i8** %1, align 8, !dbg !3804
  %_73 = load i8*, i8** %1, align 8, !dbg !3804
  br label %bb17, !dbg !3804

bb17:                                             ; preds = %bb14
  store i8* %_73, i8** %ptr.dbg.spill, align 8, !dbg !3804
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3805, metadata !DIExpression()), !dbg !3809
  store i8* %_73, i8** %_62, align 8, !dbg !3809
  %36 = bitcast { i8*, i8* }* %self to i8**, !dbg !3792
  %37 = load i8*, i8** %_62, align 8, !dbg !3792, !nonnull !23, !noundef !23
  store i8* %37, i8** %36, align 8, !dbg !3792
  store i8* %self16, i8** %_19, align 8, !dbg !3792
  br label %bb15, !dbg !3774

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i8*, i8** %_19, align 8, !dbg !3765
  store i8* %_18, i8** %6, align 8, !dbg !3811
  br label %bb8, !dbg !3777

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3774
  store i8* %_54, i8** %38, align 8, !dbg !3774
  %39 = bitcast { i8*, i8* }* %self to i8**, !dbg !3774
  %self22 = load i8*, i8** %39, align 8, !dbg !3774, !nonnull !23, !noundef !23
  store i8* %self22, i8** %self.dbg.spill23, align 8, !dbg !3774
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !3812, metadata !DIExpression()), !dbg !3816
  store i8* %self22, i8** %_19, align 8, !dbg !3774
  br label %bb15, !dbg !3774
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_coreutils_static_assert() unnamed_addr #2 !dbg !3818 {
start:
  ret void, !dbg !3821
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_noop() unnamed_addr #2 !dbg !3822 {
start:
  ret void, !dbg !3825
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_l() unnamed_addr #2 !dbg !3826 {
start:
  ret i32 3, !dbg !3829
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_w() unnamed_addr #2 !dbg !3830 {
start:
  ret i32 4, !dbg !3831
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_call_printf() unnamed_addr #2 !dbg !3832 {
start:
  %_1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc1, i32 0, i32 0, i32 0), i32 10, double 1.500000e+00), !dbg !3834
  br label %bb1, !dbg !3834

bb1:                                              ; preds = %start
  ret void, !dbg !3835
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_my_vprintf(i8* %format, i64* align 8 %0) unnamed_addr #2 !dbg !3836 {
start:
  %format.dbg.spill = alloca i8*, align 8
  %ap = alloca i64*, align 8
  store i64* %0, i64** %ap, align 8
  store i8* %format, i8** %format.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %format.dbg.spill, metadata !3840, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.declare(metadata i64** %ap, metadata !3841, metadata !DIExpression()), !dbg !3843
; call <core::ffi::VaList as core::ops::deref::DerefMut>::deref_mut
  %_7 = call align 8 %"core::ffi::VaListImpl"* @"_ZN64_$LT$core..ffi..VaList$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h06a960b63165b6c6E"(i64** align 8 %ap), !dbg !3844
  br label %bb1, !dbg !3844

bb1:                                              ; preds = %start
; call core::ffi::VaListImpl::as_va_list
  %_5 = call align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %_7), !dbg !3844
  br label %bb2, !dbg !3844

bb2:                                              ; preds = %bb1
  %_3 = call i32 @vprintf(i8* %format, i64* align 8 %_5), !dbg !3845
  br label %bb3, !dbg !3845

bb3:                                              ; preds = %bb2
  ret void, !dbg !3846
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_call_vprintf(i8* %format, ...) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3847 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %format.dbg.spill = alloca i8*, align 8
  %_10 = alloca i8, align 1
  %_4 = alloca %"core::ffi::VaListImpl", align 8
  %ap = alloca %"core::ffi::VaListImpl", align 8
  %args = alloca %"core::ffi::VaListImpl", align 8
  %1 = bitcast %"core::ffi::VaListImpl"* %args to i8*
  call void @llvm.va_start(i8* %1)
  store i8* %format, i8** %format.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %format.dbg.spill, metadata !3851, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %args, metadata !3852, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %ap, metadata !3853, metadata !DIExpression()), !dbg !3857
  store i8 0, i8* %_10, align 1, !dbg !3858
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_4, %"core::ffi::VaListImpl"* align 8 %args)
          to label %bb1 unwind label %cleanup, !dbg !3859

bb9:                                              ; preds = %cleanup
  %2 = load i8, i8* %_10, align 1, !dbg !3860, !range !505, !noundef !23
  %3 = trunc i8 %2 to i1, !dbg !3860
  br i1 %3, label %bb8, label %bb6, !dbg !3860

cleanup:                                          ; preds = %bb2, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb9

bb1:                                              ; preds = %start
  store i8 1, i8* %_10, align 1, !dbg !3861
  %9 = bitcast %"core::ffi::VaListImpl"* %ap to i8*, !dbg !3861
  %10 = bitcast %"core::ffi::VaListImpl"* %_4 to i8*, !dbg !3861
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !3861
; invoke core::ffi::VaListImpl::as_va_list
  %_8 = invoke align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %ap)
          to label %bb2 unwind label %cleanup, !dbg !3862

bb2:                                              ; preds = %bb1
  invoke void @rust_my_vprintf(i8* %format, i64* align 8 %_8)
          to label %bb3 unwind label %cleanup, !dbg !3863

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %ap)
          to label %bb4 unwind label %cleanup1, !dbg !3860

bb6:                                              ; preds = %cleanup1, %bb8, %bb9
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args) #16
          to label %bb7 unwind label %abort, !dbg !3860

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %ap) #16
          to label %bb6 unwind label %abort, !dbg !3860

abort:                                            ; preds = %bb6, %bb8
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !3864
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3864
  unreachable, !dbg !3864

cleanup1:                                         ; preds = %bb3
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb6

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_10, align 1, !dbg !3860
; call core::ptr::drop_in_place<core::ffi::VaListImpl>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args), !dbg !3860
  br label %bb5, !dbg !3860

bb7:                                              ; preds = %bb6
  %17 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3864
  %18 = load i8*, i8** %17, align 8, !dbg !3864
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3864
  %20 = load i32, i32* %19, align 8, !dbg !3864
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0, !dbg !3864
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1, !dbg !3864
  resume { i8*, i32 } %22, !dbg !3864

bb5:                                              ; preds = %bb4
  %23 = bitcast %"core::ffi::VaListImpl"* %args to i8*, !dbg !3865
  call void @llvm.va_end(i8* %23), !dbg !3865
  ret void, !dbg !3865
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_my_printf(i8* %0, ...) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3866 {
start:
  %1 = alloca i8*, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %3 = alloca { i8*, i32 }, align 8
  %_42 = alloca i8, align 1
  %_4 = alloca %"core::ffi::VaListImpl", align 8
  %ap = alloca %"core::ffi::VaListImpl", align 8
  %args = alloca %"core::ffi::VaListImpl", align 8
  %fmt = alloca i8*, align 8
  store i8* %0, i8** %fmt, align 8
  %4 = bitcast %"core::ffi::VaListImpl"* %args to i8*
  call void @llvm.va_start(i8* %4)
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !3868, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %args, metadata !3869, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %ap, metadata !3870, metadata !DIExpression()), !dbg !3874
  store i8 0, i8* %_42, align 1, !dbg !3875
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_4, %"core::ffi::VaListImpl"* align 8 %args)
          to label %bb1 unwind label %cleanup, !dbg !3876

bb22:                                             ; preds = %cleanup
  %5 = load i8, i8* %_42, align 1, !dbg !3877, !range !505, !noundef !23
  %6 = trunc i8 %5 to i1, !dbg !3877
  br i1 %6, label %bb21, label %bb19, !dbg !3877

cleanup:                                          ; preds = %bb9, %bb8, %bb11, %bb10, %bb13, %bb12, %bb4, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb22

bb1:                                              ; preds = %start
  store i8 1, i8* %_42, align 1, !dbg !3878
  %12 = bitcast %"core::ffi::VaListImpl"* %ap to i8*, !dbg !3878
  %13 = bitcast %"core::ffi::VaListImpl"* %_4 to i8*, !dbg !3878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !3878
  br label %bb2, !dbg !3879

bb2:                                              ; preds = %bb15, %bb1
  %14 = load i8*, i8** %fmt, align 8, !dbg !3880
  %_6 = load i8, i8* %14, align 1, !dbg !3880
  %15 = icmp eq i8 %_6, 0, !dbg !3880
  br i1 %15, label %bb16, label %bb3, !dbg !3880

bb16:                                             ; preds = %bb2
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %ap)
          to label %bb17 unwind label %cleanup1, !dbg !3877

bb3:                                              ; preds = %bb2
  %16 = load i8*, i8** %fmt, align 8, !dbg !3881
  %_8 = load i8, i8* %16, align 1, !dbg !3881
  %_7 = sext i8 %_8 to i32, !dbg !3881
  %17 = icmp eq i32 %_7, 37, !dbg !3882
  br i1 %17, label %bb5, label %bb4, !dbg !3882

bb5:                                              ; preds = %bb3
  %_10 = load i8*, i8** %fmt, align 8, !dbg !3883
  store i8* %_10, i8** %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i3, metadata !3884, metadata !DIExpression()), !dbg !3890
  store i64 1, i64* %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i2, metadata !3889, metadata !DIExpression()), !dbg !3892
  %18 = getelementptr inbounds i8, i8* %_10, i64 1, !dbg !3893
  store i8* %18, i8** %1, align 8, !dbg !3893
  %19 = load i8*, i8** %1, align 8, !dbg !3893
  br label %bb6, !dbg !3894

bb4:                                              ; preds = %bb3
  %20 = load i8*, i8** %fmt, align 8, !dbg !3895
  %_39 = load i8, i8* %20, align 1, !dbg !3895
  %_38 = sext i8 %_39 to i32, !dbg !3895
  %_37 = invoke i32 @putchar(i32 %_38)
          to label %bb23 unwind label %cleanup, !dbg !3896

bb23:                                             ; preds = %bb4
  br label %bb14, !dbg !3896

bb14:                                             ; preds = %bb24, %bb25, %bb26, %bb7, %bb6, %bb23
  %_41 = load i8*, i8** %fmt, align 8, !dbg !3897
  store i8* %_41, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !3884, metadata !DIExpression()), !dbg !3898
  store i64 1, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !3889, metadata !DIExpression()), !dbg !3900
  %21 = getelementptr inbounds i8, i8* %_41, i64 1, !dbg !3901
  store i8* %21, i8** %2, align 8, !dbg !3901
  %22 = load i8*, i8** %2, align 8, !dbg !3901
  br label %bb15, !dbg !3902

bb6:                                              ; preds = %bb5
  store i8* %19, i8** %fmt, align 8, !dbg !3903
  %23 = load i8*, i8** %fmt, align 8, !dbg !3904
  %_13 = load i8, i8* %23, align 1, !dbg !3904
  %_12 = icmp eq i8 %_13, 0, !dbg !3905
  %_11 = xor i1 %_12, true, !dbg !3906
  br i1 %_11, label %bb7, label %bb14, !dbg !3906

bb7:                                              ; preds = %bb6
  %24 = load i8*, i8** %fmt, align 8, !dbg !3907
  %_15 = load i8, i8* %24, align 1, !dbg !3907
  %_14 = sext i8 %_15 to i32, !dbg !3907
  switch i32 %_14, label %bb14 [
    i32 105, label %bb8
    i32 100, label %bb8
    i32 102, label %bb10
    i32 115, label %bb12
  ], !dbg !3908

bb8:                                              ; preds = %bb7, %bb7
; invoke core::ffi::VaListImpl::arg
  %_21 = invoke i32 @_ZN4core3ffi10VaListImpl3arg17h346cf3d2ff706f30E(%"core::ffi::VaListImpl"* align 8 %ap)
          to label %bb9 unwind label %cleanup, !dbg !3909

bb10:                                             ; preds = %bb7
; invoke core::ffi::VaListImpl::arg
  %_28 = invoke double @_ZN4core3ffi10VaListImpl3arg17h527596819821ca88E(%"core::ffi::VaListImpl"* align 8 %ap)
          to label %bb11 unwind label %cleanup, !dbg !3910

bb12:                                             ; preds = %bb7
; invoke core::ffi::VaListImpl::arg
  %_35 = invoke i8* @_ZN4core3ffi10VaListImpl3arg17hf947328bb00d6431E(%"core::ffi::VaListImpl"* align 8 %ap)
          to label %bb13 unwind label %cleanup, !dbg !3911

bb13:                                             ; preds = %bb12
  %_30 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc4, i32 0, i32 0, i32 0), i8* %_35)
          to label %bb26 unwind label %cleanup, !dbg !3912

bb26:                                             ; preds = %bb13
  br label %bb14, !dbg !3912

bb11:                                             ; preds = %bb10
  %_23 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc3, i32 0, i32 0, i32 0), double %_28)
          to label %bb25 unwind label %cleanup, !dbg !3913

bb25:                                             ; preds = %bb11
  br label %bb14, !dbg !3913

bb9:                                              ; preds = %bb8
  %_16 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc2, i32 0, i32 0, i32 0), i32 %_21)
          to label %bb24 unwind label %cleanup, !dbg !3914

bb24:                                             ; preds = %bb9
  br label %bb14, !dbg !3914

bb15:                                             ; preds = %bb14
  store i8* %22, i8** %fmt, align 8, !dbg !3915
  br label %bb2, !dbg !3879

bb19:                                             ; preds = %cleanup1, %bb21, %bb22
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args) #16
          to label %bb20 unwind label %abort, !dbg !3877

bb21:                                             ; preds = %bb22
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %ap) #16
          to label %bb19 unwind label %abort, !dbg !3877

abort:                                            ; preds = %bb19, %bb21
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !3916
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3916
  unreachable, !dbg !3916

cleanup1:                                         ; preds = %bb16
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  %28 = extractvalue { i8*, i32 } %26, 1
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %28, i32* %30, align 8
  br label %bb19

bb17:                                             ; preds = %bb16
  store i8 0, i8* %_42, align 1, !dbg !3877
; call core::ptr::drop_in_place<core::ffi::VaListImpl>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args), !dbg !3877
  br label %bb18, !dbg !3877

bb20:                                             ; preds = %bb19
  %31 = bitcast { i8*, i32 }* %3 to i8**, !dbg !3916
  %32 = load i8*, i8** %31, align 8, !dbg !3916
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !3916
  %34 = load i32, i32* %33, align 8, !dbg !3916
  %35 = insertvalue { i8*, i32 } undef, i8* %32, 0, !dbg !3916
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1, !dbg !3916
  resume { i8*, i32 } %36, !dbg !3916

bb18:                                             ; preds = %bb17
  %37 = bitcast %"core::ffi::VaListImpl"* %args to i8*, !dbg !3917
  call void @llvm.va_end(i8* %37), !dbg !3917
  ret void, !dbg !3917
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_simple_vacopy(i8* %fmt, ...) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3918 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %fmt.dbg.spill = alloca i8*, align 8
  %_18 = alloca i8, align 1
  %_17 = alloca i8, align 1
  %_7 = alloca %"core::ffi::VaListImpl", align 8
  %_5 = alloca %"core::ffi::VaListImpl", align 8
  %aq = alloca %"core::ffi::VaListImpl", align 8
  %ap = alloca %"core::ffi::VaListImpl", align 8
  %args = alloca %"core::ffi::VaListImpl", align 8
  %1 = bitcast %"core::ffi::VaListImpl"* %args to i8*
  call void @llvm.va_start(i8* %1)
  store i8* %fmt, i8** %fmt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.dbg.spill, metadata !3920, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %args, metadata !3921, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %ap, metadata !3922, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %aq, metadata !3924, metadata !DIExpression()), !dbg !3929
  store i8 0, i8* %_17, align 1, !dbg !3930
  store i8 0, i8* %_18, align 1, !dbg !3930
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_5, %"core::ffi::VaListImpl"* align 8 %args)
          to label %bb1 unwind label %cleanup, !dbg !3931

bb13:                                             ; preds = %cleanup
  %2 = load i8, i8* %_17, align 1, !dbg !3932, !range !505, !noundef !23
  %3 = trunc i8 %2 to i1, !dbg !3932
  br i1 %3, label %bb12, label %bb15, !dbg !3932

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %bb2, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb13

bb1:                                              ; preds = %start
  store i8 1, i8* %_18, align 1, !dbg !3933
  %9 = bitcast %"core::ffi::VaListImpl"* %ap to i8*, !dbg !3933
  %10 = bitcast %"core::ffi::VaListImpl"* %_5 to i8*, !dbg !3933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !3933
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_7, %"core::ffi::VaListImpl"* align 8 %ap)
          to label %bb2 unwind label %cleanup, !dbg !3934

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_17, align 1, !dbg !3935
  %11 = bitcast %"core::ffi::VaListImpl"* %aq to i8*, !dbg !3935
  %12 = bitcast %"core::ffi::VaListImpl"* %_7 to i8*, !dbg !3935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false), !dbg !3935
; invoke core::ffi::VaListImpl::as_va_list
  %_11 = invoke align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %ap)
          to label %bb3 unwind label %cleanup, !dbg !3936

bb3:                                              ; preds = %bb2
  %_9 = invoke i32 @vprintf(i8* %fmt, i64* align 8 %_11)
          to label %bb4 unwind label %cleanup, !dbg !3937

bb4:                                              ; preds = %bb3
; invoke core::ffi::VaListImpl::as_va_list
  %_15 = invoke align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %aq)
          to label %bb5 unwind label %cleanup, !dbg !3938

bb5:                                              ; preds = %bb4
  %_13 = invoke i32 @vprintf(i8* %fmt, i64* align 8 %_15)
          to label %bb6 unwind label %cleanup, !dbg !3939

bb6:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %aq)
          to label %bb7 unwind label %cleanup1, !dbg !3932

bb15:                                             ; preds = %cleanup1, %bb12, %bb13
  %13 = load i8, i8* %_18, align 1, !dbg !3940, !range !505, !noundef !23
  %14 = trunc i8 %13 to i1, !dbg !3940
  br i1 %14, label %bb14, label %bb10, !dbg !3940

bb12:                                             ; preds = %bb13
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %aq) #16
          to label %bb15 unwind label %abort, !dbg !3932

abort:                                            ; preds = %bb10, %bb14, %bb12
  %15 = landingpad { i8*, i32 }
          cleanup, !dbg !3941
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3941
  unreachable, !dbg !3941

cleanup1:                                         ; preds = %bb6
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb15

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_17, align 1, !dbg !3932
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %ap)
          to label %bb8 unwind label %cleanup2, !dbg !3940

bb10:                                             ; preds = %cleanup2, %bb14, %bb15
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args) #16
          to label %bb11 unwind label %abort, !dbg !3940

bb14:                                             ; preds = %bb15
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %ap) #16
          to label %bb10 unwind label %abort, !dbg !3940

cleanup2:                                         ; preds = %bb7
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb10

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_18, align 1, !dbg !3940
; call core::ptr::drop_in_place<core::ffi::VaListImpl>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args), !dbg !3940
  br label %bb9, !dbg !3940

bb11:                                             ; preds = %bb10
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3941
  %27 = load i8*, i8** %26, align 8, !dbg !3941
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3941
  %29 = load i32, i32* %28, align 8, !dbg !3941
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !3941
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !3941
  resume { i8*, i32 } %31, !dbg !3941

bb9:                                              ; preds = %bb8
  %32 = bitcast %"core::ffi::VaListImpl"* %args to i8*, !dbg !3942
  call void @llvm.va_end(i8* %32), !dbg !3942
  ret void, !dbg !3942
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_valist_struct_member(i8* %fmt, ...) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3943 {
start:
  %slot.i5 = alloca %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>", align 8
  %slot.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>", align 8
  %0 = alloca { i8*, i32 }, align 8
  %fmt.dbg.spill = alloca i8*, align 8
  %_11 = alloca %"core::ffi::VaListImpl", align 8
  %_9 = alloca %"core::ffi::VaListImpl", align 8
  %_8 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>", align 8
  %_7 = alloca %"core::ffi::VaListImpl", align 8
  %b = alloca %"varargs::vastruct", align 8
  %_5 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>", align 8
  %_4 = alloca %"core::ffi::VaListImpl", align 8
  %a = alloca %"varargs::vastruct", align 8
  %args = alloca %"core::ffi::VaListImpl", align 8
  %1 = bitcast %"core::ffi::VaListImpl"* %args to i8*
  call void @llvm.va_start(i8* %1)
  store i8* %fmt, i8** %fmt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.dbg.spill, metadata !3945, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %args, metadata !3946, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.declare(metadata %"varargs::vastruct"* %a, metadata !3947, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.declare(metadata %"varargs::vastruct"* %b, metadata !3949, metadata !DIExpression()), !dbg !3954
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_5 to {}*, !dbg !3955
  br label %bb1, !dbg !3958

bb16:                                             ; preds = %bb15, %cleanup
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args) #16
          to label %bb17 unwind label %abort, !dbg !3959

cleanup:                                          ; preds = %bb11
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb16

bb1:                                              ; preds = %start
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_5, metadata !3960, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i5, metadata !3965, metadata !DIExpression()), !dbg !3969
  %8 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_5 to %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"*, !dbg !3971
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i5 to i8*, !dbg !3971
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %8 to i8*, !dbg !3971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !3971
  %11 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i5 to %"core::ffi::VaListImpl"*, !dbg !3969
  %12 = bitcast %"core::ffi::VaListImpl"* %_4 to i8*, !dbg !3969
  %13 = bitcast %"core::ffi::VaListImpl"* %11 to i8*, !dbg !3969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !3969
  br label %bb2, !dbg !3972

bb2:                                              ; preds = %bb1
  %14 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !3973
  %15 = bitcast %"core::ffi::VaListImpl"* %14 to i8*, !dbg !3973
  %16 = bitcast %"core::ffi::VaListImpl"* %_4 to i8*, !dbg !3973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !3973
  %17 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_8 to {}*, !dbg !3974
  br label %bb3, !dbg !3976

bb15:                                             ; preds = %bb14, %cleanup1
; invoke core::ptr::drop_in_place<items_tests::varargs::vastruct>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E"(%"varargs::vastruct"* %a) #16
          to label %bb16 unwind label %abort, !dbg !3959

cleanup1:                                         ; preds = %bb10
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb15

bb3:                                              ; preds = %bb2
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_8, metadata !3960, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i, metadata !3965, metadata !DIExpression()), !dbg !3979
  %23 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_8 to %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"*, !dbg !3981
  %24 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i to i8*, !dbg !3981
  %25 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %23 to i8*, !dbg !3981
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false), !dbg !3981
  %26 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i to %"core::ffi::VaListImpl"*, !dbg !3979
  %27 = bitcast %"core::ffi::VaListImpl"* %_7 to i8*, !dbg !3979
  %28 = bitcast %"core::ffi::VaListImpl"* %26 to i8*, !dbg !3979
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false), !dbg !3979
  br label %bb4, !dbg !3982

bb4:                                              ; preds = %bb3
  %29 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !3983
  %30 = bitcast %"core::ffi::VaListImpl"* %29 to i8*, !dbg !3983
  %31 = bitcast %"core::ffi::VaListImpl"* %_7 to i8*, !dbg !3983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false), !dbg !3983
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_9, %"core::ffi::VaListImpl"* align 8 %args)
          to label %bb5 unwind label %cleanup2, !dbg !3984

bb14:                                             ; preds = %bb20, %bb18, %cleanup2
; invoke core::ptr::drop_in_place<items_tests::varargs::vastruct>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E"(%"varargs::vastruct"* %b) #16
          to label %bb15 unwind label %abort, !dbg !3985

cleanup2:                                         ; preds = %bb9, %bb8, %bb7, %bb21, %bb19, %bb4
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb14

bb5:                                              ; preds = %bb4
  %37 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !3986
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %37)
          to label %bb19 unwind label %cleanup3, !dbg !3986

bb18:                                             ; preds = %cleanup3
  %38 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !3986
  %39 = bitcast %"core::ffi::VaListImpl"* %38 to i8*, !dbg !3986
  %40 = bitcast %"core::ffi::VaListImpl"* %_9 to i8*, !dbg !3986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false), !dbg !3986
  br label %bb14, !dbg !3986

cleanup3:                                         ; preds = %bb5
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb18

bb19:                                             ; preds = %bb5
  %46 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !3986
  %47 = bitcast %"core::ffi::VaListImpl"* %46 to i8*, !dbg !3986
  %48 = bitcast %"core::ffi::VaListImpl"* %_9 to i8*, !dbg !3986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false), !dbg !3986
  %_12 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !3987
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_11, %"core::ffi::VaListImpl"* align 8 %_12)
          to label %bb6 unwind label %cleanup2, !dbg !3987

bb6:                                              ; preds = %bb19
  %49 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !3988
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %49)
          to label %bb21 unwind label %cleanup4, !dbg !3988

bb20:                                             ; preds = %cleanup4
  %50 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !3988
  %51 = bitcast %"core::ffi::VaListImpl"* %50 to i8*, !dbg !3988
  %52 = bitcast %"core::ffi::VaListImpl"* %_11 to i8*, !dbg !3988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false), !dbg !3988
  br label %bb14, !dbg !3988

cleanup4:                                         ; preds = %bb6
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb20

bb21:                                             ; preds = %bb6
  %58 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !3988
  %59 = bitcast %"core::ffi::VaListImpl"* %58 to i8*, !dbg !3988
  %60 = bitcast %"core::ffi::VaListImpl"* %_11 to i8*, !dbg !3988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false), !dbg !3988
  %_16 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !3989
; invoke core::ffi::VaListImpl::as_va_list
  %_15 = invoke align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %_16)
          to label %bb7 unwind label %cleanup2, !dbg !3989

bb7:                                              ; preds = %bb21
  %_13 = invoke i32 @vprintf(i8* %fmt, i64* align 8 %_15)
          to label %bb8 unwind label %cleanup2, !dbg !3990

bb8:                                              ; preds = %bb7
  %_20 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !3991
; invoke core::ffi::VaListImpl::as_va_list
  %_19 = invoke align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %_20)
          to label %bb9 unwind label %cleanup2, !dbg !3991

bb9:                                              ; preds = %bb8
  %_17 = invoke i32 @vprintf(i8* %fmt, i64* align 8 %_19)
          to label %bb10 unwind label %cleanup2, !dbg !3992

bb10:                                             ; preds = %bb9
; invoke core::ptr::drop_in_place<items_tests::varargs::vastruct>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E"(%"varargs::vastruct"* %b)
          to label %bb11 unwind label %cleanup1, !dbg !3985

abort:                                            ; preds = %bb16, %bb15, %bb14
  %61 = landingpad { i8*, i32 }
          cleanup, !dbg !3993
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3993
  unreachable, !dbg !3993

bb11:                                             ; preds = %bb10
; invoke core::ptr::drop_in_place<items_tests::varargs::vastruct>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E"(%"varargs::vastruct"* %a)
          to label %bb12 unwind label %cleanup, !dbg !3959

bb12:                                             ; preds = %bb11
; call core::ptr::drop_in_place<core::ffi::VaListImpl>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args), !dbg !3959
  br label %bb13, !dbg !3959

bb17:                                             ; preds = %bb16
  %62 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3993
  %63 = load i8*, i8** %62, align 8, !dbg !3993
  %64 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3993
  %65 = load i32, i32* %64, align 8, !dbg !3993
  %66 = insertvalue { i8*, i32 } undef, i8* %63, 0, !dbg !3993
  %67 = insertvalue { i8*, i32 } %66, i32 %65, 1, !dbg !3993
  resume { i8*, i32 } %67, !dbg !3993

bb13:                                             ; preds = %bb12
  %68 = bitcast %"core::ffi::VaListImpl"* %args to i8*, !dbg !3994
  call void @llvm.va_end(i8* %68), !dbg !3994
  ret void, !dbg !3994
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_valist_struct_pointer_member(i8* %fmt, ...) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3995 {
start:
  %slot.i5 = alloca %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>", align 8
  %slot.i = alloca %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>", align 8
  %q.dbg.spill = alloca %"varargs::vastruct"*, align 8
  %p.dbg.spill = alloca %"varargs::vastruct"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %fmt.dbg.spill = alloca i8*, align 8
  %_15 = alloca %"core::ffi::VaListImpl", align 8
  %_13 = alloca %"core::ffi::VaListImpl", align 8
  %_8 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>", align 8
  %_7 = alloca %"core::ffi::VaListImpl", align 8
  %b = alloca %"varargs::vastruct", align 8
  %_5 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>", align 8
  %_4 = alloca %"core::ffi::VaListImpl", align 8
  %a = alloca %"varargs::vastruct", align 8
  %args = alloca %"core::ffi::VaListImpl", align 8
  %1 = bitcast %"core::ffi::VaListImpl"* %args to i8*
  call void @llvm.va_start(i8* %1)
  store i8* %fmt, i8** %fmt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.dbg.spill, metadata !3997, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %args, metadata !3998, metadata !DIExpression()), !dbg !4008
  call void @llvm.dbg.declare(metadata %"varargs::vastruct"* %a, metadata !3999, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.declare(metadata %"varargs::vastruct"* %b, metadata !4001, metadata !DIExpression()), !dbg !4010
  %2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_5 to {}*, !dbg !4011
  br label %bb1, !dbg !4013

bb16:                                             ; preds = %bb15, %cleanup
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args) #16
          to label %bb17 unwind label %abort, !dbg !4014

cleanup:                                          ; preds = %bb11
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb16

bb1:                                              ; preds = %start
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_5, metadata !3960, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i5, metadata !3965, metadata !DIExpression()), !dbg !4017
  %8 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_5 to %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"*, !dbg !4019
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i5 to i8*, !dbg !4019
  %10 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %8 to i8*, !dbg !4019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !4019
  %11 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i5 to %"core::ffi::VaListImpl"*, !dbg !4017
  %12 = bitcast %"core::ffi::VaListImpl"* %_4 to i8*, !dbg !4017
  %13 = bitcast %"core::ffi::VaListImpl"* %11 to i8*, !dbg !4017
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !4017
  br label %bb2, !dbg !4020

bb2:                                              ; preds = %bb1
  %14 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !4021
  %15 = bitcast %"core::ffi::VaListImpl"* %14 to i8*, !dbg !4021
  %16 = bitcast %"core::ffi::VaListImpl"* %_4 to i8*, !dbg !4021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !4021
  %17 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_8 to {}*, !dbg !4022
  br label %bb3, !dbg !4024

bb15:                                             ; preds = %bb14, %cleanup1
; invoke core::ptr::drop_in_place<items_tests::varargs::vastruct>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E"(%"varargs::vastruct"* %a) #16
          to label %bb16 unwind label %abort, !dbg !4014

cleanup1:                                         ; preds = %bb10
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb15

bb3:                                              ; preds = %bb2
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_8, metadata !3960, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i, metadata !3965, metadata !DIExpression()), !dbg !4027
  %23 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>"* %_8 to %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"*, !dbg !4029
  %24 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i to i8*, !dbg !4029
  %25 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %23 to i8*, !dbg !4029
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false), !dbg !4029
  %26 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::ffi::VaListImpl>"* %slot.i to %"core::ffi::VaListImpl"*, !dbg !4027
  %27 = bitcast %"core::ffi::VaListImpl"* %_7 to i8*, !dbg !4027
  %28 = bitcast %"core::ffi::VaListImpl"* %26 to i8*, !dbg !4027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false), !dbg !4027
  br label %bb4, !dbg !4030

bb4:                                              ; preds = %bb3
  %29 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !4031
  %30 = bitcast %"core::ffi::VaListImpl"* %29 to i8*, !dbg !4031
  %31 = bitcast %"core::ffi::VaListImpl"* %_7 to i8*, !dbg !4031
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false), !dbg !4031
  store %"varargs::vastruct"* %a, %"varargs::vastruct"** %p.dbg.spill, align 8, !dbg !4032
  call void @llvm.dbg.declare(metadata %"varargs::vastruct"** %p.dbg.spill, metadata !4003, metadata !DIExpression()), !dbg !4033
  store %"varargs::vastruct"* %b, %"varargs::vastruct"** %q.dbg.spill, align 8, !dbg !4034
  call void @llvm.dbg.declare(metadata %"varargs::vastruct"** %q.dbg.spill, metadata !4005, metadata !DIExpression()), !dbg !4035
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_13, %"core::ffi::VaListImpl"* align 8 %args)
          to label %bb5 unwind label %cleanup2, !dbg !4036

bb14:                                             ; preds = %bb20, %bb18, %cleanup2
; invoke core::ptr::drop_in_place<items_tests::varargs::vastruct>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E"(%"varargs::vastruct"* %b) #16
          to label %bb15 unwind label %abort, !dbg !4037

cleanup2:                                         ; preds = %bb9, %bb8, %bb7, %bb21, %bb19, %bb4
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb14

bb5:                                              ; preds = %bb4
  %37 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !4038
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %37)
          to label %bb19 unwind label %cleanup3, !dbg !4038

bb18:                                             ; preds = %cleanup3
  %38 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !4038
  %39 = bitcast %"core::ffi::VaListImpl"* %38 to i8*, !dbg !4038
  %40 = bitcast %"core::ffi::VaListImpl"* %_13 to i8*, !dbg !4038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false), !dbg !4038
  br label %bb14, !dbg !4038

cleanup3:                                         ; preds = %bb5
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb18

bb19:                                             ; preds = %bb5
  %46 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !4038
  %47 = bitcast %"core::ffi::VaListImpl"* %46 to i8*, !dbg !4038
  %48 = bitcast %"core::ffi::VaListImpl"* %_13 to i8*, !dbg !4038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false), !dbg !4038
  %_16 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !4039
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_15, %"core::ffi::VaListImpl"* align 8 %_16)
          to label %bb6 unwind label %cleanup2, !dbg !4039

bb6:                                              ; preds = %bb19
  %49 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !4040
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %49)
          to label %bb21 unwind label %cleanup4, !dbg !4040

bb20:                                             ; preds = %cleanup4
  %50 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !4040
  %51 = bitcast %"core::ffi::VaListImpl"* %50 to i8*, !dbg !4040
  %52 = bitcast %"core::ffi::VaListImpl"* %_15 to i8*, !dbg !4040
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false), !dbg !4040
  br label %bb14, !dbg !4040

cleanup4:                                         ; preds = %bb6
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb20

bb21:                                             ; preds = %bb6
  %58 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !4040
  %59 = bitcast %"core::ffi::VaListImpl"* %58 to i8*, !dbg !4040
  %60 = bitcast %"core::ffi::VaListImpl"* %_15 to i8*, !dbg !4040
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false), !dbg !4040
  %_20 = bitcast %"varargs::vastruct"* %a to %"core::ffi::VaListImpl"*, !dbg !4041
; invoke core::ffi::VaListImpl::as_va_list
  %_19 = invoke align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %_20)
          to label %bb7 unwind label %cleanup2, !dbg !4041

bb7:                                              ; preds = %bb21
  %_17 = invoke i32 @vprintf(i8* %fmt, i64* align 8 %_19)
          to label %bb8 unwind label %cleanup2, !dbg !4042

bb8:                                              ; preds = %bb7
  %_24 = bitcast %"varargs::vastruct"* %b to %"core::ffi::VaListImpl"*, !dbg !4043
; invoke core::ffi::VaListImpl::as_va_list
  %_23 = invoke align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %_24)
          to label %bb9 unwind label %cleanup2, !dbg !4043

bb9:                                              ; preds = %bb8
  %_21 = invoke i32 @vprintf(i8* %fmt, i64* align 8 %_23)
          to label %bb10 unwind label %cleanup2, !dbg !4044

bb10:                                             ; preds = %bb9
; invoke core::ptr::drop_in_place<items_tests::varargs::vastruct>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E"(%"varargs::vastruct"* %b)
          to label %bb11 unwind label %cleanup1, !dbg !4037

abort:                                            ; preds = %bb16, %bb15, %bb14
  %61 = landingpad { i8*, i32 }
          cleanup, !dbg !4045
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4045
  unreachable, !dbg !4045

bb11:                                             ; preds = %bb10
; invoke core::ptr::drop_in_place<items_tests::varargs::vastruct>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E"(%"varargs::vastruct"* %a)
          to label %bb12 unwind label %cleanup, !dbg !4014

bb12:                                             ; preds = %bb11
; call core::ptr::drop_in_place<core::ffi::VaListImpl>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args), !dbg !4014
  br label %bb13, !dbg !4014

bb17:                                             ; preds = %bb16
  %62 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4045
  %63 = load i8*, i8** %62, align 8, !dbg !4045
  %64 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4045
  %65 = load i32, i32* %64, align 8, !dbg !4045
  %66 = insertvalue { i8*, i32 } undef, i8* %63, 0, !dbg !4045
  %67 = insertvalue { i8*, i32 } %66, i32 %65, 1, !dbg !4045
  resume { i8*, i32 } %67, !dbg !4045

bb13:                                             ; preds = %bb12
  %68 = bitcast %"core::ffi::VaListImpl"* %args to i8*, !dbg !4046
  call void @llvm.va_end(i8* %68), !dbg !4046
  ret void, !dbg !4046
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_restart_valist(i8* %fmt, ...) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4047 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %fmt.dbg.spill = alloca i8*, align 8
  %_16 = alloca i8, align 1
  %_10 = alloca %"core::ffi::VaListImpl", align 8
  %_4 = alloca %"core::ffi::VaListImpl", align 8
  %ap = alloca %"core::ffi::VaListImpl", align 8
  %args = alloca %"core::ffi::VaListImpl", align 8
  %1 = bitcast %"core::ffi::VaListImpl"* %args to i8*
  call void @llvm.va_start(i8* %1)
  store i8* %fmt, i8** %fmt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.dbg.spill, metadata !4049, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %args, metadata !4050, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %ap, metadata !4051, metadata !DIExpression()), !dbg !4055
  store i8 0, i8* %_16, align 1, !dbg !4056
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_4, %"core::ffi::VaListImpl"* align 8 %args)
          to label %bb1 unwind label %cleanup, !dbg !4057

bb14:                                             ; preds = %bb11, %cleanup
  %2 = load i8, i8* %_16, align 1, !dbg !4058, !range !505, !noundef !23
  %3 = trunc i8 %2 to i1, !dbg !4058
  br i1 %3, label %bb13, label %bb9, !dbg !4058

cleanup:                                          ; preds = %bb5, %bb12, %bb3, %bb2, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb14

bb1:                                              ; preds = %start
  store i8 1, i8* %_16, align 1, !dbg !4059
  %9 = bitcast %"core::ffi::VaListImpl"* %ap to i8*, !dbg !4059
  %10 = bitcast %"core::ffi::VaListImpl"* %_4 to i8*, !dbg !4059
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !4059
; invoke core::ffi::VaListImpl::as_va_list
  %_8 = invoke align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %ap)
          to label %bb2 unwind label %cleanup, !dbg !4060

bb2:                                              ; preds = %bb1
  %_6 = invoke i32 @vprintf(i8* %fmt, i64* align 8 %_8)
          to label %bb3 unwind label %cleanup, !dbg !4061

bb3:                                              ; preds = %bb2
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_10, %"core::ffi::VaListImpl"* align 8 %args)
          to label %bb4 unwind label %cleanup, !dbg !4062

bb4:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %ap)
          to label %bb12 unwind label %cleanup1, !dbg !4063

bb11:                                             ; preds = %cleanup1
  store i8 1, i8* %_16, align 1, !dbg !4063
  %11 = bitcast %"core::ffi::VaListImpl"* %ap to i8*, !dbg !4063
  %12 = bitcast %"core::ffi::VaListImpl"* %_10 to i8*, !dbg !4063
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false), !dbg !4063
  br label %bb14, !dbg !4063

cleanup1:                                         ; preds = %bb4
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb11

bb12:                                             ; preds = %bb4
  store i8 1, i8* %_16, align 1, !dbg !4063
  %18 = bitcast %"core::ffi::VaListImpl"* %ap to i8*, !dbg !4063
  %19 = bitcast %"core::ffi::VaListImpl"* %_10 to i8*, !dbg !4063
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false), !dbg !4063
; invoke core::ffi::VaListImpl::as_va_list
  %_14 = invoke align 8 i64* @_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE(%"core::ffi::VaListImpl"* align 8 %ap)
          to label %bb5 unwind label %cleanup, !dbg !4064

bb5:                                              ; preds = %bb12
  %_12 = invoke i32 @vprintf(i8* %fmt, i64* align 8 %_14)
          to label %bb6 unwind label %cleanup, !dbg !4065

bb6:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %ap)
          to label %bb7 unwind label %cleanup2, !dbg !4058

bb9:                                              ; preds = %cleanup2, %bb13, %bb14
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args) #16
          to label %bb10 unwind label %abort, !dbg !4058

bb13:                                             ; preds = %bb14
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %ap) #16
          to label %bb9 unwind label %abort, !dbg !4058

abort:                                            ; preds = %bb9, %bb13
  %20 = landingpad { i8*, i32 }
          cleanup, !dbg !4066
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4066
  unreachable, !dbg !4066

cleanup2:                                         ; preds = %bb6
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb9

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_16, align 1, !dbg !4058
; call core::ptr::drop_in_place<core::ffi::VaListImpl>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args), !dbg !4058
  br label %bb8, !dbg !4058

bb10:                                             ; preds = %bb9
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4066
  %27 = load i8*, i8** %26, align 8, !dbg !4066
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4066
  %29 = load i32, i32* %28, align 8, !dbg !4066
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !4066
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !4066
  resume { i8*, i32 } %31, !dbg !4066

bb8:                                              ; preds = %bb7
  %32 = bitcast %"core::ffi::VaListImpl"* %args to i8*, !dbg !4067
  call void @llvm.va_end(i8* %32), !dbg !4067
  ret void, !dbg !4067
}

; Function Attrs: nonlazybind uwtable
define dso_local double @rust_sample_stddev(i32 %count, ...) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4068 {
start:
  %num_0.dbg.spill = alloca double, align 8
  %mean.dbg.spill = alloca double, align 8
  %num.dbg.spill = alloca double, align 8
  %0 = alloca { i8*, i32 }, align 8
  %count.dbg.spill = alloca i32, align 4
  %_42 = alloca i8, align 1
  %_41 = alloca i8, align 1
  %i_0 = alloca i32, align 4
  %sum_sq_diff = alloca double, align 8
  %i = alloca i32, align 4
  %_8 = alloca %"core::ffi::VaListImpl", align 8
  %args2 = alloca %"core::ffi::VaListImpl", align 8
  %_5 = alloca %"core::ffi::VaListImpl", align 8
  %args1 = alloca %"core::ffi::VaListImpl", align 8
  %sum = alloca double, align 8
  %args = alloca %"core::ffi::VaListImpl", align 8
  %1 = bitcast %"core::ffi::VaListImpl"* %args to i8*
  call void @llvm.va_start(i8* %1)
  store i32 %count, i32* %count.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %count.dbg.spill, metadata !4072, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %args, metadata !4073, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.declare(metadata double* %sum, metadata !4074, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %args1, metadata !4076, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.declare(metadata %"core::ffi::VaListImpl"* %args2, metadata !4078, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4080, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.declare(metadata double* %sum_sq_diff, metadata !4086, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.declare(metadata i32* %i_0, metadata !4088, metadata !DIExpression()), !dbg !4099
  store i8 0, i8* %_41, align 1, !dbg !4100
  store i8 0, i8* %_42, align 1, !dbg !4100
  store double 0.000000e+00, double* %sum, align 8, !dbg !4101
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_5, %"core::ffi::VaListImpl"* align 8 %args)
          to label %bb1 unwind label %cleanup, !dbg !4102

bb22:                                             ; preds = %bb19, %bb20, %cleanup
  %2 = load i8, i8* %_42, align 1, !dbg !4103, !range !505, !noundef !23
  %3 = trunc i8 %2 to i1, !dbg !4103
  br i1 %3, label %bb21, label %bb17, !dbg !4103

cleanup:                                          ; preds = %bb13, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb22

bb1:                                              ; preds = %start
  store i8 1, i8* %_42, align 1, !dbg !4104
  %9 = bitcast %"core::ffi::VaListImpl"* %args1 to i8*, !dbg !4104
  %10 = bitcast %"core::ffi::VaListImpl"* %_5 to i8*, !dbg !4104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !4104
; invoke <core::ffi::VaListImpl as core::clone::Clone>::clone
  invoke void @"_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE"(%"core::ffi::VaListImpl"* sret(%"core::ffi::VaListImpl") %_8, %"core::ffi::VaListImpl"* align 8 %args1)
          to label %bb2 unwind label %cleanup1, !dbg !4105

bb20:                                             ; preds = %cleanup1
  %11 = load i8, i8* %_41, align 1, !dbg !4106, !range !505, !noundef !23
  %12 = trunc i8 %11 to i1, !dbg !4106
  br i1 %12, label %bb19, label %bb22, !dbg !4106

cleanup1:                                         ; preds = %bb12, %panic2, %bb9, %panic, %bb4, %bb1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  %15 = extractvalue { i8*, i32 } %13, 1
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %15, i32* %17, align 8
  br label %bb20

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_41, align 1, !dbg !4107
  %18 = bitcast %"core::ffi::VaListImpl"* %args2 to i8*, !dbg !4107
  %19 = bitcast %"core::ffi::VaListImpl"* %_8 to i8*, !dbg !4107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false), !dbg !4107
  store i32 0, i32* %i, align 4, !dbg !4108
  br label %bb3, !dbg !4109

bb3:                                              ; preds = %bb6, %bb2
  %_12 = load i32, i32* %i, align 4, !dbg !4110
  %_11 = icmp slt i32 %_12, %count, !dbg !4110
  br i1 %_11, label %bb4, label %bb7, !dbg !4110

bb7:                                              ; preds = %bb3
  %_19 = load double, double* %sum, align 8, !dbg !4111
  %_20 = sitofp i32 %count to double, !dbg !4112
  %mean = fdiv double %_19, %_20, !dbg !4111
  store double %mean, double* %mean.dbg.spill, align 8, !dbg !4111
  call void @llvm.dbg.declare(metadata double* %mean.dbg.spill, metadata !4084, metadata !DIExpression()), !dbg !4113
  store double 0.000000e+00, double* %sum_sq_diff, align 8, !dbg !4114
  store i32 0, i32* %i_0, align 4, !dbg !4115
  br label %bb8, !dbg !4116

bb4:                                              ; preds = %bb3
; invoke core::ffi::VaListImpl::arg
  %num = invoke double @_ZN4core3ffi10VaListImpl3arg17h527596819821ca88E(%"core::ffi::VaListImpl"* align 8 %args1)
          to label %bb5 unwind label %cleanup1, !dbg !4117

bb5:                                              ; preds = %bb4
  store double %num, double* %num.dbg.spill, align 8, !dbg !4117
  call void @llvm.dbg.declare(metadata double* %num.dbg.spill, metadata !4082, metadata !DIExpression()), !dbg !4118
  %20 = load double, double* %sum, align 8, !dbg !4119
  %21 = fadd double %20, %num, !dbg !4119
  store double %21, double* %sum, align 8, !dbg !4119
  %22 = load i32, i32* %i, align 4, !dbg !4120
  %23 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 1), !dbg !4120
  %_17.0 = extractvalue { i32, i1 } %23, 0, !dbg !4120
  %_17.1 = extractvalue { i32, i1 } %23, 1, !dbg !4120
  %24 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !4120
  br i1 %24, label %panic, label %bb6, !dbg !4120

bb6:                                              ; preds = %bb5
  store i32 %_17.0, i32* %i, align 4, !dbg !4120
  br label %bb3, !dbg !4109

panic:                                            ; preds = %bb5
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.4 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc589 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup1, !dbg !4120

unreachable:                                      ; preds = %panic2, %panic
  unreachable

bb8:                                              ; preds = %bb11, %bb7
  %_25 = load i32, i32* %i_0, align 4, !dbg !4121
  %_24 = icmp slt i32 %_25, %count, !dbg !4121
  br i1 %_24, label %bb9, label %bb12, !dbg !4121

bb12:                                             ; preds = %bb8
  %_38 = load double, double* %sum_sq_diff, align 8, !dbg !4122
  %_39 = sitofp i32 %count to double, !dbg !4123
  %_37 = fdiv double %_38, %_39, !dbg !4122
  %25 = invoke double @sqrt(double %_37)
          to label %bb13 unwind label %cleanup1, !dbg !4124

bb9:                                              ; preds = %bb8
; invoke core::ffi::VaListImpl::arg
  %num_0 = invoke double @_ZN4core3ffi10VaListImpl3arg17h527596819821ca88E(%"core::ffi::VaListImpl"* align 8 %args2)
          to label %bb10 unwind label %cleanup1, !dbg !4125

bb10:                                             ; preds = %bb9
  store double %num_0, double* %num_0.dbg.spill, align 8, !dbg !4125
  call void @llvm.dbg.declare(metadata double* %num_0.dbg.spill, metadata !4090, metadata !DIExpression()), !dbg !4126
  %_30 = fsub double %num_0, %mean, !dbg !4127
  %_33 = fsub double %num_0, %mean, !dbg !4128
  %_29 = fmul double %_30, %_33, !dbg !4127
  %26 = load double, double* %sum_sq_diff, align 8, !dbg !4129
  %27 = fadd double %26, %_29, !dbg !4129
  store double %27, double* %sum_sq_diff, align 8, !dbg !4129
  %28 = load i32, i32* %i_0, align 4, !dbg !4130
  %29 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 1), !dbg !4130
  %_36.0 = extractvalue { i32, i1 } %29, 0, !dbg !4130
  %_36.1 = extractvalue { i32, i1 } %29, 1, !dbg !4130
  %30 = call i1 @llvm.expect.i1(i1 %_36.1, i1 false), !dbg !4130
  br i1 %30, label %panic2, label %bb11, !dbg !4130

bb11:                                             ; preds = %bb10
  store i32 %_36.0, i32* %i_0, align 4, !dbg !4130
  br label %bb8, !dbg !4116

panic2:                                           ; preds = %bb10
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.4 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc591 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup1, !dbg !4130

bb13:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args2)
          to label %bb14 unwind label %cleanup, !dbg !4106

bb19:                                             ; preds = %bb20
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args2) #16
          to label %bb22 unwind label %abort, !dbg !4106

abort:                                            ; preds = %bb17, %bb21, %bb19
  %31 = landingpad { i8*, i32 }
          cleanup, !dbg !4131
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4131
  unreachable, !dbg !4131

bb14:                                             ; preds = %bb13
  store i8 0, i8* %_41, align 1, !dbg !4106
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args1)
          to label %bb15 unwind label %cleanup3, !dbg !4103

bb17:                                             ; preds = %cleanup3, %bb21, %bb22
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args) #16
          to label %bb18 unwind label %abort, !dbg !4132

bb21:                                             ; preds = %bb22
; invoke core::ptr::drop_in_place<core::ffi::VaListImpl>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args1) #16
          to label %bb17 unwind label %abort, !dbg !4103

cleanup3:                                         ; preds = %bb14
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb17

bb15:                                             ; preds = %bb14
  store i8 0, i8* %_42, align 1, !dbg !4103
; call core::ptr::drop_in_place<core::ffi::VaListImpl>
  call void @"_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E"(%"core::ffi::VaListImpl"* %args), !dbg !4132
  br label %bb16, !dbg !4132

bb18:                                             ; preds = %bb17
  %37 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4131
  %38 = load i8*, i8** %37, align 8, !dbg !4131
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4131
  %40 = load i32, i32* %39, align 8, !dbg !4131
  %41 = insertvalue { i8*, i32 } undef, i8* %38, 0, !dbg !4131
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1, !dbg !4131
  resume { i8*, i32 } %42, !dbg !4131

bb16:                                             ; preds = %bb15
  %43 = bitcast %"core::ffi::VaListImpl"* %args to i8*, !dbg !4133
  call void @llvm.va_end(i8* %43), !dbg !4133
  ret double %25, !dbg !4133
}

; items_tests::fn_attrs::rust_noinline_static
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN11items_tests8fn_attrs20rust_noinline_static17h8098ac66557fc4ccE() unnamed_addr #1 !dbg !4134 {
start:
  ret void, !dbg !4137
}

; items_tests::fn_attrs::rust_inline_static
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN11items_tests8fn_attrs18rust_inline_static17h9787aae2402beb96E() unnamed_addr #0 !dbg !4138 {
start:
  ret void, !dbg !4139
}

; items_tests::fn_attrs::rust_alt_kw_inline_static
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN11items_tests8fn_attrs25rust_alt_kw_inline_static17hea6695195cf7f1e8E() unnamed_addr #0 !dbg !4140 {
start:
  ret void, !dbg !4141
}

; items_tests::fn_attrs::rust_gnu_inline_static
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN11items_tests8fn_attrs22rust_gnu_inline_static17hf2ed25cb3d7132b1E() unnamed_addr #0 !dbg !4142 {
start:
  ret void, !dbg !4143
}

; items_tests::fn_attrs::rust_gnu_inline_nonstatic
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN11items_tests8fn_attrs25rust_gnu_inline_nonstatic17h9e66c1bbe3a90657E() unnamed_addr #0 !dbg !4144 {
start:
  ret void, !dbg !4145
}

; Function Attrs: noinline nonlazybind uwtable
define dso_local void @rust_noinline_nonstatic() unnamed_addr #1 !dbg !4146 {
start:
  ret void, !dbg !4147
}

; items_tests::fn_attrs::rust_inline_nonstatic
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN11items_tests8fn_attrs21rust_inline_nonstatic17h58452cb7d54a7b3fE() unnamed_addr #0 !dbg !4148 {
start:
  ret void, !dbg !4149
}

; items_tests::fn_attrs::rust_alt_kw_inline_nonstatic
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN11items_tests8fn_attrs28rust_alt_kw_inline_nonstatic17hcd0e5255ef56515bE() unnamed_addr #0 !dbg !4150 {
start:
  ret void, !dbg !4151
}

; Function Attrs: inlinehint nonlazybind uwtable
define dso_local void @rust_inline_extern() unnamed_addr #0 !dbg !4152 {
start:
  ret void, !dbg !4153
}

; Function Attrs: inlinehint nonlazybind uwtable
define dso_local void @rust_alt_kw_inline_extern() unnamed_addr #0 !dbg !4154 {
start:
  ret void, !dbg !4155
}

; Function Attrs: alwaysinline nonlazybind uwtable
define dso_local void @rust_always_inline_extern() unnamed_addr #4 !dbg !4156 {
start:
  ret void, !dbg !4157
}

; items_tests::fn_attrs::rust_gnu_inline_extern
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN11items_tests8fn_attrs22rust_gnu_inline_extern17h7da998b9371a6cf2E() unnamed_addr #0 !dbg !4158 {
start:
  ret void, !dbg !4159
}

; items_tests::fn_attrs::rust_gnu_inline_non_canonical_definition_extern
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN11items_tests8fn_attrs47rust_gnu_inline_non_canonical_definition_extern17h6457b12254a8001bE() unnamed_addr #0 !dbg !4160 {
start:
  ret void, !dbg !4161
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_ensure_use() unnamed_addr #2 !dbg !4162 {
start:
  br label %bb1, !dbg !4163

bb1:                                              ; preds = %start
  br label %bb2, !dbg !4164

bb2:                                              ; preds = %bb1
; call items_tests::fn_attrs::rust_gnu_inline_nonstatic
  call void @_ZN11items_tests8fn_attrs25rust_gnu_inline_nonstatic17h9e66c1bbe3a90657E(), !dbg !4165
  br label %bb3, !dbg !4165

bb3:                                              ; preds = %bb2
; call items_tests::fn_attrs::rust_inline_static
  call void @_ZN11items_tests8fn_attrs18rust_inline_static17h9787aae2402beb96E(), !dbg !4166
  br label %bb4, !dbg !4166

bb4:                                              ; preds = %bb3
; call items_tests::fn_attrs::rust_alt_kw_inline_static
  call void @_ZN11items_tests8fn_attrs25rust_alt_kw_inline_static17hea6695195cf7f1e8E(), !dbg !4167
  br label %bb5, !dbg !4167

bb5:                                              ; preds = %bb4
; call items_tests::fn_attrs::rust_noinline_static
  call void @_ZN11items_tests8fn_attrs20rust_noinline_static17h8098ac66557fc4ccE(), !dbg !4168
  br label %bb6, !dbg !4168

bb6:                                              ; preds = %bb5
; call items_tests::fn_attrs::rust_inline_nonstatic
  call void @_ZN11items_tests8fn_attrs21rust_inline_nonstatic17h58452cb7d54a7b3fE(), !dbg !4169
  br label %bb7, !dbg !4169

bb7:                                              ; preds = %bb6
; call items_tests::fn_attrs::rust_alt_kw_inline_nonstatic
  call void @_ZN11items_tests8fn_attrs28rust_alt_kw_inline_nonstatic17hcd0e5255ef56515bE(), !dbg !4170
  br label %bb8, !dbg !4170

bb8:                                              ; preds = %bb7
; call items_tests::fn_attrs::rust_gnu_inline_static
  call void @_ZN11items_tests8fn_attrs22rust_gnu_inline_static17hf2ed25cb3d7132b1E(), !dbg !4171
  br label %bb9, !dbg !4171

bb9:                                              ; preds = %bb8
  call void @rust_inline_extern(), !dbg !4172
  br label %bb10, !dbg !4172

bb10:                                             ; preds = %bb9
  call void @rust_alt_kw_inline_extern(), !dbg !4173
  br label %bb11, !dbg !4173

bb11:                                             ; preds = %bb10
  br label %bb12, !dbg !4174

bb12:                                             ; preds = %bb11
; call items_tests::fn_attrs::rust_gnu_inline_extern
  call void @_ZN11items_tests8fn_attrs22rust_gnu_inline_extern17h7da998b9371a6cf2E(), !dbg !4175
  br label %bb13, !dbg !4175

bb13:                                             ; preds = %bb12
  br label %bb14, !dbg !4176

bb14:                                             ; preds = %bb13
; call items_tests::fn_attrs::rust_gnu_inline_non_canonical_definition_extern
  call void @_ZN11items_tests8fn_attrs47rust_gnu_inline_non_canonical_definition_extern17h6457b12254a8001bE(), !dbg !4177
  br label %bb15, !dbg !4177

bb15:                                             ; preds = %bb14
  call void @inline_extern(), !dbg !4178
  br label %bb16, !dbg !4178

bb16:                                             ; preds = %bb15
  ret void, !dbg !4179
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_nofnargs() unnamed_addr #2 !dbg !4180 {
start:
  ret i32 0, !dbg !4183
}

; items_tests::test_noop::test_noop::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests9test_noop9test_noop28_$u7b$$u7b$closure$u7d$$u7d$17h25e9900ed25c3047E"(%"[closure@src/test_noop.rs:14:1: 19:2]"* align 1 %_1) unnamed_addr #0 !dbg !4184 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_noop.rs:14:1: 19:2]"*, align 8
  store %"[closure@src/test_noop.rs:14:1: 19:2]"* %_1, %"[closure@src/test_noop.rs:14:1: 19:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_noop.rs:14:1: 19:2]"** %_1.dbg.spill, metadata !4190, metadata !DIExpression()), !dbg !4191
  call void @test_noop(), !dbg !4191
  br label %bb1, !dbg !4191

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4191
  br label %bb2, !dbg !4191

bb2:                                              ; preds = %bb1
  ret void, !dbg !4192
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_noop() unnamed_addr #2 !dbg !4193 {
start:
  call void @noop(), !dbg !4194
  br label %bb1, !dbg !4194

bb1:                                              ; preds = %start
  call void @rust_noop(), !dbg !4195
  br label %bb2, !dbg !4195

bb2:                                              ; preds = %bb1
  ret void, !dbg !4196
}

; items_tests::test_noop::test_nofnargs::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests9test_noop13test_nofnargs28_$u7b$$u7b$closure$u7d$$u7d$17h7138966bf29b488dE"(%"[closure@src/test_noop.rs:22:1: 28:2]"* align 1 %_1) unnamed_addr #0 !dbg !4197 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_noop.rs:22:1: 28:2]"*, align 8
  store %"[closure@src/test_noop.rs:22:1: 28:2]"* %_1, %"[closure@src/test_noop.rs:22:1: 28:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_noop.rs:22:1: 28:2]"** %_1.dbg.spill, metadata !4202, metadata !DIExpression()), !dbg !4203
  call void @test_nofnargs(), !dbg !4203
  br label %bb1, !dbg !4203

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4203
  br label %bb2, !dbg !4203

bb2:                                              ; preds = %bb1
  ret void, !dbg !4204
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_nofnargs() unnamed_addr #2 !dbg !4205 {
start:
  %right_val.dbg.spill5 = alloca i32*, align 8
  %left_val.dbg.spill3 = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_36 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_20 = alloca { i32*, i32* }, align 8
  %_19 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_3 = alloca { i32*, i32* }, align 8
  %rust_ret = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4207, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.declare(metadata i32* %rust_ret, metadata !4209, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !4215, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !4222, metadata !DIExpression()), !dbg !4228
  %0 = call i32 @nofnargs(), !dbg !4229
  store i32 %0, i32* %ret, align 4, !dbg !4229
  br label %bb1, !dbg !4229

bb1:                                              ; preds = %start
  %1 = call i32 @rust_nofnargs(), !dbg !4230
  store i32 %1, i32* %rust_ret, align 4, !dbg !4230
  br label %bb2, !dbg !4230

bb2:                                              ; preds = %bb1
  %2 = bitcast { i32*, i32* }* %_3 to i32**, !dbg !4231
  store i32* %ret, i32** %2, align 8, !dbg !4231
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_3, i32 0, i32 1, !dbg !4231
  store i32* bitcast (<{ [4 x i8] }>* @alloc172 to i32*), i32** %3, align 8, !dbg !4231
  %4 = bitcast { i32*, i32* }* %_3 to i32**, !dbg !4231
  %left_val = load i32*, i32** %4, align 8, !dbg !4231, !nonnull !23, !align !394, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !4231
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !4211, metadata !DIExpression()), !dbg !4232
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_3, i32 0, i32 1, !dbg !4231
  %right_val = load i32*, i32** %5, align 8, !dbg !4231, !nonnull !23, !align !394, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !4231
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !4214, metadata !DIExpression()), !dbg !4232
  %_10 = load i32, i32* %left_val, align 4, !dbg !4232
  %_9 = icmp eq i32 %_10, 0, !dbg !4232
  %_8 = xor i1 %_9, true, !dbg !4232
  br i1 %_8, label %bb3, label %bb4, !dbg !4232

bb4:                                              ; preds = %bb2
  %6 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !4233
  store i32* %rust_ret, i32** %6, align 8, !dbg !4233
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !4233
  store i32* bitcast (<{ [4 x i8] }>* @alloc172 to i32*), i32** %7, align 8, !dbg !4233
  %8 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !4233
  %left_val2 = load i32*, i32** %8, align 8, !dbg !4233, !nonnull !23, !align !394, !noundef !23
  store i32* %left_val2, i32** %left_val.dbg.spill3, align 8, !dbg !4233
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill3, metadata !4218, metadata !DIExpression()), !dbg !4234
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !4233
  %right_val4 = load i32*, i32** %9, align 8, !dbg !4233, !nonnull !23, !align !394, !noundef !23
  store i32* %right_val4, i32** %right_val.dbg.spill5, align 8, !dbg !4233
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill5, metadata !4221, metadata !DIExpression()), !dbg !4234
  %_27 = load i32, i32* %left_val2, align 4, !dbg !4234
  %_26 = icmp eq i32 %_27, 0, !dbg !4234
  %_25 = xor i1 %_26, true, !dbg !4234
  br i1 %_25, label %bb5, label %bb6, !dbg !4234

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind, align 1, !dbg !4232
  %10 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_19 to {}**, !dbg !4227
  store {}* null, {}** %10, align 8, !dbg !4227
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_19, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc593 to %"core::panic::location::Location"*)) #15, !dbg !4227
  unreachable, !dbg !4227

bb6:                                              ; preds = %bb4
  ret void, !dbg !4235

bb5:                                              ; preds = %bb4
  store i8 0, i8* %kind1, align 1, !dbg !4234
  %11 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_36 to {}**, !dbg !4228
  store {}* null, {}** %11, align 8, !dbg !4228
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 0, i32* align 4 %left_val2, i32* align 4 %right_val4, %"core::option::Option<core::fmt::Arguments>"* %_36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc595 to %"core::panic::location::Location"*)) #15, !dbg !4228
  unreachable, !dbg !4228
}

; items_tests::test_linking::test_linking::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests12test_linking12test_linking28_$u7b$$u7b$closure$u7d$$u7d$17h0e727e4d4b2158baE"(%"[closure@src/test_linking.rs:12:1: 28:2]"* align 1 %_1) unnamed_addr #0 !dbg !4236 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_linking.rs:12:1: 28:2]"*, align 8
  store %"[closure@src/test_linking.rs:12:1: 28:2]"* %_1, %"[closure@src/test_linking.rs:12:1: 28:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_linking.rs:12:1: 28:2]"** %_1.dbg.spill, metadata !4242, metadata !DIExpression()), !dbg !4243
  call void @test_linking(), !dbg !4243
  br label %bb1, !dbg !4243

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4243
  br label %bb2, !dbg !4243

bb2:                                              ; preds = %bb1
  ret void, !dbg !4244
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_linking() unnamed_addr #2 !dbg !4245 {
start:
  %right_val.dbg.spill25 = alloca i32*, align 8
  %left_val.dbg.spill23 = alloca i32*, align 8
  %right_val.dbg.spill21 = alloca i32*, align 8
  %left_val.dbg.spill19 = alloca i32*, align 8
  %right_val.dbg.spill17 = alloca i32*, align 8
  %left_val.dbg.spill15 = alloca i32*, align 8
  %right_val.dbg.spill13 = alloca i32*, align 8
  %left_val.dbg.spill11 = alloca i32*, align 8
  %right_val.dbg.spill9 = alloca i32*, align 8
  %left_val.dbg.spill7 = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_106 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind5 = alloca i8, align 1
  %_90 = alloca { i32*, i32* }, align 8
  %_89 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind4 = alloca i8, align 1
  %_73 = alloca { i32*, i32* }, align 8
  %_72 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind3 = alloca i8, align 1
  %_56 = alloca { i32*, i32* }, align 8
  %_53 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind2 = alloca i8, align 1
  %_37 = alloca { i32*, i32* }, align 8
  %_36 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_20 = alloca { i32*, i32* }, align 8
  %_19 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_3 = alloca { i32*, i32* }, align 8
  %rust_ret = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4247, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.declare(metadata i32* %rust_ret, metadata !4249, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !4255, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !4262, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.declare(metadata i8* %kind2, metadata !4269, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.declare(metadata i8* %kind3, metadata !4276, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.declare(metadata i8* %kind4, metadata !4283, metadata !DIExpression()), !dbg !4299
  call void @llvm.dbg.declare(metadata i8* %kind5, metadata !4290, metadata !DIExpression()), !dbg !4300
  %0 = call i32 @l(), !dbg !4301
  store i32 %0, i32* %ret, align 4, !dbg !4301
  br label %bb1, !dbg !4301

bb1:                                              ; preds = %start
  %1 = call i32 @rust_l(), !dbg !4302
  store i32 %1, i32* %rust_ret, align 4, !dbg !4302
  br label %bb2, !dbg !4302

bb2:                                              ; preds = %bb1
  %2 = bitcast { i32*, i32* }* %_3 to i32**, !dbg !4303
  store i32* %ret, i32** %2, align 8, !dbg !4303
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_3, i32 0, i32 1, !dbg !4303
  store i32* %rust_ret, i32** %3, align 8, !dbg !4303
  %4 = bitcast { i32*, i32* }* %_3 to i32**, !dbg !4303
  %left_val = load i32*, i32** %4, align 8, !dbg !4303, !nonnull !23, !align !394, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !4303
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !4251, metadata !DIExpression()), !dbg !4304
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_3, i32 0, i32 1, !dbg !4303
  %right_val = load i32*, i32** %5, align 8, !dbg !4303, !nonnull !23, !align !394, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !4303
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !4254, metadata !DIExpression()), !dbg !4304
  %_10 = load i32, i32* %left_val, align 4, !dbg !4304
  %_11 = load i32, i32* %right_val, align 4, !dbg !4304
  %_9 = icmp eq i32 %_10, %_11, !dbg !4304
  %_8 = xor i1 %_9, true, !dbg !4304
  br i1 %_8, label %bb3, label %bb4, !dbg !4304

bb4:                                              ; preds = %bb2
  %6 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !4305
  store i32* %ret, i32** %6, align 8, !dbg !4305
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !4305
  store i32* bitcast (<{ [4 x i8] }>* @alloc206 to i32*), i32** %7, align 8, !dbg !4305
  %8 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !4305
  %left_val6 = load i32*, i32** %8, align 8, !dbg !4305, !nonnull !23, !align !394, !noundef !23
  store i32* %left_val6, i32** %left_val.dbg.spill7, align 8, !dbg !4305
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill7, metadata !4258, metadata !DIExpression()), !dbg !4306
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !4305
  %right_val8 = load i32*, i32** %9, align 8, !dbg !4305, !nonnull !23, !align !394, !noundef !23
  store i32* %right_val8, i32** %right_val.dbg.spill9, align 8, !dbg !4305
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill9, metadata !4261, metadata !DIExpression()), !dbg !4306
  %_27 = load i32, i32* %left_val6, align 4, !dbg !4306
  %_26 = icmp eq i32 %_27, 3, !dbg !4306
  %_25 = xor i1 %_26, true, !dbg !4306
  br i1 %_25, label %bb5, label %bb6, !dbg !4306

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind, align 1, !dbg !4304
  %10 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_19 to {}**, !dbg !4295
  store {}* null, {}** %10, align 8, !dbg !4295
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_19, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc597 to %"core::panic::location::Location"*)) #15, !dbg !4295
  unreachable, !dbg !4295

bb6:                                              ; preds = %bb4
  %11 = bitcast { i32*, i32* }* %_37 to i32**, !dbg !4307
  store i32* %rust_ret, i32** %11, align 8, !dbg !4307
  %12 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_37, i32 0, i32 1, !dbg !4307
  store i32* bitcast (<{ [4 x i8] }>* @alloc206 to i32*), i32** %12, align 8, !dbg !4307
  %13 = bitcast { i32*, i32* }* %_37 to i32**, !dbg !4307
  %left_val10 = load i32*, i32** %13, align 8, !dbg !4307, !nonnull !23, !align !394, !noundef !23
  store i32* %left_val10, i32** %left_val.dbg.spill11, align 8, !dbg !4307
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill11, metadata !4265, metadata !DIExpression()), !dbg !4308
  %14 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_37, i32 0, i32 1, !dbg !4307
  %right_val12 = load i32*, i32** %14, align 8, !dbg !4307, !nonnull !23, !align !394, !noundef !23
  store i32* %right_val12, i32** %right_val.dbg.spill13, align 8, !dbg !4307
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill13, metadata !4268, metadata !DIExpression()), !dbg !4308
  %_44 = load i32, i32* %left_val10, align 4, !dbg !4308
  %_43 = icmp eq i32 %_44, 3, !dbg !4308
  %_42 = xor i1 %_43, true, !dbg !4308
  br i1 %_42, label %bb7, label %bb8, !dbg !4308

bb5:                                              ; preds = %bb4
  store i8 0, i8* %kind1, align 1, !dbg !4306
  %15 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_36 to {}**, !dbg !4296
  store {}* null, {}** %15, align 8, !dbg !4296
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 0, i32* align 4 %left_val6, i32* align 4 %right_val8, %"core::option::Option<core::fmt::Arguments>"* %_36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc599 to %"core::panic::location::Location"*)) #15, !dbg !4296
  unreachable, !dbg !4296

bb8:                                              ; preds = %bb6
  %_54 = call i32 @w(), !dbg !4309
  br label %bb9, !dbg !4309

bb7:                                              ; preds = %bb6
  store i8 0, i8* %kind2, align 1, !dbg !4308
  %16 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_53 to {}**, !dbg !4297
  store {}* null, {}** %16, align 8, !dbg !4297
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 0, i32* align 4 %left_val10, i32* align 4 %right_val12, %"core::option::Option<core::fmt::Arguments>"* %_53, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc601 to %"core::panic::location::Location"*)) #15, !dbg !4297
  unreachable, !dbg !4297

bb9:                                              ; preds = %bb8
  store i32 %_54, i32* %ret, align 4, !dbg !4310
  %_55 = call i32 @rust_w(), !dbg !4311
  br label %bb10, !dbg !4311

bb10:                                             ; preds = %bb9
  store i32 %_55, i32* %rust_ret, align 4, !dbg !4312
  %17 = bitcast { i32*, i32* }* %_56 to i32**, !dbg !4313
  store i32* %ret, i32** %17, align 8, !dbg !4313
  %18 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_56, i32 0, i32 1, !dbg !4313
  store i32* %rust_ret, i32** %18, align 8, !dbg !4313
  %19 = bitcast { i32*, i32* }* %_56 to i32**, !dbg !4313
  %left_val14 = load i32*, i32** %19, align 8, !dbg !4313, !nonnull !23, !align !394, !noundef !23
  store i32* %left_val14, i32** %left_val.dbg.spill15, align 8, !dbg !4313
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill15, metadata !4272, metadata !DIExpression()), !dbg !4314
  %20 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_56, i32 0, i32 1, !dbg !4313
  %right_val16 = load i32*, i32** %20, align 8, !dbg !4313, !nonnull !23, !align !394, !noundef !23
  store i32* %right_val16, i32** %right_val.dbg.spill17, align 8, !dbg !4313
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill17, metadata !4275, metadata !DIExpression()), !dbg !4314
  %_63 = load i32, i32* %left_val14, align 4, !dbg !4314
  %_64 = load i32, i32* %right_val16, align 4, !dbg !4314
  %_62 = icmp eq i32 %_63, %_64, !dbg !4314
  %_61 = xor i1 %_62, true, !dbg !4314
  br i1 %_61, label %bb11, label %bb12, !dbg !4314

bb12:                                             ; preds = %bb10
  %21 = bitcast { i32*, i32* }* %_73 to i32**, !dbg !4315
  store i32* %ret, i32** %21, align 8, !dbg !4315
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_73, i32 0, i32 1, !dbg !4315
  store i32* bitcast (<{ [4 x i8] }>* @alloc222 to i32*), i32** %22, align 8, !dbg !4315
  %23 = bitcast { i32*, i32* }* %_73 to i32**, !dbg !4315
  %left_val18 = load i32*, i32** %23, align 8, !dbg !4315, !nonnull !23, !align !394, !noundef !23
  store i32* %left_val18, i32** %left_val.dbg.spill19, align 8, !dbg !4315
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill19, metadata !4279, metadata !DIExpression()), !dbg !4316
  %24 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_73, i32 0, i32 1, !dbg !4315
  %right_val20 = load i32*, i32** %24, align 8, !dbg !4315, !nonnull !23, !align !394, !noundef !23
  store i32* %right_val20, i32** %right_val.dbg.spill21, align 8, !dbg !4315
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill21, metadata !4282, metadata !DIExpression()), !dbg !4316
  %_80 = load i32, i32* %left_val18, align 4, !dbg !4316
  %_79 = icmp eq i32 %_80, 4, !dbg !4316
  %_78 = xor i1 %_79, true, !dbg !4316
  br i1 %_78, label %bb13, label %bb14, !dbg !4316

bb11:                                             ; preds = %bb10
  store i8 0, i8* %kind3, align 1, !dbg !4314
  %25 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_72 to {}**, !dbg !4298
  store {}* null, {}** %25, align 8, !dbg !4298
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 0, i32* align 4 %left_val14, i32* align 4 %right_val16, %"core::option::Option<core::fmt::Arguments>"* %_72, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc603 to %"core::panic::location::Location"*)) #15, !dbg !4298
  unreachable, !dbg !4298

bb14:                                             ; preds = %bb12
  %26 = bitcast { i32*, i32* }* %_90 to i32**, !dbg !4317
  store i32* %rust_ret, i32** %26, align 8, !dbg !4317
  %27 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_90, i32 0, i32 1, !dbg !4317
  store i32* bitcast (<{ [4 x i8] }>* @alloc222 to i32*), i32** %27, align 8, !dbg !4317
  %28 = bitcast { i32*, i32* }* %_90 to i32**, !dbg !4317
  %left_val22 = load i32*, i32** %28, align 8, !dbg !4317, !nonnull !23, !align !394, !noundef !23
  store i32* %left_val22, i32** %left_val.dbg.spill23, align 8, !dbg !4317
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill23, metadata !4286, metadata !DIExpression()), !dbg !4318
  %29 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_90, i32 0, i32 1, !dbg !4317
  %right_val24 = load i32*, i32** %29, align 8, !dbg !4317, !nonnull !23, !align !394, !noundef !23
  store i32* %right_val24, i32** %right_val.dbg.spill25, align 8, !dbg !4317
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill25, metadata !4289, metadata !DIExpression()), !dbg !4318
  %_97 = load i32, i32* %left_val22, align 4, !dbg !4318
  %_96 = icmp eq i32 %_97, 4, !dbg !4318
  %_95 = xor i1 %_96, true, !dbg !4318
  br i1 %_95, label %bb15, label %bb16, !dbg !4318

bb13:                                             ; preds = %bb12
  store i8 0, i8* %kind4, align 1, !dbg !4316
  %30 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_89 to {}**, !dbg !4299
  store {}* null, {}** %30, align 8, !dbg !4299
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 0, i32* align 4 %left_val18, i32* align 4 %right_val20, %"core::option::Option<core::fmt::Arguments>"* %_89, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc605 to %"core::panic::location::Location"*)) #15, !dbg !4299
  unreachable, !dbg !4299

bb16:                                             ; preds = %bb14
  ret void, !dbg !4319

bb15:                                             ; preds = %bb14
  store i8 0, i8* %kind5, align 1, !dbg !4318
  %31 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_106 to {}**, !dbg !4300
  store {}* null, {}** %31, align 8, !dbg !4300
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE(i8 0, i32* align 4 %left_val22, i32* align 4 %right_val24, %"core::option::Option<core::fmt::Arguments>"* %_106, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc607 to %"core::panic::location::Location"*)) #15, !dbg !4300
  unreachable, !dbg !4300
}

; items_tests::test_functions::test_coreutils_static_assert::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests14test_functions28test_coreutils_static_assert28_$u7b$$u7b$closure$u7d$$u7d$17h7050d3523f1ec425E"(%"[closure@src/test_functions.rs:9:1: 14:2]"* align 1 %_1) unnamed_addr #0 !dbg !4320 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_functions.rs:9:1: 14:2]"*, align 8
  store %"[closure@src/test_functions.rs:9:1: 14:2]"* %_1, %"[closure@src/test_functions.rs:9:1: 14:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_functions.rs:9:1: 14:2]"** %_1.dbg.spill, metadata !4326, metadata !DIExpression()), !dbg !4327
  call void @test_coreutils_static_assert(), !dbg !4327
  br label %bb1, !dbg !4327

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4327
  br label %bb2, !dbg !4327

bb2:                                              ; preds = %bb1
  ret void, !dbg !4328
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_coreutils_static_assert() unnamed_addr #2 !dbg !4329 {
start:
  call void @coreutils_static_assert(), !dbg !4330
  br label %bb1, !dbg !4330

bb1:                                              ; preds = %start
  call void @rust_coreutils_static_assert(), !dbg !4331
  br label %bb2, !dbg !4331

bb2:                                              ; preds = %bb1
  ret void, !dbg !4332
}

; items_tests::test_fn_attrs::test_fn_attrs::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests13test_fn_attrs13test_fn_attrs28_$u7b$$u7b$closure$u7d$$u7d$17h714141d32e086469E"(%"[closure@src/test_fn_attrs.rs:4:1: 64:2]"* align 1 %_1) unnamed_addr #0 !dbg !4333 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_fn_attrs.rs:4:1: 64:2]"*, align 8
  store %"[closure@src/test_fn_attrs.rs:4:1: 64:2]"* %_1, %"[closure@src/test_fn_attrs.rs:4:1: 64:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_fn_attrs.rs:4:1: 64:2]"** %_1.dbg.spill, metadata !4339, metadata !DIExpression()), !dbg !4340
  call void @test_fn_attrs(), !dbg !4340
  br label %bb1, !dbg !4340

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4340
  br label %bb2, !dbg !4340

bb2:                                              ; preds = %bb1
  ret void, !dbg !4341
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_fn_attrs() unnamed_addr #2 !dbg !4342 {
start:
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0, !dbg !4346
  store [0 x i8]* bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), [0 x i8]** %0, align 8, !dbg !4346
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1, !dbg !4346
  store i64 2057, i64* %1, align 8, !dbg !4346
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !4344, metadata !DIExpression()), !dbg !4347
; call core::str::<impl str>::contains
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [64 x i8] }>* @alloc609 to [0 x i8]*), i64 64), !dbg !4348
  br label %bb1, !dbg !4348

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true, !dbg !4349
  br i1 %_2, label %bb2, label %bb3, !dbg !4349

bb3:                                              ; preds = %bb1
; call core::str::<impl str>::contains
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [58 x i8] }>* @alloc613 to [0 x i8]*), i64 58), !dbg !4350
  br label %bb4, !dbg !4350

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [108 x i8] }>* @alloc610 to [0 x i8]*), i64 108, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc612 to %"core::panic::location::Location"*)) #15, !dbg !4349
  unreachable, !dbg !4349

bb4:                                              ; preds = %bb3
  %_6 = xor i1 %_7, true, !dbg !4351
  br i1 %_6, label %bb5, label %bb6, !dbg !4351

bb6:                                              ; preds = %bb4
; call core::str::<impl str>::contains
  %_11 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [49 x i8] }>* @alloc617 to [0 x i8]*), i64 49), !dbg !4352
  br label %bb7, !dbg !4352

bb5:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [102 x i8] }>* @alloc614 to [0 x i8]*), i64 102, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc616 to %"core::panic::location::Location"*)) #15, !dbg !4351
  unreachable, !dbg !4351

bb7:                                              ; preds = %bb6
  %_10 = xor i1 %_11, true, !dbg !4353
  br i1 %_10, label %bb8, label %bb9, !dbg !4353

bb9:                                              ; preds = %bb7
; call core::str::<impl str>::contains
  %_15 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [56 x i8] }>* @alloc621 to [0 x i8]*), i64 56), !dbg !4354
  br label %bb10, !dbg !4354

bb8:                                              ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [93 x i8] }>* @alloc618 to [0 x i8]*), i64 93, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc620 to %"core::panic::location::Location"*)) #15, !dbg !4353
  unreachable, !dbg !4353

bb10:                                             ; preds = %bb9
  %_14 = xor i1 %_15, true, !dbg !4355
  br i1 %_14, label %bb11, label %bb12, !dbg !4355

bb12:                                             ; preds = %bb10
; call core::str::<impl str>::contains
  %_19 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [53 x i8] }>* @alloc625 to [0 x i8]*), i64 53), !dbg !4356
  br label %bb13, !dbg !4356

bb11:                                             ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [100 x i8] }>* @alloc622 to [0 x i8]*), i64 100, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc624 to %"core::panic::location::Location"*)) #15, !dbg !4355
  unreachable, !dbg !4355

bb13:                                             ; preds = %bb12
  %_18 = xor i1 %_19, true, !dbg !4357
  br i1 %_18, label %bb14, label %bb15, !dbg !4357

bb15:                                             ; preds = %bb13
; call core::str::<impl str>::contains
  %_23 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [49 x i8] }>* @alloc629 to [0 x i8]*), i64 49), !dbg !4358
  br label %bb16, !dbg !4358

bb14:                                             ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [97 x i8] }>* @alloc626 to [0 x i8]*), i64 97, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc628 to %"core::panic::location::Location"*)) #15, !dbg !4357
  unreachable, !dbg !4357

bb16:                                             ; preds = %bb15
  %_22 = xor i1 %_23, true, !dbg !4359
  br i1 %_22, label %bb17, label %bb18, !dbg !4359

bb18:                                             ; preds = %bb16
; call core::str::<impl str>::contains
  %_27 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [67 x i8] }>* @alloc633 to [0 x i8]*), i64 67), !dbg !4360
  br label %bb19, !dbg !4360

bb17:                                             ; preds = %bb16
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [93 x i8] }>* @alloc630 to [0 x i8]*), i64 93, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc632 to %"core::panic::location::Location"*)) #15, !dbg !4359
  unreachable, !dbg !4359

bb19:                                             ; preds = %bb18
  %_26 = xor i1 %_27, true, !dbg !4361
  br i1 %_26, label %bb20, label %bb21, !dbg !4361

bb21:                                             ; preds = %bb19
; call core::str::<impl str>::contains
  %_31 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [65 x i8] }>* @alloc637 to [0 x i8]*), i64 65), !dbg !4362
  br label %bb22, !dbg !4362

bb20:                                             ; preds = %bb19
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [111 x i8] }>* @alloc634 to [0 x i8]*), i64 111, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc636 to %"core::panic::location::Location"*)) #15, !dbg !4361
  unreachable, !dbg !4361

bb22:                                             ; preds = %bb21
  %_30 = xor i1 %_31, true, !dbg !4363
  br i1 %_30, label %bb23, label %bb24, !dbg !4363

bb24:                                             ; preds = %bb22
; call core::str::<impl str>::contains
  %_35 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [52 x i8] }>* @alloc641 to [0 x i8]*), i64 52), !dbg !4364
  br label %bb25, !dbg !4364

bb23:                                             ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [109 x i8] }>* @alloc638 to [0 x i8]*), i64 109, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc640 to %"core::panic::location::Location"*)) #15, !dbg !4363
  unreachable, !dbg !4363

bb25:                                             ; preds = %bb24
  %_34 = xor i1 %_35, true, !dbg !4365
  br i1 %_34, label %bb26, label %bb27, !dbg !4365

bb27:                                             ; preds = %bb25
; call core::str::<impl str>::contains
  %_39 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [59 x i8] }>* @alloc645 to [0 x i8]*), i64 59), !dbg !4366
  br label %bb28, !dbg !4366

bb26:                                             ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [96 x i8] }>* @alloc642 to [0 x i8]*), i64 96, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc644 to %"core::panic::location::Location"*)) #15, !dbg !4365
  unreachable, !dbg !4365

bb28:                                             ; preds = %bb27
  %_38 = xor i1 %_39, true, !dbg !4367
  br i1 %_38, label %bb29, label %bb30, !dbg !4367

bb30:                                             ; preds = %bb28
; call core::str::<impl str>::contains
  %_43 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [56 x i8] }>* @alloc649 to [0 x i8]*), i64 56), !dbg !4368
  br label %bb31, !dbg !4368

bb29:                                             ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [103 x i8] }>* @alloc646 to [0 x i8]*), i64 103, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc648 to %"core::panic::location::Location"*)) #15, !dbg !4367
  unreachable, !dbg !4367

bb31:                                             ; preds = %bb30
  %_42 = xor i1 %_43, true, !dbg !4369
  br i1 %_42, label %bb32, label %bb33, !dbg !4369

bb33:                                             ; preds = %bb31
; call core::str::<impl str>::contains
  %_47 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [77 x i8] }>* @alloc653 to [0 x i8]*), i64 77), !dbg !4370
  br label %bb34, !dbg !4370

bb32:                                             ; preds = %bb31
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [100 x i8] }>* @alloc650 to [0 x i8]*), i64 100, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc652 to %"core::panic::location::Location"*)) #15, !dbg !4369
  unreachable, !dbg !4369

bb34:                                             ; preds = %bb33
  %_46 = xor i1 %_47, true, !dbg !4371
  br i1 %_46, label %bb35, label %bb36, !dbg !4371

bb36:                                             ; preds = %bb34
; call core::str::<impl str>::contains
  %_51 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [84 x i8] }>* @alloc657 to [0 x i8]*), i64 84), !dbg !4372
  br label %bb37, !dbg !4372

bb35:                                             ; preds = %bb34
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [129 x i8] }>* @alloc654 to [0 x i8]*), i64 129, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc656 to %"core::panic::location::Location"*)) #15, !dbg !4371
  unreachable, !dbg !4371

bb37:                                             ; preds = %bb36
  %_50 = xor i1 %_51, true, !dbg !4373
  br i1 %_50, label %bb38, label %bb39, !dbg !4373

bb39:                                             ; preds = %bb37
; call core::str::<impl str>::contains
  %_55 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [68 x i8] }>* @alloc661 to [0 x i8]*), i64 68), !dbg !4374
  br label %bb40, !dbg !4374

bb38:                                             ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [136 x i8] }>* @alloc658 to [0 x i8]*), i64 136, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc660 to %"core::panic::location::Location"*)) #15, !dbg !4373
  unreachable, !dbg !4373

bb40:                                             ; preds = %bb39
  %_54 = xor i1 %_55, true, !dbg !4375
  br i1 %_54, label %bb41, label %bb42, !dbg !4375

bb42:                                             ; preds = %bb40
; call core::str::<impl str>::contains
  %_59 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [53 x i8] }>* @alloc665 to [0 x i8]*), i64 53), !dbg !4376
  br label %bb43, !dbg !4376

bb41:                                             ; preds = %bb40
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [112 x i8] }>* @alloc662 to [0 x i8]*), i64 112, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc664 to %"core::panic::location::Location"*)) #15, !dbg !4375
  unreachable, !dbg !4375

bb43:                                             ; preds = %bb42
  %_58 = xor i1 %_59, true, !dbg !4377
  br i1 %_58, label %bb44, label %bb45, !dbg !4377

bb45:                                             ; preds = %bb43
; call core::str::<impl str>::contains
  %_63 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [75 x i8] }>* @alloc669 to [0 x i8]*), i64 75), !dbg !4378
  br label %bb46, !dbg !4378

bb44:                                             ; preds = %bb43
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [97 x i8] }>* @alloc666 to [0 x i8]*), i64 97, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc668 to %"core::panic::location::Location"*)) #15, !dbg !4377
  unreachable, !dbg !4377

bb46:                                             ; preds = %bb45
  %_62 = xor i1 %_63, true, !dbg !4379
  br i1 %_62, label %bb47, label %bb48, !dbg !4379

bb48:                                             ; preds = %bb46
; call core::str::<impl str>::contains
  %_67 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [78 x i8] }>* @alloc673 to [0 x i8]*), i64 78), !dbg !4380
  br label %bb49, !dbg !4380

bb47:                                             ; preds = %bb46
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [119 x i8] }>* @alloc670 to [0 x i8]*), i64 119, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc672 to %"core::panic::location::Location"*)) #15, !dbg !4379
  unreachable, !dbg !4379

bb49:                                             ; preds = %bb48
  %_66 = xor i1 %_67, true, !dbg !4381
  br i1 %_66, label %bb50, label %bb51, !dbg !4381

bb51:                                             ; preds = %bb49
; call core::str::<impl str>::contains
  %_71 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE"([0 x i8]* align 1 bitcast (<{ [2057 x i8] }>* @alloc608 to [0 x i8]*), i64 2057, [0 x i8]* align 1 bitcast (<{ [68 x i8] }>* @alloc677 to [0 x i8]*), i64 68), !dbg !4382
  br label %bb52, !dbg !4382

bb50:                                             ; preds = %bb49
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [122 x i8] }>* @alloc674 to [0 x i8]*), i64 122, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc676 to %"core::panic::location::Location"*)) #15, !dbg !4381
  unreachable, !dbg !4381

bb52:                                             ; preds = %bb51
  %_70 = xor i1 %_71, true, !dbg !4383
  br i1 %_70, label %bb53, label %bb54, !dbg !4383

bb54:                                             ; preds = %bb52
  ret void, !dbg !4384

bb53:                                             ; preds = %bb52
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [120 x i8] }>* @alloc678 to [0 x i8]*), i64 120, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc680 to %"core::panic::location::Location"*)) #15, !dbg !4383
  unreachable, !dbg !4383
}

; items_tests::test_varargs::test_call_printf::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests12test_varargs16test_call_printf28_$u7b$$u7b$closure$u7d$$u7d$17h7769b24fd3ad455bE"(%"[closure@src/test_varargs.rs:41:1: 46:2]"* align 1 %_1) unnamed_addr #0 !dbg !4385 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_varargs.rs:41:1: 46:2]"*, align 8
  store %"[closure@src/test_varargs.rs:41:1: 46:2]"* %_1, %"[closure@src/test_varargs.rs:41:1: 46:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:41:1: 46:2]"** %_1.dbg.spill, metadata !4391, metadata !DIExpression()), !dbg !4392
  call void @test_call_printf(), !dbg !4392
  br label %bb1, !dbg !4392

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4392
  br label %bb2, !dbg !4392

bb2:                                              ; preds = %bb1
  ret void, !dbg !4393
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_call_printf() unnamed_addr #2 !dbg !4394 {
start:
  call void @call_printf(), !dbg !4395
  br label %bb1, !dbg !4395

bb1:                                              ; preds = %start
  call void @rust_call_printf(), !dbg !4396
  br label %bb2, !dbg !4396

bb2:                                              ; preds = %bb1
  ret void, !dbg !4397
}

; items_tests::test_varargs::test_call_vprintf::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests12test_varargs17test_call_vprintf28_$u7b$$u7b$closure$u7d$$u7d$17h7f42e6bd2a229663E"(%"[closure@src/test_varargs.rs:51:1: 57:2]"* align 1 %_1) unnamed_addr #0 !dbg !4398 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_varargs.rs:51:1: 57:2]"*, align 8
  store %"[closure@src/test_varargs.rs:51:1: 57:2]"* %_1, %"[closure@src/test_varargs.rs:51:1: 57:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:51:1: 57:2]"** %_1.dbg.spill, metadata !4403, metadata !DIExpression()), !dbg !4404
  call void @test_call_vprintf(), !dbg !4404
  br label %bb1, !dbg !4404

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4404
  br label %bb2, !dbg !4404

bb2:                                              ; preds = %bb1
  ret void, !dbg !4405
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_call_vprintf() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4406 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  %fmt_str = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %fmt_str, metadata !4408, metadata !DIExpression()), !dbg !4410
; call alloc::ffi::c_str::CString::new
  call void @_ZN5alloc3ffi5c_str7CString3new17h7396a6d41c1bb395E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_2, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc699 to [0 x i8]*), i64 7), !dbg !4411
  br label %bb1, !dbg !4411

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1c463d819f51973fE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_2, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc683 to %"core::panic::location::Location"*)), !dbg !4411
  store { i8*, i64 } %1, { i8*, i64 }* %fmt_str, align 8, !dbg !4411
  br label %bb2, !dbg !4411

bb2:                                              ; preds = %bb1
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %2 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb3 unwind label %cleanup, !dbg !4412

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str) #16
          to label %bb11 unwind label %abort, !dbg !4413

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 0, !dbg !4412
  %_6.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 1, !dbg !4412
; invoke core::ffi::c_str::CStr::as_ptr
  %_4 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_6.0, i64 %_6.1)
          to label %bb4 unwind label %cleanup, !dbg !4412

bb4:                                              ; preds = %bb3
  invoke void (i8*, ...) @call_vprintf(i8* %_4, i32 10, double 1.500000e+00)
          to label %bb5 unwind label %cleanup, !dbg !4414

bb5:                                              ; preds = %bb4
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %8 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb6 unwind label %cleanup, !dbg !4415

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 0, !dbg !4415
  %_11.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 1, !dbg !4415
; invoke core::ffi::c_str::CStr::as_ptr
  %_9 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_11.0, i64 %_11.1)
          to label %bb7 unwind label %cleanup, !dbg !4415

bb7:                                              ; preds = %bb6
  invoke void (i8*, ...) @rust_call_vprintf(i8* %_9, i32 10, double 1.500000e+00)
          to label %bb8 unwind label %cleanup, !dbg !4416

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str), !dbg !4413
  br label %bb9, !dbg !4413

abort:                                            ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !4417
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4417
  unreachable, !dbg !4417

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4417
  %11 = load i8*, i8** %10, align 8, !dbg !4417
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4417
  %13 = load i32, i32* %12, align 8, !dbg !4417
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0, !dbg !4417
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1, !dbg !4417
  resume { i8*, i32 } %15, !dbg !4417

bb9:                                              ; preds = %bb8
  ret void, !dbg !4418
}

; items_tests::test_varargs::test_my_printf::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests12test_varargs14test_my_printf28_$u7b$$u7b$closure$u7d$$u7d$17hbbba3c461f8facb5E"(%"[closure@src/test_varargs.rs:62:1: 69:2]"* align 1 %_1) unnamed_addr #0 !dbg !4419 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_varargs.rs:62:1: 69:2]"*, align 8
  store %"[closure@src/test_varargs.rs:62:1: 69:2]"* %_1, %"[closure@src/test_varargs.rs:62:1: 69:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:62:1: 69:2]"** %_1.dbg.spill, metadata !4424, metadata !DIExpression()), !dbg !4425
  call void @test_my_printf(), !dbg !4425
  br label %bb1, !dbg !4425

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4425
  br label %bb2, !dbg !4425

bb2:                                              ; preds = %bb1
  ret void, !dbg !4426
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_my_printf() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4427 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_4 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  %test_str = alloca { i8*, i64 }, align 8
  %_2 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  %fmt_str = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %fmt_str, metadata !4429, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %test_str, metadata !4431, metadata !DIExpression()), !dbg !4434
; call alloc::ffi::c_str::CString::new
  call void @_ZN5alloc3ffi5c_str7CString3new17h7396a6d41c1bb395E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_2, [0 x i8]* align 1 bitcast (<{ [11 x i8] }>* @alloc684 to [0 x i8]*), i64 11), !dbg !4435
  br label %bb1, !dbg !4435

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1c463d819f51973fE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_2, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc686 to %"core::panic::location::Location"*)), !dbg !4435
  store { i8*, i64 } %1, { i8*, i64 }* %fmt_str, align 8, !dbg !4435
  br label %bb2, !dbg !4435

bb2:                                              ; preds = %bb1
; invoke alloc::ffi::c_str::CString::new
  invoke void @_ZN5alloc3ffi5c_str7CString3new17h7396a6d41c1bb395E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_4, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc687 to [0 x i8]*), i64 4)
          to label %bb3 unwind label %cleanup, !dbg !4436

bb18:                                             ; preds = %bb17, %cleanup
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str) #16
          to label %bb19 unwind label %abort, !dbg !4437

cleanup:                                          ; preds = %bb14, %bb3, %bb2
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb18

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::unwrap
  %7 = invoke { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1c463d819f51973fE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc689 to %"core::panic::location::Location"*))
          to label %bb4 unwind label %cleanup, !dbg !4436

bb4:                                              ; preds = %bb3
  store { i8*, i64 } %7, { i8*, i64 }* %test_str, align 8, !dbg !4436
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %8 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb5 unwind label %cleanup1, !dbg !4438

bb17:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %test_str) #16
          to label %bb18 unwind label %abort, !dbg !4439

cleanup1:                                         ; preds = %bb13, %bb12, %bb11, %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb17

bb5:                                              ; preds = %bb4
  %_8.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 0, !dbg !4438
  %_8.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 1, !dbg !4438
; invoke core::ffi::c_str::CStr::as_ptr
  %_6 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_8.0, i64 %_8.1)
          to label %bb6 unwind label %cleanup1, !dbg !4438

bb6:                                              ; preds = %bb5
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %14 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %test_str)
          to label %bb7 unwind label %cleanup1, !dbg !4440

bb7:                                              ; preds = %bb6
  %_12.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %14, 0, !dbg !4440
  %_12.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %14, 1, !dbg !4440
; invoke core::ffi::c_str::CStr::as_ptr
  %_10 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_12.0, i64 %_12.1)
          to label %bb8 unwind label %cleanup1, !dbg !4440

bb8:                                              ; preds = %bb7
  invoke void (i8*, ...) @my_printf(i8* %_6, i32 10, double 1.500000e+00, i8* %_10)
          to label %bb9 unwind label %cleanup1, !dbg !4441

bb9:                                              ; preds = %bb8
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %15 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb10 unwind label %cleanup1, !dbg !4442

bb10:                                             ; preds = %bb9
  %_17.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %15, 0, !dbg !4442
  %_17.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %15, 1, !dbg !4442
; invoke core::ffi::c_str::CStr::as_ptr
  %_15 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_17.0, i64 %_17.1)
          to label %bb11 unwind label %cleanup1, !dbg !4442

bb11:                                             ; preds = %bb10
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %16 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %test_str)
          to label %bb12 unwind label %cleanup1, !dbg !4443

bb12:                                             ; preds = %bb11
  %_21.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %16, 0, !dbg !4443
  %_21.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %16, 1, !dbg !4443
; invoke core::ffi::c_str::CStr::as_ptr
  %_19 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_21.0, i64 %_21.1)
          to label %bb13 unwind label %cleanup1, !dbg !4443

bb13:                                             ; preds = %bb12
  invoke void (i8*, ...) @rust_my_printf(i8* %_15, i32 10, double 1.500000e+00, i8* %_19)
          to label %bb14 unwind label %cleanup1, !dbg !4444

bb14:                                             ; preds = %bb13
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %test_str)
          to label %bb15 unwind label %cleanup, !dbg !4439

abort:                                            ; preds = %bb18, %bb17
  %17 = landingpad { i8*, i32 }
          cleanup, !dbg !4445
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4445
  unreachable, !dbg !4445

bb15:                                             ; preds = %bb14
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str), !dbg !4437
  br label %bb16, !dbg !4437

bb19:                                             ; preds = %bb18
  %18 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4445
  %19 = load i8*, i8** %18, align 8, !dbg !4445
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4445
  %21 = load i32, i32* %20, align 8, !dbg !4445
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !4445
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !4445
  resume { i8*, i32 } %23, !dbg !4445

bb16:                                             ; preds = %bb15
  ret void, !dbg !4446
}

; items_tests::test_varargs::test_simple_vacopy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests12test_varargs18test_simple_vacopy28_$u7b$$u7b$closure$u7d$$u7d$17hce8dd81165069b8dE"(%"[closure@src/test_varargs.rs:73:1: 79:2]"* align 1 %_1) unnamed_addr #0 !dbg !4447 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_varargs.rs:73:1: 79:2]"*, align 8
  store %"[closure@src/test_varargs.rs:73:1: 79:2]"* %_1, %"[closure@src/test_varargs.rs:73:1: 79:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:73:1: 79:2]"** %_1.dbg.spill, metadata !4452, metadata !DIExpression()), !dbg !4453
  call void @test_simple_vacopy(), !dbg !4453
  br label %bb1, !dbg !4453

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4453
  br label %bb2, !dbg !4453

bb2:                                              ; preds = %bb1
  ret void, !dbg !4454
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_simple_vacopy() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4455 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  %fmt_str = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %fmt_str, metadata !4457, metadata !DIExpression()), !dbg !4459
; call alloc::ffi::c_str::CString::new
  call void @_ZN5alloc3ffi5c_str7CString3new17h7396a6d41c1bb395E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_2, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc699 to [0 x i8]*), i64 7), !dbg !4460
  br label %bb1, !dbg !4460

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1c463d819f51973fE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_2, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc692 to %"core::panic::location::Location"*)), !dbg !4460
  store { i8*, i64 } %1, { i8*, i64 }* %fmt_str, align 8, !dbg !4460
  br label %bb2, !dbg !4460

bb2:                                              ; preds = %bb1
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %2 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb3 unwind label %cleanup, !dbg !4461

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str) #16
          to label %bb11 unwind label %abort, !dbg !4462

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 0, !dbg !4461
  %_6.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 1, !dbg !4461
; invoke core::ffi::c_str::CStr::as_ptr
  %_4 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_6.0, i64 %_6.1)
          to label %bb4 unwind label %cleanup, !dbg !4461

bb4:                                              ; preds = %bb3
  invoke void (i8*, ...) @simple_vacopy(i8* %_4, i32 10, double 1.500000e+00)
          to label %bb5 unwind label %cleanup, !dbg !4463

bb5:                                              ; preds = %bb4
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %8 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb6 unwind label %cleanup, !dbg !4464

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 0, !dbg !4464
  %_11.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 1, !dbg !4464
; invoke core::ffi::c_str::CStr::as_ptr
  %_9 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_11.0, i64 %_11.1)
          to label %bb7 unwind label %cleanup, !dbg !4464

bb7:                                              ; preds = %bb6
  invoke void (i8*, ...) @rust_simple_vacopy(i8* %_9, i32 10, double 1.500000e+00)
          to label %bb8 unwind label %cleanup, !dbg !4465

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str), !dbg !4462
  br label %bb9, !dbg !4462

abort:                                            ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !4466
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4466
  unreachable, !dbg !4466

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4466
  %11 = load i8*, i8** %10, align 8, !dbg !4466
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4466
  %13 = load i32, i32* %12, align 8, !dbg !4466
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0, !dbg !4466
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1, !dbg !4466
  resume { i8*, i32 } %15, !dbg !4466

bb9:                                              ; preds = %bb8
  ret void, !dbg !4467
}

; items_tests::test_varargs::test_valist_struct_member::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests12test_varargs25test_valist_struct_member28_$u7b$$u7b$closure$u7d$$u7d$17h5c1477b770555c50E"(%"[closure@src/test_varargs.rs:83:1: 89:2]"* align 1 %_1) unnamed_addr #0 !dbg !4468 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_varargs.rs:83:1: 89:2]"*, align 8
  store %"[closure@src/test_varargs.rs:83:1: 89:2]"* %_1, %"[closure@src/test_varargs.rs:83:1: 89:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:83:1: 89:2]"** %_1.dbg.spill, metadata !4473, metadata !DIExpression()), !dbg !4474
  call void @test_valist_struct_member(), !dbg !4474
  br label %bb1, !dbg !4474

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4474
  br label %bb2, !dbg !4474

bb2:                                              ; preds = %bb1
  ret void, !dbg !4475
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_valist_struct_member() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4476 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  %fmt_str = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %fmt_str, metadata !4478, metadata !DIExpression()), !dbg !4480
; call alloc::ffi::c_str::CString::new
  call void @_ZN5alloc3ffi5c_str7CString3new17h7396a6d41c1bb395E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_2, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc699 to [0 x i8]*), i64 7), !dbg !4481
  br label %bb1, !dbg !4481

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1c463d819f51973fE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_2, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc695 to %"core::panic::location::Location"*)), !dbg !4481
  store { i8*, i64 } %1, { i8*, i64 }* %fmt_str, align 8, !dbg !4481
  br label %bb2, !dbg !4481

bb2:                                              ; preds = %bb1
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %2 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb3 unwind label %cleanup, !dbg !4482

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str) #16
          to label %bb11 unwind label %abort, !dbg !4483

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 0, !dbg !4482
  %_6.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 1, !dbg !4482
; invoke core::ffi::c_str::CStr::as_ptr
  %_4 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_6.0, i64 %_6.1)
          to label %bb4 unwind label %cleanup, !dbg !4482

bb4:                                              ; preds = %bb3
  invoke void (i8*, ...) @valist_struct_member(i8* %_4, i32 10, double 1.500000e+00)
          to label %bb5 unwind label %cleanup, !dbg !4484

bb5:                                              ; preds = %bb4
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %8 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb6 unwind label %cleanup, !dbg !4485

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 0, !dbg !4485
  %_11.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 1, !dbg !4485
; invoke core::ffi::c_str::CStr::as_ptr
  %_9 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_11.0, i64 %_11.1)
          to label %bb7 unwind label %cleanup, !dbg !4485

bb7:                                              ; preds = %bb6
  invoke void (i8*, ...) @rust_valist_struct_member(i8* %_9, i32 10, double 1.500000e+00)
          to label %bb8 unwind label %cleanup, !dbg !4486

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str), !dbg !4483
  br label %bb9, !dbg !4483

abort:                                            ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !4487
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4487
  unreachable, !dbg !4487

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4487
  %11 = load i8*, i8** %10, align 8, !dbg !4487
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4487
  %13 = load i32, i32* %12, align 8, !dbg !4487
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0, !dbg !4487
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1, !dbg !4487
  resume { i8*, i32 } %15, !dbg !4487

bb9:                                              ; preds = %bb8
  ret void, !dbg !4488
}

; items_tests::test_varargs::test_valist_struct_pointer_member::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests12test_varargs33test_valist_struct_pointer_member28_$u7b$$u7b$closure$u7d$$u7d$17h9352fcc9fc119ee9E"(%"[closure@src/test_varargs.rs:93:1: 99:2]"* align 1 %_1) unnamed_addr #0 !dbg !4489 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_varargs.rs:93:1: 99:2]"*, align 8
  store %"[closure@src/test_varargs.rs:93:1: 99:2]"* %_1, %"[closure@src/test_varargs.rs:93:1: 99:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:93:1: 99:2]"** %_1.dbg.spill, metadata !4494, metadata !DIExpression()), !dbg !4495
  call void @test_valist_struct_pointer_member(), !dbg !4495
  br label %bb1, !dbg !4495

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4495
  br label %bb2, !dbg !4495

bb2:                                              ; preds = %bb1
  ret void, !dbg !4496
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_valist_struct_pointer_member() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4497 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  %fmt_str = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %fmt_str, metadata !4499, metadata !DIExpression()), !dbg !4501
; call alloc::ffi::c_str::CString::new
  call void @_ZN5alloc3ffi5c_str7CString3new17h7396a6d41c1bb395E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_2, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc699 to [0 x i8]*), i64 7), !dbg !4502
  br label %bb1, !dbg !4502

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1c463d819f51973fE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_2, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc698 to %"core::panic::location::Location"*)), !dbg !4502
  store { i8*, i64 } %1, { i8*, i64 }* %fmt_str, align 8, !dbg !4502
  br label %bb2, !dbg !4502

bb2:                                              ; preds = %bb1
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %2 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb3 unwind label %cleanup, !dbg !4503

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str) #16
          to label %bb11 unwind label %abort, !dbg !4504

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 0, !dbg !4503
  %_6.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 1, !dbg !4503
; invoke core::ffi::c_str::CStr::as_ptr
  %_4 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_6.0, i64 %_6.1)
          to label %bb4 unwind label %cleanup, !dbg !4503

bb4:                                              ; preds = %bb3
  invoke void (i8*, ...) @valist_struct_pointer_member(i8* %_4, i32 10, double 1.500000e+00)
          to label %bb5 unwind label %cleanup, !dbg !4505

bb5:                                              ; preds = %bb4
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %8 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb6 unwind label %cleanup, !dbg !4506

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 0, !dbg !4506
  %_11.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 1, !dbg !4506
; invoke core::ffi::c_str::CStr::as_ptr
  %_9 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_11.0, i64 %_11.1)
          to label %bb7 unwind label %cleanup, !dbg !4506

bb7:                                              ; preds = %bb6
  invoke void (i8*, ...) @rust_valist_struct_pointer_member(i8* %_9, i32 10, double 1.500000e+00)
          to label %bb8 unwind label %cleanup, !dbg !4507

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str), !dbg !4504
  br label %bb9, !dbg !4504

abort:                                            ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !4508
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4508
  unreachable, !dbg !4508

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4508
  %11 = load i8*, i8** %10, align 8, !dbg !4508
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4508
  %13 = load i32, i32* %12, align 8, !dbg !4508
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0, !dbg !4508
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1, !dbg !4508
  resume { i8*, i32 } %15, !dbg !4508

bb9:                                              ; preds = %bb8
  ret void, !dbg !4509
}

; items_tests::test_varargs::test_restart_valist::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests12test_varargs19test_restart_valist28_$u7b$$u7b$closure$u7d$$u7d$17h62cd1bc9af715e26E"(%"[closure@src/test_varargs.rs:103:1: 109:2]"* align 1 %_1) unnamed_addr #0 !dbg !4510 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_varargs.rs:103:1: 109:2]"*, align 8
  store %"[closure@src/test_varargs.rs:103:1: 109:2]"* %_1, %"[closure@src/test_varargs.rs:103:1: 109:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:103:1: 109:2]"** %_1.dbg.spill, metadata !4515, metadata !DIExpression()), !dbg !4516
  call void @test_restart_valist(), !dbg !4516
  br label %bb1, !dbg !4516

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4516
  br label %bb2, !dbg !4516

bb2:                                              ; preds = %bb1
  ret void, !dbg !4517
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_restart_valist() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4518 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  %fmt_str = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %fmt_str, metadata !4520, metadata !DIExpression()), !dbg !4522
; call alloc::ffi::c_str::CString::new
  call void @_ZN5alloc3ffi5c_str7CString3new17h7396a6d41c1bb395E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_2, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc699 to [0 x i8]*), i64 7), !dbg !4523
  br label %bb1, !dbg !4523

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::unwrap
  %1 = call { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1c463d819f51973fE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_2, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc701 to %"core::panic::location::Location"*)), !dbg !4523
  store { i8*, i64 } %1, { i8*, i64 }* %fmt_str, align 8, !dbg !4523
  br label %bb2, !dbg !4523

bb2:                                              ; preds = %bb1
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %2 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb3 unwind label %cleanup, !dbg !4524

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str) #16
          to label %bb11 unwind label %abort, !dbg !4525

cleanup:                                          ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 0, !dbg !4524
  %_6.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %2, 1, !dbg !4524
; invoke core::ffi::c_str::CStr::as_ptr
  %_4 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_6.0, i64 %_6.1)
          to label %bb4 unwind label %cleanup, !dbg !4524

bb4:                                              ; preds = %bb3
  invoke void (i8*, ...) @restart_valist(i8* %_4, i32 10, double 1.500000e+00)
          to label %bb5 unwind label %cleanup, !dbg !4526

bb5:                                              ; preds = %bb4
; invoke <alloc::ffi::c_str::CString as core::ops::deref::Deref>::deref
  %8 = invoke { %"core::ffi::c_str::CStr"*, i64 } @"_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E"({ i8*, i64 }* align 8 %fmt_str)
          to label %bb6 unwind label %cleanup, !dbg !4527

bb6:                                              ; preds = %bb5
  %_11.0 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 0, !dbg !4527
  %_11.1 = extractvalue { %"core::ffi::c_str::CStr"*, i64 } %8, 1, !dbg !4527
; invoke core::ffi::c_str::CStr::as_ptr
  %_9 = invoke i8* @_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E(%"core::ffi::c_str::CStr"* align 1 %_11.0, i64 %_11.1)
          to label %bb7 unwind label %cleanup, !dbg !4527

bb7:                                              ; preds = %bb6
  invoke void (i8*, ...) @rust_restart_valist(i8* %_9, i32 10, double 1.500000e+00)
          to label %bb8 unwind label %cleanup, !dbg !4528

bb8:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E"({ i8*, i64 }* %fmt_str), !dbg !4525
  br label %bb9, !dbg !4525

abort:                                            ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !4529
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !4529
  unreachable, !dbg !4529

bb11:                                             ; preds = %bb10
  %10 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4529
  %11 = load i8*, i8** %10, align 8, !dbg !4529
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4529
  %13 = load i32, i32* %12, align 8, !dbg !4529
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0, !dbg !4529
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1, !dbg !4529
  resume { i8*, i32 } %15, !dbg !4529

bb9:                                              ; preds = %bb8
  ret void, !dbg !4530
}

; items_tests::test_varargs::test_sample_stddev::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN11items_tests12test_varargs18test_sample_stddev28_$u7b$$u7b$closure$u7d$$u7d$17h5b0b6323e1a2b9e7E"(%"[closure@src/test_varargs.rs:113:1: 119:2]"* align 1 %_1) unnamed_addr #0 !dbg !4531 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_varargs.rs:113:1: 119:2]"*, align 8
  store %"[closure@src/test_varargs.rs:113:1: 119:2]"* %_1, %"[closure@src/test_varargs.rs:113:1: 119:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_varargs.rs:113:1: 119:2]"** %_1.dbg.spill, metadata !4536, metadata !DIExpression()), !dbg !4537
  call void @test_sample_stddev(), !dbg !4537
  br label %bb1, !dbg !4537

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17h06d890d4de79c7ceE(), !dbg !4537
  br label %bb2, !dbg !4537

bb2:                                              ; preds = %bb1
  ret void, !dbg !4538
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_sample_stddev() unnamed_addr #2 !dbg !4539 {
start:
  %right_val.dbg.spill = alloca double*, align 8
  %left_val.dbg.spill = alloca double*, align 8
  %_19 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_3 = alloca { i64*, i64* }, align 8
  %rs_res = alloca double, align 8
  %c_res = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %c_res, metadata !4541, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.declare(metadata double* %rs_res, metadata !4543, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !4549, metadata !DIExpression()), !dbg !4554
  %0 = call double (i32, ...) @sample_stddev(i32 4, double 2.500000e+01, double 2.730000e+01, double 2.690000e+01, double 2.570000e+01), !dbg !4555
  store double %0, double* %c_res, align 8, !dbg !4555
  br label %bb1, !dbg !4555

bb1:                                              ; preds = %start
  %1 = call double (i32, ...) @rust_sample_stddev(i32 4, double 2.500000e+01, double 2.730000e+01, double 2.690000e+01, double 2.570000e+01), !dbg !4556
  store double %1, double* %rs_res, align 8, !dbg !4556
  br label %bb2, !dbg !4556

bb2:                                              ; preds = %bb1
  %2 = bitcast { i64*, i64* }* %_3 to double**, !dbg !4557
  store double* %c_res, double** %2, align 8, !dbg !4557
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1, !dbg !4557
  %4 = bitcast i64** %3 to double**, !dbg !4557
  store double* %rs_res, double** %4, align 8, !dbg !4557
  %5 = bitcast { i64*, i64* }* %_3 to double**, !dbg !4557
  %left_val = load double*, double** %5, align 8, !dbg !4557, !nonnull !23, !align !294, !noundef !23
  store double* %left_val, double** %left_val.dbg.spill, align 8, !dbg !4557
  call void @llvm.dbg.declare(metadata double** %left_val.dbg.spill, metadata !4545, metadata !DIExpression()), !dbg !4558
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_3, i32 0, i32 1, !dbg !4557
  %7 = bitcast i64** %6 to double**, !dbg !4557
  %right_val = load double*, double** %7, align 8, !dbg !4557, !nonnull !23, !align !294, !noundef !23
  store double* %right_val, double** %right_val.dbg.spill, align 8, !dbg !4557
  call void @llvm.dbg.declare(metadata double** %right_val.dbg.spill, metadata !4548, metadata !DIExpression()), !dbg !4558
  %_10 = load double, double* %left_val, align 8, !dbg !4558
  %_11 = load double, double* %right_val, align 8, !dbg !4558
  %_9 = fcmp oeq double %_10, %_11, !dbg !4558
  %_8 = xor i1 %_9, true, !dbg !4558
  br i1 %_8, label %bb3, label %bb4, !dbg !4558

bb4:                                              ; preds = %bb2
  ret void, !dbg !4559

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind, align 1, !dbg !4558
  %8 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_19 to {}**, !dbg !4554
  store {}* null, {}** %8, align 8, !dbg !4554
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h657c06880f59f018E(i8 0, double* align 8 %left_val, double* align 8 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_19, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc703 to %"core::panic::location::Location"*)) #15, !dbg !4554
  unreachable, !dbg !4554
}

; items_tests::main
; Function Attrs: nonlazybind uwtable
define internal void @_ZN11items_tests4main17h1cb78fd7243f8820E() unnamed_addr #2 !dbg !4560 {
start:
; call test::test_main_static
  call void @_ZN4test16test_main_static17h282a5eb5a10ec82dE([0 x %"test::types::TestDescAndFn"*]* align 8 bitcast (<{ i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }>* @alloc465 to [0 x %"test::types::TestDescAndFn"*]*), i64 13), !dbg !4561
  br label %bb1, !dbg !4561

bb1:                                              ; preds = %start
  ret void, !dbg !4561
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #2

; std::rt::lang_start_internal
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1, [3 x i64]* align 8, i64, i8**) unnamed_addr #2

; core::fmt::float::<impl core::fmt::Debug for f64>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt5float50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$f64$GT$3fmt17hd598d3675624ef64E"(double* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h46ab6094afed2354E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h827553a54a7e037dE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #8

; core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::rt_impl
; Function Attrs: nonlazybind uwtable
declare { %"core::ffi::c_str::CStr"*, i64 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7rt_impl17h7896654501f3620cE([0 x i8]* align 1, i64) unnamed_addr #2

; <core::ffi::VaListImpl as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN63_$LT$core..ffi..VaListImpl$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb93fc25a64ad027fE"(%"core::ffi::VaListImpl"* align 8) unnamed_addr #2

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() unnamed_addr #9

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str16slice_error_fail17h062f63050b85fc0cE([0 x i8]* align 1, i64, i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #10

; <alloc::ffi::c_str::NulError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN64_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6ddf2cfa3845ef5E"(%"alloc::ffi::c_str::NulError"* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8, %"core::panic::location::Location"* align 8) unnamed_addr #6

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8, {}* align 1, [3 x i64]* align 8, {}* align 1, [3 x i64]* align 8, %"core::option::Option<core::fmt::Arguments>"*, %"core::panic::location::Location"* align 8) unnamed_addr #11

; core::str::pattern::StrSearcher::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str7pattern11StrSearcher3new17h13dd5abbb92d502eE(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher"), [0 x i8]* align 1, i64, [0 x i8]* align 1, i64) unnamed_addr #2

; <&str as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: nonlazybind uwtable
declare void @"_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h2b2077657056158aE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"), [0 x i8]* align 1, i64) unnamed_addr #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_copy(i8*, i8*) #12

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #13

; Function Attrs: nonlazybind uwtable
declare i32 @printf(i8*, ...) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare i32 @vprintf(i8*, i64* align 8) unnamed_addr #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #12

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #12

; Function Attrs: nonlazybind uwtable
declare i32 @putchar(i32) unnamed_addr #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: nonlazybind uwtable
declare double @sqrt(double) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @inline_extern() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @noop() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare i32 @nofnargs() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare i32 @l() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare i32 @w() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @coreutils_static_assert() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @call_printf() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @call_vprintf(i8*, ...) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @my_printf(i8*, ...) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @simple_vacopy(i8*, ...) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @valist_struct_member(i8*, ...) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @valist_struct_pointer_member(i8*, ...) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @restart_valist(i8*, ...) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare double @sample_stddev(i32, ...) unnamed_addr #2

; test::test_main_static
; Function Attrs: nonlazybind uwtable
declare void @_ZN4test16test_main_static17h282a5eb5a10ec82dE([0 x %"test::types::TestDescAndFn"*]* align 8, i64) unnamed_addr #2

; Function Attrs: nonlazybind
define i32 @main(i32 %0, i8** %1) unnamed_addr #14 {
top:
  %2 = load volatile i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__rustc_debug_gdb_scripts_section__, i32 0, i32 0), align 1
  %3 = sext i32 %0 to i64
; call std::rt::lang_start
  %4 = call i64 @_ZN3std2rt10lang_start17h65989a39d4366ac2E(void ()* @_ZN11items_tests4main17h1cb78fd7243f8820E, i64 %3, i8** %1)
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { alwaysinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { nofree nosync nounwind readnone willreturn }
attributes #9 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { nofree nosync nounwind willreturn }
attributes #13 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #14 = { nonlazybind "target-cpu"="x86-64" }
attributes #15 = { noreturn }
attributes #16 = { noinline }
attributes #17 = { noinline noreturn nounwind }
attributes #18 = { nounwind }

!llvm.module.flags = !{!98, !99, !100, !101, !102}
!llvm.dbg.cu = !{!103}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !14, templateParams: !23, identifier: "dee041a15dfe076460e1ead4b963607c")
!4 = !{!5, !8, !10, !11, !12, !13}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!14 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<()>", scope: !15, file: !2, size: 64, align: 64, elements: !18, templateParams: !23, identifier: "eb9421142c7534b89a47eb687fc5227b")
!15 = !DINamespace(name: "lang_start", scope: !16)
!16 = !DINamespace(name: "rt", scope: !17)
!17 = !DINamespace(name: "std", scope: null)
!18 = !{!19}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !14, file: !2, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn()", baseType: !21, size: 64, align: 64, dwarfAddressSpace: 0)
!21 = !DISubroutineType(types: !22)
!22 = !{null}
!23 = !{}
!24 = !DIGlobalVariableExpression(var: !25, expr: !DIExpression())
!25 = distinct !DIGlobalVariable(name: "<alloc::ffi::c_str::NulError as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !26, isLocal: true, isDefinition: true)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::ffi::c_str::NulError as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !27, vtableHolder: !32, templateParams: !23, identifier: "1b870bd9431ccc1d71adabe14fa4d734")
!27 = !{!28, !29, !30, !31}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !26, file: !2, baseType: !6, size: 64, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !26, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!32 = !DICompositeType(tag: DW_TAG_structure_type, name: "NulError", scope: !33, file: !2, size: 256, align: 64, elements: !36, templateParams: !23, identifier: "f0b155880f0e8602fd0be3023df941a4")
!33 = !DINamespace(name: "c_str", scope: !34)
!34 = !DINamespace(name: "ffi", scope: !35)
!35 = !DINamespace(name: "alloc", scope: null)
!36 = !{!37, !38}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !32, file: !2, baseType: !9, size: 64, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !32, file: !2, baseType: !39, size: 192, align: 64, offset: 64)
!39 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !40, file: !2, size: 192, align: 64, elements: !41, templateParams: !68, identifier: "f48a096c1ed19eb7ba15a7173429013")
!40 = !DINamespace(name: "vec", scope: !35)
!41 = !{!42, !70}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !39, file: !2, baseType: !43, size: 128, align: 64)
!43 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !44, file: !2, size: 128, align: 64, elements: !45, templateParams: !68, identifier: "d09dab1a097018b9dd4dad6f3ce84c27")
!44 = !DINamespace(name: "raw_vec", scope: !35)
!45 = !{!46, !64, !65}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !43, file: !2, baseType: !47, size: 64, align: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !48, file: !2, size: 64, align: 64, elements: !51, templateParams: !59, identifier: "7e72c5db004520f6d0779c7d4ace2142")
!48 = !DINamespace(name: "unique", scope: !49)
!49 = !DINamespace(name: "ptr", scope: !50)
!50 = !DINamespace(name: "core", scope: null)
!51 = !{!52, !61}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !47, file: !2, baseType: !53, size: 64, align: 64)
!53 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !54, file: !2, size: 64, align: 64, elements: !55, templateParams: !59, identifier: "3160283ea80cecf6149fff38a2e996de")
!54 = !DINamespace(name: "non_null", scope: !49)
!55 = !{!56}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !53, file: !2, baseType: !57, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !58, size: 64, align: 64, dwarfAddressSpace: 0)
!58 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!59 = !{!60}
!60 = !DITemplateTypeParameter(name: "T", type: !58)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !47, file: !2, baseType: !62, align: 8)
!62 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !63, file: !2, align: 8, elements: !23, templateParams: !59, identifier: "e338a8151f1037c76eadd10ab3c53972")
!63 = !DINamespace(name: "marker", scope: !50)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !43, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !43, file: !2, baseType: !66, align: 8)
!66 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !67, file: !2, align: 8, elements: !23, identifier: "3328ba4994ba07f4a4a3e83fae935932")
!67 = !DINamespace(name: "alloc", scope: !35)
!68 = !{!60, !69}
!69 = !DITemplateTypeParameter(name: "A", type: !66)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !39, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!71 = !DIGlobalVariableExpression(var: !72, expr: !DIExpression())
!72 = distinct !DIGlobalVariable(name: "<&f64 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !73, isLocal: true, isDefinition: true)
!73 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&f64 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !74, vtableHolder: !79, templateParams: !23, identifier: "6b62788b1bf0b7aff81411b24fc1f74")
!74 = !{!75, !76, !77, !78}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !73, file: !2, baseType: !6, size: 64, align: 64)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !73, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !73, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !73, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&f64", baseType: !80, size: 64, align: 64, dwarfAddressSpace: 0)
!80 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(name: "<&i32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !83, isLocal: true, isDefinition: true)
!83 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&i32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !84, vtableHolder: !89, templateParams: !23, identifier: "e41da7ed75ed4863791811c5b4f5fafa")
!84 = !{!85, !86, !87, !88}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !83, file: !2, baseType: !6, size: 64, align: 64)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !83, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !83, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !83, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !90, size: 64, align: 64, dwarfAddressSpace: 0)
!90 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "rust_mut", scope: !93, file: !95, line: 11, type: !90, isLocal: false, isDefinition: true, align: 32)
!93 = !DINamespace(name: "linking", scope: !94)
!94 = !DINamespace(name: "items_tests", scope: null)
!95 = !DIFile(filename: "src/linking.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "380c05951a1a19cb4c2cf66283a31dda")
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "rust_y", scope: !93, file: !95, line: 13, type: !90, isLocal: false, isDefinition: true, align: 32)
!98 = !{i32 7, !"PIC Level", i32 2}
!99 = !{i32 7, !"PIE Level", i32 2}
!100 = !{i32 2, !"RtLibUseGOT", i32 1}
!101 = !{i32 2, !"Dwarf Version", i32 4}
!102 = !{i32 2, !"Debug Info Version", i32 3}
!103 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !104, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !105, globals: !202)
!104 = !DIFile(filename: "src/lib.rs/@/24gv3y10vt3ug10t", directory: "/home/calvin/git/c2rust/tests/items")
!105 = !{!106, !115, !122, !127, !196}
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !107, file: !2, baseType: !58, size: 8, align: 8, flags: DIFlagEnumClass, elements: !110)
!107 = !DINamespace(name: "v1", scope: !108)
!108 = !DINamespace(name: "rt", scope: !109)
!109 = !DINamespace(name: "fmt", scope: !50)
!110 = !{!111, !112, !113, !114}
!111 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!114 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !116, file: !2, baseType: !117, size: 8, align: 8, flags: DIFlagEnumClass, elements: !118)
!116 = !DINamespace(name: "cmp", scope: !50)
!117 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!118 = !{!119, !120, !121}
!119 = !DIEnumerator(name: "Less", value: 255)
!120 = !DIEnumerator(name: "Equal", value: 0)
!121 = !DIEnumerator(name: "Greater", value: 1)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_void", scope: !123, file: !2, baseType: !58, size: 8, align: 8, flags: DIFlagEnumClass, elements: !124)
!123 = !DINamespace(name: "ffi", scope: !50)
!124 = !{!125, !126}
!125 = !DIEnumerator(name: "__variant1", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "__variant2", value: 1, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !128, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagEnumClass, elements: !131)
!128 = !DINamespace(name: "valid_align", scope: !129)
!129 = !DINamespace(name: "mem", scope: !50)
!130 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!131 = !{!132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195}
!132 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!135 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!136 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!137 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!138 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!139 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!140 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!141 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!142 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!143 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!144 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!145 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!146 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!147 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!148 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!149 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!150 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!151 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!152 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!153 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!154 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!155 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!156 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!157 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!158 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!159 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!160 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!161 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!162 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!163 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!164 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!165 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!166 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!167 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!168 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!169 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!170 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!171 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!172 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!173 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!174 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!175 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!176 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!177 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!178 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!179 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!180 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!181 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!182 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!183 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!184 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!185 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!186 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!187 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!188 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!189 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!190 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!191 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!192 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!193 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!194 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!195 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !197, file: !2, baseType: !58, size: 8, align: 8, flags: DIFlagEnumClass, elements: !198)
!197 = !DINamespace(name: "panicking", scope: !50)
!198 = !{!199, !200, !201}
!199 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!200 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!201 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!202 = !{!0, !24, !71, !81, !91, !96}
!203 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hb17d977b9330e67cE", scope: !205, file: !204, line: 770, type: !206, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !208)
!204 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!205 = !DINamespace(name: "{impl#16}", scope: !54)
!206 = !DISubroutineType(types: !207)
!207 = !{!53, !47}
!208 = !{!209}
!209 = !DILocalVariable(name: "unique", arg: 1, scope: !203, file: !204, line: 770, type: !47)
!210 = !DILocation(line: 770, column: 13, scope: !203)
!211 = !DILocation(line: 773, column: 41, scope: !203)
!212 = !DILocalVariable(name: "self", scope: !213, file: !204, line: 773, type: !47, align: 8)
!213 = !DILexicalBlockFile(scope: !214, file: !204, discriminator: 0)
!214 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h5320855f8912af5eE", scope: !47, file: !215, line: 103, type: !216, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !219)
!215 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!216 = !DISubroutineType(types: !217)
!217 = !{!218, !47}
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !58, size: 64, align: 64, dwarfAddressSpace: 0)
!219 = !{!212}
!220 = !DILocation(line: 773, column: 41, scope: !213, inlinedAt: !211)
!221 = !DILocalVariable(name: "self", scope: !222, file: !204, line: 773, type: !53, align: 8)
!222 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !225)
!223 = !DISubroutineType(types: !224)
!224 = !{!218, !53}
!225 = !{!221}
!226 = !DILocation(line: 773, column: 41, scope: !222, inlinedAt: !227)
!227 = !DILocation(line: 104, column: 9, scope: !214, inlinedAt: !211)
!228 = !DILocalVariable(name: "ptr", scope: !229, file: !204, line: 773, type: !218, align: 8)
!229 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h2b684da21c9d4e5cE", scope: !53, file: !204, line: 196, type: !230, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !232)
!230 = !DISubroutineType(types: !231)
!231 = !{!53, !218}
!232 = !{!228}
!233 = !DILocation(line: 773, column: 18, scope: !229, inlinedAt: !234)
!234 = !DILocation(line: 773, column: 18, scope: !203)
!235 = !DILocation(line: 774, column: 6, scope: !203)
!236 = distinct !DISubprogram(name: "__rust_begin_short_backtrace<fn(), ()>", linkageName: "_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h3dcbdf874863fb13E", scope: !238, file: !237, line: 118, type: !240, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !246, retainedNodes: !242)
!237 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys_common/backtrace.rs", directory: "", checksumkind: CSK_MD5, checksum: "f7c76d4902bfcea1d96ffad8fbde919d")
!238 = !DINamespace(name: "backtrace", scope: !239)
!239 = !DINamespace(name: "sys_common", scope: !17)
!240 = !DISubroutineType(types: !241)
!241 = !{null, !20}
!242 = !{!243, !244}
!243 = !DILocalVariable(name: "f", arg: 1, scope: !236, file: !237, line: 118, type: !20)
!244 = !DILocalVariable(name: "result", scope: !245, file: !237, line: 122, type: !7, align: 1)
!245 = distinct !DILexicalBlock(scope: !236, file: !237, line: 122, column: 5)
!246 = !{!247, !248}
!247 = !DITemplateTypeParameter(name: "F", type: !20)
!248 = !DITemplateTypeParameter(name: "T", type: !7)
!249 = !DILocation(line: 122, column: 9, scope: !245)
!250 = !DILocation(line: 118, column: 43, scope: !236)
!251 = !DILocalVariable(name: "dummy", scope: !252, file: !237, line: 125, type: !7, align: 1)
!252 = !DILexicalBlockFile(scope: !253, file: !237, discriminator: 0)
!253 = distinct !DISubprogram(name: "black_box<()>", linkageName: "_ZN4core4hint9black_box17ha7760403761ef3a4E", scope: !255, file: !254, line: 225, type: !256, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !259, retainedNodes: !258)
!254 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!255 = !DINamespace(name: "hint", scope: !50)
!256 = !DISubroutineType(types: !257)
!257 = !{null, !7}
!258 = !{!251}
!259 = !{!248}
!260 = !DILocation(line: 125, column: 5, scope: !252, inlinedAt: !261)
!261 = !DILocation(line: 125, column: 5, scope: !245)
!262 = !DILocation(line: 122, column: 18, scope: !236)
!263 = !{i32 3358776}
!264 = !DILocation(line: 128, column: 2, scope: !236)
!265 = !DILocation(line: 128, column: 1, scope: !236)
!266 = !DILocation(line: 118, column: 1, scope: !236)
!267 = distinct !DISubprogram(name: "lang_start<()>", linkageName: "_ZN3std2rt10lang_start17h65989a39d4366ac2E", scope: !16, file: !268, line: 139, type: !269, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !259, retainedNodes: !273)
!268 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "53ba40c54b421907f2e3ab22fb96d5b4")
!269 = !DISubroutineType(types: !270)
!270 = !{!271, !20, !271, !272}
!271 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const u8", baseType: !57, size: 64, align: 64, dwarfAddressSpace: 0)
!273 = !{!274, !275, !276, !277}
!274 = !DILocalVariable(name: "main", arg: 1, scope: !267, file: !268, line: 140, type: !20)
!275 = !DILocalVariable(name: "argc", arg: 2, scope: !267, file: !268, line: 141, type: !271)
!276 = !DILocalVariable(name: "argv", arg: 3, scope: !267, file: !268, line: 142, type: !272)
!277 = !DILocalVariable(name: "v", scope: !278, file: !268, line: 144, type: !271, align: 8)
!278 = distinct !DILexicalBlock(scope: !267, file: !268, line: 144, column: 5)
!279 = !DILocation(line: 140, column: 5, scope: !267)
!280 = !DILocation(line: 141, column: 5, scope: !267)
!281 = !DILocation(line: 142, column: 5, scope: !267)
!282 = !DILocation(line: 145, column: 10, scope: !267)
!283 = !DILocation(line: 145, column: 9, scope: !267)
!284 = !DILocation(line: 144, column: 17, scope: !267)
!285 = !DILocation(line: 144, column: 12, scope: !267)
!286 = !DILocation(line: 144, column: 12, scope: !278)
!287 = !DILocation(line: 150, column: 2, scope: !267)
!288 = distinct !DISubprogram(name: "{closure#0}<()>", linkageName: "_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hd0fde3f377fa9f03E", scope: !15, file: !268, line: 145, type: !289, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !259, retainedNodes: !292)
!289 = !DISubroutineType(types: !290)
!290 = !{!90, !291}
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!292 = !{!293}
!293 = !DILocalVariable(name: "main", scope: !288, file: !268, line: 140, type: !20, align: 8)
!294 = !{i64 8}
!295 = !DILocation(line: 140, column: 5, scope: !288)
!296 = !DILocalVariable(name: "self", scope: !297, file: !268, line: 145, type: !300, align: 1)
!297 = !DILexicalBlockFile(scope: !298, file: !268, discriminator: 0)
!298 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217h2f3d6db67a956e8cE", scope: !300, file: !299, line: 1808, type: !311, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !313)
!299 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/process.rs", directory: "", checksumkind: CSK_MD5, checksum: "78747cd94138b7f073ffd16b64787cb4")
!300 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !301, file: !2, size: 8, align: 8, elements: !302, templateParams: !23, identifier: "65270507d071436c1dbdf6fde69e5261")
!301 = !DINamespace(name: "process", scope: !17)
!302 = !{!303}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !300, file: !2, baseType: !304, size: 8, align: 8)
!304 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !305, file: !2, size: 8, align: 8, elements: !309, templateParams: !23, identifier: "faca173619846f0e95e842844eb5af74")
!305 = !DINamespace(name: "process_common", scope: !306)
!306 = !DINamespace(name: "process", scope: !307)
!307 = !DINamespace(name: "unix", scope: !308)
!308 = !DINamespace(name: "sys", scope: !17)
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !304, file: !2, baseType: !58, size: 8, align: 8)
!311 = !DISubroutineType(types: !312)
!312 = !{!90, !300}
!313 = !{!296}
!314 = !DILocation(line: 145, column: 18, scope: !297, inlinedAt: !315)
!315 = !DILocation(line: 145, column: 18, scope: !288)
!316 = !DILocation(line: 145, column: 77, scope: !288)
!317 = !DILocalVariable(name: "self", scope: !318, file: !268, line: 145, type: !323, align: 8)
!318 = !DILexicalBlockFile(scope: !319, file: !268, discriminator: 0)
!319 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217hc13213167324334dE", scope: !304, file: !320, line: 485, type: !321, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !324)
!320 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys/unix/process/process_common.rs", directory: "", checksumkind: CSK_MD5, checksum: "0172c472c69d772c784713c132680582")
!321 = !DISubroutineType(types: !322)
!322 = !{!90, !323}
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::sys::unix::process::process_common::ExitCode", baseType: !304, size: 64, align: 64, dwarfAddressSpace: 0)
!324 = !{!317}
!325 = !DILocation(line: 145, column: 18, scope: !318, inlinedAt: !326)
!326 = !DILocation(line: 1809, column: 9, scope: !298, inlinedAt: !315)
!327 = !DILocation(line: 145, column: 17, scope: !288)
!328 = distinct !DISubprogram(name: "fmt<i32>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h4cc1ce3e266e3b6dE", scope: !330, file: !329, line: 2361, type: !331, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !389, retainedNodes: !386)
!329 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "18dcc19de419985ae78d2bd8ed07e5dc")
!330 = !DINamespace(name: "{impl#59}", scope: !109)
!331 = !DISubroutineType(types: !332)
!332 = !{!333, !350, !351}
!333 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !334, file: !2, size: 8, align: 8, elements: !335, templateParams: !23, identifier: "d239d58a8e95223cd52e3ad2c36d40d7")
!334 = !DINamespace(name: "result", scope: !50)
!335 = !{!336}
!336 = !DICompositeType(tag: DW_TAG_variant_part, scope: !333, file: !2, size: 8, align: 8, elements: !337, templateParams: !23, identifier: "1fa2591b965a13cd50e38802b1727ca", discriminator: !349)
!337 = !{!338, !345}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !336, file: !2, baseType: !339, size: 8, align: 8, extraData: i64 0)
!339 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !333, file: !2, size: 8, align: 8, elements: !340, templateParams: !342, identifier: "cea751326735c343faf647063a65ad14")
!340 = !{!341}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !339, file: !2, baseType: !7, align: 8, offset: 8)
!342 = !{!248, !343}
!343 = !DITemplateTypeParameter(name: "E", type: !344)
!344 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !109, file: !2, align: 8, elements: !23, identifier: "87e319c059f1d372f32b0a49f33ec3cc")
!345 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !336, file: !2, baseType: !346, size: 8, align: 8, extraData: i64 1)
!346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !333, file: !2, size: 8, align: 8, elements: !347, templateParams: !342, identifier: "6c6eb84ed910506586b60ba90dbaa2c")
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !346, file: !2, baseType: !344, align: 8, offset: 8)
!349 = !DIDerivedType(tag: DW_TAG_member, scope: !333, file: !2, baseType: !58, size: 8, align: 8, flags: DIFlagArtificial)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&i32", baseType: !89, size: 64, align: 64, dwarfAddressSpace: 0)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !352, size: 64, align: 64, dwarfAddressSpace: 0)
!352 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !109, file: !2, size: 512, align: 64, elements: !353, templateParams: !23, identifier: "6e9ffaec9b89ebb810272bb66e7b2042")
!353 = !{!354, !356, !358, !359, !374, !375}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !352, file: !2, baseType: !355, size: 32, align: 32, offset: 384)
!355 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !352, file: !2, baseType: !357, size: 32, align: 32, offset: 416)
!357 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !352, file: !2, baseType: !106, size: 8, align: 8, offset: 448)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !352, file: !2, baseType: !360, size: 128, align: 64)
!360 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !361, file: !2, size: 128, align: 64, elements: !362, templateParams: !23, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!361 = !DINamespace(name: "option", scope: !50)
!362 = !{!363}
!363 = !DICompositeType(tag: DW_TAG_variant_part, scope: !360, file: !2, size: 128, align: 64, elements: !364, templateParams: !23, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !373)
!364 = !{!365, !369}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !363, file: !2, baseType: !366, size: 128, align: 64, extraData: i64 0)
!366 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !360, file: !2, size: 128, align: 64, elements: !23, templateParams: !367, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!367 = !{!368}
!368 = !DITemplateTypeParameter(name: "T", type: !9)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !363, file: !2, baseType: !370, size: 128, align: 64, extraData: i64 1)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !360, file: !2, size: 128, align: 64, elements: !371, templateParams: !367, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !370, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !360, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !352, file: !2, baseType: !360, size: 128, align: 64, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !352, file: !2, baseType: !376, size: 128, align: 64, offset: 256)
!376 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !377, templateParams: !23, identifier: "3d4f80cd5361aaff4f795dd09efb8db1")
!377 = !{!378, !381}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !376, file: !2, baseType: !379, size: 64, align: 64)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64, align: 64, dwarfAddressSpace: 0)
!380 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !23, identifier: "abb712b259efc5e79bb67900edf24920")
!381 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !376, file: !2, baseType: !382, size: 64, align: 64, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !383, size: 64, align: 64, dwarfAddressSpace: 0)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !384)
!384 = !{!385}
!385 = !DISubrange(count: 3, lowerBound: 0)
!386 = !{!387, !388}
!387 = !DILocalVariable(name: "self", arg: 1, scope: !328, file: !329, line: 2361, type: !350)
!388 = !DILocalVariable(name: "f", arg: 2, scope: !328, file: !329, line: 2361, type: !351)
!389 = !{!390}
!390 = !DITemplateTypeParameter(name: "T", type: !90)
!391 = !DILocation(line: 2361, column: 20, scope: !328)
!392 = !DILocation(line: 2361, column: 27, scope: !328)
!393 = !DILocation(line: 2361, column: 71, scope: !328)
!394 = !{i64 4}
!395 = !DILocation(line: 2361, column: 62, scope: !328)
!396 = !DILocation(line: 2361, column: 84, scope: !328)
!397 = distinct !DISubprogram(name: "fmt<f64>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9be428947809936eE", scope: !330, file: !329, line: 2361, type: !398, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !404, retainedNodes: !401)
!398 = !DISubroutineType(types: !399)
!399 = !{!333, !400, !351}
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&f64", baseType: !79, size: 64, align: 64, dwarfAddressSpace: 0)
!401 = !{!402, !403}
!402 = !DILocalVariable(name: "self", arg: 1, scope: !397, file: !329, line: 2361, type: !400)
!403 = !DILocalVariable(name: "f", arg: 2, scope: !397, file: !329, line: 2361, type: !351)
!404 = !{!405}
!405 = !DITemplateTypeParameter(name: "T", type: !80)
!406 = !DILocation(line: 2361, column: 20, scope: !397)
!407 = !DILocation(line: 2361, column: 27, scope: !397)
!408 = !DILocation(line: 2361, column: 71, scope: !397)
!409 = !DILocation(line: 2361, column: 62, scope: !397)
!410 = !DILocation(line: 2361, column: 84, scope: !397)
!411 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h225f3d09039f53a3E", scope: !413, file: !412, line: 189, type: !416, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !418)
!412 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "a5e6372fb466d62a237d46ecffb4676a")
!413 = !DINamespace(name: "{impl#37}", scope: !414)
!414 = !DINamespace(name: "range", scope: !415)
!415 = !DINamespace(name: "iter", scope: !50)
!416 = !DISubroutineType(types: !417)
!417 = !{!9, !9, !9}
!418 = !{!419, !420}
!419 = !DILocalVariable(name: "start", arg: 1, scope: !411, file: !412, line: 189, type: !9)
!420 = !DILocalVariable(name: "n", arg: 2, scope: !411, file: !412, line: 189, type: !9)
!421 = !DILocation(line: 189, column: 37, scope: !411)
!422 = !DILocation(line: 189, column: 50, scope: !411)
!423 = !DILocation(line: 191, column: 22, scope: !411)
!424 = !DILocalVariable(name: "self", scope: !425, file: !412, line: 191, type: !9, align: 8)
!425 = !DILexicalBlockFile(scope: !426, file: !412, discriminator: 0)
!426 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h248c853f68583999E", scope: !428, file: !427, line: 463, type: !416, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !430)
!427 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!428 = !DINamespace(name: "{impl#11}", scope: !429)
!429 = !DINamespace(name: "num", scope: !50)
!430 = !{!424, !431}
!431 = !DILocalVariable(name: "rhs", scope: !425, file: !412, line: 191, type: !9, align: 8)
!432 = !DILocation(line: 191, column: 22, scope: !425, inlinedAt: !423)
!433 = !DILocation(line: 191, column: 42, scope: !411)
!434 = !DILocation(line: 192, column: 10, scope: !411)
!435 = distinct !DISubprogram(name: "backward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h5d3b8e6580969331E", scope: !413, file: !412, line: 195, type: !416, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !436)
!436 = !{!437, !438}
!437 = !DILocalVariable(name: "start", arg: 1, scope: !435, file: !412, line: 195, type: !9)
!438 = !DILocalVariable(name: "n", arg: 2, scope: !435, file: !412, line: 195, type: !9)
!439 = !DILocation(line: 195, column: 38, scope: !435)
!440 = !DILocation(line: 195, column: 51, scope: !435)
!441 = !DILocation(line: 197, column: 22, scope: !435)
!442 = !DILocalVariable(name: "self", scope: !443, file: !412, line: 197, type: !9, align: 8)
!443 = !DILexicalBlockFile(scope: !444, file: !412, discriminator: 0)
!444 = distinct !DISubprogram(name: "unchecked_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub17hb344cc35ba2c7b8eE", scope: !428, file: !427, line: 533, type: !416, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !445)
!445 = !{!442, !446}
!446 = !DILocalVariable(name: "rhs", scope: !443, file: !412, line: 197, type: !9, align: 8)
!447 = !DILocation(line: 197, column: 22, scope: !443, inlinedAt: !441)
!448 = !DILocation(line: 197, column: 42, scope: !435)
!449 = !DILocation(line: 198, column: 10, scope: !435)
!450 = distinct !DISubprogram(name: "const_eval_select<(&[u8]), fn(&[u8]) -> &core::ffi::c_str::CStr, fn(&[u8]) -> &core::ffi::c_str::CStr, &core::ffi::c_str::CStr>", linkageName: "_ZN4core10intrinsics17const_eval_select17h168407bbf0f28c3dE", scope: !452, file: !451, line: 2687, type: !453, scopeLine: 2687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !479, retainedNodes: !475)
!451 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!452 = !DINamespace(name: "intrinsics", scope: !50)
!453 = !DISubroutineType(types: !454)
!454 = !{!455, !464, !472, !472}
!455 = !DICompositeType(tag: DW_TAG_structure_type, name: "&core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !456, templateParams: !23, identifier: "9a691f075a9e4b9c7e7049abca5ed1fb")
!456 = !{!457, !463}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !455, file: !2, baseType: !458, size: 64, align: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64, align: 64, dwarfAddressSpace: 0)
!459 = !DICompositeType(tag: DW_TAG_structure_type, name: "CStr", scope: !460, file: !2, align: 8, elements: !461, templateParams: !23, identifier: "2da013c6b133655882cf6258a2093276")
!460 = !DINamespace(name: "c_str", scope: !123)
!461 = !{!462}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !459, file: !2, baseType: !117, align: 8)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !455, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!464 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&[u8])", file: !2, size: 128, align: 64, elements: !465, templateParams: !23, identifier: "65821ee449d7484056bb2ad385d752b8")
!465 = !{!466}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !464, file: !2, baseType: !467, size: 128, align: 64)
!467 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !468, templateParams: !23, identifier: "7d49e60d2ca720f66806f7375f860e2")
!468 = !{!469, !471}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !467, file: !2, baseType: !470, size: 64, align: 64)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64, align: 64, dwarfAddressSpace: 0)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !467, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&[u8]) -> &core::ffi::c_str::CStr", baseType: !473, size: 64, align: 64, dwarfAddressSpace: 0)
!473 = !DISubroutineType(types: !474)
!474 = !{!455, !467}
!475 = !{!476, !477, !478}
!476 = !DILocalVariable(name: "arg", arg: 1, scope: !450, file: !451, line: 2688, type: !464)
!477 = !DILocalVariable(name: "_called_in_const", arg: 2, scope: !450, file: !451, line: 2689, type: !472)
!478 = !DILocalVariable(name: "called_at_rt", arg: 3, scope: !450, file: !451, line: 2690, type: !472)
!479 = !{!480, !481, !482, !483}
!480 = !DITemplateTypeParameter(name: "ARG", type: !464)
!481 = !DITemplateTypeParameter(name: "F", type: !472)
!482 = !DITemplateTypeParameter(name: "G", type: !472)
!483 = !DITemplateTypeParameter(name: "RET", type: !455)
!484 = !DILocation(line: 2688, column: 5, scope: !450)
!485 = !DILocation(line: 2689, column: 5, scope: !450)
!486 = !DILocation(line: 2690, column: 5, scope: !450)
!487 = !DILocation(line: 2696, column: 5, scope: !450)
!488 = !DILocation(line: 2697, column: 1, scope: !450)
!489 = !DILocation(line: 2687, column: 1, scope: !450)
!490 = !DILocation(line: 2697, column: 2, scope: !450)
!491 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17heb94650d3533541dE", scope: !493, file: !492, line: 800, type: !416, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !497, retainedNodes: !494)
!492 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!493 = !DINamespace(name: "Ord", scope: !116)
!494 = !{!495, !496}
!495 = !DILocalVariable(name: "self", arg: 1, scope: !491, file: !492, line: 800, type: !9)
!496 = !DILocalVariable(name: "other", arg: 2, scope: !491, file: !492, line: 800, type: !9)
!497 = !{!498}
!498 = !DITemplateTypeParameter(name: "Self", type: !9)
!499 = !DILocation(line: 800, column: 12, scope: !491)
!500 = !DILocation(line: 800, column: 18, scope: !491)
!501 = !DILocation(line: 808, column: 15, scope: !491)
!502 = !{i8 -1, i8 2}
!503 = !DILocation(line: 812, column: 5, scope: !491)
!504 = !DILocation(line: 808, column: 9, scope: !491)
!505 = !{i8 0, i8 2}
!506 = !DILocation(line: 809, column: 49, scope: !491)
!507 = !DILocation(line: 810, column: 34, scope: !491)
!508 = !DILocation(line: 800, column: 5, scope: !491)
!509 = !DILocation(line: 812, column: 6, scope: !491)
!510 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hb3f07e57d892c0cbE", scope: !511, file: !492, line: 1436, type: !513, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !516)
!511 = !DINamespace(name: "{impl#55}", scope: !512)
!512 = !DINamespace(name: "impls", scope: !116)
!513 = !DISubroutineType(types: !514)
!514 = !{!115, !515, !515}
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!516 = !{!517, !518}
!517 = !DILocalVariable(name: "self", arg: 1, scope: !510, file: !492, line: 1436, type: !515)
!518 = !DILocalVariable(name: "other", arg: 2, scope: !510, file: !492, line: 1436, type: !515)
!519 = !DILocation(line: 1436, column: 24, scope: !510)
!520 = !DILocation(line: 1436, column: 31, scope: !510)
!521 = !DILocation(line: 1439, column: 24, scope: !510)
!522 = !DILocation(line: 1439, column: 32, scope: !510)
!523 = !DILocation(line: 1440, column: 29, scope: !510)
!524 = !DILocation(line: 1440, column: 38, scope: !510)
!525 = !DILocation(line: 1439, column: 41, scope: !510)
!526 = !DILocation(line: 1439, column: 21, scope: !510)
!527 = !DILocation(line: 1442, column: 18, scope: !510)
!528 = !DILocation(line: 1441, column: 28, scope: !510)
!529 = !DILocation(line: 1440, column: 26, scope: !510)
!530 = !DILocation(line: 1440, column: 47, scope: !510)
!531 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h36ac290b4ba6899eE", scope: !532, file: !492, line: 1423, type: !533, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !536)
!532 = !DINamespace(name: "{impl#54}", scope: !512)
!533 = !DISubroutineType(types: !534)
!534 = !{!535, !515, !515}
!535 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!536 = !{!537, !538}
!537 = !DILocalVariable(name: "self", arg: 1, scope: !531, file: !492, line: 1423, type: !515)
!538 = !DILocalVariable(name: "other", arg: 2, scope: !531, file: !492, line: 1423, type: !515)
!539 = !DILocation(line: 1423, column: 23, scope: !531)
!540 = !DILocation(line: 1423, column: 30, scope: !531)
!541 = !DILocation(line: 1423, column: 52, scope: !531)
!542 = !DILocation(line: 1423, column: 62, scope: !531)
!543 = !DILocation(line: 1423, column: 72, scope: !531)
!544 = distinct !DISubprogram(name: "as_va_list", linkageName: "_ZN4core3ffi10VaListImpl10as_va_list17h002e33e9454b942dE", scope: !546, file: !545, line: 417, type: !559, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !569)
!545 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ffi/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "042bf4c6210bbea7946ffc45f3c5e379")
!546 = !DICompositeType(tag: DW_TAG_structure_type, name: "VaListImpl", scope: !123, file: !2, size: 192, align: 64, elements: !547, templateParams: !23, identifier: "59481d630e596d9a79497278542848a7")
!547 = !{!548, !549, !550, !552, !553}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !546, file: !2, baseType: !90, size: 32, align: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !546, file: !2, baseType: !90, size: 32, align: 32, offset: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !546, file: !2, baseType: !551, size: 64, align: 64, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::ffi::c_void", baseType: !122, size: 64, align: 64, dwarfAddressSpace: 0)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !546, file: !2, baseType: !551, size: 64, align: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !546, file: !2, baseType: !554, align: 8, offset: 192)
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&mut &core::ffi::c_void>", scope: !63, file: !2, align: 8, elements: !23, templateParams: !555, identifier: "6defb32c455b0e6e35dcf92c27d8d2be")
!555 = !{!556}
!556 = !DITemplateTypeParameter(name: "T", type: !557)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &core::ffi::c_void", baseType: !558, size: 64, align: 64, dwarfAddressSpace: 0)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ffi::c_void", baseType: !122, size: 64, align: 64, dwarfAddressSpace: 0)
!559 = !DISubroutineType(types: !560)
!560 = !{!561, !564}
!561 = !DICompositeType(tag: DW_TAG_structure_type, name: "VaList", scope: !123, file: !2, size: 64, align: 64, elements: !562, templateParams: !23, identifier: "6e6594fcf21c75184ec73a5dbe1c4b87")
!562 = !{!563, !565}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !561, file: !2, baseType: !564, size: 64, align: 64)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ffi::VaListImpl", baseType: !546, size: 64, align: 64, dwarfAddressSpace: 0)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !561, file: !2, baseType: !566, align: 8)
!566 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&mut core::ffi::VaListImpl>", scope: !63, file: !2, align: 8, elements: !23, templateParams: !567, identifier: "b5623cd03dccb927dfadefb6df041441")
!567 = !{!568}
!568 = !DITemplateTypeParameter(name: "T", type: !564)
!569 = !{!570}
!570 = !DILocalVariable(name: "self", arg: 1, scope: !544, file: !545, line: 417, type: !564)
!571 = !DILocation(line: 417, column: 27, scope: !544)
!572 = !DILocation(line: 418, column: 9, scope: !544)
!573 = !DILocation(line: 419, column: 6, scope: !544)
!574 = distinct !DISubprogram(name: "arg<i32>", linkageName: "_ZN4core3ffi10VaListImpl3arg17h346cf3d2ff706f30E", scope: !546, file: !545, line: 510, type: !575, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !389, retainedNodes: !577)
!575 = !DISubroutineType(types: !576)
!576 = !{!90, !564}
!577 = !{!578}
!578 = !DILocalVariable(name: "self", arg: 1, scope: !574, file: !545, line: 510, type: !564)
!579 = !DILocation(line: 510, column: 51, scope: !574)
!580 = !DILocation(line: 512, column: 18, scope: !574)
!581 = !DILocation(line: 513, column: 6, scope: !574)
!582 = distinct !DISubprogram(name: "arg<f64>", linkageName: "_ZN4core3ffi10VaListImpl3arg17h527596819821ca88E", scope: !546, file: !545, line: 510, type: !583, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !404, retainedNodes: !585)
!583 = !DISubroutineType(types: !584)
!584 = !{!80, !564}
!585 = !{!586}
!586 = !DILocalVariable(name: "self", arg: 1, scope: !582, file: !545, line: 510, type: !564)
!587 = !DILocation(line: 510, column: 51, scope: !582)
!588 = !DILocation(line: 512, column: 18, scope: !582)
!589 = !DILocation(line: 513, column: 6, scope: !582)
!590 = distinct !DISubprogram(name: "arg<*mut i8>", linkageName: "_ZN4core3ffi10VaListImpl3arg17hf947328bb00d6431E", scope: !546, file: !545, line: 510, type: !591, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !596, retainedNodes: !594)
!591 = !DISubroutineType(types: !592)
!592 = !{!593, !564}
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i8", baseType: !117, size: 64, align: 64, dwarfAddressSpace: 0)
!594 = !{!595}
!595 = !DILocalVariable(name: "self", arg: 1, scope: !590, file: !545, line: 510, type: !564)
!596 = !{!597}
!597 = !DITemplateTypeParameter(name: "T", type: !593)
!598 = !DILocation(line: 510, column: 51, scope: !590)
!599 = !DILocation(line: 512, column: 18, scope: !590)
!600 = !DILocation(line: 513, column: 6, scope: !590)
!601 = distinct !DISubprogram(name: "as_ptr", linkageName: "_ZN4core3ffi5c_str4CStr6as_ptr17h8ee0d6d5d74d8703E", scope: !459, file: !602, line: 475, type: !603, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !606)
!602 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "a50c941e663797b3cd132afeffc32d87")
!603 = !DISubroutineType(types: !604)
!604 = !{!605, !455}
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i8", baseType: !117, size: 64, align: 64, dwarfAddressSpace: 0)
!606 = !{!607}
!607 = !DILocalVariable(name: "self", arg: 1, scope: !601, file: !602, line: 475, type: !455)
!608 = !DILocation(line: 475, column: 25, scope: !601)
!609 = !DILocation(line: 476, column: 9, scope: !601)
!610 = !DILocalVariable(name: "self", scope: !611, file: !602, line: 476, type: !618, align: 8)
!611 = !DILexicalBlockFile(scope: !612, file: !602, discriminator: 0)
!612 = distinct !DISubprogram(name: "as_ptr<i8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h0e41b38e6c263ba8E", scope: !614, file: !613, line: 476, type: !616, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !624, retainedNodes: !623)
!613 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!614 = !DINamespace(name: "{impl#0}", scope: !615)
!615 = !DINamespace(name: "slice", scope: !50)
!616 = !DISubroutineType(types: !617)
!617 = !{!605, !618}
!618 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[i8]", file: !2, size: 128, align: 64, elements: !619, templateParams: !23, identifier: "cc2ad320ed202ac3c13bb57e7e44d101")
!619 = !{!620, !622}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !618, file: !2, baseType: !621, size: 64, align: 64)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64, align: 64, dwarfAddressSpace: 0)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !618, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!623 = !{!610}
!624 = !{!625}
!625 = !DITemplateTypeParameter(name: "T", type: !117)
!626 = !DILocation(line: 476, column: 9, scope: !611, inlinedAt: !609)
!627 = !DILocation(line: 477, column: 6, scope: !601)
!628 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hcddc92d572cb5de9E", scope: !630, file: !629, line: 185, type: !632, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !634)
!629 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "6661e46781fcd4293e0f5caf32f3d8ca")
!630 = !DINamespace(name: "{impl#80}", scope: !631)
!631 = !DINamespace(name: "num", scope: !109)
!632 = !DISubroutineType(types: !633)
!633 = !{!333, !89, !351}
!634 = !{!635, !636}
!635 = !DILocalVariable(name: "self", arg: 1, scope: !628, file: !629, line: 185, type: !89)
!636 = !DILocalVariable(name: "f", arg: 2, scope: !628, file: !629, line: 185, type: !351)
!637 = !DILocation(line: 185, column: 20, scope: !628)
!638 = !DILocation(line: 185, column: 27, scope: !628)
!639 = !DILocation(line: 186, column: 20, scope: !628)
!640 = !DILocation(line: 188, column: 27, scope: !628)
!641 = !DILocation(line: 187, column: 21, scope: !628)
!642 = !DILocation(line: 186, column: 17, scope: !628)
!643 = !DILocation(line: 193, column: 14, scope: !628)
!644 = !DILocation(line: 191, column: 21, scope: !628)
!645 = !DILocation(line: 189, column: 21, scope: !628)
!646 = !DILocation(line: 188, column: 24, scope: !628)
!647 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h1abf688bf72f1613E", scope: !648, file: !329, line: 390, type: !721, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !723)
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !109, file: !2, size: 384, align: 64, elements: !649, templateParams: !23, identifier: "7e7034295abae01651800c8eb0e9b712")
!649 = !{!650, !660, !705}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !648, file: !2, baseType: !651, size: 128, align: 64)
!651 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !652, templateParams: !23, identifier: "120d786d314e2730a5f45c5e7e56f7d")
!652 = !{!653, !659}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !651, file: !2, baseType: !654, size: 64, align: 64)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64, align: 64, dwarfAddressSpace: 0)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !656, templateParams: !23, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!656 = !{!657, !658}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !655, file: !2, baseType: !470, size: 64, align: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !655, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !651, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !648, file: !2, baseType: !661, size: 128, align: 64, offset: 128)
!661 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !361, file: !2, size: 128, align: 64, elements: !662, templateParams: !23, identifier: "bb69cbb99024f47dbb54317ba8130317")
!662 = !{!663}
!663 = !DICompositeType(tag: DW_TAG_variant_part, scope: !661, file: !2, size: 128, align: 64, elements: !664, templateParams: !23, identifier: "ce02297fe7dbf35f547cc88f131a39b4", discriminator: !704)
!664 = !{!665, !700}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !663, file: !2, baseType: !666, size: 128, align: 64, extraData: i64 0)
!666 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !661, file: !2, size: 128, align: 64, elements: !23, templateParams: !667, identifier: "742dbe7e160661d8ca36fcfff2574850")
!667 = !{!668}
!668 = !DITemplateTypeParameter(name: "T", type: !669)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !670, templateParams: !23, identifier: "5ac19a4b2fedc0a38075c82d3d698a2e")
!670 = !{!671, !699}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !669, file: !2, baseType: !672, size: 64, align: 64)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64, align: 64, dwarfAddressSpace: 0)
!673 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !107, file: !2, size: 448, align: 64, elements: !674, templateParams: !23, identifier: "fbba22b504f631aebebe5f9a731b4661")
!674 = !{!675, !676}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !673, file: !2, baseType: !9, size: 64, align: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !673, file: !2, baseType: !677, size: 384, align: 64, offset: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !107, file: !2, size: 384, align: 64, elements: !678, templateParams: !23, identifier: "a89ae7a13a1def66296bab98052f520a")
!678 = !{!679, !680, !681, !682, !698}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !677, file: !2, baseType: !357, size: 32, align: 32, offset: 256)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !677, file: !2, baseType: !106, size: 8, align: 8, offset: 320)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !677, file: !2, baseType: !355, size: 32, align: 32, offset: 288)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !677, file: !2, baseType: !683, size: 128, align: 64)
!683 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !107, file: !2, size: 128, align: 64, elements: !684, templateParams: !23, identifier: "41c6e2a1db95b605a371a090678c1fd8")
!684 = !{!685}
!685 = !DICompositeType(tag: DW_TAG_variant_part, scope: !683, file: !2, size: 128, align: 64, elements: !686, templateParams: !23, identifier: "eff7cdccebc4ba23639a28669cbce86", discriminator: !697)
!686 = !{!687, !691, !695}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !685, file: !2, baseType: !688, size: 128, align: 64, extraData: i64 0)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !683, file: !2, size: 128, align: 64, elements: !689, templateParams: !23, identifier: "927d86c22d9994b767e51a58b20493")
!689 = !{!690}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !688, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !685, file: !2, baseType: !692, size: 128, align: 64, extraData: i64 1)
!692 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !683, file: !2, size: 128, align: 64, elements: !693, templateParams: !23, identifier: "ce4b8bb3a4200a86c4c06a7570d8ee71")
!693 = !{!694}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !692, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !685, file: !2, baseType: !696, size: 128, align: 64, extraData: i64 2)
!696 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !683, file: !2, size: 128, align: 64, elements: !23, identifier: "b155566b9bd0239ef48aa3b8bcdef75b")
!697 = !DIDerivedType(tag: DW_TAG_member, scope: !683, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !677, file: !2, baseType: !683, size: 128, align: 64, offset: 128)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !669, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !663, file: !2, baseType: !701, size: 128, align: 64)
!701 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !661, file: !2, size: 128, align: 64, elements: !702, templateParams: !667, identifier: "17f2fc106094349c7673abca4839c97a")
!702 = !{!703}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !701, file: !2, baseType: !669, size: 128, align: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, scope: !661, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !648, file: !2, baseType: !706, size: 128, align: 64, offset: 256)
!706 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !707, templateParams: !23, identifier: "c78588d5439c4eaa18fbaab99f079cbf")
!707 = !{!708, !720}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !706, file: !2, baseType: !709, size: 64, align: 64)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64, align: 64, dwarfAddressSpace: 0)
!710 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !109, file: !2, size: 128, align: 64, elements: !711, templateParams: !23, identifier: "753c369e46bf484710f4d769a3fba395")
!711 = !{!712, !716}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !710, file: !2, baseType: !713, size: 64, align: 64)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !714, size: 64, align: 64, dwarfAddressSpace: 0)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !715, file: !2, align: 8, elements: !23, identifier: "83e8d27b51d2e55ae9422e57e00c6cd7")
!715 = !DINamespace(name: "{extern#0}", scope: !109)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !710, file: !2, baseType: !717, size: 64, align: 64, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !718, size: 64, align: 64, dwarfAddressSpace: 0)
!718 = !DISubroutineType(types: !719)
!719 = !{!333, !713, !351}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !706, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!721 = !DISubroutineType(types: !722)
!722 = !{!648, !651, !706}
!723 = !{!724, !725}
!724 = !DILocalVariable(name: "pieces", arg: 1, scope: !647, file: !329, line: 390, type: !651)
!725 = !DILocalVariable(name: "args", arg: 2, scope: !647, file: !329, line: 390, type: !706)
!726 = !DILocation(line: 390, column: 25, scope: !647)
!727 = !DILocation(line: 390, column: 53, scope: !647)
!728 = !DILocation(line: 391, column: 12, scope: !647)
!729 = !DILocation(line: 391, column: 56, scope: !647)
!730 = !DILocation(line: 391, column: 41, scope: !647)
!731 = !DILocation(line: 394, column: 34, scope: !647)
!732 = !DILocation(line: 394, column: 9, scope: !647)
!733 = !DILocation(line: 395, column: 6, scope: !647)
!734 = !DILocation(line: 392, column: 13, scope: !647)
!735 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17ha68ea4317dd069c4E", scope: !129, file: !736, line: 913, type: !737, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !740)
!736 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!737 = !DISubroutineType(types: !738)
!738 = !{!9, !739, !9}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!740 = !{!741, !742, !743}
!741 = !DILocalVariable(name: "dest", arg: 1, scope: !735, file: !736, line: 913, type: !739)
!742 = !DILocalVariable(name: "src", arg: 2, scope: !735, file: !736, line: 913, type: !9)
!743 = !DILocalVariable(name: "result", scope: !744, file: !736, line: 918, type: !9, align: 8)
!744 = distinct !DILexicalBlock(scope: !735, file: !736, line: 918, column: 9)
!745 = !DILocation(line: 913, column: 25, scope: !735)
!746 = !DILocation(line: 913, column: 39, scope: !735)
!747 = !DILocalVariable(name: "src", scope: !748, file: !736, line: 919, type: !9, align: 8)
!748 = !DILexicalBlockFile(scope: !749, file: !736, discriminator: 0)
!749 = distinct !DISubprogram(name: "write<usize>", linkageName: "_ZN4core3ptr5write17hccfee852a2f0d924E", scope: !49, file: !750, line: 1296, type: !751, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !754)
!750 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!751 = !DISubroutineType(types: !752)
!752 = !{null, !753, !9}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!754 = !{!755, !747}
!755 = !DILocalVariable(name: "dst", scope: !748, file: !736, line: 919, type: !753, align: 8)
!756 = !DILocation(line: 919, column: 9, scope: !748, inlinedAt: !757)
!757 = !DILocation(line: 919, column: 9, scope: !744)
!758 = !DILocalVariable(name: "tmp", scope: !759, file: !736, line: 918, type: !768, align: 8)
!759 = !DILexicalBlockFile(scope: !760, file: !736, discriminator: 0)
!760 = distinct !DILexicalBlock(scope: !761, file: !750, line: 1107, column: 5)
!761 = distinct !DISubprogram(name: "read<usize>", linkageName: "_ZN4core3ptr4read17h372d95e2696bb010E", scope: !49, file: !750, line: 1099, type: !762, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !765)
!762 = !DISubroutineType(types: !763)
!763 = !{!9, !764}
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!765 = !{!766, !758}
!766 = !DILocalVariable(name: "src", scope: !767, file: !736, line: 918, type: !764, align: 8)
!767 = !DILexicalBlockFile(scope: !761, file: !736, discriminator: 0)
!768 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !769, file: !2, size: 64, align: 64, elements: !770, templateParams: !367, identifier: "d5eca075936c223cc2b20ecedd1e4e46")
!769 = !DINamespace(name: "maybe_uninit", scope: !129)
!770 = !{!771, !772}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !768, file: !2, baseType: !7, align: 8)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !768, file: !2, baseType: !773, size: 64, align: 64)
!773 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !774, file: !2, size: 64, align: 64, elements: !775, templateParams: !367, identifier: "446cb116741bbe0e5138064f6b058dad")
!774 = !DINamespace(name: "manually_drop", scope: !129)
!775 = !{!776}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !773, file: !2, baseType: !9, size: 64, align: 64)
!777 = !DILocation(line: 918, column: 22, scope: !759, inlinedAt: !778)
!778 = !DILocation(line: 918, column: 22, scope: !735)
!779 = !DILocation(line: 918, column: 32, scope: !735)
!780 = !DILocation(line: 918, column: 22, scope: !767, inlinedAt: !778)
!781 = !DILocation(line: 918, column: 22, scope: !782, inlinedAt: !787)
!782 = !DILexicalBlockFile(scope: !783, file: !736, discriminator: 0)
!783 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h9b97dd79ba95e5fcE", scope: !768, file: !784, line: 320, type: !785, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !23)
!784 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d75c93d9a93fe65ef19edc0e8e272278")
!785 = !DISubroutineType(types: !786)
!786 = !{!768}
!787 = !DILocation(line: 1107, column: 19, scope: !761, inlinedAt: !778)
!788 = !DILocalVariable(name: "self", scope: !789, file: !736, line: 918, type: !793, align: 8)
!789 = !DILexicalBlockFile(scope: !790, file: !736, discriminator: 0)
!790 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h17addc3a28a88ddaE", scope: !768, file: !784, line: 574, type: !791, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !794)
!791 = !DISubroutineType(types: !792)
!792 = !{!753, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !768, size: 64, align: 64, dwarfAddressSpace: 0)
!794 = !{!788}
!795 = !DILocation(line: 918, column: 22, scope: !789, inlinedAt: !796)
!796 = !DILocation(line: 1115, column: 34, scope: !760, inlinedAt: !778)
!797 = !DILocalVariable(name: "self", scope: !798, file: !736, line: 918, type: !768, align: 8)
!798 = !DILexicalBlockFile(scope: !799, file: !736, discriminator: 0)
!799 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h2170458c85112e1fE", scope: !768, file: !784, line: 629, type: !800, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !810)
!800 = !DISubroutineType(types: !801)
!801 = !{!9, !768, !802}
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !803, size: 64, align: 64, dwarfAddressSpace: 0)
!803 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !804, file: !2, size: 192, align: 64, elements: !806, templateParams: !23, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!804 = !DINamespace(name: "location", scope: !805)
!805 = !DINamespace(name: "panic", scope: !50)
!806 = !{!807, !808, !809}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !803, file: !2, baseType: !655, size: 128, align: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !803, file: !2, baseType: !355, size: 32, align: 32, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !803, file: !2, baseType: !355, size: 32, align: 32, offset: 160)
!810 = !{!797}
!811 = !DILocation(line: 918, column: 22, scope: !798, inlinedAt: !812)
!812 = !DILocation(line: 1116, column: 9, scope: !760, inlinedAt: !778)
!813 = !DILocalVariable(name: "slot", scope: !814, file: !736, line: 918, type: !773, align: 8)
!814 = !DILexicalBlockFile(scope: !815, file: !736, discriminator: 0)
!815 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hc5114d3bdaf8e8eeE", scope: !773, file: !816, line: 88, type: !817, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !819)
!816 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!817 = !DISubroutineType(types: !818)
!818 = !{!9, !773}
!819 = !{!813}
!820 = !DILocation(line: 918, column: 22, scope: !814, inlinedAt: !821)
!821 = !DILocation(line: 634, column: 13, scope: !799, inlinedAt: !812)
!822 = !DILocation(line: 918, column: 13, scope: !744)
!823 = !DILocation(line: 919, column: 20, scope: !744)
!824 = !DILocation(line: 919, column: 26, scope: !744)
!825 = !DILocation(line: 922, column: 2, scope: !735)
!826 = !DILocation(line: 922, column: 1, scope: !735)
!827 = !DILocation(line: 913, column: 1, scope: !735)
!828 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h47da74691c4ba223E", scope: !428, file: !427, line: 555, type: !829, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !831)
!829 = !DISubroutineType(types: !830)
!830 = !{!360, !9, !9}
!831 = !{!832, !833, !834, !836}
!832 = !DILocalVariable(name: "self", arg: 1, scope: !828, file: !427, line: 555, type: !9)
!833 = !DILocalVariable(name: "rhs", arg: 2, scope: !828, file: !427, line: 555, type: !9)
!834 = !DILocalVariable(name: "a", scope: !835, file: !427, line: 556, type: !9, align: 8)
!835 = distinct !DILexicalBlock(scope: !828, file: !427, line: 556, column: 13)
!836 = !DILocalVariable(name: "b", scope: !835, file: !427, line: 556, type: !535, align: 1)
!837 = !DILocation(line: 555, column: 34, scope: !828)
!838 = !DILocation(line: 555, column: 40, scope: !828)
!839 = !DILocation(line: 556, column: 26, scope: !828)
!840 = !DILocalVariable(name: "self", scope: !841, file: !427, line: 556, type: !9, align: 8)
!841 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hce0beb250bffdecdE", scope: !428, file: !427, line: 1688, type: !842, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !848)
!842 = !DISubroutineType(types: !843)
!843 = !{!844, !9, !9}
!844 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !845, templateParams: !23, identifier: "23309350ccb628a7900e37caa17b1249")
!845 = !{!846, !847}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !844, file: !2, baseType: !9, size: 64, align: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !844, file: !2, baseType: !535, size: 8, align: 8, offset: 64)
!848 = !{!840, !849, !850, !852}
!849 = !DILocalVariable(name: "rhs", scope: !841, file: !427, line: 556, type: !9, align: 8)
!850 = !DILocalVariable(name: "a", scope: !851, file: !427, line: 556, type: !130, align: 8)
!851 = distinct !DILexicalBlock(scope: !841, file: !427, line: 1689, column: 13)
!852 = !DILocalVariable(name: "b", scope: !851, file: !427, line: 556, type: !535, align: 1)
!853 = !DILocation(line: 556, column: 26, scope: !841, inlinedAt: !839)
!854 = !DILocation(line: 556, column: 47, scope: !828)
!855 = !DILocation(line: 556, column: 26, scope: !851, inlinedAt: !839)
!856 = !DILocation(line: 556, column: 18, scope: !828)
!857 = !DILocation(line: 556, column: 18, scope: !835)
!858 = !DILocation(line: 556, column: 21, scope: !828)
!859 = !DILocation(line: 556, column: 21, scope: !835)
!860 = !DILocation(line: 557, column: 16, scope: !835)
!861 = !DILocation(line: 557, column: 42, scope: !835)
!862 = !DILocation(line: 557, column: 13, scope: !835)
!863 = !DILocation(line: 557, column: 30, scope: !835)
!864 = !DILocation(line: 558, column: 10, scope: !828)
!865 = !{i64 0, i64 2}
!866 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17he3358dbf817acd06E", scope: !868, file: !867, line: 248, type: !871, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !877, retainedNodes: !874)
!867 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "3100065230267ed2a3b8753c70d752a6")
!868 = !DINamespace(name: "FnOnce", scope: !869)
!869 = !DINamespace(name: "function", scope: !870)
!870 = !DINamespace(name: "ops", scope: !50)
!871 = !DISubroutineType(types: !872)
!872 = !{!90, !873}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!874 = !{!875, !876}
!875 = !DILocalVariable(arg: 1, scope: !866, file: !867, line: 248, type: !873)
!876 = !DILocalVariable(arg: 2, scope: !866, file: !867, line: 248, type: !7)
!877 = !{!878, !879}
!878 = !DITemplateTypeParameter(name: "Self", type: !14)
!879 = !DITemplateTypeParameter(name: "Args", type: !7)
!880 = !DILocation(line: 248, column: 5, scope: !866)
!881 = distinct !DISubprogram(name: "call_once<fn(&[u8]) -> &core::ffi::c_str::CStr, (&[u8])>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h461c99379196a0a7E", scope: !868, file: !867, line: 248, type: !882, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !887, retainedNodes: !884)
!882 = !DISubroutineType(types: !883)
!883 = !{!455, !472, !467}
!884 = !{!885, !886}
!885 = !DILocalVariable(arg: 1, scope: !881, file: !867, line: 248, type: !472)
!886 = !DILocalVariable(arg: 2, scope: !881, file: !867, line: 248, type: !464)
!887 = !{!888, !889}
!888 = !DITemplateTypeParameter(name: "Self", type: !472)
!889 = !DITemplateTypeParameter(name: "Args", type: !464)
!890 = !DILocation(line: 248, column: 5, scope: !881)
!891 = !{i64 1}
!892 = distinct !DISubprogram(name: "call_once<items_tests::test_varargs::test_simple_vacopy::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h470a16ca416fea68E", scope: !868, file: !867, line: 248, type: !893, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !901, retainedNodes: !898)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !895}
!895 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !896, file: !2, align: 8, elements: !23, identifier: "5fb7b334dfcdd0bbd06f3e5a12bd18be")
!896 = !DINamespace(name: "test_simple_vacopy", scope: !897)
!897 = !DINamespace(name: "test_varargs", scope: !94)
!898 = !{!899, !900}
!899 = !DILocalVariable(arg: 1, scope: !892, file: !867, line: 248, type: !895)
!900 = !DILocalVariable(arg: 2, scope: !892, file: !867, line: 248, type: !7)
!901 = !{!902, !879}
!902 = !DITemplateTypeParameter(name: "Self", type: !895)
!903 = !DILocation(line: 248, column: 5, scope: !892)
!904 = distinct !DISubprogram(name: "call_once<items_tests::test_noop::test_nofnargs::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h5736f6ce427174a2E", scope: !868, file: !867, line: 248, type: !905, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !913, retainedNodes: !910)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !907}
!907 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !908, file: !2, align: 8, elements: !23, identifier: "4ac780d8d42286145f009589bb3091fa")
!908 = !DINamespace(name: "test_nofnargs", scope: !909)
!909 = !DINamespace(name: "test_noop", scope: !94)
!910 = !{!911, !912}
!911 = !DILocalVariable(arg: 1, scope: !904, file: !867, line: 248, type: !907)
!912 = !DILocalVariable(arg: 2, scope: !904, file: !867, line: 248, type: !7)
!913 = !{!914, !879}
!914 = !DITemplateTypeParameter(name: "Self", type: !907)
!915 = !DILocation(line: 248, column: 5, scope: !904)
!916 = distinct !DISubprogram(name: "call_once<items_tests::test_varargs::test_call_printf::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h6214936ae3873b08E", scope: !868, file: !867, line: 248, type: !917, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !924, retainedNodes: !921)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !919}
!919 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !920, file: !2, align: 8, elements: !23, identifier: "4d47db48d937fe96f2cc6c0543ac000e")
!920 = !DINamespace(name: "test_call_printf", scope: !897)
!921 = !{!922, !923}
!922 = !DILocalVariable(arg: 1, scope: !916, file: !867, line: 248, type: !919)
!923 = !DILocalVariable(arg: 2, scope: !916, file: !867, line: 248, type: !7)
!924 = !{!925, !879}
!925 = !DITemplateTypeParameter(name: "Self", type: !919)
!926 = !DILocation(line: 248, column: 5, scope: !916)
!927 = distinct !DISubprogram(name: "call_once<items_tests::test_varargs::test_valist_struct_member::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h77268db247ff65b5E", scope: !868, file: !867, line: 248, type: !928, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !935, retainedNodes: !932)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !930}
!930 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !931, file: !2, align: 8, elements: !23, identifier: "703e1b8b4e869cbec6e7f9260d77baf9")
!931 = !DINamespace(name: "test_valist_struct_member", scope: !897)
!932 = !{!933, !934}
!933 = !DILocalVariable(arg: 1, scope: !927, file: !867, line: 248, type: !930)
!934 = !DILocalVariable(arg: 2, scope: !927, file: !867, line: 248, type: !7)
!935 = !{!936, !879}
!936 = !DITemplateTypeParameter(name: "Self", type: !930)
!937 = !DILocation(line: 248, column: 5, scope: !927)
!938 = distinct !DISubprogram(name: "call_once<items_tests::test_varargs::test_call_vprintf::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h77aa248235f6fc7bE", scope: !868, file: !867, line: 248, type: !939, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !946, retainedNodes: !943)
!939 = !DISubroutineType(types: !940)
!940 = !{null, !941}
!941 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !942, file: !2, align: 8, elements: !23, identifier: "267a4103a38f0043e944b4dff6627be2")
!942 = !DINamespace(name: "test_call_vprintf", scope: !897)
!943 = !{!944, !945}
!944 = !DILocalVariable(arg: 1, scope: !938, file: !867, line: 248, type: !941)
!945 = !DILocalVariable(arg: 2, scope: !938, file: !867, line: 248, type: !7)
!946 = !{!947, !879}
!947 = !DITemplateTypeParameter(name: "Self", type: !941)
!948 = !DILocation(line: 248, column: 5, scope: !938)
!949 = distinct !DISubprogram(name: "call_once<fn(), ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h793ca64f3c1536f2E", scope: !868, file: !867, line: 248, type: !240, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !953, retainedNodes: !950)
!950 = !{!951, !952}
!951 = !DILocalVariable(arg: 1, scope: !949, file: !867, line: 248, type: !20)
!952 = !DILocalVariable(arg: 2, scope: !949, file: !867, line: 248, type: !7)
!953 = !{!954, !879}
!954 = !DITemplateTypeParameter(name: "Self", type: !20)
!955 = !DILocation(line: 248, column: 5, scope: !949)
!956 = distinct !DISubprogram(name: "call_once<items_tests::test_varargs::test_restart_valist::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h861b3bcfb9bac322E", scope: !868, file: !867, line: 248, type: !957, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !964, retainedNodes: !961)
!957 = !DISubroutineType(types: !958)
!958 = !{null, !959}
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !960, file: !2, align: 8, elements: !23, identifier: "c54a161649b336137847d15333063f6")
!960 = !DINamespace(name: "test_restart_valist", scope: !897)
!961 = !{!962, !963}
!962 = !DILocalVariable(arg: 1, scope: !956, file: !867, line: 248, type: !959)
!963 = !DILocalVariable(arg: 2, scope: !956, file: !867, line: 248, type: !7)
!964 = !{!965, !879}
!965 = !DITemplateTypeParameter(name: "Self", type: !959)
!966 = !DILocation(line: 248, column: 5, scope: !956)
!967 = distinct !DISubprogram(name: "call_once<items_tests::test_noop::test_noop::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17ha270832fbeaf6911E", scope: !868, file: !867, line: 248, type: !968, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !975, retainedNodes: !972)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !970}
!970 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !971, file: !2, align: 8, elements: !23, identifier: "b029796c8acce9eb83883d3f1065995b")
!971 = !DINamespace(name: "test_noop", scope: !909)
!972 = !{!973, !974}
!973 = !DILocalVariable(arg: 1, scope: !967, file: !867, line: 248, type: !970)
!974 = !DILocalVariable(arg: 2, scope: !967, file: !867, line: 248, type: !7)
!975 = !{!976, !879}
!976 = !DITemplateTypeParameter(name: "Self", type: !970)
!977 = !DILocation(line: 248, column: 5, scope: !967)
!978 = distinct !DISubprogram(name: "call_once<items_tests::test_functions::test_coreutils_static_assert::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hca7b06276e5a34b4E", scope: !868, file: !867, line: 248, type: !979, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !987, retainedNodes: !984)
!979 = !DISubroutineType(types: !980)
!980 = !{null, !981}
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !982, file: !2, align: 8, elements: !23, identifier: "14dbc9fb717bc044446d42a3212b1953")
!982 = !DINamespace(name: "test_coreutils_static_assert", scope: !983)
!983 = !DINamespace(name: "test_functions", scope: !94)
!984 = !{!985, !986}
!985 = !DILocalVariable(arg: 1, scope: !978, file: !867, line: 248, type: !981)
!986 = !DILocalVariable(arg: 2, scope: !978, file: !867, line: 248, type: !7)
!987 = !{!988, !879}
!988 = !DITemplateTypeParameter(name: "Self", type: !981)
!989 = !DILocation(line: 248, column: 5, scope: !978)
!990 = distinct !DISubprogram(name: "call_once<items_tests::test_linking::test_linking::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hd483a72806981ebcE", scope: !868, file: !867, line: 248, type: !991, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !999, retainedNodes: !996)
!991 = !DISubroutineType(types: !992)
!992 = !{null, !993}
!993 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !994, file: !2, align: 8, elements: !23, identifier: "27f342ea57649443ba41271ecab1df1e")
!994 = !DINamespace(name: "test_linking", scope: !995)
!995 = !DINamespace(name: "test_linking", scope: !94)
!996 = !{!997, !998}
!997 = !DILocalVariable(arg: 1, scope: !990, file: !867, line: 248, type: !993)
!998 = !DILocalVariable(arg: 2, scope: !990, file: !867, line: 248, type: !7)
!999 = !{!1000, !879}
!1000 = !DITemplateTypeParameter(name: "Self", type: !993)
!1001 = !DILocation(line: 248, column: 5, scope: !990)
!1002 = distinct !DISubprogram(name: "call_once<items_tests::test_fn_attrs::test_fn_attrs::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hd56a9f4381f21938E", scope: !868, file: !867, line: 248, type: !1003, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1011, retainedNodes: !1008)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{null, !1005}
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1006, file: !2, align: 8, elements: !23, identifier: "a5a8bf001d9c1a6d9e13f881cbd1ef43")
!1006 = !DINamespace(name: "test_fn_attrs", scope: !1007)
!1007 = !DINamespace(name: "test_fn_attrs", scope: !94)
!1008 = !{!1009, !1010}
!1009 = !DILocalVariable(arg: 1, scope: !1002, file: !867, line: 248, type: !1005)
!1010 = !DILocalVariable(arg: 2, scope: !1002, file: !867, line: 248, type: !7)
!1011 = !{!1012, !879}
!1012 = !DITemplateTypeParameter(name: "Self", type: !1005)
!1013 = !DILocation(line: 248, column: 5, scope: !1002)
!1014 = distinct !DISubprogram(name: "call_once<items_tests::test_varargs::test_my_printf::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hd6c9cf14983b1622E", scope: !868, file: !867, line: 248, type: !1015, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1022, retainedNodes: !1019)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !1017}
!1017 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1018, file: !2, align: 8, elements: !23, identifier: "76a034c462efb4c4429ed043711d81f0")
!1018 = !DINamespace(name: "test_my_printf", scope: !897)
!1019 = !{!1020, !1021}
!1020 = !DILocalVariable(arg: 1, scope: !1014, file: !867, line: 248, type: !1017)
!1021 = !DILocalVariable(arg: 2, scope: !1014, file: !867, line: 248, type: !7)
!1022 = !{!1023, !879}
!1023 = !DITemplateTypeParameter(name: "Self", type: !1017)
!1024 = !DILocation(line: 248, column: 5, scope: !1014)
!1025 = distinct !DISubprogram(name: "call_once<items_tests::test_varargs::test_valist_struct_pointer_member::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hd8abc731315913cdE", scope: !868, file: !867, line: 248, type: !1026, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1033, retainedNodes: !1030)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{null, !1028}
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1029, file: !2, align: 8, elements: !23, identifier: "105b8126c804c2534745ca51813bbb52")
!1029 = !DINamespace(name: "test_valist_struct_pointer_member", scope: !897)
!1030 = !{!1031, !1032}
!1031 = !DILocalVariable(arg: 1, scope: !1025, file: !867, line: 248, type: !1028)
!1032 = !DILocalVariable(arg: 2, scope: !1025, file: !867, line: 248, type: !7)
!1033 = !{!1034, !879}
!1034 = !DITemplateTypeParameter(name: "Self", type: !1028)
!1035 = !DILocation(line: 248, column: 5, scope: !1025)
!1036 = distinct !DISubprogram(name: "call_once<items_tests::test_varargs::test_sample_stddev::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17he9f295bdf9616028E", scope: !868, file: !867, line: 248, type: !1037, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1044, retainedNodes: !1041)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !1039}
!1039 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1040, file: !2, align: 8, elements: !23, identifier: "60691db0e34567af6f7a76b245825f42")
!1040 = !DINamespace(name: "test_sample_stddev", scope: !897)
!1041 = !{!1042, !1043}
!1042 = !DILocalVariable(arg: 1, scope: !1036, file: !867, line: 248, type: !1039)
!1043 = !DILocalVariable(arg: 2, scope: !1036, file: !867, line: 248, type: !7)
!1044 = !{!1045, !879}
!1045 = !DITemplateTypeParameter(name: "Self", type: !1039)
!1046 = !DILocation(line: 248, column: 5, scope: !1036)
!1047 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hf73420e894a2abd6E", scope: !868, file: !867, line: 248, type: !1048, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !877, retainedNodes: !1050)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!90, !14}
!1050 = !{!1051, !1052}
!1051 = !DILocalVariable(arg: 1, scope: !1047, file: !867, line: 248, type: !14)
!1052 = !DILocalVariable(arg: 2, scope: !1047, file: !867, line: 248, type: !7)
!1053 = !DILocation(line: 248, column: 5, scope: !1047)
!1054 = distinct !DISubprogram(name: "drop_in_place<&f64>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$f64$GT$17h6a3355b55063efb7E", scope: !49, file: !750, line: 487, type: !1055, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1060, retainedNodes: !1058)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !1057}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &f64", baseType: !79, size: 64, align: 64, dwarfAddressSpace: 0)
!1058 = !{!1059}
!1059 = !DILocalVariable(arg: 1, scope: !1054, file: !750, line: 487, type: !1057)
!1060 = !{!1061}
!1061 = !DITemplateTypeParameter(name: "T", type: !79)
!1062 = !DILocation(line: 487, column: 1, scope: !1054)
!1063 = distinct !DISubprogram(name: "drop_in_place<&i32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h7a6644d12aade1d6E", scope: !49, file: !750, line: 487, type: !1064, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1069, retainedNodes: !1067)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{null, !1066}
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &i32", baseType: !89, size: 64, align: 64, dwarfAddressSpace: 0)
!1067 = !{!1068}
!1068 = !DILocalVariable(arg: 1, scope: !1063, file: !750, line: 487, type: !1066)
!1069 = !{!1070}
!1070 = !DITemplateTypeParameter(name: "T", type: !89)
!1071 = !DILocation(line: 487, column: 1, scope: !1063)
!1072 = distinct !DISubprogram(name: "drop_in_place<core::ffi::VaListImpl>", linkageName: "_ZN4core3ptr42drop_in_place$LT$core..ffi..VaListImpl$GT$17h3a1e24ff022acba3E", scope: !49, file: !750, line: 487, type: !1073, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1078, retainedNodes: !1076)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{null, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::ffi::VaListImpl", baseType: !546, size: 64, align: 64, dwarfAddressSpace: 0)
!1076 = !{!1077}
!1077 = !DILocalVariable(arg: 1, scope: !1072, file: !750, line: 487, type: !1075)
!1078 = !{!1079}
!1079 = !DITemplateTypeParameter(name: "T", type: !546)
!1080 = !DILocation(line: 487, column: 1, scope: !1072)
!1081 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hb51816728a6c9bbcE", scope: !49, file: !750, line: 487, type: !1082, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1087, retainedNodes: !1085)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{null, !1084}
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!1085 = !{!1086}
!1086 = !DILocalVariable(arg: 1, scope: !1081, file: !750, line: 487, type: !1084)
!1087 = !{!1088}
!1088 = !DITemplateTypeParameter(name: "T", type: !39)
!1089 = !DILocation(line: 487, column: 1, scope: !1081)
!1090 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17h5cc2bd7e561e5645E", scope: !49, file: !750, line: 487, type: !1091, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1103, retainedNodes: !1101)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{null, !1093}
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::CString", baseType: !1094, size: 64, align: 64, dwarfAddressSpace: 0)
!1094 = !DICompositeType(tag: DW_TAG_structure_type, name: "CString", scope: !33, file: !2, size: 128, align: 64, elements: !1095, templateParams: !23, identifier: "a4dcbb113228472ac833458ca2f5ee8d")
!1095 = !{!1096}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1094, file: !2, baseType: !1097, size: 128, align: 64)
!1097 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u8], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !1098, templateParams: !23, identifier: "e783b0825321c11fc908377d145707b4")
!1098 = !{!1099, !1100}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1097, file: !2, baseType: !470, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1097, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1101 = !{!1102}
!1102 = !DILocalVariable(arg: 1, scope: !1090, file: !750, line: 487, type: !1093)
!1103 = !{!1104}
!1104 = !DITemplateTypeParameter(name: "T", type: !1094)
!1105 = !DILocation(line: 487, column: 1, scope: !1090)
!1106 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::NulError>", linkageName: "_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17hd06c3484267b3946E", scope: !49, file: !750, line: 487, type: !1107, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1112, retainedNodes: !1110)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !1109}
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::NulError", baseType: !32, size: 64, align: 64, dwarfAddressSpace: 0)
!1110 = !{!1111}
!1111 = !DILocalVariable(arg: 1, scope: !1106, file: !750, line: 487, type: !1109)
!1112 = !{!1113}
!1113 = !DITemplateTypeParameter(name: "T", type: !32)
!1114 = !DILocation(line: 487, column: 1, scope: !1106)
!1115 = distinct !DISubprogram(name: "drop_in_place<items_tests::varargs::vastruct>", linkageName: "_ZN4core3ptr51drop_in_place$LT$items_tests..varargs..vastruct$GT$17h657f85b8ecbacd36E", scope: !49, file: !750, line: 487, type: !1116, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1125, retainedNodes: !1123)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !1118}
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut items_tests::varargs::vastruct", baseType: !1119, size: 64, align: 64, dwarfAddressSpace: 0)
!1119 = !DICompositeType(tag: DW_TAG_structure_type, name: "vastruct", scope: !1120, file: !2, size: 192, align: 64, elements: !1121, templateParams: !23, identifier: "c6afef22cd506f476702a8ba0d3d497d")
!1120 = !DINamespace(name: "varargs", scope: !94)
!1121 = !{!1122}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1119, file: !2, baseType: !546, size: 192, align: 64)
!1123 = !{!1124}
!1124 = !DILocalVariable(arg: 1, scope: !1115, file: !750, line: 487, type: !1118)
!1125 = !{!1126}
!1126 = !DITemplateTypeParameter(name: "T", type: !1119)
!1127 = !DILocation(line: 487, column: 1, scope: !1115)
!1128 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17ha323cba6f3d73791E", scope: !49, file: !750, line: 487, type: !1129, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1134, retainedNodes: !1132)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{null, !1131}
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !43, size: 64, align: 64, dwarfAddressSpace: 0)
!1132 = !{!1133}
!1133 = !DILocalVariable(arg: 1, scope: !1128, file: !750, line: 487, type: !1131)
!1134 = !{!1135}
!1135 = !DITemplateTypeParameter(name: "T", type: !43)
!1136 = !DILocation(line: 487, column: 1, scope: !1128)
!1137 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h02185211e6a35737E", scope: !49, file: !750, line: 487, type: !1138, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1143, retainedNodes: !1141)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{null, !1140}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !1097, size: 64, align: 64, dwarfAddressSpace: 0)
!1141 = !{!1142}
!1142 = !DILocalVariable(arg: 1, scope: !1137, file: !750, line: 487, type: !1140)
!1143 = !{!1144}
!1144 = !DITemplateTypeParameter(name: "T", type: !1097)
!1145 = !DILocation(line: 487, column: 1, scope: !1137)
!1146 = distinct !DISubprogram(name: "drop_in_place<std::rt::lang_start::{closure_env#0}<()>>", linkageName: "_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5d703a7dbb78ea20E", scope: !49, file: !750, line: 487, type: !1147, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1151, retainedNodes: !1149)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{null, !873}
!1149 = !{!1150}
!1150 = !DILocalVariable(arg: 1, scope: !1146, file: !750, line: 487, type: !873)
!1151 = !{!1152}
!1152 = !DITemplateTypeParameter(name: "T", type: !14)
!1153 = !DILocation(line: 487, column: 1, scope: !1146)
!1154 = distinct !DISubprogram(name: "next_code_point<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations15next_code_point17h648e628bdbab7c31E", scope: !1156, file: !1155, line: 36, type: !1158, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1220, retainedNodes: !1184)
!1155 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/validations.rs", directory: "", checksumkind: CSK_MD5, checksum: "013ffea566228bd192f2b387ca5fa2c0")
!1156 = !DINamespace(name: "validations", scope: !1157)
!1157 = !DINamespace(name: "str", scope: !50)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!1160, !1173}
!1160 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !361, file: !2, size: 64, align: 32, elements: !1161, templateParams: !23, identifier: "433c36b652ea33482ffe8be57ab7893")
!1161 = !{!1162}
!1162 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1160, file: !2, size: 64, align: 32, elements: !1163, templateParams: !23, identifier: "e01b299968261779c422a7e1febecddf", discriminator: !1172)
!1163 = !{!1164, !1168}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1162, file: !2, baseType: !1165, size: 64, align: 32, extraData: i64 0)
!1165 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1160, file: !2, size: 64, align: 32, elements: !23, templateParams: !1166, identifier: "8b9fb7e5d8df9aebeeccf870281c03a8")
!1166 = !{!1167}
!1167 = !DITemplateTypeParameter(name: "T", type: !355)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1162, file: !2, baseType: !1169, size: 64, align: 32, extraData: i64 1)
!1169 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1160, file: !2, size: 64, align: 32, elements: !1170, templateParams: !1166, identifier: "4b24779e750ae7c21f70b77320a16b9")
!1170 = !{!1171}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1169, file: !2, baseType: !355, size: 32, align: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, scope: !1160, file: !2, baseType: !355, size: 32, align: 32, flags: DIFlagArtificial)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !1174, size: 64, align: 64, dwarfAddressSpace: 0)
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !1175, file: !2, size: 128, align: 64, elements: !1176, templateParams: !59, identifier: "604c1441eac6ad793aa852936f7a8030")
!1175 = !DINamespace(name: "iter", scope: !615)
!1176 = !{!1177, !1178, !1179}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1174, file: !2, baseType: !53, size: 64, align: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1174, file: !2, baseType: !57, size: 64, align: 64, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1174, file: !2, baseType: !1180, align: 8)
!1180 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !63, file: !2, align: 8, elements: !23, templateParams: !1181, identifier: "4e2102ee614de7ec94ba265c486b9c89")
!1181 = !{!1182}
!1182 = !DITemplateTypeParameter(name: "T", type: !1183)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !58, size: 64, align: 64, dwarfAddressSpace: 0)
!1184 = !{!1185, !1186, !1188, !1206, !1208, !1210, !1212, !1214, !1216, !1218}
!1185 = !DILocalVariable(name: "bytes", arg: 1, scope: !1154, file: !1155, line: 36, type: !1173)
!1186 = !DILocalVariable(name: "x", scope: !1187, file: !1155, line: 38, type: !58, align: 1)
!1187 = distinct !DILexicalBlock(scope: !1154, file: !1155, line: 38, column: 5)
!1188 = !DILocalVariable(name: "residual", scope: !1189, file: !1155, line: 38, type: !1190, align: 1)
!1189 = distinct !DILexicalBlock(scope: !1154, file: !1155, line: 38, column: 26)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !361, file: !2, align: 8, elements: !1191, templateParams: !23, identifier: "d8a1490c995f47139381e35a5e6e5cdb")
!1191 = !{!1192}
!1192 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1190, file: !2, align: 8, elements: !1193, templateParams: !23, identifier: "9b62236bada376e41df23b6f70477fcc")
!1193 = !{!1194, !1202}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1192, file: !2, baseType: !1195, align: 8)
!1195 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1190, file: !2, align: 8, elements: !23, templateParams: !1196, identifier: "6887a830e9518178209fc3c61f1ca37d")
!1196 = !{!1197}
!1197 = !DITemplateTypeParameter(name: "T", type: !1198)
!1198 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !1199, file: !2, align: 8, elements: !1200, templateParams: !23, identifier: "54da939063c7c2baf203c9f582cd0995")
!1199 = !DINamespace(name: "convert", scope: !50)
!1200 = !{!1201}
!1201 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1198, file: !2, align: 8, elements: !23, identifier: "8a046f69014feadb4a5e941e4277afe9")
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1192, file: !2, baseType: !1203, align: 8)
!1203 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1190, file: !2, align: 8, elements: !1204, templateParams: !1196, identifier: "57c813c1928930715dbbb4312e4c0fa4")
!1204 = !{!1205}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1203, file: !2, baseType: !1198, align: 8)
!1206 = !DILocalVariable(name: "val", scope: !1207, file: !1155, line: 38, type: !1183, align: 8)
!1207 = distinct !DILexicalBlock(scope: !1154, file: !1155, line: 38, column: 14)
!1208 = !DILocalVariable(name: "init", scope: !1209, file: !1155, line: 46, type: !355, align: 4)
!1209 = distinct !DILexicalBlock(scope: !1187, file: !1155, line: 46, column: 5)
!1210 = !DILocalVariable(name: "y", scope: !1211, file: !1155, line: 49, type: !58, align: 1)
!1211 = distinct !DILexicalBlock(scope: !1209, file: !1155, line: 49, column: 5)
!1212 = !DILocalVariable(name: "ch", scope: !1213, file: !1155, line: 50, type: !355, align: 4)
!1213 = distinct !DILexicalBlock(scope: !1211, file: !1155, line: 50, column: 5)
!1214 = !DILocalVariable(name: "z", scope: !1215, file: !1155, line: 56, type: !58, align: 1)
!1215 = distinct !DILexicalBlock(scope: !1213, file: !1155, line: 56, column: 9)
!1216 = !DILocalVariable(name: "y_z", scope: !1217, file: !1155, line: 57, type: !355, align: 4)
!1217 = distinct !DILexicalBlock(scope: !1215, file: !1155, line: 57, column: 9)
!1218 = !DILocalVariable(name: "w", scope: !1219, file: !1155, line: 64, type: !58, align: 1)
!1219 = distinct !DILexicalBlock(scope: !1217, file: !1155, line: 64, column: 13)
!1220 = !{!1221}
!1221 = !DITemplateTypeParameter(name: "I", type: !1174)
!1222 = !DILocation(line: 36, column: 63, scope: !1154)
!1223 = !DILocalVariable(name: "self", scope: !1224, file: !1155, line: 38, type: !1247, align: 8)
!1224 = !DILexicalBlockFile(scope: !1225, file: !1155, discriminator: 0)
!1225 = distinct !DISubprogram(name: "branch<&u8>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h73524cc2790c574fE", scope: !1227, file: !1226, line: 2290, type: !1228, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1181, retainedNodes: !1258)
!1226 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!1227 = !DINamespace(name: "{impl#35}", scope: !361)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!1230, !1247}
!1230 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &u8>", scope: !1231, file: !2, size: 64, align: 64, elements: !1232, templateParams: !23, identifier: "513888bfaba291a24cedecefd1c8f3cf")
!1231 = !DINamespace(name: "control_flow", scope: !870)
!1232 = !{!1233}
!1233 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1230, file: !2, size: 64, align: 64, elements: !1234, templateParams: !23, identifier: "19071d1d694b54b173e59457b654fa28", discriminator: !1246)
!1234 = !{!1235, !1242}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1233, file: !2, baseType: !1236, size: 64, align: 64)
!1236 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1230, file: !2, size: 64, align: 64, elements: !1237, templateParams: !1239, identifier: "ce047414cf5b82ac3c74a44d9cbde4e7")
!1237 = !{!1238}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1236, file: !2, baseType: !1183, size: 64, align: 64)
!1239 = !{!1240, !1241}
!1240 = !DITemplateTypeParameter(name: "B", type: !1190)
!1241 = !DITemplateTypeParameter(name: "C", type: !1183)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1233, file: !2, baseType: !1243, size: 64, align: 64, extraData: i64 0)
!1243 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1230, file: !2, size: 64, align: 64, elements: !1244, templateParams: !1239, identifier: "4460a790e4a683cf8d29a30157ff54e5")
!1244 = !{!1245}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1243, file: !2, baseType: !1190, align: 8)
!1246 = !DIDerivedType(tag: DW_TAG_member, scope: !1230, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!1247 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u8>", scope: !361, file: !2, size: 64, align: 64, elements: !1248, templateParams: !23, identifier: "bbf278434900ebc767cf4d1ba91a7023")
!1248 = !{!1249}
!1249 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1247, file: !2, size: 64, align: 64, elements: !1250, templateParams: !23, identifier: "101fb69dcd65b49303b4d10b55dcffb", discriminator: !1257)
!1250 = !{!1251, !1253}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1249, file: !2, baseType: !1252, size: 64, align: 64, extraData: i64 0)
!1252 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1247, file: !2, size: 64, align: 64, elements: !23, templateParams: !1181, identifier: "bd32561e41222bd8701ecbec194b1aa7")
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1249, file: !2, baseType: !1254, size: 64, align: 64)
!1254 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1247, file: !2, size: 64, align: 64, elements: !1255, templateParams: !1181, identifier: "728806a049c182f2a5c33d7fd0303de1")
!1255 = !{!1256}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1254, file: !2, baseType: !1183, size: 64, align: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, scope: !1247, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!1258 = !{!1223, !1259}
!1259 = !DILocalVariable(name: "v", scope: !1260, file: !1155, line: 38, type: !1183, align: 8)
!1260 = !DILexicalBlockFile(scope: !1261, file: !1155, discriminator: 0)
!1261 = distinct !DILexicalBlock(scope: !1225, file: !1226, line: 2292, column: 13)
!1262 = !DILocation(line: 38, column: 14, scope: !1224, inlinedAt: !1263)
!1263 = !DILocation(line: 38, column: 14, scope: !1154)
!1264 = !DILocation(line: 38, column: 26, scope: !1189)
!1265 = !DILocalVariable(name: "residual", scope: !1266, file: !1155, line: 38, type: !1190, align: 1)
!1266 = !DILexicalBlockFile(scope: !1267, file: !1155, discriminator: 0)
!1267 = distinct !DISubprogram(name: "from_residual<u32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hdd8c4e2a25e732bbE", scope: !1268, file: !1226, line: 2302, type: !1269, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1166, retainedNodes: !1271)
!1268 = !DINamespace(name: "{impl#36}", scope: !361)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!1160, !1190}
!1271 = !{!1265}
!1272 = !DILocation(line: 38, column: 14, scope: !1266, inlinedAt: !1273)
!1273 = !DILocation(line: 38, column: 14, scope: !1189)
!1274 = !DILocalVariable(name: "self", scope: !1275, file: !1155, line: 49, type: !1247, align: 8)
!1275 = !DILexicalBlockFile(scope: !1276, file: !1155, discriminator: 0)
!1276 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8cc2a9678d128a72E", scope: !1247, file: !1226, line: 892, type: !1277, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1181, retainedNodes: !1279)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!1183, !1247, !802}
!1279 = !{!1274, !1280}
!1280 = !DILocalVariable(name: "val", scope: !1281, file: !1155, line: 49, type: !1183, align: 8)
!1281 = !DILexicalBlockFile(scope: !1282, file: !1155, discriminator: 0)
!1282 = distinct !DILexicalBlock(scope: !1276, file: !1226, line: 895, column: 13)
!1283 = !DILocation(line: 49, column: 23, scope: !1275, inlinedAt: !1284)
!1284 = !DILocation(line: 49, column: 23, scope: !1209)
!1285 = !DILocation(line: 50, column: 9, scope: !1213)
!1286 = !DILocalVariable(name: "self", scope: !1287, file: !1155, line: 56, type: !1247, align: 8)
!1287 = !DILexicalBlockFile(scope: !1288, file: !1155, discriminator: 0)
!1288 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8cc2a9678d128a72E", scope: !1247, file: !1226, line: 892, type: !1277, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1181, retainedNodes: !1289)
!1289 = !{!1286, !1290}
!1290 = !DILocalVariable(name: "val", scope: !1291, file: !1155, line: 56, type: !1183, align: 8)
!1291 = !DILexicalBlockFile(scope: !1292, file: !1155, discriminator: 0)
!1292 = distinct !DILexicalBlock(scope: !1288, file: !1226, line: 895, column: 13)
!1293 = !DILocation(line: 56, column: 27, scope: !1287, inlinedAt: !1294)
!1294 = !DILocation(line: 56, column: 27, scope: !1213)
!1295 = !DILocalVariable(name: "self", scope: !1296, file: !1155, line: 64, type: !1247, align: 8)
!1296 = !DILexicalBlockFile(scope: !1297, file: !1155, discriminator: 0)
!1297 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8cc2a9678d128a72E", scope: !1247, file: !1226, line: 892, type: !1277, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1181, retainedNodes: !1298)
!1298 = !{!1295, !1299}
!1299 = !DILocalVariable(name: "val", scope: !1300, file: !1155, line: 64, type: !1183, align: 8)
!1300 = !DILexicalBlockFile(scope: !1301, file: !1155, discriminator: 0)
!1301 = distinct !DILexicalBlock(scope: !1297, file: !1226, line: 895, column: 13)
!1302 = !DILocation(line: 64, column: 31, scope: !1296, inlinedAt: !1303)
!1303 = !DILocation(line: 64, column: 31, scope: !1217)
!1304 = !DILocation(line: 38, column: 14, scope: !1260, inlinedAt: !1263)
!1305 = !DILocation(line: 38, column: 14, scope: !1207)
!1306 = !DILocation(line: 38, column: 13, scope: !1154)
!1307 = !DILocation(line: 38, column: 9, scope: !1187)
!1308 = !DILocation(line: 39, column: 8, scope: !1187)
!1309 = !DILocation(line: 1, column: 1, scope: !1310)
!1310 = !DILexicalBlockFile(scope: !1154, file: !1311, discriminator: 0)
!1311 = !DIFile(filename: "src/lib.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "03913e3da8462adf9d635addd8a17d0b")
!1312 = !DILocation(line: 70, column: 2, scope: !1154)
!1313 = !DILocation(line: 46, column: 32, scope: !1187)
!1314 = !DILocalVariable(name: "byte", scope: !1315, file: !1155, line: 46, type: !58, align: 1)
!1315 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h745a2cde03e35cfdE", scope: !1156, file: !1155, line: 11, type: !1316, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1318)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!355, !58, !355}
!1318 = !{!1314, !1319}
!1319 = !DILocalVariable(name: "width", scope: !1315, file: !1155, line: 46, type: !355, align: 4)
!1320 = !DILocation(line: 46, column: 16, scope: !1315, inlinedAt: !1321)
!1321 = !DILocation(line: 46, column: 16, scope: !1187)
!1322 = !DILocation(line: 46, column: 9, scope: !1209)
!1323 = !DILocation(line: 40, column: 21, scope: !1187)
!1324 = !DILocation(line: 40, column: 16, scope: !1187)
!1325 = !DILocation(line: 1, column: 1, scope: !1326)
!1326 = !DILexicalBlockFile(scope: !1187, file: !1311, discriminator: 0)
!1327 = !{i32 0, i32 2}
!1328 = !DILocation(line: 49, column: 23, scope: !1329, inlinedAt: !1331)
!1329 = !DILexicalBlockFile(scope: !1330, file: !1155, discriminator: 0)
!1330 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17he21db96909370eb9E", scope: !255, file: !254, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!1331 = !DILocation(line: 897, column: 30, scope: !1276, inlinedAt: !1284)
!1332 = !DILocation(line: 49, column: 23, scope: !1281, inlinedAt: !1284)
!1333 = !DILocation(line: 49, column: 22, scope: !1209)
!1334 = !DILocation(line: 49, column: 9, scope: !1211)
!1335 = !DILocation(line: 50, column: 37, scope: !1211)
!1336 = !DILocalVariable(name: "ch", scope: !1337, file: !1155, line: 50, type: !355, align: 4)
!1337 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h87bcf1571a9944b7E", scope: !1156, file: !1155, line: 17, type: !1338, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1340)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!355, !355, !58}
!1340 = !{!1336, !1341}
!1341 = !DILocalVariable(name: "byte", scope: !1337, file: !1155, line: 50, type: !58, align: 1)
!1342 = !DILocation(line: 50, column: 18, scope: !1337, inlinedAt: !1343)
!1343 = !DILocation(line: 50, column: 18, scope: !1211)
!1344 = !DILocation(line: 50, column: 43, scope: !1211)
!1345 = !DILocation(line: 51, column: 8, scope: !1213)
!1346 = !DILocation(line: 69, column: 10, scope: !1213)
!1347 = !DILocation(line: 69, column: 5, scope: !1213)
!1348 = !DILocation(line: 56, column: 27, scope: !1349, inlinedAt: !1351)
!1349 = !DILexicalBlockFile(scope: !1350, file: !1155, discriminator: 0)
!1350 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17he21db96909370eb9E", scope: !255, file: !254, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!1351 = !DILocation(line: 897, column: 30, scope: !1288, inlinedAt: !1294)
!1352 = !DILocation(line: 56, column: 27, scope: !1291, inlinedAt: !1294)
!1353 = !DILocation(line: 56, column: 26, scope: !1213)
!1354 = !DILocation(line: 56, column: 13, scope: !1215)
!1355 = !DILocation(line: 57, column: 38, scope: !1215)
!1356 = !DILocalVariable(name: "ch", scope: !1357, file: !1155, line: 57, type: !355, align: 4)
!1357 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h87bcf1571a9944b7E", scope: !1156, file: !1155, line: 17, type: !1338, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1358)
!1358 = !{!1356, !1359}
!1359 = !DILocalVariable(name: "byte", scope: !1357, file: !1155, line: 57, type: !58, align: 1)
!1360 = !DILocation(line: 57, column: 19, scope: !1357, inlinedAt: !1361)
!1361 = !DILocation(line: 57, column: 19, scope: !1215)
!1362 = !DILocation(line: 57, column: 62, scope: !1215)
!1363 = !DILocation(line: 57, column: 13, scope: !1217)
!1364 = !DILocation(line: 58, column: 14, scope: !1217)
!1365 = !DILocation(line: 58, column: 9, scope: !1217)
!1366 = !DILocation(line: 59, column: 12, scope: !1217)
!1367 = !DILocation(line: 51, column: 5, scope: !1213)
!1368 = !DILocation(line: 64, column: 31, scope: !1369, inlinedAt: !1371)
!1369 = !DILexicalBlockFile(scope: !1370, file: !1155, discriminator: 0)
!1370 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17he21db96909370eb9E", scope: !255, file: !254, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!1371 = !DILocation(line: 897, column: 30, scope: !1297, inlinedAt: !1303)
!1372 = !DILocation(line: 64, column: 31, scope: !1300, inlinedAt: !1303)
!1373 = !DILocation(line: 64, column: 30, scope: !1217)
!1374 = !DILocation(line: 64, column: 17, scope: !1219)
!1375 = !DILocation(line: 65, column: 18, scope: !1219)
!1376 = !DILocation(line: 65, column: 56, scope: !1219)
!1377 = !DILocalVariable(name: "ch", scope: !1378, file: !1155, line: 65, type: !355, align: 4)
!1378 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h87bcf1571a9944b7E", scope: !1156, file: !1155, line: 17, type: !1338, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1379)
!1379 = !{!1377, !1380}
!1380 = !DILocalVariable(name: "byte", scope: !1378, file: !1155, line: 65, type: !58, align: 1)
!1381 = !DILocation(line: 65, column: 37, scope: !1378, inlinedAt: !1382)
!1382 = !DILocation(line: 65, column: 37, scope: !1219)
!1383 = !DILocation(line: 65, column: 61, scope: !1219)
!1384 = !DILocation(line: 65, column: 13, scope: !1219)
!1385 = !DILocation(line: 59, column: 9, scope: !1217)
!1386 = distinct !DISubprogram(name: "is_char_boundary", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hbd67d1e56763f3f2E", scope: !1388, file: !1387, line: 209, type: !1389, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1391)
!1387 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd49fcee40af5f348df1f9868b20cc92")
!1388 = !DINamespace(name: "{impl#0}", scope: !1157)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!535, !655, !9}
!1391 = !{!1392, !1393, !1394}
!1392 = !DILocalVariable(name: "self", arg: 1, scope: !1386, file: !1387, line: 209, type: !655)
!1393 = !DILocalVariable(name: "index", arg: 2, scope: !1386, file: !1387, line: 209, type: !9)
!1394 = !DILocalVariable(name: "b", scope: !1395, file: !1387, line: 230, type: !58, align: 1)
!1395 = distinct !DILexicalBlock(scope: !1386, file: !1387, line: 230, column: 13)
!1396 = !DILocation(line: 209, column: 35, scope: !1386)
!1397 = !DILocation(line: 209, column: 42, scope: !1386)
!1398 = !DILocation(line: 214, column: 12, scope: !1386)
!1399 = !DILocation(line: 215, column: 20, scope: !1386)
!1400 = !DILocation(line: 232, column: 6, scope: !1386)
!1401 = !DILocation(line: 218, column: 15, scope: !1386)
!1402 = !DILocalVariable(name: "self", scope: !1403, file: !1387, line: 218, type: !655, align: 8)
!1403 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1406)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!467, !655}
!1406 = !{!1402}
!1407 = !DILocation(line: 218, column: 15, scope: !1403, inlinedAt: !1401)
!1408 = !DILocalVariable(name: "self", scope: !1409, file: !1387, line: 218, type: !467, align: 8)
!1409 = !DILexicalBlockFile(scope: !1410, file: !1387, discriminator: 0)
!1410 = distinct !DISubprogram(name: "get<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hdd0e7cae5d8dae14E", scope: !614, file: !613, line: 339, type: !1411, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1415, retainedNodes: !1413)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!1247, !467, !9}
!1413 = !{!1408, !1414}
!1414 = !DILocalVariable(name: "index", scope: !1409, file: !1387, line: 218, type: !9, align: 8)
!1415 = !{!60, !1416}
!1416 = !DITemplateTypeParameter(name: "I", type: !9)
!1417 = !DILocation(line: 218, column: 15, scope: !1409, inlinedAt: !1401)
!1418 = !DILocation(line: 218, column: 35, scope: !1386)
!1419 = !DILocation(line: 218, column: 9, scope: !1386)
!1420 = !DILocation(line: 228, column: 30, scope: !1386)
!1421 = !DILocalVariable(name: "self", scope: !1422, file: !1387, line: 228, type: !655, align: 8)
!1422 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hcee4a7cd50fba731E", scope: !1388, file: !1387, line: 157, type: !1423, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1425)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!9, !655}
!1425 = !{!1421}
!1426 = !DILocation(line: 228, column: 30, scope: !1422, inlinedAt: !1420)
!1427 = !DILocalVariable(name: "self", scope: !1428, file: !1387, line: 228, type: !655, align: 8)
!1428 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1429)
!1429 = !{!1427}
!1430 = !DILocation(line: 228, column: 30, scope: !1428, inlinedAt: !1431)
!1431 = !DILocation(line: 158, column: 9, scope: !1422, inlinedAt: !1420)
!1432 = !DILocation(line: 230, column: 19, scope: !1386)
!1433 = !DILocation(line: 230, column: 19, scope: !1395)
!1434 = !DILocation(line: 230, column: 25, scope: !1395)
!1435 = !DILocalVariable(name: "self", scope: !1436, file: !1387, line: 230, type: !58, align: 1)
!1436 = !DILexicalBlockFile(scope: !1437, file: !1387, discriminator: 0)
!1437 = distinct !DISubprogram(name: "is_utf8_char_boundary", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17h7c2ed9e99727bf85E", scope: !1439, file: !1438, line: 808, type: !1440, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1442)
!1438 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "47905c39e2d032306951817cfe39b065")
!1439 = !DINamespace(name: "{impl#6}", scope: !429)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!535, !58}
!1442 = !{!1435}
!1443 = !DILocation(line: 230, column: 25, scope: !1436, inlinedAt: !1434)
!1444 = !DILocation(line: 230, column: 49, scope: !1386)
!1445 = !DILocation(line: 228, column: 21, scope: !1386)
!1446 = !DILocation(line: 228, column: 39, scope: !1386)
!1447 = distinct !DISubprogram(name: "contains<&str>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8contains17hfeac4b08dc6955fbE", scope: !1388, file: !1387, line: 1054, type: !1448, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1453, retainedNodes: !1450)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!535, !655, !655}
!1450 = !{!1451, !1452}
!1451 = !DILocalVariable(name: "self", arg: 1, scope: !1447, file: !1387, line: 1054, type: !655)
!1452 = !DILocalVariable(name: "pat", arg: 2, scope: !1447, file: !1387, line: 1054, type: !655)
!1453 = !{!1454}
!1454 = !DITemplateTypeParameter(name: "P", type: !655)
!1455 = !DILocation(line: 1054, column: 41, scope: !1447)
!1456 = !DILocation(line: 1054, column: 51, scope: !1447)
!1457 = !DILocation(line: 1055, column: 9, scope: !1447)
!1458 = !DILocation(line: 1056, column: 6, scope: !1447)
!1459 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h80a97136f9aa87bfE", scope: !1461, file: !1460, line: 349, type: !1463, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1475)
!1460 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "fe011983167a64afa5cd9b7538fc9cef")
!1461 = !DINamespace(name: "{impl#9}", scope: !1462)
!1462 = !DINamespace(name: "traits", scope: !1157)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!1465, !1469, !1465}
!1465 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 128, align: 64, elements: !1466, templateParams: !23, identifier: "c0e5994a8e99afccd68a87827900070")
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1465, file: !2, baseType: !470, size: 64, align: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1465, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1469 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !1470, file: !2, size: 64, align: 64, elements: !1471, templateParams: !1473, identifier: "a58758f4d6a6e1468075e24121943e64")
!1470 = !DINamespace(name: "range", scope: !870)
!1471 = !{!1472}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1469, file: !2, baseType: !9, size: 64, align: 64)
!1473 = !{!1474}
!1474 = !DITemplateTypeParameter(name: "Idx", type: !9)
!1475 = !{!1476, !1477, !1478, !1484, !1486}
!1476 = !DILocalVariable(name: "self", arg: 1, scope: !1459, file: !1460, line: 349, type: !1469)
!1477 = !DILocalVariable(name: "slice", arg: 2, scope: !1459, file: !1460, line: 349, type: !1465)
!1478 = !DILocalVariable(name: "slice", scope: !1479, file: !1460, line: 350, type: !1480, align: 8)
!1479 = distinct !DILexicalBlock(scope: !1459, file: !1460, line: 350, column: 9)
!1480 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !1481, templateParams: !23, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!1481 = !{!1482, !1483}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1480, file: !2, baseType: !470, size: 64, align: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1480, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1484 = !DILocalVariable(name: "ptr", scope: !1485, file: !1460, line: 353, type: !57, align: 8)
!1485 = distinct !DILexicalBlock(scope: !1479, file: !1460, line: 353, column: 9)
!1486 = !DILocalVariable(name: "len", scope: !1487, file: !1460, line: 354, type: !9, align: 8)
!1487 = distinct !DILexicalBlock(scope: !1485, file: !1460, line: 354, column: 9)
!1488 = !DILocation(line: 349, column: 29, scope: !1459)
!1489 = !DILocation(line: 349, column: 35, scope: !1459)
!1490 = !DILocation(line: 350, column: 21, scope: !1459)
!1491 = !DILocation(line: 350, column: 13, scope: !1479)
!1492 = !DILocation(line: 353, column: 28, scope: !1479)
!1493 = !DILocalVariable(name: "self", scope: !1494, file: !1460, line: 353, type: !1480, align: 8)
!1494 = !DILexicalBlockFile(scope: !1495, file: !1460, discriminator: 0)
!1495 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1feaa2db29be430dE", scope: !1497, file: !1496, line: 1385, type: !1499, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !1501)
!1496 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!1497 = !DINamespace(name: "{impl#1}", scope: !1498)
!1498 = !DINamespace(name: "const_ptr", scope: !49)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!57, !1480}
!1501 = !{!1493}
!1502 = !DILocation(line: 353, column: 28, scope: !1494, inlinedAt: !1492)
!1503 = !DILocalVariable(name: "self", scope: !1504, file: !1460, line: 353, type: !57, align: 8)
!1504 = !DILexicalBlockFile(scope: !1505, file: !1460, discriminator: 0)
!1505 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hb58537a3bc3f7b0fE", scope: !1506, file: !1496, line: 871, type: !1507, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !1509)
!1506 = !DINamespace(name: "{impl#0}", scope: !1498)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!57, !57, !9}
!1509 = !{!1503, !1510}
!1510 = !DILocalVariable(name: "count", scope: !1504, file: !1460, line: 353, type: !9, align: 8)
!1511 = !DILocation(line: 353, column: 28, scope: !1504, inlinedAt: !1492)
!1512 = !DILocation(line: 353, column: 47, scope: !1479)
!1513 = !DILocalVariable(name: "self", scope: !1514, file: !1460, line: 353, type: !57, align: 8)
!1514 = !DILexicalBlockFile(scope: !1515, file: !1460, discriminator: 0)
!1515 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0b2cc25750513e46E", scope: !1506, file: !1496, line: 453, type: !1516, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !1518)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!57, !57, !271}
!1518 = !{!1513, !1519}
!1519 = !DILocalVariable(name: "count", scope: !1514, file: !1460, line: 353, type: !271, align: 8)
!1520 = !DILocation(line: 353, column: 28, scope: !1514, inlinedAt: !1521)
!1521 = !DILocation(line: 876, column: 18, scope: !1505, inlinedAt: !1492)
!1522 = !DILocation(line: 353, column: 13, scope: !1485)
!1523 = !DILocation(line: 354, column: 19, scope: !1485)
!1524 = !DILocalVariable(name: "self", scope: !1525, file: !1460, line: 354, type: !1480, align: 8)
!1525 = !DILexicalBlockFile(scope: !1526, file: !1460, discriminator: 0)
!1526 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h164df241d16e32abE", scope: !1497, file: !1496, line: 1365, type: !1527, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !1529)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!9, !1480}
!1529 = !{!1524}
!1530 = !DILocation(line: 354, column: 19, scope: !1525, inlinedAt: !1523)
!1531 = !DILocalVariable(name: "ptr", scope: !1532, file: !1460, line: 354, type: !1480, align: 8)
!1532 = !DILexicalBlockFile(scope: !1533, file: !1460, discriminator: 0)
!1533 = distinct !DISubprogram(name: "metadata<[u8]>", linkageName: "_ZN4core3ptr8metadata8metadata17h91c47a9b8fe11bcbE", scope: !1535, file: !1534, line: 93, type: !1527, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !1536)
!1534 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!1535 = !DINamespace(name: "metadata", scope: !49)
!1536 = !{!1531}
!1537 = !DILocation(line: 354, column: 19, scope: !1532, inlinedAt: !1538)
!1538 = !DILocation(line: 1366, column: 9, scope: !1526, inlinedAt: !1523)
!1539 = !DILocation(line: 354, column: 13, scope: !1487)
!1540 = !DILocation(line: 355, column: 35, scope: !1487)
!1541 = !DILocalVariable(name: "data", scope: !1542, file: !1460, line: 355, type: !57, align: 8)
!1542 = !DILexicalBlockFile(scope: !1543, file: !1460, discriminator: 0)
!1543 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hdefab4583f2f91efE", scope: !49, file: !750, line: 695, type: !1544, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !1546)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!1480, !57, !9}
!1546 = !{!1541, !1547}
!1547 = !DILocalVariable(name: "len", scope: !1542, file: !1460, line: 355, type: !9, align: 8)
!1548 = !DILocation(line: 355, column: 9, scope: !1542, inlinedAt: !1549)
!1549 = !DILocation(line: 355, column: 9, scope: !1487)
!1550 = !DILocation(line: 355, column: 40, scope: !1487)
!1551 = !DILocalVariable(name: "self", scope: !1552, file: !1460, line: 355, type: !57, align: 8)
!1552 = !DILexicalBlockFile(scope: !1553, file: !1460, discriminator: 0)
!1553 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h8492915f995f0c58E", scope: !1506, file: !1496, line: 46, type: !1554, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1557, retainedNodes: !1556)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!6, !57}
!1556 = !{!1551}
!1557 = !{!60, !1558}
!1558 = !DITemplateTypeParameter(name: "U", type: !7)
!1559 = !DILocation(line: 355, column: 9, scope: !1552, inlinedAt: !1560)
!1560 = !DILocation(line: 696, column: 20, scope: !1543, inlinedAt: !1549)
!1561 = !DILocalVariable(name: "data_address", scope: !1562, file: !1460, line: 355, type: !6, align: 8)
!1562 = !DILexicalBlockFile(scope: !1563, file: !1460, discriminator: 0)
!1563 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h2fb140cb988ced59E", scope: !1535, file: !1534, line: 110, type: !1564, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !1566)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!1480, !6, !9}
!1566 = !{!1561, !1567}
!1567 = !DILocalVariable(name: "metadata", scope: !1562, file: !1460, line: 355, type: !9, align: 8)
!1568 = !DILocation(line: 355, column: 9, scope: !1562, inlinedAt: !1569)
!1569 = !DILocation(line: 696, column: 5, scope: !1543, inlinedAt: !1549)
!1570 = !DILocation(line: 356, column: 6, scope: !1459)
!1571 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17hbcbfc7b531f185c4E", scope: !1461, file: !1460, line: 329, type: !1572, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1587)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1574, !1469, !655}
!1574 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !361, file: !2, size: 128, align: 64, elements: !1575, templateParams: !23, identifier: "f0dceda904e27e7388d0262de24b6976")
!1575 = !{!1576}
!1576 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1574, file: !2, size: 128, align: 64, elements: !1577, templateParams: !23, identifier: "d9a20f3bc7236076b658193a0ee41dce", discriminator: !1586)
!1577 = !{!1578, !1582}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1576, file: !2, baseType: !1579, size: 128, align: 64, extraData: i64 0)
!1579 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1574, file: !2, size: 128, align: 64, elements: !23, templateParams: !1580, identifier: "8b8f8f73f03135e6d73de6ca26c771a5")
!1580 = !{!1581}
!1581 = !DITemplateTypeParameter(name: "T", type: !655)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1576, file: !2, baseType: !1583, size: 128, align: 64)
!1583 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1574, file: !2, size: 128, align: 64, elements: !1584, templateParams: !1580, identifier: "5f24cd570c5cc19be11f0051a0b188da")
!1584 = !{!1585}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1583, file: !2, baseType: !655, size: 128, align: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, scope: !1574, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!1587 = !{!1588, !1589}
!1588 = !DILocalVariable(name: "self", arg: 1, scope: !1571, file: !1460, line: 329, type: !1469)
!1589 = !DILocalVariable(name: "slice", arg: 2, scope: !1571, file: !1460, line: 329, type: !655)
!1590 = !DILocation(line: 329, column: 12, scope: !1571)
!1591 = !DILocation(line: 329, column: 18, scope: !1571)
!1592 = !DILocation(line: 330, column: 12, scope: !1571)
!1593 = !DILocation(line: 335, column: 13, scope: !1571)
!1594 = !DILocation(line: 330, column: 9, scope: !1571)
!1595 = !DILocation(line: 333, column: 29, scope: !1571)
!1596 = !DILocation(line: 333, column: 13, scope: !1571)
!1597 = !DILocation(line: 337, column: 6, scope: !1571)
!1598 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h97f66a9983957c89E", scope: !1461, file: !1460, line: 366, type: !1599, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1601)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!655, !1469, !655, !802}
!1601 = !{!1602, !1603, !1604, !1606, !1607}
!1602 = !DILocalVariable(name: "self", arg: 1, scope: !1598, file: !1460, line: 366, type: !1469)
!1603 = !DILocalVariable(name: "slice", arg: 2, scope: !1598, file: !1460, line: 366, type: !655)
!1604 = !DILocalVariable(name: "start", scope: !1605, file: !1460, line: 367, type: !9, align: 8)
!1605 = distinct !DILexicalBlock(scope: !1598, file: !1460, line: 367, column: 9)
!1606 = !DILocalVariable(name: "end", scope: !1605, file: !1460, line: 367, type: !9, align: 8)
!1607 = !DILocalVariable(name: "s", scope: !1608, file: !1460, line: 369, type: !655, align: 8)
!1608 = distinct !DILexicalBlock(scope: !1605, file: !1460, line: 369, column: 13)
!1609 = !DILocation(line: 366, column: 14, scope: !1598)
!1610 = !DILocation(line: 366, column: 20, scope: !1598)
!1611 = !DILocation(line: 367, column: 41, scope: !1598)
!1612 = !DILocalVariable(name: "self", scope: !1613, file: !1460, line: 367, type: !655, align: 8)
!1613 = !DILexicalBlockFile(scope: !1614, file: !1460, discriminator: 0)
!1614 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hcee4a7cd50fba731E", scope: !1388, file: !1387, line: 157, type: !1423, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1615)
!1615 = !{!1612}
!1616 = !DILocation(line: 367, column: 41, scope: !1613, inlinedAt: !1611)
!1617 = !DILocalVariable(name: "self", scope: !1618, file: !1460, line: 367, type: !655, align: 8)
!1618 = !DILexicalBlockFile(scope: !1619, file: !1460, discriminator: 0)
!1619 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1620)
!1620 = !{!1617}
!1621 = !DILocation(line: 367, column: 41, scope: !1618, inlinedAt: !1622)
!1622 = !DILocation(line: 158, column: 9, scope: !1614, inlinedAt: !1611)
!1623 = !DILocation(line: 367, column: 28, scope: !1598)
!1624 = !DILocation(line: 367, column: 14, scope: !1598)
!1625 = !DILocation(line: 367, column: 14, scope: !1605)
!1626 = !DILocation(line: 367, column: 21, scope: !1598)
!1627 = !DILocation(line: 367, column: 21, scope: !1605)
!1628 = !DILocation(line: 368, column: 15, scope: !1605)
!1629 = !DILocation(line: 368, column: 9, scope: !1605)
!1630 = !DILocation(line: 370, column: 21, scope: !1605)
!1631 = !DILocation(line: 369, column: 18, scope: !1605)
!1632 = !DILocation(line: 369, column: 18, scope: !1608)
!1633 = !DILocation(line: 372, column: 6, scope: !1598)
!1634 = distinct !DISubprogram(name: "next<core::str::pattern::MatchOnly>", linkageName: "_ZN4core3str7pattern14TwoWaySearcher4next17h6962a7f9d502e88aE", scope: !1636, file: !1635, line: 1384, type: !1647, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1705, retainedNodes: !1667)
!1635 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/pattern.rs", directory: "", checksumkind: CSK_MD5, checksum: "4413c12c327e63807a1a57fa4d03df68")
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWaySearcher", scope: !1637, file: !2, size: 512, align: 64, elements: !1638, templateParams: !23, identifier: "4b50bca5bf9b33e8385f1026830431b5")
!1637 = !DINamespace(name: "pattern", scope: !1157)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos", scope: !1636, file: !2, baseType: !9, size: 64, align: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos_back", scope: !1636, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1636, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "byteset", scope: !1636, file: !2, baseType: !130, size: 64, align: 64, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !1636, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1636, file: !2, baseType: !9, size: 64, align: 64, offset: 320)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1636, file: !2, baseType: !9, size: 64, align: 64, offset: 384)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "memory_back", scope: !1636, file: !2, baseType: !9, size: 64, align: 64, offset: 448)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!1649, !1666, !467, !467, !535}
!1649 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, usize)>", scope: !361, file: !2, size: 192, align: 64, elements: !1650, templateParams: !23, identifier: "990abf00db42140b4c63b9dd480f48ae")
!1650 = !{!1651}
!1651 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1649, file: !2, size: 192, align: 64, elements: !1652, templateParams: !23, identifier: "ca2e0d050d24abac5af96d6fe9066cdf", discriminator: !1665)
!1652 = !{!1653, !1661}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1651, file: !2, baseType: !1654, size: 192, align: 64, extraData: i64 0)
!1654 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1649, file: !2, size: 192, align: 64, elements: !23, templateParams: !1655, identifier: "1e0ff27580c54e441adf9fae1bbc4c81")
!1655 = !{!1656}
!1656 = !DITemplateTypeParameter(name: "T", type: !1657)
!1657 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !1658, templateParams: !23, identifier: "105266767139aa3a5d0ea4c0b52d55d0")
!1658 = !{!1659, !1660}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1657, file: !2, baseType: !9, size: 64, align: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1657, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1651, file: !2, baseType: !1662, size: 192, align: 64, extraData: i64 1)
!1662 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1649, file: !2, size: 192, align: 64, elements: !1663, templateParams: !1655, identifier: "e19a3496fbff9c108ae2a0b8a3495600")
!1663 = !{!1664}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1662, file: !2, baseType: !1657, size: 128, align: 64, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, scope: !1649, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::TwoWaySearcher", baseType: !1636, size: 64, align: 64, dwarfAddressSpace: 0)
!1667 = !{!1668, !1669, !1670, !1671, !1672, !1674, !1676, !1678, !1680, !1682, !1688, !1690, !1692, !1701, !1703}
!1668 = !DILocalVariable(name: "self", arg: 1, scope: !1634, file: !1635, line: 1384, type: !1666)
!1669 = !DILocalVariable(name: "haystack", arg: 2, scope: !1634, file: !1635, line: 1384, type: !467)
!1670 = !DILocalVariable(name: "needle", arg: 3, scope: !1634, file: !1635, line: 1384, type: !467)
!1671 = !DILocalVariable(name: "long_period", arg: 4, scope: !1634, file: !1635, line: 1384, type: !535)
!1672 = !DILocalVariable(name: "old_pos", scope: !1673, file: !1635, line: 1389, type: !9, align: 8)
!1673 = distinct !DILexicalBlock(scope: !1634, file: !1635, line: 1389, column: 9)
!1674 = !DILocalVariable(name: "needle_last", scope: !1675, file: !1635, line: 1390, type: !9, align: 8)
!1675 = distinct !DILexicalBlock(scope: !1673, file: !1635, line: 1390, column: 9)
!1676 = !DILocalVariable(name: "tail_byte", scope: !1677, file: !1635, line: 1395, type: !58, align: 1)
!1677 = distinct !DILexicalBlock(scope: !1675, file: !1635, line: 1395, column: 13)
!1678 = !DILocalVariable(name: "b", scope: !1679, file: !1635, line: 1396, type: !58, align: 1)
!1679 = distinct !DILexicalBlock(scope: !1675, file: !1635, line: 1396, column: 17)
!1680 = !DILocalVariable(name: "start", scope: !1681, file: !1635, line: 1417, type: !9, align: 8)
!1681 = distinct !DILexicalBlock(scope: !1677, file: !1635, line: 1417, column: 13)
!1682 = !DILocalVariable(name: "iter", scope: !1683, file: !1635, line: 1419, type: !1684, align: 8)
!1683 = distinct !DILexicalBlock(scope: !1681, file: !1635, line: 1419, column: 13)
!1684 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !1470, file: !2, size: 128, align: 64, elements: !1685, templateParams: !1473, identifier: "855eb37746b15049ea4556b174e97dd7")
!1685 = !{!1686, !1687}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1684, file: !2, baseType: !9, size: 64, align: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1684, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1688 = !DILocalVariable(name: "i", scope: !1689, file: !1635, line: 1419, type: !9, align: 8)
!1689 = distinct !DILexicalBlock(scope: !1683, file: !1635, line: 1419, column: 42)
!1690 = !DILocalVariable(name: "start", scope: !1691, file: !1635, line: 1430, type: !9, align: 8)
!1691 = distinct !DILexicalBlock(scope: !1681, file: !1635, line: 1430, column: 13)
!1692 = !DILocalVariable(name: "iter", scope: !1693, file: !1635, line: 1431, type: !1694, align: 8)
!1693 = distinct !DILexicalBlock(scope: !1691, file: !1635, line: 1431, column: 13)
!1694 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !1695, file: !2, size: 128, align: 64, elements: !1697, templateParams: !1699, identifier: "7b1141d59523877979180cab23f08957")
!1695 = !DINamespace(name: "rev", scope: !1696)
!1696 = !DINamespace(name: "adapters", scope: !415)
!1697 = !{!1698}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1694, file: !2, baseType: !1684, size: 128, align: 64)
!1699 = !{!1700}
!1700 = !DITemplateTypeParameter(name: "T", type: !1684)
!1701 = !DILocalVariable(name: "i", scope: !1702, file: !1635, line: 1431, type: !9, align: 8)
!1702 = distinct !DILexicalBlock(scope: !1693, file: !1635, line: 1431, column: 51)
!1703 = !DILocalVariable(name: "match_pos", scope: !1704, file: !1635, line: 1442, type: !9, align: 8)
!1704 = distinct !DILexicalBlock(scope: !1691, file: !1635, line: 1442, column: 13)
!1705 = !{!1706}
!1706 = !DITemplateTypeParameter(name: "S", type: !1707)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "MatchOnly", scope: !1637, file: !2, align: 8, elements: !1708, templateParams: !23, identifier: "dfa07b7e51d07068d87f5c730661e904")
!1708 = !{!1709}
!1709 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1707, file: !2, align: 8, elements: !23, identifier: "311763662f4476cef18f22f79601d9ab")
!1710 = !DILocation(line: 1384, column: 16, scope: !1634)
!1711 = !DILocation(line: 1384, column: 27, scope: !1634)
!1712 = !DILocation(line: 1384, column: 44, scope: !1634)
!1713 = !DILocation(line: 1384, column: 59, scope: !1634)
!1714 = !DILocation(line: 1417, column: 17, scope: !1681)
!1715 = !DILocalVariable(name: "self", scope: !1716, file: !1635, line: 1419, type: !1684, align: 8)
!1716 = !DILexicalBlockFile(scope: !1717, file: !1635, discriminator: 0)
!1717 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc43346cd621f2aa9E", scope: !1719, file: !1718, line: 271, type: !1722, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1725, retainedNodes: !1724)
!1718 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!1719 = !DINamespace(name: "{impl#0}", scope: !1720)
!1720 = !DINamespace(name: "collect", scope: !1721)
!1721 = !DINamespace(name: "traits", scope: !415)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!1684, !1684}
!1724 = !{!1715}
!1725 = !{!1726}
!1726 = !DITemplateTypeParameter(name: "I", type: !1684)
!1727 = !DILocation(line: 1419, column: 22, scope: !1716, inlinedAt: !1728)
!1728 = !DILocation(line: 1419, column: 22, scope: !1681)
!1729 = !DILocation(line: 1419, column: 22, scope: !1683)
!1730 = !DILocation(line: 1430, column: 17, scope: !1691)
!1731 = !DILocalVariable(name: "self", scope: !1732, file: !1635, line: 1431, type: !1684, align: 8)
!1732 = !DILexicalBlockFile(scope: !1733, file: !1635, discriminator: 0)
!1733 = distinct !DISubprogram(name: "rev<core::ops::range::Range<usize>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3rev17h5407d3fd8e06dbfcE", scope: !1735, file: !1734, line: 3161, type: !1737, scopeLine: 3161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1740, retainedNodes: !1739)
!1734 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "a0295b930225b37fba81d1ded0ab2716")
!1735 = !DINamespace(name: "Iterator", scope: !1736)
!1736 = !DINamespace(name: "iterator", scope: !1721)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{!1694, !1684}
!1739 = !{!1731}
!1740 = !{!1741}
!1741 = !DITemplateTypeParameter(name: "Self", type: !1684)
!1742 = !DILocation(line: 1431, column: 22, scope: !1732, inlinedAt: !1743)
!1743 = !DILocation(line: 1431, column: 22, scope: !1691)
!1744 = !DILocation(line: 1431, column: 22, scope: !1693)
!1745 = !DILocation(line: 1389, column: 23, scope: !1634)
!1746 = !DILocation(line: 1389, column: 13, scope: !1673)
!1747 = !DILocation(line: 1390, column: 27, scope: !1673)
!1748 = !DILocation(line: 1390, column: 13, scope: !1675)
!1749 = !DILocation(line: 1391, column: 9, scope: !1675)
!1750 = !DILocation(line: 1395, column: 35, scope: !1675)
!1751 = !DILocalVariable(name: "self", scope: !1752, file: !1635, line: 1395, type: !467, align: 8)
!1752 = !DILexicalBlockFile(scope: !1753, file: !1635, discriminator: 0)
!1753 = distinct !DISubprogram(name: "get<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hdd0e7cae5d8dae14E", scope: !614, file: !613, line: 339, type: !1411, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1415, retainedNodes: !1754)
!1754 = !{!1751, !1755}
!1755 = !DILocalVariable(name: "index", scope: !1752, file: !1635, line: 1395, type: !9, align: 8)
!1756 = !DILocation(line: 1395, column: 35, scope: !1752, inlinedAt: !1750)
!1757 = !DILocation(line: 1395, column: 48, scope: !1675)
!1758 = !DILocation(line: 1395, column: 29, scope: !1675)
!1759 = !DILocation(line: 1398, column: 21, scope: !1675)
!1760 = !DILocation(line: 1399, column: 50, scope: !1675)
!1761 = !DILocation(line: 1399, column: 28, scope: !1675)
!1762 = !DILocation(line: 1396, column: 23, scope: !1675)
!1763 = !DILocation(line: 1396, column: 23, scope: !1679)
!1764 = !DILocation(line: 1396, column: 29, scope: !1679)
!1765 = !DILocation(line: 1395, column: 17, scope: !1677)
!1766 = !DILocation(line: 1403, column: 16, scope: !1677)
!1767 = !DILocation(line: 1403, column: 52, scope: !1677)
!1768 = !DILocation(line: 1403, column: 41, scope: !1677)
!1769 = !DILocation(line: 1408, column: 17, scope: !1677)
!1770 = !DILocalVariable(name: "self", scope: !1771, file: !1635, line: 1408, type: !1774, align: 8)
!1771 = distinct !DISubprogram(name: "byteset_contains", linkageName: "_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hef25a06a326a1083E", scope: !1636, file: !1635, line: 1374, type: !1772, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1775)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!535, !1774, !58}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::TwoWaySearcher", baseType: !1636, size: 64, align: 64, dwarfAddressSpace: 0)
!1775 = !{!1770, !1776}
!1776 = !DILocalVariable(name: "byte", scope: !1771, file: !1635, line: 1408, type: !58, align: 1)
!1777 = !DILocation(line: 1408, column: 17, scope: !1771, inlinedAt: !1769)
!1778 = !DILocation(line: 1408, column: 39, scope: !1677)
!1779 = !DILocation(line: 1408, column: 16, scope: !1677)
!1780 = !DILocation(line: 1404, column: 46, scope: !1677)
!1781 = !DILocation(line: 1404, column: 24, scope: !1677)
!1782 = !DILocation(line: 1, column: 1, scope: !1783)
!1783 = !DILexicalBlockFile(scope: !1677, file: !1311, discriminator: 0)
!1784 = !DILocation(line: 1452, column: 6, scope: !1634)
!1785 = !DILocation(line: 1418, column: 20, scope: !1677)
!1786 = !DILocation(line: 1409, column: 17, scope: !1677)
!1787 = !DILocation(line: 1410, column: 20, scope: !1677)
!1788 = !DILocation(line: 1411, column: 21, scope: !1677)
!1789 = !DILocation(line: 1410, column: 17, scope: !1677)
!1790 = !DILocation(line: 1, column: 1, scope: !1791)
!1791 = !DILexicalBlockFile(scope: !1675, file: !1311, discriminator: 0)
!1792 = !DILocation(line: 1418, column: 66, scope: !1677)
!1793 = !DILocalVariable(name: "v1", scope: !1794, file: !1635, line: 1418, type: !9, align: 8)
!1794 = !DILexicalBlockFile(scope: !1795, file: !1635, discriminator: 0)
!1795 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd97f7620f7792874E", scope: !116, file: !492, line: 1278, type: !416, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !1796)
!1796 = !{!1793, !1797}
!1797 = !DILocalVariable(name: "v2", scope: !1794, file: !1635, line: 1418, type: !9, align: 8)
!1798 = !DILocation(line: 1418, column: 57, scope: !1794, inlinedAt: !1799)
!1799 = !DILocation(line: 1418, column: 57, scope: !1677)
!1800 = !DILocation(line: 1418, column: 81, scope: !1677)
!1801 = !DILocation(line: 1418, column: 34, scope: !1677)
!1802 = !DILocation(line: 1418, column: 17, scope: !1677)
!1803 = !DILocation(line: 1419, column: 13, scope: !1683)
!1804 = !DILocalVariable(name: "self", scope: !1805, file: !1635, line: 1419, type: !1810, align: 8)
!1805 = !DILexicalBlockFile(scope: !1806, file: !1635, discriminator: 0)
!1806 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h232418ddaf769366E", scope: !1807, file: !412, line: 710, type: !1808, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1812, retainedNodes: !1811)
!1807 = !DINamespace(name: "{impl#3}", scope: !414)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{!360, !1810}
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<usize>", baseType: !1684, size: 64, align: 64, dwarfAddressSpace: 0)
!1811 = !{!1804}
!1812 = !{!1813}
!1813 = !DITemplateTypeParameter(name: "A", type: !9)
!1814 = !DILocation(line: 1419, column: 22, scope: !1805, inlinedAt: !1729)
!1815 = !DILocation(line: 1430, column: 28, scope: !1681)
!1816 = !DILocation(line: 1419, column: 17, scope: !1683)
!1817 = !DILocation(line: 1419, column: 17, scope: !1689)
!1818 = !DILocation(line: 1420, column: 20, scope: !1689)
!1819 = !DILocation(line: 1420, column: 42, scope: !1689)
!1820 = !DILocation(line: 1420, column: 33, scope: !1689)
!1821 = !DILocation(line: 1421, column: 42, scope: !1689)
!1822 = !DILocation(line: 1421, column: 38, scope: !1689)
!1823 = !DILocation(line: 1421, column: 21, scope: !1689)
!1824 = !DILocation(line: 1422, column: 24, scope: !1689)
!1825 = !DILocation(line: 1, column: 1, scope: !1826)
!1826 = !DILexicalBlockFile(scope: !1681, file: !1311, discriminator: 0)
!1827 = !DILocation(line: 1423, column: 25, scope: !1689)
!1828 = !DILocation(line: 1422, column: 21, scope: !1689)
!1829 = !DILocation(line: 1430, column: 53, scope: !1681)
!1830 = !DILocation(line: 1430, column: 25, scope: !1681)
!1831 = !DILocation(line: 1430, column: 42, scope: !1681)
!1832 = !DILocation(line: 1431, column: 23, scope: !1691)
!1833 = !DILocation(line: 1431, column: 30, scope: !1691)
!1834 = !DILocalVariable(name: "self", scope: !1835, file: !1635, line: 1431, type: !1694, align: 8)
!1835 = !DILexicalBlockFile(scope: !1836, file: !1635, discriminator: 0)
!1836 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h192865ef577d63d0E", scope: !1719, file: !1718, line: 271, type: !1837, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1840, retainedNodes: !1839)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!1694, !1694}
!1839 = !{!1834}
!1840 = !{!1841}
!1841 = !DITemplateTypeParameter(name: "I", type: !1694)
!1842 = !DILocation(line: 1431, column: 22, scope: !1835, inlinedAt: !1743)
!1843 = !DILocation(line: 1431, column: 13, scope: !1693)
!1844 = !DILocalVariable(name: "self", scope: !1845, file: !1635, line: 1431, type: !1851, align: 8)
!1845 = !DILexicalBlockFile(scope: !1846, file: !1635, discriminator: 0)
!1846 = distinct !DISubprogram(name: "next<core::ops::range::Range<usize>>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0f86d967fc233a37E", scope: !1848, file: !1847, line: 32, type: !1849, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1725, retainedNodes: !1852)
!1847 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/adapters/rev.rs", directory: "", checksumkind: CSK_MD5, checksum: "e12e05d45ec334260b2bf4e457d8cd45")
!1848 = !DINamespace(name: "{impl#1}", scope: !1695)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!360, !1851}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>", baseType: !1694, size: 64, align: 64, dwarfAddressSpace: 0)
!1852 = !{!1844}
!1853 = !DILocation(line: 1431, column: 22, scope: !1845, inlinedAt: !1744)
!1854 = !DILocalVariable(name: "self", scope: !1855, file: !1635, line: 1431, type: !1810, align: 8)
!1855 = !DILexicalBlockFile(scope: !1856, file: !1635, discriminator: 0)
!1856 = distinct !DISubprogram(name: "next_back<usize>", linkageName: "_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h55d9fa6dbf6e738bE", scope: !1857, file: !412, line: 818, type: !1808, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1812, retainedNodes: !1858)
!1857 = !DINamespace(name: "{impl#4}", scope: !414)
!1858 = !{!1854}
!1859 = !DILocation(line: 1431, column: 22, scope: !1855, inlinedAt: !1860)
!1860 = !DILocation(line: 33, column: 9, scope: !1846, inlinedAt: !1744)
!1861 = !DILocation(line: 1442, column: 29, scope: !1691)
!1862 = !DILocation(line: 1442, column: 17, scope: !1704)
!1863 = !DILocation(line: 1445, column: 13, scope: !1704)
!1864 = !DILocation(line: 1446, column: 16, scope: !1704)
!1865 = !DILocation(line: 1431, column: 17, scope: !1693)
!1866 = !DILocation(line: 1431, column: 17, scope: !1702)
!1867 = !DILocation(line: 1432, column: 20, scope: !1702)
!1868 = !DILocation(line: 1432, column: 42, scope: !1702)
!1869 = !DILocation(line: 1432, column: 33, scope: !1702)
!1870 = !DILocation(line: 1433, column: 38, scope: !1702)
!1871 = !DILocation(line: 1433, column: 21, scope: !1702)
!1872 = !DILocation(line: 1434, column: 24, scope: !1702)
!1873 = !DILocation(line: 1435, column: 54, scope: !1702)
!1874 = !DILocation(line: 1435, column: 25, scope: !1702)
!1875 = !DILocation(line: 1434, column: 21, scope: !1702)
!1876 = !DILocation(line: 1450, column: 43, scope: !1704)
!1877 = !DILocation(line: 1450, column: 20, scope: !1704)
!1878 = !DILocation(line: 1447, column: 17, scope: !1704)
!1879 = !DILocation(line: 1446, column: 13, scope: !1704)
!1880 = distinct !DISubprogram(name: "next<core::str::pattern::RejectAndMatch>", linkageName: "_ZN4core3str7pattern14TwoWaySearcher4next17h7d87489eb065f5dbE", scope: !1636, file: !1635, line: 1384, type: !1881, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1927, retainedNodes: !1900)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!1883, !1666, !467, !467, !535}
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "SearchStep", scope: !1637, file: !2, size: 192, align: 64, elements: !1884, templateParams: !23, identifier: "d9fee1572ca7c936e6009a15a28d330e")
!1884 = !{!1885}
!1885 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1883, file: !2, size: 192, align: 64, elements: !1886, templateParams: !23, identifier: "3a9f12419d689b49d54f2dcbe93f0b73", discriminator: !1899)
!1886 = !{!1887, !1892, !1897}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "Match", scope: !1885, file: !2, baseType: !1888, size: 192, align: 64, extraData: i64 0)
!1888 = !DICompositeType(tag: DW_TAG_structure_type, name: "Match", scope: !1883, file: !2, size: 192, align: 64, elements: !1889, templateParams: !23, identifier: "31212d05181959c84b28f896d93e293d")
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1888, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1888, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "Reject", scope: !1885, file: !2, baseType: !1893, size: 192, align: 64, extraData: i64 1)
!1893 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reject", scope: !1883, file: !2, size: 192, align: 64, elements: !1894, templateParams: !23, identifier: "d9794c47eeca6169d7dd2f18ab47bce6")
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1893, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1893, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "Done", scope: !1885, file: !2, baseType: !1898, size: 192, align: 64, extraData: i64 2)
!1898 = !DICompositeType(tag: DW_TAG_structure_type, name: "Done", scope: !1883, file: !2, size: 192, align: 64, elements: !23, identifier: "e9478815bdfcd63a57de269e3216947")
!1899 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!1900 = !{!1901, !1902, !1903, !1904, !1905, !1907, !1909, !1911, !1913, !1915, !1917, !1919, !1921, !1923, !1925}
!1901 = !DILocalVariable(name: "self", arg: 1, scope: !1880, file: !1635, line: 1384, type: !1666)
!1902 = !DILocalVariable(name: "haystack", arg: 2, scope: !1880, file: !1635, line: 1384, type: !467)
!1903 = !DILocalVariable(name: "needle", arg: 3, scope: !1880, file: !1635, line: 1384, type: !467)
!1904 = !DILocalVariable(name: "long_period", arg: 4, scope: !1880, file: !1635, line: 1384, type: !535)
!1905 = !DILocalVariable(name: "old_pos", scope: !1906, file: !1635, line: 1389, type: !9, align: 8)
!1906 = distinct !DILexicalBlock(scope: !1880, file: !1635, line: 1389, column: 9)
!1907 = !DILocalVariable(name: "needle_last", scope: !1908, file: !1635, line: 1390, type: !9, align: 8)
!1908 = distinct !DILexicalBlock(scope: !1906, file: !1635, line: 1390, column: 9)
!1909 = !DILocalVariable(name: "tail_byte", scope: !1910, file: !1635, line: 1395, type: !58, align: 1)
!1910 = distinct !DILexicalBlock(scope: !1908, file: !1635, line: 1395, column: 13)
!1911 = !DILocalVariable(name: "b", scope: !1912, file: !1635, line: 1396, type: !58, align: 1)
!1912 = distinct !DILexicalBlock(scope: !1908, file: !1635, line: 1396, column: 17)
!1913 = !DILocalVariable(name: "start", scope: !1914, file: !1635, line: 1417, type: !9, align: 8)
!1914 = distinct !DILexicalBlock(scope: !1910, file: !1635, line: 1417, column: 13)
!1915 = !DILocalVariable(name: "iter", scope: !1916, file: !1635, line: 1419, type: !1684, align: 8)
!1916 = distinct !DILexicalBlock(scope: !1914, file: !1635, line: 1419, column: 13)
!1917 = !DILocalVariable(name: "i", scope: !1918, file: !1635, line: 1419, type: !9, align: 8)
!1918 = distinct !DILexicalBlock(scope: !1916, file: !1635, line: 1419, column: 42)
!1919 = !DILocalVariable(name: "start", scope: !1920, file: !1635, line: 1430, type: !9, align: 8)
!1920 = distinct !DILexicalBlock(scope: !1914, file: !1635, line: 1430, column: 13)
!1921 = !DILocalVariable(name: "iter", scope: !1922, file: !1635, line: 1431, type: !1694, align: 8)
!1922 = distinct !DILexicalBlock(scope: !1920, file: !1635, line: 1431, column: 13)
!1923 = !DILocalVariable(name: "i", scope: !1924, file: !1635, line: 1431, type: !9, align: 8)
!1924 = distinct !DILexicalBlock(scope: !1922, file: !1635, line: 1431, column: 51)
!1925 = !DILocalVariable(name: "match_pos", scope: !1926, file: !1635, line: 1442, type: !9, align: 8)
!1926 = distinct !DILexicalBlock(scope: !1920, file: !1635, line: 1442, column: 13)
!1927 = !{!1928}
!1928 = !DITemplateTypeParameter(name: "S", type: !1929)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "RejectAndMatch", scope: !1637, file: !2, align: 8, elements: !1930, templateParams: !23, identifier: "2fb956ce7af5db5ca1c7382b2e98b309")
!1930 = !{!1931}
!1931 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1929, file: !2, align: 8, elements: !23, identifier: "500a5dc57c233c2c69dd548e739d3988")
!1932 = !DILocation(line: 1384, column: 16, scope: !1880)
!1933 = !DILocation(line: 1384, column: 27, scope: !1880)
!1934 = !DILocation(line: 1384, column: 44, scope: !1880)
!1935 = !DILocation(line: 1384, column: 59, scope: !1880)
!1936 = !DILocation(line: 1417, column: 17, scope: !1914)
!1937 = !DILocalVariable(name: "self", scope: !1938, file: !1635, line: 1419, type: !1684, align: 8)
!1938 = !DILexicalBlockFile(scope: !1939, file: !1635, discriminator: 0)
!1939 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hc43346cd621f2aa9E", scope: !1719, file: !1718, line: 271, type: !1722, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1725, retainedNodes: !1940)
!1940 = !{!1937}
!1941 = !DILocation(line: 1419, column: 22, scope: !1938, inlinedAt: !1942)
!1942 = !DILocation(line: 1419, column: 22, scope: !1914)
!1943 = !DILocation(line: 1419, column: 22, scope: !1916)
!1944 = !DILocation(line: 1430, column: 17, scope: !1920)
!1945 = !DILocalVariable(name: "self", scope: !1946, file: !1635, line: 1431, type: !1684, align: 8)
!1946 = !DILexicalBlockFile(scope: !1947, file: !1635, discriminator: 0)
!1947 = distinct !DISubprogram(name: "rev<core::ops::range::Range<usize>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3rev17h5407d3fd8e06dbfcE", scope: !1735, file: !1734, line: 3161, type: !1737, scopeLine: 3161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1740, retainedNodes: !1948)
!1948 = !{!1945}
!1949 = !DILocation(line: 1431, column: 22, scope: !1946, inlinedAt: !1950)
!1950 = !DILocation(line: 1431, column: 22, scope: !1920)
!1951 = !DILocation(line: 1431, column: 22, scope: !1922)
!1952 = !DILocation(line: 1389, column: 23, scope: !1880)
!1953 = !DILocation(line: 1389, column: 13, scope: !1906)
!1954 = !DILocation(line: 1390, column: 27, scope: !1906)
!1955 = !DILocation(line: 1390, column: 13, scope: !1908)
!1956 = !DILocation(line: 1391, column: 9, scope: !1908)
!1957 = !DILocation(line: 1395, column: 35, scope: !1908)
!1958 = !DILocalVariable(name: "self", scope: !1959, file: !1635, line: 1395, type: !467, align: 8)
!1959 = !DILexicalBlockFile(scope: !1960, file: !1635, discriminator: 0)
!1960 = distinct !DISubprogram(name: "get<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hdd0e7cae5d8dae14E", scope: !614, file: !613, line: 339, type: !1411, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1415, retainedNodes: !1961)
!1961 = !{!1958, !1962}
!1962 = !DILocalVariable(name: "index", scope: !1959, file: !1635, line: 1395, type: !9, align: 8)
!1963 = !DILocation(line: 1395, column: 35, scope: !1959, inlinedAt: !1957)
!1964 = !DILocation(line: 1395, column: 48, scope: !1908)
!1965 = !DILocation(line: 1395, column: 29, scope: !1908)
!1966 = !DILocation(line: 1398, column: 21, scope: !1908)
!1967 = !DILocation(line: 1399, column: 50, scope: !1908)
!1968 = !DILocation(line: 1399, column: 28, scope: !1908)
!1969 = !DILocation(line: 1396, column: 23, scope: !1908)
!1970 = !DILocation(line: 1396, column: 23, scope: !1912)
!1971 = !DILocation(line: 1396, column: 29, scope: !1912)
!1972 = !DILocation(line: 1395, column: 17, scope: !1910)
!1973 = !DILocation(line: 1403, column: 16, scope: !1910)
!1974 = !DILocation(line: 1403, column: 52, scope: !1910)
!1975 = !DILocation(line: 1403, column: 41, scope: !1910)
!1976 = !DILocation(line: 1408, column: 17, scope: !1910)
!1977 = !DILocalVariable(name: "self", scope: !1978, file: !1635, line: 1408, type: !1774, align: 8)
!1978 = distinct !DISubprogram(name: "byteset_contains", linkageName: "_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hef25a06a326a1083E", scope: !1636, file: !1635, line: 1374, type: !1772, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !1979)
!1979 = !{!1977, !1980}
!1980 = !DILocalVariable(name: "byte", scope: !1978, file: !1635, line: 1408, type: !58, align: 1)
!1981 = !DILocation(line: 1408, column: 17, scope: !1978, inlinedAt: !1976)
!1982 = !DILocation(line: 1408, column: 39, scope: !1910)
!1983 = !DILocation(line: 1408, column: 16, scope: !1910)
!1984 = !DILocation(line: 1404, column: 46, scope: !1910)
!1985 = !DILocation(line: 1404, column: 24, scope: !1910)
!1986 = !DILocation(line: 1, column: 1, scope: !1987)
!1987 = !DILexicalBlockFile(scope: !1910, file: !1311, discriminator: 0)
!1988 = !DILocation(line: 1452, column: 6, scope: !1880)
!1989 = !DILocation(line: 1418, column: 20, scope: !1910)
!1990 = !DILocation(line: 1409, column: 17, scope: !1910)
!1991 = !DILocation(line: 1410, column: 20, scope: !1910)
!1992 = !DILocation(line: 1411, column: 21, scope: !1910)
!1993 = !DILocation(line: 1410, column: 17, scope: !1910)
!1994 = !DILocation(line: 1, column: 1, scope: !1995)
!1995 = !DILexicalBlockFile(scope: !1908, file: !1311, discriminator: 0)
!1996 = !DILocation(line: 1418, column: 66, scope: !1910)
!1997 = !DILocalVariable(name: "v1", scope: !1998, file: !1635, line: 1418, type: !9, align: 8)
!1998 = !DILexicalBlockFile(scope: !1999, file: !1635, discriminator: 0)
!1999 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd97f7620f7792874E", scope: !116, file: !492, line: 1278, type: !416, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !2000)
!2000 = !{!1997, !2001}
!2001 = !DILocalVariable(name: "v2", scope: !1998, file: !1635, line: 1418, type: !9, align: 8)
!2002 = !DILocation(line: 1418, column: 57, scope: !1998, inlinedAt: !2003)
!2003 = !DILocation(line: 1418, column: 57, scope: !1910)
!2004 = !DILocation(line: 1418, column: 81, scope: !1910)
!2005 = !DILocation(line: 1418, column: 34, scope: !1910)
!2006 = !DILocation(line: 1418, column: 17, scope: !1910)
!2007 = !DILocation(line: 1419, column: 13, scope: !1916)
!2008 = !DILocalVariable(name: "self", scope: !2009, file: !1635, line: 1419, type: !1810, align: 8)
!2009 = !DILexicalBlockFile(scope: !2010, file: !1635, discriminator: 0)
!2010 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h232418ddaf769366E", scope: !1807, file: !412, line: 710, type: !1808, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1812, retainedNodes: !2011)
!2011 = !{!2008}
!2012 = !DILocation(line: 1419, column: 22, scope: !2009, inlinedAt: !1943)
!2013 = !DILocation(line: 1430, column: 28, scope: !1914)
!2014 = !DILocation(line: 1419, column: 17, scope: !1916)
!2015 = !DILocation(line: 1419, column: 17, scope: !1918)
!2016 = !DILocation(line: 1420, column: 20, scope: !1918)
!2017 = !DILocation(line: 1420, column: 42, scope: !1918)
!2018 = !DILocation(line: 1420, column: 33, scope: !1918)
!2019 = !DILocation(line: 1421, column: 42, scope: !1918)
!2020 = !DILocation(line: 1421, column: 38, scope: !1918)
!2021 = !DILocation(line: 1421, column: 21, scope: !1918)
!2022 = !DILocation(line: 1422, column: 24, scope: !1918)
!2023 = !DILocation(line: 1, column: 1, scope: !2024)
!2024 = !DILexicalBlockFile(scope: !1914, file: !1311, discriminator: 0)
!2025 = !DILocation(line: 1423, column: 25, scope: !1918)
!2026 = !DILocation(line: 1422, column: 21, scope: !1918)
!2027 = !DILocation(line: 1430, column: 53, scope: !1914)
!2028 = !DILocation(line: 1430, column: 25, scope: !1914)
!2029 = !DILocation(line: 1430, column: 42, scope: !1914)
!2030 = !DILocation(line: 1431, column: 23, scope: !1920)
!2031 = !DILocation(line: 1431, column: 30, scope: !1920)
!2032 = !DILocalVariable(name: "self", scope: !2033, file: !1635, line: 1431, type: !1694, align: 8)
!2033 = !DILexicalBlockFile(scope: !2034, file: !1635, discriminator: 0)
!2034 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h192865ef577d63d0E", scope: !1719, file: !1718, line: 271, type: !1837, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1840, retainedNodes: !2035)
!2035 = !{!2032}
!2036 = !DILocation(line: 1431, column: 22, scope: !2033, inlinedAt: !1950)
!2037 = !DILocation(line: 1431, column: 13, scope: !1922)
!2038 = !DILocalVariable(name: "self", scope: !2039, file: !1635, line: 1431, type: !1851, align: 8)
!2039 = !DILexicalBlockFile(scope: !2040, file: !1635, discriminator: 0)
!2040 = distinct !DISubprogram(name: "next<core::ops::range::Range<usize>>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0f86d967fc233a37E", scope: !1848, file: !1847, line: 32, type: !1849, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1725, retainedNodes: !2041)
!2041 = !{!2038}
!2042 = !DILocation(line: 1431, column: 22, scope: !2039, inlinedAt: !1951)
!2043 = !DILocalVariable(name: "self", scope: !2044, file: !1635, line: 1431, type: !1810, align: 8)
!2044 = !DILexicalBlockFile(scope: !2045, file: !1635, discriminator: 0)
!2045 = distinct !DISubprogram(name: "next_back<usize>", linkageName: "_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h55d9fa6dbf6e738bE", scope: !1857, file: !412, line: 818, type: !1808, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1812, retainedNodes: !2046)
!2046 = !{!2043}
!2047 = !DILocation(line: 1431, column: 22, scope: !2044, inlinedAt: !2048)
!2048 = !DILocation(line: 33, column: 9, scope: !2040, inlinedAt: !1951)
!2049 = !DILocation(line: 1442, column: 29, scope: !1920)
!2050 = !DILocation(line: 1442, column: 17, scope: !1926)
!2051 = !DILocation(line: 1445, column: 13, scope: !1926)
!2052 = !DILocation(line: 1446, column: 16, scope: !1926)
!2053 = !DILocation(line: 1431, column: 17, scope: !1922)
!2054 = !DILocation(line: 1431, column: 17, scope: !1924)
!2055 = !DILocation(line: 1432, column: 20, scope: !1924)
!2056 = !DILocation(line: 1432, column: 42, scope: !1924)
!2057 = !DILocation(line: 1432, column: 33, scope: !1924)
!2058 = !DILocation(line: 1433, column: 38, scope: !1924)
!2059 = !DILocation(line: 1433, column: 21, scope: !1924)
!2060 = !DILocation(line: 1434, column: 24, scope: !1924)
!2061 = !DILocation(line: 1435, column: 54, scope: !1924)
!2062 = !DILocation(line: 1435, column: 25, scope: !1924)
!2063 = !DILocation(line: 1434, column: 21, scope: !1924)
!2064 = !DILocation(line: 1450, column: 43, scope: !1926)
!2065 = !DILocation(line: 1450, column: 20, scope: !1926)
!2066 = !DILocation(line: 1447, column: 17, scope: !1926)
!2067 = !DILocation(line: 1446, column: 13, scope: !1926)
!2068 = distinct !DISubprogram(name: "is_contained_in<&str>", linkageName: "_ZN4core3str7pattern7Pattern15is_contained_in17hb3e21f3a96f4b49eE", scope: !2069, file: !1635, line: 108, type: !1448, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2073, retainedNodes: !2070)
!2069 = !DINamespace(name: "Pattern", scope: !1637)
!2070 = !{!2071, !2072}
!2071 = !DILocalVariable(name: "self", arg: 1, scope: !2068, file: !1635, line: 108, type: !655)
!2072 = !DILocalVariable(name: "haystack", arg: 2, scope: !2068, file: !1635, line: 108, type: !655)
!2073 = !{!2074}
!2074 = !DITemplateTypeParameter(name: "Self", type: !655)
!2075 = !DILocation(line: 108, column: 24, scope: !2068)
!2076 = !DILocation(line: 108, column: 30, scope: !2068)
!2077 = !DILocation(line: 109, column: 9, scope: !2068)
!2078 = !DILocation(line: 110, column: 5, scope: !2068)
!2079 = !DILocalVariable(name: "self", scope: !2080, file: !1635, line: 109, type: !2084, align: 8)
!2080 = !DILexicalBlockFile(scope: !2081, file: !1635, discriminator: 0)
!2081 = distinct !DISubprogram(name: "is_some<(usize, usize)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17he07338b743213e69E", scope: !1649, file: !1226, line: 553, type: !2082, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1655, retainedNodes: !2085)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!535, !2084}
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<(usize, usize)>", baseType: !1649, size: 64, align: 64, dwarfAddressSpace: 0)
!2085 = !{!2079}
!2086 = !DILocation(line: 109, column: 9, scope: !2080, inlinedAt: !2077)
!2087 = !DILocation(line: 108, column: 5, scope: !2068)
!2088 = !DILocation(line: 110, column: 6, scope: !2068)
!2089 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods8len_utf817h2ae2e3433924ffc4E", scope: !2091, file: !2090, line: 1647, type: !2093, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2095)
!2090 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "f022f296c6d29fd4ac1963268a3eecbc")
!2091 = !DINamespace(name: "methods", scope: !2092)
!2092 = !DINamespace(name: "char", scope: !50)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{!9, !355}
!2095 = !{!2096}
!2096 = !DILocalVariable(name: "code", arg: 1, scope: !2089, file: !2090, line: 1647, type: !355)
!2097 = !DILocation(line: 1647, column: 19, scope: !2089)
!2098 = !DILocation(line: 1648, column: 8, scope: !2089)
!2099 = !DILocation(line: 1650, column: 15, scope: !2089)
!2100 = !DILocation(line: 1649, column: 9, scope: !2089)
!2101 = !DILocation(line: 1648, column: 5, scope: !2089)
!2102 = !DILocation(line: 1657, column: 2, scope: !2089)
!2103 = !DILocation(line: 1652, column: 15, scope: !2089)
!2104 = !DILocation(line: 1651, column: 9, scope: !2089)
!2105 = !DILocation(line: 1650, column: 12, scope: !2089)
!2106 = !DILocation(line: 1655, column: 9, scope: !2089)
!2107 = !DILocation(line: 1652, column: 12, scope: !2089)
!2108 = !DILocation(line: 1653, column: 9, scope: !2089)
!2109 = distinct !DISubprogram(name: "new<core::ops::range::Range<usize>>", linkageName: "_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h14fc142aaebf8b7eE", scope: !1694, file: !1847, line: 19, type: !1737, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1699, retainedNodes: !2110)
!2110 = !{!2111}
!2111 = !DILocalVariable(name: "iter", arg: 1, scope: !2109, file: !1847, line: 19, type: !1684)
!2112 = !DILocation(line: 19, column: 32, scope: !2109)
!2113 = !DILocation(line: 20, column: 9, scope: !2109)
!2114 = !DILocation(line: 21, column: 6, scope: !2109)
!2115 = distinct !DISubprogram(name: "from_size_valid_align", linkageName: "_ZN4core5alloc6layout6Layout21from_size_valid_align17hc30ce28b3d614478E", scope: !2117, file: !2116, line: 77, type: !2126, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2145)
!2116 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d0ac208ee70c69b94b07d38255a5525")
!2117 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !2118, file: !2, size: 128, align: 64, elements: !2120, templateParams: !23, identifier: "6727bf1318ffccbbbfc5e6dc0dfc8722")
!2118 = !DINamespace(name: "layout", scope: !2119)
!2119 = !DINamespace(name: "alloc", scope: !50)
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2117, file: !2, baseType: !9, size: 64, align: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2117, file: !2, baseType: !2123, size: 64, align: 64, offset: 64)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !128, file: !2, size: 64, align: 64, elements: !2124, templateParams: !23, identifier: "e392ecbcb8f7df9e6beb2b20857b4b5a")
!2124 = !{!2125}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2123, file: !2, baseType: !127, size: 64, align: 64)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{!2128, !9, !2123}
!2128 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !334, file: !2, size: 128, align: 64, elements: !2129, templateParams: !23, identifier: "61ed90a3a60bf5c9da25fda9753d7b5")
!2129 = !{!2130}
!2130 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2128, file: !2, size: 128, align: 64, elements: !2131, templateParams: !23, identifier: "e7bb3560bfa0d3445ee2359cfbf9e5fe", discriminator: !2144)
!2131 = !{!2132, !2140}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2130, file: !2, baseType: !2133, size: 128, align: 64)
!2133 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2128, file: !2, size: 128, align: 64, elements: !2134, templateParams: !2136, identifier: "1efd2a987c8fa52528b02bba0275d8c7")
!2134 = !{!2135}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2133, file: !2, baseType: !2117, size: 128, align: 64)
!2136 = !{!2137, !2138}
!2137 = !DITemplateTypeParameter(name: "T", type: !2117)
!2138 = !DITemplateTypeParameter(name: "E", type: !2139)
!2139 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !2118, file: !2, align: 8, elements: !23, identifier: "6e89e1d1b17d37435f7b87cb1d5cb26d")
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2130, file: !2, baseType: !2141, size: 128, align: 64, extraData: i64 0)
!2141 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2128, file: !2, size: 128, align: 64, elements: !2142, templateParams: !2136, identifier: "9488fb9df60d2b7e722ab2cffead9e28")
!2142 = !{!2143}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2141, file: !2, baseType: !2139, align: 8)
!2144 = !DIDerivedType(tag: DW_TAG_member, scope: !2128, file: !2, baseType: !130, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!2145 = !{!2146, !2147}
!2146 = !DILocalVariable(name: "size", arg: 1, scope: !2115, file: !2116, line: 77, type: !9)
!2147 = !DILocalVariable(name: "align", arg: 2, scope: !2115, file: !2116, line: 77, type: !2123)
!2148 = !DILocation(line: 77, column: 36, scope: !2115)
!2149 = !DILocation(line: 77, column: 49, scope: !2115)
!2150 = !DILocalVariable(name: "self", scope: !2151, file: !2116, line: 92, type: !2154, align: 8)
!2151 = !DILexicalBlockFile(scope: !2152, file: !2116, discriminator: 0)
!2152 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f572b700ff6b64fE", scope: !2154, file: !2153, line: 82, type: !2158, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2160)
!2153 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "f51cb88dd069db0b7fcd2123d03b69c9")
!2154 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !2155, file: !2, size: 64, align: 64, elements: !2156, templateParams: !23, identifier: "c6c54dffb7a9517405cc55666c804e7")
!2155 = !DINamespace(name: "nonzero", scope: !429)
!2156 = !{!2157}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2154, file: !2, baseType: !9, size: 64, align: 64)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{!9, !2154}
!2160 = !{!2150}
!2161 = !DILocation(line: 92, column: 42, scope: !2151, inlinedAt: !2162)
!2162 = !DILocation(line: 92, column: 42, scope: !2115)
!2163 = !DILocalVariable(name: "self", scope: !2164, file: !2116, line: 92, type: !2123, align: 8)
!2164 = !DILexicalBlockFile(scope: !2165, file: !2116, discriminator: 0)
!2165 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3215f1460b068ca3E", scope: !2123, file: !2166, line: 39, type: !2167, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2169)
!2166 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "681d44917f5a26aec3d3954431def51e")
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!2154, !2123}
!2169 = !{!2163}
!2170 = !DILocation(line: 92, column: 42, scope: !2164, inlinedAt: !2162)
!2171 = !{i64 1, i64 -9223372036854775807}
!2172 = !DILocalVariable(name: "n", scope: !2173, file: !2116, line: 92, type: !9, align: 8)
!2173 = !DILexicalBlockFile(scope: !2174, file: !2116, discriminator: 0)
!2174 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hd53e97a13fca019fE", scope: !2154, file: !2153, line: 56, type: !2175, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2177)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{!2154, !9}
!2177 = !{!2172, !2178}
!2178 = !DILocalVariable(name: "runtime", scope: !2179, file: !2116, line: 92, type: !2181, align: 8)
!2179 = !DILexicalBlockFile(scope: !2180, file: !2116, discriminator: 0)
!2180 = distinct !DILexicalBlock(scope: !2174, file: !451, line: 2336, column: 13)
!2181 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2182, file: !2, size: 64, align: 64, elements: !2184, templateParams: !23, identifier: "cbed2d88a1ec7b20c4ad53e8c9863d89")
!2182 = !DINamespace(name: "new_unchecked", scope: !2183)
!2183 = !DINamespace(name: "{impl#35}", scope: !2155)
!2184 = !{!2185}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !2181, file: !2, baseType: !515, size: 64, align: 64)
!2186 = !DILocation(line: 92, column: 42, scope: !2173, inlinedAt: !2187)
!2187 = !DILocation(line: 41, column: 18, scope: !2165, inlinedAt: !2162)
!2188 = !DILocation(line: 92, column: 41, scope: !2115)
!2189 = !DILocation(line: 92, column: 19, scope: !2115)
!2190 = !DILocation(line: 92, column: 12, scope: !2115)
!2191 = !DILocation(line: 97, column: 12, scope: !2115)
!2192 = !DILocation(line: 97, column: 9, scope: !2115)
!2193 = !DILocation(line: 98, column: 6, scope: !2115)
!2194 = !DILocation(line: 93, column: 20, scope: !2115)
!2195 = !{i64 0, i64 -9223372036854775807}
!2196 = distinct !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17h1a1ed60865c4d910E", scope: !2117, file: !2116, line: 416, type: !2197, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2199)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!2128, !9}
!2199 = !{!2200, !2201, !2203, !2218}
!2200 = !DILocalVariable(name: "n", arg: 1, scope: !2196, file: !2116, line: 416, type: !9)
!2201 = !DILocalVariable(name: "array_size", scope: !2202, file: !2116, line: 417, type: !9, align: 8)
!2202 = distinct !DILexicalBlock(scope: !2196, file: !2116, line: 417, column: 9)
!2203 = !DILocalVariable(name: "residual", scope: !2204, file: !2116, line: 417, type: !2205, align: 1)
!2204 = distinct !DILexicalBlock(scope: !2196, file: !2116, line: 417, column: 79)
!2205 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !334, file: !2, align: 8, elements: !2206, templateParams: !23, identifier: "2408e7ead4450472646681a937f2eed")
!2206 = !{!2207}
!2207 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2205, file: !2, align: 8, elements: !2208, templateParams: !23, identifier: "6cbcec323d74ab47f813265a09655e1e")
!2208 = !{!2209, !2214}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2207, file: !2, baseType: !2210, align: 8)
!2210 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2205, file: !2, align: 8, elements: !2211, templateParams: !2213, identifier: "40ec0a271e0cb2d34d257ba58fdead82")
!2211 = !{!2212}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2210, file: !2, baseType: !1198, align: 8)
!2213 = !{!1197, !2138}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2207, file: !2, baseType: !2215, align: 8)
!2215 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2205, file: !2, align: 8, elements: !2216, templateParams: !2213, identifier: "72611e72c15211a4d55dae520b84155f")
!2216 = !{!2217}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2215, file: !2, baseType: !2139, align: 8)
!2218 = !DILocalVariable(name: "val", scope: !2219, file: !2116, line: 417, type: !9, align: 8)
!2219 = distinct !DILexicalBlock(scope: !2196, file: !2116, line: 417, column: 26)
!2220 = !DILocation(line: 416, column: 21, scope: !2196)
!2221 = !DILocalVariable(name: "self", scope: !2222, file: !2116, line: 417, type: !2244, align: 8)
!2222 = !DILexicalBlockFile(scope: !2223, file: !2116, discriminator: 0)
!2223 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h21db178f399c50d8E", scope: !2225, file: !2224, line: 2117, type: !2226, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2252, retainedNodes: !2258)
!2224 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!2225 = !DINamespace(name: "{impl#27}", scope: !334)
!2226 = !DISubroutineType(types: !2227)
!2227 = !{!2228, !2244}
!2228 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !1231, file: !2, size: 128, align: 64, elements: !2229, templateParams: !23, identifier: "ce5c98f9de0798e97388caf7b24b4edc")
!2229 = !{!2230}
!2230 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2228, file: !2, size: 128, align: 64, elements: !2231, templateParams: !23, identifier: "6bdd8e43359c9849ce58ffeff4bb9b82", discriminator: !2243)
!2231 = !{!2232, !2239}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2230, file: !2, baseType: !2233, size: 128, align: 64, extraData: i64 0)
!2233 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2228, file: !2, size: 128, align: 64, elements: !2234, templateParams: !2236, identifier: "b6fdadee5e49b7207145efbc9b42a94a")
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2233, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2236 = !{!2237, !2238}
!2237 = !DITemplateTypeParameter(name: "B", type: !2205)
!2238 = !DITemplateTypeParameter(name: "C", type: !9)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2230, file: !2, baseType: !2240, size: 128, align: 64, extraData: i64 1)
!2240 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2228, file: !2, size: 128, align: 64, elements: !2241, templateParams: !2236, identifier: "b5889c00b354165f6e6f55dba1990157")
!2241 = !{!2242}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2240, file: !2, baseType: !2205, align: 8, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, scope: !2228, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!2244 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !334, file: !2, size: 128, align: 64, elements: !2245, templateParams: !23, identifier: "c2a525df37a04684d727d3bb68e24786")
!2245 = !{!2246}
!2246 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2244, file: !2, size: 128, align: 64, elements: !2247, templateParams: !23, identifier: "59922648ff1b36fe1aa289683c505c74", discriminator: !2257)
!2247 = !{!2248, !2253}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2246, file: !2, baseType: !2249, size: 128, align: 64, extraData: i64 0)
!2249 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2244, file: !2, size: 128, align: 64, elements: !2250, templateParams: !2252, identifier: "98a9acae3d260aa3de9b86f4a7044881")
!2250 = !{!2251}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2249, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2252 = !{!368, !2138}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2246, file: !2, baseType: !2254, size: 128, align: 64, extraData: i64 1)
!2254 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2244, file: !2, size: 128, align: 64, elements: !2255, templateParams: !2252, identifier: "3430eaa712a080f75cd3b02585f182")
!2255 = !{!2256}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2254, file: !2, baseType: !2139, align: 8, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, scope: !2244, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!2258 = !{!2221, !2259, !2262}
!2259 = !DILocalVariable(name: "v", scope: !2260, file: !2116, line: 417, type: !9, align: 8)
!2260 = !DILexicalBlockFile(scope: !2261, file: !2116, discriminator: 0)
!2261 = distinct !DILexicalBlock(scope: !2223, file: !2224, line: 2119, column: 13)
!2262 = !DILocalVariable(name: "e", scope: !2263, file: !2116, line: 417, type: !2139, align: 1)
!2263 = !DILexicalBlockFile(scope: !2264, file: !2116, discriminator: 0)
!2264 = distinct !DILexicalBlock(scope: !2223, file: !2224, line: 2120, column: 13)
!2265 = !DILocation(line: 417, column: 26, scope: !2222, inlinedAt: !2266)
!2266 = !DILocation(line: 417, column: 26, scope: !2196)
!2267 = !DILocalVariable(name: "self", scope: !2268, file: !2116, line: 417, type: !360, align: 8)
!2268 = !DILexicalBlockFile(scope: !2269, file: !2116, discriminator: 0)
!2269 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17ha824910eb3fb393eE", scope: !360, file: !1226, line: 1051, type: !2270, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2252, retainedNodes: !2272)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!2244, !360, !2139}
!2272 = !{!2267, !2273, !2274}
!2273 = !DILocalVariable(name: "err", scope: !2268, file: !2116, line: 417, type: !2139, align: 1)
!2274 = !DILocalVariable(name: "v", scope: !2275, file: !2116, line: 417, type: !9, align: 8)
!2275 = !DILexicalBlockFile(scope: !2276, file: !2116, discriminator: 0)
!2276 = distinct !DILexicalBlock(scope: !2269, file: !1226, line: 1056, column: 13)
!2277 = !DILocation(line: 417, column: 26, scope: !2268, inlinedAt: !2266)
!2278 = !DILocation(line: 417, column: 79, scope: !2204)
!2279 = !DILocalVariable(name: "residual", scope: !2280, file: !2116, line: 417, type: !2205, align: 1)
!2280 = !DILexicalBlockFile(scope: !2281, file: !2116, discriminator: 0)
!2281 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf56cfc7da2ae913cE", scope: !2282, file: !2224, line: 2132, type: !2283, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2289, retainedNodes: !2285)
!2282 = !DINamespace(name: "{impl#28}", scope: !334)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!2128, !2205, !802}
!2285 = !{!2279, !2286}
!2286 = !DILocalVariable(name: "e", scope: !2287, file: !2116, line: 417, type: !2139, align: 1)
!2287 = !DILexicalBlockFile(scope: !2288, file: !2116, discriminator: 0)
!2288 = distinct !DILexicalBlock(scope: !2281, file: !2224, line: 2134, column: 13)
!2289 = !{!2137, !2138, !2290}
!2290 = !DITemplateTypeParameter(name: "F", type: !2139)
!2291 = !DILocation(line: 417, column: 26, scope: !2280, inlinedAt: !2292)
!2292 = !DILocation(line: 417, column: 26, scope: !2204)
!2293 = !DILocation(line: 417, column: 26, scope: !2263, inlinedAt: !2266)
!2294 = !DILocation(line: 417, column: 26, scope: !2287, inlinedAt: !2292)
!2295 = !DILocation(line: 417, column: 26, scope: !2275, inlinedAt: !2266)
!2296 = !DILocation(line: 417, column: 26, scope: !2260, inlinedAt: !2266)
!2297 = !DILocation(line: 417, column: 26, scope: !2219)
!2298 = !DILocation(line: 417, column: 13, scope: !2202)
!2299 = !DILocation(line: 419, column: 51, scope: !2300, inlinedAt: !2304)
!2300 = !DILexicalBlockFile(scope: !2301, file: !2116, discriminator: 0)
!2301 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17h1dcc2cc2e0ad1f61E", scope: !129, file: !736, line: 464, type: !2302, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !23)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!9}
!2304 = !DILocation(line: 56, column: 44, scope: !2305, inlinedAt: !2308)
!2305 = distinct !DISubprogram(name: "of<u8>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h4c855716b78bc2caE", scope: !2123, file: !2166, line: 54, type: !2306, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !23)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{!2123}
!2308 = !DILocation(line: 419, column: 51, scope: !2202)
!2309 = !DILocalVariable(name: "align", scope: !2310, file: !2116, line: 419, type: !9, align: 8)
!2310 = !DILexicalBlockFile(scope: !2311, file: !2116, discriminator: 0)
!2311 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h4880a1d3b2c922b6E", scope: !2123, file: !2166, line: 29, type: !2312, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2314)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!2123, !9}
!2314 = !{!2309, !2315}
!2315 = !DILocalVariable(name: "runtime", scope: !2316, file: !2116, line: 419, type: !2318, align: 8)
!2316 = !DILexicalBlockFile(scope: !2317, file: !2116, discriminator: 0)
!2317 = distinct !DILexicalBlock(scope: !2311, file: !451, line: 2336, column: 13)
!2318 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2319, file: !2, size: 64, align: 64, elements: !2321, templateParams: !23, identifier: "a24236e50785a0359acaebf14a869a84")
!2319 = !DINamespace(name: "new_unchecked", scope: !2320)
!2320 = !DINamespace(name: "{impl#0}", scope: !128)
!2321 = !{!2322}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__align", scope: !2318, file: !2, baseType: !515, size: 64, align: 64)
!2323 = !DILocation(line: 419, column: 51, scope: !2310, inlinedAt: !2324)
!2324 = !DILocation(line: 56, column: 18, scope: !2305, inlinedAt: !2308)
!2325 = !DILocation(line: 420, column: 6, scope: !2196)
!2326 = !DILocation(line: 419, column: 9, scope: !2202)
!2327 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17hd3a30fbd2fa28250E", scope: !2329, file: !2328, line: 189, type: !2332, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2334)
!2328 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "3792fef4e5cf0c1ef2457d8c192d163d")
!2329 = !DINamespace(name: "{impl#5}", scope: !2330)
!2330 = !DINamespace(name: "impls", scope: !2331)
!2331 = !DINamespace(name: "clone", scope: !50)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!9, !515}
!2334 = !{!2335}
!2335 = !DILocalVariable(name: "self", arg: 1, scope: !2327, file: !2328, line: 189, type: !515)
!2336 = !DILocation(line: 189, column: 30, scope: !2327)
!2337 = !DILocation(line: 190, column: 25, scope: !2327)
!2338 = !DILocation(line: 191, column: 22, scope: !2327)
!2339 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h6a2c828c3ba02e68E", scope: !1174, file: !2340, line: 88, type: !2341, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2343)
!2340 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "36678af40fdc22d7150f6f91e11271b3")
!2341 = !DISubroutineType(types: !2342)
!2342 = !{!1174, !467}
!2343 = !{!2344, !2345, !2347}
!2344 = !DILocalVariable(name: "slice", arg: 1, scope: !2339, file: !2340, line: 88, type: !467)
!2345 = !DILocalVariable(name: "ptr", scope: !2346, file: !2340, line: 89, type: !57, align: 8)
!2346 = distinct !DILexicalBlock(scope: !2339, file: !2340, line: 89, column: 9)
!2347 = !DILocalVariable(name: "end", scope: !2348, file: !2340, line: 94, type: !57, align: 8)
!2348 = distinct !DILexicalBlock(scope: !2346, file: !2340, line: 94, column: 13)
!2349 = !DILocation(line: 88, column: 23, scope: !2339)
!2350 = !DILocation(line: 94, column: 17, scope: !2348)
!2351 = !DILocalVariable(name: "metadata", scope: !2352, file: !2340, line: 92, type: !7, align: 1)
!2352 = !DILexicalBlockFile(scope: !2353, file: !2340, discriminator: 0)
!2353 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h60a80bd19ba0d675E", scope: !1535, file: !1534, line: 110, type: !2354, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2356)
!2354 = !DISubroutineType(types: !2355)
!2355 = !{!57, !6, !7}
!2356 = !{!2357, !2351}
!2357 = !DILocalVariable(name: "data_address", scope: !2352, file: !2340, line: 92, type: !6, align: 8)
!2358 = !DILocation(line: 92, column: 21, scope: !2352, inlinedAt: !2359)
!2359 = !DILocation(line: 513, column: 5, scope: !2360, inlinedAt: !2363)
!2360 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h9b3e247999a2c09cE", scope: !49, file: !750, line: 512, type: !2361, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !23)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{!57}
!2363 = !DILocation(line: 39, column: 43, scope: !2364, inlinedAt: !2370)
!2364 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h1ca73e8e50d2bd62E", scope: !1506, file: !1496, line: 36, type: !2365, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2367)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!535, !57}
!2367 = !{!2368}
!2368 = !DILocalVariable(name: "self", scope: !2369, file: !2340, line: 92, type: !57, align: 8)
!2369 = !DILexicalBlockFile(scope: !2364, file: !2340, discriminator: 0)
!2370 = !DILocation(line: 92, column: 21, scope: !2346)
!2371 = !DILocation(line: 89, column: 19, scope: !2339)
!2372 = !DILocalVariable(name: "self", scope: !2373, file: !2340, line: 89, type: !467, align: 8)
!2373 = !DILexicalBlockFile(scope: !2374, file: !2340, discriminator: 0)
!2374 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h7ad8d9fb1cd417d2E", scope: !614, file: !613, line: 476, type: !2375, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2377)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{!57, !467}
!2377 = !{!2372}
!2378 = !DILocation(line: 89, column: 19, scope: !2373, inlinedAt: !2371)
!2379 = !DILocation(line: 89, column: 13, scope: !2346)
!2380 = !DILocation(line: 92, column: 21, scope: !2369, inlinedAt: !2370)
!2381 = !DILocalVariable(name: "self", scope: !2382, file: !2340, line: 92, type: !57, align: 8)
!2382 = !DILexicalBlockFile(scope: !2383, file: !2340, discriminator: 0)
!2383 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hcb3b83a506982eabE", scope: !1506, file: !1496, line: 777, type: !2384, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2386)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{!535, !57, !57}
!2386 = !{!2381, !2387}
!2387 = !DILocalVariable(name: "other", scope: !2382, file: !2340, line: 92, type: !57, align: 8)
!2388 = !DILocation(line: 92, column: 21, scope: !2382, inlinedAt: !2389)
!2389 = !DILocation(line: 39, column: 9, scope: !2364, inlinedAt: !2370)
!2390 = !DILocation(line: 92, column: 21, scope: !2391, inlinedAt: !2397)
!2391 = !DILexicalBlockFile(scope: !2392, file: !2340, discriminator: 0)
!2392 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17hbfd081ec570e6cb4E", scope: !49, file: !750, line: 538, type: !2393, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !259, retainedNodes: !2395)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!6, !9}
!2395 = !{!2396}
!2396 = !DILocalVariable(name: "addr", scope: !2391, file: !2340, line: 92, type: !9, align: 8)
!2397 = !DILocation(line: 513, column: 20, scope: !2360, inlinedAt: !2363)
!2398 = !DILocation(line: 92, column: 20, scope: !2346)
!2399 = !DILocation(line: 92, column: 13, scope: !2346)
!2400 = !DILocation(line: 94, column: 26, scope: !2346)
!2401 = !DILocation(line: 95, column: 17, scope: !2346)
!2402 = !DILocalVariable(name: "self", scope: !2403, file: !2340, line: 95, type: !57, align: 8)
!2403 = !DILexicalBlockFile(scope: !2404, file: !2340, discriminator: 0)
!2404 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h83708bca9296ffeaE", scope: !1506, file: !1496, line: 1042, type: !1507, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2405)
!2405 = !{!2402, !2406}
!2406 = !DILocalVariable(name: "count", scope: !2403, file: !2340, line: 95, type: !9, align: 8)
!2407 = !DILocation(line: 95, column: 17, scope: !2403, inlinedAt: !2401)
!2408 = !DILocation(line: 95, column: 49, scope: !2346)
!2409 = !DILocalVariable(name: "self", scope: !2410, file: !2340, line: 95, type: !57, align: 8)
!2410 = !DILexicalBlockFile(scope: !2411, file: !2340, discriminator: 0)
!2411 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h818d2f3e529d2c3eE", scope: !1506, file: !1496, line: 536, type: !1516, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2412)
!2412 = !{!2409, !2413}
!2413 = !DILocalVariable(name: "count", scope: !2410, file: !2340, line: 95, type: !271, align: 8)
!2414 = !DILocation(line: 95, column: 17, scope: !2410, inlinedAt: !2415)
!2415 = !DILocation(line: 1046, column: 9, scope: !2404, inlinedAt: !2401)
!2416 = !DILocation(line: 97, column: 17, scope: !2346)
!2417 = !DILocalVariable(name: "self", scope: !2418, file: !2340, line: 97, type: !57, align: 8)
!2418 = !DILexicalBlockFile(scope: !2419, file: !2340, discriminator: 0)
!2419 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hb58537a3bc3f7b0fE", scope: !1506, file: !1496, line: 871, type: !1507, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2420)
!2420 = !{!2417, !2421}
!2421 = !DILocalVariable(name: "count", scope: !2418, file: !2340, line: 97, type: !9, align: 8)
!2422 = !DILocation(line: 97, column: 17, scope: !2418, inlinedAt: !2416)
!2423 = !DILocation(line: 97, column: 25, scope: !2346)
!2424 = !DILocalVariable(name: "self", scope: !2425, file: !2340, line: 97, type: !57, align: 8)
!2425 = !DILexicalBlockFile(scope: !2426, file: !2340, discriminator: 0)
!2426 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0b2cc25750513e46E", scope: !1506, file: !1496, line: 453, type: !1516, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2427)
!2427 = !{!2424, !2428}
!2428 = !DILocalVariable(name: "count", scope: !2425, file: !2340, line: 97, type: !271, align: 8)
!2429 = !DILocation(line: 97, column: 17, scope: !2425, inlinedAt: !2430)
!2430 = !DILocation(line: 876, column: 18, scope: !2419, inlinedAt: !2416)
!2431 = !DILocation(line: 94, column: 23, scope: !2346)
!2432 = !DILocation(line: 100, column: 48, scope: !2348)
!2433 = !DILocalVariable(name: "ptr", scope: !2434, file: !2340, line: 100, type: !218, align: 8)
!2434 = !DILexicalBlockFile(scope: !2435, file: !2340, discriminator: 0)
!2435 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h2b684da21c9d4e5cE", scope: !53, file: !204, line: 196, type: !230, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2436)
!2436 = !{!2433}
!2437 = !DILocation(line: 100, column: 25, scope: !2434, inlinedAt: !2438)
!2438 = !DILocation(line: 100, column: 25, scope: !2348)
!2439 = !DILocation(line: 100, column: 64, scope: !2348)
!2440 = !DILocation(line: 100, column: 13, scope: !2348)
!2441 = !DILocation(line: 102, column: 6, scope: !2339)
!2442 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#0}::next::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h4faef3789a1c70e1E", scope: !1160, file: !1226, line: 923, type: !2443, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2467, retainedNodes: !2462)
!2443 = !DISubroutineType(types: !2444)
!2444 = !{!2445, !1160, !2458}
!2445 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !361, file: !2, size: 32, align: 32, elements: !2446, templateParams: !23, identifier: "182842703d13227530d78ce56a0c403e")
!2446 = !{!2447}
!2447 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2445, file: !2, size: 32, align: 32, elements: !2448, templateParams: !23, identifier: "a003d793d4429b686ac87860dc5c04de", discriminator: !2457)
!2448 = !{!2449, !2453}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2447, file: !2, baseType: !2450, size: 32, align: 32, extraData: i64 1114112)
!2450 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2445, file: !2, size: 32, align: 32, elements: !23, templateParams: !2451, identifier: "3f6dc1f1907f9d5961a7508f51084ff9")
!2451 = !{!2452}
!2452 = !DITemplateTypeParameter(name: "T", type: !357)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2447, file: !2, baseType: !2454, size: 32, align: 32)
!2454 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2445, file: !2, size: 32, align: 32, elements: !2455, templateParams: !2451, identifier: "8e96e38967905576ed8699e66885c8c4")
!2455 = !{!2456}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2454, file: !2, baseType: !357, size: 32, align: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !2, baseType: !355, size: 32, align: 32, flags: DIFlagArtificial)
!2458 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2459, file: !2, align: 8, elements: !23, identifier: "4cf36c936363045ec43ec5a0e97329aa")
!2459 = !DINamespace(name: "next", scope: !2460)
!2460 = !DINamespace(name: "{impl#0}", scope: !2461)
!2461 = !DINamespace(name: "iter", scope: !1157)
!2462 = !{!2463, !2464, !2465}
!2463 = !DILocalVariable(name: "self", arg: 1, scope: !2442, file: !1226, line: 923, type: !1160)
!2464 = !DILocalVariable(name: "f", arg: 2, scope: !2442, file: !1226, line: 923, type: !2458)
!2465 = !DILocalVariable(name: "x", scope: !2466, file: !1226, line: 929, type: !355, align: 4)
!2466 = distinct !DILexicalBlock(scope: !2442, file: !1226, line: 929, column: 13)
!2467 = !{!1167, !2468, !2469}
!2468 = !DITemplateTypeParameter(name: "U", type: !357)
!2469 = !DITemplateTypeParameter(name: "F", type: !2458)
!2470 = !DILocation(line: 923, column: 28, scope: !2442)
!2471 = !DILocation(line: 923, column: 34, scope: !2442)
!2472 = !DILocation(line: 928, column: 15, scope: !2442)
!2473 = !DILocation(line: 928, column: 9, scope: !2442)
!2474 = !DILocation(line: 930, column: 21, scope: !2442)
!2475 = !DILocation(line: 929, column: 18, scope: !2442)
!2476 = !DILocation(line: 929, column: 18, scope: !2466)
!2477 = !DILocation(line: 929, column: 29, scope: !2466)
!2478 = !{i32 0, i32 1114112}
!2479 = !DILocation(line: 929, column: 24, scope: !2466)
!2480 = !DILocation(line: 929, column: 33, scope: !2442)
!2481 = !DILocation(line: 932, column: 5, scope: !2442)
!2482 = !DILocation(line: 932, column: 6, scope: !2442)
!2483 = !{i32 0, i32 1114113}
!2484 = distinct !DISubprogram(name: "unwrap<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h1c463d819f51973fE", scope: !2485, file: !2224, line: 1101, type: !2500, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2493, retainedNodes: !2502)
!2485 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", scope: !334, file: !2, size: 320, align: 64, elements: !2486, templateParams: !23, identifier: "753e653043b02265f9cae25fde5c2e00")
!2486 = !{!2487}
!2487 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2485, file: !2, size: 320, align: 64, elements: !2488, templateParams: !23, identifier: "ce51dc77616053af4739a8709a00c48c", discriminator: !2499)
!2488 = !{!2489, !2495}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2487, file: !2, baseType: !2490, size: 320, align: 64, extraData: i64 0)
!2490 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2485, file: !2, size: 320, align: 64, elements: !2491, templateParams: !2493, identifier: "36459d4bd7f16063ceede974e05b63bf")
!2491 = !{!2492}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2490, file: !2, baseType: !1094, size: 128, align: 64, offset: 64)
!2493 = !{!1104, !2494}
!2494 = !DITemplateTypeParameter(name: "E", type: !32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2487, file: !2, baseType: !2496, size: 320, align: 64, extraData: i64 1)
!2496 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2485, file: !2, size: 320, align: 64, elements: !2497, templateParams: !2493, identifier: "d1044761f4770ef356b5dbe359d460f0")
!2497 = !{!2498}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2496, file: !2, baseType: !32, size: 256, align: 64, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, scope: !2485, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!1094, !2485, !802}
!2502 = !{!2503, !2504, !2506}
!2503 = !DILocalVariable(name: "self", arg: 1, scope: !2484, file: !2224, line: 1101, type: !2485)
!2504 = !DILocalVariable(name: "t", scope: !2505, file: !2224, line: 1106, type: !1094, align: 8)
!2505 = distinct !DILexicalBlock(scope: !2484, file: !2224, line: 1106, column: 13)
!2506 = !DILocalVariable(name: "e", scope: !2507, file: !2224, line: 1107, type: !32, align: 8)
!2507 = distinct !DILexicalBlock(scope: !2484, file: !2224, line: 1107, column: 13)
!2508 = !DILocation(line: 1101, column: 19, scope: !2484)
!2509 = !DILocation(line: 1107, column: 17, scope: !2507)
!2510 = !DILocation(line: 1105, column: 15, scope: !2484)
!2511 = !DILocation(line: 1105, column: 9, scope: !2484)
!2512 = !DILocation(line: 1106, column: 16, scope: !2484)
!2513 = !DILocation(line: 1106, column: 16, scope: !2505)
!2514 = !DILocation(line: 1109, column: 6, scope: !2484)
!2515 = !DILocation(line: 1107, column: 17, scope: !2484)
!2516 = !DILocation(line: 1107, column: 84, scope: !2507)
!2517 = !DILocation(line: 1107, column: 23, scope: !2507)
!2518 = !DILocation(line: 1107, column: 86, scope: !2484)
!2519 = !DILocation(line: 1101, column: 5, scope: !2484)
!2520 = distinct !DISubprogram(name: "assert_failed<f64, f64>", linkageName: "_ZN4core9panicking13assert_failed17h657c06880f59f018E", scope: !197, file: !2521, line: 171, type: !2522, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2542, retainedNodes: !2537)
!2521 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "89dbfc153a7177bd0202715dd5809289")
!2522 = !DISubroutineType(types: !2523)
!2523 = !{null, !196, !79, !79, !2524, !802}
!2524 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Arguments>", scope: !361, file: !2, size: 384, align: 64, elements: !2525, templateParams: !23, identifier: "91782c25c0cb4075178b67ca76527846")
!2525 = !{!2526}
!2526 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2524, file: !2, size: 384, align: 64, elements: !2527, templateParams: !23, identifier: "d3d8c93b36d851336035bb39c7913979", discriminator: !2536)
!2527 = !{!2528, !2532}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2526, file: !2, baseType: !2529, size: 384, align: 64, extraData: i64 0)
!2529 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2524, file: !2, size: 384, align: 64, elements: !23, templateParams: !2530, identifier: "94094742b636673213b46bf0a5389cae")
!2530 = !{!2531}
!2531 = !DITemplateTypeParameter(name: "T", type: !648)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2526, file: !2, baseType: !2533, size: 384, align: 64)
!2533 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2524, file: !2, size: 384, align: 64, elements: !2534, templateParams: !2530, identifier: "424137f74f76139e10918065dfb817dc")
!2534 = !{!2535}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2533, file: !2, baseType: !648, size: 384, align: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, scope: !2524, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!2537 = !{!2538, !2539, !2540, !2541}
!2538 = !DILocalVariable(name: "kind", arg: 1, scope: !2520, file: !2521, line: 172, type: !196)
!2539 = !DILocalVariable(name: "left", arg: 2, scope: !2520, file: !2521, line: 173, type: !79)
!2540 = !DILocalVariable(name: "right", arg: 3, scope: !2520, file: !2521, line: 174, type: !79)
!2541 = !DILocalVariable(name: "args", arg: 4, scope: !2520, file: !2521, line: 175, type: !2524)
!2542 = !{!405, !2543}
!2543 = !DITemplateTypeParameter(name: "U", type: !80)
!2544 = !DILocation(line: 172, column: 5, scope: !2520)
!2545 = !DILocation(line: 173, column: 5, scope: !2520)
!2546 = !DILocation(line: 174, column: 5, scope: !2520)
!2547 = !DILocation(line: 175, column: 5, scope: !2520)
!2548 = !DILocation(line: 181, column: 31, scope: !2520)
!2549 = !DILocation(line: 181, column: 38, scope: !2520)
!2550 = !DILocation(line: 181, column: 46, scope: !2520)
!2551 = !DILocation(line: 181, column: 5, scope: !2520)
!2552 = distinct !DISubprogram(name: "assert_failed<i32, i32>", linkageName: "_ZN4core9panicking13assert_failed17h9d9c44e6621e216eE", scope: !197, file: !2521, line: 171, type: !2553, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2560, retainedNodes: !2555)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{null, !196, !89, !89, !2524, !802}
!2555 = !{!2556, !2557, !2558, !2559}
!2556 = !DILocalVariable(name: "kind", arg: 1, scope: !2552, file: !2521, line: 172, type: !196)
!2557 = !DILocalVariable(name: "left", arg: 2, scope: !2552, file: !2521, line: 173, type: !89)
!2558 = !DILocalVariable(name: "right", arg: 3, scope: !2552, file: !2521, line: 174, type: !89)
!2559 = !DILocalVariable(name: "args", arg: 4, scope: !2552, file: !2521, line: 175, type: !2524)
!2560 = !{!390, !2561}
!2561 = !DITemplateTypeParameter(name: "U", type: !90)
!2562 = !DILocation(line: 172, column: 5, scope: !2552)
!2563 = !DILocation(line: 173, column: 5, scope: !2552)
!2564 = !DILocation(line: 174, column: 5, scope: !2552)
!2565 = !DILocation(line: 175, column: 5, scope: !2552)
!2566 = !DILocation(line: 181, column: 31, scope: !2552)
!2567 = !DILocation(line: 181, column: 38, scope: !2552)
!2568 = !DILocation(line: 181, column: 46, scope: !2552)
!2569 = !DILocation(line: 181, column: 5, scope: !2552)
!2570 = distinct !DISubprogram(name: "assert_test_result<()>", linkageName: "_ZN4test18assert_test_result17h06d890d4de79c7ceE", scope: !2572, file: !2571, line: 182, type: !256, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !259, retainedNodes: !2573)
!2571 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/test/src/lib.rs", directory: "", checksumkind: CSK_MD5, checksum: "762a73d08c70c6e433bc6b670465b31f")
!2572 = !DINamespace(name: "test", scope: null)
!2573 = !{!2574, !2575, !2577, !2581, !2582}
!2574 = !DILocalVariable(name: "result", arg: 1, scope: !2570, file: !2571, line: 182, type: !7)
!2575 = !DILocalVariable(name: "code", scope: !2576, file: !2571, line: 183, type: !90, align: 4)
!2576 = distinct !DILexicalBlock(scope: !2570, file: !2571, line: 183, column: 5)
!2577 = !DILocalVariable(name: "left_val", scope: !2578, file: !2571, line: 184, type: !89, align: 8)
!2578 = !DILexicalBlockFile(scope: !2579, file: !2571, discriminator: 0)
!2579 = distinct !DILexicalBlock(scope: !2576, file: !2580, line: 52, column: 13)
!2580 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "92818cc67b0fce20f16574f7676a5426")
!2581 = !DILocalVariable(name: "right_val", scope: !2578, file: !2571, line: 184, type: !89, align: 8)
!2582 = !DILocalVariable(name: "kind", scope: !2583, file: !2571, line: 184, type: !196, align: 1)
!2583 = !DILexicalBlockFile(scope: !2584, file: !2571, discriminator: 0)
!2584 = distinct !DILexicalBlock(scope: !2579, file: !2580, line: 54, column: 21)
!2585 = !DILocation(line: 182, column: 43, scope: !2570)
!2586 = !DILocation(line: 183, column: 9, scope: !2576)
!2587 = !DILocalVariable(name: "self", scope: !2588, file: !2571, line: 183, type: !300, align: 1)
!2588 = !DILexicalBlockFile(scope: !2589, file: !2571, discriminator: 0)
!2589 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217h2f3d6db67a956e8cE", scope: !300, file: !299, line: 1808, type: !311, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2590)
!2590 = !{!2587}
!2591 = !DILocation(line: 183, column: 16, scope: !2588, inlinedAt: !2592)
!2592 = !DILocation(line: 183, column: 16, scope: !2570)
!2593 = !DILocalVariable(name: "self", scope: !2594, file: !2571, line: 183, type: !323, align: 8)
!2594 = !DILexicalBlockFile(scope: !2595, file: !2571, discriminator: 0)
!2595 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217hc13213167324334dE", scope: !304, file: !320, line: 485, type: !321, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2596)
!2596 = !{!2593}
!2597 = !DILocation(line: 183, column: 16, scope: !2594, inlinedAt: !2598)
!2598 = !DILocation(line: 1809, column: 9, scope: !2589, inlinedAt: !2592)
!2599 = !DILocation(line: 184, column: 5, scope: !2576)
!2600 = !DILocation(line: 184, column: 5, scope: !2578)
!2601 = !DILocation(line: 190, column: 2, scope: !2570)
!2602 = !DILocation(line: 184, column: 5, scope: !2583)
!2603 = !DILocalVariable(name: "x", scope: !2604, file: !2571, line: 184, type: !89, align: 8)
!2604 = !DILexicalBlockFile(scope: !2605, file: !2571, discriminator: 0)
!2605 = distinct !DISubprogram(name: "new_display<i32>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h8131147725f16515E", scope: !710, file: !329, line: 318, type: !2606, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !389, retainedNodes: !2608)
!2606 = !DISubroutineType(types: !2607)
!2607 = !{!710, !89}
!2608 = !{!2603}
!2609 = !DILocation(line: 184, column: 5, scope: !2604, inlinedAt: !2610)
!2610 = !DILocation(line: 188, column: 9, scope: !2583)
!2611 = !DILocalVariable(name: "x", scope: !2612, file: !2571, line: 184, type: !89, align: 8)
!2612 = !DILexicalBlockFile(scope: !2613, file: !2571, discriminator: 0)
!2613 = distinct !DISubprogram(name: "new<i32>", linkageName: "_ZN4core3fmt10ArgumentV13new17hb9d5f6f79fc5b91cE", scope: !710, file: !329, line: 329, type: !2614, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !389, retainedNodes: !2617)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!710, !89, !2616}
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&i32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !632, size: 64, align: 64, dwarfAddressSpace: 0)
!2617 = !{!2611, !2618}
!2618 = !DILocalVariable(name: "f", scope: !2612, file: !2571, line: 184, type: !2616, align: 8)
!2619 = !DILocation(line: 184, column: 5, scope: !2612, inlinedAt: !2620)
!2620 = !DILocation(line: 319, column: 13, scope: !2605, inlinedAt: !2610)
!2621 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5bfff8f27a8cb229E", scope: !2623, file: !2622, line: 559, type: !2624, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2628, retainedNodes: !2626)
!2622 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!2623 = !DINamespace(name: "{impl#4}", scope: !1199)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{null, !2139}
!2626 = !{!2627}
!2627 = !DILocalVariable(name: "t", arg: 1, scope: !2621, file: !2622, line: 559, type: !2139)
!2628 = !{!2629}
!2629 = !DITemplateTypeParameter(name: "T", type: !2139)
!2630 = !DILocation(line: 559, column: 13, scope: !2621)
!2631 = !DILocation(line: 561, column: 6, scope: !2621)
!2632 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h278858b7010f978aE", scope: !2633, file: !2622, line: 549, type: !206, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2636, retainedNodes: !2634)
!2633 = !DINamespace(name: "{impl#3}", scope: !1199)
!2634 = !{!2635}
!2635 = !DILocalVariable(name: "self", arg: 1, scope: !2632, file: !2622, line: 549, type: !47)
!2636 = !{!2637, !2638}
!2637 = !DITemplateTypeParameter(name: "T", type: !47)
!2638 = !DITemplateTypeParameter(name: "U", type: !53)
!2639 = !DILocation(line: 549, column: 13, scope: !2632)
!2640 = !DILocation(line: 550, column: 9, scope: !2632)
!2641 = !DILocation(line: 551, column: 6, scope: !2632)
!2642 = distinct !DISubprogram(name: "report", linkageName: "_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17he2d2acc5dba4a248E", scope: !2643, file: !299, line: 2170, type: !2644, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2646)
!2643 = !DINamespace(name: "{impl#53}", scope: !301)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!300, !7}
!2646 = !{!2647}
!2647 = !DILocalVariable(name: "self", arg: 1, scope: !2642, file: !299, line: 2170, type: !7)
!2648 = !DILocation(line: 2170, column: 15, scope: !2642)
!2649 = !DILocation(line: 2172, column: 6, scope: !2642)
!2650 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd40404a44a279b2dE", scope: !2651, file: !1635, line: 939, type: !2652, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2679)
!2651 = !DINamespace(name: "{impl#28}", scope: !1637)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!2654, !655, !655}
!2654 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcher", scope: !1637, file: !2, size: 832, align: 64, elements: !2655, templateParams: !23, identifier: "c59e1ee6e28d4721f919e4909846b9ee")
!2655 = !{!2656, !2657, !2658}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !2654, file: !2, baseType: !655, size: 128, align: 64)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !2654, file: !2, baseType: !655, size: 128, align: 64, offset: 128)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "searcher", scope: !2654, file: !2, baseType: !2659, size: 576, align: 64, offset: 256)
!2659 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcherImpl", scope: !1637, file: !2, size: 576, align: 64, elements: !2660, templateParams: !23, identifier: "3f469a8d4e90a0a187cf76fe9d4ca5a")
!2660 = !{!2661}
!2661 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2659, file: !2, size: 576, align: 64, elements: !2662, templateParams: !23, identifier: "8ad619abf266fbb4ddce6536f3f85f04", discriminator: !2678)
!2662 = !{!2663, !2674}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "Empty", scope: !2661, file: !2, baseType: !2664, size: 576, align: 64, extraData: i64 0)
!2664 = !DICompositeType(tag: DW_TAG_structure_type, name: "Empty", scope: !2659, file: !2, size: 576, align: 64, elements: !2665, templateParams: !23, identifier: "efe3e3ddcdc06086d71489841919ae03")
!2665 = !{!2666}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2664, file: !2, baseType: !2667, size: 192, align: 64, offset: 64)
!2667 = !DICompositeType(tag: DW_TAG_structure_type, name: "EmptyNeedle", scope: !1637, file: !2, size: 192, align: 64, elements: !2668, templateParams: !23, identifier: "24f17b1ce38f7d7819918bfaca3d322e")
!2668 = !{!2669, !2670, !2671, !2672, !2673}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !2667, file: !2, baseType: !9, size: 64, align: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2667, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_fw", scope: !2667, file: !2, baseType: !535, size: 8, align: 8, offset: 128)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_bw", scope: !2667, file: !2, baseType: !535, size: 8, align: 8, offset: 136)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "is_finished", scope: !2667, file: !2, baseType: !535, size: 8, align: 8, offset: 144)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "TwoWay", scope: !2661, file: !2, baseType: !2675, size: 576, align: 64, extraData: i64 1)
!2675 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWay", scope: !2659, file: !2, size: 576, align: 64, elements: !2676, templateParams: !23, identifier: "f935b167f69cf7b1cbfb7879bb81123")
!2676 = !{!2677}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2675, file: !2, baseType: !1636, size: 512, align: 64, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2, baseType: !130, size: 64, align: 64, flags: DIFlagArtificial)
!2679 = !{!2680, !2681}
!2680 = !DILocalVariable(name: "self", arg: 1, scope: !2650, file: !1635, line: 939, type: !655)
!2681 = !DILocalVariable(name: "haystack", arg: 2, scope: !2650, file: !1635, line: 939, type: !655)
!2682 = !DILocation(line: 939, column: 22, scope: !2650)
!2683 = !DILocation(line: 939, column: 28, scope: !2650)
!2684 = !DILocation(line: 940, column: 9, scope: !2650)
!2685 = !DILocation(line: 941, column: 6, scope: !2650)
!2686 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN5alloc3ffi5c_str7CString3new17h7396a6d41c1bb395E", scope: !1094, file: !2687, line: 261, type: !2688, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1580, retainedNodes: !2690)
!2687 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "6e5500bcb59fd49c7b9dab08f5bff02d")
!2688 = !DISubroutineType(types: !2689)
!2689 = !{!2485, !655}
!2690 = !{!2691}
!2691 = !DILocalVariable(name: "t", arg: 1, scope: !2686, file: !2687, line: 261, type: !655)
!2692 = !DILocation(line: 261, column: 34, scope: !2686)
!2693 = !DILocation(line: 316, column: 9, scope: !2686)
!2694 = !DILocation(line: 317, column: 6, scope: !2686)
!2695 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h25e70bc17883dcaeE", scope: !39, file: !2696, line: 1204, type: !2697, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !68, retainedNodes: !2700)
!2696 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!2697 = !DISubroutineType(types: !2698)
!2698 = !{!218, !2699}
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !39, size: 64, align: 64, dwarfAddressSpace: 0)
!2700 = !{!2701, !2702}
!2701 = !DILocalVariable(name: "self", arg: 1, scope: !2695, file: !2696, line: 1204, type: !2699)
!2702 = !DILocalVariable(name: "ptr", scope: !2703, file: !2696, line: 1207, type: !218, align: 8)
!2703 = distinct !DILexicalBlock(scope: !2695, file: !2696, line: 1207, column: 9)
!2704 = !DILocation(line: 1204, column: 23, scope: !2695)
!2705 = !DILocalVariable(name: "metadata", scope: !2706, file: !2696, line: 1209, type: !7, align: 1)
!2706 = !DILexicalBlockFile(scope: !2707, file: !2696, discriminator: 0)
!2707 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h9dc2c1174c97a991E", scope: !1535, file: !1534, line: 127, type: !2708, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2711)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{!218, !2710, !7}
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!2711 = !{!2712, !2705}
!2712 = !DILocalVariable(name: "data_address", scope: !2706, file: !2696, line: 1209, type: !2710, align: 8)
!2713 = !DILocation(line: 1209, column: 21, scope: !2706, inlinedAt: !2714)
!2714 = !DILocation(line: 668, column: 5, scope: !2715, inlinedAt: !2718)
!2715 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h48511b78f8cef667E", scope: !49, file: !750, line: 667, type: !2716, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !23)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!218}
!2718 = !DILocation(line: 38, column: 41, scope: !2719, inlinedAt: !2728)
!2719 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha7a516a4780db355E", scope: !2721, file: !2720, line: 35, type: !2723, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2725)
!2720 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!2721 = !DINamespace(name: "{impl#0}", scope: !2722)
!2722 = !DINamespace(name: "mut_ptr", scope: !49)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!535, !218}
!2725 = !{!2726}
!2726 = !DILocalVariable(name: "self", scope: !2727, file: !2696, line: 1209, type: !218, align: 8)
!2727 = !DILexicalBlockFile(scope: !2719, file: !2696, discriminator: 0)
!2728 = !DILocation(line: 1209, column: 21, scope: !2703)
!2729 = !DILocation(line: 1207, column: 19, scope: !2695)
!2730 = !DILocalVariable(name: "self", scope: !2731, file: !2696, line: 1207, type: !2736, align: 8)
!2731 = !DILexicalBlockFile(scope: !2732, file: !2696, discriminator: 0)
!2732 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h1204c014cd40b5e2E", scope: !43, file: !2733, line: 223, type: !2734, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !68, retainedNodes: !2737)
!2733 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!2734 = !DISubroutineType(types: !2735)
!2735 = !{!218, !2736}
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !43, size: 64, align: 64, dwarfAddressSpace: 0)
!2737 = !{!2730}
!2738 = !DILocation(line: 1207, column: 19, scope: !2731, inlinedAt: !2729)
!2739 = !DILocalVariable(name: "self", scope: !2740, file: !2696, line: 1207, type: !47, align: 8)
!2740 = !DILexicalBlockFile(scope: !2741, file: !2696, discriminator: 0)
!2741 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h5320855f8912af5eE", scope: !47, file: !215, line: 103, type: !216, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2742)
!2742 = !{!2739}
!2743 = !DILocation(line: 1207, column: 19, scope: !2740, inlinedAt: !2744)
!2744 = !DILocation(line: 224, column: 9, scope: !2732, inlinedAt: !2729)
!2745 = !DILocalVariable(name: "self", scope: !2746, file: !2696, line: 1207, type: !53, align: 8)
!2746 = !DILexicalBlockFile(scope: !2747, file: !2696, discriminator: 0)
!2747 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2748)
!2748 = !{!2745}
!2749 = !DILocation(line: 1207, column: 19, scope: !2746, inlinedAt: !2750)
!2750 = !DILocation(line: 104, column: 9, scope: !2741, inlinedAt: !2744)
!2751 = !DILocation(line: 1207, column: 13, scope: !2703)
!2752 = !DILocation(line: 1209, column: 21, scope: !2727, inlinedAt: !2728)
!2753 = !DILocalVariable(name: "self", scope: !2754, file: !2696, line: 1209, type: !218, align: 8)
!2754 = !DILexicalBlockFile(scope: !2755, file: !2696, discriminator: 0)
!2755 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17ha0f1e2277ec2974cE", scope: !2721, file: !2720, line: 707, type: !2756, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2758)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!535, !218, !218}
!2758 = !{!2753, !2759}
!2759 = !DILocalVariable(name: "other", scope: !2754, file: !2696, line: 1209, type: !218, align: 8)
!2760 = !DILocation(line: 1209, column: 21, scope: !2754, inlinedAt: !2761)
!2761 = !DILocation(line: 38, column: 9, scope: !2719, inlinedAt: !2728)
!2762 = !DILocation(line: 1209, column: 21, scope: !2763, inlinedAt: !2769)
!2763 = !DILexicalBlockFile(scope: !2764, file: !2696, discriminator: 0)
!2764 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hcb8c5f0597639fd5E", scope: !49, file: !750, line: 569, type: !2765, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !259, retainedNodes: !2767)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!2710, !9}
!2767 = !{!2768}
!2768 = !DILocalVariable(name: "addr", scope: !2763, file: !2696, line: 1209, type: !9, align: 8)
!2769 = !DILocation(line: 668, column: 24, scope: !2715, inlinedAt: !2718)
!2770 = !DILocation(line: 1209, column: 20, scope: !2703)
!2771 = !DILocation(line: 1209, column: 13, scope: !2703)
!2772 = !DILocation(line: 1212, column: 6, scope: !2695)
!2773 = distinct !DISubprogram(name: "box_free<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hff0ed9975f7a7ec0E", scope: !67, file: !2774, line: 340, type: !2775, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !68, retainedNodes: !2785)
!2774 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6c7758b12bd6b7f0705d9bc90e671ea")
!2775 = !DISubroutineType(types: !2776)
!2776 = !{null, !2777, !66}
!2777 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8]>", scope: !48, file: !2, size: 128, align: 64, elements: !2778, templateParams: !59, identifier: "1d2099a8a4c8cae7160ee7e4073563b1")
!2778 = !{!2779, !2783}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2777, file: !2, baseType: !2780, size: 128, align: 64)
!2780 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !54, file: !2, size: 128, align: 64, elements: !2781, templateParams: !59, identifier: "5fc58ef498feac33c505ded838596228")
!2781 = !{!2782}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2780, file: !2, baseType: !1480, size: 128, align: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !2777, file: !2, baseType: !2784, align: 8)
!2784 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8]>", scope: !63, file: !2, align: 8, elements: !23, templateParams: !59, identifier: "a99a42a9ed7127b2f458504cb45b588")
!2785 = !{!2786, !2787, !2788, !2790, !2792}
!2786 = !DILocalVariable(name: "ptr", arg: 1, scope: !2773, file: !2774, line: 341, type: !2777)
!2787 = !DILocalVariable(name: "alloc", arg: 2, scope: !2773, file: !2774, line: 342, type: !66)
!2788 = !DILocalVariable(name: "size", scope: !2789, file: !2774, line: 345, type: !9, align: 8)
!2789 = distinct !DILexicalBlock(scope: !2773, file: !2774, line: 345, column: 9)
!2790 = !DILocalVariable(name: "align", scope: !2791, file: !2774, line: 346, type: !9, align: 8)
!2791 = distinct !DILexicalBlock(scope: !2789, file: !2774, line: 346, column: 9)
!2792 = !DILocalVariable(name: "layout", scope: !2793, file: !2774, line: 347, type: !2117, align: 8)
!2793 = distinct !DILexicalBlock(scope: !2791, file: !2774, line: 347, column: 9)
!2794 = !DILocation(line: 341, column: 5, scope: !2773)
!2795 = !DILocation(line: 342, column: 5, scope: !2773)
!2796 = !DILocation(line: 347, column: 13, scope: !2793)
!2797 = !DILocalVariable(name: "unique", scope: !2798, file: !2774, line: 348, type: !47, align: 8)
!2798 = !DILexicalBlockFile(scope: !2799, file: !2774, discriminator: 0)
!2799 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17hb17d977b9330e67cE", scope: !205, file: !204, line: 770, type: !206, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2800)
!2800 = !{!2797}
!2801 = !DILocation(line: 348, column: 26, scope: !2798, inlinedAt: !2802)
!2802 = !DILocation(line: 348, column: 26, scope: !2793)
!2803 = !DILocalVariable(name: "pointer", scope: !2804, file: !2774, line: 348, type: !53, align: 8)
!2804 = !DILexicalBlockFile(scope: !2805, file: !2774, discriminator: 0)
!2805 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hf4cd4e66082a819fE", scope: !2806, file: !215, line: 190, type: !2807, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2809)
!2806 = !DINamespace(name: "{impl#11}", scope: !48)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!47, !53}
!2809 = !{!2803}
!2810 = !DILocation(line: 348, column: 37, scope: !2804, inlinedAt: !2811)
!2811 = !DILocation(line: 137, column: 9, scope: !2812, inlinedAt: !2820)
!2812 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h893ebcfc622b781dE", scope: !2777, file: !215, line: 136, type: !2813, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2818, retainedNodes: !2815)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!47, !2777}
!2815 = !{!2816}
!2816 = !DILocalVariable(name: "self", scope: !2817, file: !2774, line: 348, type: !2777, align: 8)
!2817 = !DILexicalBlockFile(scope: !2812, file: !2774, discriminator: 0)
!2818 = !{!60, !2819}
!2819 = !DITemplateTypeParameter(name: "U", type: !58)
!2820 = !DILocation(line: 348, column: 37, scope: !2793)
!2821 = !DILocation(line: 345, column: 32, scope: !2773)
!2822 = !DILocalVariable(name: "self", scope: !2823, file: !2774, line: 345, type: !2827, align: 8)
!2823 = !DILexicalBlockFile(scope: !2824, file: !2774, discriminator: 0)
!2824 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hcea5f316bb3efc9eE", scope: !2777, file: !215, line: 114, type: !2825, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2828)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!467, !2827}
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<[u8]>", baseType: !2777, size: 64, align: 64, dwarfAddressSpace: 0)
!2828 = !{!2822}
!2829 = !DILocation(line: 345, column: 32, scope: !2823, inlinedAt: !2821)
!2830 = !DILocalVariable(name: "self", scope: !2831, file: !2774, line: 345, type: !2835, align: 8)
!2831 = !DILexicalBlockFile(scope: !2832, file: !2774, discriminator: 0)
!2832 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h12583b505520b406E", scope: !2780, file: !204, line: 378, type: !2833, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2836)
!2833 = !DISubroutineType(types: !2834)
!2834 = !{!467, !2835}
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u8]>", baseType: !2780, size: 64, align: 64, dwarfAddressSpace: 0)
!2836 = !{!2830}
!2837 = !DILocation(line: 345, column: 32, scope: !2831, inlinedAt: !2838)
!2838 = !DILocation(line: 117, column: 18, scope: !2824, inlinedAt: !2821)
!2839 = !DILocalVariable(name: "self", scope: !2840, file: !2774, line: 345, type: !2780, align: 8)
!2840 = !DILexicalBlockFile(scope: !2841, file: !2774, discriminator: 0)
!2841 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5f44486a4de1986fE", scope: !2780, file: !204, line: 330, type: !2842, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2848)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!2844, !2780}
!2844 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !2845, templateParams: !23, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!2845 = !{!2846, !2847}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2844, file: !2, baseType: !470, size: 64, align: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2844, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2848 = !{!2839}
!2849 = !DILocation(line: 345, column: 32, scope: !2840, inlinedAt: !2850)
!2850 = !DILocation(line: 381, column: 20, scope: !2832, inlinedAt: !2838)
!2851 = !DILocation(line: 345, column: 20, scope: !2773)
!2852 = !DILocation(line: 345, column: 13, scope: !2789)
!2853 = !DILocation(line: 346, column: 38, scope: !2789)
!2854 = !DILocalVariable(name: "self", scope: !2855, file: !2774, line: 346, type: !2827, align: 8)
!2855 = !DILexicalBlockFile(scope: !2856, file: !2774, discriminator: 0)
!2856 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hcea5f316bb3efc9eE", scope: !2777, file: !215, line: 114, type: !2825, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2857)
!2857 = !{!2854}
!2858 = !DILocation(line: 346, column: 38, scope: !2855, inlinedAt: !2853)
!2859 = !DILocalVariable(name: "self", scope: !2860, file: !2774, line: 346, type: !2835, align: 8)
!2860 = !DILexicalBlockFile(scope: !2861, file: !2774, discriminator: 0)
!2861 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h12583b505520b406E", scope: !2780, file: !204, line: 378, type: !2833, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2862)
!2862 = !{!2859}
!2863 = !DILocation(line: 346, column: 38, scope: !2860, inlinedAt: !2864)
!2864 = !DILocation(line: 117, column: 18, scope: !2856, inlinedAt: !2853)
!2865 = !DILocalVariable(name: "self", scope: !2866, file: !2774, line: 346, type: !2780, align: 8)
!2866 = !DILexicalBlockFile(scope: !2867, file: !2774, discriminator: 0)
!2867 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5f44486a4de1986fE", scope: !2780, file: !204, line: 330, type: !2842, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2868)
!2868 = !{!2865}
!2869 = !DILocation(line: 346, column: 38, scope: !2866, inlinedAt: !2870)
!2870 = !DILocation(line: 381, column: 20, scope: !2861, inlinedAt: !2864)
!2871 = !DILocation(line: 346, column: 21, scope: !2789)
!2872 = !DILocation(line: 346, column: 13, scope: !2791)
!2873 = !DILocation(line: 347, column: 56, scope: !2791)
!2874 = !DILocalVariable(name: "size", scope: !2875, file: !2774, line: 347, type: !9, align: 8)
!2875 = !DILexicalBlockFile(scope: !2876, file: !2774, discriminator: 0)
!2876 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h3a9e16f4e8aa76e0E", scope: !2117, file: !2116, line: 110, type: !2877, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2879)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!2117, !9, !9}
!2879 = !{!2874, !2880}
!2880 = !DILocalVariable(name: "align", scope: !2875, file: !2774, line: 347, type: !9, align: 8)
!2881 = !DILocation(line: 347, column: 22, scope: !2875, inlinedAt: !2882)
!2882 = !DILocation(line: 347, column: 22, scope: !2791)
!2883 = !DILocation(line: 347, column: 62, scope: !2791)
!2884 = !DILocalVariable(name: "align", scope: !2885, file: !2774, line: 347, type: !9, align: 8)
!2885 = !DILexicalBlockFile(scope: !2886, file: !2774, discriminator: 0)
!2886 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h4880a1d3b2c922b6E", scope: !2123, file: !2166, line: 29, type: !2312, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !2887)
!2887 = !{!2884, !2888}
!2888 = !DILocalVariable(name: "runtime", scope: !2889, file: !2774, line: 347, type: !2318, align: 8)
!2889 = !DILexicalBlockFile(scope: !2890, file: !2774, discriminator: 0)
!2890 = distinct !DILexicalBlock(scope: !2886, file: !451, line: 2336, column: 13)
!2891 = !DILocation(line: 347, column: 22, scope: !2885, inlinedAt: !2892)
!2892 = !DILocation(line: 112, column: 40, scope: !2876, inlinedAt: !2882)
!2893 = !DILocation(line: 348, column: 37, scope: !2817, inlinedAt: !2820)
!2894 = !DILocalVariable(name: "self", scope: !2895, file: !2774, line: 348, type: !2780, align: 8)
!2895 = !DILexicalBlockFile(scope: !2896, file: !2774, discriminator: 0)
!2896 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5e218db2c17b8e25E", scope: !2780, file: !204, line: 453, type: !2897, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2818, retainedNodes: !2899)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!53, !2780}
!2899 = !{!2894}
!2900 = !DILocation(line: 348, column: 37, scope: !2895, inlinedAt: !2901)
!2901 = !DILocation(line: 137, column: 22, scope: !2812, inlinedAt: !2820)
!2902 = !DILocalVariable(name: "self", scope: !2903, file: !2774, line: 348, type: !2780, align: 8)
!2903 = !DILexicalBlockFile(scope: !2904, file: !2774, discriminator: 0)
!2904 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5f44486a4de1986fE", scope: !2780, file: !204, line: 330, type: !2842, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2905)
!2905 = !{!2902}
!2906 = !DILocation(line: 348, column: 37, scope: !2903, inlinedAt: !2907)
!2907 = !DILocation(line: 455, column: 41, scope: !2896, inlinedAt: !2901)
!2908 = !DILocalVariable(name: "ptr", scope: !2909, file: !2774, line: 348, type: !218, align: 8)
!2909 = !DILexicalBlockFile(scope: !2910, file: !2774, discriminator: 0)
!2910 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h2b684da21c9d4e5cE", scope: !53, file: !204, line: 196, type: !230, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2911)
!2911 = !{!2908}
!2912 = !DILocation(line: 348, column: 37, scope: !2909, inlinedAt: !2913)
!2913 = !DILocation(line: 455, column: 18, scope: !2896, inlinedAt: !2901)
!2914 = !DILocalVariable(name: "self", scope: !2915, file: !2774, line: 348, type: !47, align: 8)
!2915 = !DILexicalBlockFile(scope: !2916, file: !2774, discriminator: 0)
!2916 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h5320855f8912af5eE", scope: !47, file: !215, line: 103, type: !216, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2917)
!2917 = !{!2914}
!2918 = !DILocation(line: 348, column: 26, scope: !2915, inlinedAt: !2919)
!2919 = !DILocation(line: 773, column: 41, scope: !2799, inlinedAt: !2802)
!2920 = !DILocalVariable(name: "self", scope: !2921, file: !2774, line: 348, type: !53, align: 8)
!2921 = !DILexicalBlockFile(scope: !2922, file: !2774, discriminator: 0)
!2922 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2923)
!2923 = !{!2920}
!2924 = !DILocation(line: 348, column: 26, scope: !2921, inlinedAt: !2925)
!2925 = !DILocation(line: 104, column: 9, scope: !2916, inlinedAt: !2919)
!2926 = !DILocalVariable(name: "ptr", scope: !2927, file: !2774, line: 348, type: !218, align: 8)
!2927 = !DILexicalBlockFile(scope: !2928, file: !2774, discriminator: 0)
!2928 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h2b684da21c9d4e5cE", scope: !53, file: !204, line: 196, type: !230, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2929)
!2929 = !{!2926}
!2930 = !DILocation(line: 348, column: 26, scope: !2927, inlinedAt: !2931)
!2931 = !DILocation(line: 773, column: 18, scope: !2799, inlinedAt: !2802)
!2932 = !DILocation(line: 348, column: 50, scope: !2793)
!2933 = !DILocation(line: 348, column: 9, scope: !2793)
!2934 = !DILocation(line: 350, column: 1, scope: !2773)
!2935 = !DILocation(line: 340, column: 1, scope: !2773)
!2936 = !DILocation(line: 350, column: 2, scope: !2773)
!2937 = distinct !DISubprogram(name: "current_memory<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h572fdba627a57ca0E", scope: !43, file: !2733, line: 240, type: !2938, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !68, retainedNodes: !2957)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!2940, !2736}
!2940 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !361, file: !2, size: 192, align: 64, elements: !2941, templateParams: !23, identifier: "2441bf159aec13ad0ba597f59aeb1a1")
!2941 = !{!2942}
!2942 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2940, file: !2, size: 192, align: 64, elements: !2943, templateParams: !23, identifier: "d785942d6e728cf8ed28d4d1a571b7a3", discriminator: !2956)
!2943 = !{!2944, !2952}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2942, file: !2, baseType: !2945, size: 192, align: 64, extraData: i64 0)
!2945 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2940, file: !2, size: 192, align: 64, elements: !23, templateParams: !2946, identifier: "4d71821a6a04b7dadd5f931d25e98cb2")
!2946 = !{!2947}
!2947 = !DITemplateTypeParameter(name: "T", type: !2948)
!2948 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !2949, templateParams: !23, identifier: "c358a41279bc49b48121f0f71b1b3c8")
!2949 = !{!2950, !2951}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2948, file: !2, baseType: !53, size: 64, align: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2948, file: !2, baseType: !2117, size: 128, align: 64, offset: 64)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2942, file: !2, baseType: !2953, size: 192, align: 64)
!2953 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2940, file: !2, size: 192, align: 64, elements: !2954, templateParams: !2946, identifier: "3a54c5b1a06a194b358330f440d65fe5")
!2954 = !{!2955}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2953, file: !2, baseType: !2948, size: 192, align: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, scope: !2940, file: !2, baseType: !130, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!2957 = !{!2958, !2959}
!2958 = !DILocalVariable(name: "self", arg: 1, scope: !2937, file: !2733, line: 240, type: !2736)
!2959 = !DILocalVariable(name: "layout", scope: !2960, file: !2733, line: 247, type: !2117, align: 8)
!2960 = distinct !DILexicalBlock(scope: !2937, file: !2733, line: 247, column: 17)
!2961 = !DILocation(line: 240, column: 23, scope: !2937)
!2962 = !DILocalVariable(name: "self", scope: !2963, file: !2733, line: 247, type: !2128, align: 8)
!2963 = !DILexicalBlockFile(scope: !2964, file: !2733, discriminator: 0)
!2964 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17hc7493c91867ae0d7E", scope: !2128, file: !2224, line: 1520, type: !2965, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2136, retainedNodes: !2967)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{!2117, !2128, !802}
!2967 = !{!2962, !2968}
!2968 = !DILocalVariable(name: "t", scope: !2969, file: !2733, line: 247, type: !2117, align: 8)
!2969 = !DILexicalBlockFile(scope: !2970, file: !2733, discriminator: 0)
!2970 = distinct !DILexicalBlock(scope: !2964, file: !2224, line: 1523, column: 13)
!2971 = !DILocation(line: 247, column: 30, scope: !2963, inlinedAt: !2972)
!2972 = !DILocation(line: 247, column: 30, scope: !2937)
!2973 = !DILocalVariable(name: "pointer", scope: !2974, file: !2733, line: 248, type: !53, align: 8)
!2974 = !DILexicalBlockFile(scope: !2975, file: !2733, discriminator: 0)
!2975 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hf4cd4e66082a819fE", scope: !2806, file: !215, line: 190, type: !2807, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !2976)
!2976 = !{!2973}
!2977 = !DILocation(line: 248, column: 23, scope: !2974, inlinedAt: !2978)
!2978 = !DILocation(line: 137, column: 9, scope: !2979, inlinedAt: !2985)
!2979 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h159b5be56233b706E", scope: !47, file: !215, line: 136, type: !2980, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2818, retainedNodes: !2982)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!47, !47}
!2982 = !{!2983}
!2983 = !DILocalVariable(name: "self", scope: !2984, file: !2733, line: 248, type: !47, align: 8)
!2984 = !DILexicalBlockFile(scope: !2979, file: !2733, discriminator: 0)
!2985 = !DILocation(line: 248, column: 23, scope: !2960)
!2986 = !DILocation(line: 241, column: 12, scope: !2937)
!2987 = !DILocation(line: 241, column: 40, scope: !2937)
!2988 = !DILocation(line: 247, column: 49, scope: !2937)
!2989 = !DILocation(line: 242, column: 13, scope: !2937)
!2990 = !DILocation(line: 241, column: 9, scope: !2937)
!2991 = !DILocation(line: 251, column: 6, scope: !2937)
!2992 = !DILocation(line: 247, column: 30, scope: !2969, inlinedAt: !2972)
!2993 = !DILocation(line: 247, column: 21, scope: !2960)
!2994 = !DILocation(line: 248, column: 23, scope: !2984, inlinedAt: !2985)
!2995 = !DILocalVariable(name: "self", scope: !2996, file: !2733, line: 248, type: !53, align: 8)
!2996 = !DILexicalBlockFile(scope: !2997, file: !2733, discriminator: 0)
!2997 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h490d17aac206dcc4E", scope: !53, file: !204, line: 453, type: !2998, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !2818, retainedNodes: !3000)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!53, !53}
!3000 = !{!2995}
!3001 = !DILocation(line: 248, column: 23, scope: !2996, inlinedAt: !3002)
!3002 = !DILocation(line: 137, column: 22, scope: !2979, inlinedAt: !2985)
!3003 = !DILocalVariable(name: "self", scope: !3004, file: !2733, line: 248, type: !53, align: 8)
!3004 = !DILexicalBlockFile(scope: !3005, file: !2733, discriminator: 0)
!3005 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3006)
!3006 = !{!3003}
!3007 = !DILocation(line: 248, column: 23, scope: !3004, inlinedAt: !3008)
!3008 = !DILocation(line: 455, column: 41, scope: !2997, inlinedAt: !3002)
!3009 = !DILocalVariable(name: "ptr", scope: !3010, file: !2733, line: 248, type: !218, align: 8)
!3010 = !DILexicalBlockFile(scope: !3011, file: !2733, discriminator: 0)
!3011 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h2b684da21c9d4e5cE", scope: !53, file: !204, line: 196, type: !230, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3012)
!3012 = !{!3009}
!3013 = !DILocation(line: 248, column: 23, scope: !3010, inlinedAt: !3014)
!3014 = !DILocation(line: 455, column: 18, scope: !2997, inlinedAt: !3002)
!3015 = !DILocation(line: 247, column: 30, scope: !3016, inlinedAt: !3018)
!3016 = !DILexicalBlockFile(scope: !3017, file: !2733, discriminator: 0)
!3017 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17he21db96909370eb9E", scope: !255, file: !254, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!3018 = !DILocation(line: 1525, column: 32, scope: !2964, inlinedAt: !2972)
!3019 = !DILocation(line: 248, column: 22, scope: !2960)
!3020 = !DILocation(line: 248, column: 17, scope: !2960)
!3021 = distinct !DISubprogram(name: "clone", linkageName: "_ZN60_$LT$core..ffi..VaListImpl$u20$as$u20$core..clone..Clone$GT$5clone17h4fc5889bada168fbE", scope: !3022, file: !545, line: 538, type: !3023, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3026)
!3022 = !DINamespace(name: "{impl#7}", scope: !123)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!546, !3025}
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ffi::VaListImpl", baseType: !546, size: 64, align: 64, dwarfAddressSpace: 0)
!3026 = !{!3027, !3028}
!3027 = !DILocalVariable(name: "self", arg: 1, scope: !3021, file: !545, line: 538, type: !3025)
!3028 = !DILocalVariable(name: "dest", scope: !3029, file: !545, line: 539, type: !3030, align: 8)
!3029 = distinct !DILexicalBlock(scope: !3021, file: !545, line: 539, column: 9)
!3030 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::ffi::VaListImpl>", scope: !769, file: !2, size: 192, align: 64, elements: !3031, templateParams: !1078, identifier: "9f1887153d04ca1a3fe1040138492a0b")
!3031 = !{!3032, !3033}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3030, file: !2, baseType: !7, align: 8)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3030, file: !2, baseType: !3034, size: 192, align: 64)
!3034 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::ffi::VaListImpl>", scope: !774, file: !2, size: 192, align: 64, elements: !3035, templateParams: !1078, identifier: "8d3602f6d0f5a671f82e6f3352214a53")
!3035 = !{!3036}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3034, file: !2, baseType: !546, size: 192, align: 64)
!3037 = !DILocation(line: 538, column: 14, scope: !3021)
!3038 = !DILocation(line: 539, column: 13, scope: !3029)
!3039 = !DILocalVariable(name: "self", scope: !3040, file: !545, line: 543, type: !3030, align: 8)
!3040 = !DILexicalBlockFile(scope: !3041, file: !545, discriminator: 0)
!3041 = distinct !DISubprogram(name: "assume_init<core::ffi::VaListImpl>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hf693d98c11fc3685E", scope: !3030, file: !784, line: 629, type: !3042, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1078, retainedNodes: !3044)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!546, !3030, !802}
!3044 = !{!3039}
!3045 = !DILocation(line: 543, column: 13, scope: !3040, inlinedAt: !3046)
!3046 = !DILocation(line: 543, column: 13, scope: !3029)
!3047 = !DILocalVariable(name: "slot", scope: !3048, file: !545, line: 543, type: !3034, align: 8)
!3048 = !DILexicalBlockFile(scope: !3049, file: !545, discriminator: 0)
!3049 = distinct !DISubprogram(name: "into_inner<core::ffi::VaListImpl>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17ha8dbfc3a8c1da73dE", scope: !3034, file: !816, line: 88, type: !3050, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1078, retainedNodes: !3052)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!546, !3034}
!3052 = !{!3047}
!3053 = !DILocation(line: 543, column: 13, scope: !3048, inlinedAt: !3054)
!3054 = !DILocation(line: 634, column: 13, scope: !3041, inlinedAt: !3046)
!3055 = !DILocation(line: 539, column: 24, scope: !3056, inlinedAt: !3060)
!3056 = !DILexicalBlockFile(scope: !3057, file: !545, discriminator: 0)
!3057 = distinct !DISubprogram(name: "uninit<core::ffi::VaListImpl>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17haa94455434281341E", scope: !3030, file: !784, line: 320, type: !3058, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1078, retainedNodes: !23)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{!3030}
!3060 = !DILocation(line: 539, column: 24, scope: !3021)
!3061 = !DILocation(line: 542, column: 21, scope: !3029)
!3062 = !DILocalVariable(name: "self", scope: !3063, file: !545, line: 542, type: !3067, align: 8)
!3063 = !DILexicalBlockFile(scope: !3064, file: !545, discriminator: 0)
!3064 = distinct !DISubprogram(name: "as_mut_ptr<core::ffi::VaListImpl>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hf71d3508f44293afE", scope: !3030, file: !784, line: 574, type: !3065, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1078, retainedNodes: !3068)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{!1075, !3067}
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::ffi::VaListImpl>", baseType: !3030, size: 64, align: 64, dwarfAddressSpace: 0)
!3068 = !{!3062}
!3069 = !DILocation(line: 542, column: 21, scope: !3063, inlinedAt: !3061)
!3070 = !DILocation(line: 542, column: 13, scope: !3029)
!3071 = !DILocation(line: 545, column: 6, scope: !3021)
!3072 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17had23d52f6a466459E", scope: !3073, file: !2774, line: 246, type: !3074, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3077)
!3073 = !DINamespace(name: "{impl#1}", scope: !67)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{null, !3076, !53, !2117}
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !66, size: 64, align: 64, dwarfAddressSpace: 0)
!3077 = !{!3078, !3079, !3080}
!3078 = !DILocalVariable(name: "self", arg: 1, scope: !3072, file: !2774, line: 246, type: !3076)
!3079 = !DILocalVariable(name: "ptr", arg: 2, scope: !3072, file: !2774, line: 246, type: !53)
!3080 = !DILocalVariable(name: "layout", arg: 3, scope: !3072, file: !2774, line: 246, type: !2117)
!3081 = !DILocation(line: 246, column: 26, scope: !3072)
!3082 = !DILocation(line: 246, column: 33, scope: !3072)
!3083 = !DILocation(line: 246, column: 51, scope: !3072)
!3084 = !DILocalVariable(name: "layout", scope: !3085, file: !2774, line: 250, type: !2117, align: 8)
!3085 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h606394c27337623dE", scope: !67, file: !2774, line: 112, type: !3086, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3088)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{null, !218, !2117}
!3088 = !{!3089, !3084}
!3089 = !DILocalVariable(name: "ptr", scope: !3085, file: !2774, line: 250, type: !218, align: 8)
!3090 = !DILocation(line: 250, column: 22, scope: !3085, inlinedAt: !3091)
!3091 = !DILocation(line: 250, column: 22, scope: !3072)
!3092 = !DILocalVariable(name: "self", scope: !3093, file: !2774, line: 250, type: !2154, align: 8)
!3093 = !DILexicalBlockFile(scope: !3094, file: !2774, discriminator: 0)
!3094 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f572b700ff6b64fE", scope: !2154, file: !2153, line: 82, type: !2158, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3095)
!3095 = !{!3092}
!3096 = !DILocation(line: 250, column: 22, scope: !3093, inlinedAt: !3097)
!3097 = !DILocation(line: 131, column: 9, scope: !3098, inlinedAt: !3105)
!3098 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h9502b7e94cb3d614E", scope: !2117, file: !2116, line: 130, type: !3099, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3102)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!9, !3101}
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !2117, size: 64, align: 64, dwarfAddressSpace: 0)
!3102 = !{!3103}
!3103 = !DILocalVariable(name: "self", scope: !3104, file: !2774, line: 250, type: !3101, align: 8)
!3104 = !DILexicalBlockFile(scope: !3098, file: !2774, discriminator: 0)
!3105 = !DILocation(line: 113, column: 49, scope: !3085, inlinedAt: !3091)
!3106 = !DILocalVariable(name: "self", scope: !3107, file: !2774, line: 250, type: !2123, align: 8)
!3107 = !DILexicalBlockFile(scope: !3108, file: !2774, discriminator: 0)
!3108 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3215f1460b068ca3E", scope: !2123, file: !2166, line: 39, type: !2167, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3109)
!3109 = !{!3106}
!3110 = !DILocation(line: 250, column: 22, scope: !3107, inlinedAt: !3097)
!3111 = !DILocation(line: 247, column: 12, scope: !3072)
!3112 = !DILocalVariable(name: "self", scope: !3113, file: !2774, line: 247, type: !3101, align: 8)
!3113 = !DILexicalBlockFile(scope: !3114, file: !2774, discriminator: 0)
!3114 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h0e1c672f81ae0f05E", scope: !2117, file: !2116, line: 120, type: !3099, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3115)
!3115 = !{!3112}
!3116 = !DILocation(line: 247, column: 12, scope: !3113, inlinedAt: !3111)
!3117 = !DILocation(line: 247, column: 9, scope: !3072)
!3118 = !DILocation(line: 250, column: 30, scope: !3072)
!3119 = !DILocalVariable(name: "self", scope: !3120, file: !2774, line: 250, type: !53, align: 8)
!3120 = !DILexicalBlockFile(scope: !3121, file: !2774, discriminator: 0)
!3121 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3122)
!3122 = !{!3119}
!3123 = !DILocation(line: 250, column: 30, scope: !3120, inlinedAt: !3118)
!3124 = !DILocation(line: 250, column: 44, scope: !3072)
!3125 = !DILocalVariable(name: "self", scope: !3126, file: !2774, line: 250, type: !3101, align: 8)
!3126 = !DILexicalBlockFile(scope: !3127, file: !2774, discriminator: 0)
!3127 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h0e1c672f81ae0f05E", scope: !2117, file: !2116, line: 120, type: !3099, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3128)
!3128 = !{!3125}
!3129 = !DILocation(line: 250, column: 22, scope: !3126, inlinedAt: !3130)
!3130 = !DILocation(line: 113, column: 34, scope: !3085, inlinedAt: !3091)
!3131 = !DILocation(line: 250, column: 22, scope: !3104, inlinedAt: !3105)
!3132 = !DILocalVariable(name: "n", scope: !3133, file: !2774, line: 250, type: !9, align: 8)
!3133 = !DILexicalBlockFile(scope: !3134, file: !2774, discriminator: 0)
!3134 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17hd53e97a13fca019fE", scope: !2154, file: !2153, line: 56, type: !2175, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3135)
!3135 = !{!3132, !3136}
!3136 = !DILocalVariable(name: "runtime", scope: !3137, file: !2774, line: 250, type: !2181, align: 8)
!3137 = !DILexicalBlockFile(scope: !3138, file: !2774, discriminator: 0)
!3138 = distinct !DILexicalBlock(scope: !3134, file: !451, line: 2336, column: 13)
!3139 = !DILocation(line: 250, column: 22, scope: !3133, inlinedAt: !3140)
!3140 = !DILocation(line: 41, column: 18, scope: !3108, inlinedAt: !3097)
!3141 = !DILocation(line: 252, column: 6, scope: !3072)
!3142 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN64_$LT$core..ffi..VaList$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h06a960b63165b6c6E", scope: !3143, file: !545, line: 445, type: !3144, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3147)
!3143 = !DINamespace(name: "{impl#3}", scope: !123)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{!564, !3146}
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ffi::VaList", baseType: !561, size: 64, align: 64, dwarfAddressSpace: 0)
!3147 = !{!3148}
!3148 = !DILocalVariable(name: "self", arg: 1, scope: !3142, file: !545, line: 445, type: !3146)
!3149 = !DILocation(line: 445, column: 18, scope: !3142)
!3150 = !DILocation(line: 446, column: 9, scope: !3142)
!3151 = !DILocation(line: 447, column: 6, scope: !3142)
!3152 = distinct !DISubprogram(name: "drop", linkageName: "_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4267592d6ad554dbE", scope: !3153, file: !2687, line: 701, type: !3154, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3157)
!3153 = !DINamespace(name: "{impl#2}", scope: !33)
!3154 = !DISubroutineType(types: !3155)
!3155 = !{null, !3156}
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::ffi::c_str::CString", baseType: !1094, size: 64, align: 64, dwarfAddressSpace: 0)
!3157 = !{!3158}
!3158 = !DILocalVariable(name: "self", arg: 1, scope: !3152, file: !2687, line: 701, type: !3156)
!3159 = !DILocation(line: 701, column: 13, scope: !3152)
!3160 = !DILocation(line: 703, column: 14, scope: !3152)
!3161 = !DILocalVariable(name: "self", scope: !3162, file: !2687, line: 703, type: !3167, align: 8)
!3162 = !DILexicalBlockFile(scope: !3163, file: !2687, discriminator: 0)
!3163 = distinct !DISubprogram(name: "get_unchecked_mut<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hc2ceb8acd45fe9dfE", scope: !614, file: !613, line: 436, type: !3164, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1415, retainedNodes: !3171)
!3164 = !DISubroutineType(types: !3165)
!3165 = !{!3166, !3167, !9}
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !58, size: 64, align: 64, dwarfAddressSpace: 0)
!3167 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 128, align: 64, elements: !3168, templateParams: !23, identifier: "188333407bebfa65121ceca786627665")
!3168 = !{!3169, !3170}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3167, file: !2, baseType: !470, size: 64, align: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3167, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3171 = !{!3161, !3172}
!3172 = !DILocalVariable(name: "index", scope: !3162, file: !2687, line: 703, type: !9, align: 8)
!3173 = !DILocation(line: 703, column: 14, scope: !3162, inlinedAt: !3160)
!3174 = !DILocalVariable(name: "slice", scope: !3175, file: !2687, line: 703, type: !2844, align: 8)
!3175 = !DILexicalBlockFile(scope: !3176, file: !2687, discriminator: 0)
!3176 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hbb3562088fa05168E", scope: !3178, file: !3177, line: 231, type: !3180, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3182)
!3177 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!3178 = !DINamespace(name: "{impl#2}", scope: !3179)
!3179 = !DINamespace(name: "index", scope: !615)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!218, !9, !2844}
!3182 = !{!3183, !3174, !3184}
!3183 = !DILocalVariable(name: "self", scope: !3175, file: !2687, line: 703, type: !9, align: 8)
!3184 = !DILocalVariable(name: "runtime", scope: !3185, file: !2687, line: 703, type: !3187, align: 8)
!3185 = !DILexicalBlockFile(scope: !3186, file: !2687, discriminator: 0)
!3186 = distinct !DILexicalBlock(scope: !3176, file: !451, line: 2336, column: 13)
!3187 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !3188, file: !2, size: 128, align: 64, elements: !3189, templateParams: !23, identifier: "d62b7ba1fd49927eee591e95c4576f60")
!3188 = !DINamespace(name: "get_unchecked_mut", scope: !3178)
!3189 = !{!3190, !3191}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !3187, file: !2, baseType: !515, size: 64, align: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !3187, file: !2, baseType: !3192, size: 64, align: 64, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [u8]", baseType: !2844, size: 64, align: 64, dwarfAddressSpace: 0)
!3193 = !DILocation(line: 703, column: 14, scope: !3175, inlinedAt: !3194)
!3194 = !DILocation(line: 443, column: 24, scope: !3163, inlinedAt: !3160)
!3195 = !DILocalVariable(name: "self", scope: !3196, file: !2687, line: 703, type: !2844, align: 8)
!3196 = !DILexicalBlockFile(scope: !3197, file: !2687, discriminator: 0)
!3197 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h4b9dcda79f63243fE", scope: !3198, file: !2720, line: 1778, type: !3199, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3201)
!3198 = !DINamespace(name: "{impl#1}", scope: !2722)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!218, !2844}
!3201 = !{!3195}
!3202 = !DILocation(line: 703, column: 14, scope: !3196, inlinedAt: !3203)
!3203 = !DILocation(line: 235, column: 13, scope: !3176, inlinedAt: !3194)
!3204 = !DILocalVariable(name: "self", scope: !3205, file: !2687, line: 703, type: !218, align: 8)
!3205 = !DILexicalBlockFile(scope: !3206, file: !2687, discriminator: 0)
!3206 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h2dbfadf25894734eE", scope: !2721, file: !2720, line: 985, type: !3207, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3209)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!218, !218, !9}
!3209 = !{!3204, !3210}
!3210 = !DILocalVariable(name: "count", scope: !3205, file: !2687, line: 703, type: !9, align: 8)
!3211 = !DILocation(line: 703, column: 14, scope: !3205, inlinedAt: !3203)
!3212 = !DILocalVariable(name: "self", scope: !3213, file: !2687, line: 703, type: !218, align: 8)
!3213 = !DILexicalBlockFile(scope: !3214, file: !2687, discriminator: 0)
!3214 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hf304002ffdecbd9dE", scope: !2721, file: !2720, line: 465, type: !3215, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3217)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!218, !218, !271}
!3217 = !{!3212, !3218}
!3218 = !DILocalVariable(name: "count", scope: !3213, file: !2687, line: 703, type: !271, align: 8)
!3219 = !DILocation(line: 703, column: 14, scope: !3213, inlinedAt: !3220)
!3220 = !DILocation(line: 990, column: 18, scope: !3206, inlinedAt: !3203)
!3221 = !DILocation(line: 703, column: 13, scope: !3152)
!3222 = !DILocation(line: 705, column: 6, scope: !3152)
!3223 = distinct !DISubprogram(name: "deref", linkageName: "_ZN70_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h637ba92ac4ae7af3E", scope: !3224, file: !2687, line: 713, type: !3225, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3228)
!3224 = !DINamespace(name: "{impl#3}", scope: !33)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!455, !3227}
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::CString", baseType: !1094, size: 64, align: 64, dwarfAddressSpace: 0)
!3228 = !{!3229}
!3229 = !DILocalVariable(name: "self", arg: 1, scope: !3223, file: !2687, line: 713, type: !3227)
!3230 = !DILocation(line: 713, column: 14, scope: !3223)
!3231 = !DILocation(line: 714, column: 54, scope: !3223)
!3232 = !DILocalVariable(name: "self", scope: !3233, file: !2687, line: 714, type: !3227, align: 8)
!3233 = distinct !DISubprogram(name: "as_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17hb7a87575645a3e7eE", scope: !1094, file: !2687, line: 561, type: !3234, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3236)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!467, !3227}
!3236 = !{!3232}
!3237 = !DILocation(line: 714, column: 54, scope: !3233, inlinedAt: !3231)
!3238 = !DILocalVariable(name: "bytes", scope: !3239, file: !2687, line: 714, type: !467, align: 8)
!3239 = !DILexicalBlockFile(scope: !3240, file: !2687, discriminator: 0)
!3240 = distinct !DISubprogram(name: "from_bytes_with_nul_unchecked", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17h4b384a334d167bd1E", scope: !459, file: !602, line: 389, type: !473, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3241)
!3241 = !{!3238}
!3242 = !DILocation(line: 714, column: 18, scope: !3239, inlinedAt: !3243)
!3243 = !DILocation(line: 714, column: 18, scope: !3223)
!3244 = !DILocation(line: 715, column: 6, scope: !3223)
!3245 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf355b8d3bd7b28f5E", scope: !3246, file: !2696, line: 2915, type: !3247, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !68, retainedNodes: !3249)
!3246 = !DINamespace(name: "{impl#28}", scope: !40)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{null, !2699}
!3249 = !{!3250}
!3250 = !DILocalVariable(name: "self", arg: 1, scope: !3245, file: !2696, line: 2915, type: !2699)
!3251 = !DILocation(line: 2915, column: 13, scope: !3245)
!3252 = !DILocation(line: 2920, column: 62, scope: !3245)
!3253 = !DILocalVariable(name: "data", scope: !3254, file: !2696, line: 2920, type: !218, align: 8)
!3254 = !DILexicalBlockFile(scope: !3255, file: !2696, discriminator: 0)
!3255 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h8f040740e42036cdE", scope: !49, file: !750, line: 727, type: !3256, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3258)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!2844, !218, !9}
!3258 = !{!3253, !3259}
!3259 = !DILocalVariable(name: "len", scope: !3254, file: !2696, line: 2920, type: !9, align: 8)
!3260 = !DILocation(line: 2920, column: 32, scope: !3254, inlinedAt: !3261)
!3261 = !DILocation(line: 2920, column: 32, scope: !3245)
!3262 = !DILocation(line: 2920, column: 81, scope: !3245)
!3263 = !DILocalVariable(name: "self", scope: !3264, file: !2696, line: 2920, type: !218, align: 8)
!3264 = !DILexicalBlockFile(scope: !3265, file: !2696, discriminator: 0)
!3265 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hccf7dec8ef3dd391E", scope: !2721, file: !2720, line: 45, type: !3266, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1557, retainedNodes: !3268)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!2710, !218}
!3268 = !{!3263}
!3269 = !DILocation(line: 2920, column: 32, scope: !3264, inlinedAt: !3270)
!3270 = !DILocation(line: 728, column: 24, scope: !3255, inlinedAt: !3261)
!3271 = !DILocalVariable(name: "data_address", scope: !3272, file: !2696, line: 2920, type: !2710, align: 8)
!3272 = !DILexicalBlockFile(scope: !3273, file: !2696, discriminator: 0)
!3273 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h1d266c9755291561E", scope: !1535, file: !1534, line: 127, type: !3274, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3276)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{!2844, !2710, !9}
!3276 = !{!3271, !3277}
!3277 = !DILocalVariable(name: "metadata", scope: !3272, file: !2696, line: 2920, type: !9, align: 8)
!3278 = !DILocation(line: 2920, column: 32, scope: !3272, inlinedAt: !3279)
!3279 = !DILocation(line: 728, column: 5, scope: !3255, inlinedAt: !3261)
!3280 = !DILocation(line: 2920, column: 13, scope: !3245)
!3281 = !DILocation(line: 2923, column: 6, scope: !3245)
!3282 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17heeb6b4d4f761f61aE", scope: !3178, file: !3177, line: 207, type: !3283, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3285)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!1247, !9, !467}
!3285 = !{!3286, !3287}
!3286 = !DILocalVariable(name: "self", arg: 1, scope: !3282, file: !3177, line: 207, type: !9)
!3287 = !DILocalVariable(name: "slice", arg: 2, scope: !3282, file: !3177, line: 207, type: !467)
!3288 = !DILocation(line: 207, column: 12, scope: !3282)
!3289 = !DILocation(line: 207, column: 18, scope: !3282)
!3290 = !DILocation(line: 209, column: 12, scope: !3282)
!3291 = !DILocation(line: 209, column: 87, scope: !3282)
!3292 = !DILocation(line: 209, column: 9, scope: !3282)
!3293 = !DILocation(line: 209, column: 49, scope: !3282)
!3294 = !DILocalVariable(name: "self", scope: !3295, file: !3177, line: 209, type: !9, align: 8)
!3295 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hfbecf90d313fbd8eE", scope: !3178, file: !3177, line: 219, type: !3296, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3298)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!57, !9, !1480}
!3298 = !{!3294, !3299, !3300}
!3299 = !DILocalVariable(name: "slice", scope: !3295, file: !3177, line: 209, type: !1480, align: 8)
!3300 = !DILocalVariable(name: "runtime", scope: !3301, file: !3177, line: 209, type: !3303, align: 8)
!3301 = !DILexicalBlockFile(scope: !3302, file: !3177, discriminator: 0)
!3302 = distinct !DILexicalBlock(scope: !3295, file: !451, line: 2336, column: 13)
!3303 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !3304, file: !2, size: 128, align: 64, elements: !3305, templateParams: !23, identifier: "7104d3ced1030246c65aea384aa33b26")
!3304 = !DINamespace(name: "get_unchecked", scope: !3178)
!3305 = !{!3306, !3307}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !3303, file: !2, baseType: !515, size: 64, align: 64)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !3303, file: !2, baseType: !3308, size: 64, align: 64, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const [u8]", baseType: !1480, size: 64, align: 64, dwarfAddressSpace: 0)
!3309 = !DILocation(line: 209, column: 49, scope: !3295, inlinedAt: !3293)
!3310 = !DILocation(line: 209, column: 68, scope: !3282)
!3311 = !DILocalVariable(name: "self", scope: !3312, file: !3177, line: 209, type: !1480, align: 8)
!3312 = !DILexicalBlockFile(scope: !3313, file: !3177, discriminator: 0)
!3313 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1feaa2db29be430dE", scope: !1497, file: !1496, line: 1385, type: !1499, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3314)
!3314 = !{!3311}
!3315 = !DILocation(line: 209, column: 49, scope: !3312, inlinedAt: !3316)
!3316 = !DILocation(line: 226, column: 13, scope: !3295, inlinedAt: !3293)
!3317 = !DILocalVariable(name: "self", scope: !3318, file: !3177, line: 209, type: !57, align: 8)
!3318 = !DILexicalBlockFile(scope: !3319, file: !3177, discriminator: 0)
!3319 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hb58537a3bc3f7b0fE", scope: !1506, file: !1496, line: 871, type: !1507, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3320)
!3320 = !{!3317, !3321}
!3321 = !DILocalVariable(name: "count", scope: !3318, file: !3177, line: 209, type: !9, align: 8)
!3322 = !DILocation(line: 209, column: 49, scope: !3318, inlinedAt: !3316)
!3323 = !DILocalVariable(name: "self", scope: !3324, file: !3177, line: 209, type: !57, align: 8)
!3324 = !DILexicalBlockFile(scope: !3325, file: !3177, discriminator: 0)
!3325 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h0b2cc25750513e46E", scope: !1506, file: !1496, line: 453, type: !1516, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3326)
!3326 = !{!3323, !3327}
!3327 = !DILocalVariable(name: "count", scope: !3324, file: !3177, line: 209, type: !271, align: 8)
!3328 = !DILocation(line: 209, column: 49, scope: !3324, inlinedAt: !3329)
!3329 = !DILocation(line: 876, column: 18, scope: !3319, inlinedAt: !3316)
!3330 = !DILocation(line: 209, column: 42, scope: !3282)
!3331 = !DILocation(line: 210, column: 6, scope: !3282)
!3332 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1c28ae7813adc08cE", scope: !3333, file: !2733, line: 477, type: !3334, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !68, retainedNodes: !3337)
!3333 = !DINamespace(name: "{impl#3}", scope: !44)
!3334 = !DISubroutineType(types: !3335)
!3335 = !{null, !3336}
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !43, size: 64, align: 64, dwarfAddressSpace: 0)
!3337 = !{!3338, !3339, !3341}
!3338 = !DILocalVariable(name: "self", arg: 1, scope: !3332, file: !2733, line: 477, type: !3336)
!3339 = !DILocalVariable(name: "ptr", scope: !3340, file: !2733, line: 478, type: !53, align: 8)
!3340 = distinct !DILexicalBlock(scope: !3332, file: !2733, line: 478, column: 60)
!3341 = !DILocalVariable(name: "layout", scope: !3340, file: !2733, line: 478, type: !2117, align: 8)
!3342 = !DILocation(line: 477, column: 13, scope: !3332)
!3343 = !DILocation(line: 478, column: 38, scope: !3340)
!3344 = !DILocation(line: 478, column: 16, scope: !3340)
!3345 = !DILocation(line: 478, column: 22, scope: !3340)
!3346 = !DILocation(line: 478, column: 27, scope: !3340)
!3347 = !DILocation(line: 479, column: 22, scope: !3340)
!3348 = !DILocation(line: 481, column: 6, scope: !3332)
!3349 = !DILocation(line: 478, column: 9, scope: !3332)
!3350 = distinct !DISubprogram(name: "next_match", linkageName: "_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h26c97d8fb1832ad5E", scope: !3351, file: !1635, line: 1094, type: !3352, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3355)
!3351 = !DINamespace(name: "{impl#30}", scope: !1637)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!1649, !3354}
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::StrSearcher", baseType: !2654, size: 64, align: 64, dwarfAddressSpace: 0)
!3355 = !{!3356, !3357, !3359, !3360, !3362}
!3356 = !DILocalVariable(name: "self", arg: 1, scope: !3350, file: !1635, line: 1094, type: !3354)
!3357 = !DILocalVariable(name: "a", scope: !3358, file: !1635, line: 1098, type: !9, align: 8)
!3358 = distinct !DILexicalBlock(scope: !3350, file: !1635, line: 1098, column: 21)
!3359 = !DILocalVariable(name: "b", scope: !3358, file: !1635, line: 1098, type: !9, align: 8)
!3360 = !DILocalVariable(name: "searcher", scope: !3361, file: !1635, line: 1103, type: !1666, align: 8)
!3361 = distinct !DILexicalBlock(scope: !3350, file: !1635, line: 1103, column: 13)
!3362 = !DILocalVariable(name: "is_long", scope: !3363, file: !1635, line: 1104, type: !535, align: 1)
!3363 = distinct !DILexicalBlock(scope: !3361, file: !1635, line: 1104, column: 17)
!3364 = !DILocation(line: 1094, column: 19, scope: !3350)
!3365 = !DILocation(line: 1095, column: 15, scope: !3350)
!3366 = !DILocation(line: 1095, column: 9, scope: !3350)
!3367 = !DILocation(line: 1096, column: 43, scope: !3350)
!3368 = !DILocation(line: 1103, column: 37, scope: !3350)
!3369 = !DILocation(line: 1103, column: 37, scope: !3361)
!3370 = !DILocation(line: 1104, column: 31, scope: !3361)
!3371 = !DILocation(line: 1104, column: 21, scope: !3363)
!3372 = !DILocation(line: 1107, column: 20, scope: !3363)
!3373 = !DILocation(line: 1115, column: 25, scope: !3363)
!3374 = !DILocalVariable(name: "self", scope: !3375, file: !1635, line: 1115, type: !655, align: 8)
!3375 = !DILexicalBlockFile(scope: !3376, file: !1635, discriminator: 0)
!3376 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3377)
!3377 = !{!3374}
!3378 = !DILocation(line: 1115, column: 25, scope: !3375, inlinedAt: !3373)
!3379 = !DILocation(line: 1109, column: 25, scope: !3363)
!3380 = !DILocalVariable(name: "self", scope: !3381, file: !1635, line: 1109, type: !655, align: 8)
!3381 = !DILexicalBlockFile(scope: !3382, file: !1635, discriminator: 0)
!3382 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3383)
!3383 = !{!3380}
!3384 = !DILocation(line: 1109, column: 25, scope: !3381, inlinedAt: !3379)
!3385 = !DILocation(line: 1110, column: 25, scope: !3363)
!3386 = !DILocalVariable(name: "self", scope: !3387, file: !1635, line: 1110, type: !655, align: 8)
!3387 = !DILexicalBlockFile(scope: !3388, file: !1635, discriminator: 0)
!3388 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3389)
!3389 = !{!3386}
!3390 = !DILocation(line: 1110, column: 25, scope: !3387, inlinedAt: !3385)
!3391 = !DILocation(line: 1108, column: 21, scope: !3363)
!3392 = !DILocation(line: 1107, column: 17, scope: !3363)
!3393 = !DILocation(line: 1120, column: 13, scope: !3350)
!3394 = !DILocation(line: 1116, column: 25, scope: !3363)
!3395 = !DILocalVariable(name: "self", scope: !3396, file: !1635, line: 1116, type: !655, align: 8)
!3396 = !DILexicalBlockFile(scope: !3397, file: !1635, discriminator: 0)
!3397 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3398)
!3398 = !{!3395}
!3399 = !DILocation(line: 1116, column: 25, scope: !3396, inlinedAt: !3394)
!3400 = !DILocation(line: 1114, column: 21, scope: !3363)
!3401 = !DILocation(line: 1122, column: 6, scope: !3350)
!3402 = !DILocation(line: 1097, column: 23, scope: !3350)
!3403 = !{i64 0, i64 3}
!3404 = !DILocation(line: 1097, column: 17, scope: !3350)
!3405 = !DILocation(line: 1098, column: 39, scope: !3350)
!3406 = !DILocation(line: 1098, column: 39, scope: !3358)
!3407 = !DILocation(line: 1098, column: 42, scope: !3350)
!3408 = !DILocation(line: 1098, column: 42, scope: !3358)
!3409 = !DILocation(line: 1098, column: 60, scope: !3358)
!3410 = !DILocation(line: 1098, column: 55, scope: !3358)
!3411 = !DILocation(line: 1, column: 1, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3350, file: !1311, discriminator: 0)
!3413 = !DILocation(line: 1099, column: 48, scope: !3350)
!3414 = !DILocation(line: 1099, column: 41, scope: !3350)
!3415 = distinct !DISubprogram(name: "next", linkageName: "_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h248c3240d52f538eE", scope: !3351, file: !1635, line: 1042, type: !3416, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3418)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!1883, !3354}
!3418 = !{!3419, !3420, !3423, !3425, !3427, !3429, !3431, !3433, !3435, !3436}
!3419 = !DILocalVariable(name: "self", arg: 1, scope: !3415, file: !1635, line: 1042, type: !3354)
!3420 = !DILocalVariable(name: "searcher", scope: !3421, file: !1635, line: 1044, type: !3422, align: 8)
!3421 = distinct !DILexicalBlock(scope: !3415, file: !1635, line: 1044, column: 13)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::EmptyNeedle", baseType: !2667, size: 64, align: 64, dwarfAddressSpace: 0)
!3423 = !DILocalVariable(name: "is_match", scope: !3424, file: !1635, line: 1049, type: !535, align: 1)
!3424 = distinct !DILexicalBlock(scope: !3421, file: !1635, line: 1049, column: 17)
!3425 = !DILocalVariable(name: "pos", scope: !3426, file: !1635, line: 1051, type: !9, align: 8)
!3426 = distinct !DILexicalBlock(scope: !3424, file: !1635, line: 1051, column: 17)
!3427 = !DILocalVariable(name: "ch", scope: !3428, file: !1635, line: 1058, type: !357, align: 4)
!3428 = distinct !DILexicalBlock(scope: !3426, file: !1635, line: 1058, column: 21)
!3429 = !DILocalVariable(name: "searcher", scope: !3430, file: !1635, line: 1064, type: !1666, align: 8)
!3430 = distinct !DILexicalBlock(scope: !3415, file: !1635, line: 1064, column: 13)
!3431 = !DILocalVariable(name: "is_long", scope: !3432, file: !1635, line: 1073, type: !535, align: 1)
!3432 = distinct !DILexicalBlock(scope: !3430, file: !1635, line: 1073, column: 17)
!3433 = !DILocalVariable(name: "a", scope: !3434, file: !1635, line: 1079, type: !9, align: 8)
!3434 = distinct !DILexicalBlock(scope: !3432, file: !1635, line: 1079, column: 21)
!3435 = !DILocalVariable(name: "b", scope: !3434, file: !1635, line: 1079, type: !9, align: 8)
!3436 = !DILocalVariable(name: "otherwise", scope: !3437, file: !1635, line: 1087, type: !1883, align: 8)
!3437 = distinct !DILexicalBlock(scope: !3432, file: !1635, line: 1087, column: 21)
!3438 = !DILocation(line: 1042, column: 13, scope: !3415)
!3439 = !DILocalVariable(name: "index", scope: !3440, file: !1635, line: 1052, type: !1469, align: 8)
!3440 = !DILexicalBlockFile(scope: !3441, file: !1635, discriminator: 0)
!3441 = distinct !DISubprogram(name: "index<core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h41938304e559f6a9E", scope: !3442, file: !1460, line: 64, type: !3443, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !3447, retainedNodes: !3445)
!3442 = !DINamespace(name: "{impl#4}", scope: !1462)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!655, !655, !1469, !802}
!3445 = !{!3446, !3439}
!3446 = !DILocalVariable(name: "self", scope: !3440, file: !1635, line: 1052, type: !655, align: 8)
!3447 = !{!3448}
!3448 = !DITemplateTypeParameter(name: "I", type: !1469)
!3449 = !DILocation(line: 1052, column: 23, scope: !3440, inlinedAt: !3450)
!3450 = !DILocation(line: 1052, column: 23, scope: !3426)
!3451 = !DILocation(line: 1079, column: 43, scope: !3434)
!3452 = !DILocation(line: 1087, column: 21, scope: !3437)
!3453 = !DILocation(line: 1043, column: 15, scope: !3415)
!3454 = !DILocation(line: 1043, column: 9, scope: !3415)
!3455 = !DILocation(line: 1044, column: 36, scope: !3415)
!3456 = !DILocation(line: 1044, column: 36, scope: !3421)
!3457 = !DILocation(line: 1045, column: 20, scope: !3421)
!3458 = !DILocation(line: 1064, column: 37, scope: !3415)
!3459 = !DILocation(line: 1064, column: 37, scope: !3430)
!3460 = !DILocation(line: 1070, column: 20, scope: !3430)
!3461 = !DILocation(line: 1070, column: 41, scope: !3430)
!3462 = !DILocalVariable(name: "self", scope: !3463, file: !1635, line: 1070, type: !655, align: 8)
!3463 = !DILexicalBlockFile(scope: !3464, file: !1635, discriminator: 0)
!3464 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hcee4a7cd50fba731E", scope: !1388, file: !1387, line: 157, type: !1423, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3465)
!3465 = !{!3462}
!3466 = !DILocation(line: 1070, column: 41, scope: !3463, inlinedAt: !3461)
!3467 = !DILocalVariable(name: "self", scope: !3468, file: !1635, line: 1070, type: !655, align: 8)
!3468 = !DILexicalBlockFile(scope: !3469, file: !1635, discriminator: 0)
!3469 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3470)
!3470 = !{!3467}
!3471 = !DILocation(line: 1070, column: 41, scope: !3468, inlinedAt: !3472)
!3472 = !DILocation(line: 158, column: 9, scope: !3464, inlinedAt: !3461)
!3473 = !DILocation(line: 1073, column: 31, scope: !3430)
!3474 = !DILocation(line: 1073, column: 21, scope: !3432)
!3475 = !DILocation(line: 1075, column: 21, scope: !3432)
!3476 = !DILocalVariable(name: "self", scope: !3477, file: !1635, line: 1075, type: !655, align: 8)
!3477 = !DILexicalBlockFile(scope: !3478, file: !1635, discriminator: 0)
!3478 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3479)
!3479 = !{!3476}
!3480 = !DILocation(line: 1075, column: 21, scope: !3477, inlinedAt: !3475)
!3481 = !DILocation(line: 1071, column: 28, scope: !3430)
!3482 = !DILocation(line: 1, column: 1, scope: !3483)
!3483 = !DILexicalBlockFile(scope: !3415, file: !1311, discriminator: 0)
!3484 = !DILocation(line: 1091, column: 6, scope: !3415)
!3485 = !DILocation(line: 1076, column: 21, scope: !3432)
!3486 = !DILocalVariable(name: "self", scope: !3487, file: !1635, line: 1076, type: !655, align: 8)
!3487 = !DILexicalBlockFile(scope: !3488, file: !1635, discriminator: 0)
!3488 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3489)
!3489 = !{!3486}
!3490 = !DILocation(line: 1076, column: 21, scope: !3487, inlinedAt: !3485)
!3491 = !DILocation(line: 1074, column: 23, scope: !3432)
!3492 = !DILocation(line: 1074, column: 17, scope: !3432)
!3493 = !DILocation(line: 1079, column: 40, scope: !3432)
!3494 = !DILocation(line: 1079, column: 40, scope: !3434)
!3495 = !DILocation(line: 1079, column: 43, scope: !3432)
!3496 = !DILocation(line: 1081, column: 25, scope: !3434)
!3497 = !DILocation(line: 1087, column: 21, scope: !3432)
!3498 = !DILocation(line: 1087, column: 34, scope: !3437)
!3499 = !DILocation(line: 1087, column: 42, scope: !3432)
!3500 = !DILocation(line: 1089, column: 13, scope: !3415)
!3501 = !DILocation(line: 1081, column: 32, scope: !3434)
!3502 = !DILocation(line: 1081, column: 63, scope: !3434)
!3503 = !DILocation(line: 1081, column: 31, scope: !3434)
!3504 = !DILocation(line: 1084, column: 54, scope: !3434)
!3505 = !DILocalVariable(name: "v1", scope: !3506, file: !1635, line: 1084, type: !9, align: 8)
!3506 = !DILexicalBlockFile(scope: !3507, file: !1635, discriminator: 0)
!3507 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hd97f7620f7792874E", scope: !116, file: !492, line: 1278, type: !416, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !3508)
!3508 = !{!3505, !3509}
!3509 = !DILocalVariable(name: "v2", scope: !3506, file: !1635, line: 1084, type: !9, align: 8)
!3510 = !DILocation(line: 1084, column: 45, scope: !3506, inlinedAt: !3511)
!3511 = !DILocation(line: 1084, column: 45, scope: !3434)
!3512 = !DILocation(line: 1084, column: 57, scope: !3434)
!3513 = !DILocation(line: 1082, column: 29, scope: !3434)
!3514 = !DILocation(line: 1084, column: 25, scope: !3434)
!3515 = !DILocation(line: 1085, column: 47, scope: !3434)
!3516 = !DILocation(line: 1085, column: 25, scope: !3434)
!3517 = !DILocation(line: 1086, column: 21, scope: !3432)
!3518 = !DILocation(line: 1049, column: 32, scope: !3421)
!3519 = !DILocation(line: 1049, column: 21, scope: !3424)
!3520 = !DILocation(line: 1050, column: 41, scope: !3424)
!3521 = !DILocation(line: 1050, column: 17, scope: !3424)
!3522 = !DILocation(line: 1051, column: 27, scope: !3424)
!3523 = !DILocation(line: 1051, column: 21, scope: !3426)
!3524 = !DILocation(line: 1052, column: 37, scope: !3426)
!3525 = !DILocation(line: 1046, column: 28, scope: !3421)
!3526 = !DILocalVariable(name: "self", scope: !3527, file: !1635, line: 1052, type: !655, align: 8)
!3527 = !DILexicalBlockFile(scope: !3528, file: !1635, discriminator: 0)
!3528 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hc9a4a6ce3d7da80eE", scope: !1388, file: !1387, line: 780, type: !3529, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3534)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!3531, !655}
!3531 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !2461, file: !2, size: 128, align: 64, elements: !3532, templateParams: !23, identifier: "bf4266910c22c2e7c5f8afbf04b94119")
!3532 = !{!3533}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !3531, file: !2, baseType: !1174, size: 128, align: 64)
!3534 = !{!3526}
!3535 = !DILocation(line: 1052, column: 23, scope: !3527, inlinedAt: !3450)
!3536 = !DILocalVariable(name: "self", scope: !3537, file: !1635, line: 1052, type: !655, align: 8)
!3537 = !DILexicalBlockFile(scope: !3538, file: !1635, discriminator: 0)
!3538 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !1388, file: !1387, line: 323, type: !1404, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3539)
!3539 = !{!3536}
!3540 = !DILocation(line: 1052, column: 23, scope: !3537, inlinedAt: !3541)
!3541 = !DILocation(line: 781, column: 23, scope: !3528, inlinedAt: !3450)
!3542 = !DILocalVariable(name: "self", scope: !3543, file: !1635, line: 1052, type: !467, align: 8)
!3543 = !DILexicalBlockFile(scope: !3544, file: !1635, discriminator: 0)
!3544 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf88437daa5727454E", scope: !614, file: !613, line: 734, type: !2341, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3545)
!3545 = !{!3542}
!3546 = !DILocation(line: 1052, column: 23, scope: !3543, inlinedAt: !3541)
!3547 = !DILocalVariable(name: "self", scope: !3548, file: !1635, line: 1052, type: !3553, align: 8)
!3548 = !DILexicalBlockFile(scope: !3549, file: !1635, discriminator: 0)
!3549 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf6181aeb5a55a459E", scope: !2460, file: !3550, line: 41, type: !3551, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3554)
!3550 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "94cf8b13d76879430c291e9ed66f42eb")
!3551 = !DISubroutineType(types: !3552)
!3552 = !{!2445, !3553}
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Chars", baseType: !3531, size: 64, align: 64, dwarfAddressSpace: 0)
!3554 = !{!3547}
!3555 = !DILocation(line: 1052, column: 23, scope: !3548, inlinedAt: !3450)
!3556 = !DILocation(line: 1053, column: 26, scope: !3426)
!3557 = !DILocation(line: 1052, column: 17, scope: !3426)
!3558 = !DILocation(line: 1053, column: 38, scope: !3426)
!3559 = !DILocation(line: 1053, column: 64, scope: !3426)
!3560 = !DILocation(line: 1063, column: 13, scope: !3415)
!3561 = !DILocation(line: 1055, column: 25, scope: !3426)
!3562 = !DILocation(line: 1056, column: 25, scope: !3426)
!3563 = !DILocation(line: 1058, column: 26, scope: !3426)
!3564 = !DILocation(line: 1058, column: 26, scope: !3428)
!3565 = !DILocation(line: 1059, column: 46, scope: !3428)
!3566 = !DILocalVariable(name: "self", scope: !3567, file: !1635, line: 1059, type: !357, align: 4)
!3567 = !DILexicalBlockFile(scope: !3568, file: !1635, discriminator: 0)
!3568 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hf91b5662acd7f46eE", scope: !3569, file: !2090, line: 593, type: !3570, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3572)
!3569 = !DINamespace(name: "{impl#0}", scope: !2091)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!9, !357}
!3572 = !{!3566}
!3573 = !DILocation(line: 1059, column: 46, scope: !3567, inlinedAt: !3565)
!3574 = !DILocation(line: 1059, column: 25, scope: !3428)
!3575 = !DILocation(line: 1060, column: 49, scope: !3428)
!3576 = !DILocation(line: 1060, column: 25, scope: !3428)
!3577 = !DILocation(line: 1061, column: 21, scope: !3426)
!3578 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17h00b9a47e61eb0887E", scope: !2459, file: !3550, line: 44, type: !3579, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3581)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!357, !2458, !355}
!3581 = !{!3582, !3583}
!3582 = !DILocalVariable(name: "ch", arg: 2, scope: !3578, file: !3550, line: 44, type: !355)
!3583 = !DILocalVariable(arg: 1, scope: !3578, file: !3550, line: 44, type: !2458)
!3584 = !DILocation(line: 44, column: 54, scope: !3578)
!3585 = !DILocation(line: 44, column: 55, scope: !3578)
!3586 = !DILocation(line: 44, column: 84, scope: !3578)
!3587 = !DILocalVariable(name: "i", scope: !3588, file: !3550, line: 44, type: !355, align: 4)
!3588 = !DILexicalBlockFile(scope: !3589, file: !3550, discriminator: 0)
!3589 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char18from_u32_unchecked17h2d67abee802f19abE", scope: !2092, file: !3590, line: 123, type: !3591, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3593)
!3590 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "d5e58489a0433b5803d74ec8aa0d2891")
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!357, !355}
!3593 = !{!3587}
!3594 = !DILocation(line: 44, column: 59, scope: !3588, inlinedAt: !3595)
!3595 = !DILocation(line: 44, column: 59, scope: !3578)
!3596 = !DILocalVariable(name: "i", scope: !3597, file: !3550, line: 44, type: !355, align: 4)
!3597 = !DILexicalBlockFile(scope: !3598, file: !3550, discriminator: 0)
!3598 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17h94198f75ef240c2cE", scope: !3600, file: !3599, line: 24, type: !3591, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3601)
!3599 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "682330ec4e366d97d021bfdf78a11076")
!3600 = !DINamespace(name: "convert", scope: !2092)
!3601 = !{!3596}
!3602 = !DILocation(line: 44, column: 59, scope: !3597, inlinedAt: !3603)
!3603 = !DILocation(line: 125, column: 14, scope: !3589, inlinedAt: !3595)
!3604 = !DILocation(line: 44, column: 58, scope: !3578)
!3605 = distinct !DISubprogram(name: "use_early_reject", linkageName: "_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb52141c99a9bb598E", scope: !3606, file: !1635, line: 1655, type: !3607, scopeLine: 1655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!3606 = !DINamespace(name: "{impl#33}", scope: !1637)
!3607 = !DISubroutineType(types: !3608)
!3608 = !{!535}
!3609 = !DILocation(line: 1657, column: 6, scope: !3605)
!3610 = distinct !DISubprogram(name: "matching", linkageName: "_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hc559d9f21266915fE", scope: !3606, file: !1635, line: 1663, type: !3611, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3613)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!1649, !9, !9}
!3613 = !{!3614, !3615}
!3614 = !DILocalVariable(name: "a", arg: 1, scope: !3610, file: !1635, line: 1663, type: !9)
!3615 = !DILocalVariable(name: "b", arg: 2, scope: !3610, file: !1635, line: 1663, type: !9)
!3616 = !DILocation(line: 1663, column: 17, scope: !3610)
!3617 = !DILocation(line: 1663, column: 27, scope: !3610)
!3618 = !DILocation(line: 1664, column: 14, scope: !3610)
!3619 = !DILocation(line: 1664, column: 9, scope: !3610)
!3620 = !DILocation(line: 1665, column: 6, scope: !3610)
!3621 = distinct !DISubprogram(name: "rejecting", linkageName: "_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hda9f75ab38cb40d1E", scope: !3606, file: !1635, line: 1659, type: !3611, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3622)
!3622 = !{!3623, !3624}
!3623 = !DILocalVariable(name: "_a", arg: 1, scope: !3621, file: !1635, line: 1659, type: !9)
!3624 = !DILocalVariable(name: "_b", arg: 2, scope: !3621, file: !1635, line: 1659, type: !9)
!3625 = !DILocation(line: 1659, column: 18, scope: !3621)
!3626 = !DILocation(line: 1659, column: 29, scope: !3621)
!3627 = !DILocation(line: 1660, column: 9, scope: !3621)
!3628 = !DILocation(line: 1661, column: 6, scope: !3621)
!3629 = distinct !DISubprogram(name: "spec_next_back<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h83600a7c9863ba0eE", scope: !3630, file: !412, line: 664, type: !1808, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !3631)
!3630 = !DINamespace(name: "{impl#2}", scope: !414)
!3631 = !{!3632}
!3632 = !DILocalVariable(name: "self", arg: 1, scope: !3629, file: !412, line: 664, type: !1810)
!3633 = !DILocation(line: 664, column: 23, scope: !3629)
!3634 = !DILocation(line: 665, column: 12, scope: !3629)
!3635 = !DILocation(line: 665, column: 25, scope: !3629)
!3636 = !DILocation(line: 670, column: 13, scope: !3629)
!3637 = !DILocation(line: 665, column: 9, scope: !3629)
!3638 = !DILocation(line: 667, column: 58, scope: !3629)
!3639 = !DILocation(line: 667, column: 33, scope: !3629)
!3640 = !DILocation(line: 667, column: 13, scope: !3629)
!3641 = !DILocation(line: 668, column: 18, scope: !3629)
!3642 = !DILocation(line: 664, column: 5, scope: !3629)
!3643 = !DILocation(line: 668, column: 13, scope: !3629)
!3644 = !DILocation(line: 672, column: 6, scope: !3629)
!3645 = distinct !DISubprogram(name: "spec_next<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hd8a51031829ef59cE", scope: !3630, file: !412, line: 620, type: !1808, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !367, retainedNodes: !3646)
!3646 = !{!3647, !3648}
!3647 = !DILocalVariable(name: "self", arg: 1, scope: !3645, file: !412, line: 620, type: !1810)
!3648 = !DILocalVariable(name: "n", scope: !3649, file: !412, line: 623, type: !9, align: 8)
!3649 = distinct !DILexicalBlock(scope: !3645, file: !412, line: 623, column: 13)
!3650 = !DILocation(line: 620, column: 18, scope: !3645)
!3651 = !DILocation(line: 621, column: 12, scope: !3645)
!3652 = !DILocation(line: 621, column: 25, scope: !3645)
!3653 = !DILocation(line: 626, column: 13, scope: !3645)
!3654 = !DILocation(line: 621, column: 9, scope: !3645)
!3655 = !DILocation(line: 623, column: 54, scope: !3645)
!3656 = !DILocation(line: 623, column: 30, scope: !3645)
!3657 = !DILocation(line: 623, column: 17, scope: !3649)
!3658 = !DILocation(line: 624, column: 31, scope: !3649)
!3659 = !DILocation(line: 624, column: 18, scope: !3649)
!3660 = !DILocation(line: 624, column: 13, scope: !3649)
!3661 = !DILocation(line: 628, column: 6, scope: !3645)
!3662 = distinct !DISubprogram(name: "use_early_reject", linkageName: "_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h0c69b4227548a848E", scope: !3663, file: !1635, line: 1675, type: !3607, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!3663 = !DINamespace(name: "{impl#34}", scope: !1637)
!3664 = !DILocation(line: 1677, column: 6, scope: !3662)
!3665 = distinct !DISubprogram(name: "matching", linkageName: "_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17he875a91c80a0f86dE", scope: !3663, file: !1635, line: 1683, type: !3666, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3668)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!1883, !9, !9}
!3668 = !{!3669, !3670}
!3669 = !DILocalVariable(name: "a", arg: 1, scope: !3665, file: !1635, line: 1683, type: !9)
!3670 = !DILocalVariable(name: "b", arg: 2, scope: !3665, file: !1635, line: 1683, type: !9)
!3671 = !DILocation(line: 1683, column: 17, scope: !3665)
!3672 = !DILocation(line: 1683, column: 27, scope: !3665)
!3673 = !DILocation(line: 1684, column: 9, scope: !3665)
!3674 = !DILocation(line: 1685, column: 6, scope: !3665)
!3675 = distinct !DISubprogram(name: "rejecting", linkageName: "_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h7964d54b180e7969E", scope: !3663, file: !1635, line: 1679, type: !3666, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3676)
!3676 = !{!3677, !3678}
!3677 = !DILocalVariable(name: "a", arg: 1, scope: !3675, file: !1635, line: 1679, type: !9)
!3678 = !DILocalVariable(name: "b", arg: 2, scope: !3675, file: !1635, line: 1679, type: !9)
!3679 = !DILocation(line: 1679, column: 18, scope: !3675)
!3680 = !DILocation(line: 1679, column: 28, scope: !3675)
!3681 = !DILocation(line: 1680, column: 9, scope: !3675)
!3682 = !DILocation(line: 1681, column: 6, scope: !3675)
!3683 = distinct !DISubprogram(name: "next<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa9da4098f8d73adE", scope: !3685, file: !3684, line: 134, type: !3686, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3688)
!3684 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "41903112aef4079fb81d70967f52d92d")
!3685 = !DINamespace(name: "{impl#181}", scope: !1175)
!3686 = !DISubroutineType(types: !3687)
!3687 = !{!1247, !1173}
!3688 = !{!3689}
!3689 = !DILocalVariable(name: "self", arg: 1, scope: !3683, file: !3684, line: 134, type: !1173)
!3690 = !DILocation(line: 134, column: 21, scope: !3683)
!3691 = !DILocalVariable(name: "metadata", scope: !3692, file: !3684, line: 142, type: !7, align: 1)
!3692 = !DILexicalBlockFile(scope: !3693, file: !3684, discriminator: 0)
!3693 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h9dc2c1174c97a991E", scope: !1535, file: !1534, line: 127, type: !2708, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3694)
!3694 = !{!3695, !3691}
!3695 = !DILocalVariable(name: "data_address", scope: !3692, file: !3684, line: 142, type: !2710, align: 8)
!3696 = !DILocation(line: 142, column: 29, scope: !3692, inlinedAt: !3697)
!3697 = !DILocation(line: 668, column: 5, scope: !3698, inlinedAt: !3699)
!3698 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17h48511b78f8cef667E", scope: !49, file: !750, line: 667, type: !2716, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !23)
!3699 = !DILocation(line: 38, column: 41, scope: !3700, inlinedAt: !3704)
!3700 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha7a516a4780db355E", scope: !2721, file: !2720, line: 35, type: !2723, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3701)
!3701 = !{!3702}
!3702 = !DILocalVariable(name: "self", scope: !3703, file: !3684, line: 142, type: !218, align: 8)
!3703 = !DILexicalBlockFile(scope: !3700, file: !3684, discriminator: 0)
!3704 = !DILocation(line: 142, column: 29, scope: !3683)
!3705 = !DILocalVariable(name: "metadata", scope: !3706, file: !3684, line: 144, type: !7, align: 1)
!3706 = !DILexicalBlockFile(scope: !3707, file: !3684, discriminator: 0)
!3707 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h60a80bd19ba0d675E", scope: !1535, file: !1534, line: 110, type: !2354, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3708)
!3708 = !{!3709, !3705}
!3709 = !DILocalVariable(name: "data_address", scope: !3706, file: !3684, line: 144, type: !6, align: 8)
!3710 = !DILocation(line: 144, column: 33, scope: !3706, inlinedAt: !3711)
!3711 = !DILocation(line: 513, column: 5, scope: !3712, inlinedAt: !3713)
!3712 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17h9b3e247999a2c09cE", scope: !49, file: !750, line: 512, type: !2361, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !23)
!3713 = !DILocation(line: 39, column: 43, scope: !3714, inlinedAt: !3718)
!3714 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h1ca73e8e50d2bd62E", scope: !1506, file: !1496, line: 36, type: !2365, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3715)
!3715 = !{!3716}
!3716 = !DILocalVariable(name: "self", scope: !3717, file: !3684, line: 144, type: !57, align: 8)
!3717 = !DILexicalBlockFile(scope: !3714, file: !3684, discriminator: 0)
!3718 = !DILocation(line: 144, column: 33, scope: !3683)
!3719 = !DILocalVariable(name: "self", scope: !3720, file: !3684, line: 142, type: !53, align: 8)
!3720 = !DILexicalBlockFile(scope: !3721, file: !3684, discriminator: 0)
!3721 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3722)
!3722 = !{!3719}
!3723 = !DILocation(line: 142, column: 29, scope: !3720, inlinedAt: !3704)
!3724 = !DILocation(line: 142, column: 29, scope: !3703, inlinedAt: !3704)
!3725 = !DILocalVariable(name: "self", scope: !3726, file: !3684, line: 142, type: !218, align: 8)
!3726 = !DILexicalBlockFile(scope: !3727, file: !3684, discriminator: 0)
!3727 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17ha0f1e2277ec2974cE", scope: !2721, file: !2720, line: 707, type: !2756, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3728)
!3728 = !{!3725, !3729}
!3729 = !DILocalVariable(name: "other", scope: !3726, file: !3684, line: 142, type: !218, align: 8)
!3730 = !DILocation(line: 142, column: 29, scope: !3726, inlinedAt: !3731)
!3731 = !DILocation(line: 38, column: 9, scope: !3700, inlinedAt: !3704)
!3732 = !DILocation(line: 142, column: 29, scope: !3733, inlinedAt: !3737)
!3733 = !DILexicalBlockFile(scope: !3734, file: !3684, discriminator: 0)
!3734 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17hcb8c5f0597639fd5E", scope: !49, file: !750, line: 569, type: !2765, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !259, retainedNodes: !3735)
!3735 = !{!3736}
!3736 = !DILocalVariable(name: "addr", scope: !3733, file: !3684, line: 142, type: !9, align: 8)
!3737 = !DILocation(line: 668, column: 24, scope: !3698, inlinedAt: !3699)
!3738 = !DILocation(line: 142, column: 28, scope: !3683)
!3739 = !DILocation(line: 142, column: 21, scope: !3683)
!3740 = !DILocation(line: 143, column: 24, scope: !3683)
!3741 = !DILocation(line: 143, column: 21, scope: !3683)
!3742 = !DILocation(line: 144, column: 33, scope: !3717, inlinedAt: !3718)
!3743 = !DILocalVariable(name: "self", scope: !3744, file: !3684, line: 144, type: !57, align: 8)
!3744 = !DILexicalBlockFile(scope: !3745, file: !3684, discriminator: 0)
!3745 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hcb3b83a506982eabE", scope: !1506, file: !1496, line: 777, type: !2384, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3746)
!3746 = !{!3743, !3747}
!3747 = !DILocalVariable(name: "other", scope: !3744, file: !3684, line: 144, type: !57, align: 8)
!3748 = !DILocation(line: 144, column: 33, scope: !3744, inlinedAt: !3749)
!3749 = !DILocation(line: 39, column: 9, scope: !3714, inlinedAt: !3718)
!3750 = !DILocation(line: 144, column: 33, scope: !3751, inlinedAt: !3755)
!3751 = !DILexicalBlockFile(scope: !3752, file: !3684, discriminator: 0)
!3752 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17hbfd081ec570e6cb4E", scope: !49, file: !750, line: 538, type: !2393, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !259, retainedNodes: !3753)
!3753 = !{!3754}
!3754 = !DILocalVariable(name: "addr", scope: !3751, file: !3684, line: 144, type: !9, align: 8)
!3755 = !DILocation(line: 513, column: 20, scope: !3712, inlinedAt: !3713)
!3756 = !DILocation(line: 144, column: 32, scope: !3683)
!3757 = !DILocation(line: 144, column: 25, scope: !3683)
!3758 = !DILocation(line: 146, column: 24, scope: !3683)
!3759 = !DILocalVariable(name: "self", scope: !3760, file: !3684, line: 146, type: !53, align: 8)
!3760 = !DILexicalBlockFile(scope: !3761, file: !3684, discriminator: 0)
!3761 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3762)
!3762 = !{!3759}
!3763 = !DILocation(line: 146, column: 24, scope: !3760, inlinedAt: !3764)
!3764 = !DILocation(line: 8, column: 9, scope: !3683)
!3765 = !DILocation(line: 149, column: 30, scope: !3683)
!3766 = !DILocalVariable(name: "self", scope: !3767, file: !3684, line: 149, type: !1173, align: 8)
!3767 = distinct !DISubprogram(name: "post_inc_start<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h785edc823bc049d4E", scope: !1174, file: !3684, line: 85, type: !3768, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3770)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!57, !1173, !271}
!3770 = !{!3766, !3771, !3772}
!3771 = !DILocalVariable(name: "offset", scope: !3767, file: !3684, line: 149, type: !271, align: 8)
!3772 = !DILocalVariable(name: "old", scope: !3773, file: !3684, line: 149, type: !218, align: 8)
!3773 = distinct !DILexicalBlock(scope: !3767, file: !3684, line: 90, column: 21)
!3774 = !DILocation(line: 149, column: 30, scope: !3767, inlinedAt: !3775)
!3775 = !DILocation(line: 53, column: 47, scope: !3683)
!3776 = !DILocation(line: 147, column: 25, scope: !3683)
!3777 = !DILocation(line: 146, column: 21, scope: !3683)
!3778 = !DILocation(line: 152, column: 14, scope: !3683)
!3779 = !DILocalVariable(name: "self", scope: !3780, file: !3684, line: 149, type: !57, align: 8)
!3780 = !DILexicalBlockFile(scope: !3781, file: !3684, discriminator: 0)
!3781 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h818d2f3e529d2c3eE", scope: !1506, file: !1496, line: 536, type: !1516, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3782)
!3782 = !{!3779, !3783}
!3783 = !DILocalVariable(name: "count", scope: !3780, file: !3684, line: 149, type: !271, align: 8)
!3784 = !DILocation(line: 149, column: 30, scope: !3780, inlinedAt: !3785)
!3785 = !DILocation(line: 67, column: 29, scope: !3767, inlinedAt: !3775)
!3786 = !DILocalVariable(name: "self", scope: !3787, file: !3684, line: 149, type: !53, align: 8)
!3787 = !DILexicalBlockFile(scope: !3788, file: !3684, discriminator: 0)
!3788 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3789)
!3789 = !{!3786}
!3790 = !DILocation(line: 149, column: 30, scope: !3787, inlinedAt: !3791)
!3791 = !DILocation(line: 90, column: 31, scope: !3767, inlinedAt: !3775)
!3792 = !DILocation(line: 149, column: 30, scope: !3773, inlinedAt: !3775)
!3793 = !DILocalVariable(name: "self", scope: !3794, file: !3684, line: 149, type: !53, align: 8)
!3794 = !DILexicalBlockFile(scope: !3795, file: !3684, discriminator: 0)
!3795 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3796)
!3796 = !{!3793}
!3797 = !DILocation(line: 149, column: 30, scope: !3794, inlinedAt: !3798)
!3798 = !DILocation(line: 93, column: 64, scope: !3773, inlinedAt: !3775)
!3799 = !DILocalVariable(name: "self", scope: !3800, file: !3684, line: 149, type: !218, align: 8)
!3800 = !DILexicalBlockFile(scope: !3801, file: !3684, discriminator: 0)
!3801 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hf304002ffdecbd9dE", scope: !2721, file: !2720, line: 465, type: !3215, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3802)
!3802 = !{!3799, !3803}
!3803 = !DILocalVariable(name: "count", scope: !3800, file: !3684, line: 149, type: !271, align: 8)
!3804 = !DILocation(line: 149, column: 30, scope: !3800, inlinedAt: !3798)
!3805 = !DILocalVariable(name: "ptr", scope: !3806, file: !3684, line: 149, type: !218, align: 8)
!3806 = !DILexicalBlockFile(scope: !3807, file: !3684, discriminator: 0)
!3807 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h2b684da21c9d4e5cE", scope: !53, file: !204, line: 196, type: !230, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3808)
!3808 = !{!3805}
!3809 = !DILocation(line: 149, column: 30, scope: !3806, inlinedAt: !3810)
!3810 = !DILocation(line: 93, column: 41, scope: !3773, inlinedAt: !3775)
!3811 = !DILocation(line: 149, column: 25, scope: !3683)
!3812 = !DILocalVariable(name: "self", scope: !3813, file: !3684, line: 149, type: !53, align: 8)
!3813 = !DILexicalBlockFile(scope: !3814, file: !3684, discriminator: 0)
!3814 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h8512f7527c176464E", scope: !53, file: !204, line: 330, type: !223, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !59, retainedNodes: !3815)
!3815 = !{!3812}
!3816 = !DILocation(line: 149, column: 30, scope: !3813, inlinedAt: !3817)
!3817 = !DILocation(line: 88, column: 21, scope: !3767, inlinedAt: !3775)
!3818 = distinct !DISubprogram(name: "rust_coreutils_static_assert", scope: !3820, file: !3819, line: 13, type: !21, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!3819 = !DIFile(filename: "src/functions.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "9ca0be3f829a332ebc6e5dcffe42fd44")
!3820 = !DINamespace(name: "functions", scope: !94)
!3821 = !DILocation(line: 18, column: 2, scope: !3818)
!3822 = distinct !DISubprogram(name: "rust_noop", scope: !3824, file: !3823, line: 11, type: !21, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!3823 = !DIFile(filename: "src/noop.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "a0b901b3fe136b4b2d1789f5c54ba37d")
!3824 = !DINamespace(name: "noop", scope: !94)
!3825 = !DILocation(line: 11, column: 40, scope: !3822)
!3826 = distinct !DISubprogram(name: "rust_l", scope: !93, file: !95, line: 15, type: !3827, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!90}
!3829 = !DILocation(line: 17, column: 2, scope: !3826)
!3830 = distinct !DISubprogram(name: "rust_w", scope: !93, file: !95, line: 19, type: !3827, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!3831 = !DILocation(line: 21, column: 2, scope: !3830)
!3832 = distinct !DISubprogram(name: "rust_call_printf", scope: !1120, file: !3833, line: 33, type: !21, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!3833 = !DIFile(filename: "src/varargs.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "8c6744eda7471d0d029d9825b8096547")
!3834 = !DILocation(line: 34, column: 5, scope: !3832)
!3835 = !DILocation(line: 39, column: 2, scope: !3832)
!3836 = distinct !DISubprogram(name: "rust_my_vprintf", scope: !1120, file: !3833, line: 41, type: !3837, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3839)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{null, !605, !561}
!3839 = !{!3840, !3841}
!3840 = !DILocalVariable(name: "format", arg: 1, scope: !3836, file: !3833, line: 42, type: !605)
!3841 = !DILocalVariable(name: "ap", arg: 2, scope: !3836, file: !3833, line: 43, type: !561)
!3842 = !DILocation(line: 42, column: 5, scope: !3836)
!3843 = !DILocation(line: 43, column: 5, scope: !3836)
!3844 = !DILocation(line: 45, column: 21, scope: !3836)
!3845 = !DILocation(line: 45, column: 5, scope: !3836)
!3846 = !DILocation(line: 46, column: 2, scope: !3836)
!3847 = distinct !DISubprogram(name: "rust_call_vprintf", scope: !1120, file: !3833, line: 48, type: !3848, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3850)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{null, !605}
!3850 = !{!3851, !3852, !3853}
!3851 = !DILocalVariable(name: "format", arg: 1, scope: !3847, file: !3833, line: 49, type: !605)
!3852 = !DILocalVariable(name: "args", arg: 2, scope: !3847, file: !3833, line: 50, type: !546)
!3853 = !DILocalVariable(name: "ap", scope: !3854, file: !3833, line: 52, type: !546, align: 8)
!3854 = distinct !DILexicalBlock(scope: !3847, file: !3833, line: 52, column: 5)
!3855 = !DILocation(line: 49, column: 5, scope: !3847)
!3856 = !DILocation(line: 50, column: 5, scope: !3847)
!3857 = !DILocation(line: 52, column: 9, scope: !3854)
!3858 = !DILocation(line: 52, column: 9, scope: !3847)
!3859 = !DILocation(line: 53, column: 10, scope: !3854)
!3860 = !DILocation(line: 55, column: 1, scope: !3847)
!3861 = !DILocation(line: 53, column: 5, scope: !3854)
!3862 = !DILocation(line: 54, column: 29, scope: !3854)
!3863 = !DILocation(line: 54, column: 5, scope: !3854)
!3864 = !DILocation(line: 48, column: 1, scope: !3847)
!3865 = !DILocation(line: 55, column: 2, scope: !3847)
!3866 = distinct !DISubprogram(name: "rust_my_printf", scope: !1120, file: !3833, line: 57, type: !3848, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3867)
!3867 = !{!3868, !3869, !3870}
!3868 = !DILocalVariable(name: "fmt", arg: 1, scope: !3866, file: !3833, line: 58, type: !605)
!3869 = !DILocalVariable(name: "args", arg: 2, scope: !3866, file: !3833, line: 59, type: !546)
!3870 = !DILocalVariable(name: "ap", scope: !3871, file: !3833, line: 61, type: !546, align: 8)
!3871 = distinct !DILexicalBlock(scope: !3866, file: !3833, line: 61, column: 5)
!3872 = !DILocation(line: 58, column: 5, scope: !3866)
!3873 = !DILocation(line: 59, column: 5, scope: !3866)
!3874 = !DILocation(line: 61, column: 9, scope: !3871)
!3875 = !DILocation(line: 61, column: 9, scope: !3866)
!3876 = !DILocation(line: 62, column: 10, scope: !3871)
!3877 = !DILocation(line: 99, column: 1, scope: !3866)
!3878 = !DILocation(line: 62, column: 5, scope: !3871)
!3879 = !DILocation(line: 63, column: 5, scope: !3871)
!3880 = !DILocation(line: 63, column: 11, scope: !3871)
!3881 = !DILocation(line: 64, column: 15, scope: !3871)
!3882 = !DILocation(line: 64, column: 9, scope: !3871)
!3883 = !DILocation(line: 66, column: 23, scope: !3871)
!3884 = !DILocalVariable(name: "self", arg: 1, scope: !3885, file: !1496, line: 453, type: !605)
!3885 = distinct !DISubprogram(name: "offset<i8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h589ff04d23c859e9E", scope: !1506, file: !1496, line: 453, type: !3886, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !624, retainedNodes: !3888)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{!605, !605, !271}
!3888 = !{!3884, !3889}
!3889 = !DILocalVariable(name: "count", arg: 2, scope: !3885, file: !1496, line: 453, type: !271)
!3890 = !DILocation(line: 453, column: 32, scope: !3885, inlinedAt: !3891)
!3891 = distinct !DILocation(line: 66, column: 23, scope: !3871)
!3892 = !DILocation(line: 453, column: 38, scope: !3885, inlinedAt: !3891)
!3893 = !DILocation(line: 458, column: 18, scope: !3885, inlinedAt: !3891)
!3894 = !DILocation(line: 459, column: 6, scope: !3885, inlinedAt: !3891)
!3895 = !DILocation(line: 93, column: 25, scope: !3871)
!3896 = !DILocation(line: 93, column: 17, scope: !3871)
!3897 = !DILocation(line: 96, column: 15, scope: !3871)
!3898 = !DILocation(line: 453, column: 32, scope: !3885, inlinedAt: !3899)
!3899 = distinct !DILocation(line: 96, column: 15, scope: !3871)
!3900 = !DILocation(line: 453, column: 38, scope: !3885, inlinedAt: !3899)
!3901 = !DILocation(line: 458, column: 18, scope: !3885, inlinedAt: !3899)
!3902 = !DILocation(line: 459, column: 6, scope: !3885, inlinedAt: !3899)
!3903 = !DILocation(line: 66, column: 17, scope: !3871)
!3904 = !DILocation(line: 68, column: 22, scope: !3871)
!3905 = !DILocation(line: 68, column: 21, scope: !3871)
!3906 = !DILocation(line: 68, column: 20, scope: !3871)
!3907 = !DILocation(line: 69, column: 27, scope: !3871)
!3908 = !DILocation(line: 69, column: 21, scope: !3871)
!3909 = !DILocation(line: 73, column: 33, scope: !3871)
!3910 = !DILocation(line: 79, column: 33, scope: !3871)
!3911 = !DILocation(line: 85, column: 33, scope: !3871)
!3912 = !DILocation(line: 83, column: 29, scope: !3871)
!3913 = !DILocation(line: 77, column: 29, scope: !3871)
!3914 = !DILocation(line: 71, column: 29, scope: !3871)
!3915 = !DILocation(line: 96, column: 9, scope: !3871)
!3916 = !DILocation(line: 57, column: 1, scope: !3866)
!3917 = !DILocation(line: 99, column: 2, scope: !3866)
!3918 = distinct !DISubprogram(name: "rust_simple_vacopy", scope: !1120, file: !3833, line: 101, type: !3848, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3919)
!3919 = !{!3920, !3921, !3922, !3924}
!3920 = !DILocalVariable(name: "fmt", arg: 1, scope: !3918, file: !3833, line: 102, type: !605)
!3921 = !DILocalVariable(name: "args", arg: 2, scope: !3918, file: !3833, line: 103, type: !546)
!3922 = !DILocalVariable(name: "ap", scope: !3923, file: !3833, line: 105, type: !546, align: 8)
!3923 = distinct !DILexicalBlock(scope: !3918, file: !3833, line: 105, column: 5)
!3924 = !DILocalVariable(name: "aq", scope: !3925, file: !3833, line: 106, type: !546, align: 8)
!3925 = distinct !DILexicalBlock(scope: !3923, file: !3833, line: 106, column: 5)
!3926 = !DILocation(line: 102, column: 5, scope: !3918)
!3927 = !DILocation(line: 103, column: 5, scope: !3918)
!3928 = !DILocation(line: 105, column: 9, scope: !3923)
!3929 = !DILocation(line: 106, column: 9, scope: !3925)
!3930 = !DILocation(line: 105, column: 9, scope: !3918)
!3931 = !DILocation(line: 107, column: 10, scope: !3925)
!3932 = !DILocation(line: 111, column: 1, scope: !3923)
!3933 = !DILocation(line: 107, column: 5, scope: !3925)
!3934 = !DILocation(line: 108, column: 10, scope: !3925)
!3935 = !DILocation(line: 108, column: 5, scope: !3925)
!3936 = !DILocation(line: 109, column: 18, scope: !3925)
!3937 = !DILocation(line: 109, column: 5, scope: !3925)
!3938 = !DILocation(line: 110, column: 18, scope: !3925)
!3939 = !DILocation(line: 110, column: 5, scope: !3925)
!3940 = !DILocation(line: 111, column: 1, scope: !3918)
!3941 = !DILocation(line: 101, column: 1, scope: !3918)
!3942 = !DILocation(line: 111, column: 2, scope: !3918)
!3943 = distinct !DISubprogram(name: "rust_valist_struct_member", scope: !1120, file: !3833, line: 113, type: !3848, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3944)
!3944 = !{!3945, !3946, !3947, !3949}
!3945 = !DILocalVariable(name: "fmt", arg: 1, scope: !3943, file: !3833, line: 114, type: !605)
!3946 = !DILocalVariable(name: "args", arg: 2, scope: !3943, file: !3833, line: 115, type: !546)
!3947 = !DILocalVariable(name: "a", scope: !3948, file: !3833, line: 117, type: !1119, align: 8)
!3948 = distinct !DILexicalBlock(scope: !3943, file: !3833, line: 117, column: 5)
!3949 = !DILocalVariable(name: "b", scope: !3950, file: !3833, line: 120, type: !1119, align: 8)
!3950 = distinct !DILexicalBlock(scope: !3948, file: !3833, line: 120, column: 5)
!3951 = !DILocation(line: 114, column: 5, scope: !3943)
!3952 = !DILocation(line: 115, column: 5, scope: !3943)
!3953 = !DILocation(line: 117, column: 9, scope: !3948)
!3954 = !DILocation(line: 120, column: 9, scope: !3950)
!3955 = !DILocation(line: 321, column: 9, scope: !3956, inlinedAt: !3957)
!3956 = distinct !DISubprogram(name: "uninit<core::ffi::VaListImpl>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17haa94455434281341E", scope: !3030, file: !784, line: 320, type: !3058, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1078, retainedNodes: !23)
!3957 = distinct !DILocation(line: 118, column: 15, scope: !3943)
!3958 = !DILocation(line: 322, column: 6, scope: !3956, inlinedAt: !3957)
!3959 = !DILocation(line: 127, column: 1, scope: !3943)
!3960 = !DILocalVariable(name: "self", arg: 1, scope: !3961, file: !784, line: 629, type: !3030)
!3961 = distinct !DISubprogram(name: "assume_init<core::ffi::VaListImpl>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hf693d98c11fc3685E", scope: !3030, file: !784, line: 629, type: !3042, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1078, retainedNodes: !3962)
!3962 = !{!3960}
!3963 = !DILocation(line: 629, column: 37, scope: !3961, inlinedAt: !3964)
!3964 = distinct !DILocation(line: 118, column: 15, scope: !3943)
!3965 = !DILocalVariable(name: "slot", scope: !3966, file: !784, line: 634, type: !3034, align: 8)
!3966 = !DILexicalBlockFile(scope: !3967, file: !784, discriminator: 0)
!3967 = distinct !DISubprogram(name: "into_inner<core::ffi::VaListImpl>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17ha8dbfc3a8c1da73dE", scope: !3034, file: !816, line: 88, type: !3050, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !1078, retainedNodes: !3968)
!3968 = !{!3965}
!3969 = !DILocation(line: 634, column: 13, scope: !3966, inlinedAt: !3970)
!3970 = distinct !DILocation(line: 634, column: 13, scope: !3961, inlinedAt: !3964)
!3971 = !DILocation(line: 634, column: 38, scope: !3961, inlinedAt: !3964)
!3972 = !DILocation(line: 636, column: 6, scope: !3961, inlinedAt: !3964)
!3973 = !DILocation(line: 117, column: 27, scope: !3943)
!3974 = !DILocation(line: 321, column: 9, scope: !3956, inlinedAt: !3975)
!3975 = distinct !DILocation(line: 121, column: 15, scope: !3948)
!3976 = !DILocation(line: 322, column: 6, scope: !3956, inlinedAt: !3975)
!3977 = !DILocation(line: 629, column: 37, scope: !3961, inlinedAt: !3978)
!3978 = distinct !DILocation(line: 121, column: 15, scope: !3948)
!3979 = !DILocation(line: 634, column: 13, scope: !3966, inlinedAt: !3980)
!3980 = distinct !DILocation(line: 634, column: 13, scope: !3961, inlinedAt: !3978)
!3981 = !DILocation(line: 634, column: 38, scope: !3961, inlinedAt: !3978)
!3982 = !DILocation(line: 636, column: 6, scope: !3961, inlinedAt: !3978)
!3983 = !DILocation(line: 120, column: 27, scope: !3948)
!3984 = !DILocation(line: 123, column: 14, scope: !3950)
!3985 = !DILocation(line: 127, column: 1, scope: !3948)
!3986 = !DILocation(line: 123, column: 5, scope: !3950)
!3987 = !DILocation(line: 124, column: 14, scope: !3950)
!3988 = !DILocation(line: 124, column: 5, scope: !3950)
!3989 = !DILocation(line: 125, column: 18, scope: !3950)
!3990 = !DILocation(line: 125, column: 5, scope: !3950)
!3991 = !DILocation(line: 126, column: 18, scope: !3950)
!3992 = !DILocation(line: 126, column: 5, scope: !3950)
!3993 = !DILocation(line: 113, column: 1, scope: !3943)
!3994 = !DILocation(line: 127, column: 2, scope: !3943)
!3995 = distinct !DISubprogram(name: "rust_valist_struct_pointer_member", scope: !1120, file: !3833, line: 129, type: !3848, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !3996)
!3996 = !{!3997, !3998, !3999, !4001, !4003, !4005}
!3997 = !DILocalVariable(name: "fmt", arg: 1, scope: !3995, file: !3833, line: 130, type: !605)
!3998 = !DILocalVariable(name: "args", arg: 2, scope: !3995, file: !3833, line: 131, type: !546)
!3999 = !DILocalVariable(name: "a", scope: !4000, file: !3833, line: 133, type: !1119, align: 8)
!4000 = distinct !DILexicalBlock(scope: !3995, file: !3833, line: 133, column: 5)
!4001 = !DILocalVariable(name: "b", scope: !4002, file: !3833, line: 136, type: !1119, align: 8)
!4002 = distinct !DILexicalBlock(scope: !4000, file: !3833, line: 136, column: 5)
!4003 = !DILocalVariable(name: "p", scope: !4004, file: !3833, line: 139, type: !1118, align: 8)
!4004 = distinct !DILexicalBlock(scope: !4002, file: !3833, line: 139, column: 5)
!4005 = !DILocalVariable(name: "q", scope: !4006, file: !3833, line: 140, type: !1118, align: 8)
!4006 = distinct !DILexicalBlock(scope: !4004, file: !3833, line: 140, column: 5)
!4007 = !DILocation(line: 130, column: 5, scope: !3995)
!4008 = !DILocation(line: 131, column: 5, scope: !3995)
!4009 = !DILocation(line: 133, column: 9, scope: !4000)
!4010 = !DILocation(line: 136, column: 9, scope: !4002)
!4011 = !DILocation(line: 321, column: 9, scope: !3956, inlinedAt: !4012)
!4012 = distinct !DILocation(line: 134, column: 15, scope: !3995)
!4013 = !DILocation(line: 322, column: 6, scope: !3956, inlinedAt: !4012)
!4014 = !DILocation(line: 145, column: 1, scope: !3995)
!4015 = !DILocation(line: 629, column: 37, scope: !3961, inlinedAt: !4016)
!4016 = distinct !DILocation(line: 134, column: 15, scope: !3995)
!4017 = !DILocation(line: 634, column: 13, scope: !3966, inlinedAt: !4018)
!4018 = distinct !DILocation(line: 634, column: 13, scope: !3961, inlinedAt: !4016)
!4019 = !DILocation(line: 634, column: 38, scope: !3961, inlinedAt: !4016)
!4020 = !DILocation(line: 636, column: 6, scope: !3961, inlinedAt: !4016)
!4021 = !DILocation(line: 133, column: 27, scope: !3995)
!4022 = !DILocation(line: 321, column: 9, scope: !3956, inlinedAt: !4023)
!4023 = distinct !DILocation(line: 137, column: 15, scope: !4000)
!4024 = !DILocation(line: 322, column: 6, scope: !3956, inlinedAt: !4023)
!4025 = !DILocation(line: 629, column: 37, scope: !3961, inlinedAt: !4026)
!4026 = distinct !DILocation(line: 137, column: 15, scope: !4000)
!4027 = !DILocation(line: 634, column: 13, scope: !3966, inlinedAt: !4028)
!4028 = distinct !DILocation(line: 634, column: 13, scope: !3961, inlinedAt: !4026)
!4029 = !DILocation(line: 634, column: 38, scope: !3961, inlinedAt: !4026)
!4030 = !DILocation(line: 636, column: 6, scope: !3961, inlinedAt: !4026)
!4031 = !DILocation(line: 136, column: 27, scope: !4000)
!4032 = !DILocation(line: 139, column: 32, scope: !4002)
!4033 = !DILocation(line: 139, column: 9, scope: !4004)
!4034 = !DILocation(line: 140, column: 32, scope: !4004)
!4035 = !DILocation(line: 140, column: 9, scope: !4006)
!4036 = !DILocation(line: 141, column: 17, scope: !4006)
!4037 = !DILocation(line: 145, column: 1, scope: !4000)
!4038 = !DILocation(line: 141, column: 5, scope: !4006)
!4039 = !DILocation(line: 142, column: 17, scope: !4006)
!4040 = !DILocation(line: 142, column: 5, scope: !4006)
!4041 = !DILocation(line: 143, column: 18, scope: !4006)
!4042 = !DILocation(line: 143, column: 5, scope: !4006)
!4043 = !DILocation(line: 144, column: 18, scope: !4006)
!4044 = !DILocation(line: 144, column: 5, scope: !4006)
!4045 = !DILocation(line: 129, column: 1, scope: !3995)
!4046 = !DILocation(line: 145, column: 2, scope: !3995)
!4047 = distinct !DISubprogram(name: "rust_restart_valist", scope: !1120, file: !3833, line: 147, type: !3848, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4048)
!4048 = !{!4049, !4050, !4051}
!4049 = !DILocalVariable(name: "fmt", arg: 1, scope: !4047, file: !3833, line: 148, type: !605)
!4050 = !DILocalVariable(name: "args", arg: 2, scope: !4047, file: !3833, line: 149, type: !546)
!4051 = !DILocalVariable(name: "ap", scope: !4052, file: !3833, line: 151, type: !546, align: 8)
!4052 = distinct !DILexicalBlock(scope: !4047, file: !3833, line: 151, column: 5)
!4053 = !DILocation(line: 148, column: 5, scope: !4047)
!4054 = !DILocation(line: 149, column: 5, scope: !4047)
!4055 = !DILocation(line: 151, column: 9, scope: !4052)
!4056 = !DILocation(line: 151, column: 9, scope: !4047)
!4057 = !DILocation(line: 152, column: 10, scope: !4052)
!4058 = !DILocation(line: 156, column: 1, scope: !4047)
!4059 = !DILocation(line: 152, column: 5, scope: !4052)
!4060 = !DILocation(line: 153, column: 18, scope: !4052)
!4061 = !DILocation(line: 153, column: 5, scope: !4052)
!4062 = !DILocation(line: 154, column: 10, scope: !4052)
!4063 = !DILocation(line: 154, column: 5, scope: !4052)
!4064 = !DILocation(line: 155, column: 18, scope: !4052)
!4065 = !DILocation(line: 155, column: 5, scope: !4052)
!4066 = !DILocation(line: 147, column: 1, scope: !4047)
!4067 = !DILocation(line: 156, column: 2, scope: !4047)
!4068 = distinct !DISubprogram(name: "rust_sample_stddev", scope: !1120, file: !3833, line: 158, type: !4069, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4071)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!80, !90}
!4071 = !{!4072, !4073, !4074, !4076, !4078, !4080, !4082, !4084, !4086, !4088, !4090}
!4072 = !DILocalVariable(name: "count", arg: 1, scope: !4068, file: !3833, line: 159, type: !90)
!4073 = !DILocalVariable(name: "args", arg: 2, scope: !4068, file: !3833, line: 160, type: !546)
!4074 = !DILocalVariable(name: "sum", scope: !4075, file: !3833, line: 162, type: !80, align: 8)
!4075 = distinct !DILexicalBlock(scope: !4068, file: !3833, line: 162, column: 5)
!4076 = !DILocalVariable(name: "args1", scope: !4077, file: !3833, line: 163, type: !546, align: 8)
!4077 = distinct !DILexicalBlock(scope: !4075, file: !3833, line: 163, column: 5)
!4078 = !DILocalVariable(name: "args2", scope: !4079, file: !3833, line: 165, type: !546, align: 8)
!4079 = distinct !DILexicalBlock(scope: !4077, file: !3833, line: 165, column: 5)
!4080 = !DILocalVariable(name: "i", scope: !4081, file: !3833, line: 167, type: !90, align: 4)
!4081 = distinct !DILexicalBlock(scope: !4079, file: !3833, line: 167, column: 5)
!4082 = !DILocalVariable(name: "num", scope: !4083, file: !3833, line: 169, type: !80, align: 8)
!4083 = distinct !DILexicalBlock(scope: !4081, file: !3833, line: 169, column: 9)
!4084 = !DILocalVariable(name: "mean", scope: !4085, file: !3833, line: 174, type: !80, align: 8)
!4085 = distinct !DILexicalBlock(scope: !4081, file: !3833, line: 174, column: 5)
!4086 = !DILocalVariable(name: "sum_sq_diff", scope: !4087, file: !3833, line: 175, type: !80, align: 8)
!4087 = distinct !DILexicalBlock(scope: !4085, file: !3833, line: 175, column: 5)
!4088 = !DILocalVariable(name: "i_0", scope: !4089, file: !3833, line: 176, type: !90, align: 4)
!4089 = distinct !DILexicalBlock(scope: !4087, file: !3833, line: 176, column: 5)
!4090 = !DILocalVariable(name: "num_0", scope: !4091, file: !3833, line: 178, type: !80, align: 8)
!4091 = distinct !DILexicalBlock(scope: !4089, file: !3833, line: 178, column: 9)
!4092 = !DILocation(line: 159, column: 5, scope: !4068)
!4093 = !DILocation(line: 160, column: 5, scope: !4068)
!4094 = !DILocation(line: 162, column: 9, scope: !4075)
!4095 = !DILocation(line: 163, column: 9, scope: !4077)
!4096 = !DILocation(line: 165, column: 9, scope: !4079)
!4097 = !DILocation(line: 167, column: 9, scope: !4081)
!4098 = !DILocation(line: 175, column: 9, scope: !4087)
!4099 = !DILocation(line: 176, column: 9, scope: !4089)
!4100 = !DILocation(line: 162, column: 9, scope: !4068)
!4101 = !DILocation(line: 162, column: 39, scope: !4068)
!4102 = !DILocation(line: 164, column: 13, scope: !4077)
!4103 = !DILocation(line: 184, column: 1, scope: !4075)
!4104 = !DILocation(line: 164, column: 5, scope: !4077)
!4105 = !DILocation(line: 166, column: 13, scope: !4079)
!4106 = !DILocation(line: 184, column: 1, scope: !4077)
!4107 = !DILocation(line: 166, column: 5, scope: !4079)
!4108 = !DILocation(line: 167, column: 34, scope: !4079)
!4109 = !DILocation(line: 168, column: 5, scope: !4081)
!4110 = !DILocation(line: 168, column: 11, scope: !4081)
!4111 = !DILocation(line: 174, column: 40, scope: !4081)
!4112 = !DILocation(line: 174, column: 46, scope: !4081)
!4113 = !DILocation(line: 174, column: 9, scope: !4085)
!4114 = !DILocation(line: 175, column: 47, scope: !4085)
!4115 = !DILocation(line: 176, column: 36, scope: !4087)
!4116 = !DILocation(line: 177, column: 5, scope: !4089)
!4117 = !DILocation(line: 169, column: 43, scope: !4081)
!4118 = !DILocation(line: 169, column: 13, scope: !4083)
!4119 = !DILocation(line: 170, column: 9, scope: !4083)
!4120 = !DILocation(line: 171, column: 9, scope: !4083)
!4121 = !DILocation(line: 177, column: 11, scope: !4089)
!4122 = !DILocation(line: 183, column: 17, scope: !4089)
!4123 = !DILocation(line: 183, column: 31, scope: !4089)
!4124 = !DILocation(line: 183, column: 12, scope: !4089)
!4125 = !DILocation(line: 178, column: 45, scope: !4089)
!4126 = !DILocation(line: 178, column: 13, scope: !4091)
!4127 = !DILocation(line: 179, column: 24, scope: !4091)
!4128 = !DILocation(line: 179, column: 41, scope: !4091)
!4129 = !DILocation(line: 179, column: 9, scope: !4091)
!4130 = !DILocation(line: 180, column: 9, scope: !4091)
!4131 = !DILocation(line: 158, column: 1, scope: !4068)
!4132 = !DILocation(line: 184, column: 1, scope: !4068)
!4133 = !DILocation(line: 184, column: 2, scope: !4068)
!4134 = distinct !DISubprogram(name: "rust_noinline_static", linkageName: "_ZN11items_tests8fn_attrs20rust_noinline_static17h8098ac66557fc4ccE", scope: !4136, file: !4135, line: 18, type: !21, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4135 = !DIFile(filename: "src/fn_attrs.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "21e31fcd93ca9789394395dc178234f1")
!4136 = !DINamespace(name: "fn_attrs", scope: !94)
!4137 = !DILocation(line: 18, column: 47, scope: !4134)
!4138 = distinct !DISubprogram(name: "rust_inline_static", linkageName: "_ZN11items_tests8fn_attrs18rust_inline_static17h9787aae2402beb96E", scope: !4136, file: !4135, line: 20, type: !21, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4139 = !DILocation(line: 20, column: 45, scope: !4138)
!4140 = distinct !DISubprogram(name: "rust_alt_kw_inline_static", linkageName: "_ZN11items_tests8fn_attrs25rust_alt_kw_inline_static17hea6695195cf7f1e8E", scope: !4136, file: !4135, line: 22, type: !21, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4141 = !DILocation(line: 22, column: 52, scope: !4140)
!4142 = distinct !DISubprogram(name: "rust_gnu_inline_static", linkageName: "_ZN11items_tests8fn_attrs22rust_gnu_inline_static17hf2ed25cb3d7132b1E", scope: !4136, file: !4135, line: 24, type: !21, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4143 = !DILocation(line: 24, column: 49, scope: !4142)
!4144 = distinct !DISubprogram(name: "rust_gnu_inline_nonstatic", linkageName: "_ZN11items_tests8fn_attrs25rust_gnu_inline_nonstatic17h9e66c1bbe3a90657E", scope: !4136, file: !4135, line: 30, type: !21, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4145 = !DILocation(line: 30, column: 52, scope: !4144)
!4146 = distinct !DISubprogram(name: "rust_noinline_nonstatic", scope: !4136, file: !4135, line: 33, type: !21, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4147 = !DILocation(line: 33, column: 54, scope: !4146)
!4148 = distinct !DISubprogram(name: "rust_inline_nonstatic", linkageName: "_ZN11items_tests8fn_attrs21rust_inline_nonstatic17h58452cb7d54a7b3fE", scope: !4136, file: !4135, line: 35, type: !21, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4149 = !DILocation(line: 35, column: 48, scope: !4148)
!4150 = distinct !DISubprogram(name: "rust_alt_kw_inline_nonstatic", linkageName: "_ZN11items_tests8fn_attrs28rust_alt_kw_inline_nonstatic17hcd0e5255ef56515bE", scope: !4136, file: !4135, line: 37, type: !21, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4151 = !DILocation(line: 37, column: 55, scope: !4150)
!4152 = distinct !DISubprogram(name: "rust_inline_extern", scope: !4136, file: !4135, line: 41, type: !21, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4153 = !DILocation(line: 41, column: 49, scope: !4152)
!4154 = distinct !DISubprogram(name: "rust_alt_kw_inline_extern", scope: !4136, file: !4135, line: 45, type: !21, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4155 = !DILocation(line: 45, column: 56, scope: !4154)
!4156 = distinct !DISubprogram(name: "rust_always_inline_extern", scope: !4136, file: !4135, line: 48, type: !21, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4157 = !DILocation(line: 48, column: 56, scope: !4156)
!4158 = distinct !DISubprogram(name: "rust_gnu_inline_extern", linkageName: "_ZN11items_tests8fn_attrs22rust_gnu_inline_extern17h7da998b9371a6cf2E", scope: !4136, file: !4135, line: 50, type: !21, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4159 = !DILocation(line: 50, column: 49, scope: !4158)
!4160 = distinct !DISubprogram(name: "rust_gnu_inline_non_canonical_definition_extern", linkageName: "_ZN11items_tests8fn_attrs47rust_gnu_inline_non_canonical_definition_extern17h6457b12254a8001bE", scope: !4136, file: !4135, line: 54, type: !21, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4161 = !DILocation(line: 54, column: 74, scope: !4160)
!4162 = distinct !DISubprogram(name: "rust_ensure_use", scope: !4136, file: !4135, line: 56, type: !21, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4163 = !DILocation(line: 57, column: 5, scope: !4162)
!4164 = !DILocation(line: 58, column: 5, scope: !4162)
!4165 = !DILocation(line: 59, column: 5, scope: !4162)
!4166 = !DILocation(line: 60, column: 5, scope: !4162)
!4167 = !DILocation(line: 61, column: 5, scope: !4162)
!4168 = !DILocation(line: 62, column: 5, scope: !4162)
!4169 = !DILocation(line: 63, column: 5, scope: !4162)
!4170 = !DILocation(line: 64, column: 5, scope: !4162)
!4171 = !DILocation(line: 65, column: 5, scope: !4162)
!4172 = !DILocation(line: 66, column: 5, scope: !4162)
!4173 = !DILocation(line: 67, column: 5, scope: !4162)
!4174 = !DILocation(line: 68, column: 5, scope: !4162)
!4175 = !DILocation(line: 69, column: 5, scope: !4162)
!4176 = !DILocation(line: 70, column: 5, scope: !4162)
!4177 = !DILocation(line: 71, column: 5, scope: !4162)
!4178 = !DILocation(line: 72, column: 5, scope: !4162)
!4179 = !DILocation(line: 73, column: 2, scope: !4162)
!4180 = distinct !DISubprogram(name: "rust_nofnargs", scope: !4182, file: !4181, line: 11, type: !3827, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4181 = !DIFile(filename: "src/nofnargs.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "559075d5f4a2bafe6cc56fd7922058a1")
!4182 = !DINamespace(name: "nofnargs", scope: !94)
!4183 = !DILocation(line: 13, column: 2, scope: !4180)
!4184 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests9test_noop9test_noop28_$u7b$$u7b$closure$u7d$$u7d$17h25e9900ed25c3047E", scope: !971, file: !4185, line: 14, type: !4186, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4189)
!4185 = !DIFile(filename: "src/test_noop.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "a35437d3e15ab62b34c748cc68d3c62e")
!4186 = !DISubroutineType(types: !4187)
!4187 = !{null, !4188}
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_noop::test_noop::{closure_env#0}", baseType: !970, size: 64, align: 64, dwarfAddressSpace: 0)
!4189 = !{!4190}
!4190 = !DILocalVariable(arg: 1, scope: !4184, file: !4185, line: 14, type: !4188)
!4191 = !DILocation(line: 14, column: 1, scope: !4184)
!4192 = !DILocation(line: 19, column: 2, scope: !4184)
!4193 = distinct !DISubprogram(name: "test_noop", scope: !909, file: !4185, line: 14, type: !21, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4194 = !DILocation(line: 16, column: 9, scope: !4193)
!4195 = !DILocation(line: 17, column: 9, scope: !4193)
!4196 = !DILocation(line: 19, column: 2, scope: !4193)
!4197 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests9test_noop13test_nofnargs28_$u7b$$u7b$closure$u7d$$u7d$17h7138966bf29b488dE", scope: !908, file: !4185, line: 22, type: !4198, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4201)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{null, !4200}
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_noop::test_nofnargs::{closure_env#0}", baseType: !907, size: 64, align: 64, dwarfAddressSpace: 0)
!4201 = !{!4202}
!4202 = !DILocalVariable(arg: 1, scope: !4197, file: !4185, line: 22, type: !4200)
!4203 = !DILocation(line: 22, column: 1, scope: !4197)
!4204 = !DILocation(line: 28, column: 2, scope: !4197)
!4205 = distinct !DISubprogram(name: "test_nofnargs", scope: !909, file: !4185, line: 22, type: !21, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4206)
!4206 = !{!4207, !4209, !4211, !4214, !4215, !4218, !4221, !4222}
!4207 = !DILocalVariable(name: "ret", scope: !4208, file: !4185, line: 23, type: !90, align: 4)
!4208 = distinct !DILexicalBlock(scope: !4205, file: !4185, line: 23, column: 5)
!4209 = !DILocalVariable(name: "rust_ret", scope: !4210, file: !4185, line: 24, type: !90, align: 4)
!4210 = distinct !DILexicalBlock(scope: !4208, file: !4185, line: 24, column: 5)
!4211 = !DILocalVariable(name: "left_val", scope: !4212, file: !4185, line: 26, type: !89, align: 8)
!4212 = !DILexicalBlockFile(scope: !4213, file: !4185, discriminator: 0)
!4213 = distinct !DILexicalBlock(scope: !4210, file: !2580, line: 39, column: 13)
!4214 = !DILocalVariable(name: "right_val", scope: !4212, file: !4185, line: 26, type: !89, align: 8)
!4215 = !DILocalVariable(name: "kind", scope: !4216, file: !4185, line: 26, type: !196, align: 1)
!4216 = !DILexicalBlockFile(scope: !4217, file: !4185, discriminator: 0)
!4217 = distinct !DILexicalBlock(scope: !4213, file: !2580, line: 41, column: 21)
!4218 = !DILocalVariable(name: "left_val", scope: !4219, file: !4185, line: 27, type: !89, align: 8)
!4219 = !DILexicalBlockFile(scope: !4220, file: !4185, discriminator: 0)
!4220 = distinct !DILexicalBlock(scope: !4210, file: !2580, line: 39, column: 13)
!4221 = !DILocalVariable(name: "right_val", scope: !4219, file: !4185, line: 27, type: !89, align: 8)
!4222 = !DILocalVariable(name: "kind", scope: !4223, file: !4185, line: 27, type: !196, align: 1)
!4223 = !DILexicalBlockFile(scope: !4224, file: !4185, discriminator: 0)
!4224 = distinct !DILexicalBlock(scope: !4220, file: !2580, line: 41, column: 21)
!4225 = !DILocation(line: 23, column: 9, scope: !4208)
!4226 = !DILocation(line: 24, column: 9, scope: !4210)
!4227 = !DILocation(line: 26, column: 5, scope: !4216)
!4228 = !DILocation(line: 27, column: 5, scope: !4223)
!4229 = !DILocation(line: 23, column: 24, scope: !4205)
!4230 = !DILocation(line: 24, column: 29, scope: !4208)
!4231 = !DILocation(line: 26, column: 5, scope: !4210)
!4232 = !DILocation(line: 26, column: 5, scope: !4212)
!4233 = !DILocation(line: 27, column: 5, scope: !4210)
!4234 = !DILocation(line: 27, column: 5, scope: !4219)
!4235 = !DILocation(line: 28, column: 2, scope: !4205)
!4236 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests12test_linking12test_linking28_$u7b$$u7b$closure$u7d$$u7d$17h0e727e4d4b2158baE", scope: !994, file: !4237, line: 12, type: !4238, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4241)
!4237 = !DIFile(filename: "src/test_linking.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "c2b094ca1202619de3ff43d9877debaa")
!4238 = !DISubroutineType(types: !4239)
!4239 = !{null, !4240}
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_linking::test_linking::{closure_env#0}", baseType: !993, size: 64, align: 64, dwarfAddressSpace: 0)
!4241 = !{!4242}
!4242 = !DILocalVariable(arg: 1, scope: !4236, file: !4237, line: 12, type: !4240)
!4243 = !DILocation(line: 12, column: 1, scope: !4236)
!4244 = !DILocation(line: 28, column: 2, scope: !4236)
!4245 = distinct !DISubprogram(name: "test_linking", scope: !995, file: !4237, line: 12, type: !21, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4246)
!4246 = !{!4247, !4249, !4251, !4254, !4255, !4258, !4261, !4262, !4265, !4268, !4269, !4272, !4275, !4276, !4279, !4282, !4283, !4286, !4289, !4290}
!4247 = !DILocalVariable(name: "ret", scope: !4248, file: !4237, line: 13, type: !90, align: 4)
!4248 = distinct !DILexicalBlock(scope: !4245, file: !4237, line: 13, column: 5)
!4249 = !DILocalVariable(name: "rust_ret", scope: !4250, file: !4237, line: 15, type: !90, align: 4)
!4250 = distinct !DILexicalBlock(scope: !4248, file: !4237, line: 15, column: 5)
!4251 = !DILocalVariable(name: "left_val", scope: !4252, file: !4237, line: 17, type: !89, align: 8)
!4252 = !DILexicalBlockFile(scope: !4253, file: !4237, discriminator: 0)
!4253 = distinct !DILexicalBlock(scope: !4250, file: !2580, line: 39, column: 13)
!4254 = !DILocalVariable(name: "right_val", scope: !4252, file: !4237, line: 17, type: !89, align: 8)
!4255 = !DILocalVariable(name: "kind", scope: !4256, file: !4237, line: 17, type: !196, align: 1)
!4256 = !DILexicalBlockFile(scope: !4257, file: !4237, discriminator: 0)
!4257 = distinct !DILexicalBlock(scope: !4253, file: !2580, line: 41, column: 21)
!4258 = !DILocalVariable(name: "left_val", scope: !4259, file: !4237, line: 18, type: !89, align: 8)
!4259 = !DILexicalBlockFile(scope: !4260, file: !4237, discriminator: 0)
!4260 = distinct !DILexicalBlock(scope: !4250, file: !2580, line: 39, column: 13)
!4261 = !DILocalVariable(name: "right_val", scope: !4259, file: !4237, line: 18, type: !89, align: 8)
!4262 = !DILocalVariable(name: "kind", scope: !4263, file: !4237, line: 18, type: !196, align: 1)
!4263 = !DILexicalBlockFile(scope: !4264, file: !4237, discriminator: 0)
!4264 = distinct !DILexicalBlock(scope: !4260, file: !2580, line: 41, column: 21)
!4265 = !DILocalVariable(name: "left_val", scope: !4266, file: !4237, line: 19, type: !89, align: 8)
!4266 = !DILexicalBlockFile(scope: !4267, file: !4237, discriminator: 0)
!4267 = distinct !DILexicalBlock(scope: !4250, file: !2580, line: 39, column: 13)
!4268 = !DILocalVariable(name: "right_val", scope: !4266, file: !4237, line: 19, type: !89, align: 8)
!4269 = !DILocalVariable(name: "kind", scope: !4270, file: !4237, line: 19, type: !196, align: 1)
!4270 = !DILexicalBlockFile(scope: !4271, file: !4237, discriminator: 0)
!4271 = distinct !DILexicalBlock(scope: !4267, file: !2580, line: 41, column: 21)
!4272 = !DILocalVariable(name: "left_val", scope: !4273, file: !4237, line: 25, type: !89, align: 8)
!4273 = !DILexicalBlockFile(scope: !4274, file: !4237, discriminator: 0)
!4274 = distinct !DILexicalBlock(scope: !4250, file: !2580, line: 39, column: 13)
!4275 = !DILocalVariable(name: "right_val", scope: !4273, file: !4237, line: 25, type: !89, align: 8)
!4276 = !DILocalVariable(name: "kind", scope: !4277, file: !4237, line: 25, type: !196, align: 1)
!4277 = !DILexicalBlockFile(scope: !4278, file: !4237, discriminator: 0)
!4278 = distinct !DILexicalBlock(scope: !4274, file: !2580, line: 41, column: 21)
!4279 = !DILocalVariable(name: "left_val", scope: !4280, file: !4237, line: 26, type: !89, align: 8)
!4280 = !DILexicalBlockFile(scope: !4281, file: !4237, discriminator: 0)
!4281 = distinct !DILexicalBlock(scope: !4250, file: !2580, line: 39, column: 13)
!4282 = !DILocalVariable(name: "right_val", scope: !4280, file: !4237, line: 26, type: !89, align: 8)
!4283 = !DILocalVariable(name: "kind", scope: !4284, file: !4237, line: 26, type: !196, align: 1)
!4284 = !DILexicalBlockFile(scope: !4285, file: !4237, discriminator: 0)
!4285 = distinct !DILexicalBlock(scope: !4281, file: !2580, line: 41, column: 21)
!4286 = !DILocalVariable(name: "left_val", scope: !4287, file: !4237, line: 27, type: !89, align: 8)
!4287 = !DILexicalBlockFile(scope: !4288, file: !4237, discriminator: 0)
!4288 = distinct !DILexicalBlock(scope: !4250, file: !2580, line: 39, column: 13)
!4289 = !DILocalVariable(name: "right_val", scope: !4287, file: !4237, line: 27, type: !89, align: 8)
!4290 = !DILocalVariable(name: "kind", scope: !4291, file: !4237, line: 27, type: !196, align: 1)
!4291 = !DILexicalBlockFile(scope: !4292, file: !4237, discriminator: 0)
!4292 = distinct !DILexicalBlock(scope: !4288, file: !2580, line: 41, column: 21)
!4293 = !DILocation(line: 13, column: 9, scope: !4248)
!4294 = !DILocation(line: 15, column: 9, scope: !4250)
!4295 = !DILocation(line: 17, column: 5, scope: !4256)
!4296 = !DILocation(line: 18, column: 5, scope: !4263)
!4297 = !DILocation(line: 19, column: 5, scope: !4270)
!4298 = !DILocation(line: 25, column: 5, scope: !4277)
!4299 = !DILocation(line: 26, column: 5, scope: !4284)
!4300 = !DILocation(line: 27, column: 5, scope: !4291)
!4301 = !DILocation(line: 13, column: 28, scope: !4245)
!4302 = !DILocation(line: 15, column: 33, scope: !4248)
!4303 = !DILocation(line: 17, column: 5, scope: !4250)
!4304 = !DILocation(line: 17, column: 5, scope: !4252)
!4305 = !DILocation(line: 18, column: 5, scope: !4250)
!4306 = !DILocation(line: 18, column: 5, scope: !4259)
!4307 = !DILocation(line: 19, column: 5, scope: !4250)
!4308 = !DILocation(line: 19, column: 5, scope: !4266)
!4309 = !DILocation(line: 21, column: 20, scope: !4250)
!4310 = !DILocation(line: 21, column: 5, scope: !4250)
!4311 = !DILocation(line: 23, column: 25, scope: !4250)
!4312 = !DILocation(line: 23, column: 5, scope: !4250)
!4313 = !DILocation(line: 25, column: 5, scope: !4250)
!4314 = !DILocation(line: 25, column: 5, scope: !4273)
!4315 = !DILocation(line: 26, column: 5, scope: !4250)
!4316 = !DILocation(line: 26, column: 5, scope: !4280)
!4317 = !DILocation(line: 27, column: 5, scope: !4250)
!4318 = !DILocation(line: 27, column: 5, scope: !4287)
!4319 = !DILocation(line: 28, column: 2, scope: !4245)
!4320 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests14test_functions28test_coreutils_static_assert28_$u7b$$u7b$closure$u7d$$u7d$17h7050d3523f1ec425E", scope: !982, file: !4321, line: 9, type: !4322, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4325)
!4321 = !DIFile(filename: "src/test_functions.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "a46deb2996d7f832a10c085e432e3195")
!4322 = !DISubroutineType(types: !4323)
!4323 = !{null, !4324}
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_functions::test_coreutils_static_assert::{closure_env#0}", baseType: !981, size: 64, align: 64, dwarfAddressSpace: 0)
!4325 = !{!4326}
!4326 = !DILocalVariable(arg: 1, scope: !4320, file: !4321, line: 9, type: !4324)
!4327 = !DILocation(line: 9, column: 1, scope: !4320)
!4328 = !DILocation(line: 14, column: 2, scope: !4320)
!4329 = distinct !DISubprogram(name: "test_coreutils_static_assert", scope: !983, file: !4321, line: 9, type: !21, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4330 = !DILocation(line: 11, column: 9, scope: !4329)
!4331 = !DILocation(line: 12, column: 9, scope: !4329)
!4332 = !DILocation(line: 14, column: 2, scope: !4329)
!4333 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests13test_fn_attrs13test_fn_attrs28_$u7b$$u7b$closure$u7d$$u7d$17h714141d32e086469E", scope: !1006, file: !4334, line: 4, type: !4335, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4338)
!4334 = !DIFile(filename: "src/test_fn_attrs.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "705e52dc2988ea8609db412c727eea22")
!4335 = !DISubroutineType(types: !4336)
!4336 = !{null, !4337}
!4337 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_fn_attrs::test_fn_attrs::{closure_env#0}", baseType: !1005, size: 64, align: 64, dwarfAddressSpace: 0)
!4338 = !{!4339}
!4339 = !DILocalVariable(arg: 1, scope: !4333, file: !4334, line: 4, type: !4337)
!4340 = !DILocation(line: 4, column: 1, scope: !4333)
!4341 = !DILocation(line: 64, column: 2, scope: !4333)
!4342 = distinct !DISubprogram(name: "test_fn_attrs", scope: !1007, file: !4334, line: 4, type: !21, scopeLine: 4, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4343)
!4343 = !{!4344}
!4344 = !DILocalVariable(name: "src", scope: !4345, file: !4334, line: 7, type: !655, align: 8)
!4345 = distinct !DILexicalBlock(scope: !4342, file: !4334, line: 7, column: 5)
!4346 = !DILocation(line: 7, column: 15, scope: !4342)
!4347 = !DILocation(line: 7, column: 9, scope: !4345)
!4348 = !DILocation(line: 25, column: 13, scope: !4345)
!4349 = !DILocation(line: 25, column: 5, scope: !4345)
!4350 = !DILocation(line: 26, column: 13, scope: !4345)
!4351 = !DILocation(line: 26, column: 5, scope: !4345)
!4352 = !DILocation(line: 27, column: 13, scope: !4345)
!4353 = !DILocation(line: 27, column: 5, scope: !4345)
!4354 = !DILocation(line: 28, column: 13, scope: !4345)
!4355 = !DILocation(line: 28, column: 5, scope: !4345)
!4356 = !DILocation(line: 29, column: 13, scope: !4345)
!4357 = !DILocation(line: 29, column: 5, scope: !4345)
!4358 = !DILocation(line: 30, column: 13, scope: !4345)
!4359 = !DILocation(line: 30, column: 5, scope: !4345)
!4360 = !DILocation(line: 35, column: 13, scope: !4345)
!4361 = !DILocation(line: 35, column: 5, scope: !4345)
!4362 = !DILocation(line: 36, column: 13, scope: !4345)
!4363 = !DILocation(line: 36, column: 5, scope: !4345)
!4364 = !DILocation(line: 37, column: 13, scope: !4345)
!4365 = !DILocation(line: 37, column: 5, scope: !4345)
!4366 = !DILocation(line: 38, column: 13, scope: !4345)
!4367 = !DILocation(line: 38, column: 5, scope: !4345)
!4368 = !DILocation(line: 39, column: 13, scope: !4345)
!4369 = !DILocation(line: 39, column: 5, scope: !4345)
!4370 = !DILocation(line: 45, column: 13, scope: !4345)
!4371 = !DILocation(line: 45, column: 5, scope: !4345)
!4372 = !DILocation(line: 48, column: 13, scope: !4345)
!4373 = !DILocation(line: 48, column: 5, scope: !4345)
!4374 = !DILocation(line: 49, column: 13, scope: !4345)
!4375 = !DILocation(line: 49, column: 5, scope: !4345)
!4376 = !DILocation(line: 50, column: 13, scope: !4345)
!4377 = !DILocation(line: 50, column: 5, scope: !4345)
!4378 = !DILocation(line: 51, column: 13, scope: !4345)
!4379 = !DILocation(line: 51, column: 5, scope: !4345)
!4380 = !DILocation(line: 54, column: 13, scope: !4345)
!4381 = !DILocation(line: 54, column: 5, scope: !4345)
!4382 = !DILocation(line: 60, column: 17, scope: !4345)
!4383 = !DILocation(line: 60, column: 9, scope: !4345)
!4384 = !DILocation(line: 64, column: 2, scope: !4342)
!4385 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests12test_varargs16test_call_printf28_$u7b$$u7b$closure$u7d$$u7d$17h7769b24fd3ad455bE", scope: !920, file: !4386, line: 41, type: !4387, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4390)
!4386 = !DIFile(filename: "src/test_varargs.rs", directory: "/home/calvin/git/c2rust/tests/items", checksumkind: CSK_MD5, checksum: "f174b4fedd453915a7059e71d610572b")
!4387 = !DISubroutineType(types: !4388)
!4388 = !{null, !4389}
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_varargs::test_call_printf::{closure_env#0}", baseType: !919, size: 64, align: 64, dwarfAddressSpace: 0)
!4390 = !{!4391}
!4391 = !DILocalVariable(arg: 1, scope: !4385, file: !4386, line: 41, type: !4389)
!4392 = !DILocation(line: 41, column: 1, scope: !4385)
!4393 = !DILocation(line: 46, column: 2, scope: !4385)
!4394 = distinct !DISubprogram(name: "test_call_printf", scope: !897, file: !4386, line: 41, type: !21, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !23)
!4395 = !DILocation(line: 43, column: 9, scope: !4394)
!4396 = !DILocation(line: 44, column: 9, scope: !4394)
!4397 = !DILocation(line: 46, column: 2, scope: !4394)
!4398 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests12test_varargs17test_call_vprintf28_$u7b$$u7b$closure$u7d$$u7d$17h7f42e6bd2a229663E", scope: !942, file: !4386, line: 51, type: !4399, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4402)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{null, !4401}
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_varargs::test_call_vprintf::{closure_env#0}", baseType: !941, size: 64, align: 64, dwarfAddressSpace: 0)
!4402 = !{!4403}
!4403 = !DILocalVariable(arg: 1, scope: !4398, file: !4386, line: 51, type: !4401)
!4404 = !DILocation(line: 51, column: 1, scope: !4398)
!4405 = !DILocation(line: 57, column: 2, scope: !4398)
!4406 = distinct !DISubprogram(name: "test_call_vprintf", scope: !897, file: !4386, line: 51, type: !21, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4407)
!4407 = !{!4408}
!4408 = !DILocalVariable(name: "fmt_str", scope: !4409, file: !4386, line: 52, type: !1094, align: 8)
!4409 = distinct !DILexicalBlock(scope: !4406, file: !4386, line: 52, column: 5)
!4410 = !DILocation(line: 52, column: 9, scope: !4409)
!4411 = !DILocation(line: 52, column: 19, scope: !4406)
!4412 = !DILocation(line: 54, column: 22, scope: !4409)
!4413 = !DILocation(line: 57, column: 1, scope: !4406)
!4414 = !DILocation(line: 54, column: 9, scope: !4409)
!4415 = !DILocation(line: 55, column: 27, scope: !4409)
!4416 = !DILocation(line: 55, column: 9, scope: !4409)
!4417 = !DILocation(line: 51, column: 1, scope: !4406)
!4418 = !DILocation(line: 57, column: 2, scope: !4406)
!4419 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests12test_varargs14test_my_printf28_$u7b$$u7b$closure$u7d$$u7d$17hbbba3c461f8facb5E", scope: !1018, file: !4386, line: 62, type: !4420, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4423)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{null, !4422}
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_varargs::test_my_printf::{closure_env#0}", baseType: !1017, size: 64, align: 64, dwarfAddressSpace: 0)
!4423 = !{!4424}
!4424 = !DILocalVariable(arg: 1, scope: !4419, file: !4386, line: 62, type: !4422)
!4425 = !DILocation(line: 62, column: 1, scope: !4419)
!4426 = !DILocation(line: 69, column: 2, scope: !4419)
!4427 = distinct !DISubprogram(name: "test_my_printf", scope: !897, file: !4386, line: 62, type: !21, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4428)
!4428 = !{!4429, !4431}
!4429 = !DILocalVariable(name: "fmt_str", scope: !4430, file: !4386, line: 63, type: !1094, align: 8)
!4430 = distinct !DILexicalBlock(scope: !4427, file: !4386, line: 63, column: 5)
!4431 = !DILocalVariable(name: "test_str", scope: !4432, file: !4386, line: 64, type: !1094, align: 8)
!4432 = distinct !DILexicalBlock(scope: !4430, file: !4386, line: 64, column: 5)
!4433 = !DILocation(line: 63, column: 9, scope: !4430)
!4434 = !DILocation(line: 64, column: 9, scope: !4432)
!4435 = !DILocation(line: 63, column: 19, scope: !4427)
!4436 = !DILocation(line: 64, column: 20, scope: !4430)
!4437 = !DILocation(line: 69, column: 1, scope: !4427)
!4438 = !DILocation(line: 66, column: 19, scope: !4432)
!4439 = !DILocation(line: 69, column: 1, scope: !4430)
!4440 = !DILocation(line: 66, column: 46, scope: !4432)
!4441 = !DILocation(line: 66, column: 9, scope: !4432)
!4442 = !DILocation(line: 67, column: 24, scope: !4432)
!4443 = !DILocation(line: 67, column: 51, scope: !4432)
!4444 = !DILocation(line: 67, column: 9, scope: !4432)
!4445 = !DILocation(line: 62, column: 1, scope: !4427)
!4446 = !DILocation(line: 69, column: 2, scope: !4427)
!4447 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests12test_varargs18test_simple_vacopy28_$u7b$$u7b$closure$u7d$$u7d$17hce8dd81165069b8dE", scope: !896, file: !4386, line: 73, type: !4448, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4451)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{null, !4450}
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_varargs::test_simple_vacopy::{closure_env#0}", baseType: !895, size: 64, align: 64, dwarfAddressSpace: 0)
!4451 = !{!4452}
!4452 = !DILocalVariable(arg: 1, scope: !4447, file: !4386, line: 73, type: !4450)
!4453 = !DILocation(line: 73, column: 1, scope: !4447)
!4454 = !DILocation(line: 79, column: 2, scope: !4447)
!4455 = distinct !DISubprogram(name: "test_simple_vacopy", scope: !897, file: !4386, line: 73, type: !21, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4456)
!4456 = !{!4457}
!4457 = !DILocalVariable(name: "fmt_str", scope: !4458, file: !4386, line: 74, type: !1094, align: 8)
!4458 = distinct !DILexicalBlock(scope: !4455, file: !4386, line: 74, column: 5)
!4459 = !DILocation(line: 74, column: 9, scope: !4458)
!4460 = !DILocation(line: 74, column: 19, scope: !4455)
!4461 = !DILocation(line: 76, column: 23, scope: !4458)
!4462 = !DILocation(line: 79, column: 1, scope: !4455)
!4463 = !DILocation(line: 76, column: 9, scope: !4458)
!4464 = !DILocation(line: 77, column: 28, scope: !4458)
!4465 = !DILocation(line: 77, column: 9, scope: !4458)
!4466 = !DILocation(line: 73, column: 1, scope: !4455)
!4467 = !DILocation(line: 79, column: 2, scope: !4455)
!4468 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests12test_varargs25test_valist_struct_member28_$u7b$$u7b$closure$u7d$$u7d$17h5c1477b770555c50E", scope: !931, file: !4386, line: 83, type: !4469, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4472)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{null, !4471}
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_varargs::test_valist_struct_member::{closure_env#0}", baseType: !930, size: 64, align: 64, dwarfAddressSpace: 0)
!4472 = !{!4473}
!4473 = !DILocalVariable(arg: 1, scope: !4468, file: !4386, line: 83, type: !4471)
!4474 = !DILocation(line: 83, column: 1, scope: !4468)
!4475 = !DILocation(line: 89, column: 2, scope: !4468)
!4476 = distinct !DISubprogram(name: "test_valist_struct_member", scope: !897, file: !4386, line: 83, type: !21, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4477)
!4477 = !{!4478}
!4478 = !DILocalVariable(name: "fmt_str", scope: !4479, file: !4386, line: 84, type: !1094, align: 8)
!4479 = distinct !DILexicalBlock(scope: !4476, file: !4386, line: 84, column: 5)
!4480 = !DILocation(line: 84, column: 9, scope: !4479)
!4481 = !DILocation(line: 84, column: 19, scope: !4476)
!4482 = !DILocation(line: 86, column: 30, scope: !4479)
!4483 = !DILocation(line: 89, column: 1, scope: !4476)
!4484 = !DILocation(line: 86, column: 9, scope: !4479)
!4485 = !DILocation(line: 87, column: 35, scope: !4479)
!4486 = !DILocation(line: 87, column: 9, scope: !4479)
!4487 = !DILocation(line: 83, column: 1, scope: !4476)
!4488 = !DILocation(line: 89, column: 2, scope: !4476)
!4489 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests12test_varargs33test_valist_struct_pointer_member28_$u7b$$u7b$closure$u7d$$u7d$17h9352fcc9fc119ee9E", scope: !1029, file: !4386, line: 93, type: !4490, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4493)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{null, !4492}
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_varargs::test_valist_struct_pointer_member::{closure_env#0}", baseType: !1028, size: 64, align: 64, dwarfAddressSpace: 0)
!4493 = !{!4494}
!4494 = !DILocalVariable(arg: 1, scope: !4489, file: !4386, line: 93, type: !4492)
!4495 = !DILocation(line: 93, column: 1, scope: !4489)
!4496 = !DILocation(line: 99, column: 2, scope: !4489)
!4497 = distinct !DISubprogram(name: "test_valist_struct_pointer_member", scope: !897, file: !4386, line: 93, type: !21, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4498)
!4498 = !{!4499}
!4499 = !DILocalVariable(name: "fmt_str", scope: !4500, file: !4386, line: 94, type: !1094, align: 8)
!4500 = distinct !DILexicalBlock(scope: !4497, file: !4386, line: 94, column: 5)
!4501 = !DILocation(line: 94, column: 9, scope: !4500)
!4502 = !DILocation(line: 94, column: 19, scope: !4497)
!4503 = !DILocation(line: 96, column: 38, scope: !4500)
!4504 = !DILocation(line: 99, column: 1, scope: !4497)
!4505 = !DILocation(line: 96, column: 9, scope: !4500)
!4506 = !DILocation(line: 97, column: 43, scope: !4500)
!4507 = !DILocation(line: 97, column: 9, scope: !4500)
!4508 = !DILocation(line: 93, column: 1, scope: !4497)
!4509 = !DILocation(line: 99, column: 2, scope: !4497)
!4510 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests12test_varargs19test_restart_valist28_$u7b$$u7b$closure$u7d$$u7d$17h62cd1bc9af715e26E", scope: !960, file: !4386, line: 103, type: !4511, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4514)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{null, !4513}
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_varargs::test_restart_valist::{closure_env#0}", baseType: !959, size: 64, align: 64, dwarfAddressSpace: 0)
!4514 = !{!4515}
!4515 = !DILocalVariable(arg: 1, scope: !4510, file: !4386, line: 103, type: !4513)
!4516 = !DILocation(line: 103, column: 1, scope: !4510)
!4517 = !DILocation(line: 109, column: 2, scope: !4510)
!4518 = distinct !DISubprogram(name: "test_restart_valist", scope: !897, file: !4386, line: 103, type: !21, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4519)
!4519 = !{!4520}
!4520 = !DILocalVariable(name: "fmt_str", scope: !4521, file: !4386, line: 104, type: !1094, align: 8)
!4521 = distinct !DILexicalBlock(scope: !4518, file: !4386, line: 104, column: 5)
!4522 = !DILocation(line: 104, column: 9, scope: !4521)
!4523 = !DILocation(line: 104, column: 19, scope: !4518)
!4524 = !DILocation(line: 106, column: 24, scope: !4521)
!4525 = !DILocation(line: 109, column: 1, scope: !4518)
!4526 = !DILocation(line: 106, column: 9, scope: !4521)
!4527 = !DILocation(line: 107, column: 29, scope: !4521)
!4528 = !DILocation(line: 107, column: 9, scope: !4521)
!4529 = !DILocation(line: 103, column: 1, scope: !4518)
!4530 = !DILocation(line: 109, column: 2, scope: !4518)
!4531 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11items_tests12test_varargs18test_sample_stddev28_$u7b$$u7b$closure$u7d$$u7d$17h5b0b6323e1a2b9e7E", scope: !1040, file: !4386, line: 113, type: !4532, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4535)
!4532 = !DISubroutineType(types: !4533)
!4533 = !{null, !4534}
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&items_tests::test_varargs::test_sample_stddev::{closure_env#0}", baseType: !1039, size: 64, align: 64, dwarfAddressSpace: 0)
!4535 = !{!4536}
!4536 = !DILocalVariable(arg: 1, scope: !4531, file: !4386, line: 113, type: !4534)
!4537 = !DILocation(line: 113, column: 1, scope: !4531)
!4538 = !DILocation(line: 119, column: 2, scope: !4531)
!4539 = distinct !DISubprogram(name: "test_sample_stddev", scope: !897, file: !4386, line: 113, type: !21, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !103, templateParams: !23, retainedNodes: !4540)
!4540 = !{!4541, !4543, !4545, !4548, !4549}
!4541 = !DILocalVariable(name: "c_res", scope: !4542, file: !4386, line: 115, type: !80, align: 8)
!4542 = distinct !DILexicalBlock(scope: !4539, file: !4386, line: 115, column: 9)
!4543 = !DILocalVariable(name: "rs_res", scope: !4544, file: !4386, line: 116, type: !80, align: 8)
!4544 = distinct !DILexicalBlock(scope: !4542, file: !4386, line: 116, column: 9)
!4545 = !DILocalVariable(name: "left_val", scope: !4546, file: !4386, line: 117, type: !79, align: 8)
!4546 = !DILexicalBlockFile(scope: !4547, file: !4386, discriminator: 0)
!4547 = distinct !DILexicalBlock(scope: !4544, file: !2580, line: 39, column: 13)
!4548 = !DILocalVariable(name: "right_val", scope: !4546, file: !4386, line: 117, type: !79, align: 8)
!4549 = !DILocalVariable(name: "kind", scope: !4550, file: !4386, line: 117, type: !196, align: 1)
!4550 = !DILexicalBlockFile(scope: !4551, file: !4386, discriminator: 0)
!4551 = distinct !DILexicalBlock(scope: !4547, file: !2580, line: 41, column: 21)
!4552 = !DILocation(line: 115, column: 13, scope: !4542)
!4553 = !DILocation(line: 116, column: 13, scope: !4544)
!4554 = !DILocation(line: 117, column: 9, scope: !4550)
!4555 = !DILocation(line: 115, column: 21, scope: !4539)
!4556 = !DILocation(line: 116, column: 22, scope: !4542)
!4557 = !DILocation(line: 117, column: 9, scope: !4544)
!4558 = !DILocation(line: 117, column: 9, scope: !4546)
!4559 = !DILocation(line: 119, column: 2, scope: !4539)
!4560 = distinct !DISubprogram(name: "main", linkageName: "_ZN11items_tests4main17h1cb78fd7243f8820E", scope: !94, file: !1311, line: 1, type: !21, scopeLine: 1, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagMainSubprogram, unit: !103, templateParams: !23, retainedNodes: !23)
!4561 = !DILocation(line: 1, column: 1, scope: !4560)
