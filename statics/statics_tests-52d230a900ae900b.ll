; ModuleID = 'zf7m485wsz09ju'
source_filename = "zf7m485wsz09ju"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"alloc::vec::Vec<&str>" = type { { i64*, i64 }, i64 }
%"core::str::iter::Lines" = type { %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>" }
%"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>" = type { %"core::str::LinesAnyMap", %"core::str::iter::SplitTerminator<char>" }
%"core::str::LinesAnyMap" = type {}
%"core::str::iter::SplitTerminator<char>" = type { %"core::str::iter::SplitInternal<char>" }
%"core::str::iter::SplitInternal<char>" = type { i64, i64, %"core::str::pattern::CharSearcher", i8, i8, [6 x i8] }
%"core::str::pattern::CharSearcher" = type { { [0 x i8]*, i64 }, i64, i64, i64, i32, [4 x i8] }
%"alloc::alloc::Global" = type {}
%"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>" = type { %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]" }
%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]" = type { %"[closure@src/test_thread_locals.rs:56:27: 56:29]" }
%"[closure@src/test_thread_locals.rs:56:27: 56:29]" = type {}
%"std::sys::unix::stdio::Stderr" = type { {} }
%"std::io::error::SimpleMessage" = type { { [0 x i8]*, i64 }, i8, [7 x i8] }
%"core::result::Result<usize, std::io::error::Error>" = type { i64, [1 x i64] }
%"core::result::Result<usize, std::io::error::Error>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, std::io::error::Error>::Err" = type { [1 x i64], i8* }
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>" = type { i8, [15 x i8] }
%"std::io::error::Custom" = type { { {}*, [3 x i64]* }, i8, [7 x i8] }
%"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]" = type {}
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os" = type { [1 x i32], i32 }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage" = type { [1 x i64], %"std::io::error::SimpleMessage"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple" = type { [1 x i8], i8 }
%"std::io::error::ErrorData<&std::io::error::Custom>" = type { i8, [15 x i8] }
%"[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]" = type {}
%"std::io::error::ErrorData<&std::io::error::Custom>::Os" = type { [1 x i32], i32 }
%"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage" = type { [1 x i64], %"std::io::error::SimpleMessage"* }
%"std::io::error::ErrorData<&std::io::error::Custom>::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::ErrorData<&std::io::error::Custom>::Simple" = type { [1 x i8], i8 }
%"core::fmt::UnsafeArg" = type { {} }
%"std::thread::JoinInner<()>" = type { i64, i64*, i64* }
%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>" = type { i64, [2 x i64] }
%"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>" = type { %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>" }
%"std::thread::Packet<()>" = type { %"core::marker::PhantomData<core::option::Option<&std::thread::scoped::ScopeData>>", i64*, %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>" }
%"core::marker::PhantomData<core::option::Option<&std::thread::scoped::ScopeData>>" = type {}
%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some" = type { [1 x i64], { i8*, i8* } }
%"std::thread::JoinHandle<()>" = type { %"std::thread::JoinInner<()>" }
%"std::thread::Builder" = type { %"core::option::Option<alloc::string::String>", { i64, i64 } }
%"core::option::Option<alloc::string::String>" = type { {}*, [2 x i64] }
%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>" = type { i64, [3 x i64] }
%"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>" = type { i64, [3 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>" = type { i64, [3 x i64] }
%"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Ok" = type { [1 x i64], %"std::thread::JoinInner<()>" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Continue" = type { [1 x i64], %"std::thread::JoinInner<()>" }
%"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Err" = type { [1 x i64], i8* }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Break" = type { [1 x i64], i8* }
%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Ok" = type { [1 x i64], %"std::thread::JoinHandle<()>" }
%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Err" = type { [1 x i64], i8* }
%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]" = type { %"[closure@src/test_thread_locals.rs:56:27: 56:29]", i64*, i64*, i64* }
%"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>" = type { i64, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>" = type { i64, [1 x i64] }
%"alloc::sync::ArcInner<std::thread::Packet<()>>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::thread::Packet<()>" }
%"core::sync::atomic::AtomicUsize" = type { i64 }
%"alloc::sync::ArcInner<std::thread::scoped::ScopeData>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::thread::scoped::ScopeData" }
%"std::thread::scoped::ScopeData" = type { %"core::sync::atomic::AtomicUsize", i64*, %"core::sync::atomic::AtomicBool", [7 x i8] }
%"core::sync::atomic::AtomicBool" = type { i8 }
%"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Continue" = type { [1 x i64], i64 }
%"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>::Err" = type { [1 x i64], i8* }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Break" = type { [1 x i64], i8* }
%"core::ffi::c_str::CStr" = type { [0 x i8] }
%"core::option::Option<core::ops::range::Range<usize>>" = type { i64, [2 x i64] }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#0}]" = type {}
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>" = type { i64, [4 x i64] }
%"core::mem::manually_drop::ManuallyDrop<()>" = type { {} }
%"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>" = type { %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>" }
%"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok" = type { {} }
%"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>" = type { [2 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>" = type { [0 x i8] }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::fmt::builders::DebugList" = type { %"core::fmt::builders::DebugInner" }
%"core::fmt::builders::DebugInner" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>" = type { %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>" }
%"[closure@src/test_sections.rs:7:1: 29:2]" = type {}
%"[closure@src/test_thread_locals.rs:53:1: 64:2]" = type {}
%"[closure@src/test_storage.rs:12:1: 24:2]" = type {}
%"[closure@src/test_sections.rs:32:1: 55:2]" = type {}
%"std::thread::Inner" = type { { i8*, i64 }, i64, %"std::sys_common::thread_parker::futex::Parker", [1 x i32] }
%"std::sys_common::thread_parker::futex::Parker" = type { %"core::sync::atomic::AtomicU32" }
%"core::sync::atomic::AtomicU32" = type { i32 }
%"alloc::ffi::c_str::NulError" = type { i64, %"alloc::vec::Vec<u8>" }
%"core::option::Option<alloc::string::String>::Some" = type { %"alloc::string::String" }
%"core::cell::UnsafeCell<alloc::vec::Vec<u8>>" = type { %"alloc::vec::Vec<u8>" }
%"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>" = type { %"std::sys_common::mutex::MovableMutex", %"std::sync::poison::Flag", [3 x i8], %"core::cell::UnsafeCell<alloc::vec::Vec<u8>>" }
%"std::sys_common::mutex::MovableMutex" = type { %"std::sys::unix::locks::futex_mutex::Mutex" }
%"std::sys::unix::locks::futex_mutex::Mutex" = type { %"core::sync::atomic::AtomicU32" }
%"std::sync::poison::Flag" = type { %"core::sync::atomic::AtomicBool" }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"core::option::Option<core::convert::Infallible>::None" = type {}
%"core::str::iter::Split<char>" = type { %"core::str::iter::SplitInternal<char>" }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::str::pattern::TwoWaySearcher" = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::StrSearcher" = type { { [0 x i8]*, i64 }, { [0 x i8]*, i64 }, %"core::str::pattern::StrSearcherImpl" }
%"core::str::pattern::StrSearcherImpl" = type { i64, [8 x i64] }
%"core::fmt::Opaque" = type {}
%"core::ops::range::RangeFull" = type {}
%"alloc::sync::ArcInner<std::thread::Inner>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::thread::Inner" }
%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>" = type { %"core::sync::atomic::AtomicUsize", %"core::sync::atomic::AtomicUsize", %"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>" }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]" = type {}
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err" = type { [1 x i64], %"alloc::ffi::c_str::NulError" }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { {} }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]" = type {}
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"core::option::Option<core::fmt::Arguments>::Some" = type { %"core::fmt::Arguments" }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ptr::metadata::PtrRepr<[&str]>" = type { [2 x i64] }
%"core::str::pattern::StrSearcherImpl::TwoWay" = type { [1 x i64], %"core::str::pattern::TwoWaySearcher" }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"core::str::pattern::EmptyNeedle" = type { i64, i64, i8, i8, i8, [5 x i8] }
%"core::str::pattern::StrSearcherImpl::Empty" = type { [1 x i64], %"core::str::pattern::EmptyNeedle" }
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"[closure@src/test_sections.rs:43:23: 43:27]" = type {}
%"sections::stat2" = type { i32* }
%"sections::stat" = type { i32** }
%"sections::Foo" = type { i32, i32, float }
%"sections::Bar" = type { i32* }
%"test::types::TestDescAndFn" = type { %"test::types::TestDesc", %"test::types::TestFn" }
%"test::types::TestDesc" = type { %"test::types::TestName", { i8*, i64 }, %"test::options::ShouldPanic", i8, i8, i8, i8, [4 x i8] }
%"test::types::TestName" = type { i8, [39 x i8] }
%"test::options::ShouldPanic" = type { i64, [2 x i64] }
%"test::types::TestFn" = type { i64, [2 x i64] }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc488 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"#" }>, align 1
@alloc619 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/io/mod.rs" }>, align 1
@alloc620 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [73 x i8] }>, <{ [73 x i8] }>* @alloc619, i32 0, i32 0, i32 0), [16 x i8] c"I\00\00\00\00\00\00\00\03\06\00\00!\00\00\00" }>, align 8
@alloc483 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"failed to write whole buffer" }>, align 1
@alloc486 = private unnamed_addr constant <{ i8*, [9 x i8], [7 x i8] }> <{ i8* getelementptr inbounds (<{ [28 x i8] }>, <{ [28 x i8] }>* @alloc483, i32 0, i32 0, i32 0), [9 x i8] c"\1C\00\00\00\00\00\00\00\17", [7 x i8] undef }>, align 8
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void ({ i8*, i8* }*)* @"_ZN4core3ptr92drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..sys..unix..stdio..Stderr$GT$$GT$17h3dab90b2d47f43a0E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i8*, i8* }*, [0 x i8]*, i64)* @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h3abb5efb30b14f62E" to i8*), i8* bitcast (i1 ({ i8*, i8* }*, i32)* @_ZN4core3fmt5Write10write_char17hb30bfcbec4888ae5E to i8*), i8* bitcast (i1 ({ i8*, i8* }*, %"core::fmt::Arguments"*)* @_ZN4core3fmt5Write9write_fmt17h5097526a53e38c49E to i8*) }>, align 8, !dbg !0
@alloc474 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"formatter error" }>, align 1
@alloc477 = private unnamed_addr constant <{ i8*, [9 x i8], [7 x i8] }> <{ i8* getelementptr inbounds (<{ [15 x i8] }>, <{ [15 x i8] }>* @alloc474, i32 0, i32 0, i32 0), [9 x i8] c"\0F\00\00\00\00\00\00\00(", [7 x i8] undef }>, align 8
@alloc629 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc627 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/io/error/repr_bitpacked.rs" }>, align 1
@alloc628 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc627, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\18\01\00\00\0D\00\00\00" }>, align 8
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hd98d205bccc6afd4E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i32 (i64**)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h042ae277a417f464E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h4c71719825c42f40E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h4c71719825c42f40E" to i8*) }>, align 8, !dbg !163
@alloc638 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@alloc646 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/thread/mod.rs" }>, align 1
@alloc637 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc646, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00N\05\00\00\09\00\00\00" }>, align 8
@alloc639 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"failed to spawn thread" }>, align 1
@alloc641 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc646, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\90\02\00\00\1D\00\00\00" }>, align 8
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"*)* @"_ZN4core3ptr189drop_in_place$LT$std..thread..Builder..spawn_unchecked_$LT$statics_tests..test_thread_locals..test_thread_locals..$u7b$$u7b$closure$u7d$$u7d$$C$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h9da1102cf83aa5bfE" to i8*), [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (void (%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"*)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17ha10b08c66f375c68E" to i8*) }>, align 8, !dbg !181
@alloc645 = private unnamed_addr constant <{ [47 x i8] }> <{ [47 x i8] c"thread name may not contain interior null bytes" }>, align 1
@alloc647 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc646, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\DF\01\00\00 \00\00\00" }>, align 8
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void ({ i8*, i8* }**)* @"_ZN4core3ptr104drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$std..sys..unix..stdio..Stderr$GT$$GT$17hb013d39e8cf08beeE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i8*, i8* }**, [0 x i8]*, i64)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h11b873e44897a10fE" to i8*), i8* bitcast (i1 ({ i8*, i8* }**, i32)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17ha752ff0d563c2184E" to i8*), i8* bitcast (i1 ({ i8*, i8* }**, %"core::fmt::Arguments"*)* @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h50b512549461be97E" to i8*) }>, align 8, !dbg !498
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i32**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h7747b4580dc61fe5E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i32**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf2e76c0a5a5bc719E" to i8*) }>, align 8, !dbg !509
@alloc300 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc301 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc300, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc470 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc656 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs" }>, align 1
@alloc657 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc656, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\88\01\00\00\0D\00\00\00" }>, align 8
@alloc658 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/mod.rs" }>, align 1
@alloc659 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc658, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00T\03\00\00\05\00\00\00" }>, align 8
@str.5 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc712 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/pattern.rs" }>, align 1
@alloc661 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc712, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00\14\00\00\00" }>, align 8
@alloc663 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc712, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\8C\05\00\00!\00\00\00" }>, align 8
@alloc665 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc712, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00\14\00\00\00" }>, align 8
@alloc667 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc712, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\98\05\00\00!\00\00\00" }>, align 8
@alloc670 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/methods.rs" }>, align 1
@alloc669 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc670, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\A7\06\00\00\0A\00\00\00" }>, align 8
@alloc339 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc341 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc342 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc340 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc339, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc341, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc342, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc671 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc670, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\A0\06\00\00\0E\00\00\00" }>, align 8
@alloc506 = private unnamed_addr constant <{ [49 x i8] }> <{ [49 x i8] c"there is no such thing as an acquire-release load" }>, align 1
@alloc507 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [49 x i8] }>, <{ [49 x i8] }>* @alloc506, i32 0, i32 0, i32 0), [8 x i8] c"1\00\00\00\00\00\00\00" }>, align 8
@alloc684 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/sync/atomic.rs" }>, align 1
@alloc673 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc684, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\BF\0B\00\00\17\00\00\00" }>, align 8
@alloc511 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"there is no such thing as a release load" }>, align 1
@alloc512 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [40 x i8] }>, <{ [40 x i8] }>* @alloc511, i32 0, i32 0, i32 0), [8 x i8] c"(\00\00\00\00\00\00\00" }>, align 8
@alloc675 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc684, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\BE\0B\00\00\18\00\00\00" }>, align 8
@alloc516 = private unnamed_addr constant <{ [50 x i8] }> <{ [50 x i8] c"there is no such thing as an acquire-release store" }>, align 1
@alloc517 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [50 x i8] }>, <{ [50 x i8] }>* @alloc516, i32 0, i32 0, i32 0), [8 x i8] c"2\00\00\00\00\00\00\00" }>, align 8
@alloc677 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc684, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\B0\0B\00\00\17\00\00\00" }>, align 8
@alloc521 = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"there is no such thing as an acquire store" }>, align 1
@alloc522 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [42 x i8] }>, <{ [42 x i8] }>* @alloc521, i32 0, i32 0, i32 0), [8 x i8] c"*\00\00\00\00\00\00\00" }>, align 8
@alloc679 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc684, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\AF\0B\00\00\18\00\00\00" }>, align 8
@alloc501 = private unnamed_addr constant <{ [61 x i8] }> <{ [61 x i8] c"there is no such thing as an acquire-release failure ordering" }>, align 1
@alloc502 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [61 x i8] }>, <{ [61 x i8] }>* @alloc501, i32 0, i32 0, i32 0), [8 x i8] c"=\00\00\00\00\00\00\00" }>, align 8
@alloc681 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc684, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\18\0C\00\00\1C\00\00\00" }>, align 8
@alloc496 = private unnamed_addr constant <{ [52 x i8] }> <{ [52 x i8] c"there is no such thing as a release failure ordering" }>, align 1
@alloc497 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [52 x i8] }>, <{ [52 x i8] }>* @alloc496, i32 0, i32 0, i32 0), [8 x i8] c"4\00\00\00\00\00\00\00" }>, align 8
@alloc683 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc684, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\19\0C\00\00\1D\00\00\00" }>, align 8
@alloc452 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"there is no such thing as a relaxed fence" }>, align 1
@alloc453 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [41 x i8] }>, <{ [41 x i8] }>* @alloc452, i32 0, i32 0, i32 0), [8 x i8] c")\00\00\00\00\00\00\00" }>, align 8
@alloc685 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc684, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00&\0D\00\00\18\00\00\00" }>, align 8
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h95925069f7247ee8E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h9412cc25832b82a2E" to i8*) }>, align 8, !dbg !518
@vtable.7 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (%"alloc::ffi::c_str::NulError"*)* @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17h7d207ed4df96150bE" to i8*), [16 x i8] c" \00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (%"alloc::ffi::c_str::NulError"*, %"core::fmt::Formatter"*)* @"_ZN64_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6ddf2cfa3845ef5E" to i8*) }>, align 8, !dbg !526
@alloc692 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.8 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ({ {}*, [3 x i64]* }*)* @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h8e564f303293f592E" to i8*), [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ {}*, [3 x i64]* }*, %"core::fmt::Formatter"*)* @"_ZN67_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h7a8d1becfc6dcc7bE" to i8*) }>, align 8, !dbg !538
@vtable.9 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (float**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$f32$GT$17hbab995f8061b2f16E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (float**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h620069b5c990afe8E" to i8*) }>, align 8, !dbg !546
@vtable.a = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ([11 x i32]**)* @"_ZN4core3ptr50drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$11$u5d$$GT$17hafe119a0b0b27325E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ([11 x i32]**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he83ea735d7c4d560E" to i8*) }>, align 8, !dbg !556
@vtable.b = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i32**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h3e7df7f56c928aaaE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i32**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h13b9f53be999e7a3E" to i8*) }>, align 8, !dbg !568
@vtable.c = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ([16 x i32]**)* @"_ZN4core3ptr50drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$16$u5d$$GT$17h96a7017c5f71b0d5E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ([16 x i32]**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0f7c9127e552ad1eE" to i8*) }>, align 8, !dbg !577
@alloc178 = private unnamed_addr constant <{ [4 x i8] }> zeroinitializer, align 4
@alloc291 = private unnamed_addr constant <{ [67 x i8] }> <{ [67 x i8] c"the test returned a termination value with a non-zero status code (" }>, align 1
@alloc293 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c") which indicates a failure" }>, align 1
@alloc292 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [67 x i8] }>, <{ [67 x i8] }>* @alloc291, i32 0, i32 0, i32 0), [8 x i8] c"C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc293, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc708 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/test/src/lib.rs" }>, align 1
@alloc709 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc708, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00\B8\00\00\00\05\00\00\00" }>, align 8
@alloc463 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"fatal runtime error: " }>, align 1
@alloc465 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\0A" }>, align 1
@alloc464 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc463, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc465, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc467 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"thread result panicked on drop" }>, align 1
@alloc468 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [30 x i8] }>, <{ [30 x i8] }>* @alloc467, i32 0, i32 0, i32 0), [8 x i8] c"\1E\00\00\00\00\00\00\00" }>, align 8
@alloc711 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc712, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\1C\04\00\00\17\00\00\00" }>, align 8
@alloc713 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc712, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\B7\01\00\00&\00\00\00" }>, align 8
@alloc714 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs" }>, align 1
@alloc715 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc714, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\87\00\00\00\01\00\00\00" }>, align 8
@str.d = internal constant [28 x i8] c"attempt to add with overflow"
@alloc718 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/mod.rs" }>, align 1
@alloc717 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc718, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00!\0A\00\00\15\00\00\00" }>, align 8
@alloc719 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc718, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00!\0A\00\008\00\00\00" }>, align 8
@_ZN13statics_tests13thread_locals9rust_gssi17ha42a983c30fd17ceE = internal global <{ [4 x i8] }> <{ [4 x i8] c"\11\00\00\00" }>, align 4, !dbg !589
@_ZN13statics_tests13thread_locals9rust_gsti17h8c6e37da93ad1f39E = internal thread_local global <{ [4 x i8] }> <{ [4 x i8] c"%\00\00\00" }>, align 4, !dbg !593
@alloc764 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"src/thread_locals.rs" }>, align 1
@alloc721 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00)\00\00\00\05\00\00\00" }>, align 8
@alloc723 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00+\00\00\00\09\00\00\00" }>, align 8
@alloc725 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00.\00\00\00\09\00\00\00" }>, align 8
@alloc727 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\000\00\00\00\05\00\00\00" }>, align 8
@alloc729 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\002\00\00\00\09\00\00\00" }>, align 8
@alloc731 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\005\00\00\00\09\00\00\00" }>, align 8
@alloc733 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\007\00\00\00\05\00\00\00" }>, align 8
@alloc735 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\009\00\00\00\09\00\00\00" }>, align 8
@alloc737 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00<\00\00\00\09\00\00\00" }>, align 8
@alloc739 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00>\00\00\00\05\00\00\00" }>, align 8
@alloc741 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00@\00\00\00\09\00\00\00" }>, align 8
@alloc743 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00C\00\00\00\09\00\00\00" }>, align 8
@alloc745 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00E\00\00\00\05\00\00\00" }>, align 8
@alloc747 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00G\00\00\00\09\00\00\00" }>, align 8
@alloc749 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00J\00\00\00\09\00\00\00" }>, align 8
@alloc751 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00L\00\00\00\05\00\00\00" }>, align 8
@alloc753 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00N\00\00\00\09\00\00\00" }>, align 8
@alloc755 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00Q\00\00\00\09\00\00\00" }>, align 8
@alloc757 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00S\00\00\00\05\00\00\00" }>, align 8
@alloc759 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00U\00\00\00\09\00\00\00" }>, align 8
@alloc761 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00X\00\00\00\09\00\00\00" }>, align 8
@alloc763 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00Z\00\00\00\05\00\00\00" }>, align 8
@alloc765 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\\\00\00\00\09\00\00\00" }>, align 8
@_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fssi17hd080597f2f0eb4e3E = internal global <{ [4 x i8] }> <{ [4 x i8] c"5\00\00\00" }>, align 4, !dbg !595
@_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fsti17hfed40b6f8f57ce71E = internal thread_local global <{ [4 x i8] }> <{ [4 x i8] c";\00\00\00" }>, align 4, !dbg !598
@rust_params = global <{ [24 x i8] }> <{ [24 x i8] c"\01\00\00\00\00\00\00\00ff\A6?\01\00\00\00\00\00\00\00\9A\99\99?" }>, align 4, !dbg !600
@rust_dont_section_a = global <{ [4 x i8] }> zeroinitializer, align 4, !dbg !612
@rust_dont_section_b = global <{ [4 x i8] }> <{ [4 x i8] c"\FF\FF\FF\FF" }>, align 4, !dbg !614
@rust_dont_section_c = global <{ i8* }> <{ i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @rust_dont_section_a, i32 0, i32 0, i32 0) }>, align 8, !dbg !616
@rust_dont_section_d = global <{ i8* }> <{ i8* bitcast (<{ i8* }>* @rust_dont_section_d to i8*) }>, align 8, !dbg !619
@rust_dont_section_foo = global <{ [12 x i8] }> zeroinitializer, align 4, !dbg !621
@rust_dont_section_me = global <{ [4 x i8] }> <{ [4 x i8] c"\02\00\00\00" }>, align 4, !dbg !623
@rust_bar = global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !625
@rust_int_to_pointer = global <{ [8 x i8] }> <{ [8 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF" }>, align 8, !dbg !630
@rust_null_to_ptr_ty = global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !638
@rust_section_me = global <{ [4 x i8] }> zeroinitializer, align 4, !dbg !640
@rust_section_me2 = global <{ [4 x i8] }> zeroinitializer, align 4, !dbg !642
@rust_section_me3 = global <{ [4 x i8] }> zeroinitializer, align 4, !dbg !644
@rust_section_me4 = global <{ [4 x i8] }> zeroinitializer, align 4, !dbg !646
@rust_section_me5 = global <{ [4 x i8] }> zeroinitializer, align 4, !dbg !648
@rust_section_foo_b_field = global <{ [12 x i8] }> zeroinitializer, align 4, !dbg !650
@rust_section_num_params = global <{ [4 x i8] }> zeroinitializer, align 4, !dbg !652
@rust_if_expr = global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !654
@rust_s = global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !656
@rust_s2 = global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !662
@rust_int_to_fn_ptr = global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !667
@rust_int_to_fn_ptr2 = global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !683
@rust_int_to_fn_ptr3 = global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !701
@_ZN13statics_tests8sections26rust_sectioned_scoped_init17h8d245479008eab85E = internal global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !703
@_ZN13statics_tests8sections26rust_fn_scoped_static_init18rust_not_sectioned17hbdf5c484f106ab02E = internal global <{ [4 x i8] }> <{ [4 x i8] c"\01\00\00\00" }>, align 4, !dbg !705
@rust_fn_scoped_extern = global <{ [8 x i8] }> <{ [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8, !dbg !708
@_ZN13statics_tests8sections20rust_sectioned_array17h1e43ae8f57627000E = internal global <{ [8 x i8] }> zeroinitializer, align 8, !dbg !710
@_ZN13statics_tests8sections10INIT_ARRAY17h99c3ca5e85ae4ca0E = internal constant <{ i8* }> <{ i8* bitcast (void ()* @_ZN13statics_tests8sections23run_static_initializers17hddfc9d13475afc0eE to i8*) }>, section ".init_array", align 8, !dbg !715
@gesi = global <{ [4 x i8] }> <{ [4 x i8] c"G\00\00\00" }>, align 4, !dbg !718
@rust_gesi = global <{ [4 x i8] }> <{ [4 x i8] c"G\00\00\00" }>, align 4, !dbg !721
@fesi = global <{ [4 x i8] }> <{ [4 x i8] c"q\00\00\00" }>, align 4, !dbg !723
@rust_fesi = global <{ [4 x i8] }> <{ [4 x i8] c"q\00\00\00" }>, align 4, !dbg !725
@geti = thread_local global <{ [4 x i8] }> <{ [4 x i8] c"\93\00\00\00" }>, align 4, !dbg !727
@rust_geti = thread_local global <{ [4 x i8] }> <{ [4 x i8] c"\93\00\00\00" }>, align 4, !dbg !729
@feti = thread_local global <{ [4 x i8] }> <{ [4 x i8] c"\ED\00\00\00" }>, align 4, !dbg !731
@rust_feti = thread_local global <{ [4 x i8] }> <{ [4 x i8] c"\ED\00\00\00" }>, align 4, !dbg !733
@alloc848 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"src/test_thread_locals.rs" }>, align 1
@alloc767 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc848, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00+\00\00\00\05\00\00\00" }>, align 8
@alloc769 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc848, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00-\00\00\00\09\00\00\00" }>, align 8
@alloc771 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc848, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00.\00\00\00\09\00\00\00" }>, align 8
@alloc773 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc848, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00/\00\00\00\09\00\00\00" }>, align 8
@alloc775 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc848, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\000\00\00\00\09\00\00\00" }>, align 8
@rust_used_static = global <{ [4 x i8] }> <{ [4 x i8] c"\01\00\00\00" }>, section "foo", align 4, !dbg !735
@rust_used_static2 = global <{ [4 x i8] }> <{ [4 x i8] c"\02\00\00\00" }>, section "bar", align 4, !dbg !739
@_ZN13statics_tests10attributes17rust_used_static417hc073714b54728f09E = internal global <{ [4 x i8] }> <{ [4 x i8] c"\01\00\00\00" }>, section "barz", align 4, !dbg !741
@rust_used_static3 = global <{ [4 x i8] }> zeroinitializer, section "baz", align 4, !dbg !743
@rust_no_attrs = global <{ [4 x i8] }> <{ [4 x i8] c"\01\00\00\00" }>, align 4, !dbg !745
@rust_initialized_extern = global <{ [4 x i8] }> <{ [4 x i8] c"\01\00\00\00" }>, section "fb", align 4, !dbg !747
@_ZN13statics_tests10attributes10INIT_ARRAY17h5f9cd6bf7e743198E = internal constant <{ i8* }> <{ i8* bitcast (void ()* @_ZN13statics_tests10attributes23run_static_initializers17h2ed908014654bcc4E to i8*) }>, section ".init_array", align 8, !dbg !749
@rust_visible_everywhere = global <{ [4 x i8] }> <{ [4 x i8] c"\09\00\00\00" }>, align 4, !dbg !751
@_ZN13statics_tests7storage12rust_counter17he98b1991b3a2a6e9E = internal global <{ [4 x i8] }> zeroinitializer, align 4, !dbg !755
@alloc782 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"src/storage.rs" }>, align 1
@alloc777 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc782, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\1A\00\00\00\05\00\00\00" }>, align 8
@alloc779 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc782, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\1C\00\00\00\0C\00\00\00" }>, align 8
@_ZN13statics_tests7storage8rust_baz6rust_k17h896fedec22886b3eE = internal global <{ [4 x i8] }> zeroinitializer, align 4, !dbg !757
@alloc38 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"hello\00" }>, align 1
@_ZN13statics_tests7storage10rust_hello17h3904f6f05287022dE = internal global <{ i8* }> <{ i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc38, i32 0, i32 0, i32 0) }>, align 8, !dbg !760
@alloc781 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc782, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00?\00\00\005\00\00\00" }>, align 8
@alloc783 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc782, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00B\00\00\00\05\00\00\00" }>, align 8
@str.e = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc41 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"world\00" }>, align 1
@_ZN13statics_tests7storage10rust_entry10rust_world17he2f89ceb8d536c35E = internal global <{ i8* }> <{ i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc41, i32 0, i32 0, i32 0) }>, align 8, !dbg !764
@_ZN13statics_tests7storage10rust_entry8rust_Foo17h34d66082d6db67beE = internal global <{ [3 x i8] }> <{ [3 x i8] c"foo" }>, align 1, !dbg !767
@_ZN13statics_tests7storage10rust_entry8rust_Bar17h1b7bb100cb6d99cfE = internal global <{ [3 x i8], [1 x i8] }> <{ [3 x i8] c"foo", [1 x i8] undef }>, align 4, !dbg !773
@alloc208 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\FF\FF\FF\FF" }>, align 4
@alloc842 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"src/test_sections.rs" }>, align 1
@alloc785 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\09\00\00\00\09\00\00\00" }>, align 8
@alloc787 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\0A\00\00\00\09\00\00\00" }>, align 8
@alloc184 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\03\00\00\00" }>, align 4
@alloc789 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\0B\00\00\00\09\00\00\00" }>, align 8
@alloc220 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\02\00\00\00" }>, align 4
@alloc791 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\0C\00\00\00\09\00\00\00" }>, align 8
@alloc793 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\0D\00\00\00\09\00\00\00" }>, align 8
@alloc202 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\01\00\00\00" }>, align 4
@alloc795 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\0E\00\00\00\09\00\00\00" }>, align 8
@alloc797 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\0F\00\00\00\09\00\00\00" }>, align 8
@alloc214 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\9A\99\99?" }>, align 4
@alloc799 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\10\00\00\00\09\00\00\00" }>, align 8
@alloc801 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\11\00\00\00\09\00\00\00" }>, align 8
@alloc802 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"assertion failed: rust_if_expr == 30 || rust_if_expr == 31" }>, align 1
@alloc804 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\12\00\00\00\09\00\00\00" }>, align 8
@alloc806 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\18\00\00\00\1F\00\00\00" }>, align 8
@alloc233 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\FE\FF\FF\FF" }>, align 4
@alloc808 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\18\00\00\00\09\00\00\00" }>, align 8
@alloc810 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\19\00\00\00%\00\00\00" }>, align 8
@alloc812 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00\19\00\00\00\09\00\00\00" }>, align 8
@alloc813 = private unnamed_addr constant <{ [1368 x i8] }> <{ [1368 x i8] c"#![allow(\0A    dead_code,\0A    mutable_transmutes,\0A    non_camel_case_types,\0A    non_snake_case,\0A    non_upper_case_globals,\0A    unused_assignments,\0A    unused_mut\0A)]\0Aextern \22C\22 {\0A    #[link_name = \22no_attrs\22]\0A    static mut rust_aliased_static: std::ffi::c_int;\0A}\0A#[no_mangle]\0A#[used]\0A#[link_section = \22foo\22]\0Apub static mut rust_used_static: std::ffi::c_int = 1 as std::ffi::c_int;\0A#[no_mangle]\0A#[used]\0A#[link_section = \22bar\22]\0Apub static mut rust_used_static2: std::ffi::c_int = 2 as std::ffi::c_int;\0A#[used]\0A#[link_section = \22barz\22]\0Astatic mut rust_used_static4: std::ffi::c_int = 1 as std::ffi::c_int;\0A#[no_mangle]\0A#[used]\0A#[link_section = \22baz\22]\0Apub static mut rust_used_static3: std::ffi::c_int = 0;\0A#[no_mangle]\0Apub static mut rust_no_attrs: std::ffi::c_int = 1 as std::ffi::c_int;\0A#[no_mangle]\0A#[link_section = \22fb\22]\0Apub static mut rust_initialized_extern: std::ffi::c_int = 1 as std::ffi::c_int;\0Aunsafe extern \22C\22 fn run_static_initializers() {\0A    rust_used_static3 = (1 as std::ffi::c_int as std::ffi::c_uint)\0A        .wrapping_add(1 as std::ffi::c_uint) as std::ffi::c_int;\0A}\0A#[used]\0A#[cfg_attr(target_os = \22linux\22, link_section = \22.init_array\22)]\0A#[cfg_attr(target_os = \22windows\22, link_section = \22.CRT$XIB\22)]\0A#[cfg_attr(target_os = \22macos\22, link_section = \22__DATA,__mod_init_func\22)]\0Astatic INIT_ARRAY: [unsafe extern \22C\22 fn(); 1] = [run_static_initializers];\0A" }>, align 1
@alloc814 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"Did not find expected static string in source" }>, align 1
@alloc816 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00,\00\00\00\0E\00\00\00" }>, align 8
@alloc818 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00/\00\00\00\14\00\00\00" }>, align 8
@alloc820 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00/\00\00\00\0E\00\00\00" }>, align 8
@alloc318 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"#[used]" }>, align 1
@alloc319 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc318, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc822 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00/\00\00\003\00\00\00" }>, align 8
@alloc824 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00/\00\00\00-\00\00\00" }>, align 8
@alloc321 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"#[link_section = \22barz\22]" }>, align 1
@alloc322 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @alloc321, i32 0, i32 0, i32 0), [8 x i8] c"\18\00\00\00\00\00\00\00" }>, align 8
@alloc826 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\000\00\00\00\1B\00\00\00" }>, align 8
@alloc828 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\000\00\00\00\15\00\00\00" }>, align 8
@alloc830 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\000\00\00\00:\00\00\00" }>, align 8
@alloc832 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\000\00\00\004\00\00\00" }>, align 8
@alloc833 = private unnamed_addr constant <{ [227 x i8] }> <{ [227 x i8] c"assertion failed: (lines[pos - 1] == \\\22#[used]\\\22 &&\\n            lines[pos - 2] == \\\22#[link_section = \\\\\\\22barz\\\\\\\22]\\\22) ||\\n    (lines[pos - 2] == \\\22#[used]\\\22 &&\\n            lines[pos - 1] == \\\22#[link_section = \\\\\\\22barz\\\\\\\22]\\\22)" }>, align 1
@alloc835 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\00.\00\00\00\09\00\00\00" }>, align 8
@alloc836 = private unnamed_addr constant <{ [102 x i8] }> <{ [102 x i8] c"#[link_section = \22fb\22]\0Apub static mut rust_initialized_extern: std::ffi::c_int = 1 as std::ffi::c_int;" }>, align 1
@alloc837 = private unnamed_addr constant <{ [146 x i8] }> <{ [146 x i8] c"assertion failed: src.contains(\\\22#[link_section = \\\\\\\22fb\\\\\\\22]\\\\npub static mut rust_initialized_extern: std::ffi::c_int = 1 as std::ffi::c_int;\\\22)" }>, align 1
@alloc839 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\004\00\00\00\09\00\00\00" }>, align 8
@alloc840 = private unnamed_addr constant <{ [95 x i8] }> <{ [95 x i8] c"extern \22C\22 {\0A    #[link_name = \22no_attrs\22]\0A    static mut rust_aliased_static: std::ffi::c_int;" }>, align 1
@alloc841 = private unnamed_addr constant <{ [147 x i8] }> <{ [147 x i8] c"assertion failed: src.contains(\\\22extern \\\\\\\22C\\\\\\\22 {\\\\n    #[link_name = \\\\\\\22no_attrs\\\\\\\22]\\\\n    static mut rust_aliased_static: std::ffi::c_int;\\\22)" }>, align 1
@alloc843 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc842, i32 0, i32 0, i32 0), [16 x i8] c"\14\00\00\00\00\00\00\005\00\00\00\09\00\00\00" }>, align 8
@alloc365 = private unnamed_addr constant <{ [69 x i8] }> <{ [69 x i8] c"static mut rust_used_static4: std::ffi::c_int = 1 as std::ffi::c_int;" }>, align 1
@alloc366 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [69 x i8] }>, <{ [69 x i8] }>* @alloc365, i32 0, i32 0, i32 0), [8 x i8] c"E\00\00\00\00\00\00\00" }>, align 8
@alloc846 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"src/test_storage.rs" }>, align 1
@alloc845 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc846, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\16\00\00\00\05\00\00\00" }>, align 8
@alloc847 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc846, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\17\00\00\00\05\00\00\00" }>, align 8
@alloc849 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc848, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00=\00\00\00\16\00\00\00" }>, align 8
@alloc50 = private unnamed_addr constant <{ [37 x i8] }> <{ [37 x i8] c"test_sections::test_sectioned_statics" }>, align 1
@alloc529 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [37 x i8] }>, <{ [37 x i8] }>* @alloc50, i32 0, i32 0, i32 0), [8 x i8] c"%\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h1cd12005797dbabbE to i8*), [8 x i8] undef }>, align 8
@alloc60 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"test_sections::test_sectioned_used_static" }>, align 1
@alloc530 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [41 x i8] }>, <{ [41 x i8] }>* @alloc60, i32 0, i32 0, i32 0), [8 x i8] c")\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hb7ff2ba48361f4faE to i8*), [8 x i8] undef }>, align 8
@alloc114 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"test_storage::test_buffer" }>, align 1
@alloc531 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc114, i32 0, i32 0, i32 0), [8 x i8] c"\19\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17ha38857fdf9210d78E to i8*), [8 x i8] undef }>, align 8
@alloc132 = private unnamed_addr constant <{ [38 x i8] }> <{ [38 x i8] c"test_thread_locals::test_thread_locals" }>, align 1
@alloc532 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @alloc132, i32 0, i32 0, i32 0), [8 x i8] c"&\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h76db4904c424c19eE to i8*), [8 x i8] undef }>, align 8
@alloc533 = private unnamed_addr constant <{ i8*, i8*, i8*, i8* }> <{ i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc529, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc530, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc531, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc532, i32 0, i32 0, i32 0) }>, align 8
@__rustc_debug_gdb_scripts_section__ = linkonce_odr unnamed_addr constant [34 x i8] c"\01gdb_load_rust_pretty_printers.py\00", section ".debug_gdb_scripts", align 1
@llvm.compiler.used = appending global [6 x i8*] [i8* bitcast (<{ i8* }>* @_ZN13statics_tests8sections10INIT_ARRAY17h99c3ca5e85ae4ca0E to i8*), i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @rust_used_static, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @rust_used_static2, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @_ZN13statics_tests10attributes17rust_used_static417hc073714b54728f09E, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @rust_used_static3, i32 0, i32 0, i32 0), i8* bitcast (<{ i8* }>* @_ZN13statics_tests10attributes10INIT_ARRAY17h5f9cd6bf7e743198E to i8*)], section "llvm.metadata"

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5f751f0d5c54b054E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !888 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_22 = alloca { i8*, i64 }, align 8
  %_21 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !908, metadata !DIExpression()), !dbg !922
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !909, metadata !DIExpression()), !dbg !923
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]"* %runtime, metadata !910, metadata !DIExpression()), !dbg !924
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !925
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !925
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !925
  store i64 %slice.1, i64* %6, align 8, !dbg !925
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !926, metadata !DIExpression()), !dbg !935
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !935
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !935
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !936, metadata !DIExpression()), !dbg !944
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !945
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !943, metadata !DIExpression()), !dbg !944
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !944
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !946, metadata !DIExpression()), !dbg !954
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !944
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !953, metadata !DIExpression()), !dbg !954
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !954
  store i8* %7, i8** %0, align 8, !dbg !954
  %data = load i8*, i8** %0, align 8, !dbg !954
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !954
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !956, metadata !DIExpression()), !dbg !964
  br label %bb1, !dbg !954

bb1:                                              ; preds = %start
  %len = sub i64 %self.1, %self.0, !dbg !966
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !966
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !963, metadata !DIExpression()), !dbg !964
  store i8* %data, i8** %self.dbg.spill5, align 8, !dbg !964
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !967, metadata !DIExpression()), !dbg !975
  %data_address = bitcast i8* %data to {}*, !dbg !975
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !975
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !977, metadata !DIExpression()), !dbg !986
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !964
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !985, metadata !DIExpression()), !dbg !986
  %8 = bitcast { i8*, i64 }* %_22 to {}**, !dbg !986
  store {}* %data_address, {}** %8, align 8, !dbg !986
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !986
  store i64 %len, i64* %9, align 8, !dbg !986
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { i8*, i64 }*, !dbg !986
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 0, !dbg !986
  %12 = load i8*, i8** %11, align 8, !dbg !986
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !986
  %14 = load i64, i64* %13, align 8, !dbg !986
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !986
  store i8* %12, i8** %15, align 8, !dbg !986
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !986
  store i64 %14, i64* %16, align 8, !dbg !986
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { [0 x i8]*, i64 }*, !dbg !986
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !986
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !986
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !986
  %21 = load i64, i64* %20, align 8, !dbg !986
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !988
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !988
  ret { [0 x i8]*, i64 } %23, !dbg !988
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7652abd2900ec541E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !989 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !997, metadata !DIExpression()), !dbg !1009
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !998, metadata !DIExpression()), !dbg !1010
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]"* %runtime, metadata !999, metadata !DIExpression()), !dbg !1011
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !1012
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !1012
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !1012
  store i64 %slice.1, i64* %6, align 8, !dbg !1012
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !1013, metadata !DIExpression()), !dbg !1023
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !1023
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !1023
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !1024, metadata !DIExpression()), !dbg !1032
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !1033
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1031, metadata !DIExpression()), !dbg !1032
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !1032
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !1034, metadata !DIExpression()), !dbg !1041
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !1032
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !1040, metadata !DIExpression()), !dbg !1041
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !1041
  store i8* %7, i8** %0, align 8, !dbg !1041
  %_15 = load i8*, i8** %0, align 8, !dbg !1041
  br label %bb1, !dbg !1041

bb1:                                              ; preds = %start
  store i8* %_15, i8** %data.dbg.spill, align 8, !dbg !1041
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1043, metadata !DIExpression()), !dbg !1050
  %len = sub i64 %self.1, %self.0, !dbg !1052
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !1052
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1049, metadata !DIExpression()), !dbg !1050
  store i8* %_15, i8** %self.dbg.spill5, align 8, !dbg !1050
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !1053, metadata !DIExpression()), !dbg !1060
  %data_address = bitcast i8* %_15 to {}*, !dbg !1060
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1060
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1062, metadata !DIExpression()), !dbg !1069
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !1050
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1068, metadata !DIExpression()), !dbg !1069
  %8 = bitcast { i8*, i64 }* %_24 to {}**, !dbg !1069
  store {}* %data_address, {}** %8, align 8, !dbg !1069
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !1069
  store i64 %len, i64* %9, align 8, !dbg !1069
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { i8*, i64 }*, !dbg !1069
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !1069
  %12 = load i8*, i8** %11, align 8, !dbg !1069
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !1069
  %14 = load i64, i64* %13, align 8, !dbg !1069
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !1069
  store i8* %12, i8** %15, align 8, !dbg !1069
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !1069
  store i64 %14, i64* %16, align 8, !dbg !1069
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { [0 x i8]*, i64 }*, !dbg !1069
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !1069
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !1069
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !1069
  %21 = load i64, i64* %20, align 8, !dbg !1069
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !1071
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !1071
  ret { [0 x i8]*, i64 } %23, !dbg !1071
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h1044681f6d30361aE"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !1072 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1093, metadata !DIExpression()), !dbg !1095
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1094, metadata !DIExpression()), !dbg !1096
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !1097
  br i1 %_4, label %bb1, label %bb2, !dbg !1097

bb2:                                              ; preds = %start
  %_7 = icmp ugt i64 %self.1, %slice.1, !dbg !1098
  %5 = zext i1 %_7 to i8, !dbg !1097
  store i8 %5, i8* %_3, align 1, !dbg !1097
  br label %bb3, !dbg !1097

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !1097
  br label %bb3, !dbg !1097

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !1097, !range !1099, !noundef !28
  %7 = trunc i8 %6 to i1, !dbg !1097
  br i1 %7, label %bb4, label %bb5, !dbg !1097

bb5:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %8 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5f751f0d5c54b054E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1100
  %_13.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !1100
  %_13.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !1100
  br label %bb6, !dbg !1100

bb4:                                              ; preds = %bb3
  %9 = bitcast { i8*, i64 }* %0 to {}**, !dbg !1101
  store {}* null, {}** %9, align 8, !dbg !1101
  br label %bb7, !dbg !1102

bb7:                                              ; preds = %bb6, %bb4
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !1103
  %11 = load i8*, i8** %10, align 8, !dbg !1103, !align !1104
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !1103
  %13 = load i64, i64* %12, align 8, !dbg !1103
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0, !dbg !1103
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1, !dbg !1103
  ret { i8*, i64 } %15, !dbg !1103

bb6:                                              ; preds = %bb5
  %16 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !1105
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0, !dbg !1105
  store [0 x i8]* %_13.0, [0 x i8]** %17, align 8, !dbg !1105
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1, !dbg !1105
  store i64 %_13.1, i64* %18, align 8, !dbg !1105
  br label %bb7, !dbg !1102
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hf4ddb75c2013ce2dE"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1106 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1118, metadata !DIExpression()), !dbg !1120
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1119, metadata !DIExpression()), !dbg !1121
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !1122
  br i1 %_3, label %bb1, label %bb2, !dbg !1122

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !1123
  br i1 %_9, label %bb3, label %bb4, !dbg !1123

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) #17, !dbg !1124
  unreachable, !dbg !1124

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5f751f0d5c54b054E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1125
  %_17.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !1125
  %_17.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !1125
  br label %bb5, !dbg !1125

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #17, !dbg !1126
  unreachable, !dbg !1126

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_17.0, 0, !dbg !1127
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_17.1, 1, !dbg !1127
  ret { [0 x i8]*, i64 } %7, !dbg !1127
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h92d2315a36a526acE"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1128 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1136, metadata !DIExpression()), !dbg !1138
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1137, metadata !DIExpression()), !dbg !1139
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !1140
  br i1 %_4, label %bb1, label %bb2, !dbg !1140

bb2:                                              ; preds = %start
  %_10 = icmp ugt i64 %self.1, %slice.1, !dbg !1141
  br i1 %_10, label %bb3, label %bb4, !dbg !1141

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) #17, !dbg !1142
  unreachable, !dbg !1142

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7652abd2900ec541E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1143
  %_20.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !1143
  %_20.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !1143
  br label %bb5, !dbg !1143

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #17, !dbg !1144
  unreachable, !dbg !1144

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_20.0, 0, !dbg !1145
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_20.1, 1, !dbg !1145
  ret { [0 x i8]*, i64 } %7, !dbg !1145
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h33365f3c40feb0a1E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1146 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_20 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_14 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1154, metadata !DIExpression()), !dbg !1156
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1155, metadata !DIExpression()), !dbg !1157
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !1158
  br i1 %_3, label %bb1, label %bb2, !dbg !1158

bb2:                                              ; preds = %start
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !1159
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !1160, metadata !DIExpression()), !dbg !1166
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 0, !dbg !1167
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8, !dbg !1167
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 1, !dbg !1167
  store i64 %slice.1, i64* %4, align 8, !dbg !1167
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill2, metadata !1165, metadata !DIExpression()), !dbg !1166
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !1166
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !1166
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !1166
  store i64 %slice.1, i64* %6, align 8, !dbg !1166
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !1168, metadata !DIExpression()), !dbg !1174
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !1174
  store [0 x i8]* %slice.0, [0 x i8]** %7, align 8, !dbg !1174
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !1174
  store i64 %slice.1, i64* %8, align 8, !dbg !1174
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !1176, metadata !DIExpression()), !dbg !1180
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_20 to { [0 x i8]*, i64 }*, !dbg !1180
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !1180
  store [0 x i8]* %slice.0, [0 x i8]** %10, align 8, !dbg !1180
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !1180
  store i64 %slice.1, i64* %11, align 8, !dbg !1180
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_20 to { i8*, i64 }*, !dbg !1180
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 1, !dbg !1180
  %_16 = load i64, i64* %13, align 8, !dbg !1180
  %14 = bitcast { i64, i64 }* %_14 to i64*, !dbg !1166
  store i64 %self, i64* %14, align 8, !dbg !1166
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !1166
  store i64 %_16, i64* %15, align 8, !dbg !1166
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 0, !dbg !1166
  %17 = load i64, i64* %16, align 8, !dbg !1166
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !1166
  %19 = load i64, i64* %18, align 8, !dbg !1166
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %20 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5f751f0d5c54b054E"(i64 %17, i64 %19, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1166
  %_11.0 = extractvalue { [0 x i8]*, i64 } %20, 0, !dbg !1166
  %_11.1 = extractvalue { [0 x i8]*, i64 } %20, 1, !dbg !1166
  br label %bb3, !dbg !1166

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17hd34676e4711f38b9E(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #17, !dbg !1182
  unreachable, !dbg !1182

bb3:                                              ; preds = %bb2
  %21 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_11.0, 0, !dbg !1183
  %22 = insertvalue { [0 x i8]*, i64 } %21, i64 %_11.1, 1, !dbg !1183
  ret { [0 x i8]*, i64 } %22, !dbg !1183
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hd5b0d5e191eaad89E"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Lines"* %iterator) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1184 {
start:
  %self.dbg.spill7 = alloca %"alloc::vec::Vec<&str>"*, align 8
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %capacity.dbg.spill5 = alloca i64, align 8
  %capacity.dbg.spill4 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %initial_capacity.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %lower.dbg.spill = alloca i64, align 8
  %element.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill2 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %_38 = alloca i8, align 1
  %_24 = alloca i8, align 1
  %_22 = alloca %"core::str::iter::Lines", align 8
  %src = alloca { [0 x i8]*, i64 }, align 8
  %vector1 = alloca %"alloc::vec::Vec<&str>", align 8
  %_8 = alloca { i64, { i64, i64 } }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  %vector = alloca %"alloc::vec::Vec<&str>", align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Lines"* %iterator, metadata !1254, metadata !DIExpression()), !dbg !1267
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"* %vector, metadata !1255, metadata !DIExpression()), !dbg !1268
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"* %vector1, metadata !1263, metadata !DIExpression()), !dbg !1269
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src, metadata !1270, metadata !DIExpression()), !dbg !1278
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !1280, metadata !DIExpression()), !dbg !1288
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill2, metadata !1297, metadata !DIExpression()), !dbg !1305
  store i8 1, i8* %_24, align 1, !dbg !1307
; invoke <core::str::iter::Lines as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11c66e7f15130a1bE"(%"core::str::iter::Lines"* align 8 %iterator)
          to label %bb1 unwind label %cleanup, !dbg !1308

bb14:                                             ; preds = %bb8, %bb11, %bb12, %cleanup
  %4 = load i8, i8* %_24, align 1, !dbg !1309, !range !1099, !noundef !28
  %5 = trunc i8 %4 to i1, !dbg !1309
  br i1 %5, label %bb13, label %bb10, !dbg !1309

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb14

bb1:                                              ; preds = %start
  store { i8*, i64 } %3, { i8*, i64 }* %_3, align 8, !dbg !1308
  %11 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !1308
  %12 = load {}*, {}** %11, align 8, !dbg !1308
  %13 = icmp eq {}* %12, null, !dbg !1308
  %_5 = select i1 %13, i64 0, i64 1, !dbg !1308
  switch i64 %_5, label %bb3 [
    i64 0, label %bb15
    i64 1, label %bb2
  ], !dbg !1310

bb3:                                              ; preds = %bb1
  unreachable, !dbg !1308

bb15:                                             ; preds = %bb1
  %_25.0 = load i64*, i64** getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 0), align 8, !dbg !1311, !nonnull !28, !noundef !28
  %_25.1 = load i64, i64* getelementptr inbounds ({ i64*, i64 }, { i64*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i64*, i64 }*), i32 0, i32 1), align 8, !dbg !1311
  %14 = bitcast %"alloc::vec::Vec<&str>"* %0 to { i64*, i64 }*, !dbg !1311
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %14, i32 0, i32 0, !dbg !1311
  store i64* %_25.0, i64** %15, align 8, !dbg !1311
  %16 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %14, i32 0, i32 1, !dbg !1311
  store i64 %_25.1, i64* %16, align 8, !dbg !1311
  %17 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %0, i32 0, i32 1, !dbg !1311
  store i64 0, i64* %17, align 8, !dbg !1311
  br label %bb7, !dbg !1309

bb2:                                              ; preds = %bb1
  %18 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !1317
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 0, !dbg !1317
  %element.0 = load [0 x i8]*, [0 x i8]** %19, align 8, !dbg !1317, !nonnull !28, !align !1104, !noundef !28
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %18, i32 0, i32 1, !dbg !1317
  %element.1 = load i64, i64* %20, align 8, !dbg !1317
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %element.dbg.spill, i32 0, i32 0, !dbg !1317
  store [0 x i8]* %element.0, [0 x i8]** %21, align 8, !dbg !1317
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %element.dbg.spill, i32 0, i32 1, !dbg !1317
  store i64 %element.1, i64* %22, align 8, !dbg !1317
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %element.dbg.spill, metadata !1257, metadata !DIExpression()), !dbg !1318
; invoke <core::str::iter::Lines as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h480fba72e8ec65f4E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_8, %"core::str::iter::Lines"* align 8 %iterator)
          to label %bb4 unwind label %cleanup3, !dbg !1319

bb12:                                             ; preds = %bb9, %cleanup3
  br i1 true, label %bb11, label %bb14, !dbg !1320

cleanup3:                                         ; preds = %bb17, %bb16, %bb2
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb12

bb4:                                              ; preds = %bb2
  %28 = bitcast { i64, { i64, i64 } }* %_8 to i64*, !dbg !1321
  %lower = load i64, i64* %28, align 8, !dbg !1321
  store i64 %lower, i64* %lower.dbg.spill, align 8, !dbg !1321
  call void @llvm.dbg.declare(metadata i64* %lower.dbg.spill, metadata !1259, metadata !DIExpression()), !dbg !1322
  store i64 %lower, i64* %self.dbg.spill, align 8, !dbg !1323
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1324, metadata !DIExpression()), !dbg !1333
  %29 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1), !dbg !1333
  store i64 %29, i64* %1, align 8, !dbg !1333
  %v2 = load i64, i64* %1, align 8, !dbg !1333
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !1333
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !1334, metadata !DIExpression()), !dbg !1340
  br label %bb16, !dbg !1333

bb16:                                             ; preds = %bb4
  store i64 4, i64* %v1.dbg.spill, align 8, !dbg !1341
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !1339, metadata !DIExpression()), !dbg !1340
; invoke core::cmp::Ord::max
  %initial_capacity = invoke i64 @_ZN4core3cmp3Ord3max17h87e416972f67cf67E(i64 4, i64 %v2)
          to label %bb17 unwind label %cleanup3, !dbg !1340

bb17:                                             ; preds = %bb16
  store i64 %initial_capacity, i64* %initial_capacity.dbg.spill, align 8, !dbg !1340
  call void @llvm.dbg.declare(metadata i64* %initial_capacity.dbg.spill, metadata !1261, metadata !DIExpression()), !dbg !1342
  store i64 %initial_capacity, i64* %capacity.dbg.spill, align 8, !dbg !1343
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !1294, metadata !DIExpression()), !dbg !1344
  store i64 %initial_capacity, i64* %capacity.dbg.spill4, align 8, !dbg !1344
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill4, metadata !1287, metadata !DIExpression()), !dbg !1288
  store i64 %initial_capacity, i64* %capacity.dbg.spill5, align 8, !dbg !1288
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill5, metadata !1304, metadata !DIExpression()), !dbg !1305
  store i8 0, i8* %_38, align 1, !dbg !1305
  %30 = load i8, i8* %_38, align 1, !dbg !1305, !range !1099, !noundef !28
  %31 = trunc i8 %30 to i1, !dbg !1305
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %32 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hd0b14824167d3f29E"(i64 %initial_capacity, i1 zeroext %31)
          to label %bb18 unwind label %cleanup3, !dbg !1305

bb18:                                             ; preds = %bb17
  %_34.0 = extractvalue { i64*, i64 } %32, 0, !dbg !1305
  %_34.1 = extractvalue { i64*, i64 } %32, 1, !dbg !1305
  %33 = bitcast %"alloc::vec::Vec<&str>"* %vector1 to { i64*, i64 }*, !dbg !1288
  %34 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %33, i32 0, i32 0, !dbg !1288
  store i64* %_34.0, i64** %34, align 8, !dbg !1288
  %35 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %33, i32 0, i32 1, !dbg !1288
  store i64 %_34.1, i64* %35, align 8, !dbg !1288
  %36 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %vector1, i32 0, i32 1, !dbg !1288
  store i64 0, i64* %36, align 8, !dbg !1288
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %dst = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h86cddd9b1ca10b26E"(%"alloc::vec::Vec<&str>"* align 8 %vector1)
          to label %bb5 unwind label %cleanup6, !dbg !1345

bb9:                                              ; preds = %cleanup6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h93841d326ca7621aE"(%"alloc::vec::Vec<&str>"* %vector1) #18
          to label %bb12 unwind label %abort, !dbg !1346

cleanup6:                                         ; preds = %bb18
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb9

bb5:                                              ; preds = %bb18
  store { [0 x i8]*, i64 }* %dst, { [0 x i8]*, i64 }** %dst.dbg.spill, align 8, !dbg !1345
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %dst.dbg.spill, metadata !1277, metadata !DIExpression()), !dbg !1278
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !1347
  store [0 x i8]* %element.0, [0 x i8]** %42, align 8, !dbg !1347
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !1347
  store i64 %element.1, i64* %43, align 8, !dbg !1347
  %44 = bitcast { [0 x i8]*, i64 }* %dst to i8*, !dbg !1278
  %45 = bitcast { [0 x i8]*, i64 }* %src to i8*, !dbg !1278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false), !dbg !1278
  store %"alloc::vec::Vec<&str>"* %vector1, %"alloc::vec::Vec<&str>"** %self.dbg.spill7, align 8, !dbg !1348
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill7, metadata !1349, metadata !DIExpression()), !dbg !1357
  %46 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %vector1, i32 0, i32 1, !dbg !1357
  store i64 1, i64* %46, align 8, !dbg !1357
  %47 = bitcast %"alloc::vec::Vec<&str>"* %vector to i8*, !dbg !1358
  %48 = bitcast %"alloc::vec::Vec<&str>"* %vector1 to i8*, !dbg !1358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false), !dbg !1358
  store i8 0, i8* %_24, align 1, !dbg !1359
  %49 = bitcast %"core::str::iter::Lines"* %_22 to i8*, !dbg !1359
  %50 = bitcast %"core::str::iter::Lines"* %iterator to i8*, !dbg !1359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 72, i1 false), !dbg !1359
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h05555628f815cf77E"(%"alloc::vec::Vec<&str>"* align 8 %vector, %"core::str::iter::Lines"* %_22)
          to label %bb6 unwind label %cleanup8, !dbg !1360

abort:                                            ; preds = %bb8, %bb9
  %51 = landingpad { i8*, i32 }
          cleanup, !dbg !1361
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !1361
  unreachable, !dbg !1361

bb11:                                             ; preds = %bb12
  br label %bb14, !dbg !1320

bb8:                                              ; preds = %cleanup8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h93841d326ca7621aE"(%"alloc::vec::Vec<&str>"* %vector) #18
          to label %bb14 unwind label %abort, !dbg !1309

cleanup8:                                         ; preds = %bb5
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %54, i32* %56, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  %57 = bitcast %"alloc::vec::Vec<&str>"* %0 to i8*, !dbg !1362
  %58 = bitcast %"alloc::vec::Vec<&str>"* %vector to i8*, !dbg !1362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false), !dbg !1362
  br label %bb7, !dbg !1309

bb10:                                             ; preds = %bb13, %bb14
  %59 = bitcast { i8*, i32 }* %2 to i8**, !dbg !1361
  %60 = load i8*, i8** %59, align 8, !dbg !1361
  %61 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !1361
  %62 = load i32, i32* %61, align 8, !dbg !1361
  %63 = insertvalue { i8*, i32 } undef, i8* %60, 0, !dbg !1361
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1, !dbg !1361
  resume { i8*, i32 } %64, !dbg !1361

bb13:                                             ; preds = %bb14
  br label %bb10, !dbg !1309

bb7:                                              ; preds = %bb15, %bb6
  ret void, !dbg !1363
}

; <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17h0ddc6bcc5d48a705E"(i64* align 8 %self) unnamed_addr #1 !dbg !1364 {
start:
  %self.dbg.spill = alloca i64*, align 8
  %_args = alloca {}, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1382, metadata !DIExpression()), !dbg !1387
  call void @llvm.dbg.declare(metadata {}* %_args, metadata !1383, metadata !DIExpression()), !dbg !1388
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h6e3cb6373f53440dE(i64* align 8 %self), !dbg !1389
  br label %bb1, !dbg !1389

bb1:                                              ; preds = %start
  ret void, !dbg !1390
}

; <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17ha6399e982c71960aE"() unnamed_addr #1 !dbg !1391 {
start:
  %self.dbg.spill = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>", align 1
  %_args = alloca {}, align 1
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"* %self.dbg.spill, metadata !1404, metadata !DIExpression()), !dbg !1408
  call void @llvm.dbg.declare(metadata {}* %_args, metadata !1405, metadata !DIExpression()), !dbg !1409
; call std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}
  call void @"_ZN3std6thread7Builder16spawn_unchecked_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hf6b952cc563ccbeeE"(), !dbg !1410
  br label %bb1, !dbg !1410

bb1:                                              ; preds = %start
  ret void, !dbg !1411
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h19dbefea06dd2371E"(i8* %unique) unnamed_addr #0 !dbg !1412 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %unique.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !1418, metadata !DIExpression()), !dbg !1419
  store i8* %unique, i8** %self.dbg.spill, align 8, !dbg !1420
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1421, metadata !DIExpression()), !dbg !1428
  store i8* %unique, i8** %self.dbg.spill1, align 8, !dbg !1428
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !1429, metadata !DIExpression()), !dbg !1434
  store i8* %unique, i8** %ptr.dbg.spill, align 8, !dbg !1434
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1436, metadata !DIExpression()), !dbg !1441
  store i8* %unique, i8** %0, align 8, !dbg !1441
  %1 = load i8*, i8** %0, align 8, !dbg !1443, !nonnull !28, !noundef !28
  ret i8* %1, !dbg !1443
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h6e98c5d1da63f7d0E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !1444 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !1475, metadata !DIExpression()), !dbg !1476
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1477
  store i64 %kind.0, i64* %3, align 8, !dbg !1477
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1477
  store i64 %kind.1, i64* %4, align 8, !dbg !1477
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1478
  %6 = load i64, i64* %5, align 8, !dbg !1478
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1478
  %8 = load i64, i64* %7, align 8, !dbg !1478, !range !1479, !noundef !28
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !1478
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !1478
  ret { i64, i64 } %10, !dbg !1478
}

; std::sys_common::backtrace::__rust_begin_short_backtrace
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h9075faf1f5726949E() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1480 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dummy.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca %"[closure@src/test_thread_locals.rs:56:27: 56:29]", align 1
  %result.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !1487, metadata !DIExpression()), !dbg !1491
  call void @llvm.dbg.declare(metadata %"[closure@src/test_thread_locals.rs:56:27: 56:29]"* %f.dbg.spill, metadata !1486, metadata !DIExpression()), !dbg !1492
  call void @llvm.dbg.declare(metadata {}* %dummy.dbg.spill, metadata !1493, metadata !DIExpression()), !dbg !1501
; call statics_tests::test_thread_locals::test_thread_locals::{{closure}}
  call void @"_ZN13statics_tests18test_thread_locals18test_thread_locals28_$u7b$$u7b$closure$u7d$$u7d$17h1540399d328ece2dE"(), !dbg !1503
  br label %bb1, !dbg !1503

bb1:                                              ; preds = %start
  call void asm sideeffect "", "r,~{memory}"({}* undef), !dbg !1501, !srcloc !1504
  br label %bb4, !dbg !1501

bb4:                                              ; preds = %bb1
  ret void, !dbg !1505

bb2:                                              ; No predecessors!
  br label %bb3, !dbg !1506

bb3:                                              ; preds = %bb2
  %1 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1507
  %2 = load i8*, i8** %1, align 8, !dbg !1507
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1507
  %4 = load i32, i32* %3, align 8, !dbg !1507
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0, !dbg !1507
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1, !dbg !1507
  resume { i8*, i32 } %6, !dbg !1507
}

; std::sys_common::backtrace::__rust_begin_short_backtrace
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hd4e1b9f94012fb34E(void ()* %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1508 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dummy.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca void ()*, align 8
  %result.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !1513, metadata !DIExpression()), !dbg !1517
  store void ()* %f, void ()** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %f.dbg.spill, metadata !1512, metadata !DIExpression()), !dbg !1518
  call void @llvm.dbg.declare(metadata {}* %dummy.dbg.spill, metadata !1519, metadata !DIExpression()), !dbg !1523
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h927891fa9cfdefd4E(void ()* %f), !dbg !1525
  br label %bb1, !dbg !1525

bb1:                                              ; preds = %start
  call void asm sideeffect "", "r,~{memory}"({}* undef), !dbg !1523, !srcloc !1504
  br label %bb4, !dbg !1523

bb4:                                              ; preds = %bb1
  ret void, !dbg !1526

bb2:                                              ; No predecessors!
  br label %bb3, !dbg !1527

bb3:                                              ; preds = %bb2
  %1 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1528
  %2 = load i8*, i8** %1, align 8, !dbg !1528
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1528
  %4 = load i32, i32* %3, align 8, !dbg !1528
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0, !dbg !1528
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1, !dbg !1528
  resume { i8*, i32 } %6, !dbg !1528
}

; std::io::Write::write_all
; Function Attrs: nonlazybind uwtable
define internal i8* @_ZN3std2io5Write9write_all17h2d81f1aebf73884aE(%"std::sys::unix::stdio::Stderr"* align 1 %self, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1529 {
start:
  %ptr.dbg.spill = alloca {}*, align 8
  %m.dbg.spill = alloca %"std::io::error::SimpleMessage"*, align 8
  %msg.dbg.spill = alloca %"std::io::error::SimpleMessage"*, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %e.dbg.spill4 = alloca i8*, align 8
  %__arg1_tag.dbg.spill = alloca i64, align 8
  %__self_tag.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %e.dbg.spill = alloca i8***, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"std::sys::unix::stdio::Stderr"*, align 8
  %_39 = alloca i8*, align 8
  %_37 = alloca i8*, align 8
  %_24 = alloca i8, align 1
  %e = alloca i8**, align 8
  %index = alloca i64, align 8
  %_10 = alloca i8*, align 8
  %_6 = alloca %"core::result::Result<usize, std::io::error::Error>", align 8
  %3 = alloca i8*, align 8
  %buf = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"std::sys::unix::stdio::Stderr"* %self, %"std::sys::unix::stdio::Stderr"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::stdio::Stderr"** %self.dbg.spill, metadata !1534, metadata !DIExpression()), !dbg !1547
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %buf, metadata !1535, metadata !DIExpression()), !dbg !1548
  call void @llvm.dbg.declare(metadata i64* %index, metadata !1549, metadata !DIExpression()), !dbg !1559
  call void @llvm.dbg.declare(metadata i8*** %e, metadata !1538, metadata !DIExpression()), !dbg !1561
  br label %bb1, !dbg !1562

bb1:                                              ; preds = %bb16, %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0, !dbg !1563
  %self.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !1563, !nonnull !28, !align !1104, !noundef !28
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1, !dbg !1563
  %self.1 = load i64, i64* %7, align 8, !dbg !1563
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !1563
  store [0 x i8]* %self.0, [0 x i8]** %8, align 8, !dbg !1563
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !1563
  store i64 %self.1, i64* %9, align 8, !dbg !1563
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !1564, metadata !DIExpression()), !dbg !1572
  %_4 = icmp eq i64 %self.1, 0, !dbg !1572
  %_3 = xor i1 %_4, true, !dbg !1573
  br i1 %_3, label %bb2, label %bb12, !dbg !1573

bb12:                                             ; preds = %bb1
  %10 = bitcast i8** %3 to {}**, !dbg !1574
  store {}* null, {}** %10, align 8, !dbg !1574
  br label %bb14, !dbg !1575

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0, !dbg !1576
  %_8.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !1576, !nonnull !28, !align !1104, !noundef !28
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1, !dbg !1576
  %_8.1 = load i64, i64* %12, align 8, !dbg !1576
; call <std::sys::unix::stdio::Stderr as std::io::Write>::write
  call void @"_ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$5write17h1e7f1c2ebe737f6eE"(%"core::result::Result<usize, std::io::error::Error>"* sret(%"core::result::Result<usize, std::io::error::Error>") %_6, %"std::sys::unix::stdio::Stderr"* align 1 %self, [0 x i8]* align 1 %_8.0, i64 %_8.1), !dbg !1577
  br label %bb3, !dbg !1577

bb3:                                              ; preds = %bb2
  %13 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*, !dbg !1577
  %_9 = load i64, i64* %13, align 8, !dbg !1577, !range !1578, !noundef !28
  switch i64 %_9, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb8
  ], !dbg !1579

bb5:                                              ; preds = %bb3
  unreachable, !dbg !1577

bb4:                                              ; preds = %bb3
  %14 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*, !dbg !1579
  %15 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %14, i32 0, i32 1, !dbg !1579
  %16 = load i64, i64* %15, align 8, !dbg !1579
  %17 = icmp eq i64 %16, 0, !dbg !1579
  br i1 %17, label %bb6, label %bb7, !dbg !1579

bb8:                                              ; preds = %bb3
  %18 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*, !dbg !1580
  %19 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %18, i32 0, i32 1, !dbg !1580
  store i8** %19, i8*** %e, align 8, !dbg !1580
  store i8*** %e, i8**** %e.dbg.spill, align 8, !dbg !1580
  call void @llvm.dbg.declare(metadata i8**** %e.dbg.spill, metadata !1541, metadata !DIExpression()), !dbg !1561
  %_31 = load i8**, i8*** %e, align 8, !dbg !1581, !nonnull !28, !align !1582, !noundef !28
; invoke std::io::error::Error::kind
  %20 = invoke i8 @_ZN3std2io5error5Error4kind17h574b1779eeb38e5aE(i8** align 8 %_31)
          to label %bb9 unwind label %cleanup, !dbg !1581, !range !1583

bb22:                                             ; preds = %cleanup
  %21 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*, !dbg !1584
  %_34 = load i64, i64* %21, align 8, !dbg !1584, !range !1578, !noundef !28
  %22 = icmp eq i64 %_34, 1, !dbg !1584
  br i1 %22, label %bb20, label %bb15, !dbg !1584

cleanup:                                          ; preds = %bb7, %bb8
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb22

bb9:                                              ; preds = %bb8
  store i8 %20, i8* %_24, align 1, !dbg !1581
  store i8* %_24, i8** %self.dbg.spill2, align 8, !dbg !1581
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !1585, metadata !DIExpression()), !dbg !1601
  store i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc488, i32 0, i32 0, i32 0), i8** %other.dbg.spill, align 8, !dbg !1602
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1594, metadata !DIExpression()), !dbg !1601
  %28 = load i8, i8* %_24, align 1, !dbg !1601, !range !1583, !noundef !28
  %__self_tag = zext i8 %28 to i64, !dbg !1601
  store i64 %__self_tag, i64* %__self_tag.dbg.spill, align 8, !dbg !1601
  call void @llvm.dbg.declare(metadata i64* %__self_tag.dbg.spill, metadata !1595, metadata !DIExpression()), !dbg !1603
  %29 = load i8, i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc488, i32 0, i32 0, i32 0), align 1, !dbg !1603, !range !1583, !noundef !28
  %__arg1_tag = zext i8 %29 to i64, !dbg !1603
  store i64 %__arg1_tag, i64* %__arg1_tag.dbg.spill, align 8, !dbg !1603
  call void @llvm.dbg.declare(metadata i64* %__arg1_tag.dbg.spill, metadata !1598, metadata !DIExpression()), !dbg !1604
  %_22 = icmp eq i64 %__self_tag, %__arg1_tag, !dbg !1604
  br i1 %_22, label %bb10, label %bb11, !dbg !1581

bb11:                                             ; preds = %bb9
  %30 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*, !dbg !1605
  %31 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %30, i32 0, i32 1, !dbg !1605
  %e3 = load i8*, i8** %31, align 8, !dbg !1605, !nonnull !28, !noundef !28
  store i8* %e3, i8** %e.dbg.spill4, align 8, !dbg !1605
  call void @llvm.dbg.declare(metadata i8** %e.dbg.spill4, metadata !1543, metadata !DIExpression()), !dbg !1606
  store i8* %e3, i8** %3, align 8, !dbg !1607
  br label %bb13, !dbg !1608

bb10:                                             ; preds = %bb9
  br label %bb19, !dbg !1611

bb19:                                             ; preds = %bb23, %bb10
  %32 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to i64*, !dbg !1584
  %_33 = load i64, i64* %32, align 8, !dbg !1584, !range !1578, !noundef !28
  %33 = icmp eq i64 %_33, 1, !dbg !1584
  br i1 %33, label %bb17, label %bb16, !dbg !1584

bb13:                                             ; preds = %bb6, %bb11
  br label %bb14, !dbg !1575

bb6:                                              ; preds = %bb4
  store %"std::io::error::SimpleMessage"* bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc486 to %"std::io::error::SimpleMessage"*), %"std::io::error::SimpleMessage"** %msg.dbg.spill, align 8, !dbg !1612
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %msg.dbg.spill, metadata !1613, metadata !DIExpression()), !dbg !1619
  store %"std::io::error::SimpleMessage"* bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc486 to %"std::io::error::SimpleMessage"*), %"std::io::error::SimpleMessage"** %m.dbg.spill, align 8, !dbg !1619
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %m.dbg.spill, metadata !1622, metadata !DIExpression()), !dbg !1629
  store {}* bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc486 to {}*), {}** %ptr.dbg.spill, align 8, !dbg !1629
  call void @llvm.dbg.declare(metadata {}** %ptr.dbg.spill, metadata !1631, metadata !DIExpression()), !dbg !1637
  %34 = bitcast i8** %_39 to {}**, !dbg !1637
  store {}* bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc486 to {}*), {}** %34, align 8, !dbg !1637
  %35 = load i8*, i8** %_39, align 8, !dbg !1629, !nonnull !28, !noundef !28
  store i8* %35, i8** %_37, align 8, !dbg !1629
  %36 = load i8*, i8** %_37, align 8, !dbg !1619, !nonnull !28, !noundef !28
  store i8* %36, i8** %_10, align 8, !dbg !1619
  %37 = load i8*, i8** %_10, align 8, !dbg !1639, !nonnull !28, !noundef !28
  store i8* %37, i8** %3, align 8, !dbg !1639
  br label %bb13, !dbg !1608

bb7:                                              ; preds = %bb4
  %38 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Ok"*, !dbg !1640
  %39 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", %"core::result::Result<usize, std::io::error::Error>::Ok"* %38, i32 0, i32 1, !dbg !1640
  %n = load i64, i64* %39, align 8, !dbg !1640
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !1640
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1536, metadata !DIExpression()), !dbg !1641
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0, !dbg !1560
  %self.05 = load [0 x i8]*, [0 x i8]** %40, align 8, !dbg !1560, !nonnull !28, !align !1104, !noundef !28
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1, !dbg !1560
  %self.16 = load i64, i64* %41, align 8, !dbg !1560
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !1560
  store [0 x i8]* %self.05, [0 x i8]** %42, align 8, !dbg !1560
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !1560
  store i64 %self.16, i64* %43, align 8, !dbg !1560
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !1556, metadata !DIExpression()), !dbg !1559
  store i64 %n, i64* %index, align 8, !dbg !1642
  %_46 = load i64, i64* %index, align 8, !dbg !1559
; invoke <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %44 = invoke { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h33365f3c40feb0a1E"(i64 %_46, [0 x i8]* align 1 %self.05, i64 %self.16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc620 to %"core::panic::location::Location"*))
          to label %bb23 unwind label %cleanup, !dbg !1559

bb23:                                             ; preds = %bb7
  %_16.0 = extractvalue { [0 x i8]*, i64 } %44, 0, !dbg !1559
  %_16.1 = extractvalue { [0 x i8]*, i64 } %44, 1, !dbg !1559
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 0, !dbg !1643
  store [0 x i8]* %_16.0, [0 x i8]** %45, align 8, !dbg !1643
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %buf, i32 0, i32 1, !dbg !1643
  store i64 %_16.1, i64* %46, align 8, !dbg !1643
  br label %bb19, !dbg !1644

bb20:                                             ; preds = %bb22
  br i1 true, label %bb21, label %bb15, !dbg !1584

bb15:                                             ; preds = %bb21, %bb20, %bb22
  %47 = bitcast { i8*, i32 }* %2 to i8**, !dbg !1645
  %48 = load i8*, i8** %47, align 8, !dbg !1645
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !1645
  %50 = load i32, i32* %49, align 8, !dbg !1645
  %51 = insertvalue { i8*, i32 } undef, i8* %48, 0, !dbg !1645
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1, !dbg !1645
  resume { i8*, i32 } %52, !dbg !1645

bb21:                                             ; preds = %bb20
  %53 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*, !dbg !1584
  %54 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %53, i32 0, i32 1, !dbg !1584
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h95925069f7247ee8E"(i8** %54) #18
          to label %bb15 unwind label %abort, !dbg !1584

abort:                                            ; preds = %bb21
  %55 = landingpad { i8*, i32 }
          cleanup, !dbg !1645
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !1645
  unreachable, !dbg !1645

bb17:                                             ; preds = %bb19
  br i1 true, label %bb18, label %bb16, !dbg !1584

bb16:                                             ; preds = %bb18, %bb17, %bb19
  br label %bb1, !dbg !1562

bb18:                                             ; preds = %bb17
  %56 = bitcast %"core::result::Result<usize, std::io::error::Error>"* %_6 to %"core::result::Result<usize, std::io::error::Error>::Err"*, !dbg !1584
  %57 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", %"core::result::Result<usize, std::io::error::Error>::Err"* %56, i32 0, i32 1, !dbg !1584
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h95925069f7247ee8E"(i8** %57), !dbg !1584
  br label %bb16, !dbg !1584

bb14:                                             ; preds = %bb12, %bb13
  %58 = load i8*, i8** %3, align 8, !dbg !1575
  ret i8* %58, !dbg !1575
}

; std::io::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define internal i8* @_ZN3std2io5Write9write_fmt17hd7dc32ae724c3112E(%"std::sys::unix::stdio::Stderr"* align 1 %self, %"core::fmt::Arguments"* %fmt) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1646 {
start:
  %ptr.dbg.spill = alloca {}*, align 8
  %m.dbg.spill = alloca %"std::io::error::SimpleMessage"*, align 8
  %msg.dbg.spill = alloca %"std::io::error::SimpleMessage"*, align 8
  %self.dbg.spill3 = alloca i8**, align 8
  %self.dbg.spill2 = alloca i8**, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"std::sys::unix::stdio::Stderr"*, align 8
  %_24 = alloca i8*, align 8
  %_22 = alloca i8*, align 8
  %_19 = alloca i8, align 1
  %_18 = alloca i8, align 1
  %_14 = alloca i8*, align 8
  %_10 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca i8, align 1
  %_5 = alloca i8*, align 8
  %output = alloca { i8*, i8* }, align 8
  %1 = alloca i8*, align 8
  store %"std::sys::unix::stdio::Stderr"* %self, %"std::sys::unix::stdio::Stderr"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::stdio::Stderr"** %self.dbg.spill, metadata !1761, metadata !DIExpression()), !dbg !1765
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"* %fmt, metadata !1762, metadata !DIExpression()), !dbg !1766
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %output, metadata !1763, metadata !DIExpression()), !dbg !1767
  %2 = bitcast i8** %_5 to {}**, !dbg !1768
  store {}* null, {}** %2, align 8, !dbg !1768
  store i8 1, i8* %_18, align 1, !dbg !1769
  %3 = bitcast { i8*, i8* }* %output to %"std::sys::unix::stdio::Stderr"**, !dbg !1769
  store %"std::sys::unix::stdio::Stderr"* %self, %"std::sys::unix::stdio::Stderr"** %3, align 8, !dbg !1769
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %output, i32 0, i32 1, !dbg !1769
  %5 = load i8*, i8** %_5, align 8, !dbg !1769
  store i8* %5, i8** %4, align 8, !dbg !1769
  %_7.0 = bitcast { i8*, i8* }* %output to {}*, !dbg !1770
  %6 = bitcast %"core::fmt::Arguments"* %_10 to i8*, !dbg !1771
  %7 = bitcast %"core::fmt::Arguments"* %fmt to i8*, !dbg !1771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 48, i1 false), !dbg !1771
; invoke core::fmt::write
  %8 = invoke zeroext i1 @_ZN4core3fmt5write17hcd15d2c673b5a9c1E({}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.0 to [3 x i64]*), %"core::fmt::Arguments"* %_10)
          to label %bb1 unwind label %cleanup, !dbg !1772

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>
  invoke void @"_ZN4core3ptr92drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..sys..unix..stdio..Stderr$GT$$GT$17h3dab90b2d47f43a0E"({ i8*, i8* }* %output) #18
          to label %bb9 unwind label %abort, !dbg !1773

cleanup:                                          ; preds = %start
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %14 = zext i1 %8 to i8, !dbg !1772
  store i8 %14, i8* %_6, align 1, !dbg !1772
  %15 = load i8, i8* %_6, align 1, !dbg !1772, !range !1099, !noundef !28
  %16 = trunc i8 %15 to i1, !dbg !1772
  %_11 = zext i1 %16 to i64, !dbg !1772
  switch i64 %_11, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !1774

abort:                                            ; preds = %bb8
  %17 = landingpad { i8*, i32 }
          cleanup, !dbg !1775
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !1775
  unreachable, !dbg !1775

bb9:                                              ; preds = %bb8
  %18 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1775
  %19 = load i8*, i8** %18, align 8, !dbg !1775
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1775
  %21 = load i32, i32* %20, align 8, !dbg !1775
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !1775
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !1775
  resume { i8*, i32 } %23, !dbg !1775

bb3:                                              ; preds = %bb1
  unreachable, !dbg !1772

bb4:                                              ; preds = %bb1
  %24 = bitcast i8** %1 to {}**, !dbg !1776
  store {}* null, {}** %24, align 8, !dbg !1776
  br label %bb12, !dbg !1777

bb2:                                              ; preds = %bb1
  %self1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %output, i32 0, i32 1, !dbg !1778
  store i8** %self1, i8*** %self.dbg.spill2, align 8, !dbg !1778
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill2, metadata !1779, metadata !DIExpression()), !dbg !1787
  store i8** %self1, i8*** %self.dbg.spill3, align 8, !dbg !1787
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill3, metadata !1788, metadata !DIExpression()), !dbg !1792
  %25 = bitcast i8** %self1 to {}**, !dbg !1792
  %26 = load {}*, {}** %25, align 8, !dbg !1792
  %27 = icmp eq {}* %26, null, !dbg !1792
  %_21 = select i1 %27, i64 0, i64 1, !dbg !1792
  %28 = icmp eq i64 %_21, 0, !dbg !1792
  br i1 %28, label %bb15, label %bb14, !dbg !1792

bb15:                                             ; preds = %bb2
  store i8 1, i8* %_19, align 1, !dbg !1792
  br label %bb13, !dbg !1792

bb14:                                             ; preds = %bb2
  store i8 0, i8* %_19, align 1, !dbg !1792
  br label %bb13, !dbg !1792

bb13:                                             ; preds = %bb15, %bb14
  %29 = load i8, i8* %_19, align 1, !dbg !1787, !range !1099, !noundef !28
  %30 = trunc i8 %29 to i1, !dbg !1787
  %_12 = xor i1 %30, true, !dbg !1787
  br i1 %_12, label %bb5, label %bb6, !dbg !1778

bb6:                                              ; preds = %bb13
  store %"std::io::error::SimpleMessage"* bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc477 to %"std::io::error::SimpleMessage"*), %"std::io::error::SimpleMessage"** %msg.dbg.spill, align 8, !dbg !1794
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %msg.dbg.spill, metadata !1795, metadata !DIExpression()), !dbg !1799
  store %"std::io::error::SimpleMessage"* bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc477 to %"std::io::error::SimpleMessage"*), %"std::io::error::SimpleMessage"** %m.dbg.spill, align 8, !dbg !1799
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %m.dbg.spill, metadata !1802, metadata !DIExpression()), !dbg !1806
  store {}* bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc477 to {}*), {}** %ptr.dbg.spill, align 8, !dbg !1806
  call void @llvm.dbg.declare(metadata {}** %ptr.dbg.spill, metadata !1808, metadata !DIExpression()), !dbg !1812
  %31 = bitcast i8** %_24 to {}**, !dbg !1812
  store {}* bitcast (<{ i8*, [9 x i8], [7 x i8] }>* @alloc477 to {}*), {}** %31, align 8, !dbg !1812
  %32 = load i8*, i8** %_24, align 8, !dbg !1806, !nonnull !28, !noundef !28
  store i8* %32, i8** %_22, align 8, !dbg !1806
  %33 = load i8*, i8** %_22, align 8, !dbg !1799, !nonnull !28, !noundef !28
  store i8* %33, i8** %_14, align 8, !dbg !1799
  %34 = load i8*, i8** %_14, align 8, !dbg !1814, !nonnull !28, !noundef !28
  store i8* %34, i8** %1, align 8, !dbg !1814
  br label %bb7, !dbg !1815

bb5:                                              ; preds = %bb13
  store i8 0, i8* %_18, align 1, !dbg !1816
  %35 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %output, i32 0, i32 1, !dbg !1816
  %36 = load i8*, i8** %35, align 8, !dbg !1816
  store i8* %36, i8** %1, align 8, !dbg !1816
  br label %bb7, !dbg !1815

bb7:                                              ; preds = %bb6, %bb5
  br label %bb12, !dbg !1817

bb12:                                             ; preds = %bb4, %bb7
  %37 = load i8, i8* %_18, align 1, !dbg !1773, !range !1099, !noundef !28
  %38 = trunc i8 %37 to i1, !dbg !1773
  br i1 %38, label %bb11, label %bb10, !dbg !1773

bb10:                                             ; preds = %bb11, %bb12
  %39 = load i8*, i8** %1, align 8, !dbg !1818
  ret i8* %39, !dbg !1818

bb11:                                             ; preds = %bb12
  %40 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %output, i32 0, i32 1, !dbg !1773
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h38ccdb4d7617198cE"(i8** %40), !dbg !1773
  br label %bb10, !dbg !1773
}

; std::io::error::repr_bitpacked::decode_repr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std2io5error14repr_bitpacked11decode_repr17h59e95b71693e0529E(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %0, i8* %ptr) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1819 {
start:
  %code.dbg.spill = alloca i32, align 4
  %x.dbg.spill = alloca i8, align 1
  %kind_bits.dbg.spill = alloca i32, align 4
  %ptr.dbg.spill12 = alloca %"std::io::error::SimpleMessage"*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %custom.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca {}*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %make_custom.dbg.spill = alloca %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]", align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_37 = alloca i8, align 1
  %_34 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %f = alloca i64*, align 8
  %self = alloca i8, align 1
  %kind = alloca i8, align 1
  %bits = alloca i64, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1826, metadata !DIExpression()), !dbg !1841
  call void @llvm.dbg.declare(metadata %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]"* %make_custom.dbg.spill, metadata !1827, metadata !DIExpression()), !dbg !1842
  call void @llvm.dbg.declare(metadata i64* %bits, metadata !1828, metadata !DIExpression()), !dbg !1843
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !1834, metadata !DIExpression()), !dbg !1844
  call void @llvm.dbg.declare(metadata i8* %self, metadata !1845, metadata !DIExpression()), !dbg !1875
  call void @llvm.dbg.declare(metadata i64** %f, metadata !1869, metadata !DIExpression()), !dbg !1875
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !1877, metadata !DIExpression()), !dbg !1890
  store i8 1, i8* %_37, align 1, !dbg !1892
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !1893
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1894, metadata !DIExpression()), !dbg !1900
  %_38 = bitcast i8* %ptr to {}*, !dbg !1900
  store {}* %_38, {}** %self.dbg.spill2, align 8, !dbg !1900
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill2, metadata !1901, metadata !DIExpression()), !dbg !1907
  %3 = bitcast i64* %bits to {}**, !dbg !1907
  store {}* %_38, {}** %3, align 8, !dbg !1907
  br label %bb14, !dbg !1907

bb14:                                             ; preds = %start
  %_7 = load i64, i64* %bits, align 8, !dbg !1908
  %_6 = and i64 %_7, 3, !dbg !1908
  switch i64 %_6, label %bb1 [
    i64 2, label %bb2
    i64 3, label %bb3
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !1909

bb1:                                              ; preds = %bb14
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [40 x i8] }>* @alloc629 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc628 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !1910

bb2:                                              ; preds = %bb14
  %_11 = load i64, i64* %bits, align 8, !dbg !1911
  %_9 = ashr i64 %_11, 32, !dbg !1912
  %code = trunc i64 %_9 to i32, !dbg !1912
  store i32 %code, i32* %code.dbg.spill, align 4, !dbg !1912
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !1830, metadata !DIExpression()), !dbg !1913
  %4 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"*, !dbg !1914
  %5 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"* %4, i32 0, i32 1, !dbg !1914
  store i32 %code, i32* %5, align 4, !dbg !1914
  %6 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !1914
  store i8 0, i8* %6, align 8, !dbg !1914
  br label %bb8, !dbg !1915

bb3:                                              ; preds = %bb14
  %_15 = load i64, i64* %bits, align 8, !dbg !1916
  %_14 = lshr i64 %_15, 32, !dbg !1917
  %kind_bits = trunc i64 %_14 to i32, !dbg !1917
  store i32 %kind_bits, i32* %kind_bits.dbg.spill, align 4, !dbg !1917
  call void @llvm.dbg.declare(metadata i32* %kind_bits.dbg.spill, metadata !1832, metadata !DIExpression()), !dbg !1918
; invoke std::io::error::repr_bitpacked::kind_from_prim
  %7 = invoke i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17h1dd369807d8c491bE(i32 %kind_bits)
          to label %bb4 unwind label %cleanup, !dbg !1876, !range !1919

bb5:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill9, align 8, !dbg !1891
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !1920, metadata !DIExpression()), !dbg !1928
  store i8* %ptr, i8** %self.dbg.spill10, align 8, !dbg !1928
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !1929, metadata !DIExpression()), !dbg !1933
  %_47 = bitcast i8* %ptr to {}*, !dbg !1933
  %ptr11 = bitcast {}* %_47 to %"std::io::error::SimpleMessage"*, !dbg !1928
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, align 8, !dbg !1928
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, metadata !1935, metadata !DIExpression()), !dbg !1941
  %8 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !1941
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %8, align 8, !dbg !1941
  %9 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !1890
  %_51 = load %"std::io::error::SimpleMessage"*, %"std::io::error::SimpleMessage"** %9, align 8, !dbg !1890
  %10 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"*, !dbg !1943
  %11 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"* %10, i32 0, i32 1, !dbg !1943
  store %"std::io::error::SimpleMessage"* %_51, %"std::io::error::SimpleMessage"** %11, align 8, !dbg !1943
  %12 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !1943
  store i8 2, i8* %12, align 8, !dbg !1943
  br label %bb8, !dbg !1944

bb6:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !1945
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !1946, metadata !DIExpression()), !dbg !1950
  %_52 = bitcast i8* %ptr to {}*, !dbg !1950
  store {}* %_52, {}** %self.dbg.spill4, align 8, !dbg !1950
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill4, metadata !1951, metadata !DIExpression()), !dbg !1959
  %self5 = bitcast {}* %_52 to i8*, !dbg !1959
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !1959
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !1960, metadata !DIExpression()), !dbg !1965
  store i8* %self5, i8** %self.dbg.spill7, align 8, !dbg !1965
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1966, metadata !DIExpression()), !dbg !1971
  %13 = getelementptr i8, i8* %self5, i64 -1, !dbg !1971
  store i8* %13, i8** %1, align 8, !dbg !1971
  %_60 = load i8*, i8** %1, align 8, !dbg !1971
  br label %bb20, !dbg !1971

bb13:                                             ; preds = %cleanup
  %14 = load i8, i8* %_37, align 1, !dbg !1973, !range !1099, !noundef !28
  %15 = trunc i8 %14 to i1, !dbg !1973
  br i1 %15, label %bb12, label %bb10, !dbg !1973

cleanup:                                          ; preds = %bb15, %bb3, %bb20, %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb13

unreachable:                                      ; preds = %bb1
  unreachable

bb20:                                             ; preds = %bb6
  store i8* %_60, i8** %self.dbg.spill8, align 8, !dbg !1971
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !1974, metadata !DIExpression()), !dbg !1982
  %custom = bitcast i8* %_60 to %"std::io::error::Custom"*, !dbg !1982
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %custom.dbg.spill, align 8, !dbg !1982
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %custom.dbg.spill, metadata !1836, metadata !DIExpression()), !dbg !1983
  store i8 0, i8* %_37, align 1, !dbg !1984
  %21 = bitcast i64** %_34 to %"std::io::error::Custom"**, !dbg !1984
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %21, align 8, !dbg !1984
  %22 = load i64*, i64** %_34, align 8, !dbg !1984
  %23 = bitcast i64* %22 to %"std::io::error::Custom"*, !dbg !1984
; invoke <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
  %_32 = invoke align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h919d6555a94a7745E"(%"std::io::error::Custom"* %23)
          to label %bb7 unwind label %cleanup, !dbg !1984

bb7:                                              ; preds = %bb20
  %24 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*, !dbg !1985
  %25 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %24, i32 0, i32 1, !dbg !1985
  store %"std::io::error::Custom"* %_32, %"std::io::error::Custom"** %25, align 8, !dbg !1985
  %26 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !1985
  store i8 3, i8* %26, align 8, !dbg !1985
  br label %bb8, !dbg !1986

bb8:                                              ; preds = %bb2, %bb19, %bb5, %bb7
  %27 = load i8, i8* %_37, align 1, !dbg !1973, !range !1099, !noundef !28
  %28 = trunc i8 %27 to i1, !dbg !1973
  br i1 %28, label %bb11, label %bb9, !dbg !1973

bb4:                                              ; preds = %bb3
  store i8 %7, i8* %self, align 1, !dbg !1876
  store i64* %bits, i64** %f, align 8, !dbg !1987
  %29 = load i8, i8* %self, align 1, !dbg !1875, !range !1919, !noundef !28
  %30 = sub i8 %29, 41, !dbg !1875
  %31 = icmp eq i8 %30, 0, !dbg !1875
  %_40 = select i1 %31, i64 0, i64 1, !dbg !1875
  switch i64 %_40, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ], !dbg !1875

bb16:                                             ; preds = %bb4
  unreachable, !dbg !1875

bb15:                                             ; preds = %bb4
  %_42 = load i64*, i64** %f, align 8, !dbg !1875, !nonnull !28, !align !1582, !noundef !28
; invoke std::io::error::repr_bitpacked::decode_repr::{{closure}}
  %32 = invoke i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17h9adb53631219a0cfE"(i64* align 8 %_42)
          to label %bb18 unwind label %cleanup, !dbg !1875, !range !1583

bb17:                                             ; preds = %bb4
  %x = load i8, i8* %self, align 1, !dbg !1875, !range !1583, !noundef !28
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !1875
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !1870, metadata !DIExpression()), !dbg !1988
  store i8 %x, i8* %kind, align 1, !dbg !1988
  br label %bb19, !dbg !1875

bb19:                                             ; preds = %bb18, %bb17
  %_21 = load i8, i8* %kind, align 1, !dbg !1989, !range !1583, !noundef !28
  %33 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"*, !dbg !1990
  %34 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"* %33, i32 0, i32 1, !dbg !1990
  store i8 %_21, i8* %34, align 1, !dbg !1990
  %35 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !1990
  store i8 1, i8* %35, align 8, !dbg !1990
  br label %bb8, !dbg !1991

bb18:                                             ; preds = %bb15
  store i8 %32, i8* %kind, align 1, !dbg !1875
  br label %bb19, !dbg !1875

bb10:                                             ; preds = %bb12, %bb13
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !1992
  %37 = load i8*, i8** %36, align 8, !dbg !1992
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !1992
  %39 = load i32, i32* %38, align 8, !dbg !1992
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !1992
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !1992
  resume { i8*, i32 } %41, !dbg !1992

bb12:                                             ; preds = %bb13
  br label %bb10, !dbg !1973

bb9:                                              ; preds = %bb11, %bb8
  ret void, !dbg !1993

bb11:                                             ; preds = %bb8
  br label %bb9, !dbg !1973
}

; std::io::error::repr_bitpacked::decode_repr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std2io5error14repr_bitpacked11decode_repr17h800f2b6fa66d9a8bE(%"std::io::error::ErrorData<&std::io::error::Custom>"* sret(%"std::io::error::ErrorData<&std::io::error::Custom>") %0, i8* %ptr) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1994 {
start:
  %code.dbg.spill = alloca i32, align 4
  %x.dbg.spill = alloca i8, align 1
  %kind_bits.dbg.spill = alloca i32, align 4
  %ptr.dbg.spill12 = alloca %"std::io::error::SimpleMessage"*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %custom.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca {}*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %make_custom.dbg.spill = alloca %"[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]", align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_37 = alloca i8, align 1
  %_34 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %f = alloca i64*, align 8
  %self = alloca i8, align 1
  %kind = alloca i8, align 1
  %bits = alloca i64, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2025, metadata !DIExpression()), !dbg !2039
  call void @llvm.dbg.declare(metadata %"[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]"* %make_custom.dbg.spill, metadata !2026, metadata !DIExpression()), !dbg !2040
  call void @llvm.dbg.declare(metadata i64* %bits, metadata !2027, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !2033, metadata !DIExpression()), !dbg !2042
  call void @llvm.dbg.declare(metadata i8* %self, metadata !2043, metadata !DIExpression()), !dbg !2058
  call void @llvm.dbg.declare(metadata i64** %f, metadata !2052, metadata !DIExpression()), !dbg !2058
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !2060, metadata !DIExpression()), !dbg !2064
  store i8 1, i8* %_37, align 1, !dbg !2066
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !2067
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2068, metadata !DIExpression()), !dbg !2072
  %_38 = bitcast i8* %ptr to {}*, !dbg !2072
  store {}* %_38, {}** %self.dbg.spill2, align 8, !dbg !2072
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill2, metadata !2073, metadata !DIExpression()), !dbg !2077
  %3 = bitcast i64* %bits to {}**, !dbg !2077
  store {}* %_38, {}** %3, align 8, !dbg !2077
  br label %bb14, !dbg !2077

bb14:                                             ; preds = %start
  %_7 = load i64, i64* %bits, align 8, !dbg !2078
  %_6 = and i64 %_7, 3, !dbg !2078
  switch i64 %_6, label %bb1 [
    i64 2, label %bb2
    i64 3, label %bb3
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !2079

bb1:                                              ; preds = %bb14
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [40 x i8] }>* @alloc629 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc628 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !2080

bb2:                                              ; preds = %bb14
  %_11 = load i64, i64* %bits, align 8, !dbg !2081
  %_9 = ashr i64 %_11, 32, !dbg !2082
  %code = trunc i64 %_9 to i32, !dbg !2082
  store i32 %code, i32* %code.dbg.spill, align 4, !dbg !2082
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !2029, metadata !DIExpression()), !dbg !2083
  %4 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to %"std::io::error::ErrorData<&std::io::error::Custom>::Os"*, !dbg !2084
  %5 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Os", %"std::io::error::ErrorData<&std::io::error::Custom>::Os"* %4, i32 0, i32 1, !dbg !2084
  store i32 %code, i32* %5, align 4, !dbg !2084
  %6 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to i8*, !dbg !2084
  store i8 0, i8* %6, align 8, !dbg !2084
  br label %bb8, !dbg !2085

bb3:                                              ; preds = %bb14
  %_15 = load i64, i64* %bits, align 8, !dbg !2086
  %_14 = lshr i64 %_15, 32, !dbg !2087
  %kind_bits = trunc i64 %_14 to i32, !dbg !2087
  store i32 %kind_bits, i32* %kind_bits.dbg.spill, align 4, !dbg !2087
  call void @llvm.dbg.declare(metadata i32* %kind_bits.dbg.spill, metadata !2031, metadata !DIExpression()), !dbg !2088
; invoke std::io::error::repr_bitpacked::kind_from_prim
  %7 = invoke i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17h1dd369807d8c491bE(i32 %kind_bits)
          to label %bb4 unwind label %cleanup, !dbg !2059, !range !1919

bb5:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill9, align 8, !dbg !2065
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !2089, metadata !DIExpression()), !dbg !2093
  store i8* %ptr, i8** %self.dbg.spill10, align 8, !dbg !2093
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !2094, metadata !DIExpression()), !dbg !2098
  %_47 = bitcast i8* %ptr to {}*, !dbg !2098
  %ptr11 = bitcast {}* %_47 to %"std::io::error::SimpleMessage"*, !dbg !2093
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, align 8, !dbg !2093
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, metadata !2100, metadata !DIExpression()), !dbg !2104
  %8 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !2104
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %8, align 8, !dbg !2104
  %9 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !2064
  %_51 = load %"std::io::error::SimpleMessage"*, %"std::io::error::SimpleMessage"** %9, align 8, !dbg !2064
  %10 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage"*, !dbg !2106
  %11 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage", %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage"* %10, i32 0, i32 1, !dbg !2106
  store %"std::io::error::SimpleMessage"* %_51, %"std::io::error::SimpleMessage"** %11, align 8, !dbg !2106
  %12 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to i8*, !dbg !2106
  store i8 2, i8* %12, align 8, !dbg !2106
  br label %bb8, !dbg !2107

bb6:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !2108
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !2109, metadata !DIExpression()), !dbg !2113
  %_52 = bitcast i8* %ptr to {}*, !dbg !2113
  store {}* %_52, {}** %self.dbg.spill4, align 8, !dbg !2113
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill4, metadata !2114, metadata !DIExpression()), !dbg !2118
  %self5 = bitcast {}* %_52 to i8*, !dbg !2118
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !2118
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !2119, metadata !DIExpression()), !dbg !2124
  store i8* %self5, i8** %self.dbg.spill7, align 8, !dbg !2124
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !2125, metadata !DIExpression()), !dbg !2130
  %13 = getelementptr i8, i8* %self5, i64 -1, !dbg !2130
  store i8* %13, i8** %1, align 8, !dbg !2130
  %_60 = load i8*, i8** %1, align 8, !dbg !2130
  br label %bb20, !dbg !2130

bb13:                                             ; preds = %cleanup
  %14 = load i8, i8* %_37, align 1, !dbg !2132, !range !1099, !noundef !28
  %15 = trunc i8 %14 to i1, !dbg !2132
  br i1 %15, label %bb12, label %bb10, !dbg !2132

cleanup:                                          ; preds = %bb15, %bb3, %bb20, %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb13

unreachable:                                      ; preds = %bb1
  unreachable

bb20:                                             ; preds = %bb6
  store i8* %_60, i8** %self.dbg.spill8, align 8, !dbg !2130
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !2133, metadata !DIExpression()), !dbg !2137
  %custom = bitcast i8* %_60 to %"std::io::error::Custom"*, !dbg !2137
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %custom.dbg.spill, align 8, !dbg !2137
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %custom.dbg.spill, metadata !2035, metadata !DIExpression()), !dbg !2138
  store i8 0, i8* %_37, align 1, !dbg !2139
  %21 = bitcast i64** %_34 to %"std::io::error::Custom"**, !dbg !2139
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %21, align 8, !dbg !2139
  %22 = load i64*, i64** %_34, align 8, !dbg !2139
  %23 = bitcast i64* %22 to %"std::io::error::Custom"*, !dbg !2139
; invoke std::io::error::repr_bitpacked::Repr::data::{{closure}}
  %_32 = invoke align 8 %"std::io::error::Custom"* @"_ZN3std2io5error14repr_bitpacked4Repr4data28_$u7b$$u7b$closure$u7d$$u7d$17h84939d74855cabc5E"(%"std::io::error::Custom"* %23)
          to label %bb7 unwind label %cleanup, !dbg !2139

bb7:                                              ; preds = %bb20
  %24 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to %"std::io::error::ErrorData<&std::io::error::Custom>::Custom"*, !dbg !2140
  %25 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Custom", %"std::io::error::ErrorData<&std::io::error::Custom>::Custom"* %24, i32 0, i32 1, !dbg !2140
  store %"std::io::error::Custom"* %_32, %"std::io::error::Custom"** %25, align 8, !dbg !2140
  %26 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to i8*, !dbg !2140
  store i8 3, i8* %26, align 8, !dbg !2140
  br label %bb8, !dbg !2141

bb8:                                              ; preds = %bb2, %bb19, %bb5, %bb7
  %27 = load i8, i8* %_37, align 1, !dbg !2132, !range !1099, !noundef !28
  %28 = trunc i8 %27 to i1, !dbg !2132
  br i1 %28, label %bb11, label %bb9, !dbg !2132

bb4:                                              ; preds = %bb3
  store i8 %7, i8* %self, align 1, !dbg !2059
  store i64* %bits, i64** %f, align 8, !dbg !2142
  %29 = load i8, i8* %self, align 1, !dbg !2058, !range !1919, !noundef !28
  %30 = sub i8 %29, 41, !dbg !2058
  %31 = icmp eq i8 %30, 0, !dbg !2058
  %_40 = select i1 %31, i64 0, i64 1, !dbg !2058
  switch i64 %_40, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ], !dbg !2058

bb16:                                             ; preds = %bb4
  unreachable, !dbg !2058

bb15:                                             ; preds = %bb4
  %_42 = load i64*, i64** %f, align 8, !dbg !2058, !nonnull !28, !align !1582, !noundef !28
; invoke std::io::error::repr_bitpacked::decode_repr::{{closure}}
  %32 = invoke i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17h4f972a53dd29fa66E"(i64* align 8 %_42)
          to label %bb18 unwind label %cleanup, !dbg !2058, !range !1583

bb17:                                             ; preds = %bb4
  %x = load i8, i8* %self, align 1, !dbg !2058, !range !1583, !noundef !28
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !2058
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !2053, metadata !DIExpression()), !dbg !2143
  store i8 %x, i8* %kind, align 1, !dbg !2143
  br label %bb19, !dbg !2058

bb19:                                             ; preds = %bb18, %bb17
  %_21 = load i8, i8* %kind, align 1, !dbg !2144, !range !1583, !noundef !28
  %33 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to %"std::io::error::ErrorData<&std::io::error::Custom>::Simple"*, !dbg !2145
  %34 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Simple", %"std::io::error::ErrorData<&std::io::error::Custom>::Simple"* %33, i32 0, i32 1, !dbg !2145
  store i8 %_21, i8* %34, align 1, !dbg !2145
  %35 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %0 to i8*, !dbg !2145
  store i8 1, i8* %35, align 8, !dbg !2145
  br label %bb8, !dbg !2146

bb18:                                             ; preds = %bb15
  store i8 %32, i8* %kind, align 1, !dbg !2058
  br label %bb19, !dbg !2058

bb10:                                             ; preds = %bb12, %bb13
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !2147
  %37 = load i8*, i8** %36, align 8, !dbg !2147
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !2147
  %39 = load i32, i32* %38, align 8, !dbg !2147
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !2147
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !2147
  resume { i8*, i32 } %41, !dbg !2147

bb12:                                             ; preds = %bb13
  br label %bb10, !dbg !2132

bb9:                                              ; preds = %bb11, %bb8
  ret void, !dbg !2148

bb11:                                             ; preds = %bb8
  br label %bb9, !dbg !2132
}

; std::io::error::repr_bitpacked::decode_repr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17h4f972a53dd29fa66E"(i64* align 8 %_1) unnamed_addr #0 !dbg !2149 {
start:
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::UnsafeArg", align 1
  %_1.dbg.spill = alloca i64*, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = load i64*, i64** %_1.dbg.spill, align 8, !nonnull !28, !align !1582, !noundef !28
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !2153, metadata !DIExpression(DW_OP_deref)), !dbg !2154
  call void @llvm.dbg.declare(metadata %"core::fmt::UnsafeArg"* %_unsafe_arg.dbg.spill, metadata !2155, metadata !DIExpression()), !dbg !2168
  unreachable, !dbg !2172
}

; std::io::error::repr_bitpacked::decode_repr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17h9adb53631219a0cfE"(i64* align 8 %_1) unnamed_addr #0 !dbg !2176 {
start:
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::UnsafeArg", align 1
  %_1.dbg.spill = alloca i64*, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = load i64*, i64** %_1.dbg.spill, align 8, !nonnull !28, !align !1582, !noundef !28
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !2180, metadata !DIExpression(DW_OP_deref)), !dbg !2181
  call void @llvm.dbg.declare(metadata %"core::fmt::UnsafeArg"* %_unsafe_arg.dbg.spill, metadata !2182, metadata !DIExpression()), !dbg !2189
  unreachable, !dbg !2192
}

; std::io::error::repr_bitpacked::kind_from_prim
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17h1dd369807d8c491bE(i32 %0) unnamed_addr #0 !dbg !2196 {
start:
  %v.dbg.spill40 = alloca i32*, align 8
  %v.dbg.spill39 = alloca i32*, align 8
  %v.dbg.spill38 = alloca i32*, align 8
  %v.dbg.spill37 = alloca i32*, align 8
  %v.dbg.spill36 = alloca i32*, align 8
  %v.dbg.spill35 = alloca i32*, align 8
  %v.dbg.spill34 = alloca i32*, align 8
  %v.dbg.spill33 = alloca i32*, align 8
  %v.dbg.spill32 = alloca i32*, align 8
  %v.dbg.spill31 = alloca i32*, align 8
  %v.dbg.spill30 = alloca i32*, align 8
  %v.dbg.spill29 = alloca i32*, align 8
  %v.dbg.spill28 = alloca i32*, align 8
  %v.dbg.spill27 = alloca i32*, align 8
  %v.dbg.spill26 = alloca i32*, align 8
  %v.dbg.spill25 = alloca i32*, align 8
  %v.dbg.spill24 = alloca i32*, align 8
  %v.dbg.spill23 = alloca i32*, align 8
  %v.dbg.spill22 = alloca i32*, align 8
  %v.dbg.spill21 = alloca i32*, align 8
  %v.dbg.spill20 = alloca i32*, align 8
  %v.dbg.spill19 = alloca i32*, align 8
  %v.dbg.spill18 = alloca i32*, align 8
  %v.dbg.spill17 = alloca i32*, align 8
  %v.dbg.spill16 = alloca i32*, align 8
  %v.dbg.spill15 = alloca i32*, align 8
  %v.dbg.spill14 = alloca i32*, align 8
  %v.dbg.spill13 = alloca i32*, align 8
  %v.dbg.spill12 = alloca i32*, align 8
  %v.dbg.spill11 = alloca i32*, align 8
  %v.dbg.spill10 = alloca i32*, align 8
  %v.dbg.spill9 = alloca i32*, align 8
  %v.dbg.spill8 = alloca i32*, align 8
  %v.dbg.spill7 = alloca i32*, align 8
  %v.dbg.spill6 = alloca i32*, align 8
  %v.dbg.spill5 = alloca i32*, align 8
  %v.dbg.spill4 = alloca i32*, align 8
  %v.dbg.spill3 = alloca i32*, align 8
  %v.dbg.spill2 = alloca i32*, align 8
  %v.dbg.spill1 = alloca i32*, align 8
  %v.dbg.spill = alloca i32*, align 8
  %1 = alloca i8, align 1
  %ek = alloca i32, align 4
  store i32 %0, i32* %ek, align 4
  call void @llvm.dbg.declare(metadata i32* %ek, metadata !2200, metadata !DIExpression()), !dbg !2324
  store i32* %ek, i32** %v.dbg.spill, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill, metadata !2203, metadata !DIExpression()), !dbg !2326
  %_5 = load i32, i32* %ek, align 4, !dbg !2325
  %_4 = icmp eq i32 %_5, 0, !dbg !2325
  br i1 %_4, label %bb1, label %bb2, !dbg !2325

bb2:                                              ; preds = %start
  store i32* %ek, i32** %v.dbg.spill1, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill1, metadata !2206, metadata !DIExpression()), !dbg !2327
  %_10 = load i32, i32* %ek, align 4, !dbg !2325
  %_9 = icmp eq i32 %_10, 1, !dbg !2325
  br i1 %_9, label %bb3, label %bb4, !dbg !2325

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1, !dbg !2326
  br label %bb83, !dbg !2325

bb83:                                             ; preds = %bb82, %bb81, %bb79, %bb77, %bb75, %bb73, %bb71, %bb69, %bb67, %bb65, %bb63, %bb61, %bb59, %bb57, %bb55, %bb53, %bb51, %bb49, %bb47, %bb45, %bb43, %bb41, %bb39, %bb37, %bb35, %bb33, %bb31, %bb29, %bb27, %bb25, %bb23, %bb21, %bb19, %bb17, %bb15, %bb13, %bb11, %bb9, %bb7, %bb5, %bb3, %bb1
  %2 = load i8, i8* %1, align 1, !dbg !2328, !range !1919, !noundef !28
  ret i8 %2, !dbg !2328

bb4:                                              ; preds = %bb2
  store i32* %ek, i32** %v.dbg.spill2, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill2, metadata !2209, metadata !DIExpression()), !dbg !2329
  %_15 = load i32, i32* %ek, align 4, !dbg !2325
  %_14 = icmp eq i32 %_15, 2, !dbg !2325
  br i1 %_14, label %bb5, label %bb6, !dbg !2325

bb3:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1, !dbg !2327
  br label %bb83, !dbg !2325

bb6:                                              ; preds = %bb4
  store i32* %ek, i32** %v.dbg.spill3, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill3, metadata !2212, metadata !DIExpression()), !dbg !2330
  %_20 = load i32, i32* %ek, align 4, !dbg !2325
  %_19 = icmp eq i32 %_20, 3, !dbg !2325
  br i1 %_19, label %bb7, label %bb8, !dbg !2325

bb5:                                              ; preds = %bb4
  store i8 2, i8* %1, align 1, !dbg !2329
  br label %bb83, !dbg !2325

bb8:                                              ; preds = %bb6
  store i32* %ek, i32** %v.dbg.spill4, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill4, metadata !2215, metadata !DIExpression()), !dbg !2331
  %_25 = load i32, i32* %ek, align 4, !dbg !2325
  %_24 = icmp eq i32 %_25, 4, !dbg !2325
  br i1 %_24, label %bb9, label %bb10, !dbg !2325

bb7:                                              ; preds = %bb6
  store i8 3, i8* %1, align 1, !dbg !2330
  br label %bb83, !dbg !2325

bb10:                                             ; preds = %bb8
  store i32* %ek, i32** %v.dbg.spill5, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill5, metadata !2218, metadata !DIExpression()), !dbg !2332
  %_30 = load i32, i32* %ek, align 4, !dbg !2325
  %_29 = icmp eq i32 %_30, 5, !dbg !2325
  br i1 %_29, label %bb11, label %bb12, !dbg !2325

bb9:                                              ; preds = %bb8
  store i8 4, i8* %1, align 1, !dbg !2331
  br label %bb83, !dbg !2325

bb12:                                             ; preds = %bb10
  store i32* %ek, i32** %v.dbg.spill6, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill6, metadata !2221, metadata !DIExpression()), !dbg !2333
  %_35 = load i32, i32* %ek, align 4, !dbg !2325
  %_34 = icmp eq i32 %_35, 6, !dbg !2325
  br i1 %_34, label %bb13, label %bb14, !dbg !2325

bb11:                                             ; preds = %bb10
  store i8 5, i8* %1, align 1, !dbg !2332
  br label %bb83, !dbg !2325

bb14:                                             ; preds = %bb12
  store i32* %ek, i32** %v.dbg.spill7, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill7, metadata !2224, metadata !DIExpression()), !dbg !2334
  %_40 = load i32, i32* %ek, align 4, !dbg !2325
  %_39 = icmp eq i32 %_40, 7, !dbg !2325
  br i1 %_39, label %bb15, label %bb16, !dbg !2325

bb13:                                             ; preds = %bb12
  store i8 6, i8* %1, align 1, !dbg !2333
  br label %bb83, !dbg !2325

bb16:                                             ; preds = %bb14
  store i32* %ek, i32** %v.dbg.spill8, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill8, metadata !2227, metadata !DIExpression()), !dbg !2335
  %_45 = load i32, i32* %ek, align 4, !dbg !2325
  %_44 = icmp eq i32 %_45, 8, !dbg !2325
  br i1 %_44, label %bb17, label %bb18, !dbg !2325

bb15:                                             ; preds = %bb14
  store i8 7, i8* %1, align 1, !dbg !2334
  br label %bb83, !dbg !2325

bb18:                                             ; preds = %bb16
  store i32* %ek, i32** %v.dbg.spill9, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill9, metadata !2230, metadata !DIExpression()), !dbg !2336
  %_50 = load i32, i32* %ek, align 4, !dbg !2325
  %_49 = icmp eq i32 %_50, 9, !dbg !2325
  br i1 %_49, label %bb19, label %bb20, !dbg !2325

bb17:                                             ; preds = %bb16
  store i8 8, i8* %1, align 1, !dbg !2335
  br label %bb83, !dbg !2325

bb20:                                             ; preds = %bb18
  store i32* %ek, i32** %v.dbg.spill10, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill10, metadata !2233, metadata !DIExpression()), !dbg !2337
  %_55 = load i32, i32* %ek, align 4, !dbg !2325
  %_54 = icmp eq i32 %_55, 10, !dbg !2325
  br i1 %_54, label %bb21, label %bb22, !dbg !2325

bb19:                                             ; preds = %bb18
  store i8 9, i8* %1, align 1, !dbg !2336
  br label %bb83, !dbg !2325

bb22:                                             ; preds = %bb20
  store i32* %ek, i32** %v.dbg.spill11, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill11, metadata !2236, metadata !DIExpression()), !dbg !2338
  %_60 = load i32, i32* %ek, align 4, !dbg !2325
  %_59 = icmp eq i32 %_60, 11, !dbg !2325
  br i1 %_59, label %bb23, label %bb24, !dbg !2325

bb21:                                             ; preds = %bb20
  store i8 10, i8* %1, align 1, !dbg !2337
  br label %bb83, !dbg !2325

bb24:                                             ; preds = %bb22
  store i32* %ek, i32** %v.dbg.spill12, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill12, metadata !2239, metadata !DIExpression()), !dbg !2339
  %_65 = load i32, i32* %ek, align 4, !dbg !2325
  %_64 = icmp eq i32 %_65, 12, !dbg !2325
  br i1 %_64, label %bb25, label %bb26, !dbg !2325

bb23:                                             ; preds = %bb22
  store i8 11, i8* %1, align 1, !dbg !2338
  br label %bb83, !dbg !2325

bb26:                                             ; preds = %bb24
  store i32* %ek, i32** %v.dbg.spill13, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill13, metadata !2242, metadata !DIExpression()), !dbg !2340
  %_70 = load i32, i32* %ek, align 4, !dbg !2325
  %_69 = icmp eq i32 %_70, 13, !dbg !2325
  br i1 %_69, label %bb27, label %bb28, !dbg !2325

bb25:                                             ; preds = %bb24
  store i8 12, i8* %1, align 1, !dbg !2339
  br label %bb83, !dbg !2325

bb28:                                             ; preds = %bb26
  store i32* %ek, i32** %v.dbg.spill14, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill14, metadata !2245, metadata !DIExpression()), !dbg !2341
  %_75 = load i32, i32* %ek, align 4, !dbg !2325
  %_74 = icmp eq i32 %_75, 14, !dbg !2325
  br i1 %_74, label %bb29, label %bb30, !dbg !2325

bb27:                                             ; preds = %bb26
  store i8 13, i8* %1, align 1, !dbg !2340
  br label %bb83, !dbg !2325

bb30:                                             ; preds = %bb28
  store i32* %ek, i32** %v.dbg.spill15, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill15, metadata !2248, metadata !DIExpression()), !dbg !2342
  %_80 = load i32, i32* %ek, align 4, !dbg !2325
  %_79 = icmp eq i32 %_80, 15, !dbg !2325
  br i1 %_79, label %bb31, label %bb32, !dbg !2325

bb29:                                             ; preds = %bb28
  store i8 14, i8* %1, align 1, !dbg !2341
  br label %bb83, !dbg !2325

bb32:                                             ; preds = %bb30
  store i32* %ek, i32** %v.dbg.spill16, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill16, metadata !2251, metadata !DIExpression()), !dbg !2343
  %_85 = load i32, i32* %ek, align 4, !dbg !2325
  %_84 = icmp eq i32 %_85, 16, !dbg !2325
  br i1 %_84, label %bb33, label %bb34, !dbg !2325

bb31:                                             ; preds = %bb30
  store i8 15, i8* %1, align 1, !dbg !2342
  br label %bb83, !dbg !2325

bb34:                                             ; preds = %bb32
  store i32* %ek, i32** %v.dbg.spill17, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill17, metadata !2254, metadata !DIExpression()), !dbg !2344
  %_90 = load i32, i32* %ek, align 4, !dbg !2325
  %_89 = icmp eq i32 %_90, 17, !dbg !2325
  br i1 %_89, label %bb35, label %bb36, !dbg !2325

bb33:                                             ; preds = %bb32
  store i8 16, i8* %1, align 1, !dbg !2343
  br label %bb83, !dbg !2325

bb36:                                             ; preds = %bb34
  store i32* %ek, i32** %v.dbg.spill18, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill18, metadata !2257, metadata !DIExpression()), !dbg !2345
  %_95 = load i32, i32* %ek, align 4, !dbg !2325
  %_94 = icmp eq i32 %_95, 18, !dbg !2325
  br i1 %_94, label %bb37, label %bb38, !dbg !2325

bb35:                                             ; preds = %bb34
  store i8 17, i8* %1, align 1, !dbg !2344
  br label %bb83, !dbg !2325

bb38:                                             ; preds = %bb36
  store i32* %ek, i32** %v.dbg.spill19, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill19, metadata !2260, metadata !DIExpression()), !dbg !2346
  %_100 = load i32, i32* %ek, align 4, !dbg !2325
  %_99 = icmp eq i32 %_100, 19, !dbg !2325
  br i1 %_99, label %bb39, label %bb40, !dbg !2325

bb37:                                             ; preds = %bb36
  store i8 18, i8* %1, align 1, !dbg !2345
  br label %bb83, !dbg !2325

bb40:                                             ; preds = %bb38
  store i32* %ek, i32** %v.dbg.spill20, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill20, metadata !2263, metadata !DIExpression()), !dbg !2347
  %_105 = load i32, i32* %ek, align 4, !dbg !2325
  %_104 = icmp eq i32 %_105, 20, !dbg !2325
  br i1 %_104, label %bb41, label %bb42, !dbg !2325

bb39:                                             ; preds = %bb38
  store i8 19, i8* %1, align 1, !dbg !2346
  br label %bb83, !dbg !2325

bb42:                                             ; preds = %bb40
  store i32* %ek, i32** %v.dbg.spill21, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill21, metadata !2266, metadata !DIExpression()), !dbg !2348
  %_110 = load i32, i32* %ek, align 4, !dbg !2325
  %_109 = icmp eq i32 %_110, 21, !dbg !2325
  br i1 %_109, label %bb43, label %bb44, !dbg !2325

bb41:                                             ; preds = %bb40
  store i8 20, i8* %1, align 1, !dbg !2347
  br label %bb83, !dbg !2325

bb44:                                             ; preds = %bb42
  store i32* %ek, i32** %v.dbg.spill22, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill22, metadata !2269, metadata !DIExpression()), !dbg !2349
  %_115 = load i32, i32* %ek, align 4, !dbg !2325
  %_114 = icmp eq i32 %_115, 22, !dbg !2325
  br i1 %_114, label %bb45, label %bb46, !dbg !2325

bb43:                                             ; preds = %bb42
  store i8 21, i8* %1, align 1, !dbg !2348
  br label %bb83, !dbg !2325

bb46:                                             ; preds = %bb44
  store i32* %ek, i32** %v.dbg.spill23, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill23, metadata !2272, metadata !DIExpression()), !dbg !2350
  %_120 = load i32, i32* %ek, align 4, !dbg !2325
  %_119 = icmp eq i32 %_120, 23, !dbg !2325
  br i1 %_119, label %bb47, label %bb48, !dbg !2325

bb45:                                             ; preds = %bb44
  store i8 22, i8* %1, align 1, !dbg !2349
  br label %bb83, !dbg !2325

bb48:                                             ; preds = %bb46
  store i32* %ek, i32** %v.dbg.spill24, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill24, metadata !2275, metadata !DIExpression()), !dbg !2351
  %_125 = load i32, i32* %ek, align 4, !dbg !2325
  %_124 = icmp eq i32 %_125, 24, !dbg !2325
  br i1 %_124, label %bb49, label %bb50, !dbg !2325

bb47:                                             ; preds = %bb46
  store i8 23, i8* %1, align 1, !dbg !2350
  br label %bb83, !dbg !2325

bb50:                                             ; preds = %bb48
  store i32* %ek, i32** %v.dbg.spill25, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill25, metadata !2278, metadata !DIExpression()), !dbg !2352
  %_130 = load i32, i32* %ek, align 4, !dbg !2325
  %_129 = icmp eq i32 %_130, 25, !dbg !2325
  br i1 %_129, label %bb51, label %bb52, !dbg !2325

bb49:                                             ; preds = %bb48
  store i8 24, i8* %1, align 1, !dbg !2351
  br label %bb83, !dbg !2325

bb52:                                             ; preds = %bb50
  store i32* %ek, i32** %v.dbg.spill26, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill26, metadata !2281, metadata !DIExpression()), !dbg !2353
  %_135 = load i32, i32* %ek, align 4, !dbg !2325
  %_134 = icmp eq i32 %_135, 26, !dbg !2325
  br i1 %_134, label %bb53, label %bb54, !dbg !2325

bb51:                                             ; preds = %bb50
  store i8 25, i8* %1, align 1, !dbg !2352
  br label %bb83, !dbg !2325

bb54:                                             ; preds = %bb52
  store i32* %ek, i32** %v.dbg.spill27, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill27, metadata !2284, metadata !DIExpression()), !dbg !2354
  %_140 = load i32, i32* %ek, align 4, !dbg !2325
  %_139 = icmp eq i32 %_140, 27, !dbg !2325
  br i1 %_139, label %bb55, label %bb56, !dbg !2325

bb53:                                             ; preds = %bb52
  store i8 26, i8* %1, align 1, !dbg !2353
  br label %bb83, !dbg !2325

bb56:                                             ; preds = %bb54
  store i32* %ek, i32** %v.dbg.spill28, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill28, metadata !2287, metadata !DIExpression()), !dbg !2355
  %_145 = load i32, i32* %ek, align 4, !dbg !2325
  %_144 = icmp eq i32 %_145, 28, !dbg !2325
  br i1 %_144, label %bb57, label %bb58, !dbg !2325

bb55:                                             ; preds = %bb54
  store i8 27, i8* %1, align 1, !dbg !2354
  br label %bb83, !dbg !2325

bb58:                                             ; preds = %bb56
  store i32* %ek, i32** %v.dbg.spill29, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill29, metadata !2290, metadata !DIExpression()), !dbg !2356
  %_150 = load i32, i32* %ek, align 4, !dbg !2325
  %_149 = icmp eq i32 %_150, 29, !dbg !2325
  br i1 %_149, label %bb59, label %bb60, !dbg !2325

bb57:                                             ; preds = %bb56
  store i8 28, i8* %1, align 1, !dbg !2355
  br label %bb83, !dbg !2325

bb60:                                             ; preds = %bb58
  store i32* %ek, i32** %v.dbg.spill30, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill30, metadata !2293, metadata !DIExpression()), !dbg !2357
  %_155 = load i32, i32* %ek, align 4, !dbg !2325
  %_154 = icmp eq i32 %_155, 30, !dbg !2325
  br i1 %_154, label %bb61, label %bb62, !dbg !2325

bb59:                                             ; preds = %bb58
  store i8 29, i8* %1, align 1, !dbg !2356
  br label %bb83, !dbg !2325

bb62:                                             ; preds = %bb60
  store i32* %ek, i32** %v.dbg.spill31, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill31, metadata !2296, metadata !DIExpression()), !dbg !2358
  %_160 = load i32, i32* %ek, align 4, !dbg !2325
  %_159 = icmp eq i32 %_160, 31, !dbg !2325
  br i1 %_159, label %bb63, label %bb64, !dbg !2325

bb61:                                             ; preds = %bb60
  store i8 30, i8* %1, align 1, !dbg !2357
  br label %bb83, !dbg !2325

bb64:                                             ; preds = %bb62
  store i32* %ek, i32** %v.dbg.spill32, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill32, metadata !2299, metadata !DIExpression()), !dbg !2359
  %_165 = load i32, i32* %ek, align 4, !dbg !2325
  %_164 = icmp eq i32 %_165, 32, !dbg !2325
  br i1 %_164, label %bb65, label %bb66, !dbg !2325

bb63:                                             ; preds = %bb62
  store i8 31, i8* %1, align 1, !dbg !2358
  br label %bb83, !dbg !2325

bb66:                                             ; preds = %bb64
  store i32* %ek, i32** %v.dbg.spill33, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill33, metadata !2302, metadata !DIExpression()), !dbg !2360
  %_170 = load i32, i32* %ek, align 4, !dbg !2325
  %_169 = icmp eq i32 %_170, 33, !dbg !2325
  br i1 %_169, label %bb67, label %bb68, !dbg !2325

bb65:                                             ; preds = %bb64
  store i8 32, i8* %1, align 1, !dbg !2359
  br label %bb83, !dbg !2325

bb68:                                             ; preds = %bb66
  store i32* %ek, i32** %v.dbg.spill34, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill34, metadata !2305, metadata !DIExpression()), !dbg !2361
  %_175 = load i32, i32* %ek, align 4, !dbg !2325
  %_174 = icmp eq i32 %_175, 34, !dbg !2325
  br i1 %_174, label %bb69, label %bb70, !dbg !2325

bb67:                                             ; preds = %bb66
  store i8 33, i8* %1, align 1, !dbg !2360
  br label %bb83, !dbg !2325

bb70:                                             ; preds = %bb68
  store i32* %ek, i32** %v.dbg.spill35, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill35, metadata !2308, metadata !DIExpression()), !dbg !2362
  %_180 = load i32, i32* %ek, align 4, !dbg !2325
  %_179 = icmp eq i32 %_180, 35, !dbg !2325
  br i1 %_179, label %bb71, label %bb72, !dbg !2325

bb69:                                             ; preds = %bb68
  store i8 34, i8* %1, align 1, !dbg !2361
  br label %bb83, !dbg !2325

bb72:                                             ; preds = %bb70
  store i32* %ek, i32** %v.dbg.spill36, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill36, metadata !2311, metadata !DIExpression()), !dbg !2363
  %_185 = load i32, i32* %ek, align 4, !dbg !2325
  %_184 = icmp eq i32 %_185, 39, !dbg !2325
  br i1 %_184, label %bb73, label %bb74, !dbg !2325

bb71:                                             ; preds = %bb70
  store i8 35, i8* %1, align 1, !dbg !2362
  br label %bb83, !dbg !2325

bb74:                                             ; preds = %bb72
  store i32* %ek, i32** %v.dbg.spill37, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill37, metadata !2314, metadata !DIExpression()), !dbg !2364
  %_190 = load i32, i32* %ek, align 4, !dbg !2325
  %_189 = icmp eq i32 %_190, 37, !dbg !2325
  br i1 %_189, label %bb75, label %bb76, !dbg !2325

bb73:                                             ; preds = %bb72
  store i8 39, i8* %1, align 1, !dbg !2363
  br label %bb83, !dbg !2325

bb76:                                             ; preds = %bb74
  store i32* %ek, i32** %v.dbg.spill38, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill38, metadata !2317, metadata !DIExpression()), !dbg !2365
  %_195 = load i32, i32* %ek, align 4, !dbg !2325
  %_194 = icmp eq i32 %_195, 36, !dbg !2325
  br i1 %_194, label %bb77, label %bb78, !dbg !2325

bb75:                                             ; preds = %bb74
  store i8 37, i8* %1, align 1, !dbg !2364
  br label %bb83, !dbg !2325

bb78:                                             ; preds = %bb76
  store i32* %ek, i32** %v.dbg.spill39, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill39, metadata !2320, metadata !DIExpression()), !dbg !2366
  %_200 = load i32, i32* %ek, align 4, !dbg !2325
  %_199 = icmp eq i32 %_200, 38, !dbg !2325
  br i1 %_199, label %bb79, label %bb80, !dbg !2325

bb77:                                             ; preds = %bb76
  store i8 36, i8* %1, align 1, !dbg !2365
  br label %bb83, !dbg !2325

bb80:                                             ; preds = %bb78
  store i32* %ek, i32** %v.dbg.spill40, align 8, !dbg !2325
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill40, metadata !2323, metadata !DIExpression()), !dbg !2367
  %_205 = load i32, i32* %ek, align 4, !dbg !2325
  %_204 = icmp eq i32 %_205, 40, !dbg !2325
  br i1 %_204, label %bb81, label %bb82, !dbg !2325

bb79:                                             ; preds = %bb78
  store i8 38, i8* %1, align 1, !dbg !2366
  br label %bb83, !dbg !2325

bb82:                                             ; preds = %bb80
  store i8 41, i8* %1, align 1, !dbg !2325
  br label %bb83, !dbg !2325

bb81:                                             ; preds = %bb80
  store i8 40, i8* %1, align 1, !dbg !2367
  br label %bb83, !dbg !2325
}

; std::io::error::repr_bitpacked::Repr::data::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 %"std::io::error::Custom"* @"_ZN3std2io5error14repr_bitpacked4Repr4data28_$u7b$$u7b$closure$u7d$$u7d$17h84939d74855cabc5E"(%"std::io::error::Custom"* %c) unnamed_addr #0 !dbg !2368 {
start:
  %c.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %_1.dbg.spill = alloca %"[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]"* %_1.dbg.spill, metadata !2373, metadata !DIExpression()), !dbg !2374
  store %"std::io::error::Custom"* %c, %"std::io::error::Custom"** %c.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %c.dbg.spill, metadata !2372, metadata !DIExpression()), !dbg !2375
  ret %"std::io::error::Custom"* %c, !dbg !2376
}

; std::io::error::Error::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error5Error4kind17h574b1779eeb38e5aE(i8** align 8 %self) unnamed_addr #0 !dbg !2377 {
start:
  %code.dbg.spill = alloca i32, align 4
  %kind.dbg.spill = alloca i8, align 1
  %m.dbg.spill = alloca %"std::io::error::SimpleMessage"*, align 8
  %c.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %self.dbg.spill1 = alloca i8**, align 8
  %self.dbg.spill = alloca i8**, align 8
  %_2 = alloca %"std::io::error::ErrorData<&std::io::error::Custom>", align 8
  %0 = alloca i8, align 1
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !2381, metadata !DIExpression()), !dbg !2390
  store i8** %self, i8*** %self.dbg.spill1, align 8, !dbg !2391
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill1, metadata !2392, metadata !DIExpression()), !dbg !2399
  %_10 = load i8*, i8** %self, align 8, !dbg !2399, !nonnull !28, !noundef !28
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17h800f2b6fa66d9a8bE(%"std::io::error::ErrorData<&std::io::error::Custom>"* sret(%"std::io::error::ErrorData<&std::io::error::Custom>") %_2, i8* %_10), !dbg !2399
  br label %bb8, !dbg !2399

bb8:                                              ; preds = %start
  %1 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to i8*, !dbg !2391
  %2 = load i8, i8* %1, align 8, !dbg !2391, !range !2400, !noundef !28
  %_4 = zext i8 %2 to i64, !dbg !2391
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb6
    i64 2, label %bb1
    i64 3, label %bb5
  ], !dbg !2401

bb2:                                              ; preds = %bb8
  unreachable, !dbg !2391

bb3:                                              ; preds = %bb8
  %3 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to %"std::io::error::ErrorData<&std::io::error::Custom>::Os"*, !dbg !2402
  %4 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Os", %"std::io::error::ErrorData<&std::io::error::Custom>::Os"* %3, i32 0, i32 1, !dbg !2402
  %code = load i32, i32* %4, align 4, !dbg !2402
  store i32 %code, i32* %code.dbg.spill, align 4, !dbg !2402
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !2382, metadata !DIExpression()), !dbg !2403
; call std::sys::unix::decode_error_kind
  %5 = call i8 @_ZN3std3sys4unix17decode_error_kind17hddbacf084bae3705E(i32 %code), !dbg !2404, !range !1583
  store i8 %5, i8* %0, align 1, !dbg !2404
  br label %bb4, !dbg !2404

bb6:                                              ; preds = %bb8
  %6 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to %"std::io::error::ErrorData<&std::io::error::Custom>::Simple"*, !dbg !2405
  %7 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Simple", %"std::io::error::ErrorData<&std::io::error::Custom>::Simple"* %6, i32 0, i32 1, !dbg !2405
  %kind = load i8, i8* %7, align 1, !dbg !2405, !range !1583, !noundef !28
  store i8 %kind, i8* %kind.dbg.spill, align 1, !dbg !2405
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2386, metadata !DIExpression()), !dbg !2406
  store i8 %kind, i8* %0, align 1, !dbg !2407
  br label %bb7, !dbg !2408

bb1:                                              ; preds = %bb8
  %8 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage"*, !dbg !2409
  %9 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage", %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage"* %8, i32 0, i32 1, !dbg !2409
  %m = load %"std::io::error::SimpleMessage"*, %"std::io::error::SimpleMessage"** %9, align 8, !dbg !2409, !nonnull !28, !align !1582, !noundef !28
  store %"std::io::error::SimpleMessage"* %m, %"std::io::error::SimpleMessage"** %m.dbg.spill, align 8, !dbg !2409
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %m.dbg.spill, metadata !2388, metadata !DIExpression()), !dbg !2410
  %10 = getelementptr inbounds %"std::io::error::SimpleMessage", %"std::io::error::SimpleMessage"* %m, i32 0, i32 1, !dbg !2411
  %11 = load i8, i8* %10, align 8, !dbg !2411, !range !1583, !noundef !28
  store i8 %11, i8* %0, align 1, !dbg !2411
  br label %bb7, !dbg !2412

bb5:                                              ; preds = %bb8
  %12 = bitcast %"std::io::error::ErrorData<&std::io::error::Custom>"* %_2 to %"std::io::error::ErrorData<&std::io::error::Custom>::Custom"*, !dbg !2413
  %13 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Custom", %"std::io::error::ErrorData<&std::io::error::Custom>::Custom"* %12, i32 0, i32 1, !dbg !2413
  %c = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %13, align 8, !dbg !2413, !nonnull !28, !align !1582, !noundef !28
  store %"std::io::error::Custom"* %c, %"std::io::error::Custom"** %c.dbg.spill, align 8, !dbg !2413
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %c.dbg.spill, metadata !2384, metadata !DIExpression()), !dbg !2414
  %14 = getelementptr inbounds %"std::io::error::Custom", %"std::io::error::Custom"* %c, i32 0, i32 1, !dbg !2415
  %15 = load i8, i8* %14, align 8, !dbg !2415, !range !1583, !noundef !28
  store i8 %15, i8* %0, align 1, !dbg !2415
  br label %bb7, !dbg !2416

bb7:                                              ; preds = %bb4, %bb6, %bb1, %bb5
  %16 = load i8, i8* %0, align 1, !dbg !2417, !range !1583, !noundef !28
  ret i8 %16, !dbg !2417

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !2418
}

; std::rt::lang_start
; Function Attrs: nonlazybind uwtable
define hidden i64 @_ZN3std2rt10lang_start17ha4486b9f474a3cafE(void ()* %main, i64 %argc, i8** %argv) unnamed_addr #1 !dbg !2419 {
start:
  %v.dbg.spill = alloca i64, align 8
  %argv.dbg.spill = alloca i8**, align 8
  %argc.dbg.spill = alloca i64, align 8
  %main.dbg.spill = alloca void ()*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64, align 8
  store void ()* %main, void ()** %main.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %main.dbg.spill, metadata !2425, metadata !DIExpression()), !dbg !2430
  store i64 %argc, i64* %argc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %argc.dbg.spill, metadata !2426, metadata !DIExpression()), !dbg !2431
  store i8** %argv, i8*** %argv.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.dbg.spill, metadata !2427, metadata !DIExpression()), !dbg !2432
  %0 = bitcast i64** %_8 to void ()**, !dbg !2433
  store void ()* %main, void ()** %0, align 8, !dbg !2433
  %_5.0 = bitcast i64** %_8 to {}*, !dbg !2434
; call std::rt::lang_start_internal
  %1 = call i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1 %_5.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.1 to [3 x i64]*), i64 %argc, i8** %argv), !dbg !2435
  store i64 %1, i64* %_4, align 8, !dbg !2435
  br label %bb1, !dbg !2435

bb1:                                              ; preds = %start
  %v = load i64, i64* %_4, align 8, !dbg !2436
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2436
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2428, metadata !DIExpression()), !dbg !2437
  ret i64 %v, !dbg !2438
}

; std::rt::lang_start::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h4c71719825c42f40E"(i64** align 8 %_1) unnamed_addr #0 !dbg !2439 {
start:
  %self.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i64**, align 8
  %self = alloca i8, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  %0 = load i64**, i64*** %_1.dbg.spill, align 8, !nonnull !28, !align !1582, !noundef !28
  %1 = bitcast i64** %0 to void ()**
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !2444, metadata !DIExpression(DW_OP_deref)), !dbg !2445
  call void @llvm.dbg.declare(metadata i8* %self, metadata !2446, metadata !DIExpression()), !dbg !2462
  %2 = bitcast i64** %_1 to void ()**, !dbg !2464
  %_4 = load void ()*, void ()** %2, align 8, !dbg !2464, !nonnull !28, !noundef !28
; call std::sys_common::backtrace::__rust_begin_short_backtrace
  call void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hd4e1b9f94012fb34E(void ()* %_4), !dbg !2463
  br label %bb1, !dbg !2463

bb1:                                              ; preds = %start
; call <() as std::process::Termination>::report
  %3 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h72a4f00e2834b23cE"(), !dbg !2463
  store i8 %3, i8* %self, align 1, !dbg !2463
  br label %bb2, !dbg !2463

bb2:                                              ; preds = %bb1
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !2462
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2465, metadata !DIExpression()), !dbg !2473
  %_6 = load i8, i8* %self, align 1, !dbg !2473
  %4 = zext i8 %_6 to i32, !dbg !2473
  ret i32 %4, !dbg !2475
}

; std::panic::catch_unwind
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @_ZN3std5panic12catch_unwind17h04c1075fbce9ae98E(i64* align 8 %f) unnamed_addr #1 !dbg !2476 {
start:
  %f.dbg.spill = alloca i64*, align 8
  store i64* %f, i64** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %f.dbg.spill, metadata !2482, metadata !DIExpression()), !dbg !2485
; call std::panicking::try
  %0 = call { i8*, i8* } @_ZN3std9panicking3try17hb75f4d75ddcf1d32E(i64* align 8 %f), !dbg !2486
  %1 = extractvalue { i8*, i8* } %0, 0, !dbg !2486
  %2 = extractvalue { i8*, i8* } %0, 1, !dbg !2486
  br label %bb1, !dbg !2486

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0, !dbg !2487
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1, !dbg !2487
  ret { i8*, i8* } %4, !dbg !2487
}

; std::panic::catch_unwind
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @_ZN3std5panic12catch_unwind17h9fda0cff44c6f11eE() unnamed_addr #1 !dbg !2488 {
start:
  %f.dbg.spill = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>", align 1
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"* %f.dbg.spill, metadata !2492, metadata !DIExpression()), !dbg !2495
; call std::panicking::try
  %0 = call { i8*, i8* } @_ZN3std9panicking3try17h9e0c96685ebd620cE(), !dbg !2496
  %1 = extractvalue { i8*, i8* } %0, 0, !dbg !2496
  %2 = extractvalue { i8*, i8* } %0, 1, !dbg !2496
  br label %bb1, !dbg !2496

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0, !dbg !2497
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1, !dbg !2497
  ret { i8*, i8* } %4, !dbg !2497
}

; std::thread::JoinInner<T>::join
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @"_ZN3std6thread18JoinInner$LT$T$GT$4join17hdd7cbb72e863d55eE"(%"std::thread::JoinInner<()>"* %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2498 {
start:
  %self.dbg.spill4 = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, align 8
  %self.dbg.spill = alloca %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"*, align 8
  %val.dbg.spill = alloca %"std::thread::Packet<()>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %_17 = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>", align 8
  %self2 = alloca i64*, align 8
  %self1 = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>", align 8
  call void @llvm.dbg.declare(metadata %"std::thread::JoinInner<()>"* %self, metadata !2512, metadata !DIExpression()), !dbg !2513
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %self1, metadata !2514, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.declare(metadata i64** %self2, metadata !2525, metadata !DIExpression()), !dbg !2548
  %1 = bitcast %"std::thread::JoinInner<()>"* %self to i64*, !dbg !2549
  %_3 = load i64, i64* %1, align 8, !dbg !2549
; invoke std::sys::unix::thread::Thread::join
  invoke void @_ZN3std3sys4unix6thread6Thread4join17h201ff71bf1661c8eE(i64 %_3)
          to label %bb1 unwind label %cleanup, !dbg !2549

bb8:                                              ; preds = %cleanup
  %2 = getelementptr inbounds %"std::thread::JoinInner<()>", %"std::thread::JoinInner<()>"* %self, i32 0, i32 1, !dbg !2550
; invoke core::ptr::drop_in_place<std::thread::Thread>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %2) #18
          to label %bb7 unwind label %abort, !dbg !2550

cleanup:                                          ; preds = %bb9, %bb13, %bb11, %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %_11 = getelementptr inbounds %"std::thread::JoinInner<()>", %"std::thread::JoinInner<()>"* %self, i32 0, i32 2, !dbg !2551
; invoke alloc::sync::Arc<T>::get_mut
  %8 = invoke align 8 i64* @"_ZN5alloc4sync12Arc$LT$T$GT$7get_mut17hdc8e2746c50a8bf4E"(i64** align 8 %_11)
          to label %bb2 unwind label %cleanup, !dbg !2524

bb2:                                              ; preds = %bb1
  store i64* %8, i64** %self2, align 8, !dbg !2524
  %9 = bitcast i64** %self2 to {}**, !dbg !2548
  %10 = load {}*, {}** %9, align 8, !dbg !2548
  %11 = icmp eq {}* %10, null, !dbg !2548
  %_12 = select i1 %11, i64 0, i64 1, !dbg !2548
  switch i64 %_12, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !2548

bb10:                                             ; preds = %bb2
  unreachable, !dbg !2548

bb9:                                              ; preds = %bb2
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc638 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc637 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !2548

bb11:                                             ; preds = %bb2
  %12 = bitcast i64** %self2 to %"std::thread::Packet<()>"**, !dbg !2548
  %val = load %"std::thread::Packet<()>"*, %"std::thread::Packet<()>"** %12, align 8, !dbg !2548, !nonnull !28, !align !1582, !noundef !28
  store %"std::thread::Packet<()>"* %val, %"std::thread::Packet<()>"** %val.dbg.spill, align 8, !dbg !2548
  call void @llvm.dbg.declare(metadata %"std::thread::Packet<()>"** %val.dbg.spill, metadata !2545, metadata !DIExpression()), !dbg !2552
  %self3 = getelementptr inbounds %"std::thread::Packet<()>", %"std::thread::Packet<()>"* %val, i32 0, i32 2, !dbg !2524
  store %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %self3, %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill, align 8, !dbg !2524
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill, metadata !2553, metadata !DIExpression()), !dbg !2561
  %_15 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %self3 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, !dbg !2561
  store %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_15, %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %self.dbg.spill4, align 8, !dbg !2524
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %self.dbg.spill4, metadata !2562, metadata !DIExpression()), !dbg !2568
  %13 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_17 to i64*, !dbg !2568
  store i64 0, i64* %13, align 8, !dbg !2568
; invoke core::mem::replace
  invoke void @_ZN4core3mem7replace17h14699bb539fb6811E(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* sret(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>") %self1, %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* align 8 %_15, %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_17)
          to label %bb12 unwind label %cleanup, !dbg !2568

bb12:                                             ; preds = %bb11
  %14 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %self1 to i64*, !dbg !2523
  %_18 = load i64, i64* %14, align 8, !dbg !2523, !range !1578, !noundef !28
  switch i64 %_18, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !2523

bb14:                                             ; preds = %bb12
  unreachable, !dbg !2523

bb13:                                             ; preds = %bb12
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc638 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc637 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !2523

bb15:                                             ; preds = %bb12
  %15 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %self1 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some"*, !dbg !2523
  %16 = getelementptr inbounds %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some", %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some"* %15, i32 0, i32 1, !dbg !2523
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %16, i32 0, i32 0, !dbg !2523
  %18 = load i8*, i8** %17, align 8, !dbg !2523, !align !1104
  %19 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %16, i32 0, i32 1, !dbg !2523
  %20 = load i8*, i8** %19, align 8, !dbg !2523
  %21 = getelementptr inbounds %"std::thread::JoinInner<()>", %"std::thread::JoinInner<()>"* %self, i32 0, i32 1, !dbg !2550
; invoke core::ptr::drop_in_place<std::thread::Thread>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %21)
          to label %bb6 unwind label %cleanup5, !dbg !2550

bb5:                                              ; preds = %cleanup5
  %22 = getelementptr inbounds %"std::thread::JoinInner<()>", %"std::thread::JoinInner<()>"* %self, i32 0, i32 2, !dbg !2550
; invoke core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  invoke void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %22) #18
          to label %bb3 unwind label %abort, !dbg !2550

cleanup5:                                         ; preds = %bb15
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb5

bb6:                                              ; preds = %bb15
  %28 = getelementptr inbounds %"std::thread::JoinInner<()>", %"std::thread::JoinInner<()>"* %self, i32 0, i32 2, !dbg !2550
; call core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  call void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %28), !dbg !2550
  br label %bb4, !dbg !2550

abort:                                            ; preds = %bb7, %bb8, %bb5
  %29 = landingpad { i8*, i32 }
          cleanup, !dbg !2569
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !2569
  unreachable, !dbg !2569

bb3:                                              ; preds = %bb7, %bb5
  %30 = bitcast { i8*, i32 }* %0 to i8**, !dbg !2569
  %31 = load i8*, i8** %30, align 8, !dbg !2569
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !2569
  %33 = load i32, i32* %32, align 8, !dbg !2569
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0, !dbg !2569
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1, !dbg !2569
  resume { i8*, i32 } %35, !dbg !2569

bb4:                                              ; preds = %bb6
  %36 = insertvalue { i8*, i8* } undef, i8* %18, 0, !dbg !2570
  %37 = insertvalue { i8*, i8* } %36, i8* %20, 1, !dbg !2570
  ret { i8*, i8* } %37, !dbg !2570

unreachable:                                      ; preds = %bb9, %bb13
  unreachable

bb7:                                              ; preds = %bb8
  %38 = getelementptr inbounds %"std::thread::JoinInner<()>", %"std::thread::JoinInner<()>"* %self, i32 0, i32 2, !dbg !2550
; invoke core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  invoke void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %38) #18
          to label %bb3 unwind label %abort, !dbg !2550
}

; std::thread::JoinHandle<T>::join
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @"_ZN3std6thread19JoinHandle$LT$T$GT$4join17hbc5dd9a419e25243E"(%"std::thread::JoinHandle<()>"* %self) unnamed_addr #1 !dbg !2571 {
start:
  %_2 = alloca %"std::thread::JoinInner<()>", align 8
  call void @llvm.dbg.declare(metadata %"std::thread::JoinHandle<()>"* %self, metadata !2578, metadata !DIExpression()), !dbg !2579
  %0 = bitcast %"std::thread::JoinHandle<()>"* %self to %"std::thread::JoinInner<()>"*, !dbg !2580
  %1 = bitcast %"std::thread::JoinInner<()>"* %_2 to i8*, !dbg !2580
  %2 = bitcast %"std::thread::JoinInner<()>"* %0 to i8*, !dbg !2580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !2580
; call std::thread::JoinInner<T>::join
  %3 = call { i8*, i8* } @"_ZN3std6thread18JoinInner$LT$T$GT$4join17hdd7cbb72e863d55eE"(%"std::thread::JoinInner<()>"* %_2), !dbg !2580
  %4 = extractvalue { i8*, i8* } %3, 0, !dbg !2580
  %5 = extractvalue { i8*, i8* } %3, 1, !dbg !2580
  br label %bb1, !dbg !2580

bb1:                                              ; preds = %start
  %6 = insertvalue { i8*, i8* } undef, i8* %4, 0, !dbg !2581
  %7 = insertvalue { i8*, i8* } %6, i8* %5, 1, !dbg !2581
  ret { i8*, i8* } %7, !dbg !2581
}

; std::thread::spawn
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std6thread5spawn17h8f686819298d3b21E(%"std::thread::JoinHandle<()>"* sret(%"std::thread::JoinHandle<()>") %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2582 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %f.dbg.spill = alloca %"[closure@src/test_thread_locals.rs:56:27: 56:29]", align 1
  %_7 = alloca i8, align 1
  %_3 = alloca %"std::thread::Builder", align 8
  %_2 = alloca %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_thread_locals.rs:56:27: 56:29]"* %f.dbg.spill, metadata !2586, metadata !DIExpression()), !dbg !2587
  store i8 1, i8* %_7, align 1, !dbg !2588
; invoke std::thread::Builder::new
  invoke void @_ZN3std6thread7Builder3new17hc4ba9c847646b468E(%"std::thread::Builder"* sret(%"std::thread::Builder") %_3)
          to label %bb1 unwind label %cleanup, !dbg !2588

bb6:                                              ; preds = %cleanup
  %2 = load i8, i8* %_7, align 1, !dbg !2589, !range !1099, !noundef !28
  %3 = trunc i8 %2 to i1, !dbg !2589
  br i1 %3, label %bb5, label %bb4, !dbg !2589

cleanup:                                          ; preds = %bb2, %bb1, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2590
; invoke std::thread::Builder::spawn
  invoke void @_ZN3std6thread7Builder5spawn17hb090a562fb64540fE(%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* sret(%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>") %_2, %"std::thread::Builder"* %_3)
          to label %bb2 unwind label %cleanup, !dbg !2588

bb2:                                              ; preds = %bb1
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h10badbd86b4aadf6E"(%"std::thread::JoinHandle<()>"* sret(%"std::thread::JoinHandle<()>") %0, %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %_2, [0 x i8]* align 1 bitcast (<{ [22 x i8] }>* @alloc639 to [0 x i8]*), i64 22, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc641 to %"core::panic::location::Location"*))
          to label %bb3 unwind label %cleanup, !dbg !2588

bb3:                                              ; preds = %bb2
  ret void, !dbg !2591

bb4:                                              ; preds = %bb5, %bb6
  %9 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2592
  %10 = load i8*, i8** %9, align 8, !dbg !2592
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2592
  %12 = load i32, i32* %11, align 8, !dbg !2592
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !2592
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !2592
  resume { i8*, i32 } %14, !dbg !2592

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !2589
}

; std::thread::Builder::spawn_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std6thread7Builder15spawn_unchecked17h68509192edd45b03E(%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* sret(%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>") %0, %"std::thread::Builder"* %self) unnamed_addr #1 !dbg !2593 {
start:
  %e.dbg.spill4 = alloca i8*, align 8
  %residual.dbg.spill = alloca i8*, align 8
  %e.dbg.spill = alloca i8*, align 8
  %f.dbg.spill = alloca %"[closure@src/test_thread_locals.rs:56:27: 56:29]", align 1
  %_18 = alloca i8*, align 8
  %_16 = alloca %"std::thread::JoinInner<()>", align 8
  %v = alloca %"std::thread::JoinInner<()>", align 8
  %val = alloca %"std::thread::JoinInner<()>", align 8
  %residual = alloca i8*, align 8
  %_9 = alloca i64*, align 8
  %_7 = alloca %"std::thread::Builder", align 8
  %self1 = alloca %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>", align 8
  %_4 = alloca %"std::thread::JoinInner<()>", align 8
  %_3 = alloca %"std::thread::JoinHandle<()>", align 8
  call void @llvm.dbg.declare(metadata %"std::thread::Builder"* %self, metadata !2633, metadata !DIExpression()), !dbg !2657
  call void @llvm.dbg.declare(metadata %"[closure@src/test_thread_locals.rs:56:27: 56:29]"* %f.dbg.spill, metadata !2634, metadata !DIExpression()), !dbg !2658
  call void @llvm.dbg.declare(metadata %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* %self1, metadata !2659, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.declare(metadata i8** %residual, metadata !2706, metadata !DIExpression()), !dbg !2718
  call void @llvm.dbg.declare(metadata %"std::thread::JoinInner<()>"* %val, metadata !2655, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.declare(metadata %"std::thread::JoinInner<()>"* %v, metadata !2698, metadata !DIExpression()), !dbg !2721
  %1 = bitcast %"std::thread::Builder"* %_7 to i8*, !dbg !2722
  %2 = bitcast %"std::thread::Builder"* %self to i8*, !dbg !2722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false), !dbg !2722
  %3 = bitcast i64** %_9 to {}**, !dbg !2723
  store {}* null, {}** %3, align 8, !dbg !2723
  %4 = load i64*, i64** %_9, align 8, !dbg !2722
; call std::thread::Builder::spawn_unchecked_
  call void @_ZN3std6thread7Builder16spawn_unchecked_17hab5aa20ef4d93507E(%"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* sret(%"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>") %self1, %"std::thread::Builder"* %_7, i64* %4), !dbg !2722
  br label %bb1, !dbg !2722

bb1:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* %self1 to i64*, !dbg !2704
  %_14 = load i64, i64* %5, align 8, !dbg !2704, !range !1578, !noundef !28
  switch i64 %_14, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb7
  ], !dbg !2704

bb8:                                              ; preds = %bb1
  unreachable, !dbg !2704

bb9:                                              ; preds = %bb1
  %6 = bitcast %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* %self1 to %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Ok"*, !dbg !2704
  %7 = getelementptr inbounds %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Ok", %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Ok"* %6, i32 0, i32 1, !dbg !2704
  %8 = bitcast %"std::thread::JoinInner<()>"* %v to i8*, !dbg !2704
  %9 = bitcast %"std::thread::JoinInner<()>"* %7 to i8*, !dbg !2704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !2704
  %10 = bitcast %"std::thread::JoinInner<()>"* %_16 to i8*, !dbg !2721
  %11 = bitcast %"std::thread::JoinInner<()>"* %v to i8*, !dbg !2721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !2721
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Continue"*, !dbg !2721
  %13 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Continue"* %12, i32 0, i32 1, !dbg !2721
  %14 = bitcast %"std::thread::JoinInner<()>"* %13 to i8*, !dbg !2721
  %15 = bitcast %"std::thread::JoinInner<()>"* %_16 to i8*, !dbg !2721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !2721
  %16 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>"* %_5 to i64*, !dbg !2721
  store i64 0, i64* %16, align 8, !dbg !2721
  br label %bb2, !dbg !2704

bb7:                                              ; preds = %bb1
  %17 = bitcast %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* %self1 to %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Err"*, !dbg !2704
  %18 = getelementptr inbounds %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Err", %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Err"* %17, i32 0, i32 1, !dbg !2704
  %e = load i8*, i8** %18, align 8, !dbg !2704, !nonnull !28, !noundef !28
  store i8* %e, i8** %e.dbg.spill, align 8, !dbg !2704
  call void @llvm.dbg.declare(metadata i8** %e.dbg.spill, metadata !2701, metadata !DIExpression()), !dbg !2724
  store i8* %e, i8** %_18, align 8, !dbg !2724
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Break"*, !dbg !2724
  %20 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Break"* %19, i32 0, i32 1, !dbg !2724
  %21 = load i8*, i8** %_18, align 8, !dbg !2724, !nonnull !28, !noundef !28
  store i8* %21, i8** %20, align 8, !dbg !2724
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>"* %_5 to i64*, !dbg !2724
  store i64 1, i64* %22, align 8, !dbg !2724
  br label %bb2, !dbg !2704

bb2:                                              ; preds = %bb9, %bb7
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>"* %_5 to i64*, !dbg !2705
  %_10 = load i64, i64* %23, align 8, !dbg !2705, !range !1578, !noundef !28
  switch i64 %_10, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !2705

bb4:                                              ; preds = %bb2
  unreachable, !dbg !2705

bb3:                                              ; preds = %bb2
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Continue"*, !dbg !2705
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Continue"* %24, i32 0, i32 1, !dbg !2705
  %26 = bitcast %"std::thread::JoinInner<()>"* %val to i8*, !dbg !2705
  %27 = bitcast %"std::thread::JoinInner<()>"* %25 to i8*, !dbg !2705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false), !dbg !2705
  %28 = bitcast %"std::thread::JoinInner<()>"* %_4 to i8*, !dbg !2720
  %29 = bitcast %"std::thread::JoinInner<()>"* %val to i8*, !dbg !2720
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false), !dbg !2720
  %30 = bitcast %"std::thread::JoinHandle<()>"* %_3 to %"std::thread::JoinInner<()>"*, !dbg !2725
  %31 = bitcast %"std::thread::JoinInner<()>"* %30 to i8*, !dbg !2725
  %32 = bitcast %"std::thread::JoinInner<()>"* %_4 to i8*, !dbg !2725
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false), !dbg !2725
  %33 = bitcast %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %0 to %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Ok"*, !dbg !2726
  %34 = getelementptr inbounds %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Ok", %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Ok"* %33, i32 0, i32 1, !dbg !2726
  %35 = bitcast %"std::thread::JoinHandle<()>"* %34 to i8*, !dbg !2726
  %36 = bitcast %"std::thread::JoinHandle<()>"* %_3 to i8*, !dbg !2726
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false), !dbg !2726
  %37 = bitcast %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %0 to i64*, !dbg !2726
  store i64 0, i64* %37, align 8, !dbg !2726
  br label %bb6, !dbg !2727

bb5:                                              ; preds = %bb2
  %38 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Break"*, !dbg !2728
  %39 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>::Break"* %38, i32 0, i32 1, !dbg !2728
  %residual2 = load i8*, i8** %39, align 8, !dbg !2728, !nonnull !28, !noundef !28
  store i8* %residual2, i8** %residual.dbg.spill, align 8, !dbg !2728
  call void @llvm.dbg.declare(metadata i8** %residual.dbg.spill, metadata !2635, metadata !DIExpression()), !dbg !2729
  store i8* %residual2, i8** %residual, align 8, !dbg !2729
  %e3 = load i8*, i8** %residual, align 8, !dbg !2718, !nonnull !28, !noundef !28
  store i8* %e3, i8** %e.dbg.spill4, align 8, !dbg !2718
  call void @llvm.dbg.declare(metadata i8** %e.dbg.spill4, metadata !2713, metadata !DIExpression()), !dbg !2730
; call <T as core::convert::From<T>>::from
  %_21 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc0915e6582d29decE"(i8* %e3), !dbg !2730
  br label %bb10, !dbg !2730

bb10:                                             ; preds = %bb5
  %40 = bitcast %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %0 to %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Err"*, !dbg !2730
  %41 = getelementptr inbounds %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Err", %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Err"* %40, i32 0, i32 1, !dbg !2730
  store i8* %_21, i8** %41, align 8, !dbg !2730
  %42 = bitcast %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %0 to i64*, !dbg !2730
  store i64 1, i64* %42, align 8, !dbg !2730
  br label %bb6, !dbg !2727

bb6:                                              ; preds = %bb3, %bb10
  ret void, !dbg !2731
}

; std::thread::Builder::spawn_unchecked_
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std6thread7Builder16spawn_unchecked_17hab5aa20ef4d93507E(%"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* sret(%"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>") %0, %"std::thread::Builder"* %self, i64* %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2732 {
start:
  %val.dbg.spill = alloca i64, align 8
  %e.dbg.spill27 = alloca i8*, align 8
  %residual.dbg.spill = alloca i8*, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill = alloca i8*, align 8
  %2 = alloca { {}*, [3 x i64]* }, align 8
  %self.dbg.spill22 = alloca i64*, align 8
  %self.dbg.spill20 = alloca i64**, align 8
  %self.dbg.spill19 = alloca i64**, align 8
  %self.dbg.spill18 = alloca i64**, align 8
  %scope_data.dbg.spill = alloca i64**, align 8
  %self.dbg.spill17 = alloca i64*, align 8
  %self.dbg.spill15 = alloca i64**, align 8
  %self.dbg.spill14 = alloca i64**, align 8
  %self.dbg.spill13 = alloca i64**, align 8
  %x.dbg.spill11 = alloca i64**, align 8
  %self.dbg.spill10 = alloca i64**, align 8
  %self.dbg.spill5 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %3 = alloca { i8*, i32 }, align 8
  %x.dbg.spill = alloca i64, align 8
  %stack_size.dbg.spill = alloca { i64, i64 }, align 8
  %f.dbg.spill3 = alloca {}, align 1
  %f.dbg.spill = alloca %"[closure@src/test_thread_locals.rs:56:27: 56:29]", align 1
  %_95 = alloca i8*, align 8
  %_70 = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>", align 8
  %_64 = alloca i64*, align 8
  %_58 = alloca i8, align 1
  %_57 = alloca i8, align 1
  %_56 = alloca i8, align 1
  %_55 = alloca i8, align 1
  %_54 = alloca i8, align 1
  %_53 = alloca i8, align 1
  %_52 = alloca i8, align 1
  %residual = alloca i8*, align 8
  %x = alloca %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", align 8
  %self2 = alloca %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>", align 8
  %_38 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>", align 8
  %_36 = alloca %"std::thread::JoinInner<()>", align 8
  %main = alloca %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", align 8
  %_24 = alloca i64*, align 8
  %_23 = alloca i64*, align 8
  %_22 = alloca i64*, align 8
  %output_capture = alloca i64*, align 8
  %their_packet = alloca i64*, align 8
  %value = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>", align 8
  %_17 = alloca %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>", align 8
  %_15 = alloca %"std::thread::Packet<()>", align 8
  %my_packet = alloca i64*, align 8
  %their_thread = alloca i64*, align 8
  %_10 = alloca %"core::option::Option<alloc::string::String>", align 8
  %my_thread = alloca i64*, align 8
  %self1 = alloca { i64, i64 }, align 8
  %stack_size = alloca i64, align 8
  %name = alloca %"core::option::Option<alloc::string::String>", align 8
  %scope_data = alloca i64*, align 8
  store i64* %1, i64** %scope_data, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::Builder"* %self, metadata !2736, metadata !DIExpression()), !dbg !2763
  call void @llvm.dbg.declare(metadata %"[closure@src/test_thread_locals.rs:56:27: 56:29]"* %f.dbg.spill, metadata !2737, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.declare(metadata i64** %scope_data, metadata !2738, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"* %name, metadata !2739, metadata !DIExpression()), !dbg !2766
  call void @llvm.dbg.declare(metadata i64* %stack_size, metadata !2742, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2768, metadata !DIExpression()), !dbg !2783
  call void @llvm.dbg.declare(metadata i64** %my_thread, metadata !2744, metadata !DIExpression()), !dbg !2785
  call void @llvm.dbg.declare(metadata i64** %their_thread, metadata !2746, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.declare(metadata i64** %my_packet, metadata !2748, metadata !DIExpression()), !dbg !2787
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %value, metadata !2788, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.declare(metadata i64** %their_packet, metadata !2750, metadata !DIExpression()), !dbg !2796
  call void @llvm.dbg.declare(metadata i64** %output_capture, metadata !2752, metadata !DIExpression()), !dbg !2797
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %main, metadata !2754, metadata !DIExpression()), !dbg !2798
  call void @llvm.dbg.declare(metadata %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>"* %self2, metadata !2799, metadata !DIExpression()), !dbg !2841
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %x, metadata !2843, metadata !DIExpression()), !dbg !2855
  call void @llvm.dbg.declare(metadata i8** %residual, metadata !2857, metadata !DIExpression()), !dbg !2867
  call void @llvm.dbg.declare(metadata {}* %f.dbg.spill3, metadata !2777, metadata !DIExpression()), !dbg !2783
  store i8 1, i8* %_58, align 1, !dbg !2869
  store i8 1, i8* %_57, align 1, !dbg !2869
  store i8 1, i8* %_56, align 1, !dbg !2869
  %4 = bitcast %"std::thread::Builder"* %self to %"core::option::Option<alloc::string::String>"*, !dbg !2869
  %5 = bitcast %"core::option::Option<alloc::string::String>"* %name to i8*, !dbg !2869
  %6 = bitcast %"core::option::Option<alloc::string::String>"* %4 to i8*, !dbg !2869
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !2869
  %7 = getelementptr inbounds %"std::thread::Builder", %"std::thread::Builder"* %self, i32 0, i32 1, !dbg !2870
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !2870
  %stack_size.0 = load i64, i64* %8, align 8, !dbg !2870, !range !1578, !noundef !28
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !2870
  %stack_size.1 = load i64, i64* %9, align 8, !dbg !2870
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %stack_size.dbg.spill, i32 0, i32 0, !dbg !2870
  store i64 %stack_size.0, i64* %10, align 8, !dbg !2870
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %stack_size.dbg.spill, i32 0, i32 1, !dbg !2870
  store i64 %stack_size.1, i64* %11, align 8, !dbg !2870
  call void @llvm.dbg.declare(metadata { i64, i64 }* %stack_size.dbg.spill, metadata !2741, metadata !DIExpression()), !dbg !2871
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !2784
  store i64 %stack_size.0, i64* %12, align 8, !dbg !2784
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2784
  store i64 %stack_size.1, i64* %13, align 8, !dbg !2784
  %14 = bitcast { i64, i64 }* %self1 to i64*, !dbg !2783
  %_60 = load i64, i64* %14, align 8, !dbg !2783, !range !1578, !noundef !28
  switch i64 %_60, label %bb41 [
    i64 0, label %bb40
    i64 1, label %bb42
  ], !dbg !2783

bb41:                                             ; preds = %start
  unreachable, !dbg !2783

bb40:                                             ; preds = %start
; invoke core::ops::function::FnOnce::call_once
  %15 = invoke i64 @_ZN4core3ops8function6FnOnce9call_once17hee10dcbdde35a177E()
          to label %bb43 unwind label %cleanup, !dbg !2783

bb42:                                             ; preds = %start
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2783
  %x4 = load i64, i64* %16, align 8, !dbg !2783
  store i64 %x4, i64* %x.dbg.spill, align 8, !dbg !2783
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !2778, metadata !DIExpression()), !dbg !2872
  store i64 %x4, i64* %stack_size, align 8, !dbg !2872
  br label %bb44, !dbg !2783

bb44:                                             ; preds = %bb43, %bb42
  store i8 0, i8* %_56, align 1, !dbg !2873
  %17 = bitcast %"core::option::Option<alloc::string::String>"* %_10 to i8*, !dbg !2873
  %18 = bitcast %"core::option::Option<alloc::string::String>"* %name to i8*, !dbg !2873
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !2873
; invoke core::option::Option<T>::map
  %19 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h403aacee59a265c5E"(%"core::option::Option<alloc::string::String>"* %_10)
          to label %bb1 unwind label %cleanup, !dbg !2873

bb37:                                             ; preds = %bb24, %cleanup
  %20 = load i8, i8* %_56, align 1, !dbg !2874, !range !1099, !noundef !28
  %21 = trunc i8 %20 to i1, !dbg !2874
  br i1 %21, label %bb36, label %bb25, !dbg !2874

cleanup:                                          ; preds = %bb1, %bb44, %bb40
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb37

bb43:                                             ; preds = %bb40
  store i64 %15, i64* %stack_size, align 8, !dbg !2783
  br label %bb44, !dbg !2783

bb1:                                              ; preds = %bb44
  %_9.0 = extractvalue { i8*, i64 } %19, 0, !dbg !2873
  %_9.1 = extractvalue { i8*, i64 } %19, 1, !dbg !2873
; invoke std::thread::Thread::new
  %27 = invoke i64* @_ZN3std6thread6Thread3new17h736e5424c2b7b9c4E(i8* align 1 %_9.0, i64 %_9.1)
          to label %bb2 unwind label %cleanup, !dbg !2875

bb2:                                              ; preds = %bb1
  store i64* %27, i64** %my_thread, align 8, !dbg !2875
  store i64** %my_thread, i64*** %self.dbg.spill, align 8, !dbg !2876
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !2877, metadata !DIExpression()), !dbg !2884
  store i64** %my_thread, i64*** %self.dbg.spill5, align 8, !dbg !2884
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill5, metadata !2885, metadata !DIExpression()), !dbg !2894
; invoke <alloc::sync::Arc<T> as core::clone::Clone>::clone
  %_67 = invoke i64* @"_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hb0af00fa3275bdc1E"(i64** align 8 %my_thread)
          to label %bb45 unwind label %cleanup6, !dbg !2894

bb24:                                             ; preds = %bb34, %bb35, %cleanup6
; invoke core::ptr::drop_in_place<std::thread::Thread>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %my_thread) #18
          to label %bb37 unwind label %abort, !dbg !2896

cleanup6:                                         ; preds = %bb2
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb24

bb45:                                             ; preds = %bb2
  store i64* %_67, i64** %_64, align 8, !dbg !2894
  %33 = load i64*, i64** %_64, align 8, !dbg !2884, !nonnull !28, !noundef !28
  store i64* %33, i64** %their_thread, align 8, !dbg !2884
  store i8 1, i8* %_55, align 1, !dbg !2897
  store i8 0, i8* %_57, align 1, !dbg !2898
  %_16 = load i64*, i64** %scope_data, align 8, !dbg !2898
  %34 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %value to i64*, !dbg !2899
  store i64 0, i64* %34, align 8, !dbg !2899
  %35 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_70 to i8*, !dbg !2794
  %36 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %value to i8*, !dbg !2794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false), !dbg !2794
  %37 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %_17 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, !dbg !2794
  %38 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %37 to i8*, !dbg !2794
  %39 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_70 to i8*, !dbg !2794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false), !dbg !2794
  %40 = bitcast %"std::thread::Packet<()>"* %_15 to i64**, !dbg !2900
  store i64* %_16, i64** %40, align 8, !dbg !2900
  %41 = getelementptr inbounds %"std::thread::Packet<()>", %"std::thread::Packet<()>"* %_15, i32 0, i32 2, !dbg !2900
  %42 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %41 to i8*, !dbg !2900
  %43 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %_17 to i8*, !dbg !2900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false), !dbg !2900
; invoke alloc::sync::Arc<T>::new
  %44 = invoke i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h5bc0904c657e3af2E"(%"std::thread::Packet<()>"* %_15)
          to label %bb3 unwind label %cleanup7, !dbg !2901

bb35:                                             ; preds = %bb23, %cleanup7
  %45 = load i8, i8* %_55, align 1, !dbg !2902, !range !1099, !noundef !28
  %46 = trunc i8 %45 to i1, !dbg !2902
  br i1 %46, label %bb34, label %bb24, !dbg !2902

cleanup7:                                         ; preds = %bb45
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  %49 = extractvalue { i8*, i32 } %47, 1
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %49, i32* %51, align 8
  br label %bb35

bb3:                                              ; preds = %bb45
  store i64* %44, i64** %my_packet, align 8, !dbg !2901
; invoke <alloc::sync::Arc<T> as core::clone::Clone>::clone
  %52 = invoke i64* @"_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h139c9a59e8ca1255E"(i64** align 8 %my_packet)
          to label %bb4 unwind label %cleanup8, !dbg !2903

bb23:                                             ; preds = %bb32, %bb33, %cleanup8
; invoke core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  invoke void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %my_packet) #18
          to label %bb35 unwind label %abort, !dbg !2904

cleanup8:                                         ; preds = %bb3
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb23

bb4:                                              ; preds = %bb3
  store i64* %52, i64** %their_packet, align 8, !dbg !2903
  store i8 1, i8* %_54, align 1, !dbg !2905
  %58 = bitcast i64** %_22 to {}**, !dbg !2906
  store {}* null, {}** %58, align 8, !dbg !2906
  %59 = load i64*, i64** %_22, align 8, !dbg !2907
; invoke std::io::stdio::set_output_capture
  %60 = invoke i64* @_ZN3std2io5stdio18set_output_capture17h73568703c6d7ae33E(i64* %59)
          to label %bb5 unwind label %cleanup9, !dbg !2907

bb33:                                             ; preds = %bb30, %bb31, %cleanup9
  %61 = load i8, i8* %_54, align 1, !dbg !2908, !range !1099, !noundef !28
  %62 = trunc i8 %61 to i1, !dbg !2908
  br i1 %62, label %bb32, label %bb23, !dbg !2908

cleanup9:                                         ; preds = %bb4
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  %65 = extractvalue { i8*, i32 } %63, 1
  %66 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %64, i8** %66, align 8
  %67 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %65, i32* %67, align 8
  br label %bb33

bb5:                                              ; preds = %bb4
  store i64* %60, i64** %output_capture, align 8, !dbg !2907
  store i8 1, i8* %_53, align 1, !dbg !2909
  store i64** %output_capture, i64*** %self.dbg.spill10, align 8, !dbg !2910
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill10, metadata !2911, metadata !DIExpression()), !dbg !2923
  %68 = bitcast i64** %output_capture to {}**, !dbg !2923
  %69 = load {}*, {}** %68, align 8, !dbg !2923
  %70 = icmp eq {}* %69, null, !dbg !2923
  %_71 = select i1 %70, i64 0, i64 1, !dbg !2923
  switch i64 %_71, label %bb47 [
    i64 0, label %bb46
    i64 1, label %bb48
  ], !dbg !2923

bb47:                                             ; preds = %bb5
  unreachable, !dbg !2923

bb46:                                             ; preds = %bb5
  %71 = bitcast i64** %_24 to {}**, !dbg !2923
  store {}* null, {}** %71, align 8, !dbg !2923
  br label %bb6, !dbg !2923

bb48:                                             ; preds = %bb5
  store i64** %output_capture, i64*** %x.dbg.spill11, align 8, !dbg !2923
  call void @llvm.dbg.declare(metadata i64*** %x.dbg.spill11, metadata !2919, metadata !DIExpression()), !dbg !2924
; invoke <alloc::sync::Arc<T> as core::clone::Clone>::clone
  %_73 = invoke i64* @"_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hc8dc62dc592d2f9fE"(i64** align 8 %output_capture)
          to label %bb49 unwind label %cleanup12, !dbg !2924

bb31:                                             ; preds = %bb28, %bb29, %cleanup12
  %72 = load i8, i8* %_53, align 1, !dbg !2925, !range !1099, !noundef !28
  %73 = trunc i8 %72 to i1, !dbg !2925
  br i1 %73, label %bb30, label %bb33, !dbg !2925

cleanup12:                                        ; preds = %bb7, %bb6, %bb48
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  %76 = extractvalue { i8*, i32 } %74, 1
  %77 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %75, i8** %77, align 8
  %78 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %76, i32* %78, align 8
  br label %bb31

bb49:                                             ; preds = %bb48
  store i64* %_73, i64** %_24, align 8, !dbg !2924
  br label %bb6, !dbg !2923

bb6:                                              ; preds = %bb46, %bb49
  %79 = load i64*, i64** %_24, align 8, !dbg !2926
; invoke std::io::stdio::set_output_capture
  %80 = invoke i64* @_ZN3std2io5stdio18set_output_capture17h73568703c6d7ae33E(i64* %79)
          to label %bb7 unwind label %cleanup12, !dbg !2926

bb7:                                              ; preds = %bb6
  store i64* %80, i64** %_23, align 8, !dbg !2926
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>>
  invoke void @"_ZN4core3ptr129drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$$GT$17hfb9eaa80c8c143b3E"(i64** %_23)
          to label %bb8 unwind label %cleanup12, !dbg !2927

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_55, align 1, !dbg !2928
  store i8 0, i8* %_53, align 1, !dbg !2928
  store i8 0, i8* %_58, align 1, !dbg !2928
  store i8 0, i8* %_54, align 1, !dbg !2928
  store i8 1, i8* %_52, align 1, !dbg !2928
  %81 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %main to i64**, !dbg !2928
  %82 = load i64*, i64** %their_thread, align 8, !dbg !2928, !nonnull !28, !noundef !28
  store i64* %82, i64** %81, align 8, !dbg !2928
  %83 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %main, i32 0, i32 2, !dbg !2928
  %84 = load i64*, i64** %output_capture, align 8, !dbg !2928
  store i64* %84, i64** %83, align 8, !dbg !2928
  %85 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %main to %"[closure@src/test_thread_locals.rs:56:27: 56:29]"*, !dbg !2928
  %86 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %main, i32 0, i32 3, !dbg !2928
  %87 = load i64*, i64** %their_packet, align 8, !dbg !2928, !nonnull !28, !noundef !28
  store i64* %87, i64** %86, align 8, !dbg !2928
  store i64** %my_packet, i64*** %self.dbg.spill13, align 8, !dbg !2929
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill13, metadata !2930, metadata !DIExpression()), !dbg !2940
  store i64** %my_packet, i64*** %self.dbg.spill14, align 8, !dbg !2940
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill14, metadata !2941, metadata !DIExpression()), !dbg !2948
  store i64** %my_packet, i64*** %self.dbg.spill15, align 8, !dbg !2948
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill15, metadata !2950, metadata !DIExpression()), !dbg !2957
  %self16 = load i64*, i64** %my_packet, align 8, !dbg !2957, !nonnull !28, !noundef !28
  store i64* %self16, i64** %self.dbg.spill17, align 8, !dbg !2957
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill17, metadata !2959, metadata !DIExpression()), !dbg !2966
  %_80 = bitcast i64* %self16 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !2966
  %_28 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_80, i32 0, i32 2, !dbg !2940
  %_27 = bitcast %"std::thread::Packet<()>"* %_28 to i64**, !dbg !2968
  %88 = bitcast i64** %_27 to {}**, !dbg !2969
  %89 = load {}*, {}** %88, align 8, !dbg !2969
  %90 = icmp eq {}* %89, null, !dbg !2969
  %_30 = select i1 %90, i64 0, i64 1, !dbg !2969
  %91 = icmp eq i64 %_30, 1, !dbg !2969
  br i1 %91, label %bb9, label %bb11, !dbg !2969

bb9:                                              ; preds = %bb8
  store i64** %_27, i64*** %scope_data.dbg.spill, align 8, !dbg !2970
  call void @llvm.dbg.declare(metadata i64*** %scope_data.dbg.spill, metadata !2756, metadata !DIExpression()), !dbg !2970
  store i64** %_27, i64*** %self.dbg.spill18, align 8, !dbg !2971
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill18, metadata !2972, metadata !DIExpression()), !dbg !2978
  store i64** %_27, i64*** %self.dbg.spill19, align 8, !dbg !2978
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill19, metadata !2979, metadata !DIExpression()), !dbg !2986
  store i64** %_27, i64*** %self.dbg.spill20, align 8, !dbg !2986
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill20, metadata !2988, metadata !DIExpression()), !dbg !2995
  %self21 = load i64*, i64** %_27, align 8, !dbg !2995, !nonnull !28, !noundef !28
  store i64* %self21, i64** %self.dbg.spill22, align 8, !dbg !2995
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill22, metadata !2997, metadata !DIExpression()), !dbg !3004
  %_86 = bitcast i64* %self21 to %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, !dbg !3004
  %_34 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>", %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_86, i32 0, i32 2, !dbg !2978
; invoke std::thread::scoped::ScopeData::increment_num_running_threads
  invoke void @_ZN3std6thread6scoped9ScopeData29increment_num_running_threads17ha23d07cdac801e37E(%"std::thread::scoped::ScopeData"* align 8 %_34)
          to label %bb10 unwind label %cleanup23, !dbg !2971

bb11:                                             ; preds = %bb10, %bb8
  %_40 = load i64, i64* %stack_size, align 8, !dbg !3006
  store i8 0, i8* %_52, align 1, !dbg !3007
  %92 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %x to i8*, !dbg !3007
  %93 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %main to i8*, !dbg !3007
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false), !dbg !3007
; invoke alloc::alloc::exchange_malloc
  %_89 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hcbc5eeb785b10e95E(i64 24, i64 8)
          to label %bb50 unwind label %cleanup24, !dbg !2855

bb29:                                             ; preds = %bb51, %cleanup23
  %94 = load i8, i8* %_52, align 1, !dbg !3008, !range !1099, !noundef !28
  %95 = trunc i8 %94 to i1, !dbg !3008
  br i1 %95, label %bb28, label %bb31, !dbg !3008

cleanup23:                                        ; preds = %bb12, %bb9
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  %98 = extractvalue { i8*, i32 } %96, 1
  %99 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %97, i8** %99, align 8
  %100 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %98, i32* %100, align 8
  br label %bb29

bb10:                                             ; preds = %bb9
  br label %bb11, !dbg !3009

bb51:                                             ; preds = %cleanup24
; invoke core::ptr::drop_in_place<std::thread::Builder::spawn_unchecked_<statics_tests::test_thread_locals::test_thread_locals::{{closure}},()>::{{closure}}>
  invoke void @"_ZN4core3ptr189drop_in_place$LT$std..thread..Builder..spawn_unchecked_$LT$statics_tests..test_thread_locals..test_thread_locals..$u7b$$u7b$closure$u7d$$u7d$$C$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h9da1102cf83aa5bfE"(%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %x) #18
          to label %bb29 unwind label %abort, !dbg !2855

cleanup24:                                        ; preds = %bb11
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  %103 = extractvalue { i8*, i32 } %101, 1
  %104 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %102, i8** %104, align 8
  %105 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %103, i32* %105, align 8
  br label %bb51

bb50:                                             ; preds = %bb11
  %_44 = bitcast i8* %_89 to %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"*, !dbg !2855
  %106 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_44 to i64*, !dbg !2855
  %_90 = bitcast i64* %106 to %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"*, !dbg !2855
  %107 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_90 to i8*, !dbg !2855
  %108 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %x to i8*, !dbg !2855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 24, i1 false), !dbg !2855
  %109 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_44 to {}*, !dbg !2856
  %110 = bitcast {}* %109 to i8*, !dbg !2856
  %_43.0 = bitcast i8* %110 to {}*, !dbg !2856
  %111 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !3010
  store {}* %_43.0, {}** %111, align 8, !dbg !3010
  %112 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !3010
  store [3 x i64]* bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), [3 x i64]** %112, align 8, !dbg !3010
  %113 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !3010
  %_42.0 = load {}*, {}** %113, align 8, !dbg !3010, !nonnull !28, !align !1104, !noundef !28
  %114 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !3010
  %_42.1 = load [3 x i64]*, [3 x i64]** %114, align 8, !dbg !3010, !nonnull !28, !align !1582, !noundef !28
  br label %bb12, !dbg !3010

abort:                                            ; preds = %bb38, %bb22, %bb21, %bb36, %bb24, %bb34, %bb23, %bb32, %bb30, %bb28, %bb51
  %115 = landingpad { i8*, i32 }
          cleanup, !dbg !3011
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !3011
  unreachable, !dbg !3011

bb12:                                             ; preds = %bb50
; invoke std::sys::unix::thread::Thread::new
  invoke void @_ZN3std3sys4unix6thread6Thread3new17h783da4d078f543eaE(%"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>"* sret(%"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>") %self2, i64 %_40, {}* align 1 %_42.0, [3 x i64]* align 8 %_42.1)
          to label %bb13 unwind label %cleanup23, !dbg !2842

bb13:                                             ; preds = %bb12
  %116 = bitcast %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>"* %self2 to i64*, !dbg !2841
  %_91 = load i64, i64* %116, align 8, !dbg !2841, !range !1578, !noundef !28
  switch i64 %_91, label %bb53 [
    i64 0, label %bb54
    i64 1, label %bb52
  ], !dbg !2841

bb28:                                             ; preds = %bb29
; invoke core::ptr::drop_in_place<std::thread::Builder::spawn_unchecked_<statics_tests::test_thread_locals::test_thread_locals::{{closure}},()>::{{closure}}>
  invoke void @"_ZN4core3ptr189drop_in_place$LT$std..thread..Builder..spawn_unchecked_$LT$statics_tests..test_thread_locals..test_thread_locals..$u7b$$u7b$closure$u7d$$u7d$$C$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h9da1102cf83aa5bfE"(%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %main) #18
          to label %bb31 unwind label %abort, !dbg !3008

bb30:                                             ; preds = %bb31
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>>
  invoke void @"_ZN4core3ptr129drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$$GT$17hfb9eaa80c8c143b3E"(i64** %output_capture) #18
          to label %bb33 unwind label %abort, !dbg !2925

bb32:                                             ; preds = %bb33
; invoke core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  invoke void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %their_packet) #18
          to label %bb23 unwind label %abort, !dbg !2908

bb34:                                             ; preds = %bb35
; invoke core::ptr::drop_in_place<std::thread::Thread>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %their_thread) #18
          to label %bb24 unwind label %abort, !dbg !2902

bb25:                                             ; preds = %cleanup30, %bb22, %bb36, %bb37
  %117 = load i8, i8* %_57, align 1, !dbg !2874, !range !1099, !noundef !28
  %118 = trunc i8 %117 to i1, !dbg !2874
  br i1 %118, label %bb38, label %bb26, !dbg !2874

bb36:                                             ; preds = %bb37
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h56656916cbe5ba34E"(%"core::option::Option<alloc::string::String>"* %name) #18
          to label %bb25 unwind label %abort, !dbg !2874

bb53:                                             ; preds = %bb13
  unreachable, !dbg !2841

bb54:                                             ; preds = %bb13
  %119 = bitcast %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>"* %self2 to %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>::Ok"*, !dbg !2841
  %120 = getelementptr inbounds %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>::Ok", %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>::Ok"* %119, i32 0, i32 1, !dbg !2841
  %v = load i64, i64* %120, align 8, !dbg !2841
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2841
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2835, metadata !DIExpression()), !dbg !3012
  %121 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>"* %_38 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Continue"*, !dbg !3012
  %122 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Continue"* %121, i32 0, i32 1, !dbg !3012
  store i64 %v, i64* %122, align 8, !dbg !3012
  %123 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>"* %_38 to i64*, !dbg !3012
  store i64 0, i64* %123, align 8, !dbg !3012
  br label %bb14, !dbg !2841

bb52:                                             ; preds = %bb13
  %124 = bitcast %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>"* %self2 to %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>::Err"*, !dbg !2841
  %125 = getelementptr inbounds %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>::Err", %"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>::Err"* %124, i32 0, i32 1, !dbg !2841
  %e = load i8*, i8** %125, align 8, !dbg !2841, !nonnull !28, !noundef !28
  store i8* %e, i8** %e.dbg.spill, align 8, !dbg !2841
  call void @llvm.dbg.declare(metadata i8** %e.dbg.spill, metadata !2838, metadata !DIExpression()), !dbg !3013
  store i8* %e, i8** %_95, align 8, !dbg !3013
  %126 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>"* %_38 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Break"*, !dbg !3013
  %127 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Break"* %126, i32 0, i32 1, !dbg !3013
  %128 = load i8*, i8** %_95, align 8, !dbg !3013, !nonnull !28, !noundef !28
  store i8* %128, i8** %127, align 8, !dbg !3013
  %129 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>"* %_38 to i64*, !dbg !3013
  store i64 1, i64* %129, align 8, !dbg !3013
  br label %bb14, !dbg !2841

bb14:                                             ; preds = %bb54, %bb52
  %130 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>"* %_38 to i64*, !dbg !2842
  %_46 = load i64, i64* %130, align 8, !dbg !2842, !range !1578, !noundef !28
  switch i64 %_46, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ], !dbg !2842

bb16:                                             ; preds = %bb14
  unreachable, !dbg !2842

bb15:                                             ; preds = %bb14
  %131 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>"* %_38 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Continue"*, !dbg !2842
  %132 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Continue"* %131, i32 0, i32 1, !dbg !2842
  %val = load i64, i64* %132, align 8, !dbg !2842
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !2842
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !2761, metadata !DIExpression()), !dbg !3014
  %_50 = load i64*, i64** %my_thread, align 8, !dbg !3015, !nonnull !28, !noundef !28
  %_51 = load i64*, i64** %my_packet, align 8, !dbg !3016, !nonnull !28, !noundef !28
  %133 = bitcast %"std::thread::JoinInner<()>"* %_36 to i64*, !dbg !3017
  store i64 %val, i64* %133, align 8, !dbg !3017
  %134 = getelementptr inbounds %"std::thread::JoinInner<()>", %"std::thread::JoinInner<()>"* %_36, i32 0, i32 1, !dbg !3017
  store i64* %_50, i64** %134, align 8, !dbg !3017
  %135 = getelementptr inbounds %"std::thread::JoinInner<()>", %"std::thread::JoinInner<()>"* %_36, i32 0, i32 2, !dbg !3017
  store i64* %_51, i64** %135, align 8, !dbg !3017
  %136 = bitcast %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* %0 to %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Ok"*, !dbg !3018
  %137 = getelementptr inbounds %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Ok", %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Ok"* %136, i32 0, i32 1, !dbg !3018
  %138 = bitcast %"std::thread::JoinInner<()>"* %137 to i8*, !dbg !3018
  %139 = bitcast %"std::thread::JoinInner<()>"* %_36 to i8*, !dbg !3018
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 24, i1 false), !dbg !3018
  %140 = bitcast %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* %0 to i64*, !dbg !3018
  store i64 0, i64* %140, align 8, !dbg !3018
  br label %bb20, !dbg !2874

bb17:                                             ; preds = %bb14
  %141 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>"* %_38 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Break"*, !dbg !3019
  %142 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>::Break"* %141, i32 0, i32 1, !dbg !3019
  %residual25 = load i8*, i8** %142, align 8, !dbg !3019, !nonnull !28, !noundef !28
  store i8* %residual25, i8** %residual.dbg.spill, align 8, !dbg !3019
  call void @llvm.dbg.declare(metadata i8** %residual.dbg.spill, metadata !2759, metadata !DIExpression()), !dbg !3020
  store i8* %residual25, i8** %residual, align 8, !dbg !3020
  %e26 = load i8*, i8** %residual, align 8, !dbg !2867, !nonnull !28, !noundef !28
  store i8* %e26, i8** %e.dbg.spill27, align 8, !dbg !2867
  call void @llvm.dbg.declare(metadata i8** %e.dbg.spill27, metadata !2863, metadata !DIExpression()), !dbg !3021
; invoke <T as core::convert::From<T>>::from
  %_98 = invoke i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc0915e6582d29decE"(i8* %e26)
          to label %bb55 unwind label %cleanup28, !dbg !3021

bb21:                                             ; preds = %cleanup28
; invoke core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  invoke void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %my_packet) #18
          to label %bb22 unwind label %abort, !dbg !2904

cleanup28:                                        ; preds = %bb17
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  %145 = extractvalue { i8*, i32 } %143, 1
  %146 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %144, i8** %146, align 8
  %147 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %145, i32* %147, align 8
  br label %bb21

bb55:                                             ; preds = %bb17
  %148 = bitcast %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* %0 to %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Err"*, !dbg !3021
  %149 = getelementptr inbounds %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Err", %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>::Err"* %148, i32 0, i32 1, !dbg !3021
  store i8* %_98, i8** %149, align 8, !dbg !3021
  %150 = bitcast %"core::result::Result<std::thread::JoinInner<()>, std::io::error::Error>"* %0 to i64*, !dbg !3021
  store i64 1, i64* %150, align 8, !dbg !3021
; invoke core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  invoke void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %my_packet)
          to label %bb18 unwind label %cleanup29, !dbg !2904

bb22:                                             ; preds = %cleanup29, %bb21
; invoke core::ptr::drop_in_place<std::thread::Thread>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %my_thread) #18
          to label %bb25 unwind label %abort, !dbg !2896

cleanup29:                                        ; preds = %bb55
  %151 = landingpad { i8*, i32 }
          cleanup
  %152 = extractvalue { i8*, i32 } %151, 0
  %153 = extractvalue { i8*, i32 } %151, 1
  %154 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %152, i8** %154, align 8
  %155 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %153, i32* %155, align 8
  br label %bb22

bb18:                                             ; preds = %bb55
; invoke core::ptr::drop_in_place<std::thread::Thread>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %my_thread)
          to label %bb19 unwind label %cleanup30, !dbg !2896

cleanup30:                                        ; preds = %bb18
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = extractvalue { i8*, i32 } %156, 0
  %158 = extractvalue { i8*, i32 } %156, 1
  %159 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %157, i8** %159, align 8
  %160 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %158, i32* %160, align 8
  br label %bb25

bb19:                                             ; preds = %bb18
  br label %bb20, !dbg !2874

bb26:                                             ; preds = %bb38, %bb25
  %161 = load i8, i8* %_58, align 1, !dbg !2874, !range !1099, !noundef !28
  %162 = trunc i8 %161 to i1, !dbg !2874
  br i1 %162, label %bb39, label %bb27, !dbg !2874

bb38:                                             ; preds = %bb25
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::thread::scoped::ScopeData>>>
  invoke void @"_ZN4core3ptr103drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..thread..scoped..ScopeData$GT$$GT$$GT$17hbfb71188870deae6E"(i64** %scope_data) #18
          to label %bb26 unwind label %abort, !dbg !2874

bb27:                                             ; preds = %bb39, %bb26
  %163 = bitcast { i8*, i32 }* %3 to i8**, !dbg !3011
  %164 = load i8*, i8** %163, align 8, !dbg !3011
  %165 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !3011
  %166 = load i32, i32* %165, align 8, !dbg !3011
  %167 = insertvalue { i8*, i32 } undef, i8* %164, 0, !dbg !3011
  %168 = insertvalue { i8*, i32 } %167, i32 %166, 1, !dbg !3011
  resume { i8*, i32 } %168, !dbg !3011

bb39:                                             ; preds = %bb26
  br label %bb27, !dbg !2874

bb20:                                             ; preds = %bb15, %bb19
  ret void, !dbg !3022
}

; std::thread::Builder::spawn_unchecked_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN3std6thread7Builder16spawn_unchecked_28_$u7b$$u7b$closure$u7d$$u7d$17h54dd61d1ecb7169fE"(%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3023 {
start:
  %self.dbg.spill6 = alloca %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64**, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %try_result.dbg.spill = alloca { i8*, i8* }, align 8
  %name.dbg.spill = alloca { %"core::ffi::c_str::CStr"*, i64 }, align 8
  %0 = alloca { i8*, i32 }, align 8
  %_25 = alloca i8, align 1
  %_24 = alloca i8, align 1
  %_23 = alloca i8, align 1
  %_16 = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>", align 8
  %_15 = alloca %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]", align 1
  %_14 = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>", align 1
  %_11 = alloca %"core::option::Option<core::ops::range::Range<usize>>", align 8
  %_8 = alloca i64*, align 8
  %_2 = alloca { i8*, i64 }, align 8
  %1 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1 to i64**
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, metadata !3027, metadata !DIExpression()), !dbg !3044
  %2 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 2
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, metadata !3028, metadata !DIExpression(DW_OP_plus_uconst, 8)), !dbg !3045
  %3 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1 to %"[closure@src/test_thread_locals.rs:56:27: 56:29]"*
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, metadata !3029, metadata !DIExpression()), !dbg !3046
  %4 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 3
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, metadata !3030, metadata !DIExpression(DW_OP_plus_uconst, 16)), !dbg !3047
  store i8 1, i8* %_23, align 1, !dbg !3048
  store i8 1, i8* %_24, align 1, !dbg !3048
  store i8 1, i8* %_25, align 1, !dbg !3048
  %_3 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1 to i64**, !dbg !3049
; invoke std::thread::Thread::cname
  %5 = invoke { i8*, i64 } @_ZN3std6thread6Thread5cname17hd2fe7e3ac07ea1a9E(i64** align 8 %_3)
          to label %bb1 unwind label %cleanup, !dbg !3049

bb21:                                             ; preds = %bb14, %bb11, %cleanup
  %6 = load i8, i8* %_24, align 1, !dbg !3050, !range !1099, !noundef !28
  %7 = trunc i8 %6 to i1, !dbg !3050
  br i1 %7, label %bb20, label %bb18, !dbg !3050

cleanup:                                          ; preds = %bb8, %bb7, %bb6, %bb5, %bb4, %bb2, %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb21

bb1:                                              ; preds = %start
  store { i8*, i64 } %5, { i8*, i64 }* %_2, align 8, !dbg !3049
  %13 = bitcast { i8*, i64 }* %_2 to {}**, !dbg !3051
  %14 = load {}*, {}** %13, align 8, !dbg !3051
  %15 = icmp eq {}* %14, null, !dbg !3051
  %_4 = select i1 %15, i64 0, i64 1, !dbg !3051
  %16 = icmp eq i64 %_4, 1, !dbg !3051
  br i1 %16, label %bb2, label %bb4, !dbg !3051

bb2:                                              ; preds = %bb1
  %17 = bitcast { i8*, i64 }* %_2 to { %"core::ffi::c_str::CStr"*, i64 }*, !dbg !3052
  %18 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %17, i32 0, i32 0, !dbg !3052
  %name.0 = load %"core::ffi::c_str::CStr"*, %"core::ffi::c_str::CStr"** %18, align 8, !dbg !3052, !nonnull !28, !align !1104, !noundef !28
  %19 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %17, i32 0, i32 1, !dbg !3052
  %name.1 = load i64, i64* %19, align 8, !dbg !3052
  %20 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %name.dbg.spill, i32 0, i32 0, !dbg !3052
  store %"core::ffi::c_str::CStr"* %name.0, %"core::ffi::c_str::CStr"** %20, align 8, !dbg !3052
  %21 = getelementptr inbounds { %"core::ffi::c_str::CStr"*, i64 }, { %"core::ffi::c_str::CStr"*, i64 }* %name.dbg.spill, i32 0, i32 1, !dbg !3052
  store i64 %name.1, i64* %21, align 8, !dbg !3052
  call void @llvm.dbg.declare(metadata { %"core::ffi::c_str::CStr"*, i64 }* %name.dbg.spill, metadata !3031, metadata !DIExpression()), !dbg !3052
; invoke std::sys::unix::thread::Thread::set_name
  invoke void @_ZN3std3sys4unix6thread6Thread8set_name17h571600ada67affa1E(%"core::ffi::c_str::CStr"* align 1 %name.0, i64 %name.1)
          to label %bb3 unwind label %cleanup, !dbg !3053

bb4:                                              ; preds = %bb3, %bb1
  store i8 0, i8* %_25, align 1, !dbg !3054
  %22 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 2, !dbg !3054
  %_9 = load i64*, i64** %22, align 8, !dbg !3054
; invoke std::io::stdio::set_output_capture
  %23 = invoke i64* @_ZN3std2io5stdio18set_output_capture17h73568703c6d7ae33E(i64* %_9)
          to label %bb5 unwind label %cleanup, !dbg !3055

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3048

bb5:                                              ; preds = %bb4
  store i64* %23, i64** %_8, align 8, !dbg !3055
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>>
  invoke void @"_ZN4core3ptr129drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$$GT$17hfb9eaa80c8c143b3E"(i64** %_8)
          to label %bb6 unwind label %cleanup, !dbg !3056

bb6:                                              ; preds = %bb5
; invoke std::sys::unix::thread::guard::current
  invoke void @_ZN3std3sys4unix6thread5guard7current17h8d132d7dabbb3102E(%"core::option::Option<core::ops::range::Range<usize>>"* sret(%"core::option::Option<core::ops::range::Range<usize>>") %_11)
          to label %bb7 unwind label %cleanup, !dbg !3057

bb7:                                              ; preds = %bb6
  store i8 0, i8* %_24, align 1, !dbg !3058
  %24 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1 to i64**, !dbg !3058
  %_12 = load i64*, i64** %24, align 8, !dbg !3058, !nonnull !28, !noundef !28
; invoke std::sys_common::thread_info::set
  invoke void @_ZN3std10sys_common11thread_info3set17h3d596bd351fc73adE(%"core::option::Option<core::ops::range::Range<usize>>"* %_11, i64* %_12)
          to label %bb8 unwind label %cleanup, !dbg !3059

bb8:                                              ; preds = %bb7
  store i8 0, i8* %_23, align 1, !dbg !3060
  %25 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]"* %_15 to %"[closure@src/test_thread_locals.rs:56:27: 56:29]"*, !dbg !3060
  %26 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"* %_14 to %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]"*, !dbg !3061
; invoke std::panic::catch_unwind
  %27 = invoke { i8*, i8* } @_ZN3std5panic12catch_unwind17h9fda0cff44c6f11eE()
          to label %bb9 unwind label %cleanup, !dbg !3062

bb9:                                              ; preds = %bb8
  %try_result.0 = extractvalue { i8*, i8* } %27, 0, !dbg !3062
  %try_result.1 = extractvalue { i8*, i8* } %27, 1, !dbg !3062
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %try_result.dbg.spill, i32 0, i32 0, !dbg !3062
  store i8* %try_result.0, i8** %28, align 8, !dbg !3062
  %29 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %try_result.dbg.spill, i32 0, i32 1, !dbg !3062
  store i8* %try_result.1, i8** %29, align 8, !dbg !3062
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %try_result.dbg.spill, metadata !3042, metadata !DIExpression()), !dbg !3063
  %30 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_16 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some"*, !dbg !3064
  %31 = getelementptr inbounds %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some", %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some"* %30, i32 0, i32 1, !dbg !3064
  %32 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %31, i32 0, i32 0, !dbg !3064
  store i8* %try_result.0, i8** %32, align 8, !dbg !3064
  %33 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %31, i32 0, i32 1, !dbg !3064
  store i8* %try_result.1, i8** %33, align 8, !dbg !3064
  %34 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_16 to i64*, !dbg !3064
  store i64 1, i64* %34, align 8, !dbg !3064
  %self = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 3, !dbg !3065
  store i64** %self, i64*** %self.dbg.spill, align 8, !dbg !3065
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !3066, metadata !DIExpression()), !dbg !3070
  store i64** %self, i64*** %self.dbg.spill1, align 8, !dbg !3070
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !3071, metadata !DIExpression()), !dbg !3075
  store i64** %self, i64*** %self.dbg.spill2, align 8, !dbg !3075
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill2, metadata !3077, metadata !DIExpression()), !dbg !3081
  %self3 = load i64*, i64** %self, align 8, !dbg !3081, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !3081
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !3083, metadata !DIExpression()), !dbg !3087
  %_31 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !3087
  %_20 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_31, i32 0, i32 2, !dbg !3070
  %self5 = getelementptr inbounds %"std::thread::Packet<()>", %"std::thread::Packet<()>"* %_20, i32 0, i32 2, !dbg !3065
  store %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %self5, %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill6, align 8, !dbg !3065
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill6, metadata !3089, metadata !DIExpression()), !dbg !3097
  %_32 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %self5 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, !dbg !3097
; invoke core::ptr::drop_in_place<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>
  invoke void @"_ZN4core3ptr158drop_in_place$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$17hec04110808742394E"(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_32)
          to label %bb12 unwind label %cleanup7, !dbg !3098

bb11:                                             ; preds = %cleanup7
  %35 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_32 to i8*, !dbg !3098
  %36 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_16 to i8*, !dbg !3098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false), !dbg !3098
  br i1 false, label %bb14, label %bb21, !dbg !3099

cleanup7:                                         ; preds = %bb9
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  %39 = extractvalue { i8*, i32 } %37, 1
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %39, i32* %41, align 8
  br label %bb11

bb12:                                             ; preds = %bb9
  %42 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_32 to i8*, !dbg !3098
  %43 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_16 to i8*, !dbg !3098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false), !dbg !3098
  %44 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 3, !dbg !3050
; call core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  call void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %44), !dbg !3050
  br label %bb13, !dbg !3050

bb14:                                             ; preds = %bb11
; invoke core::ptr::drop_in_place<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>
  invoke void @"_ZN4core3ptr158drop_in_place$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$17hec04110808742394E"(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_16) #18
          to label %bb21 unwind label %abort, !dbg !3099

abort:                                            ; preds = %bb15, %bb19, %bb20, %bb14
  %45 = landingpad { i8*, i32 }
          cleanup, !dbg !3100
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !3100
  unreachable, !dbg !3100

bb18:                                             ; preds = %bb20, %bb21
  %46 = load i8, i8* %_25, align 1, !dbg !3050, !range !1099, !noundef !28
  %47 = trunc i8 %46 to i1, !dbg !3050
  br i1 %47, label %bb19, label %bb16, !dbg !3050

bb20:                                             ; preds = %bb21
  %48 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1 to i64**, !dbg !3050
; invoke core::ptr::drop_in_place<std::thread::Thread>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %48) #18
          to label %bb18 unwind label %abort, !dbg !3050

bb16:                                             ; preds = %bb19, %bb18
  %49 = load i8, i8* %_23, align 1, !dbg !3050, !range !1099, !noundef !28
  %50 = trunc i8 %49 to i1, !dbg !3050
  br i1 %50, label %bb17, label %bb15, !dbg !3050

bb19:                                             ; preds = %bb18
  %51 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 2, !dbg !3050
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>>
  invoke void @"_ZN4core3ptr129drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$$GT$17hfb9eaa80c8c143b3E"(i64** %51) #18
          to label %bb16 unwind label %abort, !dbg !3050

bb15:                                             ; preds = %bb17, %bb16
  %52 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 3, !dbg !3050
; invoke core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  invoke void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %52) #18
          to label %bb10 unwind label %abort, !dbg !3050

bb17:                                             ; preds = %bb16
  br label %bb15, !dbg !3050

bb10:                                             ; preds = %bb15
  %53 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3100
  %54 = load i8*, i8** %53, align 8, !dbg !3100
  %55 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3100
  %56 = load i32, i32* %55, align 8, !dbg !3100
  %57 = insertvalue { i8*, i32 } undef, i8* %54, 0, !dbg !3100
  %58 = insertvalue { i8*, i32 } %57, i32 %56, 1, !dbg !3100
  resume { i8*, i32 } %58, !dbg !3100

bb13:                                             ; preds = %bb12
  ret void, !dbg !3101
}

; std::thread::Builder::spawn_unchecked_::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN3std6thread7Builder16spawn_unchecked_28_$u7b$$u7b$closure$u7d$$u7d$17h89120b0fe05e725dE"(%"alloc::string::String"* %name) unnamed_addr #0 !dbg !3102 {
start:
  %_1.dbg.spill = alloca %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#0}]", align 1
  %_4 = alloca %"alloc::string::String", align 8
  %_3 = alloca %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#0}]"* %_1.dbg.spill, metadata !3108, metadata !DIExpression()), !dbg !3109
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %name, metadata !3107, metadata !DIExpression()), !dbg !3110
  %0 = bitcast %"alloc::string::String"* %_4 to i8*, !dbg !3111
  %1 = bitcast %"alloc::string::String"* %name to i8*, !dbg !3111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !3111
; call alloc::ffi::c_str::CString::new
  call void @_ZN5alloc3ffi5c_str7CString3new17h64fc04278fe91747E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %_3, %"alloc::string::String"* %_4), !dbg !3112
  br label %bb1, !dbg !3112

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::expect
  %2 = call { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17haf67b9a71d3b11d7E"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %_3, [0 x i8]* align 1 bitcast (<{ [47 x i8] }>* @alloc645 to [0 x i8]*), i64 47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc647 to %"core::panic::location::Location"*)), !dbg !3112
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !3112
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !3112
  br label %bb2, !dbg !3112

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !3113
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !3113
  ret { i8*, i64 } %6, !dbg !3113
}

; std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN3std6thread7Builder16spawn_unchecked_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hf6b952cc563ccbeeE"() unnamed_addr #0 !dbg !3114 {
start:
  %_1.dbg.spill = alloca %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]", align 1
  %0 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]"* %_1.dbg.spill to %"[closure@src/test_thread_locals.rs:56:27: 56:29]"*
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]"* %_1.dbg.spill, metadata !3118, metadata !DIExpression()), !dbg !3119
; call std::sys_common::backtrace::__rust_begin_short_backtrace
  call void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h9075faf1f5726949E(), !dbg !3120
  br label %bb1, !dbg !3120

bb1:                                              ; preds = %start
  ret void, !dbg !3121
}

; std::thread::Builder::spawn
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std6thread7Builder5spawn17hb090a562fb64540fE(%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* sret(%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>") %0, %"std::thread::Builder"* %self) unnamed_addr #1 !dbg !3122 {
start:
  %f.dbg.spill = alloca %"[closure@src/test_thread_locals.rs:56:27: 56:29]", align 1
  %_3 = alloca %"std::thread::Builder", align 8
  call void @llvm.dbg.declare(metadata %"std::thread::Builder"* %self, metadata !3124, metadata !DIExpression()), !dbg !3126
  call void @llvm.dbg.declare(metadata %"[closure@src/test_thread_locals.rs:56:27: 56:29]"* %f.dbg.spill, metadata !3125, metadata !DIExpression()), !dbg !3127
  %1 = bitcast %"std::thread::Builder"* %_3 to i8*, !dbg !3128
  %2 = bitcast %"std::thread::Builder"* %self to i8*, !dbg !3128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 40, i1 false), !dbg !3128
; call std::thread::Builder::spawn_unchecked
  call void @_ZN3std6thread7Builder15spawn_unchecked17h68509192edd45b03E(%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* sret(%"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>") %0, %"std::thread::Builder"* %_3), !dbg !3128
  br label %bb1, !dbg !3128

bb1:                                              ; preds = %start
  ret void, !dbg !3129
}

; std::panicking::try
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @_ZN3std9panicking3try17h9e0c96685ebd620cE() unnamed_addr #1 !dbg !3130 {
start:
  %slot.dbg.spill1 = alloca { i8*, i64* }, align 8
  %0 = alloca i32, align 4
  %data_ptr.dbg.spill = alloca i8*, align 8
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<()>", align 1
  %value.dbg.spill = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>", align 1
  %f.dbg.spill = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>", align 1
  %_3 = alloca %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>", align 1
  %data = alloca { i8*, i8* }, align 8
  %1 = alloca { i8*, i8* }, align 8
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"* %f.dbg.spill, metadata !3134, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %data, metadata !3135, metadata !DIExpression()), !dbg !3161
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"* %value.dbg.spill, metadata !3162, metadata !DIExpression()), !dbg !3167
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<()>"* %slot.dbg.spill, metadata !3169, metadata !DIExpression()), !dbg !3175
  %2 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"* %_3 to %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"*, !dbg !3167
  %3 = bitcast { i8*, i8* }* %data to %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"*, !dbg !3177
  %data_ptr = bitcast { i8*, i8* }* %data to i8*, !dbg !3178
  store i8* %data_ptr, i8** %data_ptr.dbg.spill, align 8, !dbg !3178
  call void @llvm.dbg.declare(metadata i8** %data_ptr.dbg.spill, metadata !3157, metadata !DIExpression()), !dbg !3179
  %4 = call i32 @__rust_try(void (i8*)* @_ZN3std9panicking3try7do_call17hb7ad3ef0ce12fefdE, i8* %data_ptr, void (i8*, i8*)* @_ZN3std9panicking3try8do_catch17h4a756b03f9a54b02E), !dbg !3180
  store i32 %4, i32* %0, align 4, !dbg !3180
  %_9 = load i32, i32* %0, align 4, !dbg !3180
  br label %bb1, !dbg !3180

bb1:                                              ; preds = %start
  %5 = icmp eq i32 %_9, 0, !dbg !3180
  br i1 %5, label %bb2, label %bb3, !dbg !3180

bb2:                                              ; preds = %bb1
  %6 = bitcast { i8*, i8* }* %1 to %"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"*, !dbg !3181
  %7 = bitcast %"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"* %6 to {}*, !dbg !3181
  %8 = bitcast { i8*, i8* }* %1 to {}**, !dbg !3181
  store {}* null, {}** %8, align 8, !dbg !3181
  br label %bb4, !dbg !3182

bb3:                                              ; preds = %bb1
  %9 = bitcast { i8*, i8* }* %data to { i8*, i64* }*, !dbg !3183
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 0, !dbg !3183
  %slot.0 = load i8*, i8** %10, align 8, !dbg !3183, !nonnull !28, !align !1104, !noundef !28
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 1, !dbg !3183
  %slot.1 = load i64*, i64** %11, align 8, !dbg !3183, !nonnull !28, !align !1582, !noundef !28
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %slot.dbg.spill1, i32 0, i32 0, !dbg !3183
  store i8* %slot.0, i8** %12, align 8, !dbg !3183
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %slot.dbg.spill1, i32 0, i32 1, !dbg !3183
  store i64* %slot.1, i64** %13, align 8, !dbg !3183
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %slot.dbg.spill1, metadata !3184, metadata !DIExpression()), !dbg !3190
  %_16.0 = bitcast i8* %slot.0 to {}*, !dbg !3190
  %_16.1 = bitcast i64* %slot.1 to [3 x i64]*, !dbg !3190
  %14 = bitcast { i8*, i8* }* %1 to { {}*, [3 x i64]* }*, !dbg !3192
  %15 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %14, i32 0, i32 0, !dbg !3192
  store {}* %_16.0, {}** %15, align 8, !dbg !3192
  %16 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %14, i32 0, i32 1, !dbg !3192
  store [3 x i64]* %_16.1, [3 x i64]** %16, align 8, !dbg !3192
  br label %bb4, !dbg !3182

bb4:                                              ; preds = %bb2, %bb3
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !3193
  %18 = load i8*, i8** %17, align 8, !dbg !3193, !align !1104
  %19 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !3193
  %20 = load i8*, i8** %19, align 8, !dbg !3193
  %21 = insertvalue { i8*, i8* } undef, i8* %18, 0, !dbg !3193
  %22 = insertvalue { i8*, i8* } %21, i8* %20, 1, !dbg !3193
  ret { i8*, i8* } %22, !dbg !3193
}

; std::panicking::try
; Function Attrs: nonlazybind uwtable
define internal { i8*, i8* } @_ZN3std9panicking3try17hb75f4d75ddcf1d32E(i64* align 8 %f) unnamed_addr #1 !dbg !3194 {
start:
  %slot.dbg.spill1 = alloca { i8*, i64* }, align 8
  %0 = alloca i32, align 4
  %data_ptr.dbg.spill = alloca i8*, align 8
  %value.dbg.spill = alloca i64*, align 8
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<()>", align 1
  %f.dbg.spill = alloca i64*, align 8
  %_3 = alloca i64*, align 8
  %data = alloca %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>", align 8
  %1 = alloca { i8*, i8* }, align 8
  store i64* %f, i64** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %f.dbg.spill, metadata !3196, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.declare(metadata %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data, metadata !3197, metadata !DIExpression()), !dbg !3213
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<()>"* %slot.dbg.spill, metadata !3214, metadata !DIExpression()), !dbg !3218
  store i64* %f, i64** %value.dbg.spill, align 8, !dbg !3220
  call void @llvm.dbg.declare(metadata i64** %value.dbg.spill, metadata !3221, metadata !DIExpression()), !dbg !3227
  store i64* %f, i64** %_3, align 8, !dbg !3227
  %2 = bitcast %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data to i64**, !dbg !3229
  %3 = load i64*, i64** %_3, align 8, !dbg !3229, !nonnull !28, !align !1582, !noundef !28
  store i64* %3, i64** %2, align 8, !dbg !3229
  %data_ptr = bitcast %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data to i8*, !dbg !3230
  store i8* %data_ptr, i8** %data_ptr.dbg.spill, align 8, !dbg !3230
  call void @llvm.dbg.declare(metadata i8** %data_ptr.dbg.spill, metadata !3209, metadata !DIExpression()), !dbg !3231
  %4 = call i32 @__rust_try(void (i8*)* @_ZN3std9panicking3try7do_call17hfb3ba7a4ccb97de2E, i8* %data_ptr, void (i8*, i8*)* @_ZN3std9panicking3try8do_catch17hbecaaaf0250073caE), !dbg !3232
  store i32 %4, i32* %0, align 4, !dbg !3232
  %_9 = load i32, i32* %0, align 4, !dbg !3232
  br label %bb1, !dbg !3232

bb1:                                              ; preds = %start
  %5 = icmp eq i32 %_9, 0, !dbg !3232
  br i1 %5, label %bb2, label %bb3, !dbg !3232

bb2:                                              ; preds = %bb1
  %6 = bitcast { i8*, i8* }* %1 to %"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"*, !dbg !3233
  %7 = bitcast %"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>::Ok"* %6 to {}*, !dbg !3233
  %8 = bitcast { i8*, i8* }* %1 to {}**, !dbg !3233
  store {}* null, {}** %8, align 8, !dbg !3233
  br label %bb4, !dbg !3234

bb3:                                              ; preds = %bb1
  %9 = bitcast %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data to { i8*, i64* }*, !dbg !3235
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 0, !dbg !3235
  %slot.0 = load i8*, i8** %10, align 8, !dbg !3235, !nonnull !28, !align !1104, !noundef !28
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 1, !dbg !3235
  %slot.1 = load i64*, i64** %11, align 8, !dbg !3235, !nonnull !28, !align !1582, !noundef !28
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %slot.dbg.spill1, i32 0, i32 0, !dbg !3235
  store i8* %slot.0, i8** %12, align 8, !dbg !3235
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %slot.dbg.spill1, i32 0, i32 1, !dbg !3235
  store i64* %slot.1, i64** %13, align 8, !dbg !3235
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %slot.dbg.spill1, metadata !3236, metadata !DIExpression()), !dbg !3240
  %_16.0 = bitcast i8* %slot.0 to {}*, !dbg !3240
  %_16.1 = bitcast i64* %slot.1 to [3 x i64]*, !dbg !3240
  %14 = bitcast { i8*, i8* }* %1 to { {}*, [3 x i64]* }*, !dbg !3242
  %15 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %14, i32 0, i32 0, !dbg !3242
  store {}* %_16.0, {}** %15, align 8, !dbg !3242
  %16 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %14, i32 0, i32 1, !dbg !3242
  store [3 x i64]* %_16.1, [3 x i64]** %16, align 8, !dbg !3242
  br label %bb4, !dbg !3234

bb4:                                              ; preds = %bb2, %bb3
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !3243
  %18 = load i8*, i8** %17, align 8, !dbg !3243, !align !1104
  %19 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !3243
  %20 = load i8*, i8** %19, align 8, !dbg !3243
  %21 = insertvalue { i8*, i8* } undef, i8* %18, 0, !dbg !3243
  %22 = insertvalue { i8*, i8* } %21, i8* %20, 1, !dbg !3243
  ret { i8*, i8* } %22, !dbg !3243
}

; std::panicking::try::do_call
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std9panicking3try7do_call17hb7ad3ef0ce12fefdE(i8* %data) unnamed_addr #0 !dbg !3244 {
start:
  %self.dbg.spill5 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"*, align 8
  %src.dbg.spill = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"*, align 8
  %slot.dbg.spill4 = alloca %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"*, align 8
  %data.dbg.spill3 = alloca { i8*, i8* }*, align 8
  %data.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>", align 1
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>", align 1
  %value.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>", align 1
  %data.dbg.spill = alloca i8*, align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>", align 1
  %_8 = alloca %"core::mem::manually_drop::ManuallyDrop<()>", align 1
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3248, metadata !DIExpression()), !dbg !3257
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"* %f.dbg.spill, metadata !3255, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.declare(metadata {}* %value.dbg.spill, metadata !3259, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"* %tmp, metadata !3265, metadata !DIExpression()), !dbg !3280
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"* %self.dbg.spill, metadata !3290, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"* %slot.dbg.spill, metadata !3299, metadata !DIExpression()), !dbg !3305
  %data1 = bitcast i8* %data to { i8*, i8* }*, !dbg !3307
  store { i8*, i8* }* %data1, { i8*, i8* }** %data.dbg.spill2, align 8, !dbg !3307
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %data.dbg.spill2, metadata !3249, metadata !DIExpression()), !dbg !3308
  store { i8*, i8* }* %data1, { i8*, i8* }** %data.dbg.spill3, align 8, !dbg !3309
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %data.dbg.spill3, metadata !3252, metadata !DIExpression()), !dbg !3310
  %_7 = bitcast { i8*, i8* }* %data1 to %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"*, !dbg !3311
  store %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"* %_7, %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"** %slot.dbg.spill4, align 8, !dbg !3311
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"** %slot.dbg.spill4, metadata !3287, metadata !DIExpression()), !dbg !3312
  %_13 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"* %_7 to %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"*, !dbg !3312
  store %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"* %_13, %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"** %src.dbg.spill, align 8, !dbg !3312
  call void @llvm.dbg.declare(metadata %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"** %src.dbg.spill, metadata !3273, metadata !DIExpression()), !dbg !3313
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"* %tmp to {}*, !dbg !3314
  store %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"** %self.dbg.spill5, align 8, !dbg !3280
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"** %self.dbg.spill5, metadata !3318, metadata !DIExpression()), !dbg !3326
  %_16 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>>"* %tmp to %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"*, !dbg !3326
  %1 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"* %_16 to i8*, !dbg !3280
  %2 = bitcast %"core::panic::unwind_safe::AssertUnwindSafe<[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}::{closure#0}]>"* %_13 to i8*, !dbg !3280
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 0, i1 false), !dbg !3280
  br label %bb2, !dbg !3297

bb2:                                              ; preds = %start
; call <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
  call void @"_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17ha6399e982c71960aE"(), !dbg !3328
  br label %bb1, !dbg !3328

bb1:                                              ; preds = %bb2
  %3 = bitcast %"core::mem::manually_drop::ManuallyDrop<()>"* %_8 to {}*, !dbg !3263
  %4 = bitcast { i8*, i8* }* %data1 to %"core::mem::manually_drop::ManuallyDrop<()>"*, !dbg !3329
  ret void, !dbg !3330
}

; std::panicking::try::do_call
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std9panicking3try7do_call17hfb3ba7a4ccb97de2E(i8* %data) unnamed_addr #0 !dbg !3331 {
start:
  %f.dbg.spill = alloca i64*, align 8
  %slot.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill = alloca i8**, align 8
  %src.dbg.spill = alloca i64**, align 8
  %slot.dbg.spill = alloca i64**, align 8
  %data.dbg.spill3 = alloca %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"*, align 8
  %data.dbg.spill2 = alloca %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"*, align 8
  %value.dbg.spill = alloca {}, align 1
  %data.dbg.spill = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %_8 = alloca %"core::mem::manually_drop::ManuallyDrop<()>", align 1
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3333, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.declare(metadata {}* %value.dbg.spill, metadata !3343, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !3349, metadata !DIExpression()), !dbg !3363
  %data1 = bitcast i8* %data to %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"*, !dbg !3373
  store %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data1, %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"** %data.dbg.spill2, align 8, !dbg !3373
  call void @llvm.dbg.declare(metadata %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"** %data.dbg.spill2, metadata !3334, metadata !DIExpression()), !dbg !3374
  store %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data1, %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"** %data.dbg.spill3, align 8, !dbg !3375
  call void @llvm.dbg.declare(metadata %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"** %data.dbg.spill3, metadata !3337, metadata !DIExpression()), !dbg !3376
  %_7 = bitcast %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data1 to i64**, !dbg !3377
  store i64** %_7, i64*** %slot.dbg.spill, align 8, !dbg !3377
  call void @llvm.dbg.declare(metadata i64*** %slot.dbg.spill, metadata !3370, metadata !DIExpression()), !dbg !3378
  store i64** %_7, i64*** %src.dbg.spill, align 8, !dbg !3378
  call void @llvm.dbg.declare(metadata i64*** %src.dbg.spill, metadata !3357, metadata !DIExpression()), !dbg !3379
  %0 = bitcast i8** %tmp to {}*, !dbg !3380
  store i8** %tmp, i8*** %self.dbg.spill, align 8, !dbg !3363
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !3386, metadata !DIExpression()), !dbg !3394
  %_16 = bitcast i8** %tmp to i64**, !dbg !3394
  %1 = bitcast i64** %_16 to i8*, !dbg !3363
  %2 = bitcast i64** %_7 to i8*, !dbg !3363
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false), !dbg !3363
  %self = load i8*, i8** %tmp, align 8, !dbg !3363
  store i8* %self, i8** %self.dbg.spill4, align 8, !dbg !3363
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !3396, metadata !DIExpression()), !dbg !3402
  br label %bb2, !dbg !3402

bb2:                                              ; preds = %start
  %slot = bitcast i8* %self to i64*, !dbg !3402
  store i64* %slot, i64** %slot.dbg.spill5, align 8, !dbg !3402
  call void @llvm.dbg.declare(metadata i64** %slot.dbg.spill5, metadata !3404, metadata !DIExpression()), !dbg !3410
  store i64* %slot, i64** %f.dbg.spill, align 8, !dbg !3410
  call void @llvm.dbg.declare(metadata i64** %f.dbg.spill, metadata !3340, metadata !DIExpression()), !dbg !3412
; call <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
  call void @"_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17h0ddc6bcc5d48a705E"(i64* align 8 %slot), !dbg !3413
  br label %bb1, !dbg !3413

bb1:                                              ; preds = %bb2
  %3 = bitcast %"core::mem::manually_drop::ManuallyDrop<()>"* %_8 to {}*, !dbg !3347
  %4 = bitcast %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data1 to %"core::mem::manually_drop::ManuallyDrop<()>"*, !dbg !3414
  ret void, !dbg !3415
}

; std::panicking::try::do_catch
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std9panicking3try8do_catch17h4a756b03f9a54b02E(i8* %data, i8* %payload) unnamed_addr #0 !dbg !3416 {
start:
  %value.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %obj.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %data.dbg.spill3 = alloca { i8*, i8* }*, align 8
  %data.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %payload.dbg.spill = alloca i8*, align 8
  %data.dbg.spill = alloca i8*, align 8
  %_8 = alloca { i8*, i64* }, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3420, metadata !DIExpression()), !dbg !3428
  store i8* %payload, i8** %payload.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.dbg.spill, metadata !3421, metadata !DIExpression()), !dbg !3429
  %data1 = bitcast i8* %data to { i8*, i8* }*, !dbg !3430
  store { i8*, i8* }* %data1, { i8*, i8* }** %data.dbg.spill2, align 8, !dbg !3430
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %data.dbg.spill2, metadata !3422, metadata !DIExpression()), !dbg !3431
  store { i8*, i8* }* %data1, { i8*, i8* }** %data.dbg.spill3, align 8, !dbg !3432
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %data.dbg.spill3, metadata !3424, metadata !DIExpression()), !dbg !3433
; call std::panicking::try::cleanup
  %0 = call { {}*, [3 x i64]* } @_ZN3std9panicking3try7cleanup17hc943fe53eebad02eE(i8* %payload), !dbg !3434
  %obj.0 = extractvalue { {}*, [3 x i64]* } %0, 0, !dbg !3434
  %obj.1 = extractvalue { {}*, [3 x i64]* } %0, 1, !dbg !3434
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %obj.dbg.spill, i32 0, i32 0, !dbg !3434
  store {}* %obj.0, {}** %1, align 8, !dbg !3434
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %obj.dbg.spill, i32 0, i32 1, !dbg !3434
  store [3 x i64]* %obj.1, [3 x i64]** %2, align 8, !dbg !3434
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %obj.dbg.spill, metadata !3426, metadata !DIExpression()), !dbg !3435
  br label %bb1, !dbg !3434

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 0, !dbg !3436
  store {}* %obj.0, {}** %3, align 8, !dbg !3436
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 1, !dbg !3436
  store [3 x i64]* %obj.1, [3 x i64]** %4, align 8, !dbg !3436
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %value.dbg.spill, metadata !3437, metadata !DIExpression()), !dbg !3443
  %5 = bitcast { i8*, i64* }* %_8 to { {}*, [3 x i64]* }*, !dbg !3443
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %5, i32 0, i32 0, !dbg !3443
  store {}* %obj.0, {}** %6, align 8, !dbg !3443
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %5, i32 0, i32 1, !dbg !3443
  store [3 x i64]* %obj.1, [3 x i64]** %7, align 8, !dbg !3443
  %8 = bitcast { i8*, i8* }* %data1 to { i8*, i64* }*, !dbg !3445
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_8, i32 0, i32 0, !dbg !3445
  %10 = load i8*, i8** %9, align 8, !dbg !3445, !nonnull !28, !align !1104, !noundef !28
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_8, i32 0, i32 1, !dbg !3445
  %12 = load i64*, i64** %11, align 8, !dbg !3445, !nonnull !28, !align !1582, !noundef !28
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0, !dbg !3445
  store i8* %10, i8** %13, align 8, !dbg !3445
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1, !dbg !3445
  store i64* %12, i64** %14, align 8, !dbg !3445
  ret void, !dbg !3446
}

; std::panicking::try::do_catch
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std9panicking3try8do_catch17hbecaaaf0250073caE(i8* %data, i8* %payload) unnamed_addr #0 !dbg !3447 {
start:
  %value.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %obj.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %data.dbg.spill3 = alloca %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"*, align 8
  %data.dbg.spill2 = alloca %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"*, align 8
  %payload.dbg.spill = alloca i8*, align 8
  %data.dbg.spill = alloca i8*, align 8
  %_8 = alloca { i8*, i64* }, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3449, metadata !DIExpression()), !dbg !3457
  store i8* %payload, i8** %payload.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.dbg.spill, metadata !3450, metadata !DIExpression()), !dbg !3458
  %data1 = bitcast i8* %data to %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"*, !dbg !3459
  store %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data1, %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"** %data.dbg.spill2, align 8, !dbg !3459
  call void @llvm.dbg.declare(metadata %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"** %data.dbg.spill2, metadata !3451, metadata !DIExpression()), !dbg !3460
  store %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data1, %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"** %data.dbg.spill3, align 8, !dbg !3461
  call void @llvm.dbg.declare(metadata %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"** %data.dbg.spill3, metadata !3453, metadata !DIExpression()), !dbg !3462
; call std::panicking::try::cleanup
  %0 = call { {}*, [3 x i64]* } @_ZN3std9panicking3try7cleanup17hc943fe53eebad02eE(i8* %payload), !dbg !3463
  %obj.0 = extractvalue { {}*, [3 x i64]* } %0, 0, !dbg !3463
  %obj.1 = extractvalue { {}*, [3 x i64]* } %0, 1, !dbg !3463
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %obj.dbg.spill, i32 0, i32 0, !dbg !3463
  store {}* %obj.0, {}** %1, align 8, !dbg !3463
  %2 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %obj.dbg.spill, i32 0, i32 1, !dbg !3463
  store [3 x i64]* %obj.1, [3 x i64]** %2, align 8, !dbg !3463
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %obj.dbg.spill, metadata !3455, metadata !DIExpression()), !dbg !3464
  br label %bb1, !dbg !3463

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 0, !dbg !3465
  store {}* %obj.0, {}** %3, align 8, !dbg !3465
  %4 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %value.dbg.spill, i32 0, i32 1, !dbg !3465
  store [3 x i64]* %obj.1, [3 x i64]** %4, align 8, !dbg !3465
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %value.dbg.spill, metadata !3466, metadata !DIExpression()), !dbg !3470
  %5 = bitcast { i8*, i64* }* %_8 to { {}*, [3 x i64]* }*, !dbg !3470
  %6 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %5, i32 0, i32 0, !dbg !3470
  store {}* %obj.0, {}** %6, align 8, !dbg !3470
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %5, i32 0, i32 1, !dbg !3470
  store [3 x i64]* %obj.1, [3 x i64]** %7, align 8, !dbg !3470
  %8 = bitcast %"std::panicking::r#try::Data<core::panic::unwind_safe::AssertUnwindSafe<[closure@<std::thread::Packet<()> as core::ops::drop::Drop>::drop::{closure#0}]>, ()>"* %data1 to { i8*, i64* }*, !dbg !3472
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_8, i32 0, i32 0, !dbg !3472
  %10 = load i8*, i8** %9, align 8, !dbg !3472, !nonnull !28, !align !1104, !noundef !28
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_8, i32 0, i32 1, !dbg !3472
  %12 = load i64*, i64** %11, align 8, !dbg !3472, !nonnull !28, !align !1582, !noundef !28
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 0, !dbg !3472
  store i8* %10, i8** %13, align 8, !dbg !3472
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %8, i32 0, i32 1, !dbg !3472
  store i64* %12, i64** %14, align 8, !dbg !3472
  ret void, !dbg !3473
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0f7c9127e552ad1eE"([16 x i32]** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3474 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [16 x i32]**, align 8
  store [16 x i32]** %self, [16 x i32]*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]*** %self.dbg.spill, metadata !3480, metadata !DIExpression()), !dbg !3484
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3481, metadata !DIExpression()), !dbg !3485
  %_6 = load [16 x i32]*, [16 x i32]** %self, align 8, !dbg !3486, !nonnull !28, !align !3487, !noundef !28
; call core::array::<impl core::fmt::Debug for [T; N]>::fmt
  %0 = call zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h65117bdedec693f7E"([16 x i32]* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !3488
  br label %bb1, !dbg !3488

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !3489
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h13b9f53be999e7a3E"(i32** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3490 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32**, align 8
  store i32** %self, i32*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %self.dbg.spill, metadata !3495, metadata !DIExpression()), !dbg !3497
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3496, metadata !DIExpression()), !dbg !3498
  %_6 = load i32*, i32** %self, align 8, !dbg !3499, !nonnull !28, !align !3487, !noundef !28
; call core::fmt::num::<impl core::fmt::Debug for u32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h05c10c58cf65fe63E"(i32* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !3500
  br label %bb1, !dbg !3500

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !3501
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h388f944a0ba5fb00E"({ [0 x i32]*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3502 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }*, align 8
  store { [0 x i32]*, i64 }* %self, { [0 x i32]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }** %self.dbg.spill, metadata !3512, metadata !DIExpression()), !dbg !3516
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3513, metadata !DIExpression()), !dbg !3517
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self, i32 0, i32 0, !dbg !3518
  %_6.0 = load [0 x i32]*, [0 x i32]** %0, align 8, !dbg !3518, !nonnull !28, !align !3487, !noundef !28
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self, i32 0, i32 1, !dbg !3518
  %_6.1 = load i64, i64* %1, align 8, !dbg !3518
; call <[T] as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h8732322f7f05646fE"([0 x i32]* align 4 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f), !dbg !3519
  br label %bb1, !dbg !3519

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !3520
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h620069b5c990afe8E"(float** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3521 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca float**, align 8
  store float** %self, float*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata float*** %self.dbg.spill, metadata !3526, metadata !DIExpression()), !dbg !3530
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3527, metadata !DIExpression()), !dbg !3531
  %_6 = load float*, float** %self, align 8, !dbg !3532, !nonnull !28, !align !3487, !noundef !28
; call core::fmt::float::<impl core::fmt::Debug for f32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt5float50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$f32$GT$3fmt17h53df062cf1414aedE"(float* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !3533
  br label %bb1, !dbg !3533

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !3534
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he83ea735d7c4d560E"([11 x i32]** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3535 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [11 x i32]**, align 8
  store [11 x i32]** %self, [11 x i32]*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i32]*** %self.dbg.spill, metadata !3540, metadata !DIExpression()), !dbg !3544
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3541, metadata !DIExpression()), !dbg !3545
  %_6 = load [11 x i32]*, [11 x i32]** %self, align 8, !dbg !3546, !nonnull !28, !align !3487, !noundef !28
; call core::array::<impl core::fmt::Debug for [T; N]>::fmt
  %0 = call zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hcbcabcbc5690b5d9E"([11 x i32]* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !3547
  br label %bb1, !dbg !3547

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !3548
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf2e76c0a5a5bc719E"(i32** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3549 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32**, align 8
  store i32** %self, i32*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %self.dbg.spill, metadata !3554, metadata !DIExpression()), !dbg !3556
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3555, metadata !DIExpression()), !dbg !3557
  %_6 = load i32*, i32** %self, align 8, !dbg !3558, !nonnull !28, !align !3487, !noundef !28
; call core::fmt::num::<impl core::fmt::Debug for i32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h534bd972dbb8de8dE"(i32* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !3559
  br label %bb1, !dbg !3559

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !3560
}

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h8732322f7f05646fE"([0 x i32]* align 4 %self.0, i64 %self.1, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !3561 {
start:
  %self.dbg.spill1 = alloca { [0 x i32]*, i64 }, align 8
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %_6 = alloca %"core::fmt::builders::DebugList", align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !3566, metadata !DIExpression()), !dbg !3568
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3567, metadata !DIExpression()), !dbg !3569
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17h2e70d1c34e8cb782E(%"core::fmt::builders::DebugList"* sret(%"core::fmt::builders::DebugList") %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !3570
  br label %bb1, !dbg !3570

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !3571
  store [0 x i32]* %self.0, [0 x i32]** %2, align 8, !dbg !3571
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !3571
  store i64 %self.1, i64* %3, align 8, !dbg !3571
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill1, metadata !3572, metadata !DIExpression()), !dbg !3591
; call core::slice::iter::Iter<T>::new
  %4 = call { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hb99186a617c39175E"([0 x i32]* align 4 %self.0, i64 %self.1), !dbg !3591
  %_8.0 = extractvalue { i32*, i32* } %4, 0, !dbg !3591
  %_8.1 = extractvalue { i32*, i32* } %4, 1, !dbg !3591
  br label %bb4, !dbg !3591

bb4:                                              ; preds = %bb1
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h99f8e3dbcd7a54dcE(%"core::fmt::builders::DebugList"* align 8 %_6, i32* %_8.0, i32* %_8.1), !dbg !3570
  br label %bb2, !dbg !3570

bb2:                                              ; preds = %bb4
; call core::fmt::builders::DebugList::finish
  %5 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha896c0aa3642bf32E(%"core::fmt::builders::DebugList"* align 8 %_4), !dbg !3570
  br label %bb3, !dbg !3570

bb3:                                              ; preds = %bb2
  ret i1 %5, !dbg !3592
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h4f08995ab98d8c7cE"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !3593 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !3598, metadata !DIExpression()), !dbg !3600
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3599, metadata !DIExpression()), !dbg !3601
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !3602
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3603, metadata !DIExpression()), !dbg !3608
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !3609
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !3607, metadata !DIExpression()), !dbg !3608
  %1 = add nuw i64 %start1, %n, !dbg !3608
  store i64 %1, i64* %0, align 8, !dbg !3608
  %2 = load i64, i64* %0, align 8, !dbg !3608
  br label %bb1, !dbg !3608

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !3610
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h7ca4e02a87554400E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !3611 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !3613, metadata !DIExpression()), !dbg !3615
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3614, metadata !DIExpression()), !dbg !3616
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !3617
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3618, metadata !DIExpression()), !dbg !3623
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !3624
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !3622, metadata !DIExpression()), !dbg !3623
  %1 = sub nuw i64 %start1, %n, !dbg !3623
  store i64 %1, i64* %0, align 8, !dbg !3623
  %2 = load i64, i64* %0, align 8, !dbg !3623
  br label %bb1, !dbg !3623

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !3625
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3cmp3Ord3max17h87e416972f67cf67E(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3626 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %3 = alloca i64, align 8
  %other = alloca i64, align 8
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  store i64 %1, i64* %other, align 8
  call void @llvm.dbg.declare(metadata i64* %self, metadata !3629, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.declare(metadata i64* %other, metadata !3630, metadata !DIExpression()), !dbg !3634
  store i8 1, i8* %_9, align 1, !dbg !3635
  store i8 1, i8* %_8, align 1, !dbg !3635
; invoke core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %4 = invoke i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h6ac6a57f4367ed8fE"(i64* align 8 %self, i64* align 8 %other)
          to label %bb1 unwind label %cleanup, !dbg !3635, !range !3636

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !3637

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %4, i8* %_3, align 1, !dbg !3635
  %_7 = load i8, i8* %_3, align 1, !dbg !3635, !range !3636, !noundef !28
  switch i8 %_7, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !3638

bb13:                                             ; preds = %bb8
  %10 = load i8, i8* %_9, align 1, !dbg !3637, !range !1099, !noundef !28
  %11 = trunc i8 %10 to i1, !dbg !3637
  br i1 %11, label %bb12, label %bb9, !dbg !3637

bb3:                                              ; preds = %bb1
  unreachable, !dbg !3635

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_8, align 1, !dbg !3639
  %12 = load i64, i64* %other, align 8, !dbg !3639
  store i64 %12, i64* %3, align 8, !dbg !3639
  br label %bb5, !dbg !3639

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1, !dbg !3640
  %13 = load i64, i64* %self, align 8, !dbg !3640
  store i64 %13, i64* %3, align 8, !dbg !3640
  br label %bb5, !dbg !3640

bb5:                                              ; preds = %bb4, %bb2
  %14 = load i8, i8* %_8, align 1, !dbg !3637, !range !1099, !noundef !28
  %15 = trunc i8 %14 to i1, !dbg !3637
  br i1 %15, label %bb10, label %bb6, !dbg !3637

bb6:                                              ; preds = %bb10, %bb5
  %16 = load i8, i8* %_9, align 1, !dbg !3637, !range !1099, !noundef !28
  %17 = trunc i8 %16 to i1, !dbg !3637
  br i1 %17, label %bb11, label %bb7, !dbg !3637

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !3637

bb9:                                              ; preds = %bb12, %bb13
  %18 = bitcast { i8*, i32 }* %2 to i8**, !dbg !3641
  %19 = load i8*, i8** %18, align 8, !dbg !3641
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !3641
  %21 = load i32, i32* %20, align 8, !dbg !3641
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !3641
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !3641
  resume { i8*, i32 } %23, !dbg !3641

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !3637

bb7:                                              ; preds = %bb11, %bb6
  %24 = load i64, i64* %3, align 8, !dbg !3642
  ret i64 %24, !dbg !3642

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !3637
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h6ac6a57f4367ed8fE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !3643 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !3649, metadata !DIExpression()), !dbg !3651
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !3650, metadata !DIExpression()), !dbg !3652
  %_4 = load i64, i64* %self, align 8, !dbg !3653
  %_5 = load i64, i64* %other, align 8, !dbg !3654
  %_3 = icmp ult i64 %_4, %_5, !dbg !3653
  br i1 %_3, label %bb1, label %bb2, !dbg !3653

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !3655
  %_8 = load i64, i64* %other, align 8, !dbg !3656
  %_6 = icmp eq i64 %_7, %_8, !dbg !3655
  br i1 %_6, label %bb3, label %bb4, !dbg !3655

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !3657
  br label %bb6, !dbg !3658

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !3659, !range !3636, !noundef !28
  ret i8 %1, !dbg !3659

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !3660
  br label %bb5, !dbg !3661

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !3662
  br label %bb5, !dbg !3661

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !3658
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17ha506a09541c0c86bE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !3663 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !3668, metadata !DIExpression()), !dbg !3670
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !3669, metadata !DIExpression()), !dbg !3671
  %_3 = load i64, i64* %self, align 8, !dbg !3672
  %_4 = load i64, i64* %other, align 8, !dbg !3673
  %0 = icmp ult i64 %_3, %_4, !dbg !3672
  ret i1 %0, !dbg !3674
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h688b63d4a5bbf871E"({ [0 x i8]*, i64 }* align 8 %self, { [0 x i8]*, i64 }* align 8 %other) unnamed_addr #0 !dbg !3675 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !3681, metadata !DIExpression()), !dbg !3686
  store { [0 x i8]*, i64 }* %other, { [0 x i8]*, i64 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !3682, metadata !DIExpression()), !dbg !3687
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !3688
  %_5.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !3688, !nonnull !28, !align !1104, !noundef !28
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !3688
  %_5.1 = load i64, i64* %1, align 8, !dbg !3688
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0, !dbg !3689
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !3689, !nonnull !28, !align !1104, !noundef !28
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1, !dbg !3689
  %_6.1 = load i64, i64* %3, align 8, !dbg !3689
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %4 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hd9eae665082e865cE"([0 x i8]* align 1 %_5.0, i64 %_5.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !3690
  br label %bb1, !dbg !3690

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !3691
}

; core::fmt::num::<impl core::fmt::Debug for i32>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h534bd972dbb8de8dE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !3692 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32*, align 8
  %0 = alloca i8, align 1
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !3699, metadata !DIExpression()), !dbg !3701
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3700, metadata !DIExpression()), !dbg !3702
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8 %f), !dbg !3703
  br label %bb1, !dbg !3703

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !3703

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8 %f), !dbg !3704
  br label %bb5, !dbg !3704

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h46ab6094afed2354E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3705
  %2 = zext i1 %1 to i8, !dbg !3705
  store i8 %2, i8* %0, align 1, !dbg !3705
  br label %bb3, !dbg !3705

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !3706

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !3707, !range !1099, !noundef !28
  %4 = trunc i8 %3 to i1, !dbg !3707
  ret i1 %4, !dbg !3707

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !3704

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3708
  %6 = zext i1 %5 to i8, !dbg !3708
  store i8 %6, i8* %0, align 1, !dbg !3708
  br label %bb9, !dbg !3708

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h827553a54a7e037dE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3709
  %8 = zext i1 %7 to i8, !dbg !3709
  store i8 %8, i8* %0, align 1, !dbg !3709
  br label %bb7, !dbg !3709

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !3710

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !3706

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !3710
}

; core::fmt::num::<impl core::fmt::Debug for u32>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h05c10c58cf65fe63E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !3711 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32*, align 8
  %0 = alloca i8, align 1
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !3716, metadata !DIExpression()), !dbg !3718
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3717, metadata !DIExpression()), !dbg !3719
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8 %f), !dbg !3720
  br label %bb1, !dbg !3720

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !3720

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8 %f), !dbg !3721
  br label %bb5, !dbg !3721

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17h4598978fc11d0a5fE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3722
  %2 = zext i1 %1 to i8, !dbg !3722
  store i8 %2, i8* %0, align 1, !dbg !3722
  br label %bb3, !dbg !3722

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !3723

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !3724, !range !1099, !noundef !28
  %4 = trunc i8 %3 to i1, !dbg !3724
  ret i1 %4, !dbg !3724

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !3721

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h518f5e83165fbe37E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3725
  %6 = zext i1 %5 to i8, !dbg !3725
  store i8 %6, i8* %0, align 1, !dbg !3725
  br label %bb9, !dbg !3725

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !3726
  %8 = zext i1 %7 to i8, !dbg !3726
  store i8 %8, i8* %0, align 1, !dbg !3726
  br label %bb7, !dbg !3726

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !3727

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !3723

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !3727
}

; core::fmt::Write::write_char
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN4core3fmt5Write10write_char17hb30bfcbec4888ae5E({ i8*, i8* }* align 8 %self, i32 %c) unnamed_addr #1 !dbg !3728 {
start:
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i32, align 4
  %c.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_10 = alloca [4 x i8], align 1
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3733, metadata !DIExpression()), !dbg !3737
  store i32 %c, i32* %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !3734, metadata !DIExpression()), !dbg !3738
  store i32 %c, i32* %self.dbg.spill1, align 4, !dbg !3739
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill1, metadata !3740, metadata !DIExpression()), !dbg !3755
  %0 = getelementptr inbounds [4 x i8], [4 x i8]* %_10, i64 0, i64 0, !dbg !3756
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4, i1 false), !dbg !3756
  %dst.0 = bitcast [4 x i8]* %_10 to [0 x i8]*, !dbg !3757
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 0, !dbg !3757
  store [0 x i8]* %dst.0, [0 x i8]** %1, align 8, !dbg !3757
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 1, !dbg !3757
  store i64 4, i64* %2, align 8, !dbg !3757
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %dst.dbg.spill, metadata !3754, metadata !DIExpression()), !dbg !3755
; call core::char::methods::encode_utf8_raw
  %3 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h27513490047024c0E(i32 %c, [0 x i8]* align 1 %dst.0, i64 4), !dbg !3755
  %_15.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3755
  %_15.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3755
  br label %bb2, !dbg !3755

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !3755
  store [0 x i8]* %_15.0, [0 x i8]** %4, align 8, !dbg !3755
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !3755
  store i64 %_15.1, i64* %5, align 8, !dbg !3755
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !3758, metadata !DIExpression()), !dbg !3766
; call <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
  %6 = call zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h3abb5efb30b14f62E"({ i8*, i8* }* align 8 %self, [0 x i8]* align 1 %_15.0, i64 %_15.1), !dbg !3768
  br label %bb1, !dbg !3768

bb1:                                              ; preds = %bb2
  ret i1 %6, !dbg !3769
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN4core3fmt5Write9write_fmt17h5097526a53e38c49E({ i8*, i8* }* align 8 %0, %"core::fmt::Arguments"* %args) unnamed_addr #1 !dbg !3770 {
start:
  %_6 = alloca %"core::fmt::Arguments", align 8
  %self = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %0, { i8*, i8* }** %self, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self, metadata !3774, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"* %args, metadata !3775, metadata !DIExpression()), !dbg !3777
  %_3.0 = bitcast { i8*, i8* }** %self to {}*, !dbg !3778
  %1 = bitcast %"core::fmt::Arguments"* %_6 to i8*, !dbg !3779
  %2 = bitcast %"core::fmt::Arguments"* %args to i8*, !dbg !3779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 48, i1 false), !dbg !3779
; call core::fmt::write
  %3 = call zeroext i1 @_ZN4core3fmt5write17hcd15d2c673b5a9c1E({}* align 1 %_3.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.3 to [3 x i64]*), %"core::fmt::Arguments"* %_6), !dbg !3780
  br label %bb1, !dbg !3780

bb1:                                              ; preds = %start
  ret i1 %3, !dbg !3781
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define internal align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17h99f8e3dbcd7a54dcE(%"core::fmt::builders::DebugList"* align 8 %self, i32* %entries.0, i32* %entries.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3782 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %entries.dbg.spill = alloca { i32*, i32* }, align 8
  %self.dbg.spill = alloca %"core::fmt::builders::DebugList"*, align 8
  %entry = alloca i32*, align 8
  %_7 = alloca i32*, align 8
  %iter = alloca { i32*, i32* }, align 8
  store %"core::fmt::builders::DebugList"* %self, %"core::fmt::builders::DebugList"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::builders::DebugList"** %self.dbg.spill, metadata !3797, metadata !DIExpression()), !dbg !3806
  %1 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %entries.dbg.spill, i32 0, i32 0
  store i32* %entries.0, i32** %1, align 8
  %2 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %entries.dbg.spill, i32 0, i32 1
  store i32* %entries.1, i32** %2, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }* %entries.dbg.spill, metadata !3798, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.declare(metadata { i32*, i32* }* %iter, metadata !3799, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.declare(metadata i32** %entry, metadata !3801, metadata !DIExpression()), !dbg !3809
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %3 = call { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h28601dbc0e3e9f29E"(i32* %entries.0, i32* %entries.1), !dbg !3810
  %_4.0 = extractvalue { i32*, i32* } %3, 0, !dbg !3810
  %_4.1 = extractvalue { i32*, i32* } %3, 1, !dbg !3810
  br label %bb1, !dbg !3810

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 0, !dbg !3810
  store i32* %_4.0, i32** %4, align 8, !dbg !3810
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 1, !dbg !3810
  store i32* %_4.1, i32** %5, align 8, !dbg !3810
  br label %bb2, !dbg !3811

bb2:                                              ; preds = %bb8, %bb1
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %6 = invoke align 4 i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8771c2e09e12367dE"({ i32*, i32* }* align 8 %iter)
          to label %bb3 unwind label %cleanup, !dbg !3808

bb11:                                             ; preds = %bb10, %cleanup
  br label %bb12, !dbg !3812

cleanup:                                          ; preds = %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb11

bb3:                                              ; preds = %bb2
  store i32* %6, i32** %_7, align 8, !dbg !3808
  %12 = bitcast i32** %_7 to {}**, !dbg !3808
  %13 = load {}*, {}** %12, align 8, !dbg !3808
  %14 = icmp eq {}* %13, null, !dbg !3808
  %_10 = select i1 %14, i64 0, i64 1, !dbg !3808
  switch i64 %_10, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !3808

bb5:                                              ; preds = %bb3
  unreachable, !dbg !3808

bb6:                                              ; preds = %bb3
  br label %bb9, !dbg !3812

bb4:                                              ; preds = %bb3
  %15 = load i32*, i32** %_7, align 8, !dbg !3813, !nonnull !28, !align !3487, !noundef !28
  store i32* %15, i32** %entry, align 8, !dbg !3813
  %_14.0 = bitcast i32** %entry to {}*, !dbg !3814
; invoke core::fmt::builders::DebugList::entry
  %_12 = invoke align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h5007920add23274dE(%"core::fmt::builders::DebugList"* align 8 %self, {}* align 1 %_14.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*))
          to label %bb7 unwind label %cleanup1, !dbg !3815

bb10:                                             ; preds = %cleanup1
  br label %bb11, !dbg !3816

cleanup1:                                         ; preds = %bb4
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb10

bb7:                                              ; preds = %bb4
  br label %bb8, !dbg !3816

bb8:                                              ; preds = %bb7
  br label %bb2, !dbg !3811

bb12:                                             ; preds = %bb11
  %21 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3817
  %22 = load i8*, i8** %21, align 8, !dbg !3817
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3817
  %24 = load i32, i32* %23, align 8, !dbg !3817
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0, !dbg !3817
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1, !dbg !3817
  resume { i8*, i32 } %26, !dbg !3817

bb9:                                              ; preds = %bb6
  ret %"core::fmt::builders::DebugList"* %self, !dbg !3818
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !3819 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !3823, metadata !DIExpression()), !dbg !3825
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !3824, metadata !DIExpression()), !dbg !3826
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !3827
  br i1 %_4, label %bb1, label %bb2, !dbg !3827

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !3828
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !3829
  %5 = zext i1 %_9 to i8, !dbg !3827
  store i8 %5, i8* %_3, align 1, !dbg !3827
  br label %bb3, !dbg !3827

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !3827
  br label %bb3, !dbg !3827

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !3827, !range !1099, !noundef !28
  %7 = trunc i8 %6 to i1, !dbg !3827
  br i1 %7, label %bb4, label %bb6, !dbg !3827

bb6:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_24 to {}**, !dbg !3830
  store {}* null, {}** %8, align 8, !dbg !3830
  %9 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !3831
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !3831
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !3831
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !3831
  store i64 %pieces.1, i64* %11, align 8, !dbg !3831
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1, !dbg !3831
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0, !dbg !3831
  %14 = load i64*, i64** %13, align 8, !dbg !3831, !align !1582
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1, !dbg !3831
  %16 = load i64, i64* %15, align 8, !dbg !3831
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !3831
  store i64* %14, i64** %17, align 8, !dbg !3831
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !3831
  store i64 %16, i64* %18, align 8, !dbg !3831
  %19 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2, !dbg !3831
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !3831
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !3831
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !3831
  store i64 %args.1, i64* %21, align 8, !dbg !3831
  ret void, !dbg !3832

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc301 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc470 to [0 x { i8*, i64* }]*), i64 0), !dbg !3833
  br label %bb5, !dbg !3833

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc657 to %"core::panic::location::Location"*)) #17, !dbg !3833
  unreachable, !dbg !3833
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem7replace17h14699bb539fb6811E(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* sret(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>") %result, %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* align 8 %dest, %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3834 {
start:
  %dst.dbg.spill = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"*, align 8
  %src.dbg.spill = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, align 8
  %dest.dbg.spill = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>", align 8
  %src1 = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>", align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %result, metadata !3841, metadata !DIExpression()), !dbg !3843
  store %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %dest, %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %dest.dbg.spill, metadata !3839, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %src, metadata !3840, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %src1, metadata !3846, metadata !DIExpression()), !dbg !3853
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %tmp, metadata !3855, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %self, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %slot, metadata !3882, metadata !DIExpression()), !dbg !3888
  store %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %dest, %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %src.dbg.spill, align 8, !dbg !3890
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %src.dbg.spill, metadata !3863, metadata !DIExpression()), !dbg !3891
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %tmp to {}*, !dbg !3892
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill, align 8, !dbg !3872
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill, metadata !3898, metadata !DIExpression()), !dbg !3905
  %_9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %tmp to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, !dbg !3905
  %2 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_9 to i8*, !dbg !3872
  %3 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %dest to i8*, !dbg !3872
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !3872
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %self to i8*, !dbg !3872
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %tmp to i8*, !dbg !3872
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !3872
  br label %bb4, !dbg !3880

bb4:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %self to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"*, !dbg !3880
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %slot to i8*, !dbg !3880
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %6 to i8*, !dbg !3880
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !3880
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %slot to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, !dbg !3888
  %10 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %result to i8*, !dbg !3888
  %11 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %9 to i8*, !dbg !3888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !3888
  store %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %dest, %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %dst.dbg.spill, align 8, !dbg !3907
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %dst.dbg.spill, metadata !3852, metadata !DIExpression()), !dbg !3853
  %12 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %src1 to i8*, !dbg !3908
  %13 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %src to i8*, !dbg !3908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !3908
  %14 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %dest to i8*, !dbg !3853
  %15 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %src1 to i8*, !dbg !3853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !3853
  ret void, !dbg !3909

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !3910

bb1:                                              ; preds = %bb2, %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3911
  %17 = load i8*, i8** %16, align 8, !dbg !3911
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3911
  %19 = load i32, i32* %18, align 8, !dbg !3911
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !3911
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !3911
  resume { i8*, i32 } %21, !dbg !3911

bb2:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>
  invoke void @"_ZN4core3ptr158drop_in_place$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$17hec04110808742394E"(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %src) #18
          to label %bb1 unwind label %abort, !dbg !3910

abort:                                            ; preds = %bb2
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !3911
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !3911
  unreachable, !dbg !3911
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem7replace17haa87c38c4eb0b131E(i64* align 8 %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3912 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %result.dbg.spill = alloca i64, align 8
  %slot.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill = alloca i64*, align 8
  %src.dbg.spill2 = alloca i64*, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  %src1 = alloca i64, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !3917, metadata !DIExpression()), !dbg !3921
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !3918, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.declare(metadata i64* %src1, metadata !3923, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !3933, metadata !DIExpression()), !dbg !3950
  store i64* %dest, i64** %src.dbg.spill2, align 8, !dbg !3952
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill2, metadata !3941, metadata !DIExpression()), !dbg !3953
  %1 = bitcast i64* %tmp to {}*, !dbg !3954
  store i64* %tmp, i64** %self.dbg.spill, align 8, !dbg !3950
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !3960, metadata !DIExpression()), !dbg !3967
  %2 = bitcast i64* %tmp to i8*, !dbg !3950
  %3 = bitcast i64* %dest to i8*, !dbg !3950
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !3950
  %self = load i64, i64* %tmp, align 8, !dbg !3950
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !3950
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !3969, metadata !DIExpression()), !dbg !3975
  br label %bb4, !dbg !3975

bb4:                                              ; preds = %start
  store i64 %self, i64* %slot.dbg.spill, align 8, !dbg !3975
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill, metadata !3977, metadata !DIExpression()), !dbg !3983
  store i64 %self, i64* %result.dbg.spill, align 8, !dbg !3983
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !3919, metadata !DIExpression()), !dbg !3985
  store i64* %dest, i64** %dst.dbg.spill, align 8, !dbg !3986
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !3930, metadata !DIExpression()), !dbg !3931
  store i64 %src, i64* %src1, align 8, !dbg !3987
  %4 = bitcast i64* %dest to i8*, !dbg !3931
  %5 = bitcast i64* %src1 to i8*, !dbg !3931
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !3931
  ret i64 %self, !dbg !3988

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !3989

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3990
  %7 = load i8*, i8** %6, align 8, !dbg !3990
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3990
  %9 = load i32, i32* %8, align 8, !dbg !3990
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !3990
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !3990
  resume { i8*, i32 } %11, !dbg !3990

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !3989
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hef81380ba2856b32E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !3991 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3995, metadata !DIExpression()), !dbg !4000
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !3996, metadata !DIExpression()), !dbg !4001
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !4002
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !4003, metadata !DIExpression()), !dbg !4016
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !4017
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !4012, metadata !DIExpression()), !dbg !4016
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !4016
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !4016
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !4016
  %6 = zext i1 %5 to i8, !dbg !4016
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !4016
  store i64 %4, i64* %7, align 8, !dbg !4016
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !4016
  store i8 %6, i8* %8, align 8, !dbg !4016
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !4016
  %_13.0 = load i64, i64* %9, align 8, !dbg !4016
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !4016
  %11 = load i8, i8* %10, align 8, !dbg !4016, !range !1099, !noundef !28
  %_13.1 = trunc i8 %11 to i1, !dbg !4016
  br label %bb5, !dbg !4016

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !4016
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4013, metadata !DIExpression()), !dbg !4018
  %12 = zext i1 %_13.1 to i8, !dbg !4016
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !4016
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !4015, metadata !DIExpression()), !dbg !4018
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !4018
  store i64 %_13.0, i64* %13, align 8, !dbg !4018
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !4018
  %15 = zext i1 %_13.1 to i8, !dbg !4018
  store i8 %15, i8* %14, align 8, !dbg !4018
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !4019
  %a = load i64, i64* %16, align 8, !dbg !4019
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !4019
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !3997, metadata !DIExpression()), !dbg !4020
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !4021
  %18 = load i8, i8* %17, align 8, !dbg !4021, !range !1099, !noundef !28
  %b = trunc i8 %18 to i1, !dbg !4021
  %19 = zext i1 %b to i8, !dbg !4021
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !4021
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !3999, metadata !DIExpression()), !dbg !4022
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !4023
  %21 = zext i1 %20 to i8, !dbg !4023
  store i8 %21, i8* %0, align 1, !dbg !4023
  %22 = load i8, i8* %0, align 1, !dbg !4023, !range !1099, !noundef !28
  %_8 = trunc i8 %22 to i1, !dbg !4023
  br label %bb1, !dbg !4023

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !4023

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4024
  store i64 %a, i64* %23, align 8, !dbg !4024
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !4024
  store i64 1, i64* %24, align 8, !dbg !4024
  br label %bb4, !dbg !4025

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !4026
  store i64 0, i64* %25, align 8, !dbg !4026
  br label %bb4, !dbg !4025

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !4027
  %27 = load i64, i64* %26, align 8, !dbg !4027, !range !1578, !noundef !28
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4027
  %29 = load i64, i64* %28, align 8, !dbg !4027
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !4027
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !4027
  ret { i64, i64 } %31, !dbg !4027
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h46bb431c73bc0d4cE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !4028 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !4030, metadata !DIExpression()), !dbg !4035
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !4031, metadata !DIExpression()), !dbg !4036
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !4037
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !4038, metadata !DIExpression()), !dbg !4045
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !4046
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !4041, metadata !DIExpression()), !dbg !4045
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !4045
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !4045
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !4045
  %6 = zext i1 %5 to i8, !dbg !4045
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !4045
  store i64 %4, i64* %7, align 8, !dbg !4045
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !4045
  store i8 %6, i8* %8, align 8, !dbg !4045
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !4045
  %_13.0 = load i64, i64* %9, align 8, !dbg !4045
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !4045
  %11 = load i8, i8* %10, align 8, !dbg !4045, !range !1099, !noundef !28
  %_13.1 = trunc i8 %11 to i1, !dbg !4045
  br label %bb5, !dbg !4045

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !4045
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4042, metadata !DIExpression()), !dbg !4047
  %12 = zext i1 %_13.1 to i8, !dbg !4045
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !4045
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !4044, metadata !DIExpression()), !dbg !4047
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !4047
  store i64 %_13.0, i64* %13, align 8, !dbg !4047
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !4047
  %15 = zext i1 %_13.1 to i8, !dbg !4047
  store i8 %15, i8* %14, align 8, !dbg !4047
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !4048
  %a = load i64, i64* %16, align 8, !dbg !4048
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !4048
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !4032, metadata !DIExpression()), !dbg !4049
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !4050
  %18 = load i8, i8* %17, align 8, !dbg !4050, !range !1099, !noundef !28
  %b = trunc i8 %18 to i1, !dbg !4050
  %19 = zext i1 %b to i8, !dbg !4050
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !4050
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !4034, metadata !DIExpression()), !dbg !4051
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !4052
  %21 = zext i1 %20 to i8, !dbg !4052
  store i8 %21, i8* %0, align 1, !dbg !4052
  %22 = load i8, i8* %0, align 1, !dbg !4052, !range !1099, !noundef !28
  %_8 = trunc i8 %22 to i1, !dbg !4052
  br label %bb1, !dbg !4052

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !4052

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4053
  store i64 %a, i64* %23, align 8, !dbg !4053
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !4053
  store i64 1, i64* %24, align 8, !dbg !4053
  br label %bb4, !dbg !4054

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !4055
  store i64 0, i64* %25, align 8, !dbg !4055
  br label %bb4, !dbg !4054

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !4056
  %27 = load i64, i64* %26, align 8, !dbg !4056, !range !1578, !noundef !28
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4056
  %29 = load i64, i64* %28, align 8, !dbg !4056
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !4056
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !4056
  ret { i64, i64 } %31, !dbg !4056
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h364ab54f0e25d23aE"(%"core::str::LinesAnyMap"* align 1 %self, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #1 !dbg !4057 {
start:
  %self.dbg.spill = alloca %"core::str::LinesAnyMap"*, align 8
  %args = alloca { i8*, i64 }, align 8
  %2 = bitcast { i8*, i64 }* %args to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store %"core::str::LinesAnyMap"* %self, %"core::str::LinesAnyMap"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::LinesAnyMap"** %self.dbg.spill, metadata !4066, metadata !DIExpression()), !dbg !4073
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %args, metadata !4067, metadata !DIExpression()), !dbg !4074
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %args, i32 0, i32 0, !dbg !4075
  %_4.0 = load i8*, i8** %5, align 8, !dbg !4075, !nonnull !28, !align !1104, !noundef !28
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %args, i32 0, i32 1, !dbg !4075
  %_4.1 = load i64, i64* %6, align 8, !dbg !4075
  %7 = bitcast i8* %_4.0 to [0 x i8]*, !dbg !4076
; call <core::str::LinesAnyMap as core::ops::function::FnMut<(&str,)>>::call_mut
  %8 = call { [0 x i8]*, i64 } @"_ZN95_$LT$core..str..LinesAnyMap$u20$as$u20$core..ops..function..FnMut$LT$$LP$$RF$str$C$$RP$$GT$$GT$8call_mut17hb4db0a0e2b1f3091E"(%"core::str::LinesAnyMap"* align 1 %self, [0 x i8]* align 1 %7, i64 %_4.1), !dbg !4076
  %9 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !4076
  %10 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !4076
  br label %bb1, !dbg !4076

bb1:                                              ; preds = %start
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !4077
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !4077
  ret { [0 x i8]*, i64 } %12, !dbg !4077
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h042ae277a417f464E"(i64** %_1) unnamed_addr #0 !dbg !4078 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  %_2 = alloca {}, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4084, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4085, metadata !DIExpression()), !dbg !4089
  %0 = load i64*, i64** %_1, align 8, !dbg !4089, !nonnull !28, !noundef !28
; call core::ops::function::FnOnce::call_once
  %1 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h79ef125d51d73356E(i64* %0), !dbg !4089
  br label %bb1, !dbg !4089

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !4089
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17ha10b08c66f375c68E"(%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1) unnamed_addr #0 !dbg !4090 {
start:
  %_1.dbg.spill = alloca %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"*, align 8
  %_2 = alloca {}, align 1
  store %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"** %_1.dbg.spill, metadata !4095, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4096, metadata !DIExpression()), !dbg !4099
; call std::thread::Builder::spawn_unchecked_::{{closure}}
  call void @"_ZN3std6thread7Builder16spawn_unchecked_28_$u7b$$u7b$closure$u7d$$u7d$17h54dd61d1ecb7169fE"(%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1), !dbg !4099
  br label %bb1, !dbg !4099

bb1:                                              ; preds = %start
  ret void, !dbg !4099
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h1cd12005797dbabbE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4100 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_sections.rs:7:1: 29:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_sections.rs:7:1: 29:2]"* %_1, metadata !4107, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4108, metadata !DIExpression()), !dbg !4111
; invoke statics_tests::test_sections::test_sectioned_statics::{{closure}}
  invoke void @"_ZN13statics_tests13test_sections22test_sectioned_statics28_$u7b$$u7b$closure$u7d$$u7d$17hccd241a0ef02210fE"(%"[closure@src/test_sections.rs:7:1: 29:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !4111

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !4111

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !4111

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4111
  %7 = load i8*, i8** %6, align 8, !dbg !4111
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4111
  %9 = load i32, i32* %8, align 8, !dbg !4111
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !4111
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !4111
  resume { i8*, i32 } %11, !dbg !4111

bb2:                                              ; preds = %bb1
  ret void, !dbg !4111
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h6e3cb6373f53440dE(i64* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4112 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !4116, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4117, metadata !DIExpression()), !dbg !4120
; invoke <std::thread::Packet<T> as core::ops::drop::Drop>::drop::{{closure}}
  invoke void @"_ZN70_$LT$std..thread..Packet$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h57932cbd980faa8bE"(i64** align 8 %_1)
          to label %bb1 unwind label %cleanup, !dbg !4120

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !4120

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !4120

bb4:                                              ; preds = %bb3
  %7 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4120
  %8 = load i8*, i8** %7, align 8, !dbg !4120
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4120
  %10 = load i32, i32* %9, align 8, !dbg !4120
  %11 = insertvalue { i8*, i32 } undef, i8* %8, 0, !dbg !4120
  %12 = insertvalue { i8*, i32 } %11, i32 %10, 1, !dbg !4120
  resume { i8*, i32 } %12, !dbg !4120

bb2:                                              ; preds = %bb1
  ret void, !dbg !4120
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h76db4904c424c19eE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4121 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_thread_locals.rs:53:1: 64:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_thread_locals.rs:53:1: 64:2]"* %_1, metadata !4126, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4127, metadata !DIExpression()), !dbg !4130
; invoke statics_tests::test_thread_locals::test_thread_locals::{{closure}}
  invoke void @"_ZN13statics_tests18test_thread_locals18test_thread_locals28_$u7b$$u7b$closure$u7d$$u7d$17h2c03ead6c654b3d9E"(%"[closure@src/test_thread_locals.rs:53:1: 64:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !4130

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !4130

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !4130

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4130
  %7 = load i8*, i8** %6, align 8, !dbg !4130
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4130
  %9 = load i32, i32* %8, align 8, !dbg !4130
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !4130
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !4130
  resume { i8*, i32 } %11, !dbg !4130

bb2:                                              ; preds = %bb1
  ret void, !dbg !4130
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h79ef125d51d73356E(i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4131 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !4135, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4136, metadata !DIExpression()), !dbg !4137
; invoke std::rt::lang_start::{{closure}}
  %2 = invoke i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h4c71719825c42f40E"(i64** align 8 %_1)
          to label %bb1 unwind label %cleanup, !dbg !4137

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !4137

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !4137

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4137
  %9 = load i8*, i8** %8, align 8, !dbg !4137
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4137
  %11 = load i32, i32* %10, align 8, !dbg !4137
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !4137
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !4137
  resume { i8*, i32 } %13, !dbg !4137

bb2:                                              ; preds = %bb1
  ret i32 %2, !dbg !4137
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h927891fa9cfdefd4E(void ()* %_1) unnamed_addr #0 !dbg !4138 {
start:
  %_1.dbg.spill = alloca void ()*, align 8
  %_2 = alloca {}, align 1
  store void ()* %_1, void ()** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %_1.dbg.spill, metadata !4140, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4141, metadata !DIExpression()), !dbg !4144
  call void %_1(), !dbg !4144
  br label %bb1, !dbg !4144

bb1:                                              ; preds = %start
  ret void, !dbg !4144
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17ha38857fdf9210d78E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4145 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_storage.rs:12:1: 24:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_storage.rs:12:1: 24:2]"* %_1, metadata !4152, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4153, metadata !DIExpression()), !dbg !4156
; invoke statics_tests::test_storage::test_buffer::{{closure}}
  invoke void @"_ZN13statics_tests12test_storage11test_buffer28_$u7b$$u7b$closure$u7d$$u7d$17h01ef486d412cb6dcE"(%"[closure@src/test_storage.rs:12:1: 24:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !4156

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !4156

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !4156

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4156
  %7 = load i8*, i8** %6, align 8, !dbg !4156
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4156
  %9 = load i32, i32* %8, align 8, !dbg !4156
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !4156
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !4156
  resume { i8*, i32 } %11, !dbg !4156

bb2:                                              ; preds = %bb1
  ret void, !dbg !4156
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hb7ff2ba48361f4faE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4157 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_sections.rs:32:1: 55:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_sections.rs:32:1: 55:2]"* %_1, metadata !4163, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4164, metadata !DIExpression()), !dbg !4167
; invoke statics_tests::test_sections::test_sectioned_used_static::{{closure}}
  invoke void @"_ZN13statics_tests13test_sections26test_sectioned_used_static28_$u7b$$u7b$closure$u7d$$u7d$17h497198cb98fff466E"(%"[closure@src/test_sections.rs:32:1: 55:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !4167

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !4167

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !4167

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4167
  %7 = load i8*, i8** %6, align 8, !dbg !4167
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4167
  %9 = load i32, i32* %8, align 8, !dbg !4167
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !4167
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !4167
  resume { i8*, i32 } %11, !dbg !4167

bb2:                                              ; preds = %bb1
  ret void, !dbg !4167
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3ops8function6FnOnce9call_once17hee10dcbdde35a177E() unnamed_addr #0 !dbg !4168 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !4172, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !4173, metadata !DIExpression()), !dbg !4176
; call std::sys_common::thread::min_stack
  %0 = call i64 @_ZN3std10sys_common6thread9min_stack17h276a98c3e9cb8925E(), !dbg !4176
  br label %bb1, !dbg !4176

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !4176
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr101drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$17h503eb33f74c58727E"(i64** %_1) unnamed_addr #1 !dbg !4177 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4182, metadata !DIExpression()), !dbg !4183
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3faf7497f9d00665E"(i64** align 8 %_1), !dbg !4183
  br label %bb1, !dbg !4183

bb1:                                              ; preds = %start
  ret void, !dbg !4183
}

; core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17h3ea16d77aacac4f1E"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1) unnamed_addr #1 !dbg !4184 {
start:
  %_1.dbg.spill = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"*, align 8
  store %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1, %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"** %_1.dbg.spill, metadata !4189, metadata !DIExpression()), !dbg !4190
  %0 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to i8*, !dbg !4190
  %1 = load i8, i8* %0, align 8, !dbg !4190, !range !2400, !noundef !28
  %_2 = zext i8 %1 to i64, !dbg !4190
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ], !dbg !4190

bb2:                                              ; preds = %start
  %2 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*, !dbg !4190
  %3 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %2, i32 0, i32 1, !dbg !4190
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hd47ed77b6af049f5E"(%"std::io::error::Custom"** %3), !dbg !4190
  br label %bb1, !dbg !4190

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void, !dbg !4190
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr102drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$17h40aacf4efd7e3b7eE"(i64** %_1) unnamed_addr #1 !dbg !4191 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4199, metadata !DIExpression()), !dbg !4202
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha6b9e9feb5fd2bdbE"(i64** align 8 %_1), !dbg !4202
  br label %bb1, !dbg !4202

bb1:                                              ; preds = %start
  ret void, !dbg !4202
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::thread::scoped::ScopeData>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr103drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..thread..scoped..ScopeData$GT$$GT$$GT$17hbfb71188870deae6E"(i64** %_1) unnamed_addr #1 !dbg !4203 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4208, metadata !DIExpression()), !dbg !4211
  %0 = bitcast i64** %_1 to {}**, !dbg !4211
  %1 = load {}*, {}** %0, align 8, !dbg !4211
  %2 = icmp eq {}* %1, null, !dbg !4211
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4211
  %3 = icmp eq i64 %_2, 0, !dbg !4211
  br i1 %3, label %bb1, label %bb2, !dbg !4211

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4211

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<std::thread::scoped::ScopeData>>
  call void @"_ZN4core3ptr75drop_in_place$LT$alloc..sync..Arc$LT$std..thread..scoped..ScopeData$GT$$GT$17h9396d4991e98c8f7E"(i64** %_1), !dbg !4211
  br label %bb1, !dbg !4211
}

; core::ptr::drop_in_place<&mut std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr104drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$std..sys..unix..stdio..Stderr$GT$$GT$17hb013d39e8cf08beeE"({ i8*, i8* }** %_1) unnamed_addr #0 !dbg !4212 {
start:
  %_1.dbg.spill = alloca { i8*, i8* }**, align 8
  store { i8*, i8* }** %_1, { i8*, i8* }*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }*** %_1.dbg.spill, metadata !4217, metadata !DIExpression()), !dbg !4220
  ret void, !dbg !4220
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h648121baf6eb2b6cE"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4221 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %_1, { {}*, [3 x i64]* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %_1.dbg.spill, metadata !4226, metadata !DIExpression()), !dbg !4229
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4229
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*, !dbg !4229
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !4229
  %4 = load {}*, {}** %3, align 8, !dbg !4229
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !4229
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !dbg !4229, !nonnull !28, !align !1582, !noundef !28
  %7 = bitcast [3 x i64]* %6 to void ({}*)**, !dbg !4229
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0, !dbg !4229
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !dbg !4229, !invariant.load !28, !nonnull !28
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup, !dbg !4229

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4229
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0, !dbg !4229
  %12 = load i8*, i8** %11, align 8, !dbg !4229, !nonnull !28, !noundef !28
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1, !dbg !4229
  %14 = load i64*, i64** %13, align 8, !dbg !4229, !nonnull !28, !align !1582, !noundef !28
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hf2b034534e2503d1E(i8* %12, i64* align 8 %14) #18
          to label %bb2 unwind label %abort, !dbg !4229

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4229
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0, !dbg !4229
  %22 = load i8*, i8** %21, align 8, !dbg !4229, !nonnull !28, !noundef !28
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1, !dbg !4229
  %24 = load i64*, i64** %23, align 8, !dbg !4229, !nonnull !28, !align !1582, !noundef !28
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hf2b034534e2503d1E(i8* %22, i64* align 8 %24), !dbg !4229
  br label %bb1, !dbg !4229

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !4229
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !4229
  unreachable, !dbg !4229

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4229
  %27 = load i8*, i8** %26, align 8, !dbg !4229
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4229
  %29 = load i32, i32* %28, align 8, !dbg !4229
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !4229
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !4229
  resume { i8*, i32 } %31, !dbg !4229

bb1:                                              ; preds = %bb3
  ret void, !dbg !4229
}

; core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr129drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$$GT$17hfb9eaa80c8c143b3E"(i64** %_1) unnamed_addr #1 !dbg !4230 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4235, metadata !DIExpression()), !dbg !4238
  %0 = bitcast i64** %_1 to {}**, !dbg !4238
  %1 = load {}*, {}** %0, align 8, !dbg !4238
  %2 = icmp eq {}* %1, null, !dbg !4238
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4238
  %3 = icmp eq i64 %_2, 0, !dbg !4238
  br i1 %3, label %bb1, label %bb2, !dbg !4238

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4238

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$17h503eb33f74c58727E"(i64** %_1), !dbg !4238
  br label %bb1, !dbg !4238
}

; core::ptr::drop_in_place<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr130drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$17ha5dc4a097ef368c1E"({ i8*, i8* }* %_1) unnamed_addr #1 !dbg !4239 {
start:
  %_1.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %_1, { i8*, i8* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %_1.dbg.spill, metadata !4244, metadata !DIExpression()), !dbg !4245
  %0 = bitcast { i8*, i8* }* %_1 to {}**, !dbg !4245
  %1 = load {}*, {}** %0, align 8, !dbg !4245
  %2 = icmp eq {}* %1, null, !dbg !4245
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4245
  %3 = icmp eq i64 %_2, 0, !dbg !4245
  br i1 %3, label %bb1, label %bb2, !dbg !4245

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4245

bb2:                                              ; preds = %start
  %4 = bitcast { i8*, i8* }* %_1 to { {}*, [3 x i64]* }*, !dbg !4245
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h8e564f303293f592E"({ {}*, [3 x i64]* }* %4), !dbg !4245
  br label %bb1, !dbg !4245
}

; core::ptr::drop_in_place<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr158drop_in_place$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$17hec04110808742394E"(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_1) unnamed_addr #1 !dbg !4246 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, align 8
  store %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_1, %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"** %_1.dbg.spill, metadata !4250, metadata !DIExpression()), !dbg !4251
  %0 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_1 to i64*, !dbg !4251
  %_2 = load i64, i64* %0, align 8, !dbg !4251, !range !1578, !noundef !28
  %1 = icmp eq i64 %_2, 0, !dbg !4251
  br i1 %1, label %bb1, label %bb2, !dbg !4251

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4251

bb2:                                              ; preds = %start
  %2 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_1 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some"*, !dbg !4251
  %3 = getelementptr inbounds %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some", %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some"* %2, i32 0, i32 1, !dbg !4251
; call core::ptr::drop_in_place<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>
  call void @"_ZN4core3ptr130drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$17ha5dc4a097ef368c1E"({ i8*, i8* }* %3), !dbg !4251
  br label %bb1, !dbg !4251
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr188drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$$GT$17hc78d76de909ca9f3E"(%"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %_1) unnamed_addr #1 !dbg !4252 {
start:
  %_1.dbg.spill = alloca %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"*, align 8
  store %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %_1, %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %_1.dbg.spill, metadata !4257, metadata !DIExpression()), !dbg !4260
  %0 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %_1 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, !dbg !4260
; call core::ptr::drop_in_place<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>
  call void @"_ZN4core3ptr158drop_in_place$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$17hec04110808742394E"(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %0), !dbg !4260
  br label %bb1, !dbg !4260

bb1:                                              ; preds = %start
  ret void, !dbg !4260
}

; core::ptr::drop_in_place<std::thread::Builder::spawn_unchecked_<statics_tests::test_thread_locals::test_thread_locals::{{closure}},()>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr189drop_in_place$LT$std..thread..Builder..spawn_unchecked_$LT$statics_tests..test_thread_locals..test_thread_locals..$u7b$$u7b$closure$u7d$$u7d$$C$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h9da1102cf83aa5bfE"(%"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4261 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"*, align 8
  store %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"** %_1.dbg.spill, metadata !4263, metadata !DIExpression()), !dbg !4264
  %1 = bitcast %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1 to i64**, !dbg !4264
; invoke core::ptr::drop_in_place<std::thread::Thread>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %1)
          to label %bb6 unwind label %cleanup, !dbg !4264

bb4:                                              ; preds = %cleanup
  %2 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 2, !dbg !4264
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>>
  invoke void @"_ZN4core3ptr129drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$$GT$17hfb9eaa80c8c143b3E"(i64** %2) #18
          to label %bb3 unwind label %abort, !dbg !4264

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb4

bb6:                                              ; preds = %start
  %8 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 2, !dbg !4264
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>>
  invoke void @"_ZN4core3ptr129drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$$GT$17hfb9eaa80c8c143b3E"(i64** %8)
          to label %bb5 unwind label %cleanup1, !dbg !4264

abort:                                            ; preds = %bb3, %bb4
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !4264
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !4264
  unreachable, !dbg !4264

bb3:                                              ; preds = %cleanup1, %bb4
  %10 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 3, !dbg !4264
; invoke core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  invoke void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %10) #18
          to label %bb1 unwind label %abort, !dbg !4264

cleanup1:                                         ; preds = %bb6
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb3

bb5:                                              ; preds = %bb6
  %16 = getelementptr inbounds %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]", %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#1}]"* %_1, i32 0, i32 3, !dbg !4264
; call core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
  call void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %16), !dbg !4264
  br label %bb2, !dbg !4264

bb1:                                              ; preds = %bb3
  %17 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4264
  %18 = load i8*, i8** %17, align 8, !dbg !4264
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4264
  %20 = load i32, i32* %19, align 8, !dbg !4264
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0, !dbg !4264
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1, !dbg !4264
  resume { i8*, i32 } %22, !dbg !4264

bb2:                                              ; preds = %bb5
  ret void, !dbg !4264
}

; core::ptr::drop_in_place<&f32>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$f32$GT$17hbab995f8061b2f16E"(float** %_1) unnamed_addr #0 !dbg !4265 {
start:
  %_1.dbg.spill = alloca float**, align 8
  store float** %_1, float*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata float*** %_1.dbg.spill, metadata !4270, metadata !DIExpression()), !dbg !4273
  ret void, !dbg !4273
}

; core::ptr::drop_in_place<&i32>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h7747b4580dc61fe5E"(i32** %_1) unnamed_addr #0 !dbg !4274 {
start:
  %_1.dbg.spill = alloca i32**, align 8
  store i32** %_1, i32*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %_1.dbg.spill, metadata !4279, metadata !DIExpression()), !dbg !4280
  ret void, !dbg !4280
}

; core::ptr::drop_in_place<&u32>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h3e7df7f56c928aaaE"(i32** %_1) unnamed_addr #0 !dbg !4281 {
start:
  %_1.dbg.spill = alloca i32**, align 8
  store i32** %_1, i32*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %_1.dbg.spill, metadata !4286, metadata !DIExpression()), !dbg !4289
  ret void, !dbg !4289
}

; core::ptr::drop_in_place<std::thread::Inner>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr39drop_in_place$LT$std..thread..Inner$GT$17h7658d240831fd067E"(%"std::thread::Inner"* %_1) unnamed_addr #1 !dbg !4290 {
start:
  %_1.dbg.spill = alloca %"std::thread::Inner"*, align 8
  store %"std::thread::Inner"* %_1, %"std::thread::Inner"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::Inner"** %_1.dbg.spill, metadata !4295, metadata !DIExpression()), !dbg !4296
  %0 = bitcast %"std::thread::Inner"* %_1 to { i8*, i64 }*, !dbg !4296
; call core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17h689b97fbeeaf5d5aE"({ i8*, i64 }* %0), !dbg !4296
  br label %bb1, !dbg !4296

bb1:                                              ; preds = %start
  ret void, !dbg !4296
}

; core::ptr::drop_in_place<std::thread::Thread>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %_1) unnamed_addr #1 !dbg !4297 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4302, metadata !DIExpression()), !dbg !4305
; call core::ptr::drop_in_place<core::pin::Pin<alloc::sync::Arc<std::thread::Inner>>>
  call void @"_ZN4core3ptr85drop_in_place$LT$core..pin..Pin$LT$alloc..sync..Arc$LT$std..thread..Inner$GT$$GT$$GT$17h82d80a8a0c1e25faE"(i64** %_1), !dbg !4305
  br label %bb1, !dbg !4305

bb1:                                              ; preds = %start
  ret void, !dbg !4305
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h51ef8ea552bdd591E"(%"alloc::string::String"* %_1) unnamed_addr #1 !dbg !4306 {
start:
  %_1.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %_1, %"alloc::string::String"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %_1.dbg.spill, metadata !4311, metadata !DIExpression()), !dbg !4312
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !4312
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hbabdf85196cda4deE"(%"alloc::vec::Vec<u8>"* %0), !dbg !4312
  br label %bb1, !dbg !4312

bb1:                                              ; preds = %start
  ret void, !dbg !4312
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h95925069f7247ee8E"(i8** %_1) unnamed_addr #1 !dbg !4313 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !4318, metadata !DIExpression()), !dbg !4321
; call core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17h445945d9cf05a5b5E"(i8** %_1), !dbg !4321
  br label %bb1, !dbg !4321

bb1:                                              ; preds = %start
  ret void, !dbg !4321
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h646f367055c54bd9E"(%"std::io::error::Custom"* %_1) unnamed_addr #1 !dbg !4322 {
start:
  %_1.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  store %"std::io::error::Custom"* %_1, %"std::io::error::Custom"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %_1.dbg.spill, metadata !4326, metadata !DIExpression()), !dbg !4329
  %0 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*, !dbg !4329
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
  call void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h648121baf6eb2b6cE"({ {}*, [3 x i64]* }* %0), !dbg !4329
  br label %bb1, !dbg !4329

bb1:                                              ; preds = %start
  ret void, !dbg !4329
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hbabdf85196cda4deE"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4330 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %_1, %"alloc::vec::Vec<u8>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %_1.dbg.spill, metadata !4335, metadata !DIExpression()), !dbg !4336
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6a1e13ce38811b0aE"(%"alloc::vec::Vec<u8>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !4336

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !4336
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hb8150e1137fc4c65E"({ i8*, i64 }* %1) #18
          to label %bb1 unwind label %abort, !dbg !4336

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !4336
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hb8150e1137fc4c65E"({ i8*, i64 }* %7), !dbg !4336
  br label %bb2, !dbg !4336

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !4336
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !4336
  unreachable, !dbg !4336

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4336
  %10 = load i8*, i8** %9, align 8, !dbg !4336
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4336
  %12 = load i32, i32* %11, align 8, !dbg !4336
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !4336
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !4336
  resume { i8*, i32 } %14, !dbg !4336

bb2:                                              ; preds = %bb4
  ret void, !dbg !4336
}

; core::ptr::drop_in_place<alloc::ffi::c_str::CString>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17haac439215efbdba1E"({ i8*, i64 }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4337 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !4342, metadata !DIExpression()), !dbg !4343
; invoke <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
  invoke void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf8df026b45c34b8eE"({ i8*, i64 }* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !4343

bb3:                                              ; preds = %cleanup
  %1 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !4343
; invoke core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h2b0d866b28456dfcE"({ [0 x i8]*, i64 }* %1) #18
          to label %bb1 unwind label %abort, !dbg !4343

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !4343
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h2b0d866b28456dfcE"({ [0 x i8]*, i64 }* %7), !dbg !4343
  br label %bb2, !dbg !4343

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !4343
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !4343
  unreachable, !dbg !4343

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4343
  %10 = load i8*, i8** %9, align 8, !dbg !4343
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4343
  %12 = load i32, i32* %11, align 8, !dbg !4343
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !4343
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !4343
  resume { i8*, i32 } %14, !dbg !4343

bb2:                                              ; preds = %bb4
  ret void, !dbg !4343
}

; core::ptr::drop_in_place<alloc::ffi::c_str::NulError>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17h7d207ed4df96150bE"(%"alloc::ffi::c_str::NulError"* %_1) unnamed_addr #1 !dbg !4344 {
start:
  %_1.dbg.spill = alloca %"alloc::ffi::c_str::NulError"*, align 8
  store %"alloc::ffi::c_str::NulError"* %_1, %"alloc::ffi::c_str::NulError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::ffi::c_str::NulError"** %_1.dbg.spill, metadata !4349, metadata !DIExpression()), !dbg !4352
  %0 = getelementptr inbounds %"alloc::ffi::c_str::NulError", %"alloc::ffi::c_str::NulError"* %_1, i32 0, i32 1, !dbg !4352
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hbabdf85196cda4deE"(%"alloc::vec::Vec<u8>"* %0), !dbg !4352
  br label %bb1, !dbg !4352

bb1:                                              ; preds = %start
  ret void, !dbg !4352
}

; core::ptr::drop_in_place<&[i32; 11]>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr50drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$11$u5d$$GT$17hafe119a0b0b27325E"([11 x i32]** %_1) unnamed_addr #0 !dbg !4353 {
start:
  %_1.dbg.spill = alloca [11 x i32]**, align 8
  store [11 x i32]** %_1, [11 x i32]*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i32]*** %_1.dbg.spill, metadata !4358, metadata !DIExpression()), !dbg !4361
  ret void, !dbg !4361
}

; core::ptr::drop_in_place<&[i32; 16]>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr50drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$16$u5d$$GT$17h96a7017c5f71b0d5E"([16 x i32]** %_1) unnamed_addr #0 !dbg !4362 {
start:
  %_1.dbg.spill = alloca [16 x i32]**, align 8
  store [16 x i32]** %_1, [16 x i32]*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]*** %_1.dbg.spill, metadata !4367, metadata !DIExpression()), !dbg !4370
  ret void, !dbg !4370
}

; core::ptr::drop_in_place<alloc::vec::Vec<&str>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h93841d326ca7621aE"(%"alloc::vec::Vec<&str>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4371 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<&str>"*, align 8
  store %"alloc::vec::Vec<&str>"* %_1, %"alloc::vec::Vec<&str>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %_1.dbg.spill, metadata !4376, metadata !DIExpression()), !dbg !4379
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he934566eb94c4369E"(%"alloc::vec::Vec<&str>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !4379

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<&str>"* %_1 to { i64*, i64 }*, !dbg !4379
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h91748d5b3bafe347E"({ i64*, i64 }* %1) #18
          to label %bb1 unwind label %abort, !dbg !4379

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<&str>"* %_1 to { i64*, i64 }*, !dbg !4379
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h91748d5b3bafe347E"({ i64*, i64 }* %7), !dbg !4379
  br label %bb2, !dbg !4379

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !4379
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !4379
  unreachable, !dbg !4379

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4379
  %10 = load i8*, i8** %9, align 8, !dbg !4379
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4379
  %12 = load i32, i32* %11, align 8, !dbg !4379
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !4379
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !4379
  resume { i8*, i32 } %14, !dbg !4379

bb2:                                              ; preds = %bb4
  ret void, !dbg !4379
}

; core::ptr::drop_in_place<std::thread::scoped::ScopeData>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr51drop_in_place$LT$std..thread..scoped..ScopeData$GT$17h26f8f5924a34f6feE"(%"std::thread::scoped::ScopeData"* %_1) unnamed_addr #1 !dbg !4380 {
start:
  %_1.dbg.spill = alloca %"std::thread::scoped::ScopeData"*, align 8
  store %"std::thread::scoped::ScopeData"* %_1, %"std::thread::scoped::ScopeData"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::scoped::ScopeData"** %_1.dbg.spill, metadata !4385, metadata !DIExpression()), !dbg !4386
  %0 = getelementptr inbounds %"std::thread::scoped::ScopeData", %"std::thread::scoped::ScopeData"* %_1, i32 0, i32 1, !dbg !4386
; call core::ptr::drop_in_place<std::thread::Thread>
  call void @"_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E"(i64** %0), !dbg !4386
  br label %bb1, !dbg !4386

bb1:                                              ; preds = %start
  ret void, !dbg !4386
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hb8150e1137fc4c65E"({ i8*, i64 }* %_1) unnamed_addr #1 !dbg !4387 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !4392, metadata !DIExpression()), !dbg !4395
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hd818a3818618aa12E"({ i8*, i64 }* align 8 %_1), !dbg !4395
  br label %bb1, !dbg !4395

bb1:                                              ; preds = %start
  ret void, !dbg !4395
}

; core::ptr::drop_in_place<std::thread::Packet<()>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr56drop_in_place$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$17h3c8e128dc6e8014eE"(%"std::thread::Packet<()>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4396 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"std::thread::Packet<()>"*, align 8
  store %"std::thread::Packet<()>"* %_1, %"std::thread::Packet<()>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::Packet<()>"** %_1.dbg.spill, metadata !4401, metadata !DIExpression()), !dbg !4402
; invoke <std::thread::Packet<T> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$std..thread..Packet$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0ac411b30db094d6E"(%"std::thread::Packet<()>"* align 8 %_1)
          to label %bb6 unwind label %cleanup, !dbg !4402

bb4:                                              ; preds = %cleanup
  %1 = bitcast %"std::thread::Packet<()>"* %_1 to i64**, !dbg !4402
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::thread::scoped::ScopeData>>>
  invoke void @"_ZN4core3ptr103drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..thread..scoped..ScopeData$GT$$GT$$GT$17hbfb71188870deae6E"(i64** %1) #18
          to label %bb3 unwind label %abort, !dbg !4402

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb6:                                              ; preds = %start
  %7 = bitcast %"std::thread::Packet<()>"* %_1 to i64**, !dbg !4402
; invoke core::ptr::drop_in_place<core::option::Option<alloc::sync::Arc<std::thread::scoped::ScopeData>>>
  invoke void @"_ZN4core3ptr103drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..thread..scoped..ScopeData$GT$$GT$$GT$17hbfb71188870deae6E"(i64** %7)
          to label %bb5 unwind label %cleanup1, !dbg !4402

abort:                                            ; preds = %bb3, %bb4
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !4402
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !4402
  unreachable, !dbg !4402

bb3:                                              ; preds = %cleanup1, %bb4
  %9 = getelementptr inbounds %"std::thread::Packet<()>", %"std::thread::Packet<()>"* %_1, i32 0, i32 2, !dbg !4402
; invoke core::ptr::drop_in_place<core::cell::UnsafeCell<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>>
  invoke void @"_ZN4core3ptr188drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$$GT$17hc78d76de909ca9f3E"(%"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %9) #18
          to label %bb1 unwind label %abort, !dbg !4402

cleanup1:                                         ; preds = %bb6
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb3

bb5:                                              ; preds = %bb6
  %15 = getelementptr inbounds %"std::thread::Packet<()>", %"std::thread::Packet<()>"* %_1, i32 0, i32 2, !dbg !4402
; call core::ptr::drop_in_place<core::cell::UnsafeCell<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>>
  call void @"_ZN4core3ptr188drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$$GT$17hc78d76de909ca9f3E"(%"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %15), !dbg !4402
  br label %bb2, !dbg !4402

bb1:                                              ; preds = %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4402
  %17 = load i8*, i8** %16, align 8, !dbg !4402
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4402
  %19 = load i32, i32* %18, align 8, !dbg !4402
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !4402
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !4402
  resume { i8*, i32 } %21, !dbg !4402

bb2:                                              ; preds = %bb5
  ret void, !dbg !4402
}

; core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17h445945d9cf05a5b5E"(i8** %_1) unnamed_addr #1 !dbg !4403 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !4408, metadata !DIExpression()), !dbg !4411
; call <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
  call void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83e5aaa269437a1eE"(i8** align 8 %_1), !dbg !4411
  br label %bb1, !dbg !4411

bb1:                                              ; preds = %start
  ret void, !dbg !4411
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h2b0d866b28456dfcE"({ [0 x i8]*, i64 }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4412 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %_1, { [0 x i8]*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %_1.dbg.spill, metadata !4417, metadata !DIExpression()), !dbg !4420
  br label %bb3, !dbg !4420

bb3:                                              ; preds = %start
  %1 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !4420
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !4420
  %3 = load i8*, i8** %2, align 8, !dbg !4420, !nonnull !28, !noundef !28
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !4420
  %5 = load i64, i64* %4, align 8, !dbg !4420
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h8cf202bc5c4056e9E(i8* %3, i64 %5), !dbg !4420
  br label %bb1, !dbg !4420

bb4:                                              ; No predecessors!
  %6 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !4420
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0, !dbg !4420
  %8 = load i8*, i8** %7, align 8, !dbg !4420, !nonnull !28, !noundef !28
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1, !dbg !4420
  %10 = load i64, i64* %9, align 8, !dbg !4420
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17h8cf202bc5c4056e9E(i8* %8, i64 %10) #18
          to label %bb2 unwind label %abort, !dbg !4420

abort:                                            ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !4420
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !4420
  unreachable, !dbg !4420

bb2:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4420
  %13 = load i8*, i8** %12, align 8, !dbg !4420
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4420
  %15 = load i32, i32* %14, align 8, !dbg !4420
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !4420
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !4420
  resume { i8*, i32 } %17, !dbg !4420

bb1:                                              ; preds = %bb3
  ret void, !dbg !4420
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h91748d5b3bafe347E"({ i64*, i64 }* %_1) unnamed_addr #1 !dbg !4421 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !4426, metadata !DIExpression()), !dbg !4429
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5d708344fc23db98E"({ i64*, i64 }* align 8 %_1), !dbg !4429
  br label %bb1, !dbg !4429

bb1:                                              ; preds = %start
  ret void, !dbg !4429
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Inner>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr63drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Inner$GT$$GT$17h5eef1ee04e5a2846E"(i64** %_1) unnamed_addr #1 !dbg !4430 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4435, metadata !DIExpression()), !dbg !4438
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0cc1e64477d80e45E"(i64** align 8 %_1), !dbg !4438
  br label %bb1, !dbg !4438

bb1:                                              ; preds = %start
  ret void, !dbg !4438
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::thread::Inner>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr64drop_in_place$LT$alloc..sync..Weak$LT$std..thread..Inner$GT$$GT$17h9c237f6c4bc17438E"(i64** %_1) unnamed_addr #1 !dbg !4439 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4447, metadata !DIExpression()), !dbg !4450
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h238b41a7943c0222E"(i64** align 8 %_1), !dbg !4450
  br label %bb1, !dbg !4450

bb1:                                              ; preds = %start
  ret void, !dbg !4450
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17h0c36ec7cf8f2655bE"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #1 !dbg !4451 {
start:
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 0
  store {}* %_1.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 1
  store [3 x i64]* %_1.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %_1.dbg.spill, metadata !4459, metadata !DIExpression()), !dbg !4462
  %2 = bitcast [3 x i64]* %_1.1 to void ({}*)**, !dbg !4462
  %3 = getelementptr inbounds void ({}*)*, void ({}*)** %2, i64 0, !dbg !4462
  %4 = load void ({}*)*, void ({}*)** %3, align 8, !dbg !4462, !invariant.load !28, !nonnull !28
  call void %4({}* %_1.0), !dbg !4462
  br label %bb1, !dbg !4462

bb1:                                              ; preds = %start
  ret void, !dbg !4462
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hd47ed77b6af049f5E"(%"std::io::error::Custom"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4463 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"std::io::error::Custom"**, align 8
  store %"std::io::error::Custom"** %_1, %"std::io::error::Custom"*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"*** %_1.dbg.spill, metadata !4468, metadata !DIExpression()), !dbg !4471
  %1 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !4471
  %2 = bitcast i64** %1 to %"std::io::error::Custom"**, !dbg !4471
  %3 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %2, align 8, !dbg !4471
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h646f367055c54bd9E"(%"std::io::error::Custom"* %3)
          to label %bb3 unwind label %cleanup, !dbg !4471

bb4:                                              ; preds = %cleanup
  %4 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !4471
  %5 = load i64*, i64** %4, align 8, !dbg !4471, !nonnull !28, !noundef !28
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17h9d07eb48ae969750E(i64* %5) #18
          to label %bb2 unwind label %abort, !dbg !4471

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %11 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !4471
  %12 = load i64*, i64** %11, align 8, !dbg !4471, !nonnull !28, !noundef !28
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h9d07eb48ae969750E(i64* %12), !dbg !4471
  br label %bb1, !dbg !4471

abort:                                            ; preds = %bb4
  %13 = landingpad { i8*, i32 }
          cleanup, !dbg !4471
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !4471
  unreachable, !dbg !4471

bb2:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4471
  %15 = load i8*, i8** %14, align 8, !dbg !4471
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4471
  %17 = load i32, i32* %16, align 8, !dbg !4471
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !4471
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !4471
  resume { i8*, i32 } %19, !dbg !4471

bb1:                                              ; preds = %bb3
  ret void, !dbg !4471
}

; core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h56656916cbe5ba34E"(%"core::option::Option<alloc::string::String>"* %_1) unnamed_addr #1 !dbg !4472 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<alloc::string::String>"*, align 8
  store %"core::option::Option<alloc::string::String>"* %_1, %"core::option::Option<alloc::string::String>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"** %_1.dbg.spill, metadata !4477, metadata !DIExpression()), !dbg !4480
  %0 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to {}**, !dbg !4480
  %1 = load {}*, {}** %0, align 8, !dbg !4480
  %2 = icmp eq {}* %1, null, !dbg !4480
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4480
  %3 = icmp eq i64 %_2, 0, !dbg !4480
  br i1 %3, label %bb1, label %bb2, !dbg !4480

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4480

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<alloc::string::String>"* %_1 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !4480
  %5 = bitcast %"core::option::Option<alloc::string::String>::Some"* %4 to %"alloc::string::String"*, !dbg !4480
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h51ef8ea552bdd591E"(%"alloc::string::String"* %5), !dbg !4480
  br label %bb1, !dbg !4480
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::thread::scoped::ScopeData>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr75drop_in_place$LT$alloc..sync..Arc$LT$std..thread..scoped..ScopeData$GT$$GT$17h9396d4991e98c8f7E"(i64** %_1) unnamed_addr #1 !dbg !4481 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4486, metadata !DIExpression()), !dbg !4487
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h09b34d7a0183b9e1E"(i64** align 8 %_1), !dbg !4487
  br label %bb1, !dbg !4487

bb1:                                              ; preds = %start
  ret void, !dbg !4487
}

; core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17h689b97fbeeaf5d5aE"({ i8*, i64 }* %_1) unnamed_addr #1 !dbg !4488 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !4493, metadata !DIExpression()), !dbg !4496
  %0 = bitcast { i8*, i64 }* %_1 to {}**, !dbg !4496
  %1 = load {}*, {}** %0, align 8, !dbg !4496
  %2 = icmp eq {}* %1, null, !dbg !4496
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4496
  %3 = icmp eq i64 %_2, 0, !dbg !4496
  br i1 %3, label %bb1, label %bb2, !dbg !4496

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4496

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17haac439215efbdba1E"({ i8*, i64 }* %_1), !dbg !4496
  br label %bb1, !dbg !4496
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::thread::scoped::ScopeData>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr76drop_in_place$LT$alloc..sync..Weak$LT$std..thread..scoped..ScopeData$GT$$GT$17h8b96fa35114eb1c4E"(i64** %_1) unnamed_addr #1 !dbg !4497 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4505, metadata !DIExpression()), !dbg !4508
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48f4b0751265aadcE"(i64** align 8 %_1), !dbg !4508
  br label %bb1, !dbg !4508

bb1:                                              ; preds = %start
  ret void, !dbg !4508
}

; core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::vec::Vec<u8>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr76drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h629af5f9a30b8379E"(%"core::cell::UnsafeCell<alloc::vec::Vec<u8>>"* %_1) unnamed_addr #1 !dbg !4509 {
start:
  %_1.dbg.spill = alloca %"core::cell::UnsafeCell<alloc::vec::Vec<u8>>"*, align 8
  store %"core::cell::UnsafeCell<alloc::vec::Vec<u8>>"* %_1, %"core::cell::UnsafeCell<alloc::vec::Vec<u8>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<alloc::vec::Vec<u8>>"** %_1.dbg.spill, metadata !4514, metadata !DIExpression()), !dbg !4517
  %0 = bitcast %"core::cell::UnsafeCell<alloc::vec::Vec<u8>>"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !4517
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hbabdf85196cda4deE"(%"alloc::vec::Vec<u8>"* %0), !dbg !4517
  br label %bb1, !dbg !4517

bb1:                                              ; preds = %start
  ret void, !dbg !4517
}

; core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr77drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17hdaff1c604a5024deE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>"* %_1) unnamed_addr #1 !dbg !4518 {
start:
  %_1.dbg.spill = alloca %"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>"*, align 8
  store %"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>"* %_1, %"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>"** %_1.dbg.spill, metadata !4523, metadata !DIExpression()), !dbg !4524
  %0 = getelementptr inbounds %"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>", %"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>"* %_1, i32 0, i32 3, !dbg !4524
; call core::ptr::drop_in_place<core::cell::UnsafeCell<alloc::vec::Vec<u8>>>
  call void @"_ZN4core3ptr76drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h629af5f9a30b8379E"(%"core::cell::UnsafeCell<alloc::vec::Vec<u8>>"* %0), !dbg !4524
  br label %bb1, !dbg !4524

bb1:                                              ; preds = %start
  ret void, !dbg !4524
}

; core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E"(i64** %_1) unnamed_addr #1 !dbg !4525 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4530, metadata !DIExpression()), !dbg !4533
; call <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
  call void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he236f3fc22265f07E"(i64** align 8 %_1), !dbg !4533
  br label %bb1, !dbg !4533

bb1:                                              ; preds = %start
  ret void, !dbg !4533
}

; core::ptr::drop_in_place<alloc::sync::Weak<std::thread::Packet<()>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr81drop_in_place$LT$alloc..sync..Weak$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17ha5187d1350988a8cE"(i64** %_1) unnamed_addr #1 !dbg !4534 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4542, metadata !DIExpression()), !dbg !4545
; call <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
  call void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8eec142c20276135E"(i64** align 8 %_1), !dbg !4545
  br label %bb1, !dbg !4545

bb1:                                              ; preds = %start
  ret void, !dbg !4545
}

; core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h38ccdb4d7617198cE"(i8** %_1) unnamed_addr #1 !dbg !4546 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !4551, metadata !DIExpression()), !dbg !4554
  %0 = bitcast i8** %_1 to {}**, !dbg !4554
  %1 = load {}*, {}** %0, align 8, !dbg !4554
  %2 = icmp eq {}* %1, null, !dbg !4554
  %_2 = select i1 %2, i64 0, i64 1, !dbg !4554
  %3 = icmp eq i64 %_2, 0, !dbg !4554
  br i1 %3, label %bb1, label %bb2, !dbg !4554

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4554

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h95925069f7247ee8E"(i8** %_1), !dbg !4554
  br label %bb1, !dbg !4554
}

; core::ptr::drop_in_place<alloc::sync::ArcInner<std::thread::Packet<()>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr85drop_in_place$LT$alloc..sync..ArcInner$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17hb9aea8892d5e48f5E"(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_1) unnamed_addr #1 !dbg !4555 {
start:
  %_1.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_1, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %_1.dbg.spill, metadata !4559, metadata !DIExpression()), !dbg !4560
  %0 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_1, i32 0, i32 2, !dbg !4560
; call core::ptr::drop_in_place<std::thread::Packet<()>>
  call void @"_ZN4core3ptr56drop_in_place$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$17h3c8e128dc6e8014eE"(%"std::thread::Packet<()>"* %0), !dbg !4560
  br label %bb1, !dbg !4560

bb1:                                              ; preds = %start
  ret void, !dbg !4560
}

; core::ptr::drop_in_place<core::pin::Pin<alloc::sync::Arc<std::thread::Inner>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr85drop_in_place$LT$core..pin..Pin$LT$alloc..sync..Arc$LT$std..thread..Inner$GT$$GT$$GT$17h82d80a8a0c1e25faE"(i64** %_1) unnamed_addr #1 !dbg !4561 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4566, metadata !DIExpression()), !dbg !4569
; call core::ptr::drop_in_place<alloc::sync::Arc<std::thread::Inner>>
  call void @"_ZN4core3ptr63drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Inner$GT$$GT$17h5eef1ee04e5a2846E"(i64** %_1), !dbg !4569
  br label %bb1, !dbg !4569

bb1:                                              ; preds = %start
  ret void, !dbg !4569
}

; core::ptr::drop_in_place<std::rt::lang_start<()>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hd98d205bccc6afd4E"(i64** %_1) unnamed_addr #0 !dbg !4570 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !4574, metadata !DIExpression()), !dbg !4577
  ret void, !dbg !4577
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h6ac0428d28465f0cE"(i8* %ptr) unnamed_addr #0 !dbg !4578 {
start:
  %ptr.dbg.spill2 = alloca i8*, align 8
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_5 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4595, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !4597, metadata !DIExpression()), !dbg !4604
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !4616
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !4614, metadata !DIExpression()), !dbg !4617
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !4617
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !4618, metadata !DIExpression()), !dbg !4625
  %3 = bitcast {}** %1 to i64*, !dbg !4627
  store i64 0, i64* %3, align 8, !dbg !4627
  %data_address = load {}*, {}** %1, align 8, !dbg !4627
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !4627
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !4603, metadata !DIExpression()), !dbg !4604
  br label %bb4, !dbg !4627

bb4:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to {}**, !dbg !4604
  store {}* %data_address, {}** %4, align 8, !dbg !4604
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !4604
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !4604
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to i8*, !dbg !4604
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !4604
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to i8**, !dbg !4604
  %other = load i8*, i8** %8, align 8, !dbg !4604
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !4604
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !4624, metadata !DIExpression()), !dbg !4625
  %9 = icmp eq i8* %ptr, %other, !dbg !4625
  %10 = zext i1 %9 to i8, !dbg !4625
  store i8 %10, i8* %0, align 1, !dbg !4625
  %11 = load i8, i8* %0, align 1, !dbg !4625, !range !1099, !noundef !28
  %_3 = trunc i8 %11 to i1, !dbg !4625
  br label %bb5, !dbg !4625

bb5:                                              ; preds = %bb4
  %_2 = xor i1 %_3, true, !dbg !4635
  br i1 %_2, label %bb1, label %bb2, !dbg !4635

bb2:                                              ; preds = %bb5
  %12 = bitcast i8** %2 to {}**, !dbg !4636
  store {}* null, {}** %12, align 8, !dbg !4636
  br label %bb3, !dbg !4637

bb1:                                              ; preds = %bb5
  store i8* %ptr, i8** %ptr.dbg.spill2, align 8, !dbg !4638
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill2, metadata !4639, metadata !DIExpression()), !dbg !4642
  store i8* %ptr, i8** %_5, align 8, !dbg !4642
  %13 = load i8*, i8** %_5, align 8, !dbg !4644, !nonnull !28, !noundef !28
  store i8* %13, i8** %2, align 8, !dbg !4644
  br label %bb3, !dbg !4637

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8*, i8** %2, align 8, !dbg !4645
  ret i8* %14, !dbg !4645
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h8e564f303293f592E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4646 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %_1, { {}*, [3 x i64]* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %_1.dbg.spill, metadata !4651, metadata !DIExpression()), !dbg !4652
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4652
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*, !dbg !4652
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !4652
  %4 = load {}*, {}** %3, align 8, !dbg !4652
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !4652
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !dbg !4652, !nonnull !28, !align !1582, !noundef !28
  %7 = bitcast [3 x i64]* %6 to void ({}*)**, !dbg !4652
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0, !dbg !4652
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !dbg !4652, !invariant.load !28, !nonnull !28
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup, !dbg !4652

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4652
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0, !dbg !4652
  %12 = load i8*, i8** %11, align 8, !dbg !4652, !nonnull !28, !noundef !28
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1, !dbg !4652
  %14 = load i64*, i64** %13, align 8, !dbg !4652, !nonnull !28, !align !1582, !noundef !28
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hcb2f4858f732f2d5E(i8* %12, i64* align 8 %14) #18
          to label %bb2 unwind label %abort, !dbg !4652

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !4652
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0, !dbg !4652
  %22 = load i8*, i8** %21, align 8, !dbg !4652, !nonnull !28, !noundef !28
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1, !dbg !4652
  %24 = load i64*, i64** %23, align 8, !dbg !4652, !nonnull !28, !align !1582, !noundef !28
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hcb2f4858f732f2d5E(i8* %22, i64* align 8 %24), !dbg !4652
  br label %bb1, !dbg !4652

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !4652
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !4652
  unreachable, !dbg !4652

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4652
  %27 = load i8*, i8** %26, align 8, !dbg !4652
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4652
  %29 = load i32, i32* %28, align 8, !dbg !4652
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !4652
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !4652
  resume { i8*, i32 } %31, !dbg !4652

bb1:                                              ; preds = %bb3
  ret void, !dbg !4652
}

; core::ptr::drop_in_place<dyn std::error::Error+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h38c8e5b9365ee0caE"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #1 !dbg !4653 {
start:
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 0
  store {}* %_1.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 1
  store [3 x i64]* %_1.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %_1.dbg.spill, metadata !4661, metadata !DIExpression()), !dbg !4664
  %2 = bitcast [3 x i64]* %_1.1 to void ({}*)**, !dbg !4664
  %3 = getelementptr inbounds void ({}*)*, void ({}*)** %2, i64 0, !dbg !4664
  %4 = load void ({}*)*, void ({}*)** %3, align 8, !dbg !4664, !invariant.load !28, !nonnull !28
  call void %4({}* %_1.0), !dbg !4664
  br label %bb1, !dbg !4664

bb1:                                              ; preds = %start
  ret void, !dbg !4664
}

; core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr92drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..sys..unix..stdio..Stderr$GT$$GT$17h3dab90b2d47f43a0E"({ i8*, i8* }* %_1) unnamed_addr #1 !dbg !4665 {
start:
  %_1.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %_1, { i8*, i8* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %_1.dbg.spill, metadata !4670, metadata !DIExpression()), !dbg !4673
  %0 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_1, i32 0, i32 1, !dbg !4673
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h38ccdb4d7617198cE"(i8** %0), !dbg !4673
  br label %bb1, !dbg !4673

bb1:                                              ; preds = %start
  ret void, !dbg !4673
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @_ZN4core3str11validations15next_code_point17h4a2ce66f7591b49eE({ i8*, i8* }* align 8 %bytes) unnamed_addr #0 !dbg !4674 {
start:
  %byte.dbg.spill16 = alloca i8, align 1
  %ch.dbg.spill15 = alloca i32, align 4
  %w.dbg.spill = alloca i8, align 1
  %val.dbg.spill14 = alloca i8*, align 8
  %y_z.dbg.spill = alloca i32, align 4
  %byte.dbg.spill12 = alloca i8, align 1
  %ch.dbg.spill11 = alloca i32, align 4
  %z.dbg.spill = alloca i8, align 1
  %val.dbg.spill9 = alloca i8*, align 8
  %byte.dbg.spill7 = alloca i8, align 1
  %ch.dbg.spill = alloca i32, align 4
  %y.dbg.spill = alloca i8, align 1
  %val.dbg.spill6 = alloca i8*, align 8
  %init.dbg.spill = alloca i32, align 4
  %byte.dbg.spill = alloca i8, align 1
  %x.dbg.spill = alloca i8, align 1
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill1 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %bytes.dbg.spill = alloca { i8*, i8* }*, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %ch = alloca i32, align 4
  %self2 = alloca i8*, align 8
  %self = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i8*, i8* }* %bytes, { i8*, i8* }** %bytes.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %bytes.dbg.spill, metadata !4701, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.declare(metadata i8** %self, metadata !4734, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !4704, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill1, metadata !4774, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !4783, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4723, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !4795, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !4804, metadata !DIExpression()), !dbg !4811
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %1 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2695af24d0687f28E"({ i8*, i8* }* align 8 %bytes), !dbg !4772
  store i8* %1, i8** %self, align 8, !dbg !4772
  br label %bb1, !dbg !4772

bb1:                                              ; preds = %start
  %2 = bitcast i8** %self to {}**, !dbg !4771
  %3 = load {}*, {}** %2, align 8, !dbg !4771
  %4 = icmp eq {}* %3, null, !dbg !4771
  %_51 = select i1 %4, i64 0, i64 1, !dbg !4771
  switch i64 %_51, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !4771

bb18:                                             ; preds = %bb1
  unreachable, !dbg !4771

bb17:                                             ; preds = %bb1
  %5 = bitcast i8** %_4 to {}**, !dbg !4771
  store {}* null, {}** %5, align 8, !dbg !4771
  br label %bb2, !dbg !4771

bb19:                                             ; preds = %bb1
  %v = load i8*, i8** %self, align 8, !dbg !4771, !nonnull !28, !align !1104, !noundef !28
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !4771
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !4768, metadata !DIExpression()), !dbg !4813
  store i8* %v, i8** %_4, align 8, !dbg !4813
  br label %bb2, !dbg !4771

bb2:                                              ; preds = %bb17, %bb19
  %6 = bitcast i8** %_4 to {}**, !dbg !4772
  %7 = load {}*, {}** %6, align 8, !dbg !4772
  %8 = icmp eq {}* %7, null, !dbg !4772
  %_7 = select i1 %8, i64 1, i64 0, !dbg !4772
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !4772

bb4:                                              ; preds = %bb2
  unreachable, !dbg !4772

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !dbg !4772, !nonnull !28, !align !1104, !noundef !28
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !4772
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !4717, metadata !DIExpression()), !dbg !4814
  %x = load i8, i8* %val, align 1, !dbg !4815
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !4815
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !4702, metadata !DIExpression()), !dbg !4816
  %_11 = icmp ult i8 %x, -128, !dbg !4817
  br i1 %_11, label %bb6, label %bb7, !dbg !4817

bb5:                                              ; preds = %bb2
  %9 = bitcast { i32, i32 }* %0 to i32*, !dbg !4781
  store i32 0, i32* %9, align 4, !dbg !4781
  br label %bb15, !dbg !4818

bb15:                                             ; preds = %bb6, %bb5
  br label %bb16, !dbg !4820

bb7:                                              ; preds = %bb3
  store i8 %x, i8* %byte.dbg.spill, align 1, !dbg !4821
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !4822, metadata !DIExpression()), !dbg !4828
  %_55 = and i8 %x, 31, !dbg !4828
  %init = zext i8 %_55 to i32, !dbg !4828
  store i32 %init, i32* %init.dbg.spill, align 4, !dbg !4828
  call void @llvm.dbg.declare(metadata i32* %init.dbg.spill, metadata !4719, metadata !DIExpression()), !dbg !4830
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %10 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2695af24d0687f28E"({ i8*, i8* }* align 8 %bytes), !dbg !4793
  store i8* %10, i8** %self2, align 8, !dbg !4793
  br label %bb8, !dbg !4793

bb6:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32, !dbg !4831
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4832
  store i32 %_13, i32* %11, align 4, !dbg !4832
  %12 = bitcast { i32, i32 }* %0 to i32*, !dbg !4832
  store i32 1, i32* %12, align 4, !dbg !4832
  br label %bb15, !dbg !4833

bb16:                                             ; preds = %bb14, %bb15
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !4820
  %14 = load i32, i32* %13, align 4, !dbg !4820, !range !4835, !noundef !28
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4820
  %16 = load i32, i32* %15, align 4, !dbg !4820
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0, !dbg !4820
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1, !dbg !4820
  ret { i32, i32 } %18, !dbg !4820

bb8:                                              ; preds = %bb7
  %19 = bitcast i8** %self2 to {}**, !dbg !4792
  %20 = load {}*, {}** %19, align 8, !dbg !4792
  %21 = icmp eq {}* %20, null, !dbg !4792
  %_59 = select i1 %21, i64 0, i64 1, !dbg !4792
  switch i64 %_59, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ], !dbg !4792

bb21:                                             ; preds = %bb8
  unreachable, !dbg !4792

bb20:                                             ; preds = %bb8
  unreachable, !dbg !4836

bb22:                                             ; preds = %bb8
  %val5 = load i8*, i8** %self2, align 8, !dbg !4792, !nonnull !28, !align !1104, !noundef !28
  store i8* %val5, i8** %val.dbg.spill6, align 8, !dbg !4792
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill6, metadata !4789, metadata !DIExpression()), !dbg !4840
  %y = load i8, i8* %val5, align 1, !dbg !4841
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !4841
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !4721, metadata !DIExpression()), !dbg !4842
  store i32 %init, i32* %ch.dbg.spill, align 4, !dbg !4843
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !4844, metadata !DIExpression()), !dbg !4850
  store i8 %y, i8* %byte.dbg.spill7, align 1, !dbg !4852
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill7, metadata !4849, metadata !DIExpression()), !dbg !4850
  %_60 = shl i32 %init, 6, !dbg !4850
  %_63 = and i8 %y, 63, !dbg !4850
  %_62 = zext i8 %_63 to i32, !dbg !4850
  %22 = or i32 %_60, %_62, !dbg !4850
  store i32 %22, i32* %ch, align 4, !dbg !4850
  %_24 = icmp uge i8 %x, -32, !dbg !4853
  br i1 %_24, label %bb9, label %bb14, !dbg !4853

bb14:                                             ; preds = %bb13, %bb22
  %_50 = load i32, i32* %ch, align 4, !dbg !4854
  %23 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4855
  store i32 %_50, i32* %23, align 4, !dbg !4855
  %24 = bitcast { i32, i32 }* %0 to i32*, !dbg !4855
  store i32 1, i32* %24, align 4, !dbg !4855
  br label %bb16, !dbg !4820

bb9:                                              ; preds = %bb22
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %25 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2695af24d0687f28E"({ i8*, i8* }* align 8 %bytes), !dbg !4803
  store i8* %25, i8** %self3, align 8, !dbg !4803
  br label %bb10, !dbg !4803

bb10:                                             ; preds = %bb9
  %26 = bitcast i8** %self3 to {}**, !dbg !4802
  %27 = load {}*, {}** %26, align 8, !dbg !4802
  %28 = icmp eq {}* %27, null, !dbg !4802
  %_66 = select i1 %28, i64 0, i64 1, !dbg !4802
  switch i64 %_66, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ], !dbg !4802

bb24:                                             ; preds = %bb10
  unreachable, !dbg !4802

bb23:                                             ; preds = %bb10
  unreachable, !dbg !4856

bb25:                                             ; preds = %bb10
  %val8 = load i8*, i8** %self3, align 8, !dbg !4802, !nonnull !28, !align !1104, !noundef !28
  store i8* %val8, i8** %val.dbg.spill9, align 8, !dbg !4802
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill9, metadata !4799, metadata !DIExpression()), !dbg !4860
  %z = load i8, i8* %val8, align 1, !dbg !4861
  store i8 %z, i8* %z.dbg.spill, align 1, !dbg !4861
  call void @llvm.dbg.declare(metadata i8* %z.dbg.spill, metadata !4725, metadata !DIExpression()), !dbg !4862
  %_32 = and i8 %y, 63, !dbg !4863
  %ch10 = zext i8 %_32 to i32, !dbg !4863
  store i32 %ch10, i32* %ch.dbg.spill11, align 4, !dbg !4863
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill11, metadata !4864, metadata !DIExpression()), !dbg !4868
  store i8 %z, i8* %byte.dbg.spill12, align 1, !dbg !4870
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill12, metadata !4867, metadata !DIExpression()), !dbg !4868
  %_67 = shl i32 %ch10, 6, !dbg !4868
  %_70 = and i8 %z, 63, !dbg !4868
  %_69 = zext i8 %_70 to i32, !dbg !4868
  %y_z = or i32 %_67, %_69, !dbg !4868
  store i32 %y_z, i32* %y_z.dbg.spill, align 4, !dbg !4868
  call void @llvm.dbg.declare(metadata i32* %y_z.dbg.spill, metadata !4727, metadata !DIExpression()), !dbg !4871
  %_35 = shl i32 %init, 12, !dbg !4872
  %29 = or i32 %_35, %y_z, !dbg !4873
  store i32 %29, i32* %ch, align 4, !dbg !4873
  %_38 = icmp uge i8 %x, -16, !dbg !4874
  br i1 %_38, label %bb11, label %bb13, !dbg !4874

bb13:                                             ; preds = %bb28, %bb25
  br label %bb14, !dbg !4875

bb11:                                             ; preds = %bb25
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %30 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2695af24d0687f28E"({ i8*, i8* }* align 8 %bytes), !dbg !4812
  store i8* %30, i8** %self4, align 8, !dbg !4812
  br label %bb12, !dbg !4812

bb12:                                             ; preds = %bb11
  %31 = bitcast i8** %self4 to {}**, !dbg !4811
  %32 = load {}*, {}** %31, align 8, !dbg !4811
  %33 = icmp eq {}* %32, null, !dbg !4811
  %_73 = select i1 %33, i64 0, i64 1, !dbg !4811
  switch i64 %_73, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ], !dbg !4811

bb27:                                             ; preds = %bb12
  unreachable, !dbg !4811

bb26:                                             ; preds = %bb12
  unreachable, !dbg !4876

bb28:                                             ; preds = %bb12
  %val13 = load i8*, i8** %self4, align 8, !dbg !4811, !nonnull !28, !align !1104, !noundef !28
  store i8* %val13, i8** %val.dbg.spill14, align 8, !dbg !4811
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill14, metadata !4808, metadata !DIExpression()), !dbg !4880
  %w = load i8, i8* %val13, align 1, !dbg !4881
  store i8 %w, i8* %w.dbg.spill, align 1, !dbg !4881
  call void @llvm.dbg.declare(metadata i8* %w.dbg.spill, metadata !4729, metadata !DIExpression()), !dbg !4882
  %_45 = and i32 %init, 7, !dbg !4883
  %_44 = shl i32 %_45, 18, !dbg !4883
  store i32 %y_z, i32* %ch.dbg.spill15, align 4, !dbg !4884
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill15, metadata !4885, metadata !DIExpression()), !dbg !4889
  store i8 %w, i8* %byte.dbg.spill16, align 1, !dbg !4891
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill16, metadata !4888, metadata !DIExpression()), !dbg !4889
  %_74 = shl i32 %y_z, 6, !dbg !4889
  %_77 = and i8 %w, 63, !dbg !4889
  %_76 = zext i8 %_77 to i32, !dbg !4889
  %_47 = or i32 %_74, %_76, !dbg !4889
  %34 = or i32 %_44, %_47, !dbg !4892
  store i32 %34, i32* %ch, align 4, !dbg !4892
  br label %bb13, !dbg !4893
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hea636987af350794E"([0 x i8]* align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !4894 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %index.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4900, metadata !DIExpression()), !dbg !4904
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !4901, metadata !DIExpression()), !dbg !4905
  %5 = icmp eq i64 %index, 0, !dbg !4906
  br i1 %5, label %bb1, label %bb2, !dbg !4906

bb1:                                              ; preds = %start
  store i8 1, i8* %2, align 1, !dbg !4907
  br label %bb7, !dbg !4908

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4909
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !4909
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4909
  store i64 %self.1, i64* %7, align 8, !dbg !4909
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4910, metadata !DIExpression()), !dbg !4915
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !4915
  store [0 x i8]* %self.0, [0 x i8]** %8, align 8, !dbg !4915
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !4915
  store i64 %self.1, i64* %9, align 8, !dbg !4915
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !4915
  %_6.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !4915, !nonnull !28, !align !1104, !noundef !28
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !4915
  %_6.1 = load i64, i64* %11, align 8, !dbg !4915
  br label %bb8, !dbg !4915

bb8:                                              ; preds = %bb2
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !4909
  store [0 x i8]* %_6.0, [0 x i8]** %12, align 8, !dbg !4909
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !4909
  store i64 %_6.1, i64* %13, align 8, !dbg !4909
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !4916, metadata !DIExpression()), !dbg !4925
  store i64 %index, i64* %index.dbg.spill3, align 8, !dbg !4926
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill3, metadata !4922, metadata !DIExpression()), !dbg !4925
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %14 = call align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h585e02aa47efab1bE"(i64 %index, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !4925
  store i8* %14, i8** %_4, align 8, !dbg !4925
  br label %bb9, !dbg !4925

bb9:                                              ; preds = %bb8
  %15 = bitcast i8** %_4 to {}**, !dbg !4909
  %16 = load {}*, {}** %15, align 8, !dbg !4909
  %17 = icmp eq {}* %16, null, !dbg !4909
  %_9 = select i1 %17, i64 0, i64 1, !dbg !4909
  switch i64 %_9, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ], !dbg !4927

bb4:                                              ; preds = %bb9
  unreachable, !dbg !4909

bb5:                                              ; preds = %bb9
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !4928
  store [0 x i8]* %self.0, [0 x i8]** %18, align 8, !dbg !4928
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !4928
  store i64 %self.1, i64* %19, align 8, !dbg !4928
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !4929, metadata !DIExpression()), !dbg !4934
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !4934
  store [0 x i8]* %self.0, [0 x i8]** %20, align 8, !dbg !4934
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !4934
  store i64 %self.1, i64* %21, align 8, !dbg !4934
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !4935, metadata !DIExpression()), !dbg !4938
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !4938
  store [0 x i8]* %self.0, [0 x i8]** %22, align 8, !dbg !4938
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !4938
  store i64 %self.1, i64* %23, align 8, !dbg !4938
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !4938
  %_22.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !4938, !nonnull !28, !align !1104, !noundef !28
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !4938
  %_22.1 = load i64, i64* %25, align 8, !dbg !4938
  br label %bb10, !dbg !4938

bb3:                                              ; preds = %bb9
  %_15 = load i8*, i8** %_4, align 8, !dbg !4940, !nonnull !28, !align !1104, !noundef !28
  %b = load i8, i8* %_15, align 1, !dbg !4940
  store i8 %b, i8* %b.dbg.spill, align 1, !dbg !4940
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !4902, metadata !DIExpression()), !dbg !4941
  store i8 %b, i8* %self.dbg.spill4, align 1, !dbg !4942
  call void @llvm.dbg.declare(metadata i8* %self.dbg.spill4, metadata !4943, metadata !DIExpression()), !dbg !4951
  %26 = icmp sge i8 %b, -64, !dbg !4951
  %27 = zext i1 %26 to i8, !dbg !4951
  store i8 %27, i8* %2, align 1, !dbg !4951
  br label %bb6, !dbg !4952

bb6:                                              ; preds = %bb10, %bb3
  br label %bb7, !dbg !4908

bb10:                                             ; preds = %bb5
  %28 = icmp eq i64 %index, %_22.1, !dbg !4953
  %29 = zext i1 %28 to i8, !dbg !4953
  store i8 %29, i8* %2, align 1, !dbg !4953
  br label %bb6, !dbg !4954

bb7:                                              ; preds = %bb1, %bb6
  %30 = load i8, i8* %2, align 1, !dbg !4908, !range !1099, !noundef !28
  %31 = trunc i8 %30 to i1, !dbg !4908
  ret i1 %31, !dbg !4908
}

; core::str::<impl str>::lines
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5lines17h3f81b67daf7ff0f0E"(%"core::str::iter::Lines"* sret(%"core::str::iter::Lines") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !4955 {
start:
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"core::str::LinesAnyMap", align 1
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_11 = alloca %"core::str::iter::SplitTerminator<char>", align 8
  %_8 = alloca %"core::str::iter::Split<char>", align 8
  %_7 = alloca %"core::str::iter::SplitInternal<char>", align 8
  %self = alloca %"core::str::iter::SplitTerminator<char>", align 8
  %_2 = alloca %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>", align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4959, metadata !DIExpression()), !dbg !4960
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitTerminator<char>"* %self, metadata !4961, metadata !DIExpression()), !dbg !4975
  call void @llvm.dbg.declare(metadata %"core::str::LinesAnyMap"* %f.dbg.spill, metadata !4971, metadata !DIExpression()), !dbg !4975
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4976
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8, !dbg !4976
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4976
  store i64 %self.1, i64* %4, align 8, !dbg !4976
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4977, metadata !DIExpression()), !dbg !4983
; call core::str::<impl str>::split
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h1a606a17e223c88aE"(%"core::str::iter::Split<char>"* sret(%"core::str::iter::Split<char>") %_8, [0 x i8]* align 1 %self.0, i64 %self.1, i32 10), !dbg !4983
  br label %bb1, !dbg !4983

bb1:                                              ; preds = %start
  %5 = bitcast %"core::str::iter::SplitInternal<char>"* %_7 to i64*, !dbg !4983
  %6 = bitcast %"core::str::iter::Split<char>"* %_8 to %"core::str::iter::SplitInternal<char>"*, !dbg !4983
  %7 = bitcast %"core::str::iter::SplitInternal<char>"* %6 to i64*, !dbg !4983
  %8 = load i64, i64* %7, align 8, !dbg !4983
  store i64 %8, i64* %5, align 8, !dbg !4983
  %9 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_7, i32 0, i32 1, !dbg !4983
  %10 = bitcast %"core::str::iter::Split<char>"* %_8 to %"core::str::iter::SplitInternal<char>"*, !dbg !4983
  %11 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %10, i32 0, i32 1, !dbg !4983
  %12 = load i64, i64* %11, align 8, !dbg !4983
  store i64 %12, i64* %9, align 8, !dbg !4983
  %13 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_7, i32 0, i32 2, !dbg !4983
  %14 = bitcast %"core::str::iter::Split<char>"* %_8 to %"core::str::iter::SplitInternal<char>"*, !dbg !4983
  %15 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %14, i32 0, i32 2, !dbg !4983
  %16 = bitcast %"core::str::pattern::CharSearcher"* %13 to i8*, !dbg !4983
  %17 = bitcast %"core::str::pattern::CharSearcher"* %15 to i8*, !dbg !4983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 48, i1 false), !dbg !4983
  %18 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_7, i32 0, i32 3, !dbg !4983
  store i8 0, i8* %18, align 8, !dbg !4983
  %19 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_7, i32 0, i32 4, !dbg !4983
  %20 = bitcast %"core::str::iter::Split<char>"* %_8 to %"core::str::iter::SplitInternal<char>"*, !dbg !4983
  %21 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %20, i32 0, i32 4, !dbg !4983
  %22 = load i8, i8* %21, align 1, !dbg !4983, !range !1099, !noundef !28
  %23 = trunc i8 %22 to i1, !dbg !4983
  %24 = zext i1 %23 to i8, !dbg !4983
  store i8 %24, i8* %19, align 1, !dbg !4983
  %25 = bitcast %"core::str::iter::SplitTerminator<char>"* %self to %"core::str::iter::SplitInternal<char>"*, !dbg !4983
  %26 = bitcast %"core::str::iter::SplitInternal<char>"* %25 to i8*, !dbg !4983
  %27 = bitcast %"core::str::iter::SplitInternal<char>"* %_7 to i8*, !dbg !4983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 72, i1 false), !dbg !4983
  %28 = bitcast %"core::str::iter::SplitTerminator<char>"* %_11 to i8*, !dbg !4975
  %29 = bitcast %"core::str::iter::SplitTerminator<char>"* %self to i8*, !dbg !4975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 72, i1 false), !dbg !4975
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hcc892045d5f8932cE"(%"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"* sret(%"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>") %_2, %"core::str::iter::SplitTerminator<char>"* %_11), !dbg !4975
  br label %bb2, !dbg !4975

bb2:                                              ; preds = %bb1
  %30 = bitcast %"core::str::iter::Lines"* %0 to %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"*, !dbg !4984
  %31 = bitcast %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"* %30 to i8*, !dbg !4984
  %32 = bitcast %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"* %_2 to i8*, !dbg !4984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 72, i1 false), !dbg !4984
  ret void, !dbg !4985
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h1a606a17e223c88aE"(%"core::str::iter::Split<char>"* sret(%"core::str::iter::Split<char>") %0, [0 x i8]* align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4986 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %pat.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca %"core::str::pattern::CharSearcher", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<char>", align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4993, metadata !DIExpression()), !dbg !4995
  store i32 %pat, i32* %pat.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %pat.dbg.spill, metadata !4994, metadata !DIExpression()), !dbg !4996
  store i8 1, i8* %_9, align 1, !dbg !4997
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4998
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !4998
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4998
  store i64 %self.1, i64* %6, align 8, !dbg !4998
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4999, metadata !DIExpression()), !dbg !5002
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5002
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !5002
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5002
  store i64 %self.1, i64* %8, align 8, !dbg !5002
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !5003, metadata !DIExpression()), !dbg !5006
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !5006
  store [0 x i8]* %self.0, [0 x i8]** %9, align 8, !dbg !5006
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !5006
  store i64 %self.1, i64* %10, align 8, !dbg !5006
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !5006
  %_11.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !5006, !nonnull !28, !align !1104, !noundef !28
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !5006
  %_11.1 = load i64, i64* %12, align 8, !dbg !5006
  br label %bb5, !dbg !5006

bb5:                                              ; preds = %start
  store i8 0, i8* %_9, align 1, !dbg !5008
; invoke <char as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h3ef22cee8b6768e4E"(%"core::str::pattern::CharSearcher"* sret(%"core::str::pattern::CharSearcher") %_6, i32 %pat, [0 x i8]* align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup, !dbg !5008

bb4:                                              ; preds = %cleanup
  %13 = load i8, i8* %_9, align 1, !dbg !5009, !range !1099, !noundef !28
  %14 = trunc i8 %13 to i1, !dbg !5009
  br i1 %14, label %bb3, label %bb2, !dbg !5009

cleanup:                                          ; preds = %bb5
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb1:                                              ; preds = %bb5
  %20 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i64*, !dbg !4997
  store i64 0, i64* %20, align 8, !dbg !4997
  %21 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 1, !dbg !4997
  store i64 %_11.1, i64* %21, align 8, !dbg !4997
  %22 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 2, !dbg !4997
  %23 = bitcast %"core::str::pattern::CharSearcher"* %22 to i8*, !dbg !4997
  %24 = bitcast %"core::str::pattern::CharSearcher"* %_6 to i8*, !dbg !4997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 48, i1 false), !dbg !4997
  %25 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 3, !dbg !4997
  store i8 1, i8* %25, align 8, !dbg !4997
  %26 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 4, !dbg !4997
  store i8 0, i8* %26, align 1, !dbg !4997
  %27 = bitcast %"core::str::iter::Split<char>"* %0 to %"core::str::iter::SplitInternal<char>"*, !dbg !5010
  %28 = bitcast %"core::str::iter::SplitInternal<char>"* %27 to i8*, !dbg !5010
  %29 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i8*, !dbg !5010
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 72, i1 false), !dbg !5010
  ret void, !dbg !5011

bb2:                                              ; preds = %bb3, %bb4
  %30 = bitcast { i8*, i32 }* %1 to i8**, !dbg !5012
  %31 = load i8*, i8** %30, align 8, !dbg !5012
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !5012
  %33 = load i32, i32* %32, align 8, !dbg !5012
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0, !dbg !5012
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1, !dbg !5012
  resume { i8*, i32 } %35, !dbg !5012

bb3:                                              ; preds = %bb4
  br label %bb2, !dbg !5009
}

; core::str::<impl str>::contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h42080b83661c834cE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %pat.0, i64 %pat.1) unnamed_addr #0 !dbg !5013 {
start:
  %pat.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5017, metadata !DIExpression()), !dbg !5021
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %pat.dbg.spill, i32 0, i32 0
  store [0 x i8]* %pat.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %pat.dbg.spill, i32 0, i32 1
  store i64 %pat.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %pat.dbg.spill, metadata !5018, metadata !DIExpression()), !dbg !5022
; call core::str::pattern::Pattern::is_contained_in
  %4 = call zeroext i1 @_ZN4core3str7pattern7Pattern15is_contained_in17hbf42f533dd02bce9E([0 x i8]* align 1 %pat.0, i64 %pat.1, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !5023
  br label %bb1, !dbg !5023

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !5024
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h836d2853c71d789aE"(%"core::str::iter::SplitInternal<char>"* align 8 %self) unnamed_addr #0 !dbg !5025 {
start:
  %elt.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<char>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<char>"* %self, %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, metadata !5042, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !5051, metadata !DIExpression()), !dbg !5060
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4, !dbg !5062
  %2 = load i8, i8* %1, align 1, !dbg !5062, !range !1099, !noundef !28
  %_2 = trunc i8 %2 to i1, !dbg !5062
  br i1 %_2, label %bb1, label %bb2, !dbg !5062

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2, !dbg !5063
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h3521de85da7148d8E"(%"core::str::pattern::CharSearcher"* align 8 %_4), !dbg !5063
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !5063
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !5063
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0, !dbg !5063
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8, !dbg !5063
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1, !dbg !5063
  store i64 %haystack.1, i64* %5, align 8, !dbg !5063
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !5043, metadata !DIExpression()), !dbg !5064
  br label %bb3, !dbg !5063

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %0 to {}**, !dbg !5065
  store {}* null, {}** %6, align 8, !dbg !5065
  br label %bb10, !dbg !5066

bb10:                                             ; preds = %bb9, %bb1
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !5066
  %8 = load i8*, i8** %7, align 8, !dbg !5066, !align !1104
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !5066
  %10 = load i64, i64* %9, align 8, !dbg !5066
  %11 = insertvalue { i8*, i64 } undef, i8* %8, 0, !dbg !5066
  %12 = insertvalue { i8*, i64 } %11, i64 %10, 1, !dbg !5066
  ret { i8*, i64 } %12, !dbg !5066

bb3:                                              ; preds = %bb2
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2, !dbg !5067
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hd598a1d4db3a7242E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_5, %"core::str::pattern::CharSearcher"* align 8 %_6), !dbg !5067
  br label %bb4, !dbg !5067

bb4:                                              ; preds = %bb3
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to i64*, !dbg !5067
  %_7 = load i64, i64* %13, align 8, !dbg !5067, !range !1578, !noundef !28
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ], !dbg !5068

bb6:                                              ; preds = %bb4
  unreachable, !dbg !5067

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %14 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hbf1d029af409cd1fE"(%"core::str::iter::SplitInternal<char>"* align 8 %self), !dbg !5069
  store { i8*, i64 } %14, { i8*, i64 }* %0, align 8, !dbg !5069
  br label %bb8, !dbg !5069

bb7:                                              ; preds = %bb4
  %15 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !5070
  %16 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %15, i32 0, i32 1, !dbg !5070
  %17 = bitcast { i64, i64 }* %16 to i64*, !dbg !5070
  %a = load i64, i64* %17, align 8, !dbg !5070
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !5070
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !5045, metadata !DIExpression()), !dbg !5071
  %18 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !5072
  %19 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %18, i32 0, i32 1, !dbg !5072
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !5072
  %b = load i64, i64* %20, align 8, !dbg !5072
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !5072
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !5047, metadata !DIExpression()), !dbg !5073
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5061
  store [0 x i8]* %haystack.0, [0 x i8]** %21, align 8, !dbg !5061
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5061
  store i64 %haystack.1, i64* %22, align 8, !dbg !5061
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5057, metadata !DIExpression()), !dbg !5060
  %23 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !5074
  %_13 = load i64, i64* %23, align 8, !dbg !5074
  %24 = bitcast { i64, i64 }* %i to i64*, !dbg !5074
  store i64 %_13, i64* %24, align 8, !dbg !5074
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !5074
  store i64 %a, i64* %25, align 8, !dbg !5074
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !5060
  %_19.0 = load i64, i64* %26, align 8, !dbg !5060
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !5060
  %_19.1 = load i64, i64* %27, align 8, !dbg !5060
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %28 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h38f7c22bd8eff0bbE"(i64 %_19.0, i64 %_19.1, [0 x i8]* %haystack.0, i64 %haystack.1), !dbg !5060
  %_18.0 = extractvalue { [0 x i8]*, i64 } %28, 0, !dbg !5060
  %_18.1 = extractvalue { [0 x i8]*, i64 } %28, 1, !dbg !5060
  br label %bb11, !dbg !5060

bb11:                                             ; preds = %bb7
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 0, !dbg !5060
  store [0 x i8]* %_18.0, [0 x i8]** %29, align 8, !dbg !5060
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 1, !dbg !5060
  store i64 %_18.1, i64* %30, align 8, !dbg !5060
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %elt.dbg.spill, metadata !5048, metadata !DIExpression()), !dbg !5075
  %31 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !5076
  store i64 %b, i64* %31, align 8, !dbg !5076
  %32 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !5077
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !5077
  store [0 x i8]* %_18.0, [0 x i8]** %33, align 8, !dbg !5077
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !5077
  store i64 %_18.1, i64* %34, align 8, !dbg !5077
  br label %bb9, !dbg !5078

bb9:                                              ; preds = %bb8, %bb11
  br label %bb10, !dbg !5066

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !5079
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hbf1d029af409cd1fE"(%"core::str::iter::SplitInternal<char>"* align 8 %self) unnamed_addr #0 !dbg !5080 {
start:
  %string.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<char>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<char>"* %self, %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, metadata !5082, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !5086, metadata !DIExpression()), !dbg !5091
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4, !dbg !5093
  %2 = load i8, i8* %1, align 1, !dbg !5093, !range !1099, !noundef !28
  %_4 = trunc i8 %2 to i1, !dbg !5093
  %_3 = xor i1 %_4, true, !dbg !5094
  br i1 %_3, label %bb2, label %bb1, !dbg !5094

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1, !dbg !5094
  br label %bb3, !dbg !5094

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 3, !dbg !5095
  %4 = load i8, i8* %3, align 8, !dbg !5095, !range !1099, !noundef !28
  %_6 = trunc i8 %4 to i1, !dbg !5095
  br i1 %_6, label %bb4, label %bb5, !dbg !5096

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 1, !dbg !5097
  %_9 = load i64, i64* %5, align 8, !dbg !5097
  %6 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !5098
  %_10 = load i64, i64* %6, align 8, !dbg !5098
  %_8 = sub i64 %_9, %_10, !dbg !5097
  %_7 = icmp ugt i64 %_8, 0, !dbg !5097
  %7 = zext i1 %_7 to i8, !dbg !5096
  store i8 %7, i8* %_5, align 1, !dbg !5096
  br label %bb6, !dbg !5096

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_5, align 1, !dbg !5096
  br label %bb6, !dbg !5096

bb6:                                              ; preds = %bb5, %bb4
  %8 = load i8, i8* %_5, align 1, !dbg !5094, !range !1099, !noundef !28
  %9 = trunc i8 %8 to i1, !dbg !5094
  %10 = zext i1 %9 to i8, !dbg !5094
  store i8 %10, i8* %_2, align 1, !dbg !5094
  br label %bb3, !dbg !5094

bb3:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %_2, align 1, !dbg !5094, !range !1099, !noundef !28
  %12 = trunc i8 %11 to i1, !dbg !5094
  br i1 %12, label %bb7, label %bb9, !dbg !5094

bb9:                                              ; preds = %bb3
  %13 = bitcast { i8*, i64 }* %0 to {}**, !dbg !5099
  store {}* null, {}** %13, align 8, !dbg !5099
  br label %bb10, !dbg !5100

bb7:                                              ; preds = %bb3
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4, !dbg !5101
  store i8 1, i8* %14, align 1, !dbg !5101
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2, !dbg !5092
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %15 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h3521de85da7148d8E"(%"core::str::pattern::CharSearcher"* align 8 %_14), !dbg !5092
  %_13.0 = extractvalue { [0 x i8]*, i64 } %15, 0, !dbg !5092
  %_13.1 = extractvalue { [0 x i8]*, i64 } %15, 1, !dbg !5092
  br label %bb8, !dbg !5092

bb8:                                              ; preds = %bb7
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5092
  store [0 x i8]* %_13.0, [0 x i8]** %16, align 8, !dbg !5092
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5092
  store i64 %_13.1, i64* %17, align 8, !dbg !5092
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5090, metadata !DIExpression()), !dbg !5091
  %18 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !5102
  %_16 = load i64, i64* %18, align 8, !dbg !5102
  %19 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 1, !dbg !5103
  %_17 = load i64, i64* %19, align 8, !dbg !5103
  %20 = bitcast { i64, i64 }* %i to i64*, !dbg !5102
  store i64 %_16, i64* %20, align 8, !dbg !5102
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !5102
  store i64 %_17, i64* %21, align 8, !dbg !5102
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !5091
  %_20.0 = load i64, i64* %22, align 8, !dbg !5091
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !5091
  %_20.1 = load i64, i64* %23, align 8, !dbg !5091
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h38f7c22bd8eff0bbE"(i64 %_20.0, i64 %_20.1, [0 x i8]* %_13.0, i64 %_13.1), !dbg !5091
  %_19.0 = extractvalue { [0 x i8]*, i64 } %24, 0, !dbg !5091
  %_19.1 = extractvalue { [0 x i8]*, i64 } %24, 1, !dbg !5091
  br label %bb11, !dbg !5091

bb11:                                             ; preds = %bb8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 0, !dbg !5091
  store [0 x i8]* %_19.0, [0 x i8]** %25, align 8, !dbg !5091
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 1, !dbg !5091
  store i64 %_19.1, i64* %26, align 8, !dbg !5091
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %string.dbg.spill, metadata !5083, metadata !DIExpression()), !dbg !5104
  %27 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !5105
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0, !dbg !5105
  store [0 x i8]* %_19.0, [0 x i8]** %28, align 8, !dbg !5105
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1, !dbg !5105
  store i64 %_19.1, i64* %29, align 8, !dbg !5105
  br label %bb10, !dbg !5100

bb10:                                             ; preds = %bb9, %bb11
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !5106
  %31 = load i8*, i8** %30, align 8, !dbg !5106, !align !1104
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !5106
  %33 = load i64, i64* %32, align 8, !dbg !5106
  %34 = insertvalue { i8*, i64 } undef, i8* %31, 0, !dbg !5106
  %35 = insertvalue { i8*, i64 } %34, i64 %33, 1, !dbg !5106
  ret { i8*, i64 } %35, !dbg !5106
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h38f7c22bd8eff0bbE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !5107 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %len.dbg.spill6 = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_26 = alloca { i8*, i64 }, align 8
  %_25 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !5118, metadata !DIExpression()), !dbg !5126
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5119, metadata !DIExpression()), !dbg !5127
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 0, !dbg !5128
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !5128
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 1, !dbg !5128
  store i64 %slice.1, i64* %6, align 8, !dbg !5128
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill1, metadata !5120, metadata !DIExpression()), !dbg !5129
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5130
  store [0 x i8]* %slice.0, [0 x i8]** %7, align 8, !dbg !5130
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5130
  store i64 %slice.1, i64* %8, align 8, !dbg !5130
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !5131, metadata !DIExpression()), !dbg !5135
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !5135
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !5135
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !5136, metadata !DIExpression()), !dbg !5141
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !5142
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !5140, metadata !DIExpression()), !dbg !5141
  store i8* %self, i8** %self.dbg.spill4, align 8, !dbg !5141
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !5143, metadata !DIExpression()), !dbg !5148
  store i64 %self.0, i64* %count.dbg.spill5, align 8, !dbg !5141
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !5147, metadata !DIExpression()), !dbg !5148
  %9 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !5148
  store i8* %9, i8** %0, align 8, !dbg !5148
  %ptr = load i8*, i8** %0, align 8, !dbg !5148
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !5148
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5122, metadata !DIExpression()), !dbg !5150
  br label %bb1, !dbg !5148

bb1:                                              ; preds = %start
  %len = sub i64 %self.1, %self.0, !dbg !5151
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !5151
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5124, metadata !DIExpression()), !dbg !5152
  store i8* %ptr, i8** %data.dbg.spill, align 8, !dbg !5153
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !5154, metadata !DIExpression()), !dbg !5159
  store i64 %len, i64* %len.dbg.spill6, align 8, !dbg !5161
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill6, metadata !5158, metadata !DIExpression()), !dbg !5159
  store i8* %ptr, i8** %self.dbg.spill7, align 8, !dbg !5159
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !5162, metadata !DIExpression()), !dbg !5166
  %data_address = bitcast i8* %ptr to {}*, !dbg !5166
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !5166
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !5168, metadata !DIExpression()), !dbg !5173
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !5159
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !5172, metadata !DIExpression()), !dbg !5173
  %10 = bitcast { i8*, i64 }* %_26 to {}**, !dbg !5173
  store {}* %data_address, {}** %10, align 8, !dbg !5173
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !5173
  store i64 %len, i64* %11, align 8, !dbg !5173
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { i8*, i64 }*, !dbg !5173
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 0, !dbg !5173
  %14 = load i8*, i8** %13, align 8, !dbg !5173
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !5173
  %16 = load i64, i64* %15, align 8, !dbg !5173
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 0, !dbg !5173
  store i8* %14, i8** %17, align 8, !dbg !5173
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 1, !dbg !5173
  store i64 %16, i64* %18, align 8, !dbg !5173
  %19 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { [0 x i8]*, i64 }*, !dbg !5173
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0, !dbg !5173
  %_12.0 = load [0 x i8]*, [0 x i8]** %20, align 8, !dbg !5173
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1, !dbg !5173
  %_12.1 = load i64, i64* %21, align 8, !dbg !5173
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0, !dbg !5175
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %_12.1, 1, !dbg !5175
  ret { [0 x i8]*, i64 } %23, !dbg !5175
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17h9d15bfca41519251E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !5176 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !5180, metadata !DIExpression()), !dbg !5182
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5181, metadata !DIExpression()), !dbg !5183
  %_5 = icmp ule i64 %self.0, %self.1, !dbg !5184
  br i1 %_5, label %bb5, label %bb4, !dbg !5184

bb4:                                              ; preds = %start
  store i8 0, i8* %_4, align 1, !dbg !5184
  br label %bb6, !dbg !5184

bb5:                                              ; preds = %start
; call core::str::<impl str>::is_char_boundary
  %_8 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hea636987af350794E"([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %self.0), !dbg !5185
  br label %bb7, !dbg !5185

bb7:                                              ; preds = %bb5
  %5 = zext i1 %_8 to i8, !dbg !5184
  store i8 %5, i8* %_4, align 1, !dbg !5184
  br label %bb6, !dbg !5184

bb6:                                              ; preds = %bb4, %bb7
  %6 = load i8, i8* %_4, align 1, !dbg !5184, !range !1099, !noundef !28
  %7 = trunc i8 %6 to i1, !dbg !5184
  br i1 %7, label %bb2, label %bb1, !dbg !5184

bb1:                                              ; preds = %bb6
  store i8 0, i8* %_3, align 1, !dbg !5184
  br label %bb3, !dbg !5184

bb2:                                              ; preds = %bb6
; call core::str::<impl str>::is_char_boundary
  %_11 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hea636987af350794E"([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %self.1), !dbg !5186
  br label %bb8, !dbg !5186

bb8:                                              ; preds = %bb2
  %8 = zext i1 %_11 to i8, !dbg !5184
  store i8 %8, i8* %_3, align 1, !dbg !5184
  br label %bb3, !dbg !5184

bb3:                                              ; preds = %bb1, %bb8
  %9 = load i8, i8* %_3, align 1, !dbg !5184, !range !1099, !noundef !28
  %10 = trunc i8 %9 to i1, !dbg !5184
  br i1 %10, label %bb9, label %bb11, !dbg !5184

bb11:                                             ; preds = %bb3
  %11 = bitcast { i8*, i64 }* %0 to {}**, !dbg !5187
  store {}* null, {}** %11, align 8, !dbg !5187
  br label %bb12, !dbg !5188

bb9:                                              ; preds = %bb3
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %12 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h38f7c22bd8eff0bbE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !5189
  %_16.0 = extractvalue { [0 x i8]*, i64 } %12, 0, !dbg !5189
  %_16.1 = extractvalue { [0 x i8]*, i64 } %12, 1, !dbg !5189
  br label %bb10, !dbg !5189

bb10:                                             ; preds = %bb9
  %13 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !5190
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0, !dbg !5190
  store [0 x i8]* %_16.0, [0 x i8]** %14, align 8, !dbg !5190
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1, !dbg !5190
  store i64 %_16.1, i64* %15, align 8, !dbg !5190
  br label %bb12, !dbg !5188

bb12:                                             ; preds = %bb11, %bb10
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !5191
  %17 = load i8*, i8** %16, align 8, !dbg !5191, !align !1104
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !5191
  %19 = load i64, i64* %18, align 8, !dbg !5191
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0, !dbg !5191
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1, !dbg !5191
  ret { i8*, i64 } %21, !dbg !5191
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h83c6f72f7e717f46E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !5192 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_8 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !5196, metadata !DIExpression()), !dbg !5203
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5197, metadata !DIExpression()), !dbg !5204
  %5 = bitcast { i64, i64 }* %_5 to i64*, !dbg !5205
  store i64 %self.0, i64* %5, align 8, !dbg !5205
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !5205
  store i64 %self.1, i64* %6, align 8, !dbg !5205
  %7 = bitcast { i64, i64 }* %_5 to i64*, !dbg !5206
  %start1 = load i64, i64* %7, align 8, !dbg !5206
  store i64 %start1, i64* %start.dbg.spill, align 8, !dbg !5206
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !5198, metadata !DIExpression()), !dbg !5207
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !5208
  %end = load i64, i64* %8, align 8, !dbg !5208
  store i64 %end, i64* %end.dbg.spill, align 8, !dbg !5208
  call void @llvm.dbg.declare(metadata i64* %end.dbg.spill, metadata !5200, metadata !DIExpression()), !dbg !5209
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
  %9 = call { i8*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17h9d15bfca41519251E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1), !dbg !5210
  store { i8*, i64 } %9, { i8*, i64 }* %_8, align 8, !dbg !5210
  br label %bb1, !dbg !5210

bb1:                                              ; preds = %start
  %10 = bitcast { i8*, i64 }* %_8 to {}**, !dbg !5210
  %11 = load {}*, {}** %10, align 8, !dbg !5210
  %12 = icmp eq {}* %11, null, !dbg !5210
  %_11 = select i1 %12, i64 0, i64 1, !dbg !5210
  switch i64 %_11, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !5211

bb3:                                              ; preds = %bb1
  unreachable, !dbg !5210

bb2:                                              ; preds = %bb1
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h062f63050b85fc0cE([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %start1, i64 %end, %"core::panic::location::Location"* align 8 %0) #17, !dbg !5212
  unreachable, !dbg !5212

bb4:                                              ; preds = %bb1
  %13 = bitcast { i8*, i64 }* %_8 to { [0 x i8]*, i64 }*, !dbg !5213
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0, !dbg !5213
  %s.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !5213, !nonnull !28, !align !1104, !noundef !28
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1, !dbg !5213
  %s.1 = load i64, i64* %15, align 8, !dbg !5213
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !5213
  store [0 x i8]* %s.0, [0 x i8]** %16, align 8, !dbg !5213
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !5213
  store i64 %s.1, i64* %17, align 8, !dbg !5213
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !5201, metadata !DIExpression()), !dbg !5214
  %18 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0, !dbg !5215
  %19 = insertvalue { [0 x i8]*, i64 } %18, i64 %s.1, 1, !dbg !5215
  ret { [0 x i8]*, i64 } %19, !dbg !5215
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h60f48c329bedbb5bE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !5216 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %len.dbg.spill9 = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill8 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_30 = alloca { i8*, i64 }, align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !5221, metadata !DIExpression()), !dbg !5229
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5222, metadata !DIExpression()), !dbg !5230
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 0, !dbg !5231
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8, !dbg !5231
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 1, !dbg !5231
  store i64 %slice.1, i64* %4, align 8, !dbg !5231
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill1, metadata !5223, metadata !DIExpression()), !dbg !5232
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5233
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !5233
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5233
  store i64 %slice.1, i64* %6, align 8, !dbg !5233
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !5234, metadata !DIExpression()), !dbg !5238
  %self3 = bitcast [0 x i8]* %slice.0 to i8*, !dbg !5238
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !5238
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !5239, metadata !DIExpression()), !dbg !5244
  store i64 %self, i64* %count.dbg.spill, align 8, !dbg !5245
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !5243, metadata !DIExpression()), !dbg !5244
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !5244
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !5246, metadata !DIExpression()), !dbg !5251
  store i64 %self, i64* %count.dbg.spill6, align 8, !dbg !5244
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !5250, metadata !DIExpression()), !dbg !5251
  %7 = getelementptr inbounds i8, i8* %self3, i64 %self, !dbg !5251
  store i8* %7, i8** %0, align 8, !dbg !5251
  %ptr = load i8*, i8** %0, align 8, !dbg !5251
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !5251
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5225, metadata !DIExpression()), !dbg !5253
  br label %bb1, !dbg !5251

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !5254
  store [0 x i8]* %slice.0, [0 x i8]** %8, align 8, !dbg !5254
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !5254
  store i64 %slice.1, i64* %9, align 8, !dbg !5254
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !5255, metadata !DIExpression()), !dbg !5259
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill8, i32 0, i32 0, !dbg !5259
  store [0 x i8]* %slice.0, [0 x i8]** %10, align 8, !dbg !5259
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill8, i32 0, i32 1, !dbg !5259
  store i64 %slice.1, i64* %11, align 8, !dbg !5259
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill8, metadata !5260, metadata !DIExpression()), !dbg !5264
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { [0 x i8]*, i64 }*, !dbg !5264
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0, !dbg !5264
  store [0 x i8]* %slice.0, [0 x i8]** %13, align 8, !dbg !5264
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1, !dbg !5264
  store i64 %slice.1, i64* %14, align 8, !dbg !5264
  %15 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { i8*, i64 }*, !dbg !5264
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %15, i32 0, i32 1, !dbg !5264
  %_10 = load i64, i64* %16, align 8, !dbg !5264
  %len = sub i64 %_10, %self, !dbg !5254
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !5254
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5227, metadata !DIExpression()), !dbg !5266
  store i8* %ptr, i8** %data.dbg.spill, align 8, !dbg !5267
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !5268, metadata !DIExpression()), !dbg !5273
  store i64 %len, i64* %len.dbg.spill9, align 8, !dbg !5275
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill9, metadata !5272, metadata !DIExpression()), !dbg !5273
  store i8* %ptr, i8** %self.dbg.spill10, align 8, !dbg !5273
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !5276, metadata !DIExpression()), !dbg !5280
  %data_address = bitcast i8* %ptr to {}*, !dbg !5280
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !5280
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !5282, metadata !DIExpression()), !dbg !5287
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !5273
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !5286, metadata !DIExpression()), !dbg !5287
  %17 = bitcast { i8*, i64 }* %_30 to {}**, !dbg !5287
  store {}* %data_address, {}** %17, align 8, !dbg !5287
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_30, i32 0, i32 1, !dbg !5287
  store i64 %len, i64* %18, align 8, !dbg !5287
  %19 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_29 to { i8*, i64 }*, !dbg !5287
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_30, i32 0, i32 0, !dbg !5287
  %21 = load i8*, i8** %20, align 8, !dbg !5287
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_30, i32 0, i32 1, !dbg !5287
  %23 = load i64, i64* %22, align 8, !dbg !5287
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %19, i32 0, i32 0, !dbg !5287
  store i8* %21, i8** %24, align 8, !dbg !5287
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %19, i32 0, i32 1, !dbg !5287
  store i64 %23, i64* %25, align 8, !dbg !5287
  %26 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_29 to { [0 x i8]*, i64 }*, !dbg !5287
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !5287
  %_13.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !5287
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !5287
  %_13.1 = load i64, i64* %28, align 8, !dbg !5287
  %29 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0, !dbg !5289
  %30 = insertvalue { [0 x i8]*, i64 } %29, i64 %_13.1, 1, !dbg !5289
  ret { [0 x i8]*, i64 } %30, !dbg !5289
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17hc4cf81ab9ad37592E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !5290 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !5294, metadata !DIExpression()), !dbg !5296
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5295, metadata !DIExpression()), !dbg !5297
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hea636987af350794E"([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %self), !dbg !5298
  br label %bb1, !dbg !5298

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !5298

bb4:                                              ; preds = %bb1
  %3 = bitcast { i8*, i64 }* %0 to {}**, !dbg !5299
  store {}* null, {}** %3, align 8, !dbg !5299
  br label %bb5, !dbg !5300

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
  %4 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h60f48c329bedbb5bE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !5301
  %_8.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !5301
  %_8.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !5301
  br label %bb3, !dbg !5301

bb3:                                              ; preds = %bb2
  %5 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !5302
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !5302
  store [0 x i8]* %_8.0, [0 x i8]** %6, align 8, !dbg !5302
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !5302
  store i64 %_8.1, i64* %7, align 8, !dbg !5302
  br label %bb5, !dbg !5300

bb5:                                              ; preds = %bb4, %bb3
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !5303
  %9 = load i8*, i8** %8, align 8, !dbg !5303, !align !1104
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !5303
  %11 = load i64, i64* %10, align 8, !dbg !5303
  %12 = insertvalue { i8*, i64 } undef, i8* %9, 0, !dbg !5303
  %13 = insertvalue { i8*, i64 } %12, i64 %11, 1, !dbg !5303
  ret { i8*, i64 } %13, !dbg !5303
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h308added6b9a2813E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !5304 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_9 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !5308, metadata !DIExpression()), !dbg !5315
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5309, metadata !DIExpression()), !dbg !5316
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5317
  store [0 x i8]* %slice.0, [0 x i8]** %4, align 8, !dbg !5317
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5317
  store i64 %slice.1, i64* %5, align 8, !dbg !5317
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5318, metadata !DIExpression()), !dbg !5322
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5322
  store [0 x i8]* %slice.0, [0 x i8]** %6, align 8, !dbg !5322
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5322
  store i64 %slice.1, i64* %7, align 8, !dbg !5322
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !5323, metadata !DIExpression()), !dbg !5327
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !5327
  store [0 x i8]* %slice.0, [0 x i8]** %8, align 8, !dbg !5327
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !5327
  store i64 %slice.1, i64* %9, align 8, !dbg !5327
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !5327
  %_18.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !5327, !nonnull !28, !align !1104, !noundef !28
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !5327
  %_18.1 = load i64, i64* %11, align 8, !dbg !5327
  br label %bb5, !dbg !5327

bb5:                                              ; preds = %start
  %12 = bitcast { i64, i64 }* %_5 to i64*, !dbg !5329
  store i64 %self, i64* %12, align 8, !dbg !5329
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !5329
  store i64 %_18.1, i64* %13, align 8, !dbg !5329
  %14 = bitcast { i64, i64 }* %_5 to i64*, !dbg !5330
  %start3 = load i64, i64* %14, align 8, !dbg !5330
  store i64 %start3, i64* %start.dbg.spill, align 8, !dbg !5330
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !5310, metadata !DIExpression()), !dbg !5331
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !5332
  %end = load i64, i64* %15, align 8, !dbg !5332
  store i64 %end, i64* %end.dbg.spill, align 8, !dbg !5332
  call void @llvm.dbg.declare(metadata i64* %end.dbg.spill, metadata !5312, metadata !DIExpression()), !dbg !5333
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %16 = call { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17hc4cf81ab9ad37592E"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1), !dbg !5334
  store { i8*, i64 } %16, { i8*, i64 }* %_9, align 8, !dbg !5334
  br label %bb1, !dbg !5334

bb1:                                              ; preds = %bb5
  %17 = bitcast { i8*, i64 }* %_9 to {}**, !dbg !5334
  %18 = load {}*, {}** %17, align 8, !dbg !5334
  %19 = icmp eq {}* %18, null, !dbg !5334
  %_12 = select i1 %19, i64 0, i64 1, !dbg !5334
  switch i64 %_12, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !5335

bb3:                                              ; preds = %bb1
  unreachable, !dbg !5334

bb2:                                              ; preds = %bb1
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h062f63050b85fc0cE([0 x i8]* align 1 %slice.0, i64 %slice.1, i64 %start3, i64 %end, %"core::panic::location::Location"* align 8 %0) #17, !dbg !5336
  unreachable, !dbg !5336

bb4:                                              ; preds = %bb1
  %20 = bitcast { i8*, i64 }* %_9 to { [0 x i8]*, i64 }*, !dbg !5337
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !5337
  %s.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !5337, !nonnull !28, !align !1104, !noundef !28
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !5337
  %s.1 = load i64, i64* %22, align 8, !dbg !5337
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !5337
  store [0 x i8]* %s.0, [0 x i8]** %23, align 8, !dbg !5337
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !5337
  store i64 %s.1, i64* %24, align 8, !dbg !5337
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !5313, metadata !DIExpression()), !dbg !5338
  %25 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0, !dbg !5339
  %26 = insertvalue { [0 x i8]*, i64 } %25, i64 %s.1, 1, !dbg !5339
  ret { [0 x i8]*, i64 } %26, !dbg !5339
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hd9eae665082e865cE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #0 !dbg !5340 {
start:
  %other.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5343, metadata !DIExpression()), !dbg !5345
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !5344, metadata !DIExpression()), !dbg !5346
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5347
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !5347
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5347
  store i64 %self.1, i64* %5, align 8, !dbg !5347
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5348, metadata !DIExpression()), !dbg !5352
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 0, !dbg !5352
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !5352
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 1, !dbg !5352
  store i64 %self.1, i64* %7, align 8, !dbg !5352
  br label %bb1, !dbg !5352

bb1:                                              ; preds = %start
  store { [0 x i8]*, i64 }* %_4, { [0 x i8]*, i64 }** %self.dbg.spill2, align 8, !dbg !5347
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill2, metadata !5353, metadata !DIExpression()), !dbg !5361
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !5362
  store [0 x i8]* %other.0, [0 x i8]** %8, align 8, !dbg !5362
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !5362
  store i64 %other.1, i64* %9, align 8, !dbg !5362
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !5363, metadata !DIExpression()), !dbg !5367
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 0, !dbg !5367
  store [0 x i8]* %other.0, [0 x i8]** %10, align 8, !dbg !5367
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 1, !dbg !5367
  store i64 %other.1, i64* %11, align 8, !dbg !5367
  br label %bb2, !dbg !5367

bb2:                                              ; preds = %bb1
  store { [0 x i8]*, i64 }* %_7, { [0 x i8]*, i64 }** %other.dbg.spill4, align 8, !dbg !5362
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill4, metadata !5360, metadata !DIExpression()), !dbg !5361
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 0, !dbg !5361
  %_13.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !5361, !nonnull !28, !align !1104, !noundef !28
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 1, !dbg !5361
  %_13.1 = load i64, i64* %13, align 8, !dbg !5361
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 0, !dbg !5361
  %_14.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !5361, !nonnull !28, !align !1104, !noundef !28
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 1, !dbg !5361
  %_14.1 = load i64, i64* %15, align 8, !dbg !5361
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %16 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h8417e7e68e2e7c02E"([0 x i8]* align 1 %_13.0, i64 %_13.1, [0 x i8]* align 1 %_14.0, i64 %_14.1), !dbg !5361
  br label %bb3, !dbg !5361

bb3:                                              ; preds = %bb2
  ret i1 %16, !dbg !5368
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern14TwoWaySearcher4next17h50a3afca2d487e74E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1, [0 x i8]* align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 !dbg !5369 {
start:
  %match_pos.dbg.spill = alloca i64, align 8
  %i.dbg.spill14 = alloca i64, align 8
  %self.dbg.spill12 = alloca { i64, i64 }*, align 8
  %self.dbg.spill11 = alloca { i64, i64 }*, align 8
  %self.dbg.spill10 = alloca { i64, i64 }, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %byte.dbg.spill = alloca i8, align 1
  %self.dbg.spill7 = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %tail_byte.dbg.spill = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %needle_last.dbg.spill = alloca i64, align 8
  %old_pos.dbg.spill = alloca i64, align 8
  %long_period.dbg.spill = alloca i8, align 1
  %needle.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %_76 = alloca { i64, i64 }, align 8
  %iter5 = alloca { i64, i64 }, align 8
  %self4 = alloca { i64, i64 }, align 8
  %start3 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  store %"core::str::pattern::TwoWaySearcher"* %self, %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill, metadata !5402, metadata !DIExpression()), !dbg !5439
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !5403, metadata !DIExpression()), !dbg !5440
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle.dbg.spill, i32 0, i32 0
  store [0 x i8]* %needle.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle.dbg.spill, i32 0, i32 1
  store i64 %needle.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %needle.dbg.spill, metadata !5404, metadata !DIExpression()), !dbg !5441
  %5 = zext i1 %long_period to i8
  store i8 %5, i8* %long_period.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %long_period.dbg.spill, metadata !5405, metadata !DIExpression()), !dbg !5442
  call void @llvm.dbg.declare(metadata i64* %start1, metadata !5414, metadata !DIExpression()), !dbg !5443
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !5444, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !5416, metadata !DIExpression()), !dbg !5455
  call void @llvm.dbg.declare(metadata i64* %start3, metadata !5420, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self4, metadata !5457, metadata !DIExpression()), !dbg !5465
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter5, metadata !5422, metadata !DIExpression()), !dbg !5467
  %6 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5468
  %old_pos = load i64, i64* %6, align 8, !dbg !5468
  store i64 %old_pos, i64* %old_pos.dbg.spill, align 8, !dbg !5468
  call void @llvm.dbg.declare(metadata i64* %old_pos.dbg.spill, metadata !5406, metadata !DIExpression()), !dbg !5469
  %needle_last = sub i64 %needle.1, 1, !dbg !5470
  store i64 %needle_last, i64* %needle_last.dbg.spill, align 8, !dbg !5470
  call void @llvm.dbg.declare(metadata i64* %needle_last.dbg.spill, metadata !5408, metadata !DIExpression()), !dbg !5471
  br label %bb1, !dbg !5472

bb1:                                              ; preds = %bb47, %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !5473
  store [0 x i8]* %haystack.0, [0 x i8]** %7, align 8, !dbg !5473
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !5473
  store i64 %haystack.1, i64* %8, align 8, !dbg !5473
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !5474, metadata !DIExpression()), !dbg !5479
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5480
  %_13 = load i64, i64* %9, align 8, !dbg !5480
  %index = add i64 %_13, %needle_last, !dbg !5480
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !5480
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !5478, metadata !DIExpression()), !dbg !5479
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %10 = call align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h585e02aa47efab1bE"(i64 %index, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !5479
  store i8* %10, i8** %_10, align 8, !dbg !5479
  br label %bb49, !dbg !5479

bb49:                                             ; preds = %bb1
  %11 = bitcast i8** %_10 to {}**, !dbg !5473
  %12 = load {}*, {}** %11, align 8, !dbg !5473
  %13 = icmp eq {}* %12, null, !dbg !5473
  %_15 = select i1 %13, i64 0, i64 1, !dbg !5473
  switch i64 %_15, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !5481

bb3:                                              ; preds = %bb49
  unreachable, !dbg !5473

bb2:                                              ; preds = %bb49
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5482
  store i64 %haystack.1, i64* %14, align 8, !dbg !5482
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5483
  %_20 = load i64, i64* %15, align 8, !dbg !5483
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17he46f0eaac2dbcdd2E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %old_pos, i64 %_20), !dbg !5484
  br label %bb5, !dbg !5484

bb4:                                              ; preds = %bb49
  %_108 = load i8*, i8** %_10, align 8, !dbg !5485, !nonnull !28, !align !1104, !noundef !28
  %b = load i8, i8* %_108, align 1, !dbg !5485
  store i8 %b, i8* %b.dbg.spill, align 1, !dbg !5485
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !5412, metadata !DIExpression()), !dbg !5486
  store i8 %b, i8* %tail_byte.dbg.spill, align 1, !dbg !5487
  call void @llvm.dbg.declare(metadata i8* %tail_byte.dbg.spill, metadata !5410, metadata !DIExpression()), !dbg !5488
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb002ffb500e0b323E"(), !dbg !5489
  br label %bb9, !dbg !5489

bb9:                                              ; preds = %bb4
  br i1 %_22, label %bb7, label %bb6, !dbg !5489

bb6:                                              ; preds = %bb9
  store i8 0, i8* %_21, align 1, !dbg !5489
  br label %bb8, !dbg !5489

bb7:                                              ; preds = %bb9
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5490
  %_25 = load i64, i64* %16, align 8, !dbg !5490
  %_23 = icmp ne i64 %old_pos, %_25, !dbg !5491
  %17 = zext i1 %_23 to i8, !dbg !5489
  store i8 %17, i8* %_21, align 1, !dbg !5489
  br label %bb8, !dbg !5489

bb8:                                              ; preds = %bb6, %bb7
  %18 = load i8, i8* %_21, align 1, !dbg !5489, !range !1099, !noundef !28
  %19 = trunc i8 %18 to i1, !dbg !5489
  br i1 %19, label %bb10, label %bb12, !dbg !5489

bb12:                                             ; preds = %bb8
  store %"core::str::pattern::TwoWaySearcher"* %self, %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill7, align 8, !dbg !5492
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill7, metadata !5493, metadata !DIExpression()), !dbg !5500
  store i8 %b, i8* %byte.dbg.spill, align 1, !dbg !5501
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !5499, metadata !DIExpression()), !dbg !5500
  %20 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 3, !dbg !5500
  %_113 = load i64, i64* %20, align 8, !dbg !5500
  %_115 = and i8 %b, 63, !dbg !5500
  %_114 = zext i8 %_115 to i64, !dbg !5500
  %21 = and i64 %_114, 63, !dbg !5500
  %_112 = lshr i64 %_113, %21, !dbg !5500
  %_111 = and i64 %_112, 1, !dbg !5500
  %_29 = icmp ne i64 %_111, 0, !dbg !5500
  %_28 = xor i1 %_29, true, !dbg !5502
  br i1 %_28, label %bb13, label %bb16, !dbg !5502

bb10:                                             ; preds = %bb8
  %22 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5503
  %_27 = load i64, i64* %22, align 8, !dbg !5503
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17he46f0eaac2dbcdd2E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %old_pos, i64 %_27), !dbg !5504
  br label %bb11, !dbg !5504

bb11:                                             ; preds = %bb10
  br label %bb48, !dbg !5505

bb48:                                             ; preds = %bb5, %bb45, %bb11
  ret void, !dbg !5507

bb16:                                             ; preds = %bb12
  br i1 %long_period, label %bb17, label %bb18, !dbg !5508

bb13:                                             ; preds = %bb12
  %23 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5509
  %24 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5509
  %25 = load i64, i64* %24, align 8, !dbg !5509
  %26 = add i64 %25, %needle.1, !dbg !5509
  store i64 %26, i64* %23, align 8, !dbg !5509
  %_34 = xor i1 %long_period, true, !dbg !5510
  br i1 %_34, label %bb14, label %bb15, !dbg !5510

bb15:                                             ; preds = %bb14, %bb13
  br label %bb47, !dbg !5505

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5511
  store i64 0, i64* %27, align 8, !dbg !5511
  br label %bb15, !dbg !5512

bb47:                                             ; preds = %bb46, %bb15
  br label %bb1, !dbg !5513

bb18:                                             ; preds = %bb16
  %28 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !5515
  %v1 = load i64, i64* %28, align 8, !dbg !5515
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !5515
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !5516, metadata !DIExpression()), !dbg !5521
  %29 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5523
  %v2 = load i64, i64* %29, align 8, !dbg !5523
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !5523
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !5520, metadata !DIExpression()), !dbg !5521
; call core::cmp::Ord::max
  %30 = call i64 @_ZN4core3cmp3Ord3max17h87e416972f67cf67E(i64 %v1, i64 %v2), !dbg !5521
  store i64 %30, i64* %start1, align 8, !dbg !5521
  br label %bb50, !dbg !5521

bb17:                                             ; preds = %bb16
  %31 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !5524
  %32 = load i64, i64* %31, align 8, !dbg !5524
  store i64 %32, i64* %start1, align 8, !dbg !5524
  br label %bb19, !dbg !5525

bb19:                                             ; preds = %bb50, %bb17
  %_42 = load i64, i64* %start1, align 8, !dbg !5454
  %33 = bitcast { i64, i64 }* %self2 to i64*, !dbg !5454
  store i64 %_42, i64* %33, align 8, !dbg !5454
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !5454
  store i64 %needle.1, i64* %34, align 8, !dbg !5454
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 0, !dbg !5453
  %_40.0 = load i64, i64* %35, align 8, !dbg !5453
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !5453
  %_40.1 = load i64, i64* %36, align 8, !dbg !5453
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !5454
  store i64 %_40.0, i64* %37, align 8, !dbg !5454
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !5454
  store i64 %_40.1, i64* %38, align 8, !dbg !5454
  br label %bb20, !dbg !5526

bb50:                                             ; preds = %bb18
  br label %bb19, !dbg !5525

bb20:                                             ; preds = %bb29, %bb19
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !5455
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !5527, metadata !DIExpression()), !dbg !5537
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %39 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h1d9258947ac1e1f3E"({ i64, i64 }* align 8 %iter), !dbg !5537
  store { i64, i64 } %39, { i64, i64 }* %_46, align 8, !dbg !5537
  br label %bb51, !dbg !5537

bb51:                                             ; preds = %bb20
  %40 = bitcast { i64, i64 }* %_46 to i64*, !dbg !5455
  %_49 = load i64, i64* %40, align 8, !dbg !5455, !range !1578, !noundef !28
  switch i64 %_49, label %bb22 [
    i64 0, label %bb23
    i64 1, label %bb21
  ], !dbg !5455

bb22:                                             ; preds = %bb51
  unreachable, !dbg !5455

bb23:                                             ; preds = %bb51
  br i1 %long_period, label %bb30, label %bb31, !dbg !5538

bb21:                                             ; preds = %bb51
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_46, i32 0, i32 1, !dbg !5539
  %i = load i64, i64* %41, align 8, !dbg !5539
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !5539
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !5418, metadata !DIExpression()), !dbg !5540
  %_55 = icmp ult i64 %i, %needle.1, !dbg !5541
  %42 = call i1 @llvm.expect.i1(i1 %_55, i1 true), !dbg !5541
  br i1 %42, label %bb24, label %panic, !dbg !5541

bb24:                                             ; preds = %bb21
  %43 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i, !dbg !5541
  %_52 = load i8, i8* %43, align 1, !dbg !5541
  %44 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5542
  %_58 = load i64, i64* %44, align 8, !dbg !5542
  %_57 = add i64 %_58, %i, !dbg !5542
  %_61 = icmp ult i64 %_57, %haystack.1, !dbg !5543
  %45 = call i1 @llvm.expect.i1(i1 %_61, i1 true), !dbg !5543
  br i1 %45, label %bb25, label %panic9, !dbg !5543

panic:                                            ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*)) #17, !dbg !5541
  unreachable, !dbg !5541

bb25:                                             ; preds = %bb24
  %46 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57, !dbg !5543
  %_56 = load i8, i8* %46, align 1, !dbg !5543
  %_51 = icmp ne i8 %_52, %_56, !dbg !5541
  br i1 %_51, label %bb26, label %bb29, !dbg !5541

panic9:                                           ; preds = %bb24
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc663 to %"core::panic::location::Location"*)) #17, !dbg !5543
  unreachable, !dbg !5543

bb29:                                             ; preds = %bb25
  br label %bb20, !dbg !5526

bb26:                                             ; preds = %bb25
  %47 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !5544
  %_65 = load i64, i64* %47, align 8, !dbg !5544
  %_63 = sub i64 %i, %_65, !dbg !5545
  %_62 = add i64 %_63, 1, !dbg !5545
  %48 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5546
  %49 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5546
  %50 = load i64, i64* %49, align 8, !dbg !5546
  %51 = add i64 %50, %_62, !dbg !5546
  store i64 %51, i64* %48, align 8, !dbg !5546
  %_66 = xor i1 %long_period, true, !dbg !5547
  br i1 %_66, label %bb27, label %bb28, !dbg !5547

bb28:                                             ; preds = %bb27, %bb26
  br label %bb46, !dbg !5548

bb27:                                             ; preds = %bb26
  %52 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5550
  store i64 0, i64* %52, align 8, !dbg !5550
  br label %bb28, !dbg !5551

bb46:                                             ; preds = %bb41, %bb28
  br label %bb47, !dbg !5505

bb31:                                             ; preds = %bb23
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5552
  %54 = load i64, i64* %53, align 8, !dbg !5552
  store i64 %54, i64* %start3, align 8, !dbg !5552
  br label %bb32, !dbg !5553

bb30:                                             ; preds = %bb23
  store i64 0, i64* %start3, align 8, !dbg !5554
  br label %bb32, !dbg !5553

bb32:                                             ; preds = %bb31, %bb30
  %_73 = load i64, i64* %start3, align 8, !dbg !5555
  %55 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !5556
  %_74 = load i64, i64* %55, align 8, !dbg !5556
  %56 = bitcast { i64, i64 }* %self4 to i64*, !dbg !5466
  store i64 %_73, i64* %56, align 8, !dbg !5466
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 1, !dbg !5466
  store i64 %_74, i64* %57, align 8, !dbg !5466
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 0, !dbg !5465
  %_120.0 = load i64, i64* %58, align 8, !dbg !5465
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 1, !dbg !5465
  %_120.1 = load i64, i64* %59, align 8, !dbg !5465
; call core::iter::adapters::rev::Rev<T>::new
  %60 = call { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h9a3ddd86c8a670d3E"(i64 %_120.0, i64 %_120.1), !dbg !5465
  %self.0 = extractvalue { i64, i64 } %60, 0, !dbg !5465
  %self.1 = extractvalue { i64, i64 } %60, 1, !dbg !5465
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !5465
  store i64 %self.0, i64* %61, align 8, !dbg !5465
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !5465
  store i64 %self.1, i64* %62, align 8, !dbg !5465
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill10, metadata !5557, metadata !DIExpression()), !dbg !5565
  br label %bb52, !dbg !5465

bb52:                                             ; preds = %bb32
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter5, i32 0, i32 0, !dbg !5466
  store i64 %self.0, i64* %63, align 8, !dbg !5466
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter5, i32 0, i32 1, !dbg !5466
  store i64 %self.1, i64* %64, align 8, !dbg !5466
  br label %bb33, !dbg !5566

bb33:                                             ; preds = %bb42, %bb52
  store { i64, i64 }* %iter5, { i64, i64 }** %self.dbg.spill11, align 8, !dbg !5467
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill11, metadata !5567, metadata !DIExpression()), !dbg !5576
  store { i64, i64 }* %iter5, { i64, i64 }** %self.dbg.spill12, align 8, !dbg !5576
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill12, metadata !5577, metadata !DIExpression()), !dbg !5582
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %65 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h14008ed51e9c3bc6E"({ i64, i64 }* align 8 %iter5), !dbg !5582
  store { i64, i64 } %65, { i64, i64 }* %_76, align 8, !dbg !5582
  br label %bb53, !dbg !5582

bb53:                                             ; preds = %bb33
  %66 = bitcast { i64, i64 }* %_76 to i64*, !dbg !5467
  %_79 = load i64, i64* %66, align 8, !dbg !5467, !range !1578, !noundef !28
  switch i64 %_79, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !5467

bb35:                                             ; preds = %bb53
  unreachable, !dbg !5467

bb36:                                             ; preds = %bb53
  %67 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5584
  %match_pos = load i64, i64* %67, align 8, !dbg !5584
  store i64 %match_pos, i64* %match_pos.dbg.spill, align 8, !dbg !5584
  call void @llvm.dbg.declare(metadata i64* %match_pos.dbg.spill, metadata !5432, metadata !DIExpression()), !dbg !5585
  %68 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5586
  %69 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5586
  %70 = load i64, i64* %69, align 8, !dbg !5586
  %71 = add i64 %70, %needle.1, !dbg !5586
  store i64 %71, i64* %68, align 8, !dbg !5586
  %_101 = xor i1 %long_period, true, !dbg !5587
  br i1 %_101, label %bb43, label %bb44, !dbg !5587

bb34:                                             ; preds = %bb53
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_76, i32 0, i32 1, !dbg !5588
  %i13 = load i64, i64* %72, align 8, !dbg !5588
  store i64 %i13, i64* %i.dbg.spill14, align 8, !dbg !5588
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill14, metadata !5430, metadata !DIExpression()), !dbg !5589
  %_85 = icmp ult i64 %i13, %needle.1, !dbg !5590
  %73 = call i1 @llvm.expect.i1(i1 %_85, i1 true), !dbg !5590
  br i1 %73, label %bb37, label %panic15, !dbg !5590

bb37:                                             ; preds = %bb34
  %74 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i13, !dbg !5590
  %_82 = load i8, i8* %74, align 1, !dbg !5590
  %75 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5591
  %_88 = load i64, i64* %75, align 8, !dbg !5591
  %_87 = add i64 %_88, %i13, !dbg !5591
  %_91 = icmp ult i64 %_87, %haystack.1, !dbg !5592
  %76 = call i1 @llvm.expect.i1(i1 %_91, i1 true), !dbg !5592
  br i1 %76, label %bb38, label %panic16, !dbg !5592

panic15:                                          ; preds = %bb34
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %i13, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc665 to %"core::panic::location::Location"*)) #17, !dbg !5590
  unreachable, !dbg !5590

bb38:                                             ; preds = %bb37
  %77 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87, !dbg !5592
  %_86 = load i8, i8* %77, align 1, !dbg !5592
  %_81 = icmp ne i8 %_82, %_86, !dbg !5590
  br i1 %_81, label %bb39, label %bb42, !dbg !5590

panic16:                                          ; preds = %bb37
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc667 to %"core::panic::location::Location"*)) #17, !dbg !5592
  unreachable, !dbg !5592

bb42:                                             ; preds = %bb38
  br label %bb33, !dbg !5566

bb39:                                             ; preds = %bb38
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2, !dbg !5593
  %_92 = load i64, i64* %78, align 8, !dbg !5593
  %79 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5594
  %80 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5594
  %81 = load i64, i64* %80, align 8, !dbg !5594
  %82 = add i64 %81, %_92, !dbg !5594
  store i64 %82, i64* %79, align 8, !dbg !5594
  %_93 = xor i1 %long_period, true, !dbg !5595
  br i1 %_93, label %bb40, label %bb41, !dbg !5595

bb41:                                             ; preds = %bb40, %bb39
  br label %bb46, !dbg !5548

bb40:                                             ; preds = %bb39
  %83 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2, !dbg !5596
  %_97 = load i64, i64* %83, align 8, !dbg !5596
  %84 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5597
  %85 = sub i64 %needle.1, %_97, !dbg !5597
  store i64 %85, i64* %84, align 8, !dbg !5597
  br label %bb41, !dbg !5598

bb44:                                             ; preds = %bb43, %bb36
  %_104 = add i64 %match_pos, %needle.1, !dbg !5599
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h53b2776185f0c713E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %match_pos, i64 %_104), !dbg !5600
  br label %bb45, !dbg !5600

bb43:                                             ; preds = %bb36
  %86 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5601
  store i64 0, i64* %86, align 8, !dbg !5601
  br label %bb44, !dbg !5602

bb45:                                             ; preds = %bb44
  br label %bb48, !dbg !5505

bb5:                                              ; preds = %bb2
  br label %bb48, !dbg !5513
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern14TwoWaySearcher4next17he070564a8339565aE(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1, [0 x i8]* align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 !dbg !5603 {
start:
  %match_pos.dbg.spill = alloca i64, align 8
  %i.dbg.spill14 = alloca i64, align 8
  %self.dbg.spill12 = alloca { i64, i64 }*, align 8
  %self.dbg.spill11 = alloca { i64, i64 }*, align 8
  %self.dbg.spill10 = alloca { i64, i64 }, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %byte.dbg.spill = alloca i8, align 1
  %self.dbg.spill7 = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %tail_byte.dbg.spill = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %needle_last.dbg.spill = alloca i64, align 8
  %old_pos.dbg.spill = alloca i64, align 8
  %long_period.dbg.spill = alloca i8, align 1
  %needle.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %_76 = alloca { i64, i64 }, align 8
  %iter5 = alloca { i64, i64 }, align 8
  %self4 = alloca { i64, i64 }, align 8
  %start3 = alloca i64, align 8
  %_46 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %start1 = alloca i64, align 8
  %_21 = alloca i8, align 1
  %_10 = alloca i8*, align 8
  store %"core::str::pattern::TwoWaySearcher"* %self, %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill, metadata !5624, metadata !DIExpression()), !dbg !5655
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !5625, metadata !DIExpression()), !dbg !5656
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle.dbg.spill, i32 0, i32 0
  store [0 x i8]* %needle.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle.dbg.spill, i32 0, i32 1
  store i64 %needle.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %needle.dbg.spill, metadata !5626, metadata !DIExpression()), !dbg !5657
  %5 = zext i1 %long_period to i8
  store i8 %5, i8* %long_period.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %long_period.dbg.spill, metadata !5627, metadata !DIExpression()), !dbg !5658
  call void @llvm.dbg.declare(metadata i64* %start1, metadata !5636, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !5660, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !5638, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.declare(metadata i64* %start3, metadata !5642, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self4, metadata !5668, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter5, metadata !5644, metadata !DIExpression()), !dbg !5674
  %6 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5675
  %old_pos = load i64, i64* %6, align 8, !dbg !5675
  store i64 %old_pos, i64* %old_pos.dbg.spill, align 8, !dbg !5675
  call void @llvm.dbg.declare(metadata i64* %old_pos.dbg.spill, metadata !5628, metadata !DIExpression()), !dbg !5676
  %needle_last = sub i64 %needle.1, 1, !dbg !5677
  store i64 %needle_last, i64* %needle_last.dbg.spill, align 8, !dbg !5677
  call void @llvm.dbg.declare(metadata i64* %needle_last.dbg.spill, metadata !5630, metadata !DIExpression()), !dbg !5678
  br label %bb1, !dbg !5679

bb1:                                              ; preds = %bb47, %start
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !5680
  store [0 x i8]* %haystack.0, [0 x i8]** %7, align 8, !dbg !5680
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !5680
  store i64 %haystack.1, i64* %8, align 8, !dbg !5680
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !5681, metadata !DIExpression()), !dbg !5686
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5687
  %_13 = load i64, i64* %9, align 8, !dbg !5687
  %index = add i64 %_13, %needle_last, !dbg !5687
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !5687
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !5685, metadata !DIExpression()), !dbg !5686
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %10 = call align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h585e02aa47efab1bE"(i64 %index, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !5686
  store i8* %10, i8** %_10, align 8, !dbg !5686
  br label %bb49, !dbg !5686

bb49:                                             ; preds = %bb1
  %11 = bitcast i8** %_10 to {}**, !dbg !5680
  %12 = load {}*, {}** %11, align 8, !dbg !5680
  %13 = icmp eq {}* %12, null, !dbg !5680
  %_15 = select i1 %13, i64 0, i64 1, !dbg !5680
  switch i64 %_15, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !5688

bb3:                                              ; preds = %bb49
  unreachable, !dbg !5680

bb2:                                              ; preds = %bb49
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5689
  store i64 %haystack.1, i64* %14, align 8, !dbg !5689
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5690
  %_20 = load i64, i64* %15, align 8, !dbg !5690
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h3c9d378573ab90c8E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %old_pos, i64 %_20), !dbg !5691
  br label %bb5, !dbg !5691

bb4:                                              ; preds = %bb49
  %_108 = load i8*, i8** %_10, align 8, !dbg !5692, !nonnull !28, !align !1104, !noundef !28
  %b = load i8, i8* %_108, align 1, !dbg !5692
  store i8 %b, i8* %b.dbg.spill, align 1, !dbg !5692
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !5634, metadata !DIExpression()), !dbg !5693
  store i8 %b, i8* %tail_byte.dbg.spill, align 1, !dbg !5694
  call void @llvm.dbg.declare(metadata i8* %tail_byte.dbg.spill, metadata !5632, metadata !DIExpression()), !dbg !5695
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_22 = call zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h1b202ebc91a248faE"(), !dbg !5696
  br label %bb9, !dbg !5696

bb9:                                              ; preds = %bb4
  br i1 %_22, label %bb7, label %bb6, !dbg !5696

bb6:                                              ; preds = %bb9
  store i8 0, i8* %_21, align 1, !dbg !5696
  br label %bb8, !dbg !5696

bb7:                                              ; preds = %bb9
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5697
  %_25 = load i64, i64* %16, align 8, !dbg !5697
  %_23 = icmp ne i64 %old_pos, %_25, !dbg !5698
  %17 = zext i1 %_23 to i8, !dbg !5696
  store i8 %17, i8* %_21, align 1, !dbg !5696
  br label %bb8, !dbg !5696

bb8:                                              ; preds = %bb6, %bb7
  %18 = load i8, i8* %_21, align 1, !dbg !5696, !range !1099, !noundef !28
  %19 = trunc i8 %18 to i1, !dbg !5696
  br i1 %19, label %bb10, label %bb12, !dbg !5696

bb12:                                             ; preds = %bb8
  store %"core::str::pattern::TwoWaySearcher"* %self, %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill7, align 8, !dbg !5699
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %self.dbg.spill7, metadata !5700, metadata !DIExpression()), !dbg !5704
  store i8 %b, i8* %byte.dbg.spill, align 1, !dbg !5705
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !5703, metadata !DIExpression()), !dbg !5704
  %20 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 3, !dbg !5704
  %_113 = load i64, i64* %20, align 8, !dbg !5704
  %_115 = and i8 %b, 63, !dbg !5704
  %_114 = zext i8 %_115 to i64, !dbg !5704
  %21 = and i64 %_114, 63, !dbg !5704
  %_112 = lshr i64 %_113, %21, !dbg !5704
  %_111 = and i64 %_112, 1, !dbg !5704
  %_29 = icmp ne i64 %_111, 0, !dbg !5704
  %_28 = xor i1 %_29, true, !dbg !5706
  br i1 %_28, label %bb13, label %bb16, !dbg !5706

bb10:                                             ; preds = %bb8
  %22 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5707
  %_27 = load i64, i64* %22, align 8, !dbg !5707
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h3c9d378573ab90c8E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %old_pos, i64 %_27), !dbg !5708
  br label %bb11, !dbg !5708

bb11:                                             ; preds = %bb10
  br label %bb48, !dbg !5709

bb48:                                             ; preds = %bb5, %bb45, %bb11
  ret void, !dbg !5711

bb16:                                             ; preds = %bb12
  br i1 %long_period, label %bb17, label %bb18, !dbg !5712

bb13:                                             ; preds = %bb12
  %23 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5713
  %24 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5713
  %25 = load i64, i64* %24, align 8, !dbg !5713
  %26 = add i64 %25, %needle.1, !dbg !5713
  store i64 %26, i64* %23, align 8, !dbg !5713
  %_34 = xor i1 %long_period, true, !dbg !5714
  br i1 %_34, label %bb14, label %bb15, !dbg !5714

bb15:                                             ; preds = %bb14, %bb13
  br label %bb47, !dbg !5709

bb14:                                             ; preds = %bb13
  %27 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5715
  store i64 0, i64* %27, align 8, !dbg !5715
  br label %bb15, !dbg !5716

bb47:                                             ; preds = %bb46, %bb15
  br label %bb1, !dbg !5717

bb18:                                             ; preds = %bb16
  %28 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !5719
  %v1 = load i64, i64* %28, align 8, !dbg !5719
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !5719
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !5720, metadata !DIExpression()), !dbg !5725
  %29 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5727
  %v2 = load i64, i64* %29, align 8, !dbg !5727
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !5727
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !5724, metadata !DIExpression()), !dbg !5725
; call core::cmp::Ord::max
  %30 = call i64 @_ZN4core3cmp3Ord3max17h87e416972f67cf67E(i64 %v1, i64 %v2), !dbg !5725
  store i64 %30, i64* %start1, align 8, !dbg !5725
  br label %bb50, !dbg !5725

bb17:                                             ; preds = %bb16
  %31 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !5728
  %32 = load i64, i64* %31, align 8, !dbg !5728
  store i64 %32, i64* %start1, align 8, !dbg !5728
  br label %bb19, !dbg !5729

bb19:                                             ; preds = %bb50, %bb17
  %_42 = load i64, i64* %start1, align 8, !dbg !5665
  %33 = bitcast { i64, i64 }* %self2 to i64*, !dbg !5665
  store i64 %_42, i64* %33, align 8, !dbg !5665
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !5665
  store i64 %needle.1, i64* %34, align 8, !dbg !5665
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 0, !dbg !5664
  %_40.0 = load i64, i64* %35, align 8, !dbg !5664
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !5664
  %_40.1 = load i64, i64* %36, align 8, !dbg !5664
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !5665
  store i64 %_40.0, i64* %37, align 8, !dbg !5665
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !5665
  store i64 %_40.1, i64* %38, align 8, !dbg !5665
  br label %bb20, !dbg !5730

bb50:                                             ; preds = %bb18
  br label %bb19, !dbg !5729

bb20:                                             ; preds = %bb29, %bb19
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !5666
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !5731, metadata !DIExpression()), !dbg !5735
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %39 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h1d9258947ac1e1f3E"({ i64, i64 }* align 8 %iter), !dbg !5735
  store { i64, i64 } %39, { i64, i64 }* %_46, align 8, !dbg !5735
  br label %bb51, !dbg !5735

bb51:                                             ; preds = %bb20
  %40 = bitcast { i64, i64 }* %_46 to i64*, !dbg !5666
  %_49 = load i64, i64* %40, align 8, !dbg !5666, !range !1578, !noundef !28
  switch i64 %_49, label %bb22 [
    i64 0, label %bb23
    i64 1, label %bb21
  ], !dbg !5666

bb22:                                             ; preds = %bb51
  unreachable, !dbg !5666

bb23:                                             ; preds = %bb51
  br i1 %long_period, label %bb30, label %bb31, !dbg !5736

bb21:                                             ; preds = %bb51
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_46, i32 0, i32 1, !dbg !5737
  %i = load i64, i64* %41, align 8, !dbg !5737
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !5737
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !5640, metadata !DIExpression()), !dbg !5738
  %_55 = icmp ult i64 %i, %needle.1, !dbg !5739
  %42 = call i1 @llvm.expect.i1(i1 %_55, i1 true), !dbg !5739
  br i1 %42, label %bb24, label %panic, !dbg !5739

bb24:                                             ; preds = %bb21
  %43 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i, !dbg !5739
  %_52 = load i8, i8* %43, align 1, !dbg !5739
  %44 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5740
  %_58 = load i64, i64* %44, align 8, !dbg !5740
  %_57 = add i64 %_58, %i, !dbg !5740
  %_61 = icmp ult i64 %_57, %haystack.1, !dbg !5741
  %45 = call i1 @llvm.expect.i1(i1 %_61, i1 true), !dbg !5741
  br i1 %45, label %bb25, label %panic9, !dbg !5741

panic:                                            ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %i, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc661 to %"core::panic::location::Location"*)) #17, !dbg !5739
  unreachable, !dbg !5739

bb25:                                             ; preds = %bb24
  %46 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_57, !dbg !5741
  %_56 = load i8, i8* %46, align 1, !dbg !5741
  %_51 = icmp ne i8 %_52, %_56, !dbg !5739
  br i1 %_51, label %bb26, label %bb29, !dbg !5739

panic9:                                           ; preds = %bb24
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_57, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc663 to %"core::panic::location::Location"*)) #17, !dbg !5741
  unreachable, !dbg !5741

bb29:                                             ; preds = %bb25
  br label %bb20, !dbg !5730

bb26:                                             ; preds = %bb25
  %47 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !5742
  %_65 = load i64, i64* %47, align 8, !dbg !5742
  %_63 = sub i64 %i, %_65, !dbg !5743
  %_62 = add i64 %_63, 1, !dbg !5743
  %48 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5744
  %49 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5744
  %50 = load i64, i64* %49, align 8, !dbg !5744
  %51 = add i64 %50, %_62, !dbg !5744
  store i64 %51, i64* %48, align 8, !dbg !5744
  %_66 = xor i1 %long_period, true, !dbg !5745
  br i1 %_66, label %bb27, label %bb28, !dbg !5745

bb28:                                             ; preds = %bb27, %bb26
  br label %bb46, !dbg !5746

bb27:                                             ; preds = %bb26
  %52 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5748
  store i64 0, i64* %52, align 8, !dbg !5748
  br label %bb28, !dbg !5749

bb46:                                             ; preds = %bb41, %bb28
  br label %bb47, !dbg !5709

bb31:                                             ; preds = %bb23
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5750
  %54 = load i64, i64* %53, align 8, !dbg !5750
  store i64 %54, i64* %start3, align 8, !dbg !5750
  br label %bb32, !dbg !5751

bb30:                                             ; preds = %bb23
  store i64 0, i64* %start3, align 8, !dbg !5752
  br label %bb32, !dbg !5751

bb32:                                             ; preds = %bb31, %bb30
  %_73 = load i64, i64* %start3, align 8, !dbg !5753
  %55 = bitcast %"core::str::pattern::TwoWaySearcher"* %self to i64*, !dbg !5754
  %_74 = load i64, i64* %55, align 8, !dbg !5754
  %56 = bitcast { i64, i64 }* %self4 to i64*, !dbg !5673
  store i64 %_73, i64* %56, align 8, !dbg !5673
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 1, !dbg !5673
  store i64 %_74, i64* %57, align 8, !dbg !5673
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 0, !dbg !5672
  %_120.0 = load i64, i64* %58, align 8, !dbg !5672
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self4, i32 0, i32 1, !dbg !5672
  %_120.1 = load i64, i64* %59, align 8, !dbg !5672
; call core::iter::adapters::rev::Rev<T>::new
  %60 = call { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h9a3ddd86c8a670d3E"(i64 %_120.0, i64 %_120.1), !dbg !5672
  %self.0 = extractvalue { i64, i64 } %60, 0, !dbg !5672
  %self.1 = extractvalue { i64, i64 } %60, 1, !dbg !5672
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !5672
  store i64 %self.0, i64* %61, align 8, !dbg !5672
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !5672
  store i64 %self.1, i64* %62, align 8, !dbg !5672
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill10, metadata !5755, metadata !DIExpression()), !dbg !5759
  br label %bb52, !dbg !5672

bb52:                                             ; preds = %bb32
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter5, i32 0, i32 0, !dbg !5673
  store i64 %self.0, i64* %63, align 8, !dbg !5673
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter5, i32 0, i32 1, !dbg !5673
  store i64 %self.1, i64* %64, align 8, !dbg !5673
  br label %bb33, !dbg !5760

bb33:                                             ; preds = %bb42, %bb52
  store { i64, i64 }* %iter5, { i64, i64 }** %self.dbg.spill11, align 8, !dbg !5674
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill11, metadata !5761, metadata !DIExpression()), !dbg !5765
  store { i64, i64 }* %iter5, { i64, i64 }** %self.dbg.spill12, align 8, !dbg !5765
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill12, metadata !5766, metadata !DIExpression()), !dbg !5770
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %65 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h14008ed51e9c3bc6E"({ i64, i64 }* align 8 %iter5), !dbg !5770
  store { i64, i64 } %65, { i64, i64 }* %_76, align 8, !dbg !5770
  br label %bb53, !dbg !5770

bb53:                                             ; preds = %bb33
  %66 = bitcast { i64, i64 }* %_76 to i64*, !dbg !5674
  %_79 = load i64, i64* %66, align 8, !dbg !5674, !range !1578, !noundef !28
  switch i64 %_79, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !5674

bb35:                                             ; preds = %bb53
  unreachable, !dbg !5674

bb36:                                             ; preds = %bb53
  %67 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5772
  %match_pos = load i64, i64* %67, align 8, !dbg !5772
  store i64 %match_pos, i64* %match_pos.dbg.spill, align 8, !dbg !5772
  call void @llvm.dbg.declare(metadata i64* %match_pos.dbg.spill, metadata !5648, metadata !DIExpression()), !dbg !5773
  %68 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5774
  %69 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5774
  %70 = load i64, i64* %69, align 8, !dbg !5774
  %71 = add i64 %70, %needle.1, !dbg !5774
  store i64 %71, i64* %68, align 8, !dbg !5774
  %_101 = xor i1 %long_period, true, !dbg !5775
  br i1 %_101, label %bb43, label %bb44, !dbg !5775

bb34:                                             ; preds = %bb53
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_76, i32 0, i32 1, !dbg !5776
  %i13 = load i64, i64* %72, align 8, !dbg !5776
  store i64 %i13, i64* %i.dbg.spill14, align 8, !dbg !5776
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill14, metadata !5646, metadata !DIExpression()), !dbg !5777
  %_85 = icmp ult i64 %i13, %needle.1, !dbg !5778
  %73 = call i1 @llvm.expect.i1(i1 %_85, i1 true), !dbg !5778
  br i1 %73, label %bb37, label %panic15, !dbg !5778

bb37:                                             ; preds = %bb34
  %74 = getelementptr inbounds [0 x i8], [0 x i8]* %needle.0, i64 0, i64 %i13, !dbg !5778
  %_82 = load i8, i8* %74, align 1, !dbg !5778
  %75 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5779
  %_88 = load i64, i64* %75, align 8, !dbg !5779
  %_87 = add i64 %_88, %i13, !dbg !5779
  %_91 = icmp ult i64 %_87, %haystack.1, !dbg !5780
  %76 = call i1 @llvm.expect.i1(i1 %_91, i1 true), !dbg !5780
  br i1 %76, label %bb38, label %panic16, !dbg !5780

panic15:                                          ; preds = %bb34
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %i13, i64 %needle.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc665 to %"core::panic::location::Location"*)) #17, !dbg !5778
  unreachable, !dbg !5778

bb38:                                             ; preds = %bb37
  %77 = getelementptr inbounds [0 x i8], [0 x i8]* %haystack.0, i64 0, i64 %_87, !dbg !5780
  %_86 = load i8, i8* %77, align 1, !dbg !5780
  %_81 = icmp ne i8 %_82, %_86, !dbg !5778
  br i1 %_81, label %bb39, label %bb42, !dbg !5778

panic16:                                          ; preds = %bb37
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_87, i64 %haystack.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc667 to %"core::panic::location::Location"*)) #17, !dbg !5780
  unreachable, !dbg !5780

bb42:                                             ; preds = %bb38
  br label %bb33, !dbg !5760

bb39:                                             ; preds = %bb38
  %78 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2, !dbg !5781
  %_92 = load i64, i64* %78, align 8, !dbg !5781
  %79 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5782
  %80 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 4, !dbg !5782
  %81 = load i64, i64* %80, align 8, !dbg !5782
  %82 = add i64 %81, %_92, !dbg !5782
  store i64 %82, i64* %79, align 8, !dbg !5782
  %_93 = xor i1 %long_period, true, !dbg !5783
  br i1 %_93, label %bb40, label %bb41, !dbg !5783

bb41:                                             ; preds = %bb40, %bb39
  br label %bb46, !dbg !5746

bb40:                                             ; preds = %bb39
  %83 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 2, !dbg !5784
  %_97 = load i64, i64* %83, align 8, !dbg !5784
  %84 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5785
  %85 = sub i64 %needle.1, %_97, !dbg !5785
  store i64 %85, i64* %84, align 8, !dbg !5785
  br label %bb41, !dbg !5786

bb44:                                             ; preds = %bb43, %bb36
  %_104 = add i64 %match_pos, %needle.1, !dbg !5787
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h2f3cec3c950c6e05E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %match_pos, i64 %_104), !dbg !5788
  br label %bb45, !dbg !5788

bb43:                                             ; preds = %bb36
  %86 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %self, i32 0, i32 6, !dbg !5789
  store i64 0, i64* %86, align 8, !dbg !5789
  br label %bb44, !dbg !5790

bb45:                                             ; preds = %bb44
  br label %bb48, !dbg !5709

bb5:                                              ; preds = %bb2
  br label %bb48, !dbg !5717
}

; core::str::pattern::Pattern::is_contained_in
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3str7pattern7Pattern15is_contained_in17hbf42f533dd02bce9E([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5791 {
start:
  %self.dbg.spill1 = alloca %"core::option::Option<(usize, usize)>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_6 = alloca %"core::str::pattern::StrSearcher", align 8
  %_4 = alloca %"core::option::Option<(usize, usize)>", align 8
  %1 = alloca i8, align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5794, metadata !DIExpression()), !dbg !5798
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !5795, metadata !DIExpression()), !dbg !5799
; call <&str as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hc766bacf7d102e30E"(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher") %_6, [0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !5800
  br label %bb1, !dbg !5800

bb1:                                              ; preds = %start
; invoke <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
  invoke void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h9e67ceab2d5ac3b5E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_4, %"core::str::pattern::StrSearcher"* align 8 %_6)
          to label %bb2 unwind label %cleanup, !dbg !5800

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !5801

cleanup:                                          ; preds = %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  store %"core::option::Option<(usize, usize)>"* %_4, %"core::option::Option<(usize, usize)>"** %self.dbg.spill1, align 8, !dbg !5800
  call void @llvm.dbg.declare(metadata %"core::option::Option<(usize, usize)>"** %self.dbg.spill1, metadata !5802, metadata !DIExpression()), !dbg !5809
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %_4 to i64*, !dbg !5809
  %_9 = load i64, i64* %11, align 8, !dbg !5809, !range !1578, !noundef !28
  %12 = icmp eq i64 %_9, 1, !dbg !5809
  br i1 %12, label %bb8, label %bb7, !dbg !5809

bb6:                                              ; preds = %bb5
  %13 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5810
  %14 = load i8*, i8** %13, align 8, !dbg !5810
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5810
  %16 = load i32, i32* %15, align 8, !dbg !5810
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0, !dbg !5810
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1, !dbg !5810
  resume { i8*, i32 } %18, !dbg !5810

bb8:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1, !dbg !5809
  br label %bb3, !dbg !5809

bb7:                                              ; preds = %bb2
  store i8 0, i8* %1, align 1, !dbg !5809
  br label %bb3, !dbg !5809

bb3:                                              ; preds = %bb8, %bb7
  br label %bb4, !dbg !5801

bb4:                                              ; preds = %bb3
  %19 = load i8, i8* %1, align 1, !dbg !5811, !range !1099, !noundef !28
  %20 = trunc i8 %19 to i1, !dbg !5811
  ret i1 %20, !dbg !5811
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h27513490047024c0E(i32 %0, [0 x i8]* align 1 %dst.0, i64 %dst.1) unnamed_addr #0 !dbg !5812 {
start:
  %1 = alloca %"core::fmt::Opaque"*, align 8
  %2 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill23 = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill22 = alloca i64*, align 8
  %x.dbg.spill21 = alloca i64*, align 8
  %3 = alloca %"core::fmt::Opaque"*, align 8
  %4 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill20 = alloca i1 (i32*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill19 = alloca i32*, align 8
  %x.dbg.spill18 = alloca i32*, align 8
  %5 = alloca %"core::fmt::Opaque"*, align 8
  %6 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill17 = alloca i64*, align 8
  %x.dbg.spill = alloca i64*, align 8
  %slice.dbg.spill16 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill15 = alloca i64, align 8
  %self.dbg.spill14 = alloca { [0 x i8]*, i64 }, align 8
  %a.dbg.spill13 = alloca i8*, align 8
  %b.dbg.spill11 = alloca i8*, align 8
  %a.dbg.spill9 = alloca i8*, align 8
  %c.dbg.spill7 = alloca i8*, align 8
  %b.dbg.spill5 = alloca i8*, align 8
  %a.dbg.spill3 = alloca i8*, align 8
  %d.dbg.spill = alloca i8*, align 8
  %c.dbg.spill = alloca i8*, align 8
  %b.dbg.spill = alloca i8*, align 8
  %a.dbg.spill = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_137 = alloca { i64, i64 }, align 8
  %index = alloca i64, align 8
  %_86 = alloca i64, align 8
  %_83 = alloca { i8*, i64* }, align 8
  %_80 = alloca { i8*, i64* }, align 8
  %_77 = alloca { i8*, i64* }, align 8
  %_76 = alloca [3 x { i8*, i64* }], align 8
  %_69 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5816, metadata !DIExpression()), !dbg !5835
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 0
  store [0 x i8]* %dst.0, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 1
  store i64 %dst.1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %dst.dbg.spill, metadata !5817, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5818, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !5838, metadata !DIExpression()), !dbg !5849
  call void @llvm.dbg.declare(metadata i64* %index, metadata !5851, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill, metadata !5865, metadata !DIExpression()), !dbg !5873
  %_5 = load i32, i32* %code, align 4, !dbg !5875
; call core::char::methods::len_utf8
  %9 = call i64 @_ZN4core4char7methods8len_utf817hf0e1d35775b96dcfE(i32 %_5), !dbg !5876
  store i64 %9, i64* %len, align 8, !dbg !5876
  br label %bb1, !dbg !5876

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8, !dbg !5877
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5850
  store [0 x i8]* %dst.0, [0 x i8]** %10, align 8, !dbg !5850
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5850
  store i64 %dst.1, i64* %11, align 8, !dbg !5850
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5846, metadata !DIExpression()), !dbg !5849
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !5849
  store [0 x i8]* %dst.0, [0 x i8]** %12, align 8, !dbg !5849
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !5849
  store i64 %dst.1, i64* %13, align 8, !dbg !5849
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5872, metadata !DIExpression()), !dbg !5873
  %14 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*, !dbg !5878
  store i64 %_7, i64* %14, align 8, !dbg !5878
  %15 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5878
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0, !dbg !5878
  store [0 x i8]* %dst.0, [0 x i8]** %16, align 8, !dbg !5878
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1, !dbg !5878
  store i64 %dst.1, i64* %17, align 8, !dbg !5878
  %18 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*, !dbg !5879
  %19 = load i64, i64* %18, align 8, !dbg !5879
  switch i64 %19, label %bb3 [
    i64 1, label %bb2
    i64 2, label %bb4
    i64 3, label %bb5
    i64 4, label %bb6
  ], !dbg !5879

bb3:                                              ; preds = %bb2, %bb4, %bb5, %bb6, %bb1
  store i64* %len, i64** %x.dbg.spill, align 8, !dbg !5880
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill, metadata !5881, metadata !DIExpression()), !dbg !5887
  store i64* %len, i64** %x.dbg.spill17, align 8, !dbg !5887
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill17, metadata !5889, metadata !DIExpression()), !dbg !5899
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !5887
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !5898, metadata !DIExpression()), !dbg !5899
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !5899
  %_115 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !5899, !nonnull !28, !noundef !28
  br label %bb13, !dbg !5899

bb2:                                              ; preds = %bb1
  %20 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5901
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !5901
  %_94.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !5901, !nonnull !28, !align !1104, !noundef !28
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !5901
  %_94.1 = load i64, i64* %22, align 8, !dbg !5901
  %_14 = icmp uge i64 %_94.1, 1, !dbg !5901
  br i1 %_14, label %bb7, label %bb3, !dbg !5901

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5902
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !5902
  %_95.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !5902, !nonnull !28, !align !1104, !noundef !28
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !5902
  %_95.1 = load i64, i64* %25, align 8, !dbg !5902
  %_17 = icmp uge i64 %_95.1, 2, !dbg !5902
  br i1 %_17, label %bb8, label %bb3, !dbg !5902

bb5:                                              ; preds = %bb1
  %26 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5903
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !5903
  %_96.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !5903, !nonnull !28, !align !1104, !noundef !28
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !5903
  %_96.1 = load i64, i64* %28, align 8, !dbg !5903
  %_20 = icmp uge i64 %_96.1, 3, !dbg !5903
  br i1 %_20, label %bb9, label %bb3, !dbg !5903

bb6:                                              ; preds = %bb1
  %29 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5904
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !5904
  %_97.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !5904, !nonnull !28, !align !1104, !noundef !28
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !5904
  %_97.1 = load i64, i64* %31, align 8, !dbg !5904
  %_23 = icmp uge i64 %_97.1, 4, !dbg !5904
  br i1 %_23, label %bb10, label %bb3, !dbg !5904

bb10:                                             ; preds = %bb6
  %32 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5905
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !5905
  %_104.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !dbg !5905, !nonnull !28, !align !1104, !noundef !28
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !5905
  %_104.1 = load i64, i64* %34, align 8, !dbg !5905
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %_104.0, i64 0, i64 0, !dbg !5905
  store i8* %a, i8** %a.dbg.spill, align 8, !dbg !5905
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill, metadata !5830, metadata !DIExpression()), !dbg !5906
  %35 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5907
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %35, i32 0, i32 0, !dbg !5907
  %_105.0 = load [0 x i8]*, [0 x i8]** %36, align 8, !dbg !5907, !nonnull !28, !align !1104, !noundef !28
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %35, i32 0, i32 1, !dbg !5907
  %_105.1 = load i64, i64* %37, align 8, !dbg !5907
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %_105.0, i64 0, i64 1, !dbg !5907
  store i8* %b, i8** %b.dbg.spill, align 8, !dbg !5907
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill, metadata !5832, metadata !DIExpression()), !dbg !5908
  %38 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5909
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 0, !dbg !5909
  %_106.0 = load [0 x i8]*, [0 x i8]** %39, align 8, !dbg !5909, !nonnull !28, !align !1104, !noundef !28
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 1, !dbg !5909
  %_106.1 = load i64, i64* %40, align 8, !dbg !5909
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %_106.0, i64 0, i64 2, !dbg !5909
  store i8* %c, i8** %c.dbg.spill, align 8, !dbg !5909
  call void @llvm.dbg.declare(metadata i8** %c.dbg.spill, metadata !5833, metadata !DIExpression()), !dbg !5910
  %41 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5911
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %41, i32 0, i32 0, !dbg !5911
  %_107.0 = load [0 x i8]*, [0 x i8]** %42, align 8, !dbg !5911, !nonnull !28, !align !1104, !noundef !28
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %41, i32 0, i32 1, !dbg !5911
  %_107.1 = load i64, i64* %43, align 8, !dbg !5911
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %_107.0, i64 0, i64 3, !dbg !5911
  store i8* %d, i8** %d.dbg.spill, align 8, !dbg !5911
  call void @llvm.dbg.declare(metadata i8** %d.dbg.spill, metadata !5834, metadata !DIExpression()), !dbg !5912
  %_56 = load i32, i32* %code, align 4, !dbg !5913
  %_55 = lshr i32 %_56, 18, !dbg !5913
  %_54 = and i32 %_55, 7, !dbg !5914
  %_53 = trunc i32 %_54 to i8, !dbg !5914
  %44 = or i8 %_53, -16, !dbg !5915
  store i8 %44, i8* %a, align 1, !dbg !5915
  %_60 = load i32, i32* %code, align 4, !dbg !5916
  %_59 = lshr i32 %_60, 12, !dbg !5916
  %_58 = and i32 %_59, 63, !dbg !5917
  %_57 = trunc i32 %_58 to i8, !dbg !5917
  %45 = or i8 %_57, -128, !dbg !5918
  store i8 %45, i8* %b, align 1, !dbg !5918
  %_64 = load i32, i32* %code, align 4, !dbg !5919
  %_63 = lshr i32 %_64, 6, !dbg !5919
  %_62 = and i32 %_63, 63, !dbg !5920
  %_61 = trunc i32 %_62 to i8, !dbg !5920
  %46 = or i8 %_61, -128, !dbg !5921
  store i8 %46, i8* %c, align 1, !dbg !5921
  %_67 = load i32, i32* %code, align 4, !dbg !5922
  %_66 = and i32 %_67, 63, !dbg !5923
  %_65 = trunc i32 %_66 to i8, !dbg !5923
  %47 = or i8 %_65, -128, !dbg !5924
  store i8 %47, i8* %d, align 1, !dbg !5924
  br label %bb12, !dbg !5925

bb12:                                             ; preds = %bb7, %bb8, %bb9, %bb10
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !5864
  store [0 x i8]* %dst.0, [0 x i8]** %48, align 8, !dbg !5864
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !5864
  store i64 %dst.1, i64* %49, align 8, !dbg !5864
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill14, metadata !5860, metadata !DIExpression()), !dbg !5863
  %_92 = load i64, i64* %len, align 8, !dbg !5926
  store i64 %_92, i64* %index, align 8, !dbg !5927
  %self = load i64, i64* %index, align 8, !dbg !5863
  store i64 %self, i64* %self.dbg.spill15, align 8, !dbg !5863
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill15, metadata !5928, metadata !DIExpression()), !dbg !5936
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill16, i32 0, i32 0, !dbg !5863
  store [0 x i8]* %dst.0, [0 x i8]** %50, align 8, !dbg !5863
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill16, i32 0, i32 1, !dbg !5863
  store i64 %dst.1, i64* %51, align 8, !dbg !5863
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill16, metadata !5935, metadata !DIExpression()), !dbg !5936
  %52 = bitcast { i64, i64 }* %_137 to i64*, !dbg !5936
  store i64 0, i64* %52, align 8, !dbg !5936
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 1, !dbg !5936
  store i64 %self, i64* %53, align 8, !dbg !5936
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 0, !dbg !5936
  %55 = load i64, i64* %54, align 8, !dbg !5936
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 1, !dbg !5936
  %57 = load i64, i64* %56, align 8, !dbg !5936
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %58 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h92d2315a36a526acE"(i64 %55, i64 %57, [0 x i8]* align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc669 to %"core::panic::location::Location"*)), !dbg !5936
  %_136.0 = extractvalue { [0 x i8]*, i64 } %58, 0, !dbg !5936
  %_136.1 = extractvalue { [0 x i8]*, i64 } %58, 1, !dbg !5936
  br label %bb19, !dbg !5936

bb9:                                              ; preds = %bb5
  %59 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5938
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 0, !dbg !5938
  %_101.0 = load [0 x i8]*, [0 x i8]** %60, align 8, !dbg !5938, !nonnull !28, !align !1104, !noundef !28
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 1, !dbg !5938
  %_101.1 = load i64, i64* %61, align 8, !dbg !5938
  %a2 = getelementptr inbounds [0 x i8], [0 x i8]* %_101.0, i64 0, i64 0, !dbg !5938
  store i8* %a2, i8** %a.dbg.spill3, align 8, !dbg !5938
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill3, metadata !5826, metadata !DIExpression()), !dbg !5939
  %62 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5940
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 0, !dbg !5940
  %_102.0 = load [0 x i8]*, [0 x i8]** %63, align 8, !dbg !5940, !nonnull !28, !align !1104, !noundef !28
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 1, !dbg !5940
  %_102.1 = load i64, i64* %64, align 8, !dbg !5940
  %b4 = getelementptr inbounds [0 x i8], [0 x i8]* %_102.0, i64 0, i64 1, !dbg !5940
  store i8* %b4, i8** %b.dbg.spill5, align 8, !dbg !5940
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill5, metadata !5828, metadata !DIExpression()), !dbg !5941
  %65 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5942
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 0, !dbg !5942
  %_103.0 = load [0 x i8]*, [0 x i8]** %66, align 8, !dbg !5942, !nonnull !28, !align !1104, !noundef !28
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 1, !dbg !5942
  %_103.1 = load i64, i64* %67, align 8, !dbg !5942
  %c6 = getelementptr inbounds [0 x i8], [0 x i8]* %_103.0, i64 0, i64 2, !dbg !5942
  store i8* %c6, i8** %c.dbg.spill7, align 8, !dbg !5942
  call void @llvm.dbg.declare(metadata i8** %c.dbg.spill7, metadata !5829, metadata !DIExpression()), !dbg !5943
  %_41 = load i32, i32* %code, align 4, !dbg !5944
  %_40 = lshr i32 %_41, 12, !dbg !5944
  %_39 = and i32 %_40, 15, !dbg !5945
  %_38 = trunc i32 %_39 to i8, !dbg !5945
  %68 = or i8 %_38, -32, !dbg !5946
  store i8 %68, i8* %a2, align 1, !dbg !5946
  %_45 = load i32, i32* %code, align 4, !dbg !5947
  %_44 = lshr i32 %_45, 6, !dbg !5947
  %_43 = and i32 %_44, 63, !dbg !5948
  %_42 = trunc i32 %_43 to i8, !dbg !5948
  %69 = or i8 %_42, -128, !dbg !5949
  store i8 %69, i8* %b4, align 1, !dbg !5949
  %_48 = load i32, i32* %code, align 4, !dbg !5950
  %_47 = and i32 %_48, 63, !dbg !5951
  %_46 = trunc i32 %_47 to i8, !dbg !5951
  %70 = or i8 %_46, -128, !dbg !5952
  store i8 %70, i8* %c6, align 1, !dbg !5952
  br label %bb12, !dbg !5953

bb8:                                              ; preds = %bb4
  %71 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5954
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %71, i32 0, i32 0, !dbg !5954
  %_99.0 = load [0 x i8]*, [0 x i8]** %72, align 8, !dbg !5954, !nonnull !28, !align !1104, !noundef !28
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %71, i32 0, i32 1, !dbg !5954
  %_99.1 = load i64, i64* %73, align 8, !dbg !5954
  %a8 = getelementptr inbounds [0 x i8], [0 x i8]* %_99.0, i64 0, i64 0, !dbg !5954
  store i8* %a8, i8** %a.dbg.spill9, align 8, !dbg !5954
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill9, metadata !5823, metadata !DIExpression()), !dbg !5955
  %74 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5956
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 0, !dbg !5956
  %_100.0 = load [0 x i8]*, [0 x i8]** %75, align 8, !dbg !5956, !nonnull !28, !align !1104, !noundef !28
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 1, !dbg !5956
  %_100.1 = load i64, i64* %76, align 8, !dbg !5956
  %b10 = getelementptr inbounds [0 x i8], [0 x i8]* %_100.0, i64 0, i64 1, !dbg !5956
  store i8* %b10, i8** %b.dbg.spill11, align 8, !dbg !5956
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill11, metadata !5825, metadata !DIExpression()), !dbg !5957
  %_31 = load i32, i32* %code, align 4, !dbg !5958
  %_30 = lshr i32 %_31, 6, !dbg !5958
  %_29 = and i32 %_30, 31, !dbg !5959
  %_28 = trunc i32 %_29 to i8, !dbg !5959
  %77 = or i8 %_28, -64, !dbg !5960
  store i8 %77, i8* %a8, align 1, !dbg !5960
  %_34 = load i32, i32* %code, align 4, !dbg !5961
  %_33 = and i32 %_34, 63, !dbg !5962
  %_32 = trunc i32 %_33 to i8, !dbg !5962
  %78 = or i8 %_32, -128, !dbg !5963
  store i8 %78, i8* %b10, align 1, !dbg !5963
  br label %bb12, !dbg !5964

bb7:                                              ; preds = %bb2
  %79 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5965
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %79, i32 0, i32 0, !dbg !5965
  %_98.0 = load [0 x i8]*, [0 x i8]** %80, align 8, !dbg !5965, !nonnull !28, !align !1104, !noundef !28
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %79, i32 0, i32 1, !dbg !5965
  %_98.1 = load i64, i64* %81, align 8, !dbg !5965
  %a12 = getelementptr inbounds [0 x i8], [0 x i8]* %_98.0, i64 0, i64 0, !dbg !5965
  store i8* %a12, i8** %a.dbg.spill13, align 8, !dbg !5965
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill13, metadata !5820, metadata !DIExpression()), !dbg !5966
  %_25 = load i32, i32* %code, align 4, !dbg !5967
  %82 = trunc i32 %_25 to i8, !dbg !5968
  store i8 %82, i8* %a12, align 1, !dbg !5968
  br label %bb12, !dbg !5969

bb19:                                             ; preds = %bb12
  %83 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_136.0, 0, !dbg !5970
  %84 = insertvalue { [0 x i8]*, i64 } %83, i64 %_136.1, 1, !dbg !5970
  ret { [0 x i8]*, i64 } %84, !dbg !5970

bb13:                                             ; preds = %bb3
  %85 = bitcast i64* %len to %"core::fmt::Opaque"*, !dbg !5899
  store %"core::fmt::Opaque"* %85, %"core::fmt::Opaque"** %5, align 8, !dbg !5899
  %_117 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %5, align 8, !dbg !5899, !nonnull !28, !align !1104, !noundef !28
  br label %bb14, !dbg !5899

bb14:                                             ; preds = %bb13
  %86 = bitcast { i8*, i64* }* %_77 to %"core::fmt::Opaque"**, !dbg !5899
  store %"core::fmt::Opaque"* %_117, %"core::fmt::Opaque"** %86, align 8, !dbg !5899
  %87 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 1, !dbg !5899
  %88 = bitcast i64** %87 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5899
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_115, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %88, align 8, !dbg !5899
  store i32* %code, i32** %x.dbg.spill18, align 8, !dbg !5880
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill18, metadata !5971, metadata !DIExpression()), !dbg !5977
  store i32* %code, i32** %x.dbg.spill19, align 8, !dbg !5977
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill19, metadata !5979, metadata !DIExpression()), !dbg !5987
  store i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E", i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill20, align 8, !dbg !5977
  call void @llvm.dbg.declare(metadata i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill20, metadata !5986, metadata !DIExpression()), !dbg !5987
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %4, align 8, !dbg !5987
  %_121 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %4, align 8, !dbg !5987, !nonnull !28, !noundef !28
  br label %bb15, !dbg !5987

bb15:                                             ; preds = %bb14
  %89 = bitcast i32* %code to %"core::fmt::Opaque"*, !dbg !5987
  store %"core::fmt::Opaque"* %89, %"core::fmt::Opaque"** %3, align 8, !dbg !5987
  %_123 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %3, align 8, !dbg !5987, !nonnull !28, !align !1104, !noundef !28
  br label %bb16, !dbg !5987

bb16:                                             ; preds = %bb15
  %90 = bitcast { i8*, i64* }* %_80 to %"core::fmt::Opaque"**, !dbg !5987
  store %"core::fmt::Opaque"* %_123, %"core::fmt::Opaque"** %90, align 8, !dbg !5987
  %91 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 1, !dbg !5987
  %92 = bitcast i64** %91 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5987
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_121, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %92, align 8, !dbg !5987
  store i64 %dst.1, i64* %_86, align 8, !dbg !5989
  store i64* %_86, i64** %x.dbg.spill21, align 8, !dbg !5880
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill21, metadata !5990, metadata !DIExpression()), !dbg !5994
  store i64* %_86, i64** %x.dbg.spill22, align 8, !dbg !5994
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill22, metadata !5995, metadata !DIExpression()), !dbg !6000
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill23, align 8, !dbg !5994
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill23, metadata !5999, metadata !DIExpression()), !dbg !6000
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %2, align 8, !dbg !6000
  %_127 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %2, align 8, !dbg !6000, !nonnull !28, !noundef !28
  br label %bb17, !dbg !6000

bb17:                                             ; preds = %bb16
  %93 = bitcast i64* %_86 to %"core::fmt::Opaque"*, !dbg !6000
  store %"core::fmt::Opaque"* %93, %"core::fmt::Opaque"** %1, align 8, !dbg !6000
  %_129 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %1, align 8, !dbg !6000, !nonnull !28, !align !1104, !noundef !28
  br label %bb18, !dbg !6000

bb18:                                             ; preds = %bb17
  %94 = bitcast { i8*, i64* }* %_83 to %"core::fmt::Opaque"**, !dbg !6000
  store %"core::fmt::Opaque"* %_129, %"core::fmt::Opaque"** %94, align 8, !dbg !6000
  %95 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 1, !dbg !6000
  %96 = bitcast i64** %95 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !6000
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_127, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %96, align 8, !dbg !6000
  %97 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 0, !dbg !5880
  %98 = load i8*, i8** %97, align 8, !dbg !5880, !nonnull !28, !align !1104, !noundef !28
  %99 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 1, !dbg !5880
  %100 = load i64*, i64** %99, align 8, !dbg !5880, !nonnull !28, !noundef !28
  %101 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i64 0, i64 0, !dbg !5880
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 0, !dbg !5880
  store i8* %98, i8** %102, align 8, !dbg !5880
  %103 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 1, !dbg !5880
  store i64* %100, i64** %103, align 8, !dbg !5880
  %104 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 0, !dbg !5880
  %105 = load i8*, i8** %104, align 8, !dbg !5880, !nonnull !28, !align !1104, !noundef !28
  %106 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 1, !dbg !5880
  %107 = load i64*, i64** %106, align 8, !dbg !5880, !nonnull !28, !noundef !28
  %108 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i64 0, i64 1, !dbg !5880
  %109 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %108, i32 0, i32 0, !dbg !5880
  store i8* %105, i8** %109, align 8, !dbg !5880
  %110 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %108, i32 0, i32 1, !dbg !5880
  store i64* %107, i64** %110, align 8, !dbg !5880
  %111 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 0, !dbg !5880
  %112 = load i8*, i8** %111, align 8, !dbg !5880, !nonnull !28, !align !1104, !noundef !28
  %113 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 1, !dbg !5880
  %114 = load i64*, i64** %113, align 8, !dbg !5880, !nonnull !28, !noundef !28
  %115 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i64 0, i64 2, !dbg !5880
  %116 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 0, !dbg !5880
  store i8* %112, i8** %116, align 8, !dbg !5880
  %117 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 1, !dbg !5880
  store i64* %114, i64** %117, align 8, !dbg !5880
  %_73.0 = bitcast [3 x { i8*, i64* }]* %_76 to [0 x { i8*, i64* }]*, !dbg !5880
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_69, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc340 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_73.0, i64 3), !dbg !5880
  br label %bb11, !dbg !5880

bb11:                                             ; preds = %bb18
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_69, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc671 to %"core::panic::location::Location"*)) #17, !dbg !5880
  unreachable, !dbg !5880
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817hf0e1d35775b96dcfE(i32 %code) unnamed_addr #0 !dbg !6002 {
start:
  %code.dbg.spill = alloca i32, align 4
  %0 = alloca i64, align 8
  store i32 %code, i32* %code.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !6006, metadata !DIExpression()), !dbg !6007
  %_2 = icmp ult i32 %code, 128, !dbg !6008
  br i1 %_2, label %bb1, label %bb2, !dbg !6008

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048, !dbg !6009
  br i1 %_4, label %bb3, label %bb4, !dbg !6009

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8, !dbg !6010
  br label %bb9, !dbg !6011

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8, !dbg !6012
  ret i64 %1, !dbg !6012

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536, !dbg !6013
  br i1 %_6, label %bb5, label %bb6, !dbg !6013

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8, !dbg !6014
  br label %bb8, !dbg !6015

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9, !dbg !6011

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8, !dbg !6016
  br label %bb7, !dbg !6017

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8, !dbg !6018
  br label %bb7, !dbg !6017

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8, !dbg !6015
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4iter6traits8iterator8Iterator7collect17h1cf3959126bb78f4E(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Lines"* %self) unnamed_addr #0 !dbg !6019 {
start:
  %_2 = alloca %"core::str::iter::Lines", align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Lines"* %self, metadata !6021, metadata !DIExpression()), !dbg !6025
  %1 = bitcast %"core::str::iter::Lines"* %_2 to i8*, !dbg !6026
  %2 = bitcast %"core::str::iter::Lines"* %self to i8*, !dbg !6026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 72, i1 false), !dbg !6026
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h7211c62a78da3d20E"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Lines"* %_2), !dbg !6027
  br label %bb1, !dbg !6027

bb1:                                              ; preds = %start
  ret void, !dbg !6028
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hcc892045d5f8932cE"(%"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"* sret(%"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>") %0, %"core::str::iter::SplitTerminator<char>"* %iter) unnamed_addr #1 !dbg !6029 {
start:
  %f.dbg.spill = alloca %"core::str::LinesAnyMap", align 1
  %_3 = alloca %"core::str::iter::SplitTerminator<char>", align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitTerminator<char>"* %iter, metadata !6032, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.declare(metadata %"core::str::LinesAnyMap"* %f.dbg.spill, metadata !6033, metadata !DIExpression()), !dbg !6035
  %1 = bitcast %"core::str::iter::SplitTerminator<char>"* %_3 to i8*, !dbg !6036
  %2 = bitcast %"core::str::iter::SplitTerminator<char>"* %iter to i8*, !dbg !6036
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 72, i1 false), !dbg !6036
  %3 = bitcast %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"* %0 to %"core::str::iter::SplitTerminator<char>"*, !dbg !6037
  %4 = bitcast %"core::str::iter::SplitTerminator<char>"* %3 to i8*, !dbg !6037
  %5 = bitcast %"core::str::iter::SplitTerminator<char>"* %_3 to i8*, !dbg !6037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 72, i1 false), !dbg !6037
  %6 = bitcast %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"* %0 to %"core::str::LinesAnyMap"*, !dbg !6037
  ret void, !dbg !6038
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h9a3ddd86c8a670d3E"(i64 %iter.0, i64 %iter.1) unnamed_addr #1 !dbg !6039 {
start:
  %iter.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 0
  store i64 %iter.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter.dbg.spill, i32 0, i32 1
  store i64 %iter.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter.dbg.spill, metadata !6041, metadata !DIExpression()), !dbg !6042
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !6043
  store i64 %iter.0, i64* %3, align 8, !dbg !6043
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !6043
  store i64 %iter.1, i64* %4, align 8, !dbg !6043
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !6044
  %6 = load i64, i64* %5, align 8, !dbg !6044
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !6044
  %8 = load i64, i64* %7, align 8, !dbg !6044
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !6044
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !6044
  ret { i64, i64 } %10, !dbg !6044
}

; core::sync::atomic::atomic_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic10atomic_add17h1664563a3ca77b86E(i64* %dst, i64 %val, i8 %0) unnamed_addr #0 !dbg !6045 {
start:
  %val.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i64*, align 8
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !6050, metadata !DIExpression()), !dbg !6053
  store i64 %val, i64* %val.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !6051, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.declare(metadata i8* %order, metadata !6052, metadata !DIExpression()), !dbg !6055
  %2 = load i8, i8* %order, align 1, !dbg !6056, !range !6057, !noundef !28
  %_4 = zext i8 %2 to i64, !dbg !6056
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb7
    i64 2, label %bb5
    i64 3, label %bb9
    i64 4, label %bb1
  ], !dbg !6058

bb2:                                              ; preds = %start
  unreachable, !dbg !6056

bb3:                                              ; preds = %start
  %3 = atomicrmw add i64* %dst, i64 %val monotonic, align 8, !dbg !6059
  store i64 %3, i64* %1, align 8, !dbg !6059
  br label %bb4, !dbg !6059

bb7:                                              ; preds = %start
  %4 = atomicrmw add i64* %dst, i64 %val release, align 8, !dbg !6060
  store i64 %4, i64* %1, align 8, !dbg !6060
  br label %bb8, !dbg !6060

bb5:                                              ; preds = %start
  %5 = atomicrmw add i64* %dst, i64 %val acquire, align 8, !dbg !6061
  store i64 %5, i64* %1, align 8, !dbg !6061
  br label %bb6, !dbg !6061

bb9:                                              ; preds = %start
  %6 = atomicrmw add i64* %dst, i64 %val acq_rel, align 8, !dbg !6062
  store i64 %6, i64* %1, align 8, !dbg !6062
  br label %bb10, !dbg !6062

bb1:                                              ; preds = %start
  %7 = atomicrmw add i64* %dst, i64 %val seq_cst, align 8, !dbg !6063
  store i64 %7, i64* %1, align 8, !dbg !6063
  br label %bb11, !dbg !6063

bb11:                                             ; preds = %bb1
  br label %bb12, !dbg !6064

bb12:                                             ; preds = %bb4, %bb8, %bb6, %bb10, %bb11
  %8 = load i64, i64* %1, align 8, !dbg !6065
  ret i64 %8, !dbg !6065

bb10:                                             ; preds = %bb9
  br label %bb12, !dbg !6066

bb6:                                              ; preds = %bb5
  br label %bb12, !dbg !6067

bb8:                                              ; preds = %bb7
  br label %bb12, !dbg !6068

bb4:                                              ; preds = %bb3
  br label %bb12, !dbg !6069
}

; core::sync::atomic::atomic_sub
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E(i64* %dst, i64 %val, i8 %0) unnamed_addr #0 !dbg !6070 {
start:
  %val.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i64*, align 8
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !6072, metadata !DIExpression()), !dbg !6075
  store i64 %val, i64* %val.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !6073, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.declare(metadata i8* %order, metadata !6074, metadata !DIExpression()), !dbg !6077
  %2 = load i8, i8* %order, align 1, !dbg !6078, !range !6057, !noundef !28
  %_4 = zext i8 %2 to i64, !dbg !6078
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb7
    i64 2, label %bb5
    i64 3, label %bb9
    i64 4, label %bb1
  ], !dbg !6079

bb2:                                              ; preds = %start
  unreachable, !dbg !6078

bb3:                                              ; preds = %start
  %3 = atomicrmw sub i64* %dst, i64 %val monotonic, align 8, !dbg !6080
  store i64 %3, i64* %1, align 8, !dbg !6080
  br label %bb4, !dbg !6080

bb7:                                              ; preds = %start
  %4 = atomicrmw sub i64* %dst, i64 %val release, align 8, !dbg !6081
  store i64 %4, i64* %1, align 8, !dbg !6081
  br label %bb8, !dbg !6081

bb5:                                              ; preds = %start
  %5 = atomicrmw sub i64* %dst, i64 %val acquire, align 8, !dbg !6082
  store i64 %5, i64* %1, align 8, !dbg !6082
  br label %bb6, !dbg !6082

bb9:                                              ; preds = %start
  %6 = atomicrmw sub i64* %dst, i64 %val acq_rel, align 8, !dbg !6083
  store i64 %6, i64* %1, align 8, !dbg !6083
  br label %bb10, !dbg !6083

bb1:                                              ; preds = %start
  %7 = atomicrmw sub i64* %dst, i64 %val seq_cst, align 8, !dbg !6084
  store i64 %7, i64* %1, align 8, !dbg !6084
  br label %bb11, !dbg !6084

bb11:                                             ; preds = %bb1
  br label %bb12, !dbg !6085

bb12:                                             ; preds = %bb4, %bb8, %bb6, %bb10, %bb11
  %8 = load i64, i64* %1, align 8, !dbg !6086
  ret i64 %8, !dbg !6086

bb10:                                             ; preds = %bb9
  br label %bb12, !dbg !6087

bb6:                                              ; preds = %bb5
  br label %bb12, !dbg !6088

bb8:                                              ; preds = %bb7
  br label %bb12, !dbg !6089

bb4:                                              ; preds = %bb3
  br label %bb12, !dbg !6090
}

; core::sync::atomic::atomic_load
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4sync6atomic11atomic_load17h59d687c8d66b8239E(i64* %dst, i8 %0) unnamed_addr #0 !dbg !6091 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_8 = alloca %"core::fmt::Arguments", align 8
  %1 = alloca i64, align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.declare(metadata i8* %order, metadata !6096, metadata !DIExpression()), !dbg !6098
  %2 = load i8, i8* %order, align 1, !dbg !6099, !range !6057, !noundef !28
  %_3 = zext i8 %2 to i64, !dbg !6099
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb9
    i64 2, label %bb5
    i64 3, label %bb1
    i64 4, label %bb7
  ], !dbg !6100

bb2:                                              ; preds = %start
  unreachable, !dbg !6099

bb3:                                              ; preds = %start
  %3 = load atomic i64, i64* %dst monotonic, align 8, !dbg !6101
  store i64 %3, i64* %1, align 8, !dbg !6101
  br label %bb4, !dbg !6101

bb9:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_8, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc512 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc470 to [0 x { i8*, i64* }]*), i64 0), !dbg !6102
  br label %bb10, !dbg !6102

bb5:                                              ; preds = %start
  %4 = load atomic i64, i64* %dst acquire, align 8, !dbg !6103
  store i64 %4, i64* %1, align 8, !dbg !6103
  br label %bb6, !dbg !6103

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc507 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc470 to [0 x { i8*, i64* }]*), i64 0), !dbg !6104
  br label %bb11, !dbg !6104

bb7:                                              ; preds = %start
  %5 = load atomic i64, i64* %dst seq_cst, align 8, !dbg !6105
  store i64 %5, i64* %1, align 8, !dbg !6105
  br label %bb8, !dbg !6105

bb8:                                              ; preds = %bb7
  br label %bb12, !dbg !6106

bb12:                                             ; preds = %bb4, %bb6, %bb8
  %6 = load i64, i64* %1, align 8, !dbg !6107
  ret i64 %6, !dbg !6107

bb11:                                             ; preds = %bb1
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc673 to %"core::panic::location::Location"*)) #17, !dbg !6104
  unreachable, !dbg !6104

bb6:                                              ; preds = %bb5
  br label %bb12, !dbg !6108

bb10:                                             ; preds = %bb9
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_8, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc675 to %"core::panic::location::Location"*)) #17, !dbg !6102
  unreachable, !dbg !6102

bb4:                                              ; preds = %bb3
  br label %bb12, !dbg !6109
}

; core::sync::atomic::atomic_store
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic12atomic_store17hbca3b501a55c8f51E(i64* %dst, i64 %val, i8 %0) unnamed_addr #0 !dbg !6110 {
start:
  %val.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i64*, align 8
  %_20 = alloca %"core::fmt::Arguments", align 8
  %_12 = alloca %"core::fmt::Arguments", align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !6114, metadata !DIExpression()), !dbg !6117
  store i64 %val, i64* %val.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !6115, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.declare(metadata i8* %order, metadata !6116, metadata !DIExpression()), !dbg !6119
  %1 = load i8, i8* %order, align 1, !dbg !6120, !range !6057, !noundef !28
  %_4 = zext i8 %1 to i64, !dbg !6120
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb5
    i64 2, label %bb9
    i64 3, label %bb1
    i64 4, label %bb7
  ], !dbg !6121

bb2:                                              ; preds = %start
  unreachable, !dbg !6120

bb3:                                              ; preds = %start
  store atomic i64 %val, i64* %dst monotonic, align 8, !dbg !6122
  br label %bb4, !dbg !6122

bb5:                                              ; preds = %start
  store atomic i64 %val, i64* %dst release, align 8, !dbg !6123
  br label %bb6, !dbg !6123

bb9:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_12, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc522 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc470 to [0 x { i8*, i64* }]*), i64 0), !dbg !6124
  br label %bb10, !dbg !6124

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_20, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc517 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc470 to [0 x { i8*, i64* }]*), i64 0), !dbg !6125
  br label %bb11, !dbg !6125

bb7:                                              ; preds = %start
  store atomic i64 %val, i64* %dst seq_cst, align 8, !dbg !6126
  br label %bb8, !dbg !6126

bb8:                                              ; preds = %bb7
  br label %bb12, !dbg !6127

bb12:                                             ; preds = %bb4, %bb6, %bb8
  ret void, !dbg !6128

bb11:                                             ; preds = %bb1
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_20, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc677 to %"core::panic::location::Location"*)) #17, !dbg !6125
  unreachable, !dbg !6125

bb10:                                             ; preds = %bb9
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_12, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc679 to %"core::panic::location::Location"*)) #17, !dbg !6124
  unreachable, !dbg !6124

bb6:                                              ; preds = %bb5
  br label %bb12, !dbg !6129

bb4:                                              ; preds = %bb3
  br label %bb12, !dbg !6130
}

; core::sync::atomic::atomic_compare_exchange
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core4sync6atomic23atomic_compare_exchange17h57ca4702d7acaf8aE(i64* %dst, i64 %old, i64 %new, i8 %success, i8 %failure) unnamed_addr #0 !dbg !6131 {
start:
  %ok.dbg.spill = alloca i8, align 1
  %val.dbg.spill = alloca i64, align 8
  %failure.dbg.spill = alloca i8, align 1
  %success.dbg.spill = alloca i8, align 1
  %new.dbg.spill = alloca i64, align 8
  %old.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i64*, align 8
  %_73 = alloca %"core::fmt::Arguments", align 8
  %_65 = alloca %"core::fmt::Arguments", align 8
  %_9 = alloca { i8, i8 }, align 1
  %_8 = alloca { i64, i8 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !6150, metadata !DIExpression()), !dbg !6158
  store i64 %old, i64* %old.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %old.dbg.spill, metadata !6151, metadata !DIExpression()), !dbg !6159
  store i64 %new, i64* %new.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %new.dbg.spill, metadata !6152, metadata !DIExpression()), !dbg !6160
  store i8 %success, i8* %success.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %success.dbg.spill, metadata !6153, metadata !DIExpression()), !dbg !6161
  store i8 %failure, i8* %failure.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %failure.dbg.spill, metadata !6154, metadata !DIExpression()), !dbg !6162
  %1 = bitcast { i8, i8 }* %_9 to i8*, !dbg !6163
  store i8 %success, i8* %1, align 1, !dbg !6163
  %2 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !6163
  store i8 %failure, i8* %2, align 1, !dbg !6163
  %3 = bitcast { i8, i8 }* %_9 to i8*, !dbg !6163
  %4 = load i8, i8* %3, align 1, !dbg !6163, !range !6057, !noundef !28
  %_18 = zext i8 %4 to i64, !dbg !6163
  switch i64 %_18, label %bb46 [
    i64 0, label %bb1
    i64 1, label %bb3
    i64 2, label %bb4
    i64 3, label %bb5
    i64 4, label %bb6
  ], !dbg !6164

bb46:                                             ; preds = %start
  unreachable, !dbg !6164

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !6163
  %6 = load i8, i8* %5, align 1, !dbg !6163, !range !6057, !noundef !28
  %_12 = zext i8 %6 to i64, !dbg !6163
  switch i64 %_12, label %bb2 [
    i64 0, label %bb9
    i64 2, label %bb11
    i64 4, label %bb13
  ], !dbg !6164

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !6163
  %8 = load i8, i8* %7, align 1, !dbg !6163, !range !6057, !noundef !28
  %_13 = zext i8 %8 to i64, !dbg !6163
  switch i64 %_13, label %bb2 [
    i64 0, label %bb21
    i64 2, label %bb23
    i64 4, label %bb25
  ], !dbg !6164

bb4:                                              ; preds = %start
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !6163
  %10 = load i8, i8* %9, align 1, !dbg !6163, !range !6057, !noundef !28
  %_14 = zext i8 %10 to i64, !dbg !6163
  switch i64 %_14, label %bb2 [
    i64 0, label %bb15
    i64 2, label %bb17
    i64 4, label %bb19
  ], !dbg !6164

bb5:                                              ; preds = %start
  %11 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !6163
  %12 = load i8, i8* %11, align 1, !dbg !6163, !range !6057, !noundef !28
  %_15 = zext i8 %12 to i64, !dbg !6163
  switch i64 %_15, label %bb2 [
    i64 0, label %bb27
    i64 2, label %bb29
    i64 4, label %bb31
  ], !dbg !6164

bb6:                                              ; preds = %start
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !6163
  %14 = load i8, i8* %13, align 1, !dbg !6163, !range !6057, !noundef !28
  %_16 = zext i8 %14 to i64, !dbg !6163
  switch i64 %_16, label %bb2 [
    i64 0, label %bb33
    i64 2, label %bb35
    i64 4, label %bb37
  ], !dbg !6164

bb2:                                              ; preds = %bb1, %bb3, %bb4, %bb5, %bb6
  %15 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_9, i32 0, i32 1, !dbg !6163
  %16 = load i8, i8* %15, align 1, !dbg !6163, !range !6057, !noundef !28
  %_17 = zext i8 %16 to i64, !dbg !6163
  switch i64 %_17, label %bb7 [
    i64 1, label %bb8
    i64 3, label %bb39
  ], !dbg !6164

bb33:                                             ; preds = %bb6
  %17 = cmpxchg i64* %dst, i64 %old, i64 %new seq_cst monotonic, align 8, !dbg !6165
  %18 = extractvalue { i64, i1 } %17, 0, !dbg !6165
  %19 = extractvalue { i64, i1 } %17, 1, !dbg !6165
  %20 = zext i1 %19 to i8, !dbg !6165
  %21 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6165
  store i64 %18, i64* %21, align 8, !dbg !6165
  %22 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6165
  store i8 %20, i8* %22, align 8, !dbg !6165
  br label %bb34, !dbg !6165

bb35:                                             ; preds = %bb6
  %23 = cmpxchg i64* %dst, i64 %old, i64 %new seq_cst acquire, align 8, !dbg !6166
  %24 = extractvalue { i64, i1 } %23, 0, !dbg !6166
  %25 = extractvalue { i64, i1 } %23, 1, !dbg !6166
  %26 = zext i1 %25 to i8, !dbg !6166
  %27 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6166
  store i64 %24, i64* %27, align 8, !dbg !6166
  %28 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6166
  store i8 %26, i8* %28, align 8, !dbg !6166
  br label %bb36, !dbg !6166

bb37:                                             ; preds = %bb6
  %29 = cmpxchg i64* %dst, i64 %old, i64 %new seq_cst seq_cst, align 8, !dbg !6167
  %30 = extractvalue { i64, i1 } %29, 0, !dbg !6167
  %31 = extractvalue { i64, i1 } %29, 1, !dbg !6167
  %32 = zext i1 %31 to i8, !dbg !6167
  %33 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6167
  store i64 %30, i64* %33, align 8, !dbg !6167
  %34 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6167
  store i8 %32, i8* %34, align 8, !dbg !6167
  br label %bb38, !dbg !6167

bb38:                                             ; preds = %bb37
  br label %bb42, !dbg !6168

bb42:                                             ; preds = %bb10, %bb12, %bb14, %bb22, %bb24, %bb26, %bb16, %bb18, %bb20, %bb28, %bb30, %bb32, %bb34, %bb36, %bb38
  %35 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6169
  %val = load i64, i64* %35, align 8, !dbg !6169
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !6169
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !6155, metadata !DIExpression()), !dbg !6170
  %36 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6171
  %37 = load i8, i8* %36, align 8, !dbg !6171, !range !1099, !noundef !28
  %ok = trunc i8 %37 to i1, !dbg !6171
  %38 = zext i1 %ok to i8, !dbg !6171
  store i8 %38, i8* %ok.dbg.spill, align 1, !dbg !6171
  call void @llvm.dbg.declare(metadata i8* %ok.dbg.spill, metadata !6157, metadata !DIExpression()), !dbg !6172
  br i1 %ok, label %bb43, label %bb44, !dbg !6173

bb36:                                             ; preds = %bb35
  br label %bb42, !dbg !6174

bb34:                                             ; preds = %bb33
  br label %bb42, !dbg !6175

bb27:                                             ; preds = %bb5
  %39 = cmpxchg i64* %dst, i64 %old, i64 %new acq_rel monotonic, align 8, !dbg !6176
  %40 = extractvalue { i64, i1 } %39, 0, !dbg !6176
  %41 = extractvalue { i64, i1 } %39, 1, !dbg !6176
  %42 = zext i1 %41 to i8, !dbg !6176
  %43 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6176
  store i64 %40, i64* %43, align 8, !dbg !6176
  %44 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6176
  store i8 %42, i8* %44, align 8, !dbg !6176
  br label %bb28, !dbg !6176

bb29:                                             ; preds = %bb5
  %45 = cmpxchg i64* %dst, i64 %old, i64 %new acq_rel acquire, align 8, !dbg !6177
  %46 = extractvalue { i64, i1 } %45, 0, !dbg !6177
  %47 = extractvalue { i64, i1 } %45, 1, !dbg !6177
  %48 = zext i1 %47 to i8, !dbg !6177
  %49 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6177
  store i64 %46, i64* %49, align 8, !dbg !6177
  %50 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6177
  store i8 %48, i8* %50, align 8, !dbg !6177
  br label %bb30, !dbg !6177

bb31:                                             ; preds = %bb5
  %51 = cmpxchg i64* %dst, i64 %old, i64 %new acq_rel seq_cst, align 8, !dbg !6178
  %52 = extractvalue { i64, i1 } %51, 0, !dbg !6178
  %53 = extractvalue { i64, i1 } %51, 1, !dbg !6178
  %54 = zext i1 %53 to i8, !dbg !6178
  %55 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6178
  store i64 %52, i64* %55, align 8, !dbg !6178
  %56 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6178
  store i8 %54, i8* %56, align 8, !dbg !6178
  br label %bb32, !dbg !6178

bb32:                                             ; preds = %bb31
  br label %bb42, !dbg !6179

bb30:                                             ; preds = %bb29
  br label %bb42, !dbg !6180

bb28:                                             ; preds = %bb27
  br label %bb42, !dbg !6181

bb15:                                             ; preds = %bb4
  %57 = cmpxchg i64* %dst, i64 %old, i64 %new acquire monotonic, align 8, !dbg !6182
  %58 = extractvalue { i64, i1 } %57, 0, !dbg !6182
  %59 = extractvalue { i64, i1 } %57, 1, !dbg !6182
  %60 = zext i1 %59 to i8, !dbg !6182
  %61 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6182
  store i64 %58, i64* %61, align 8, !dbg !6182
  %62 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6182
  store i8 %60, i8* %62, align 8, !dbg !6182
  br label %bb16, !dbg !6182

bb17:                                             ; preds = %bb4
  %63 = cmpxchg i64* %dst, i64 %old, i64 %new acquire acquire, align 8, !dbg !6183
  %64 = extractvalue { i64, i1 } %63, 0, !dbg !6183
  %65 = extractvalue { i64, i1 } %63, 1, !dbg !6183
  %66 = zext i1 %65 to i8, !dbg !6183
  %67 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6183
  store i64 %64, i64* %67, align 8, !dbg !6183
  %68 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6183
  store i8 %66, i8* %68, align 8, !dbg !6183
  br label %bb18, !dbg !6183

bb19:                                             ; preds = %bb4
  %69 = cmpxchg i64* %dst, i64 %old, i64 %new acquire seq_cst, align 8, !dbg !6184
  %70 = extractvalue { i64, i1 } %69, 0, !dbg !6184
  %71 = extractvalue { i64, i1 } %69, 1, !dbg !6184
  %72 = zext i1 %71 to i8, !dbg !6184
  %73 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6184
  store i64 %70, i64* %73, align 8, !dbg !6184
  %74 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6184
  store i8 %72, i8* %74, align 8, !dbg !6184
  br label %bb20, !dbg !6184

bb20:                                             ; preds = %bb19
  br label %bb42, !dbg !6185

bb18:                                             ; preds = %bb17
  br label %bb42, !dbg !6186

bb16:                                             ; preds = %bb15
  br label %bb42, !dbg !6187

bb21:                                             ; preds = %bb3
  %75 = cmpxchg i64* %dst, i64 %old, i64 %new release monotonic, align 8, !dbg !6188
  %76 = extractvalue { i64, i1 } %75, 0, !dbg !6188
  %77 = extractvalue { i64, i1 } %75, 1, !dbg !6188
  %78 = zext i1 %77 to i8, !dbg !6188
  %79 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6188
  store i64 %76, i64* %79, align 8, !dbg !6188
  %80 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6188
  store i8 %78, i8* %80, align 8, !dbg !6188
  br label %bb22, !dbg !6188

bb23:                                             ; preds = %bb3
  %81 = cmpxchg i64* %dst, i64 %old, i64 %new release acquire, align 8, !dbg !6189
  %82 = extractvalue { i64, i1 } %81, 0, !dbg !6189
  %83 = extractvalue { i64, i1 } %81, 1, !dbg !6189
  %84 = zext i1 %83 to i8, !dbg !6189
  %85 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6189
  store i64 %82, i64* %85, align 8, !dbg !6189
  %86 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6189
  store i8 %84, i8* %86, align 8, !dbg !6189
  br label %bb24, !dbg !6189

bb25:                                             ; preds = %bb3
  %87 = cmpxchg i64* %dst, i64 %old, i64 %new release seq_cst, align 8, !dbg !6190
  %88 = extractvalue { i64, i1 } %87, 0, !dbg !6190
  %89 = extractvalue { i64, i1 } %87, 1, !dbg !6190
  %90 = zext i1 %89 to i8, !dbg !6190
  %91 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6190
  store i64 %88, i64* %91, align 8, !dbg !6190
  %92 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6190
  store i8 %90, i8* %92, align 8, !dbg !6190
  br label %bb26, !dbg !6190

bb26:                                             ; preds = %bb25
  br label %bb42, !dbg !6191

bb24:                                             ; preds = %bb23
  br label %bb42, !dbg !6192

bb22:                                             ; preds = %bb21
  br label %bb42, !dbg !6193

bb9:                                              ; preds = %bb1
  %93 = cmpxchg i64* %dst, i64 %old, i64 %new monotonic monotonic, align 8, !dbg !6194
  %94 = extractvalue { i64, i1 } %93, 0, !dbg !6194
  %95 = extractvalue { i64, i1 } %93, 1, !dbg !6194
  %96 = zext i1 %95 to i8, !dbg !6194
  %97 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6194
  store i64 %94, i64* %97, align 8, !dbg !6194
  %98 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6194
  store i8 %96, i8* %98, align 8, !dbg !6194
  br label %bb10, !dbg !6194

bb11:                                             ; preds = %bb1
  %99 = cmpxchg i64* %dst, i64 %old, i64 %new monotonic acquire, align 8, !dbg !6195
  %100 = extractvalue { i64, i1 } %99, 0, !dbg !6195
  %101 = extractvalue { i64, i1 } %99, 1, !dbg !6195
  %102 = zext i1 %101 to i8, !dbg !6195
  %103 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6195
  store i64 %100, i64* %103, align 8, !dbg !6195
  %104 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6195
  store i8 %102, i8* %104, align 8, !dbg !6195
  br label %bb12, !dbg !6195

bb13:                                             ; preds = %bb1
  %105 = cmpxchg i64* %dst, i64 %old, i64 %new monotonic seq_cst, align 8, !dbg !6196
  %106 = extractvalue { i64, i1 } %105, 0, !dbg !6196
  %107 = extractvalue { i64, i1 } %105, 1, !dbg !6196
  %108 = zext i1 %107 to i8, !dbg !6196
  %109 = bitcast { i64, i8 }* %_8 to i64*, !dbg !6196
  store i64 %106, i64* %109, align 8, !dbg !6196
  %110 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_8, i32 0, i32 1, !dbg !6196
  store i8 %108, i8* %110, align 8, !dbg !6196
  br label %bb14, !dbg !6196

bb7:                                              ; preds = %bb2
  unreachable, !dbg !6163

bb8:                                              ; preds = %bb2
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_73, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc497 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc470 to [0 x { i8*, i64* }]*), i64 0), !dbg !6197
  br label %bb41, !dbg !6197

bb39:                                             ; preds = %bb2
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_65, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc502 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc470 to [0 x { i8*, i64* }]*), i64 0), !dbg !6198
  br label %bb40, !dbg !6198

bb40:                                             ; preds = %bb39
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_65, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc681 to %"core::panic::location::Location"*)) #17, !dbg !6198
  unreachable, !dbg !6198

bb41:                                             ; preds = %bb8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_73, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc683 to %"core::panic::location::Location"*)) #17, !dbg !6197
  unreachable, !dbg !6197

bb14:                                             ; preds = %bb13
  br label %bb42, !dbg !6199

bb12:                                             ; preds = %bb11
  br label %bb42, !dbg !6200

bb10:                                             ; preds = %bb9
  br label %bb42, !dbg !6201

bb44:                                             ; preds = %bb42
  %111 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !6202
  store i64 %val, i64* %111, align 8, !dbg !6202
  %112 = bitcast { i64, i64 }* %0 to i64*, !dbg !6202
  store i64 1, i64* %112, align 8, !dbg !6202
  br label %bb45, !dbg !6203

bb43:                                             ; preds = %bb42
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !6204
  store i64 %val, i64* %113, align 8, !dbg !6204
  %114 = bitcast { i64, i64 }* %0 to i64*, !dbg !6204
  store i64 0, i64* %114, align 8, !dbg !6204
  br label %bb45, !dbg !6203

bb45:                                             ; preds = %bb44, %bb43
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !6205
  %116 = load i64, i64* %115, align 8, !dbg !6205, !range !1578, !noundef !28
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !6205
  %118 = load i64, i64* %117, align 8, !dbg !6205
  %119 = insertvalue { i64, i64 } undef, i64 %116, 0, !dbg !6205
  %120 = insertvalue { i64, i64 } %119, i64 %118, 1, !dbg !6205
  ret { i64, i64 } %120, !dbg !6205
}

; core::sync::atomic::fence
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core4sync6atomic5fence17h15f3db8a753d287dE(i8 %0) unnamed_addr #0 !dbg !6206 {
start:
  %_4 = alloca %"core::fmt::Arguments", align 8
  %order = alloca i8, align 1
  store i8 %0, i8* %order, align 1
  call void @llvm.dbg.declare(metadata i8* %order, metadata !6210, metadata !DIExpression()), !dbg !6211
  %1 = load i8, i8* %order, align 1, !dbg !6212, !range !6057, !noundef !28
  %_2 = zext i8 %1 to i64, !dbg !6212
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb4
    i64 2, label %bb3
    i64 3, label %bb5
    i64 4, label %bb6
  ], !dbg !6213

bb2:                                              ; preds = %start
  unreachable, !dbg !6212

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_4, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc453 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc470 to [0 x { i8*, i64* }]*), i64 0), !dbg !6214
  br label %bb7, !dbg !6214

bb4:                                              ; preds = %start
  fence release, !dbg !6215
  br label %bb8, !dbg !6215

bb3:                                              ; preds = %start
  fence acquire, !dbg !6216
  br label %bb8, !dbg !6216

bb5:                                              ; preds = %start
  fence acq_rel, !dbg !6217
  br label %bb8, !dbg !6217

bb6:                                              ; preds = %start
  fence seq_cst, !dbg !6218
  br label %bb8, !dbg !6218

bb8:                                              ; preds = %bb4, %bb3, %bb5, %bb6
  ret void, !dbg !6219

bb7:                                              ; preds = %bb1
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc685 to %"core::panic::location::Location"*)) #17, !dbg !6214
  unreachable, !dbg !6214
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h1a76ce0b01bf9f63E(%"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %t) unnamed_addr #1 !dbg !6220 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill4 = alloca i64, align 8
  %align.dbg.spill3 = alloca i64, align 8
  %size.dbg.spill2 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %val.dbg.spill1 = alloca %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, align 8
  %2 = alloca i64, align 8
  %val.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, align 8
  %t.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, align 8
  %_4 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  store %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %t, %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %t.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %t.dbg.spill, metadata !6225, metadata !DIExpression()), !dbg !6229
  store %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %t, %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %val.dbg.spill, align 8, !dbg !6230
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %val.dbg.spill, metadata !6231, metadata !DIExpression()), !dbg !6237
  store i64 40, i64* %2, align 8, !dbg !6237
  %_5 = load i64, i64* %2, align 8, !dbg !6237
  br label %bb1, !dbg !6237

bb1:                                              ; preds = %start
  store %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %t, %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %val.dbg.spill1, align 8, !dbg !6239
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %val.dbg.spill1, metadata !6240, metadata !DIExpression()), !dbg !6244
  store i64 8, i64* %1, align 8, !dbg !6244
  %_7 = load i64, i64* %1, align 8, !dbg !6244
  br label %bb2, !dbg !6244

bb2:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %_4 to i64*, !dbg !6246
  store i64 %_5, i64* %4, align 8, !dbg !6246
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !6246
  store i64 %_7, i64* %5, align 8, !dbg !6246
  %6 = bitcast { i64, i64 }* %_4 to i64*, !dbg !6247
  %size = load i64, i64* %6, align 8, !dbg !6247
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !6247
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6226, metadata !DIExpression()), !dbg !6248
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !6249
  %align = load i64, i64* %7, align 8, !dbg !6249
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !6249
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !6228, metadata !DIExpression()), !dbg !6250
  store i64 %size, i64* %size.dbg.spill2, align 8, !dbg !6251
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill2, metadata !6252, metadata !DIExpression()), !dbg !6258
  store i64 %align, i64* %align.dbg.spill3, align 8, !dbg !6260
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill3, metadata !6257, metadata !DIExpression()), !dbg !6258
  store i64 %align, i64* %align.dbg.spill4, align 8, !dbg !6258
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill4, metadata !6261, metadata !DIExpression()), !dbg !6276
  store i64 %align, i64* %0, align 8, !dbg !6276
  %_14 = load i64, i64* %0, align 8, !dbg !6276, !range !6278, !noundef !28
  br label %bb3, !dbg !6276

bb3:                                              ; preds = %bb2
  %8 = bitcast { i64, i64 }* %3 to i64*, !dbg !6258
  store i64 %size, i64* %8, align 8, !dbg !6258
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !6258
  store i64 %_14, i64* %9, align 8, !dbg !6258
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !6279
  %11 = load i64, i64* %10, align 8, !dbg !6279
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !6279
  %13 = load i64, i64* %12, align 8, !dbg !6279, !range !6278, !noundef !28
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !6279
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !6279
  ret { i64, i64 } %15, !dbg !6279
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h1ce445a8822533ceE(%"alloc::sync::ArcInner<std::thread::Inner>"* %t) unnamed_addr #1 !dbg !6280 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill4 = alloca i64, align 8
  %align.dbg.spill3 = alloca i64, align 8
  %size.dbg.spill2 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %val.dbg.spill1 = alloca %"alloc::sync::ArcInner<std::thread::Inner>"*, align 8
  %2 = alloca i64, align 8
  %val.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Inner>"*, align 8
  %t.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Inner>"*, align 8
  %_4 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  store %"alloc::sync::ArcInner<std::thread::Inner>"* %t, %"alloc::sync::ArcInner<std::thread::Inner>"** %t.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Inner>"** %t.dbg.spill, metadata !6284, metadata !DIExpression()), !dbg !6288
  store %"alloc::sync::ArcInner<std::thread::Inner>"* %t, %"alloc::sync::ArcInner<std::thread::Inner>"** %val.dbg.spill, align 8, !dbg !6289
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Inner>"** %val.dbg.spill, metadata !6290, metadata !DIExpression()), !dbg !6296
  store i64 48, i64* %2, align 8, !dbg !6296
  %_5 = load i64, i64* %2, align 8, !dbg !6296
  br label %bb1, !dbg !6296

bb1:                                              ; preds = %start
  store %"alloc::sync::ArcInner<std::thread::Inner>"* %t, %"alloc::sync::ArcInner<std::thread::Inner>"** %val.dbg.spill1, align 8, !dbg !6298
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Inner>"** %val.dbg.spill1, metadata !6299, metadata !DIExpression()), !dbg !6303
  store i64 8, i64* %1, align 8, !dbg !6303
  %_7 = load i64, i64* %1, align 8, !dbg !6303
  br label %bb2, !dbg !6303

bb2:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %_4 to i64*, !dbg !6305
  store i64 %_5, i64* %4, align 8, !dbg !6305
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !6305
  store i64 %_7, i64* %5, align 8, !dbg !6305
  %6 = bitcast { i64, i64 }* %_4 to i64*, !dbg !6306
  %size = load i64, i64* %6, align 8, !dbg !6306
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !6306
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6285, metadata !DIExpression()), !dbg !6307
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !6308
  %align = load i64, i64* %7, align 8, !dbg !6308
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !6308
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !6287, metadata !DIExpression()), !dbg !6309
  store i64 %size, i64* %size.dbg.spill2, align 8, !dbg !6310
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill2, metadata !6311, metadata !DIExpression()), !dbg !6315
  store i64 %align, i64* %align.dbg.spill3, align 8, !dbg !6317
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill3, metadata !6314, metadata !DIExpression()), !dbg !6315
  store i64 %align, i64* %align.dbg.spill4, align 8, !dbg !6315
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill4, metadata !6318, metadata !DIExpression()), !dbg !6325
  store i64 %align, i64* %0, align 8, !dbg !6325
  %_14 = load i64, i64* %0, align 8, !dbg !6325, !range !6278, !noundef !28
  br label %bb3, !dbg !6325

bb3:                                              ; preds = %bb2
  %8 = bitcast { i64, i64 }* %3 to i64*, !dbg !6315
  store i64 %size, i64* %8, align 8, !dbg !6315
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !6315
  store i64 %_14, i64* %9, align 8, !dbg !6315
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !6327
  %11 = load i64, i64* %10, align 8, !dbg !6327
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !6327
  %13 = load i64, i64* %12, align 8, !dbg !6327, !range !6278, !noundef !28
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !6327
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !6327
  ret { i64, i64 } %15, !dbg !6327
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h733a0486ea5e593dE(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* %t) unnamed_addr #1 !dbg !6328 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill4 = alloca i64, align 8
  %align.dbg.spill3 = alloca i64, align 8
  %size.dbg.spill2 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %val.dbg.spill1 = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  %2 = alloca i64, align 8
  %val.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  %t.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  %_4 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %t, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %t.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %t.dbg.spill, metadata !6332, metadata !DIExpression()), !dbg !6336
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %t, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %val.dbg.spill, align 8, !dbg !6337
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %val.dbg.spill, metadata !6338, metadata !DIExpression()), !dbg !6344
  store i64 48, i64* %2, align 8, !dbg !6344
  %_5 = load i64, i64* %2, align 8, !dbg !6344
  br label %bb1, !dbg !6344

bb1:                                              ; preds = %start
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %t, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %val.dbg.spill1, align 8, !dbg !6346
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %val.dbg.spill1, metadata !6347, metadata !DIExpression()), !dbg !6351
  store i64 8, i64* %1, align 8, !dbg !6351
  %_7 = load i64, i64* %1, align 8, !dbg !6351
  br label %bb2, !dbg !6351

bb2:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %_4 to i64*, !dbg !6353
  store i64 %_5, i64* %4, align 8, !dbg !6353
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !6353
  store i64 %_7, i64* %5, align 8, !dbg !6353
  %6 = bitcast { i64, i64 }* %_4 to i64*, !dbg !6354
  %size = load i64, i64* %6, align 8, !dbg !6354
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !6354
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6333, metadata !DIExpression()), !dbg !6355
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !6356
  %align = load i64, i64* %7, align 8, !dbg !6356
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !6356
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !6335, metadata !DIExpression()), !dbg !6357
  store i64 %size, i64* %size.dbg.spill2, align 8, !dbg !6358
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill2, metadata !6359, metadata !DIExpression()), !dbg !6363
  store i64 %align, i64* %align.dbg.spill3, align 8, !dbg !6365
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill3, metadata !6362, metadata !DIExpression()), !dbg !6363
  store i64 %align, i64* %align.dbg.spill4, align 8, !dbg !6363
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill4, metadata !6366, metadata !DIExpression()), !dbg !6373
  store i64 %align, i64* %0, align 8, !dbg !6373
  %_14 = load i64, i64* %0, align 8, !dbg !6373, !range !6278, !noundef !28
  br label %bb3, !dbg !6373

bb3:                                              ; preds = %bb2
  %8 = bitcast { i64, i64 }* %3 to i64*, !dbg !6363
  store i64 %size, i64* %8, align 8, !dbg !6363
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !6363
  store i64 %_14, i64* %9, align 8, !dbg !6363
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !6375
  %11 = load i64, i64* %10, align 8, !dbg !6375
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !6375
  %13 = load i64, i64* %12, align 8, !dbg !6375, !range !6278, !noundef !28
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !6375
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !6375
  ret { i64, i64 } %15, !dbg !6375
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17haffdeafed5addff5E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %t) unnamed_addr #1 !dbg !6376 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill4 = alloca i64, align 8
  %align.dbg.spill3 = alloca i64, align 8
  %size.dbg.spill2 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %val.dbg.spill1 = alloca %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, align 8
  %2 = alloca i64, align 8
  %val.dbg.spill = alloca %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, align 8
  %t.dbg.spill = alloca %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, align 8
  %_4 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %t, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %t.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %t.dbg.spill, metadata !6380, metadata !DIExpression()), !dbg !6384
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %t, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %val.dbg.spill, align 8, !dbg !6385
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %val.dbg.spill, metadata !6386, metadata !DIExpression()), !dbg !6392
  store i64 48, i64* %2, align 8, !dbg !6392
  %_5 = load i64, i64* %2, align 8, !dbg !6392
  br label %bb1, !dbg !6392

bb1:                                              ; preds = %start
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %t, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %val.dbg.spill1, align 8, !dbg !6394
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %val.dbg.spill1, metadata !6395, metadata !DIExpression()), !dbg !6399
  store i64 8, i64* %1, align 8, !dbg !6399
  %_7 = load i64, i64* %1, align 8, !dbg !6399
  br label %bb2, !dbg !6399

bb2:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %_4 to i64*, !dbg !6401
  store i64 %_5, i64* %4, align 8, !dbg !6401
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !6401
  store i64 %_7, i64* %5, align 8, !dbg !6401
  %6 = bitcast { i64, i64 }* %_4 to i64*, !dbg !6402
  %size = load i64, i64* %6, align 8, !dbg !6402
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !6402
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6381, metadata !DIExpression()), !dbg !6403
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !6404
  %align = load i64, i64* %7, align 8, !dbg !6404
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !6404
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !6383, metadata !DIExpression()), !dbg !6405
  store i64 %size, i64* %size.dbg.spill2, align 8, !dbg !6406
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill2, metadata !6407, metadata !DIExpression()), !dbg !6411
  store i64 %align, i64* %align.dbg.spill3, align 8, !dbg !6413
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill3, metadata !6410, metadata !DIExpression()), !dbg !6411
  store i64 %align, i64* %align.dbg.spill4, align 8, !dbg !6411
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill4, metadata !6414, metadata !DIExpression()), !dbg !6421
  store i64 %align, i64* %0, align 8, !dbg !6421
  %_14 = load i64, i64* %0, align 8, !dbg !6421, !range !6278, !noundef !28
  br label %bb3, !dbg !6421

bb3:                                              ; preds = %bb2
  %8 = bitcast { i64, i64 }* %3 to i64*, !dbg !6411
  store i64 %size, i64* %8, align 8, !dbg !6411
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !6411
  store i64 %_14, i64* %9, align 8, !dbg !6411
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !6423
  %11 = load i64, i64* %10, align 8, !dbg !6423
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !6423
  %13 = load i64, i64* %12, align 8, !dbg !6423, !range !6278, !noundef !28
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !6423
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !6423
  ret { i64, i64 } %15, !dbg !6423
}

; core::alloc::layout::Layout::from_size_valid_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h3818e18b3b0c1f08E(i64 %size, i64 %align) unnamed_addr #0 !dbg !6424 {
start:
  %n.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %self1 = alloca i64, align 8
  %self = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6445, metadata !DIExpression()), !dbg !6447
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !6446, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.declare(metadata i64* %self, metadata !6449, metadata !DIExpression()), !dbg !6459
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !6461, metadata !DIExpression()), !dbg !6467
  store i64 %align, i64* %self1, align 8, !dbg !6460
  %_15 = load i64, i64* %self1, align 8, !dbg !6467, !range !6278, !noundef !28
  store i64 %_15, i64* %n.dbg.spill, align 8, !dbg !6467
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !6468, metadata !DIExpression()), !dbg !6482
  store i64 %_15, i64* %self, align 8, !dbg !6482
  %_8 = load i64, i64* %self, align 8, !dbg !6459
  %_7 = sub i64 %_8, 1, !dbg !6484
  %_5 = sub i64 9223372036854775807, %_7, !dbg !6485
  %_3 = icmp ugt i64 %size, %_5, !dbg !6486
  br i1 %_3, label %bb1, label %bb2, !dbg !6486

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_11 to i64*, !dbg !6487
  store i64 %size, i64* %1, align 8, !dbg !6487
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !6487
  store i64 %align, i64* %2, align 8, !dbg !6487
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !6488
  %4 = load i64, i64* %3, align 8, !dbg !6488
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !6488
  %6 = load i64, i64* %5, align 8, !dbg !6488, !range !6278, !noundef !28
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !6488
  store i64 %4, i64* %7, align 8, !dbg !6488
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !6488
  store i64 %6, i64* %8, align 8, !dbg !6488
  br label %bb3, !dbg !6489

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !6490
  store i64 0, i64* %9, align 8, !dbg !6490
  br label %bb3, !dbg !6489

bb3:                                              ; preds = %bb2, %bb1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !6489
  %11 = load i64, i64* %10, align 8, !dbg !6489
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !6489
  %13 = load i64, i64* %12, align 8, !dbg !6489, !range !1479, !noundef !28
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !6489
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !6489
  ret { i64, i64 } %15, !dbg !6489
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h19e26fcbb5fdf4b7E(i64 %n) unnamed_addr #0 !dbg !6491 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !6495, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !6516, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !6560, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !6566, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !6498, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !6572, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !6555, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !6578, metadata !DIExpression()), !dbg !6586
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h46bb431c73bc0d4cE"(i64 1, i64 %n), !dbg !6559
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !6559
  br label %bb1, !dbg !6559

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !6570
  %_15 = load i64, i64* %3, align 8, !dbg !6570, !range !1578, !noundef !28
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !6570

bb9:                                              ; preds = %bb1
  unreachable, !dbg !6570

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !6570
  store i64 1, i64* %4, align 8, !dbg !6570
  br label %bb11, !dbg !6570

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !6570
  %v = load i64, i64* %5, align 8, !dbg !6570
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !6570
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !6567, metadata !DIExpression()), !dbg !6587
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !6587
  store i64 %v, i64* %6, align 8, !dbg !6587
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !6587
  store i64 0, i64* %7, align 8, !dbg !6587
  br label %bb11, !dbg !6570

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !6558
  %_18 = load i64, i64* %8, align 8, !dbg !6558, !range !1578, !noundef !28
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !6558

bb13:                                             ; preds = %bb11
  unreachable, !dbg !6558

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !6558
  %v4 = load i64, i64* %9, align 8, !dbg !6558
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !6558
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !6552, metadata !DIExpression()), !dbg !6588
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !6588
  store i64 %v4, i64* %10, align 8, !dbg !6588
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !6588
  store i64 0, i64* %11, align 8, !dbg !6588
  br label %bb2, !dbg !6558

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !6585
  store i64 1, i64* %12, align 8, !dbg !6585
  br label %bb2, !dbg !6558

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !6559
  %_9 = load i64, i64* %13, align 8, !dbg !6559, !range !1578, !noundef !28
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !6559

bb4:                                              ; preds = %bb2
  unreachable, !dbg !6559

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !6559
  %val = load i64, i64* %14, align 8, !dbg !6559
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !6559
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !6513, metadata !DIExpression()), !dbg !6589
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !6589
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !6496, metadata !DIExpression()), !dbg !6590
  store i64 1, i64* %align.dbg.spill, align 8, !dbg !6591
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !6599, metadata !DIExpression()), !dbg !6606
  store i64 1, i64* %0, align 8, !dbg !6606
  %_14 = load i64, i64* %0, align 8, !dbg !6606, !range !6278, !noundef !28
  br label %bb15, !dbg !6606

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb133b7b8ca8fd9dfE"(), !dbg !6586
  br label %bb16, !dbg !6586

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !6586
  store i64 0, i64* %15, align 8, !dbg !6586
  br label %bb7, !dbg !6608

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !6608
  %17 = load i64, i64* %16, align 8, !dbg !6608
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !6608
  %19 = load i64, i64* %18, align 8, !dbg !6608, !range !1479, !noundef !28
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !6608
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !6608
  ret { i64, i64 } %21, !dbg !6608

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h3818e18b3b0c1f08E(i64 %val, i64 %_14), !dbg !6609
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !6609
  br label %bb6, !dbg !6609

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !6608
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h9459a5cb1ebe3a3fE(i64 %n) unnamed_addr #0 !dbg !6610 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !6612, metadata !DIExpression()), !dbg !6619
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !6620, metadata !DIExpression()), !dbg !6630
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !6632, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !6636, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !6615, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !6642, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !6627, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !6646, metadata !DIExpression()), !dbg !6652
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h46bb431c73bc0d4cE"(i64 16, i64 %n), !dbg !6631
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !6631
  br label %bb1, !dbg !6631

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !6640
  %_15 = load i64, i64* %3, align 8, !dbg !6640, !range !1578, !noundef !28
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !6640

bb9:                                              ; preds = %bb1
  unreachable, !dbg !6640

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !6640
  store i64 1, i64* %4, align 8, !dbg !6640
  br label %bb11, !dbg !6640

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !6640
  %v = load i64, i64* %5, align 8, !dbg !6640
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !6640
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !6637, metadata !DIExpression()), !dbg !6653
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !6653
  store i64 %v, i64* %6, align 8, !dbg !6653
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !6653
  store i64 0, i64* %7, align 8, !dbg !6653
  br label %bb11, !dbg !6640

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !6630
  %_18 = load i64, i64* %8, align 8, !dbg !6630, !range !1578, !noundef !28
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !6630

bb13:                                             ; preds = %bb11
  unreachable, !dbg !6630

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !6630
  %v4 = load i64, i64* %9, align 8, !dbg !6630
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !6630
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !6624, metadata !DIExpression()), !dbg !6654
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !6654
  store i64 %v4, i64* %10, align 8, !dbg !6654
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !6654
  store i64 0, i64* %11, align 8, !dbg !6654
  br label %bb2, !dbg !6630

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !6651
  store i64 1, i64* %12, align 8, !dbg !6651
  br label %bb2, !dbg !6630

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !6631
  %_9 = load i64, i64* %13, align 8, !dbg !6631, !range !1578, !noundef !28
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !6631

bb4:                                              ; preds = %bb2
  unreachable, !dbg !6631

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !6631
  %val = load i64, i64* %14, align 8, !dbg !6631
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !6631
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !6617, metadata !DIExpression()), !dbg !6655
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !6655
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !6613, metadata !DIExpression()), !dbg !6656
  store i64 8, i64* %align.dbg.spill, align 8, !dbg !6657
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !6663, metadata !DIExpression()), !dbg !6670
  store i64 8, i64* %0, align 8, !dbg !6670
  %_14 = load i64, i64* %0, align 8, !dbg !6670, !range !6278, !noundef !28
  br label %bb15, !dbg !6670

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb133b7b8ca8fd9dfE"(), !dbg !6652
  br label %bb16, !dbg !6652

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !6652
  store i64 0, i64* %15, align 8, !dbg !6652
  br label %bb7, !dbg !6672

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !6672
  %17 = load i64, i64* %16, align 8, !dbg !6672
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !6672
  %19 = load i64, i64* %18, align 8, !dbg !6672, !range !1479, !noundef !28
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !6672
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !6672
  ret { i64, i64 } %21, !dbg !6672

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h3818e18b3b0c1f08E(i64 %val, i64 %_14), !dbg !6673
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !6673
  br label %bb6, !dbg !6673

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !6672
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h65117bdedec693f7E"([16 x i32]* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !6674 {
start:
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill3 = alloca [16 x i32]*, align 8
  %self.dbg.spill2 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [16 x i32]*, align 8
  %_5 = alloca { [0 x i32]*, i64 }, align 8
  store [16 x i32]* %self, [16 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]** %self.dbg.spill, metadata !6681, metadata !DIExpression()), !dbg !6683
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !6685, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill1, metadata !6695, metadata !DIExpression()), !dbg !6702
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill2, metadata !6704, metadata !DIExpression()), !dbg !6711
  store [16 x i32]* %self, [16 x i32]** %self.dbg.spill3, align 8, !dbg !6694
  call void @llvm.dbg.declare(metadata [16 x i32]** %self.dbg.spill3, metadata !6691, metadata !DIExpression()), !dbg !6693
  %_11.0 = bitcast [16 x i32]* %self to [0 x i32]*, !dbg !6693
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !6693
  store [0 x i32]* %_11.0, [0 x i32]** %0, align 8, !dbg !6693
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !6693
  store i64 16, i64* %1, align 8, !dbg !6693
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill4, metadata !6701, metadata !DIExpression()), !dbg !6702
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !6702
  store [0 x i32]* %_11.0, [0 x i32]** %2, align 8, !dbg !6702
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !6702
  store i64 16, i64* %3, align 8, !dbg !6702
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !6710, metadata !DIExpression()), !dbg !6711
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 0, !dbg !6713
  store [0 x i32]* %_11.0, [0 x i32]** %4, align 8, !dbg !6713
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 1, !dbg !6713
  store i64 16, i64* %5, align 8, !dbg !6713
; call <&T as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h388f944a0ba5fb00E"({ [0 x i32]*, i64 }* align 8 %_5, %"core::fmt::Formatter"* align 8 %f), !dbg !6714
  br label %bb1, !dbg !6714

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !6715
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hcbcabcbc5690b5d9E"([11 x i32]* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !6716 {
start:
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill3 = alloca [11 x i32]*, align 8
  %self.dbg.spill2 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [11 x i32]*, align 8
  %_5 = alloca { [0 x i32]*, i64 }, align 8
  store [11 x i32]* %self, [11 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i32]** %self.dbg.spill, metadata !6720, metadata !DIExpression()), !dbg !6722
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !6721, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !6724, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill1, metadata !6732, metadata !DIExpression()), !dbg !6737
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill2, metadata !6739, metadata !DIExpression()), !dbg !6744
  store [11 x i32]* %self, [11 x i32]** %self.dbg.spill3, align 8, !dbg !6731
  call void @llvm.dbg.declare(metadata [11 x i32]** %self.dbg.spill3, metadata !6729, metadata !DIExpression()), !dbg !6730
  %_11.0 = bitcast [11 x i32]* %self to [0 x i32]*, !dbg !6730
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !6730
  store [0 x i32]* %_11.0, [0 x i32]** %0, align 8, !dbg !6730
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !6730
  store i64 11, i64* %1, align 8, !dbg !6730
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill4, metadata !6736, metadata !DIExpression()), !dbg !6737
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !6737
  store [0 x i32]* %_11.0, [0 x i32]** %2, align 8, !dbg !6737
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !6737
  store i64 11, i64* %3, align 8, !dbg !6737
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !6743, metadata !DIExpression()), !dbg !6744
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 0, !dbg !6746
  store [0 x i32]* %_11.0, [0 x i32]** %4, align 8, !dbg !6746
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 1, !dbg !6746
  store i64 11, i64* %5, align 8, !dbg !6746
; call <&T as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h388f944a0ba5fb00E"({ [0 x i32]*, i64 }* align 8 %_5, %"core::fmt::Formatter"* align 8 %f), !dbg !6747
  br label %bb1, !dbg !6747

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !6748
}

; core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h62e75519163072eeE"([11 x i32]* align 4 %self, [11 x i32]* align 4 %other) unnamed_addr #0 !dbg !6749 {
start:
  %other.dbg.spill = alloca [11 x i32]*, align 8
  %self.dbg.spill = alloca [11 x i32]*, align 8
  store [11 x i32]* %self, [11 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i32]** %self.dbg.spill, metadata !6756, metadata !DIExpression()), !dbg !6761
  store [11 x i32]* %other, [11 x i32]** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i32]** %other.dbg.spill, metadata !6757, metadata !DIExpression()), !dbg !6762
; call <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
  %0 = call zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h1ea9d04047e5b119E"([11 x i32]* align 4 %self, [11 x i32]* align 4 %other), !dbg !6763
  br label %bb1, !dbg !6763

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !6764
}

; core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hef36bf5c9afa71deE"([16 x i32]* align 4 %self, [16 x i32]* align 4 %other) unnamed_addr #0 !dbg !6765 {
start:
  %other.dbg.spill = alloca [16 x i32]*, align 8
  %self.dbg.spill = alloca [16 x i32]*, align 8
  store [16 x i32]* %self, [16 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]** %self.dbg.spill, metadata !6769, metadata !DIExpression()), !dbg !6771
  store [16 x i32]* %other, [16 x i32]** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]** %other.dbg.spill, metadata !6770, metadata !DIExpression()), !dbg !6772
; call <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
  %0 = call zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h904442c2dbb18634E"([16 x i32]* align 4 %self, [16 x i32]* align 4 %other), !dbg !6773
  br label %bb1, !dbg !6773

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !6774
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h0239486d9a4ab0b9E"(i64* align 8 %self) unnamed_addr #0 !dbg !6775 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !6783, metadata !DIExpression()), !dbg !6784
  %0 = load i64, i64* %self, align 8, !dbg !6785
  ret i64 %0, !dbg !6786
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha608522f02daa2efE"([0 x i32]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !6787 {
start:
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !6795, metadata !DIExpression()), !dbg !6796
  %2 = bitcast [0 x i32]* %self.0 to i32*, !dbg !6797
  ret i32* %2, !dbg !6798
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3ea2a2b79a52364dE"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1) unnamed_addr #0 !dbg !6799 {
start:
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %self.0, [0 x { [0 x i8]*, i64 }]** %0, align 8
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !6811, metadata !DIExpression()), !dbg !6812
; call core::slice::iter::Iter<T>::new
  %2 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hd1c0efa1a39c6a6dE"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1), !dbg !6813
  %3 = extractvalue { i64*, i64* } %2, 0, !dbg !6813
  %4 = extractvalue { i64*, i64* } %2, 1, !dbg !6813
  br label %bb1, !dbg !6813

bb1:                                              ; preds = %start
  %5 = insertvalue { i64*, i64* } undef, i64* %3, 0, !dbg !6814
  %6 = insertvalue { i64*, i64* } %5, i64* %4, 1, !dbg !6814
  ret { i64*, i64* } %6, !dbg !6814
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h8417e7e68e2e7c02E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !6815 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6822, metadata !DIExpression()), !dbg !6824
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !6823, metadata !DIExpression()), !dbg !6825
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %4 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h3b54d3325e8b8859E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1), !dbg !6826
  br label %bb1, !dbg !6826

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !6827
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h89eec0c95a4a6cfeE"([0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !6828 {
start:
  %ptr.dbg.spill10 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill9 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %3 = alloca { i8*, i8* }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !6833, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.declare(metadata i8** %end, metadata !6836, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !6840, metadata !DIExpression()), !dbg !6847
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6860
  store [0 x i8]* %slice.0, [0 x i8]** %6, align 8, !dbg !6860
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6860
  store i64 %slice.1, i64* %7, align 8, !dbg !6860
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6861, metadata !DIExpression()), !dbg !6867
  %ptr = bitcast [0 x i8]* %slice.0 to i8*, !dbg !6867
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !6867
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !6834, metadata !DIExpression()), !dbg !6868
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !6859
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !6857, metadata !DIExpression()), !dbg !6869
  store i8* %ptr, i8** %self.dbg.spill2, align 8, !dbg !6869
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !6870, metadata !DIExpression()), !dbg !6877
  %8 = bitcast {}** %2 to i64*, !dbg !6879
  store i64 0, i64* %8, align 8, !dbg !6879
  %data_address = load {}*, {}** %2, align 8, !dbg !6879
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6879
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6846, metadata !DIExpression()), !dbg !6847
  br label %bb5, !dbg !6879

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !6847
  store {}* %data_address, {}** %9, align 8, !dbg !6847
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !6847
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !6847
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !6847
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6847
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !6847
  %other = load i8*, i8** %13, align 8, !dbg !6847
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !6847
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6876, metadata !DIExpression()), !dbg !6877
  %14 = icmp eq i8* %ptr, %other, !dbg !6877
  %15 = zext i1 %14 to i8, !dbg !6877
  store i8 %15, i8* %1, align 1, !dbg !6877
  %16 = load i8, i8* %1, align 1, !dbg !6877, !range !1099, !noundef !28
  %_6 = trunc i8 %16 to i1, !dbg !6877
  br label %bb6, !dbg !6877

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !6887
  call void @llvm.assume(i1 %_5), !dbg !6888
  br label %bb1, !dbg !6888

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !6889

bb2:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill6, align 8, !dbg !6890
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !6891, metadata !DIExpression()), !dbg !6896
  store i64 %slice.1, i64* %count.dbg.spill7, align 8, !dbg !6897
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !6895, metadata !DIExpression()), !dbg !6896
  store i8* %ptr, i8** %self.dbg.spill8, align 8, !dbg !6896
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !6898, metadata !DIExpression()), !dbg !6903
  store i64 %slice.1, i64* %count.dbg.spill9, align 8, !dbg !6896
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill9, metadata !6902, metadata !DIExpression()), !dbg !6903
  %17 = getelementptr i8, i8* %ptr, i64 %slice.1, !dbg !6903
  store i8* %17, i8** %0, align 8, !dbg !6903
  %_10 = load i8*, i8** %0, align 8, !dbg !6903
  br label %bb7, !dbg !6903

bb3:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !6905
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !6906, metadata !DIExpression()), !dbg !6911
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !6912
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6910, metadata !DIExpression()), !dbg !6911
  store i8* %ptr, i8** %self.dbg.spill4, align 8, !dbg !6911
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !6913, metadata !DIExpression()), !dbg !6918
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !6911
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !6917, metadata !DIExpression()), !dbg !6918
  %18 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1, !dbg !6918
  store i8* %18, i8** %end, align 8, !dbg !6918
  br label %bb8, !dbg !6918

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !6920

bb4:                                              ; preds = %bb7, %bb8
  store i8* %ptr, i8** %ptr.dbg.spill10, align 8, !dbg !6921
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill10, metadata !6922, metadata !DIExpression()), !dbg !6926
  store i8* %ptr, i8** %_18, align 8, !dbg !6926
  %_21 = load i8*, i8** %end, align 8, !dbg !6928
  %19 = bitcast { i8*, i8* }* %3 to i8**, !dbg !6929
  %20 = load i8*, i8** %_18, align 8, !dbg !6929, !nonnull !28, !noundef !28
  store i8* %20, i8** %19, align 8, !dbg !6929
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !6929
  store i8* %_21, i8** %21, align 8, !dbg !6929
  %22 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0, !dbg !6930
  %23 = load i8*, i8** %22, align 8, !dbg !6930, !nonnull !28, !noundef !28
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !6930
  %25 = load i8*, i8** %24, align 8, !dbg !6930
  %26 = insertvalue { i8*, i8* } undef, i8* %23, 0, !dbg !6930
  %27 = insertvalue { i8*, i8* } %26, i8* %25, 1, !dbg !6930
  ret { i8*, i8* } %27, !dbg !6930

bb7:                                              ; preds = %bb2
  store i8* %_10, i8** %end, align 8, !dbg !6890
  br label %bb4, !dbg !6920
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hb99186a617c39175E"([0 x i32]* align 4 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !6931 {
start:
  %ptr.dbg.spill11 = alloca i32*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i32*, align 8
  %end = alloca i32*, align 8
  %3 = alloca { i32*, i32* }, align 8
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i32]* %slice.0, [0 x i32]** %4, align 8
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !6933, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.declare(metadata i32** %end, metadata !6936, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !6940, metadata !DIExpression()), !dbg !6945
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6956
  store [0 x i32]* %slice.0, [0 x i32]** %6, align 8, !dbg !6956
  %7 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6956
  store i64 %slice.1, i64* %7, align 8, !dbg !6956
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !6957, metadata !DIExpression()), !dbg !6963
  %ptr = bitcast [0 x i32]* %slice.0 to i32*, !dbg !6963
  store i32* %ptr, i32** %ptr.dbg.spill, align 8, !dbg !6963
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !6934, metadata !DIExpression()), !dbg !6964
  store i32* %ptr, i32** %self.dbg.spill1, align 8, !dbg !6955
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !6953, metadata !DIExpression()), !dbg !6965
  %self = bitcast i32* %ptr to i8*, !dbg !6965
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !6965
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !6966, metadata !DIExpression()), !dbg !6971
  %8 = bitcast {}** %2 to i64*, !dbg !6973
  store i64 0, i64* %8, align 8, !dbg !6973
  %data_address = load {}*, {}** %2, align 8, !dbg !6973
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6973
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6944, metadata !DIExpression()), !dbg !6945
  br label %bb5, !dbg !6973

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !6945
  store {}* %data_address, {}** %9, align 8, !dbg !6945
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !6945
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !6945
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !6945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6945
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !6945
  %other = load i8*, i8** %13, align 8, !dbg !6945
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !6945
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6970, metadata !DIExpression()), !dbg !6971
  %14 = icmp eq i8* %self, %other, !dbg !6971
  %15 = zext i1 %14 to i8, !dbg !6971
  store i8 %15, i8* %1, align 1, !dbg !6971
  %16 = load i8, i8* %1, align 1, !dbg !6971, !range !1099, !noundef !28
  %_6 = trunc i8 %16 to i1, !dbg !6971
  br label %bb6, !dbg !6971

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !6979
  call void @llvm.assume(i1 %_5), !dbg !6980
  br label %bb1, !dbg !6980

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !6981

bb2:                                              ; preds = %bb1
  %self6 = bitcast i32* %ptr to i8*, !dbg !6982
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !6982
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6983, metadata !DIExpression()), !dbg !6988
  store i64 %slice.1, i64* %count.dbg.spill8, align 8, !dbg !6989
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !6987, metadata !DIExpression()), !dbg !6988
  store i8* %self6, i8** %self.dbg.spill9, align 8, !dbg !6988
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !6990, metadata !DIExpression()), !dbg !6995
  store i64 %slice.1, i64* %count.dbg.spill10, align 8, !dbg !6988
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !6994, metadata !DIExpression()), !dbg !6995
  %17 = getelementptr i8, i8* %self6, i64 %slice.1, !dbg !6995
  store i8* %17, i8** %0, align 8, !dbg !6995
  %_10 = load i8*, i8** %0, align 8, !dbg !6995
  br label %bb7, !dbg !6995

bb3:                                              ; preds = %bb1
  store i32* %ptr, i32** %self.dbg.spill3, align 8, !dbg !6997
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !6998, metadata !DIExpression()), !dbg !7005
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !7006
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !7004, metadata !DIExpression()), !dbg !7005
  store i32* %ptr, i32** %self.dbg.spill4, align 8, !dbg !7005
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !7007, metadata !DIExpression()), !dbg !7014
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !7005
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !7013, metadata !DIExpression()), !dbg !7014
  %18 = getelementptr inbounds i32, i32* %ptr, i64 %slice.1, !dbg !7014
  store i32* %18, i32** %end, align 8, !dbg !7014
  br label %bb8, !dbg !7014

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !7016

bb4:                                              ; preds = %bb7, %bb8
  store i32* %ptr, i32** %ptr.dbg.spill11, align 8, !dbg !7017
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill11, metadata !7018, metadata !DIExpression()), !dbg !7024
  store i32* %ptr, i32** %_18, align 8, !dbg !7024
  %_21 = load i32*, i32** %end, align 8, !dbg !7026
  %19 = bitcast { i32*, i32* }* %3 to i32**, !dbg !7027
  %20 = load i32*, i32** %_18, align 8, !dbg !7027, !nonnull !28, !noundef !28
  store i32* %20, i32** %19, align 8, !dbg !7027
  %21 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 1, !dbg !7027
  store i32* %_21, i32** %21, align 8, !dbg !7027
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 0, !dbg !7028
  %23 = load i32*, i32** %22, align 8, !dbg !7028, !nonnull !28, !noundef !28
  %24 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 1, !dbg !7028
  %25 = load i32*, i32** %24, align 8, !dbg !7028
  %26 = insertvalue { i32*, i32* } undef, i32* %23, 0, !dbg !7028
  %27 = insertvalue { i32*, i32* } %26, i32* %25, 1, !dbg !7028
  ret { i32*, i32* } %27, !dbg !7028

bb7:                                              ; preds = %bb2
  %28 = bitcast i8* %_10 to i32*, !dbg !6982
  store i32* %28, i32** %end, align 8, !dbg !6982
  br label %bb4, !dbg !7016
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hd1c0efa1a39c6a6dE"([0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !7029 {
start:
  %ptr.dbg.spill11 = alloca { [0 x i8]*, i64 }*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i64*, align 8
  %end = alloca { [0 x i8]*, i64 }*, align 8
  %3 = alloca { i64*, i64* }, align 8
  %4 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %4, align 8
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, metadata !7031, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %end, metadata !7034, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !7038, metadata !DIExpression()), !dbg !7043
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !7054
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %6, align 8, !dbg !7054
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !7054
  store i64 %slice.1, i64* %7, align 8, !dbg !7054
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !7055, metadata !DIExpression()), !dbg !7061
  %ptr = bitcast [0 x { [0 x i8]*, i64 }]* %slice.0 to { [0 x i8]*, i64 }*, !dbg !7061
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill, align 8, !dbg !7061
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill, metadata !7032, metadata !DIExpression()), !dbg !7062
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %self.dbg.spill1, align 8, !dbg !7053
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill1, metadata !7051, metadata !DIExpression()), !dbg !7063
  %self = bitcast { [0 x i8]*, i64 }* %ptr to i8*, !dbg !7063
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !7063
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !7064, metadata !DIExpression()), !dbg !7069
  %8 = bitcast {}** %2 to i64*, !dbg !7071
  store i64 0, i64* %8, align 8, !dbg !7071
  %data_address = load {}*, {}** %2, align 8, !dbg !7071
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !7071
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !7042, metadata !DIExpression()), !dbg !7043
  br label %bb5, !dbg !7071

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !7043
  store {}* %data_address, {}** %9, align 8, !dbg !7043
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !7043
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !7043
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !7043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !7043
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !7043
  %other = load i8*, i8** %13, align 8, !dbg !7043
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !7043
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !7068, metadata !DIExpression()), !dbg !7069
  %14 = icmp eq i8* %self, %other, !dbg !7069
  %15 = zext i1 %14 to i8, !dbg !7069
  store i8 %15, i8* %1, align 1, !dbg !7069
  %16 = load i8, i8* %1, align 1, !dbg !7069, !range !1099, !noundef !28
  %_6 = trunc i8 %16 to i1, !dbg !7069
  br label %bb6, !dbg !7069

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !7077
  call void @llvm.assume(i1 %_5), !dbg !7078
  br label %bb1, !dbg !7078

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !7079

bb2:                                              ; preds = %bb1
  %self6 = bitcast { [0 x i8]*, i64 }* %ptr to i8*, !dbg !7080
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !7080
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !7081, metadata !DIExpression()), !dbg !7086
  store i64 %slice.1, i64* %count.dbg.spill8, align 8, !dbg !7087
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !7085, metadata !DIExpression()), !dbg !7086
  store i8* %self6, i8** %self.dbg.spill9, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !7088, metadata !DIExpression()), !dbg !7093
  store i64 %slice.1, i64* %count.dbg.spill10, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !7092, metadata !DIExpression()), !dbg !7093
  %17 = getelementptr i8, i8* %self6, i64 %slice.1, !dbg !7093
  store i8* %17, i8** %0, align 8, !dbg !7093
  %_10 = load i8*, i8** %0, align 8, !dbg !7093
  br label %bb7, !dbg !7093

bb3:                                              ; preds = %bb1
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %self.dbg.spill3, align 8, !dbg !7095
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill3, metadata !7096, metadata !DIExpression()), !dbg !7103
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !7104
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !7102, metadata !DIExpression()), !dbg !7103
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %self.dbg.spill4, align 8, !dbg !7103
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill4, metadata !7105, metadata !DIExpression()), !dbg !7112
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !7103
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !7111, metadata !DIExpression()), !dbg !7112
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr, i64 %slice.1, !dbg !7112
  store { [0 x i8]*, i64 }* %18, { [0 x i8]*, i64 }** %end, align 8, !dbg !7112
  br label %bb8, !dbg !7112

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !7114

bb4:                                              ; preds = %bb7, %bb8
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill11, align 8, !dbg !7115
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill11, metadata !7116, metadata !DIExpression()), !dbg !7122
  %19 = bitcast i64** %_18 to { [0 x i8]*, i64 }**, !dbg !7122
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %19, align 8, !dbg !7122
  %_21 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %end, align 8, !dbg !7124
  %20 = bitcast { i64*, i64* }* %3 to i64**, !dbg !7125
  %21 = load i64*, i64** %_18, align 8, !dbg !7125, !nonnull !28, !noundef !28
  store i64* %21, i64** %20, align 8, !dbg !7125
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !7125
  %23 = bitcast i64** %22 to { [0 x i8]*, i64 }**, !dbg !7125
  store { [0 x i8]*, i64 }* %_21, { [0 x i8]*, i64 }** %23, align 8, !dbg !7125
  %24 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 0, !dbg !7126
  %25 = load i64*, i64** %24, align 8, !dbg !7126, !nonnull !28, !noundef !28
  %26 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !7126
  %27 = load i64*, i64** %26, align 8, !dbg !7126
  %28 = insertvalue { i64*, i64* } undef, i64* %25, 0, !dbg !7126
  %29 = insertvalue { i64*, i64* } %28, i64* %27, 1, !dbg !7126
  ret { i64*, i64* } %29, !dbg !7126

bb7:                                              ; preds = %bb2
  %30 = bitcast i8* %_10 to { [0 x i8]*, i64 }*, !dbg !7080
  store { [0 x i8]*, i64 }* %30, { [0 x i8]*, i64 }** %end, align 8, !dbg !7080
  br label %bb4, !dbg !7114
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5slice6memchr6memchr17h89ad2c6d6bd525ccE(i8 %0, [0 x i8]* align 1 %text.0, i64 %text.1) unnamed_addr #0 !dbg !7127 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %text.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_10 = alloca i8*, align 8
  %_8 = alloca { i8*, i8* }, align 8
  %1 = alloca { i64, i64 }, align 8
  %x = alloca i8, align 1
  store i8 %0, i8* %x, align 1
  call void @llvm.dbg.declare(metadata i8* %x, metadata !7133, metadata !DIExpression()), !dbg !7135
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %text.dbg.spill, i32 0, i32 0
  store [0 x i8]* %text.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %text.dbg.spill, i32 0, i32 1
  store i64 %text.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %text.dbg.spill, metadata !7134, metadata !DIExpression()), !dbg !7136
  %_3 = icmp ult i64 %text.1, 16, !dbg !7137
  br i1 %_3, label %bb1, label %bb3, !dbg !7137

bb3:                                              ; preds = %start
  %_12 = load i8, i8* %x, align 1, !dbg !7138
; call core::slice::memchr::memchr_general_case
  %4 = call { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h8d14ec4c11d8af08E(i8 %_12, [0 x i8]* align 1 %text.0, i64 %text.1), !dbg !7139
  store { i64, i64 } %4, { i64, i64 }* %1, align 8, !dbg !7139
  br label %bb4, !dbg !7139

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !7140
  store [0 x i8]* %text.0, [0 x i8]** %5, align 8, !dbg !7140
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !7140
  store i64 %text.1, i64* %6, align 8, !dbg !7140
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !7141, metadata !DIExpression()), !dbg !7145
; call core::slice::iter::Iter<T>::new
  %7 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h89eec0c95a4a6cfeE"([0 x i8]* align 1 %text.0, i64 %text.1), !dbg !7145
  store { i8*, i8* } %7, { i8*, i8* }* %_8, align 8, !dbg !7145
  br label %bb6, !dbg !7145

bb6:                                              ; preds = %bb1
  store i8* %x, i8** %_10, align 8, !dbg !7146
  %8 = load i8*, i8** %_10, align 8, !dbg !7140, !nonnull !28, !align !1104, !noundef !28
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %9 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h688fb9758e67fecbE"({ i8*, i8* }* align 8 %_8, i8* align 1 %8), !dbg !7140
  store { i64, i64 } %9, { i64, i64 }* %1, align 8, !dbg !7140
  br label %bb2, !dbg !7140

bb2:                                              ; preds = %bb6
  br label %bb5, !dbg !7147

bb5:                                              ; preds = %bb4, %bb2
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !7147
  %11 = load i64, i64* %10, align 8, !dbg !7147, !range !1578, !noundef !28
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !7147
  %13 = load i64, i64* %12, align 8, !dbg !7147
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !7147
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !7147
  ret { i64, i64 } %15, !dbg !7147

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !7147
}

; core::slice::memchr::memchr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h28055ad8613f3affE"(i8** align 8 %_1, i8* align 1 %elt) unnamed_addr #0 !dbg !7148 {
start:
  %elt.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  %0 = load i8**, i8*** %_1.dbg.spill, align 8, !nonnull !28, !align !1582, !noundef !28
  %1 = load i8*, i8** %0, align 8, !nonnull !28, !align !1104, !noundef !28
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !7158, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !7159
  store i8* %elt, i8** %elt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %elt.dbg.spill, metadata !7157, metadata !DIExpression()), !dbg !7160
  %_3 = load i8, i8* %elt, align 1, !dbg !7161
  %_5 = load i8*, i8** %_1, align 8, !dbg !7162, !nonnull !28, !align !1104, !noundef !28
  %_4 = load i8, i8* %_5, align 1, !dbg !7162
  %2 = icmp eq i8 %_3, %_4, !dbg !7161
  ret i1 %2, !dbg !7163
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17h403aacee59a265c5E"(%"core::option::Option<alloc::string::String>"* %self) unnamed_addr #0 !dbg !7164 {
start:
  %f.dbg.spill = alloca %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_8 = alloca %"alloc::string::String", align 8
  %_7 = alloca { %"alloc::string::String" }, align 8
  %x = alloca %"alloc::string::String", align 8
  %0 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"* %self, metadata !7168, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.declare(metadata %"[closure@std::thread::Builder::spawn_unchecked_<[closure@src/test_thread_locals.rs:56:27: 56:29], ()>::{closure#0}]"* %f.dbg.spill, metadata !7169, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %x, metadata !7170, metadata !DIExpression()), !dbg !7177
  store i8 1, i8* %_9, align 1, !dbg !7178
  %1 = bitcast %"core::option::Option<alloc::string::String>"* %self to {}**, !dbg !7178
  %2 = load {}*, {}** %1, align 8, !dbg !7178
  %3 = icmp eq {}* %2, null, !dbg !7178
  %_3 = select i1 %3, i64 0, i64 1, !dbg !7178
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7179

bb2:                                              ; preds = %start
  unreachable, !dbg !7178

bb1:                                              ; preds = %start
  %4 = bitcast { i8*, i64 }* %0 to {}**, !dbg !7180
  store {}* null, {}** %4, align 8, !dbg !7180
  br label %bb7, !dbg !7180

bb3:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<alloc::string::String>"* %self to %"core::option::Option<alloc::string::String>::Some"*, !dbg !7181
  %6 = bitcast %"core::option::Option<alloc::string::String>::Some"* %5 to %"alloc::string::String"*, !dbg !7181
  %7 = bitcast %"alloc::string::String"* %x to i8*, !dbg !7181
  %8 = bitcast %"alloc::string::String"* %6 to i8*, !dbg !7181
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !7181
  store i8 0, i8* %_9, align 1, !dbg !7182
  %9 = bitcast %"alloc::string::String"* %_8 to i8*, !dbg !7183
  %10 = bitcast %"alloc::string::String"* %x to i8*, !dbg !7183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !7183
  %11 = bitcast { %"alloc::string::String" }* %_7 to %"alloc::string::String"*, !dbg !7182
  %12 = bitcast %"alloc::string::String"* %11 to i8*, !dbg !7182
  %13 = bitcast %"alloc::string::String"* %_8 to i8*, !dbg !7182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !7182
  %14 = bitcast { %"alloc::string::String" }* %_7 to %"alloc::string::String"*, !dbg !7182
; call std::thread::Builder::spawn_unchecked_::{{closure}}
  %15 = call { i8*, i64 } @"_ZN3std6thread7Builder16spawn_unchecked_28_$u7b$$u7b$closure$u7d$$u7d$17h89120b0fe05e725dE"(%"alloc::string::String"* %14), !dbg !7182
  %_5.0 = extractvalue { i8*, i64 } %15, 0, !dbg !7182
  %_5.1 = extractvalue { i8*, i64 } %15, 1, !dbg !7182
  br label %bb4, !dbg !7182

bb4:                                              ; preds = %bb3
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !7184
  store i8* %_5.0, i8** %16, align 8, !dbg !7184
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !7184
  store i64 %_5.1, i64* %17, align 8, !dbg !7184
  br label %bb7, !dbg !7185

bb7:                                              ; preds = %bb1, %bb4
  %18 = load i8, i8* %_9, align 1, !dbg !7186, !range !1099, !noundef !28
  %19 = trunc i8 %18 to i1, !dbg !7186
  br i1 %19, label %bb6, label %bb5, !dbg !7186

bb5:                                              ; preds = %bb6, %bb7
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !7187
  %21 = load i8*, i8** %20, align 8, !dbg !7187, !align !1104
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !7187
  %23 = load i64, i64* %22, align 8, !dbg !7187
  %24 = insertvalue { i8*, i64 } undef, i8* %21, 0, !dbg !7187
  %25 = insertvalue { i8*, i64 } %24, i64 %23, 1, !dbg !7187
  ret { i8*, i64 } %25, !dbg !7187

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7186
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core6option15Option$LT$T$GT$3map17he15e4dede6ede8eeE"(i32 %0, i32 %1) unnamed_addr #0 !dbg !7188 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !7208, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %f.dbg.spill, metadata !7209, metadata !DIExpression()), !dbg !7216
  store i8 1, i8* %_9, align 1, !dbg !7217
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !7217
  %6 = load i32, i32* %5, align 4, !dbg !7217, !range !4835, !noundef !28
  %_3 = zext i32 %6 to i64, !dbg !7217
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7218

bb2:                                              ; preds = %start
  unreachable, !dbg !7217

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4, !dbg !7219
  br label %bb7, !dbg !7219

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !7220
  %x = load i32, i32* %7, align 4, !dbg !7220
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !7220
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !7210, metadata !DIExpression()), !dbg !7221
  store i8 0, i8* %_9, align 1, !dbg !7222
  store i32 %x, i32* %_7, align 4, !dbg !7222
  %8 = load i32, i32* %_7, align 4, !dbg !7222
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hc1d724428925cc3cE"(i32 %8), !dbg !7222, !range !7223
  br label %bb4, !dbg !7222

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4, !dbg !7224
  br label %bb7, !dbg !7225

bb7:                                              ; preds = %bb1, %bb4
  %9 = load i8, i8* %_9, align 1, !dbg !7226, !range !1099, !noundef !28
  %10 = trunc i8 %9 to i1, !dbg !7226
  br i1 %10, label %bb6, label %bb5, !dbg !7226

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i32, i32* %2, align 4, !dbg !7227, !range !7228, !noundef !28
  ret i32 %11, !dbg !7227

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7226
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hf5becb50fc7a807aE"(i8* align 1 %0, i64 %1, %"core::str::LinesAnyMap"* align 1 %f) unnamed_addr #0 !dbg !7229 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"core::str::LinesAnyMap"*, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca { i8*, i64 }, align 8
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7233, metadata !DIExpression()), !dbg !7240
  store %"core::str::LinesAnyMap"* %f, %"core::str::LinesAnyMap"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::LinesAnyMap"** %f.dbg.spill, metadata !7234, metadata !DIExpression()), !dbg !7241
  store i8 1, i8* %_9, align 1, !dbg !7242
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7242
  %6 = load {}*, {}** %5, align 8, !dbg !7242
  %7 = icmp eq {}* %6, null, !dbg !7242
  %_3 = select i1 %7, i64 0, i64 1, !dbg !7242
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7243

bb2:                                              ; preds = %start
  unreachable, !dbg !7242

bb1:                                              ; preds = %start
  %8 = bitcast { i8*, i64 }* %2 to {}**, !dbg !7244
  store {}* null, {}** %8, align 8, !dbg !7244
  br label %bb7, !dbg !7244

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !7245
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !7245
  %x.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !7245, !nonnull !28, !align !1104, !noundef !28
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !7245
  %x.1 = load i64, i64* %11, align 8, !dbg !7245
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !7245
  store [0 x i8]* %x.0, [0 x i8]** %12, align 8, !dbg !7245
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !7245
  store i64 %x.1, i64* %13, align 8, !dbg !7245
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !7235, metadata !DIExpression()), !dbg !7246
  store i8 0, i8* %_9, align 1, !dbg !7247
  %14 = bitcast { i8*, i64 }* %_7 to { [0 x i8]*, i64 }*, !dbg !7247
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !7247
  store [0 x i8]* %x.0, [0 x i8]** %15, align 8, !dbg !7247
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !7247
  store i64 %x.1, i64* %16, align 8, !dbg !7247
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0, !dbg !7247
  %18 = load i8*, i8** %17, align 8, !dbg !7247, !nonnull !28, !align !1104, !noundef !28
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1, !dbg !7247
  %20 = load i64, i64* %19, align 8, !dbg !7247
  %21 = bitcast i8* %18 to [0 x i8]*, !dbg !7247
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %22 = call { [0 x i8]*, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h364ab54f0e25d23aE"(%"core::str::LinesAnyMap"* align 1 %f, [0 x i8]* align 1 %21, i64 %20), !dbg !7247
  %_5.0 = extractvalue { [0 x i8]*, i64 } %22, 0, !dbg !7247
  %_5.1 = extractvalue { [0 x i8]*, i64 } %22, 1, !dbg !7247
  br label %bb4, !dbg !7247

bb4:                                              ; preds = %bb3
  %23 = bitcast { i8*, i64 }* %2 to { [0 x i8]*, i64 }*, !dbg !7248
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !7248
  store [0 x i8]* %_5.0, [0 x i8]** %24, align 8, !dbg !7248
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !7248
  store i64 %_5.1, i64* %25, align 8, !dbg !7248
  br label %bb7, !dbg !7249

bb7:                                              ; preds = %bb1, %bb4
  %26 = load i8, i8* %_9, align 1, !dbg !7250, !range !1099, !noundef !28
  %27 = trunc i8 %26 to i1, !dbg !7250
  br i1 %27, label %bb6, label %bb5, !dbg !7250

bb5:                                              ; preds = %bb6, %bb7
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !7251
  %29 = load i8*, i8** %28, align 8, !dbg !7251, !align !1104
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !7251
  %31 = load i64, i64* %30, align 8, !dbg !7251
  %32 = insertvalue { i8*, i64 } undef, i8* %29, 0, !dbg !7251
  %33 = insertvalue { i8*, i64 } %32, i64 %31, 1, !dbg !7251
  ret { i8*, i64 } %33, !dbg !7251

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7250
}

; core::option::Option<T>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h205bf8966c4d5173E"(i64 %0, i64 %1, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 !dbg !7252 {
start:
  %val.dbg.spill = alloca i64, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7256, metadata !DIExpression()), !dbg !7260
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !7257, metadata !DIExpression()), !dbg !7261
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !7262
  %_3 = load i64, i64* %7, align 8, !dbg !7262, !range !1578, !noundef !28
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7263

bb2:                                              ; preds = %start
  unreachable, !dbg !7262

bb1:                                              ; preds = %start
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17hfe812f345eb8521fE([0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %2) #17, !dbg !7264
  unreachable, !dbg !7264

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7265
  %val = load i64, i64* %8, align 8, !dbg !7265
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !7265
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !7258, metadata !DIExpression()), !dbg !7266
  ret i64 %val, !dbg !7267
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h10badbd86b4aadf6E"(%"std::thread::JoinHandle<()>"* sret(%"std::thread::JoinHandle<()>") %t, %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %self, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7268 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::JoinHandle<()>"* %t, metadata !7274, metadata !DIExpression()), !dbg !7278
  call void @llvm.dbg.declare(metadata %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %self, metadata !7272, metadata !DIExpression()), !dbg !7279
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !7273, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.declare(metadata i8** %e, metadata !7276, metadata !DIExpression()), !dbg !7281
  %4 = bitcast %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %self to i64*, !dbg !7282
  %_3 = load i64, i64* %4, align 8, !dbg !7282, !range !1578, !noundef !28
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7283

bb2:                                              ; preds = %start
  unreachable, !dbg !7282

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %self to %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Ok"*, !dbg !7284
  %6 = getelementptr inbounds %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Ok", %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Ok"* %5, i32 0, i32 1, !dbg !7284
  %7 = bitcast %"std::thread::JoinHandle<()>"* %t to i8*, !dbg !7284
  %8 = bitcast %"std::thread::JoinHandle<()>"* %6 to i8*, !dbg !7284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !7284
  ret void, !dbg !7285

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>"* %self to %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Err"*, !dbg !7286
  %10 = getelementptr inbounds %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Err", %"core::result::Result<std::thread::JoinHandle<()>, std::io::error::Error>::Err"* %9, i32 0, i32 1, !dbg !7286
  %11 = load i8*, i8** %10, align 8, !dbg !7286, !nonnull !28, !noundef !28
  store i8* %11, i8** %e, align 8, !dbg !7286
  %_7.0 = bitcast i8** %e to {}*, !dbg !7287
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.6 to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #17
          to label %unreachable unwind label %cleanup, !dbg !7288

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h95925069f7247ee8E"(i8** %e) #18
          to label %bb5 unwind label %abort, !dbg !7289

cleanup:                                          ; preds = %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %17 = landingpad { i8*, i32 }
          cleanup, !dbg !7290
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !7290
  unreachable, !dbg !7290

bb5:                                              ; preds = %bb4
  %18 = bitcast { i8*, i32 }* %1 to i8**, !dbg !7290
  %19 = load i8*, i8** %18, align 8, !dbg !7290
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !7290
  %21 = load i32, i32* %20, align 8, !dbg !7290
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !7290
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !7290
  resume { i8*, i32 } %23, !dbg !7290
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17haf67b9a71d3b11d7E"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7291 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e = alloca %"alloc::ffi::c_str::NulError", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self, metadata !7310, metadata !DIExpression()), !dbg !7316
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !7311, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.declare(metadata %"alloc::ffi::c_str::NulError"* %e, metadata !7314, metadata !DIExpression()), !dbg !7318
  %4 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self to i64*, !dbg !7319
  %_3 = load i64, i64* %4, align 8, !dbg !7319, !range !1578, !noundef !28
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7320

bb2:                                              ; preds = %start
  unreachable, !dbg !7319

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"*, !dbg !7321
  %6 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"* %5, i32 0, i32 1, !dbg !7321
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0, !dbg !7321
  %t.0 = load i8*, i8** %7, align 8, !dbg !7321, !nonnull !28, !align !1104, !noundef !28
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1, !dbg !7321
  %t.1 = load i64, i64* %8, align 8, !dbg !7321
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !7321
  store i8* %t.0, i8** %9, align 8, !dbg !7321
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !7321
  store i64 %t.1, i64* %10, align 8, !dbg !7321
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !7312, metadata !DIExpression()), !dbg !7322
  %11 = insertvalue { i8*, i64 } undef, i8* %t.0, 0, !dbg !7323
  %12 = insertvalue { i8*, i64 } %11, i64 %t.1, 1, !dbg !7323
  ret { i8*, i64 } %12, !dbg !7323

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %self to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"*, !dbg !7324
  %14 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"* %13, i32 0, i32 1, !dbg !7324
  %15 = bitcast %"alloc::ffi::c_str::NulError"* %e to i8*, !dbg !7324
  %16 = bitcast %"alloc::ffi::c_str::NulError"* %14 to i8*, !dbg !7324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false), !dbg !7324
  %_7.0 = bitcast %"alloc::ffi::c_str::NulError"* %e to {}*, !dbg !7325
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.7 to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #17
          to label %unreachable unwind label %cleanup, !dbg !7326

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::NulError>
  invoke void @"_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17h7d207ed4df96150bE"(%"alloc::ffi::c_str::NulError"* %e) #18
          to label %bb5 unwind label %abort, !dbg !7327

cleanup:                                          ; preds = %bb1
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !7328
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !7328
  unreachable, !dbg !7328

bb5:                                              ; preds = %bb4
  %23 = bitcast { i8*, i32 }* %1 to i8**, !dbg !7328
  %24 = load i8*, i8** %23, align 8, !dbg !7328
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !7328
  %26 = load i32, i32* %25, align 8, !dbg !7328
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0, !dbg !7328
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1, !dbg !7328
  resume { i8*, i32 } %28, !dbg !7328
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hc39259790eb82bdaE"(i8* align 1 %0, i8* %1, %"core::panic::location::Location"* align 8 %2) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7329 {
start:
  %3 = alloca { i8*, i32 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %e = alloca { {}*, [3 x i64]* }, align 8
  %self = alloca { i8*, i8* }, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 0
  store i8* %0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !7334, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self, metadata !7333, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %e, metadata !7336, metadata !DIExpression()), !dbg !7340
  %6 = bitcast { i8*, i8* }* %self to {}**, !dbg !7341
  %7 = load {}*, {}** %6, align 8, !dbg !7341
  %8 = icmp eq {}* %7, null, !dbg !7341
  %_2 = select i1 %8, i64 0, i64 1, !dbg !7341
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7342

bb2:                                              ; preds = %start
  unreachable, !dbg !7341

bb3:                                              ; preds = %start
  ret void, !dbg !7343

bb1:                                              ; preds = %start
  %9 = bitcast { i8*, i8* }* %self to { {}*, [3 x i64]* }*, !dbg !7344
  %10 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %9, i32 0, i32 0, !dbg !7344
  %11 = load {}*, {}** %10, align 8, !dbg !7344, !nonnull !28, !align !1104, !noundef !28
  %12 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %9, i32 0, i32 1, !dbg !7344
  %13 = load [3 x i64]*, [3 x i64]** %12, align 8, !dbg !7344, !nonnull !28, !align !1582, !noundef !28
  %14 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %e, i32 0, i32 0, !dbg !7344
  store {}* %11, {}** %14, align 8, !dbg !7344
  %15 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %e, i32 0, i32 1, !dbg !7344
  store [3 x i64]* %13, [3 x i64]** %15, align 8, !dbg !7344
  %_7.0 = bitcast { {}*, [3 x i64]* }* %e to {}*, !dbg !7345
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc692 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.8 to [3 x i64]*), %"core::panic::location::Location"* align 8 %2) #17
          to label %unreachable unwind label %cleanup, !dbg !7346

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h8e564f303293f592E"({ {}*, [3 x i64]* }* %e) #18
          to label %bb5 unwind label %abort, !dbg !7347

cleanup:                                          ; preds = %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %21 = landingpad { i8*, i32 }
          cleanup, !dbg !7348
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !7348
  unreachable, !dbg !7348

bb5:                                              ; preds = %bb4
  %22 = bitcast { i8*, i32 }* %3 to i8**, !dbg !7348
  %23 = load i8*, i8** %22, align 8, !dbg !7348
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !7348
  %25 = load i32, i32* %24, align 8, !dbg !7348
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0, !dbg !7348
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1, !dbg !7348
  resume { i8*, i32 } %27, !dbg !7348
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc2067a3f66512852E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %1, i64 %2, i64* align 8 %op) unnamed_addr #0 !dbg !7349 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7393, metadata !DIExpression()), !dbg !7402
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !7394, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !7397, metadata !DIExpression()), !dbg !7404
  store i8 1, i8* %_11, align 1, !dbg !7405
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7405
  %6 = load {}*, {}** %5, align 8, !dbg !7405
  %7 = icmp eq {}* %6, null, !dbg !7405
  %_3 = select i1 %7, i64 1, i64 0, !dbg !7405
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7406

bb2:                                              ; preds = %start
  unreachable, !dbg !7405

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !7407
  %t.0 = load i8*, i8** %8, align 8, !dbg !7407, !nonnull !28, !noundef !28
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !7407
  %t.1 = load i64, i64* %9, align 8, !dbg !7407
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !7407
  store i8* %t.0, i8** %10, align 8, !dbg !7407
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !7407
  store i64 %t.1, i64* %11, align 8, !dbg !7407
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !7395, metadata !DIExpression()), !dbg !7408
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !7409
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !7409
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !7409
  store i8* %t.0, i8** %14, align 8, !dbg !7409
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !7409
  store i64 %t.1, i64* %15, align 8, !dbg !7409
  %16 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !7409
  store i64 0, i64* %16, align 8, !dbg !7409
  br label %bb7, !dbg !7410

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !7411
  %17 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*, !dbg !7411
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h6f36d7ffec3c0b0aE"(i64* align 8 %op), !dbg !7411
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !7411
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !7411
  br label %bb4, !dbg !7411

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !7412
  %20 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !7412
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !7412
  store i64 %_7.0, i64* %21, align 8, !dbg !7412
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !7412
  store i64 %_7.1, i64* %22, align 8, !dbg !7412
  %23 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !7412
  store i64 1, i64* %23, align 8, !dbg !7412
  br label %bb7, !dbg !7413

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !7414, !range !1099, !noundef !28
  %25 = trunc i8 %24 to i1, !dbg !7414
  br i1 %25, label %bb6, label %bb5, !dbg !7414

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7415

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7414
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc957735d7d5d8d2bE"(i64 %0, i64 %1) unnamed_addr #0 !dbg !7416 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7451, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !7452, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !7453, metadata !DIExpression()), !dbg !7462
  store i8 1, i8* %_11, align 1, !dbg !7463
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7463
  %6 = load i64, i64* %5, align 8, !dbg !7463, !range !7464, !noundef !28
  %7 = sub i64 %6, -9223372036854775807, !dbg !7463
  %8 = icmp eq i64 %7, 0, !dbg !7463
  %_3 = select i1 %8, i64 0, i64 1, !dbg !7463
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7465

bb2:                                              ; preds = %start
  unreachable, !dbg !7463

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !7466
  %10 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %9 to {}*, !dbg !7466
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7466
  store i64 -9223372036854775807, i64* %11, align 8, !dbg !7466
  br label %bb7, !dbg !7467

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !7468
  %e.0 = load i64, i64* %12, align 8, !dbg !7468
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7468
  %e.1 = load i64, i64* %13, align 8, !dbg !7468, !range !1479, !noundef !28
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !7468
  store i64 %e.0, i64* %14, align 8, !dbg !7468
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !7468
  store i64 %e.1, i64* %15, align 8, !dbg !7468
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !7455, metadata !DIExpression()), !dbg !7469
  store i8 0, i8* %_11, align 1, !dbg !7470
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !7470
  store i64 %e.0, i64* %16, align 8, !dbg !7470
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !7470
  store i64 %e.1, i64* %17, align 8, !dbg !7470
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !7470
  %19 = load i64, i64* %18, align 8, !dbg !7470
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !7470
  %21 = load i64, i64* %20, align 8, !dbg !7470, !range !1479, !noundef !28
; call alloc::raw_vec::handle_reserve::{{closure}}
  %22 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h49235c1b243c36e6E"(i64 %19, i64 %21), !dbg !7470
  %_7.0 = extractvalue { i64, i64 } %22, 0, !dbg !7470
  %_7.1 = extractvalue { i64, i64 } %22, 1, !dbg !7470
  br label %bb4, !dbg !7470

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7471
  store i64 %_7.0, i64* %23, align 8, !dbg !7471
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7471
  store i64 %_7.1, i64* %24, align 8, !dbg !7471
  br label %bb7, !dbg !7472

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !dbg !7473, !range !1099, !noundef !28
  %26 = trunc i8 %25 to i1, !dbg !7473
  br i1 %26, label %bb6, label %bb5, !dbg !7473

bb5:                                              ; preds = %bb6, %bb7
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7474
  %28 = load i64, i64* %27, align 8, !dbg !7474
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7474
  %30 = load i64, i64* %29, align 8, !dbg !7474, !range !7464, !noundef !28
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0, !dbg !7474
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1, !dbg !7474
  ret { i64, i64 } %32, !dbg !7474

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7473
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hee905a535b73bc12E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !7475 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7494, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !7495, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !7498, metadata !DIExpression()), !dbg !7504
  store i8 1, i8* %_11, align 1, !dbg !7505
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7505
  %6 = load i64, i64* %5, align 8, !dbg !7505, !range !1479, !noundef !28
  %7 = icmp eq i64 %6, 0, !dbg !7505
  %_3 = select i1 %7, i64 1, i64 0, !dbg !7505
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7506

bb2:                                              ; preds = %start
  unreachable, !dbg !7505

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !7507
  %t.0 = load i64, i64* %8, align 8, !dbg !7507
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7507
  %t.1 = load i64, i64* %9, align 8, !dbg !7507, !range !6278, !noundef !28
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !7507
  store i64 %t.0, i64* %10, align 8, !dbg !7507
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !7507
  store i64 %t.1, i64* %11, align 8, !dbg !7507
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !7496, metadata !DIExpression()), !dbg !7508
  %12 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !7509
  %13 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !7509
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !7509
  store i64 %t.0, i64* %14, align 8, !dbg !7509
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !7509
  store i64 %t.1, i64* %15, align 8, !dbg !7509
  %16 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !7509
  store i64 0, i64* %16, align 8, !dbg !7509
  br label %bb7, !dbg !7510

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !7511
  %17 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*, !dbg !7511
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h66c167fe7c85872cE"(), !dbg !7511
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !7511
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !7511
  br label %bb4, !dbg !7511

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !7512
  %20 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !7512
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !7512
  store i64 %_7.0, i64* %21, align 8, !dbg !7512
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !7512
  store i64 %_7.1, i64* %22, align 8, !dbg !7512
  %23 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !7512
  store i64 1, i64* %23, align 8, !dbg !7512
  br label %bb7, !dbg !7513

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !7514, !range !1099, !noundef !28
  %25 = trunc i8 %24 to i1, !dbg !7514
  br i1 %25, label %bb6, label %bb5, !dbg !7514

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7515

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7514
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h005ab5e528d41424E(i8 %kind, i32* align 4 %0, i32* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !7516 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca i32*, align 8
  %left = alloca i32*, align 8
  store i32* %0, i32** %left, align 8
  store i32* %1, i32** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !7534, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.declare(metadata i32** %left, metadata !7535, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.declare(metadata i32** %right, metadata !7536, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !7537, metadata !DIExpression()), !dbg !7543
  %_7.0 = bitcast i32** %left to {}*, !dbg !7544
  %_10.0 = bitcast i32** %right to {}*, !dbg !7545
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !7546
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !7546
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !7546
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #17, !dbg !7547
  unreachable, !dbg !7547
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h1f82003576a73e6dE(i8 %kind, float* align 4 %0, float* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !7548 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca float*, align 8
  %left = alloca float*, align 8
  store float* %0, float** %left, align 8
  store float* %1, float** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !7552, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.declare(metadata float** %left, metadata !7553, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.declare(metadata float** %right, metadata !7554, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !7555, metadata !DIExpression()), !dbg !7561
  %_7.0 = bitcast float** %left to {}*, !dbg !7562
  %_10.0 = bitcast float** %right to {}*, !dbg !7563
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !7564
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !7564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !7564
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.9 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.9 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #17, !dbg !7565
  unreachable, !dbg !7565
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h27b835989c4afc14E(i8 %kind, [11 x i32]* align 4 %0, [11 x i32]* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !7566 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca [11 x i32]*, align 8
  %left = alloca [11 x i32]*, align 8
  store [11 x i32]* %0, [11 x i32]** %left, align 8
  store [11 x i32]* %1, [11 x i32]** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !7570, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.declare(metadata [11 x i32]** %left, metadata !7571, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.declare(metadata [11 x i32]** %right, metadata !7572, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !7573, metadata !DIExpression()), !dbg !7579
  %_7.0 = bitcast [11 x i32]** %left to {}*, !dbg !7580
  %_10.0 = bitcast [11 x i32]** %right to {}*, !dbg !7581
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !7582
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !7582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !7582
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.a to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.a to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #17, !dbg !7583
  unreachable, !dbg !7583
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 %kind, i32* align 4 %0, i32* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !7584 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca i32*, align 8
  %left = alloca i32*, align 8
  store i32* %0, i32** %left, align 8
  store i32* %1, i32** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !7588, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.declare(metadata i32** %left, metadata !7589, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.declare(metadata i32** %right, metadata !7590, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !7591, metadata !DIExpression()), !dbg !7597
  %_7.0 = bitcast i32** %left to {}*, !dbg !7598
  %_10.0 = bitcast i32** %right to {}*, !dbg !7599
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !7600
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !7600
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !7600
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.b to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.b to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #17, !dbg !7601
  unreachable, !dbg !7601
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17hdc2b2d5d12368b5fE(i8 %kind, [16 x i32]* align 4 %0, [16 x i32]* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !7602 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca [16 x i32]*, align 8
  %left = alloca [16 x i32]*, align 8
  store [16 x i32]* %0, [16 x i32]** %left, align 8
  store [16 x i32]* %1, [16 x i32]** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !7606, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.declare(metadata [16 x i32]** %left, metadata !7607, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.declare(metadata [16 x i32]** %right, metadata !7608, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !7609, metadata !DIExpression()), !dbg !7615
  %_7.0 = bitcast [16 x i32]** %left to {}*, !dbg !7616
  %_10.0 = bitcast [16 x i32]** %right to {}*, !dbg !7617
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !7618
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !7618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !7618
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.c to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.c to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #17, !dbg !7619
  unreachable, !dbg !7619
}

; test::assert_test_result
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4test18assert_test_result17hf4996d04c85a0259E() unnamed_addr #1 !dbg !7620 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i32*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca i32*, align 8
  %x.dbg.spill = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %result.dbg.spill = alloca {}, align 1
  %_30 = alloca { i8*, i64* }, align 8
  %_29 = alloca [1 x { i8*, i64* }], align 8
  %_22 = alloca %"core::fmt::Arguments", align 8
  %_21 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %_5 = alloca { i32*, i32* }, align 8
  %self = alloca i8, align 1
  %code = alloca i32, align 4
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !7624, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7625, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.declare(metadata i8* %self, metadata !7637, metadata !DIExpression()), !dbg !7641
; call <() as std::process::Termination>::report
  %2 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h72a4f00e2834b23cE"(), !dbg !7642
  store i8 %2, i8* %self, align 1, !dbg !7642
  br label %bb1, !dbg !7642

bb1:                                              ; preds = %start
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !7641
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !7643, metadata !DIExpression()), !dbg !7647
  %_36 = load i8, i8* %self, align 1, !dbg !7647
  %3 = zext i8 %_36 to i32, !dbg !7647
  store i32 %3, i32* %code, align 4, !dbg !7647
  %4 = bitcast { i32*, i32* }* %_5 to i32**, !dbg !7649
  store i32* %code, i32** %4, align 8, !dbg !7649
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1, !dbg !7649
  store i32* bitcast (<{ [4 x i8] }>* @alloc178 to i32*), i32** %5, align 8, !dbg !7649
  %6 = bitcast { i32*, i32* }* %_5 to i32**, !dbg !7649
  %left_val = load i32*, i32** %6, align 8, !dbg !7649, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !7649
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !7627, metadata !DIExpression()), !dbg !7650
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1, !dbg !7649
  %right_val = load i32*, i32** %7, align 8, !dbg !7649, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !7649
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !7631, metadata !DIExpression()), !dbg !7650
  %_12 = load i32, i32* %left_val, align 4, !dbg !7650
  %_13 = load i32, i32* %right_val, align 4, !dbg !7650
  %_11 = icmp eq i32 %_12, %_13, !dbg !7650
  %_10 = xor i1 %_11, true, !dbg !7650
  br i1 %_10, label %bb2, label %bb4, !dbg !7650

bb4:                                              ; preds = %bb1
  ret void, !dbg !7651

bb2:                                              ; preds = %bb1
  store i32* %code, i32** %x.dbg.spill, align 8, !dbg !7652
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill, metadata !7653, metadata !DIExpression()), !dbg !7659
  store i32* %code, i32** %x.dbg.spill1, align 8, !dbg !7659
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill1, metadata !7661, metadata !DIExpression()), !dbg !7669
  store i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE", i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !7659
  call void @llvm.dbg.declare(metadata i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !7668, metadata !DIExpression()), !dbg !7669
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !7669
  %_39 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !7669, !nonnull !28, !noundef !28
  br label %bb5, !dbg !7669

bb5:                                              ; preds = %bb2
  %8 = bitcast i32* %code to %"core::fmt::Opaque"*, !dbg !7669
  store %"core::fmt::Opaque"* %8, %"core::fmt::Opaque"** %0, align 8, !dbg !7669
  %_41 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !7669, !nonnull !28, !align !1104, !noundef !28
  br label %bb6, !dbg !7669

bb6:                                              ; preds = %bb5
  %9 = bitcast { i8*, i64* }* %_30 to %"core::fmt::Opaque"**, !dbg !7669
  store %"core::fmt::Opaque"* %_41, %"core::fmt::Opaque"** %9, align 8, !dbg !7669
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 1, !dbg !7669
  %11 = bitcast i64** %10 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !7669
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_39, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %11, align 8, !dbg !7669
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 0, !dbg !7652
  %13 = load i8*, i8** %12, align 8, !dbg !7652, !nonnull !28, !align !1104, !noundef !28
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 1, !dbg !7652
  %15 = load i64*, i64** %14, align 8, !dbg !7652, !nonnull !28, !noundef !28
  %16 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_29, i64 0, i64 0, !dbg !7652
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 0, !dbg !7652
  store i8* %13, i8** %17, align 8, !dbg !7652
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 1, !dbg !7652
  store i64* %15, i64** %18, align 8, !dbg !7652
  %_26.0 = bitcast [1 x { i8*, i64* }]* %_29 to [0 x { i8*, i64* }]*, !dbg !7652
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_22, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc292 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_26.0, i64 1), !dbg !7652
  br label %bb3, !dbg !7652

bb3:                                              ; preds = %bb6
  %19 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_21 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !7652
  %20 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %19 to %"core::fmt::Arguments"*, !dbg !7652
  %21 = bitcast %"core::fmt::Arguments"* %20 to i8*, !dbg !7652
  %22 = bitcast %"core::fmt::Arguments"* %_22 to i8*, !dbg !7652
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 48, i1 false), !dbg !7652
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h005ab5e528d41424E(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_21, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc709 to %"core::panic::location::Location"*)) #17, !dbg !7652
  unreachable, !dbg !7652
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17ha752ff0d563c2184E"({ i8*, i8* }** align 8 %self, i32 %c) unnamed_addr #1 !dbg !7671 {
start:
  %c.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca { i8*, i8* }**, align 8
  store { i8*, i8* }** %self, { i8*, i8* }*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }*** %self.dbg.spill, metadata !7677, metadata !DIExpression()), !dbg !7681
  store i32 %c, i32* %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !7678, metadata !DIExpression()), !dbg !7682
  %_5 = load { i8*, i8* }*, { i8*, i8* }** %self, align 8, !dbg !7683, !nonnull !28, !align !1582, !noundef !28
; call core::fmt::Write::write_char
  %0 = call zeroext i1 @_ZN4core3fmt5Write10write_char17hb30bfcbec4888ae5E({ i8*, i8* }* align 8 %_5, i32 %c), !dbg !7683
  br label %bb1, !dbg !7683

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !7684
}

; <&mut W as core::fmt::Write>::write_fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h50b512549461be97E"({ i8*, i8* }** align 8 %self, %"core::fmt::Arguments"* %args) unnamed_addr #1 !dbg !7685 {
start:
  %self.dbg.spill = alloca { i8*, i8* }**, align 8
  %_4 = alloca %"core::fmt::Arguments", align 8
  store { i8*, i8* }** %self, { i8*, i8* }*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }*** %self.dbg.spill, metadata !7689, metadata !DIExpression()), !dbg !7691
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"* %args, metadata !7690, metadata !DIExpression()), !dbg !7692
  %_5 = load { i8*, i8* }*, { i8*, i8* }** %self, align 8, !dbg !7693, !nonnull !28, !align !1582, !noundef !28
  %0 = bitcast %"core::fmt::Arguments"* %_4 to i8*, !dbg !7694
  %1 = bitcast %"core::fmt::Arguments"* %args to i8*, !dbg !7694
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 48, i1 false), !dbg !7694
; call core::fmt::Write::write_fmt
  %2 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h5097526a53e38c49E({ i8*, i8* }* align 8 %_5, %"core::fmt::Arguments"* %_4), !dbg !7693
  br label %bb1, !dbg !7693

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !7695
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h11b873e44897a10fE"({ i8*, i8* }** align 8 %self, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !7696 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i8* }**, align 8
  store { i8*, i8* }** %self, { i8*, i8* }*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }*** %self.dbg.spill, metadata !7700, metadata !DIExpression()), !dbg !7702
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !7701, metadata !DIExpression()), !dbg !7703
  %_5 = load { i8*, i8* }*, { i8*, i8* }** %self, align 8, !dbg !7704, !nonnull !28, !align !1582, !noundef !28
; call <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
  %2 = call zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h3abb5efb30b14f62E"({ i8*, i8* }* align 8 %_5, [0 x i8]* align 1 %s.0, i64 %s.1), !dbg !7704
  br label %bb1, !dbg !7704

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !7705
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5f7fe61e0968c338E"(i64 %t.0, i64 %t.1) unnamed_addr #1 !dbg !7706 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !7712, metadata !DIExpression()), !dbg !7715
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !7716
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !7716
  ret { i64, i64 } %3, !dbg !7716
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h83b52891866b685fE"() unnamed_addr #1 !dbg !7717 {
start:
  %t.dbg.spill = alloca %"core::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %t.dbg.spill, metadata !7721, metadata !DIExpression()), !dbg !7724
  ret void, !dbg !7725
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb133b7b8ca8fd9dfE"() unnamed_addr #1 !dbg !7726 {
start:
  %t.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %t.dbg.spill, metadata !7730, metadata !DIExpression()), !dbg !7733
  ret void, !dbg !7734
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc0915e6582d29decE"(i8* %t) unnamed_addr #1 !dbg !7735 {
start:
  %t.dbg.spill = alloca i8*, align 8
  store i8* %t, i8** %t.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %t.dbg.spill, metadata !7739, metadata !DIExpression()), !dbg !7740
  ret i8* %t, !dbg !7741
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h463e69f068e26b95E"(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* align 8 %self) unnamed_addr #1 !dbg !7742 {
start:
  %self.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %self, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %self.dbg.spill, metadata !7748, metadata !DIExpression()), !dbg !7752
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %0 = call i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc0de90d68a9c83deE"(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* align 8 %self), !dbg !7753
  br label %bb1, !dbg !7753

bb1:                                              ; preds = %start
  ret i64* %0, !dbg !7754
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h968d041dad957f97E"(i8* %self) unnamed_addr #1 !dbg !7755 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !7757, metadata !DIExpression()), !dbg !7761
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h19dbefea06dd2371E"(i8* %self), !dbg !7762
  br label %bb1, !dbg !7762

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !7763
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb06c121365edc62aE"(i64 %self.0, i64 %self.1) unnamed_addr #1 !dbg !7764 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !7766, metadata !DIExpression()), !dbg !7770
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h6e98c5d1da63f7d0E"(i64 %self.0, i64 %self.1), !dbg !7771
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !7771
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !7771
  br label %bb1, !dbg !7771

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !7772
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !7772
  ret { i64, i64 } %6, !dbg !7772
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc0985960b0716d81E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, %"alloc::string::String"* %self) unnamed_addr #1 !dbg !7773 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %self, metadata !7777, metadata !DIExpression()), !dbg !7780
  %1 = bitcast %"alloc::string::String"* %_2 to i8*, !dbg !7781
  %2 = bitcast %"alloc::string::String"* %self to i8*, !dbg !7781
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !7781
; call alloc::string::<impl core::convert::From<alloc::string::String> for alloc::vec::Vec<u8>>::from
  call void @"_ZN5alloc6string104_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..vec..Vec$LT$u8$GT$$GT$4from17hce79d9a1e153cc22E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, %"alloc::string::String"* %_2), !dbg !7782
  br label %bb1, !dbg !7782

bb1:                                              ; preds = %start
  ret void, !dbg !7783
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h3ef22cee8b6768e4E"(%"core::str::pattern::CharSearcher"* sret(%"core::str::pattern::CharSearcher") %0, i32 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !7784 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %utf8_size.dbg.spill = alloca i64, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i32, align 4
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i32, align 4
  %_16 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !7789, metadata !DIExpression()), !dbg !7795
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !7790, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.declare(metadata [4 x i8]* %utf8_encoded, metadata !7791, metadata !DIExpression()), !dbg !7797
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %utf8_encoded, i64 0, i64 0, !dbg !7798
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 4, i1 false), !dbg !7798
  store i32 %self, i32* %self.dbg.spill1, align 4, !dbg !7799
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill1, metadata !7800, metadata !DIExpression()), !dbg !7805
  %dst.0 = bitcast [4 x i8]* %utf8_encoded to [0 x i8]*, !dbg !7806
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 0, !dbg !7806
  store [0 x i8]* %dst.0, [0 x i8]** %6, align 8, !dbg !7806
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 1, !dbg !7806
  store i64 4, i64* %7, align 8, !dbg !7806
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %dst.dbg.spill, metadata !7804, metadata !DIExpression()), !dbg !7805
; call core::char::methods::encode_utf8_raw
  %8 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h27513490047024c0E(i32 %self, [0 x i8]* align 1 %dst.0, i64 4), !dbg !7805
  %_21.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !7805
  %_21.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !7805
  br label %bb1, !dbg !7805

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !7805
  store [0 x i8]* %_21.0, [0 x i8]** %9, align 8, !dbg !7805
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !7805
  store i64 %_21.1, i64* %10, align 8, !dbg !7805
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !7807, metadata !DIExpression()), !dbg !7811
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !7799
  store [0 x i8]* %_21.0, [0 x i8]** %11, align 8, !dbg !7799
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !7799
  store i64 %_21.1, i64* %12, align 8, !dbg !7799
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !7813, metadata !DIExpression()), !dbg !7817
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !7817
  store [0 x i8]* %_21.0, [0 x i8]** %13, align 8, !dbg !7817
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !7817
  store i64 %_21.1, i64* %14, align 8, !dbg !7817
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !7818, metadata !DIExpression()), !dbg !7822
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !7822
  store [0 x i8]* %_21.0, [0 x i8]** %15, align 8, !dbg !7822
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !7822
  store i64 %_21.1, i64* %16, align 8, !dbg !7822
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !7822
  %_31.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !dbg !7822, !nonnull !28, !align !1104, !noundef !28
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !7822
  %_31.1 = load i64, i64* %18, align 8, !dbg !7822
  br label %bb2, !dbg !7822

bb2:                                              ; preds = %bb1
  store i64 %_31.1, i64* %utf8_size.dbg.spill, align 8, !dbg !7817
  call void @llvm.dbg.declare(metadata i64* %utf8_size.dbg.spill, metadata !7793, metadata !DIExpression()), !dbg !7824
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !7825
  store [0 x i8]* %haystack.0, [0 x i8]** %19, align 8, !dbg !7825
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !7825
  store i64 %haystack.1, i64* %20, align 8, !dbg !7825
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !7826, metadata !DIExpression()), !dbg !7830
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !7830
  store [0 x i8]* %haystack.0, [0 x i8]** %21, align 8, !dbg !7830
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !7830
  store i64 %haystack.1, i64* %22, align 8, !dbg !7830
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !7831, metadata !DIExpression()), !dbg !7835
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7835
  store [0 x i8]* %haystack.0, [0 x i8]** %23, align 8, !dbg !7835
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7835
  store i64 %haystack.1, i64* %24, align 8, !dbg !7835
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7835
  %_35.0 = load [0 x i8]*, [0 x i8]** %25, align 8, !dbg !7835, !nonnull !28, !align !1104, !noundef !28
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7835
  %_35.1 = load i64, i64* %26, align 8, !dbg !7835
  br label %bb3, !dbg !7835

bb3:                                              ; preds = %bb2
  %27 = bitcast [4 x i8]* %_16 to i8*, !dbg !7837
  %28 = bitcast [4 x i8]* %utf8_encoded to i8*, !dbg !7837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 4, i1 false), !dbg !7837
  %29 = bitcast %"core::str::pattern::CharSearcher"* %0 to { [0 x i8]*, i64 }*, !dbg !7838
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !7838
  store [0 x i8]* %haystack.0, [0 x i8]** %30, align 8, !dbg !7838
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !7838
  store i64 %haystack.1, i64* %31, align 8, !dbg !7838
  %32 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 1, !dbg !7838
  store i64 0, i64* %32, align 8, !dbg !7838
  %33 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 2, !dbg !7838
  store i64 %_35.1, i64* %33, align 8, !dbg !7838
  %34 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 4, !dbg !7838
  store i32 %self, i32* %34, align 8, !dbg !7838
  %35 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 3, !dbg !7838
  store i64 %_31.1, i64* %35, align 8, !dbg !7838
  %36 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 5, !dbg !7838
  %37 = bitcast [4 x i8]* %36 to i8*, !dbg !7838
  %38 = bitcast [4 x i8]* %_16 to i8*, !dbg !7838
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 1 %38, i64 4, i1 false), !dbg !7838
  ret void, !dbg !7839
}

; <() as std::process::Termination>::report
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h72a4f00e2834b23cE"() unnamed_addr #0 !dbg !7840 {
start:
  %self.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %self.dbg.spill, metadata !7845, metadata !DIExpression()), !dbg !7846
  ret i8 0, !dbg !7847
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hc766bacf7d102e30E"(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher") %0, [0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !7848 {
start:
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !7878, metadata !DIExpression()), !dbg !7880
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !7879, metadata !DIExpression()), !dbg !7881
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h13dd5abbb92d502eE(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher") %0, [0 x i8]* align 1 %haystack.0, i64 %haystack.1, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !7882
  br label %bb1, !dbg !7882

bb1:                                              ; preds = %start
  ret void, !dbg !7883
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN5alloc2rc11is_dangling17h3eedc86df22cea98E(%"alloc::sync::ArcInner<std::thread::Inner>"* %ptr) unnamed_addr #1 !dbg !7884 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca {}*, align 8
  %ptr.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Inner>"*, align 8
  store %"alloc::sync::ArcInner<std::thread::Inner>"* %ptr, %"alloc::sync::ArcInner<std::thread::Inner>"** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Inner>"** %ptr.dbg.spill, metadata !7891, metadata !DIExpression()), !dbg !7892
  %self = bitcast %"alloc::sync::ArcInner<std::thread::Inner>"* %ptr to {}*, !dbg !7893
  store {}* %self, {}** %self.dbg.spill, align 8, !dbg !7893
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill, metadata !7894, metadata !DIExpression()), !dbg !7898
  %1 = bitcast i64* %0 to {}**, !dbg !7898
  store {}* %self, {}** %1, align 8, !dbg !7898
  %_2 = load i64, i64* %0, align 8, !dbg !7898
  br label %bb1, !dbg !7898

bb1:                                              ; preds = %start
  %2 = icmp eq i64 %_2, -1, !dbg !7893
  ret i1 %2, !dbg !7899
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN5alloc2rc11is_dangling17h58cbd800988c2e0aE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %ptr) unnamed_addr #1 !dbg !7900 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca {}*, align 8
  %ptr.dbg.spill = alloca %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, align 8
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %ptr, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %ptr.dbg.spill, metadata !7905, metadata !DIExpression()), !dbg !7906
  %self = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %ptr to {}*, !dbg !7907
  store {}* %self, {}** %self.dbg.spill, align 8, !dbg !7907
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill, metadata !7908, metadata !DIExpression()), !dbg !7912
  %1 = bitcast i64* %0 to {}**, !dbg !7912
  store {}* %self, {}** %1, align 8, !dbg !7912
  %_2 = load i64, i64* %0, align 8, !dbg !7912
  br label %bb1, !dbg !7912

bb1:                                              ; preds = %start
  %2 = icmp eq i64 %_2, -1, !dbg !7907
  ret i1 %2, !dbg !7913
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN5alloc2rc11is_dangling17ha6c882c5aacd3354E(%"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %ptr) unnamed_addr #1 !dbg !7914 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca {}*, align 8
  %ptr.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, align 8
  store %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %ptr, %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %ptr.dbg.spill, metadata !7918, metadata !DIExpression()), !dbg !7919
  %self = bitcast %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %ptr to {}*, !dbg !7920
  store {}* %self, {}** %self.dbg.spill, align 8, !dbg !7920
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill, metadata !7921, metadata !DIExpression()), !dbg !7925
  %1 = bitcast i64* %0 to {}**, !dbg !7925
  store {}* %self, {}** %1, align 8, !dbg !7925
  %_2 = load i64, i64* %0, align 8, !dbg !7925
  br label %bb1, !dbg !7925

bb1:                                              ; preds = %start
  %2 = icmp eq i64 %_2, -1, !dbg !7920
  ret i1 %2, !dbg !7926
}

; alloc::rc::is_dangling
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN5alloc2rc11is_dangling17hc2b6067f1af68b06E(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* %ptr) unnamed_addr #1 !dbg !7927 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca {}*, align 8
  %ptr.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %ptr, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %ptr.dbg.spill, metadata !7931, metadata !DIExpression()), !dbg !7932
  %self = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %ptr to {}*, !dbg !7933
  store {}* %self, {}** %self.dbg.spill, align 8, !dbg !7933
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill, metadata !7934, metadata !DIExpression()), !dbg !7938
  %1 = bitcast i64* %0 to {}**, !dbg !7938
  store {}* %self, {}** %1, align 8, !dbg !7938
  %_2 = load i64, i64* %0, align 8, !dbg !7938
  br label %bb1, !dbg !7938

bb1:                                              ; preds = %start
  %2 = icmp eq i64 %_2, -1, !dbg !7933
  ret i1 %2, !dbg !7939
}

; alloc::ffi::c_str::CString::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc3ffi5c_str7CString3new17h64fc04278fe91747E(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %0, %"alloc::string::String"* %t) unnamed_addr #1 !dbg !7940 {
start:
  %_2 = alloca %"alloc::string::String", align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %t, metadata !7945, metadata !DIExpression()), !dbg !7946
  %1 = bitcast %"alloc::string::String"* %_2 to i8*, !dbg !7947
  %2 = bitcast %"alloc::string::String"* %t to i8*, !dbg !7947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !7947
; call <T as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
  call void @"_ZN66_$LT$T$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h06ec03921d146e9aE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %0, %"alloc::string::String"* %_2), !dbg !7947
  br label %bb1, !dbg !7947

bb1:                                              ; preds = %start
  ret void, !dbg !7948
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h2234ff1fdc1120aeE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !7949 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !7954, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !7958, metadata !DIExpression()), !dbg !7963
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !7972
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !7972
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !7973, metadata !DIExpression()), !dbg !7980
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !7980
  %self3 = load i8*, i8** %2, align 8, !dbg !7980, !nonnull !28, !noundef !28
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !7980
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !7981, metadata !DIExpression()), !dbg !7985
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !7985
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !7987, metadata !DIExpression()), !dbg !7991
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !7991
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !7955, metadata !DIExpression()), !dbg !7993
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !7971
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !7969, metadata !DIExpression()), !dbg !7994
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !7994
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !7995, metadata !DIExpression()), !dbg !8000
  %3 = bitcast {}** %1 to i64*, !dbg !8002
  store i64 0, i64* %3, align 8, !dbg !8002
  %data_address = load {}*, {}** %1, align 8, !dbg !8002
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !8002
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !7962, metadata !DIExpression()), !dbg !7963
  br label %bb2, !dbg !8002

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !7963
  store {}* %data_address, {}** %4, align 8, !dbg !7963
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !7963
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !7963
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !7963
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !7963
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !7963
  %other = load i8*, i8** %8, align 8, !dbg !7963
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !7963
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !7999, metadata !DIExpression()), !dbg !8000
  %9 = icmp eq i8* %self3, %other, !dbg !8000
  %10 = zext i1 %9 to i8, !dbg !8000
  store i8 %10, i8* %0, align 1, !dbg !8000
  %11 = load i8, i8* %0, align 1, !dbg !8000, !range !1099, !noundef !28
  %_5 = trunc i8 %11 to i1, !dbg !8000
  br label %bb3, !dbg !8000

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !8008
  call void @llvm.assume(i1 %_4), !dbg !8009
  br label %bb1, !dbg !8009

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !8010
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h86cddd9b1ca10b26E"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #0 !dbg !8011 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }*, align 8
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<&str>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill, metadata !8015, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !8019, metadata !DIExpression()), !dbg !8024
  %self1 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*, !dbg !8035
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !8035
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !8036, metadata !DIExpression()), !dbg !8043
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !8043
  %self3 = load i64*, i64** %2, align 8, !dbg !8043, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !8043
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !8044, metadata !DIExpression()), !dbg !8050
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !8050
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !8052, metadata !DIExpression()), !dbg !8058
  %_9 = bitcast i64* %self3 to { [0 x i8]*, i64 }*, !dbg !8058
  store { [0 x i8]*, i64 }* %_9, { [0 x i8]*, i64 }** %ptr.dbg.spill, align 8, !dbg !8058
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill, metadata !8016, metadata !DIExpression()), !dbg !8060
  store { [0 x i8]*, i64 }* %_9, { [0 x i8]*, i64 }** %self.dbg.spill6, align 8, !dbg !8034
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill6, metadata !8032, metadata !DIExpression()), !dbg !8061
  %self7 = bitcast { [0 x i8]*, i64 }* %_9 to i8*, !dbg !8061
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !8061
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !8062, metadata !DIExpression()), !dbg !8067
  %3 = bitcast {}** %1 to i64*, !dbg !8069
  store i64 0, i64* %3, align 8, !dbg !8069
  %data_address = load {}*, {}** %1, align 8, !dbg !8069
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !8069
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !8023, metadata !DIExpression()), !dbg !8024
  br label %bb2, !dbg !8069

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !8024
  store {}* %data_address, {}** %4, align 8, !dbg !8024
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !8024
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !8024
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !8024
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !8024
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !8024
  %other = load i8*, i8** %8, align 8, !dbg !8024
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !8024
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !8066, metadata !DIExpression()), !dbg !8067
  %9 = icmp eq i8* %self7, %other, !dbg !8067
  %10 = zext i1 %9 to i8, !dbg !8067
  store i8 %10, i8* %0, align 1, !dbg !8067
  %11 = load i8, i8* %0, align 1, !dbg !8067, !range !1099, !noundef !28
  %_5 = trunc i8 %11 to i1, !dbg !8067
  br label %bb3, !dbg !8067

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !8075
  call void @llvm.assume(i1 %_4), !dbg !8076
  br label %bb1, !dbg !8076

bb1:                                              ; preds = %bb3
  ret { [0 x i8]*, i64 }* %_9, !dbg !8077
}

; alloc::vec::Vec<T,A>::extend_desugared
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17h00641bf6da95e416E"(%"alloc::vec::Vec<&str>"* align 8 %self, %"core::str::iter::Lines"* %iterator) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !8078 {
start:
  %new_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill11 = alloca %"alloc::vec::Vec<&str>"*, align 8
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %0 = alloca { [0 x i8]*, i64 }*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca { [0 x i8]*, i64 }*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill6 = alloca i64, align 8
  %lower.dbg.spill = alloca i64, align 8
  %self.dbg.spill4 = alloca { i64*, i64 }*, align 8
  %self.dbg.spill2 = alloca %"alloc::vec::Vec<&str>"*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<&str>"*, align 8
  %element.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<&str>"*, align 8
  %src = alloca { [0 x i8]*, i64 }, align 8
  %_14 = alloca { i64, { i64, i64 } }, align 8
  %_11 = alloca i64, align 8
  %_3 = alloca { i8*, i64 }, align 8
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill, metadata !8082, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.declare(metadata %"core::str::iter::Lines"* %iterator, metadata !8083, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src, metadata !8093, metadata !DIExpression()), !dbg !8098
  br label %bb1, !dbg !8100

bb1:                                              ; preds = %bb20, %start
; invoke <core::str::iter::Lines as core::iter::traits::iterator::Iterator>::next
  %3 = invoke { i8*, i64 } @"_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11c66e7f15130a1bE"(%"core::str::iter::Lines"* align 8 %iterator)
          to label %bb2 unwind label %cleanup, !dbg !8101

bb12:                                             ; preds = %bb14, %bb15, %cleanup
  br label %bb13, !dbg !8102

cleanup:                                          ; preds = %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
  store { i8*, i64 } %3, { i8*, i64 }* %_3, align 8, !dbg !8101
  %9 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !8103
  %10 = load {}*, {}** %9, align 8, !dbg !8103
  %11 = icmp eq {}* %10, null, !dbg !8103
  %_5 = select i1 %11, i64 0, i64 1, !dbg !8103
  %12 = icmp eq i64 %_5, 1, !dbg !8103
  br i1 %12, label %bb3, label %bb9, !dbg !8103

bb3:                                              ; preds = %bb2
  %13 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !8104
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0, !dbg !8104
  %element.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !8104, !nonnull !28, !align !1104, !noundef !28
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1, !dbg !8104
  %element.1 = load i64, i64* %15, align 8, !dbg !8104
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %element.dbg.spill, i32 0, i32 0, !dbg !8104
  store [0 x i8]* %element.0, [0 x i8]** %16, align 8, !dbg !8104
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %element.dbg.spill, i32 0, i32 1, !dbg !8104
  store i64 %element.1, i64* %17, align 8, !dbg !8104
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %element.dbg.spill, metadata !8084, metadata !DIExpression()), !dbg !8104
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill1, align 8, !dbg !8105
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill1, metadata !8106, metadata !DIExpression()), !dbg !8112
  %18 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1, !dbg !8112
  %len = load i64, i64* %18, align 8, !dbg !8112
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !8112
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !8086, metadata !DIExpression()), !dbg !8113
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill2, align 8, !dbg !8114
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill2, metadata !8115, metadata !DIExpression()), !dbg !8118
  %self3 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*, !dbg !8118
  store { i64*, i64 }* %self3, { i64*, i64 }** %self.dbg.spill4, align 8, !dbg !8118
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill4, metadata !8119, metadata !DIExpression()), !dbg !8125
  br i1 false, label %bb17, label %bb18, !dbg !8125

bb9:                                              ; preds = %bb2
  br label %bb10, !dbg !8100

bb10:                                             ; preds = %bb9
  br label %bb11, !dbg !8102

bb11:                                             ; preds = %bb10
  ret void, !dbg !8127

bb17:                                             ; preds = %bb3
  store i64 -1, i64* %_11, align 8, !dbg !8125
  br label %bb16, !dbg !8125

bb18:                                             ; preds = %bb3
  %19 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self3, i32 0, i32 1, !dbg !8125
  %20 = load i64, i64* %19, align 8, !dbg !8125
  store i64 %20, i64* %_11, align 8, !dbg !8125
  br label %bb16, !dbg !8125

bb16:                                             ; preds = %bb17, %bb18
  %21 = load i64, i64* %_11, align 8, !dbg !8128
  %_9 = icmp eq i64 %len, %21, !dbg !8128
  br i1 %_9, label %bb4, label %bb7, !dbg !8128

bb7:                                              ; preds = %bb6, %bb16
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %self7 = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h86cddd9b1ca10b26E"(%"alloc::vec::Vec<&str>"* align 8 %self)
          to label %bb8 unwind label %cleanup5, !dbg !8129

bb4:                                              ; preds = %bb16
; invoke <core::str::iter::Lines as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h480fba72e8ec65f4E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %_14, %"core::str::iter::Lines"* align 8 %iterator)
          to label %bb5 unwind label %cleanup5, !dbg !8130

bb15:                                             ; preds = %cleanup5
  br i1 true, label %bb14, label %bb12, !dbg !8131

cleanup5:                                         ; preds = %bb7, %bb19, %bb4
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb15

bb5:                                              ; preds = %bb4
  %27 = bitcast { i64, { i64, i64 } }* %_14 to i64*, !dbg !8132
  %lower = load i64, i64* %27, align 8, !dbg !8132
  store i64 %lower, i64* %lower.dbg.spill, align 8, !dbg !8132
  call void @llvm.dbg.declare(metadata i64* %lower.dbg.spill, metadata !8088, metadata !DIExpression()), !dbg !8133
  store i64 %lower, i64* %self.dbg.spill6, align 8, !dbg !8134
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill6, metadata !8135, metadata !DIExpression()), !dbg !8140
  %28 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1), !dbg !8140
  store i64 %28, i64* %1, align 8, !dbg !8140
  %_18 = load i64, i64* %1, align 8, !dbg !8140
  br label %bb19, !dbg !8140

bb19:                                             ; preds = %bb5
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h3a797139cac231edE"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %_18)
          to label %bb6 unwind label %cleanup5, !dbg !8141

bb6:                                              ; preds = %bb19
  br label %bb7, !dbg !8142

bb8:                                              ; preds = %bb7
  store { [0 x i8]*, i64 }* %self7, { [0 x i8]*, i64 }** %self.dbg.spill8, align 8, !dbg !8129
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill8, metadata !8143, metadata !DIExpression()), !dbg !8150
  store i64 %len, i64* %count.dbg.spill, align 8, !dbg !8151
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !8149, metadata !DIExpression()), !dbg !8150
  store { [0 x i8]*, i64 }* %self7, { [0 x i8]*, i64 }** %self.dbg.spill9, align 8, !dbg !8150
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill9, metadata !8152, metadata !DIExpression()), !dbg !8159
  store i64 %len, i64* %count.dbg.spill10, align 8, !dbg !8150
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !8158, metadata !DIExpression()), !dbg !8159
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self7, i64 %len, !dbg !8159
  store { [0 x i8]*, i64 }* %29, { [0 x i8]*, i64 }** %0, align 8, !dbg !8159
  %_37 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %0, align 8, !dbg !8159
  br label %bb20, !dbg !8159

bb20:                                             ; preds = %bb8
  store { [0 x i8]*, i64 }* %_37, { [0 x i8]*, i64 }** %dst.dbg.spill, align 8, !dbg !8159
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %dst.dbg.spill, metadata !8097, metadata !DIExpression()), !dbg !8098
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !8161
  store [0 x i8]* %element.0, [0 x i8]** %30, align 8, !dbg !8161
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !8161
  store i64 %element.1, i64* %31, align 8, !dbg !8161
  %32 = bitcast { [0 x i8]*, i64 }* %_37 to i8*, !dbg !8098
  %33 = bitcast { [0 x i8]*, i64 }* %src to i8*, !dbg !8098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false), !dbg !8098
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill11, align 8, !dbg !8162
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill11, metadata !8163, metadata !DIExpression()), !dbg !8167
  %new_len = add i64 %len, 1, !dbg !8168
  store i64 %new_len, i64* %new_len.dbg.spill, align 8, !dbg !8168
  call void @llvm.dbg.declare(metadata i64* %new_len.dbg.spill, metadata !8166, metadata !DIExpression()), !dbg !8167
  %34 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1, !dbg !8167
  store i64 %new_len, i64* %34, align 8, !dbg !8167
  br label %bb1, !dbg !8100

bb14:                                             ; preds = %bb15
  br label %bb12, !dbg !8131

bb13:                                             ; preds = %bb12
  %35 = bitcast { i8*, i32 }* %2 to i8**, !dbg !8169
  %36 = load i8*, i8** %35, align 8, !dbg !8169
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !8169
  %38 = load i32, i32* %37, align 8, !dbg !8169
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0, !dbg !8169
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1, !dbg !8169
  resume { i8*, i32 } %40, !dbg !8169
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h953c86afc66fb6fdE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !8170 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_20 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_19 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !8175, metadata !DIExpression()), !dbg !8178
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !8179, metadata !DIExpression()), !dbg !8184
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !8193
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !8193
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !8194, metadata !DIExpression()), !dbg !8198
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !8198
  %self3 = load i8*, i8** %2, align 8, !dbg !8198, !nonnull !28, !noundef !28
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !8198
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !8199, metadata !DIExpression()), !dbg !8203
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !8203
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !8205, metadata !DIExpression()), !dbg !8209
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !8209
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !8176, metadata !DIExpression()), !dbg !8211
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !8192
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !8190, metadata !DIExpression()), !dbg !8212
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !8212
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !8213, metadata !DIExpression()), !dbg !8218
  %3 = bitcast {}** %1 to i64*, !dbg !8220
  store i64 0, i64* %3, align 8, !dbg !8220
  %data_address = load {}*, {}** %1, align 8, !dbg !8220
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !8220
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !8183, metadata !DIExpression()), !dbg !8184
  br label %bb2, !dbg !8220

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to {}**, !dbg !8184
  store {}* %data_address, {}** %4, align 8, !dbg !8184
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !8184
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !8184
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to i8*, !dbg !8184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !8184
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to i8**, !dbg !8184
  %other = load i8*, i8** %8, align 8, !dbg !8184
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !8184
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !8217, metadata !DIExpression()), !dbg !8218
  %9 = icmp eq i8* %self3, %other, !dbg !8218
  %10 = zext i1 %9 to i8, !dbg !8218
  store i8 %10, i8* %0, align 1, !dbg !8218
  %11 = load i8, i8* %0, align 1, !dbg !8218, !range !1099, !noundef !28
  %_6 = trunc i8 %11 to i1, !dbg !8218
  br label %bb3, !dbg !8218

bb3:                                              ; preds = %bb2
  %_5 = xor i1 %_6, true, !dbg !8226
  call void @llvm.assume(i1 %_5), !dbg !8227
  br label %bb1, !dbg !8227

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !8228
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hc3c39fd5d04ba6beE"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #0 !dbg !8229 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }*, align 8
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<&str>"*, align 8
  %_20 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_19 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill, metadata !8233, metadata !DIExpression()), !dbg !8236
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !8237, metadata !DIExpression()), !dbg !8242
  %self1 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*, !dbg !8251
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !8251
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !8252, metadata !DIExpression()), !dbg !8256
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !8256
  %self3 = load i64*, i64** %2, align 8, !dbg !8256, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !8256
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !8257, metadata !DIExpression()), !dbg !8261
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !8261
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !8263, metadata !DIExpression()), !dbg !8267
  %_11 = bitcast i64* %self3 to { [0 x i8]*, i64 }*, !dbg !8267
  store { [0 x i8]*, i64 }* %_11, { [0 x i8]*, i64 }** %ptr.dbg.spill, align 8, !dbg !8267
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill, metadata !8234, metadata !DIExpression()), !dbg !8269
  store { [0 x i8]*, i64 }* %_11, { [0 x i8]*, i64 }** %self.dbg.spill6, align 8, !dbg !8250
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill6, metadata !8248, metadata !DIExpression()), !dbg !8270
  %self7 = bitcast { [0 x i8]*, i64 }* %_11 to i8*, !dbg !8270
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !8270
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !8271, metadata !DIExpression()), !dbg !8276
  %3 = bitcast {}** %1 to i64*, !dbg !8278
  store i64 0, i64* %3, align 8, !dbg !8278
  %data_address = load {}*, {}** %1, align 8, !dbg !8278
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !8278
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !8241, metadata !DIExpression()), !dbg !8242
  br label %bb2, !dbg !8278

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to {}**, !dbg !8242
  store {}* %data_address, {}** %4, align 8, !dbg !8242
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !8242
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !8242
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to i8*, !dbg !8242
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !8242
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to i8**, !dbg !8242
  %other = load i8*, i8** %8, align 8, !dbg !8242
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !8242
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !8275, metadata !DIExpression()), !dbg !8276
  %9 = icmp eq i8* %self7, %other, !dbg !8276
  %10 = zext i1 %9 to i8, !dbg !8276
  store i8 %10, i8* %0, align 1, !dbg !8276
  %11 = load i8, i8* %0, align 1, !dbg !8276, !range !1099, !noundef !28
  %_6 = trunc i8 %11 to i1, !dbg !8276
  br label %bb3, !dbg !8276

bb3:                                              ; preds = %bb2
  %_5 = xor i1 %_6, true, !dbg !8284
  call void @llvm.assume(i1 %_5), !dbg !8285
  br label %bb1, !dbg !8285

bb1:                                              ; preds = %bb3
  ret { [0 x i8]*, i64 }* %_11, !dbg !8286
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h3a797139cac231edE"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %additional) unnamed_addr #1 !dbg !8287 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<&str>"*, align 8
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill, metadata !8289, metadata !DIExpression()), !dbg !8291
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !8290, metadata !DIExpression()), !dbg !8292
  %_4 = bitcast %"alloc::vec::Vec<&str>"* %self to { i64*, i64 }*, !dbg !8293
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1, !dbg !8294
  %_5 = load i64, i64* %0, align 8, !dbg !8294
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h06188d9f7d316e3dE"({ i64*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !8293
  br label %bb1, !dbg !8293

bb1:                                              ; preds = %start
  ret void, !dbg !8295
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define internal i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h4f05692ff44a0bfbE"(i64* %ptr) unnamed_addr #1 !dbg !8296 {
start:
  %ptr.dbg.spill = alloca i64*, align 8
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !8300, metadata !DIExpression()), !dbg !8301
  store i64* %ptr, i64** %0, align 8, !dbg !8302
  %1 = load i64*, i64** %0, align 8, !dbg !8303, !nonnull !28, !noundef !28
  ret i64* %1, !dbg !8303
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define internal i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h5ca78c3165444956E"(i64* %ptr) unnamed_addr #1 !dbg !8304 {
start:
  %ptr.dbg.spill = alloca i64*, align 8
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !8308, metadata !DIExpression()), !dbg !8309
  store i64* %ptr, i64** %0, align 8, !dbg !8310
  %1 = load i64*, i64** %0, align 8, !dbg !8311, !nonnull !28, !noundef !28
  ret i64* %1, !dbg !8311
}

; alloc::sync::Arc<T>::from_inner
; Function Attrs: nonlazybind uwtable
define internal i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17hbdeb4c2f03f74c32E"(i64* %ptr) unnamed_addr #1 !dbg !8312 {
start:
  %ptr.dbg.spill = alloca i64*, align 8
  %0 = alloca i64*, align 8
  store i64* %ptr, i64** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %ptr.dbg.spill, metadata !8316, metadata !DIExpression()), !dbg !8317
  store i64* %ptr, i64** %0, align 8, !dbg !8318
  %1 = load i64*, i64** %0, align 8, !dbg !8319, !nonnull !28, !noundef !28
  ret i64* %1, !dbg !8319
}

; alloc::sync::Arc<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64* @"_ZN5alloc4sync12Arc$LT$T$GT$3new17h5bc0904c657e3af2E"(%"std::thread::Packet<()>"* %data) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !8320 {
start:
  %self.dbg.spill3 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill = alloca i64**, align 8
  %value.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  %b.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  %x.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %_27 = alloca i64*, align 8
  %_6 = alloca %"std::thread::Packet<()>", align 8
  %_5 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %_4 = alloca %"core::sync::atomic::AtomicUsize", align 8
  %x = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>", align 8
  call void @llvm.dbg.declare(metadata %"std::thread::Packet<()>"* %data, metadata !8324, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x, metadata !8329, metadata !DIExpression()), !dbg !8335
  %1 = bitcast %"core::sync::atomic::AtomicUsize"* %_4 to i64*, !dbg !8337
  store i64 1, i64* %1, align 8, !dbg !8337
  %2 = bitcast %"core::sync::atomic::AtomicUsize"* %_5 to i64*, !dbg !8345
  store i64 1, i64* %2, align 8, !dbg !8345
  %3 = bitcast %"std::thread::Packet<()>"* %_6 to i8*, !dbg !8351
  %4 = bitcast %"std::thread::Packet<()>"* %data to i8*, !dbg !8351
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false), !dbg !8351
  %5 = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x to %"core::sync::atomic::AtomicUsize"*, !dbg !8352
  %6 = bitcast %"core::sync::atomic::AtomicUsize"* %5 to i8*, !dbg !8352
  %7 = bitcast %"core::sync::atomic::AtomicUsize"* %_4 to i8*, !dbg !8352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !8352
  %8 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x, i32 0, i32 1, !dbg !8352
  %9 = bitcast %"core::sync::atomic::AtomicUsize"* %8 to i8*, !dbg !8352
  %10 = bitcast %"core::sync::atomic::AtomicUsize"* %_5 to i8*, !dbg !8352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 8, i1 false), !dbg !8352
  %11 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x, i32 0, i32 2, !dbg !8352
  %12 = bitcast %"std::thread::Packet<()>"* %11 to i8*, !dbg !8352
  %13 = bitcast %"std::thread::Packet<()>"* %_6 to i8*, !dbg !8352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false), !dbg !8352
; invoke alloc::alloc::exchange_malloc
  %_18 = invoke i8* @_ZN5alloc5alloc15exchange_malloc17hcbc5eeb785b10e95E(i64 48, i64 8)
          to label %bb6 unwind label %cleanup, !dbg !8335

bb7:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::sync::ArcInner<std::thread::Packet<()>>>
  invoke void @"_ZN4core3ptr85drop_in_place$LT$alloc..sync..ArcInner$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17hb9aea8892d5e48f5E"(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x) #18
          to label %bb5 unwind label %abort, !dbg !8335

cleanup:                                          ; preds = %start
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb7

bb6:                                              ; preds = %start
  %x1 = bitcast i8* %_18 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8335
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x1, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %x.dbg.spill, align 8, !dbg !8335
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %x.dbg.spill, metadata !8325, metadata !DIExpression()), !dbg !8353
  %19 = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x1 to i64*, !dbg !8335
  %_19 = bitcast i64* %19 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8335
  %20 = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_19 to i8*, !dbg !8335
  %21 = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x to i8*, !dbg !8335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 48, i1 false), !dbg !8335
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x1, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %b.dbg.spill, align 8, !dbg !8354
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %b.dbg.spill, metadata !8355, metadata !DIExpression()), !dbg !8363
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x1, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %value.dbg.spill, align 8, !dbg !8363
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %value.dbg.spill, metadata !8365, metadata !DIExpression()), !dbg !8376
  %22 = bitcast i64** %_27 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"**, !dbg !8376
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %x1, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %22, align 8, !dbg !8376
  store i64** %_27, i64*** %self.dbg.spill, align 8, !dbg !8363
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8378, metadata !DIExpression()), !dbg !8387
  %_25 = bitcast i64** %_27 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"**, !dbg !8387
  %23 = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %_25 to i64**, !dbg !8363
  %self = load i64*, i64** %23, align 8, !dbg !8363, !nonnull !28, !noundef !28
  store i64* %self, i64** %self.dbg.spill2, align 8, !dbg !8363
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8388, metadata !DIExpression()), !dbg !8398
  store i64* %self, i64** %self.dbg.spill3, align 8, !dbg !8398
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !8399, metadata !DIExpression()), !dbg !8403
  %_31 = bitcast i64* %self to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8403
; invoke <T as core::convert::Into<U>>::into
  %_7 = invoke i64* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h463e69f068e26b95E"(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* align 8 %_31)
          to label %bb1 unwind label %cleanup4, !dbg !8364

abort:                                            ; preds = %bb4, %bb7
  %24 = landingpad { i8*, i32 }
          cleanup, !dbg !8405
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !8405
  unreachable, !dbg !8405

bb5:                                              ; preds = %cleanup4, %bb7
  br i1 false, label %bb4, label %bb3, !dbg !8406

cleanup4:                                         ; preds = %bb1, %bb6
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb5

bb1:                                              ; preds = %bb6
; invoke alloc::sync::Arc<T>::from_inner
  %30 = invoke i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h4f05692ff44a0bfbE"(i64* %_7)
          to label %bb2 unwind label %cleanup4, !dbg !8407

bb2:                                              ; preds = %bb1
  ret i64* %30, !dbg !8408

bb3:                                              ; preds = %bb4, %bb5
  %31 = bitcast { i8*, i32 }* %0 to i8**, !dbg !8405
  %32 = load i8*, i8** %31, align 8, !dbg !8405
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !8405
  %34 = load i32, i32* %33, align 8, !dbg !8405
  %35 = insertvalue { i8*, i32 } undef, i8* %32, 0, !dbg !8405
  %36 = insertvalue { i8*, i32 } %35, i32 %34, 1, !dbg !8405
  resume { i8*, i32 } %36, !dbg !8405

bb4:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<std::thread::Packet<()>>
  invoke void @"_ZN4core3ptr56drop_in_place$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$17h3c8e128dc6e8014eE"(%"std::thread::Packet<()>"* %data) #18
          to label %bb3 unwind label %abort, !dbg !8406
}

; alloc::sync::Arc<T>::get_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @"_ZN5alloc4sync12Arc$LT$T$GT$7get_mut17hdc8e2746c50a8bf4E"(i64** align 8 %this) unnamed_addr #0 !dbg !8409 {
start:
  %self.dbg.spill = alloca i64*, align 8
  %this.dbg.spill1 = alloca i64**, align 8
  %this.dbg.spill = alloca i64**, align 8
  %0 = alloca i64*, align 8
  store i64** %this, i64*** %this.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %this.dbg.spill, metadata !8414, metadata !DIExpression()), !dbg !8415
; call alloc::sync::Arc<T>::is_unique
  %_2 = call zeroext i1 @"_ZN5alloc4sync12Arc$LT$T$GT$9is_unique17hcbd9e074c49c5d84E"(i64** align 8 %this), !dbg !8416
  br label %bb1, !dbg !8416

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3, !dbg !8416

bb3:                                              ; preds = %bb1
  %1 = bitcast i64** %0 to {}**, !dbg !8417
  store {}* null, {}** %1, align 8, !dbg !8417
  br label %bb4, !dbg !8418

bb2:                                              ; preds = %bb1
  store i64** %this, i64*** %this.dbg.spill1, align 8, !dbg !8419
  call void @llvm.dbg.declare(metadata i64*** %this.dbg.spill1, metadata !8420, metadata !DIExpression()), !dbg !8425
  %self = load i64*, i64** %this, align 8, !dbg !8425, !nonnull !28, !noundef !28
  store i64* %self, i64** %self.dbg.spill, align 8, !dbg !8425
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !8427, metadata !DIExpression()), !dbg !8431
  %_12 = bitcast i64* %self to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8431
  %_9 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_12, i32 0, i32 2, !dbg !8425
  %2 = bitcast i64** %0 to %"std::thread::Packet<()>"**, !dbg !8433
  store %"std::thread::Packet<()>"* %_9, %"std::thread::Packet<()>"** %2, align 8, !dbg !8433
  br label %bb4, !dbg !8418

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i64*, i64** %0, align 8, !dbg !8434, !align !1582
  ret i64* %3, !dbg !8434
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define internal void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h32b6f12d9fa8a34aE"(i64** align 8 %self) unnamed_addr #2 !dbg !8435 {
start:
  %self.dbg.spill2 = alloca i64*, align 8
  %this.dbg.spill = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_x = alloca i64*, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata i64** %_x, metadata !8442, metadata !DIExpression()), !dbg !8448
  store i64** %self, i64*** %this.dbg.spill, align 8, !dbg !8450
  call void @llvm.dbg.declare(metadata i64*** %this.dbg.spill, metadata !8451, metadata !DIExpression()), !dbg !8457
  %self1 = load i64*, i64** %self, align 8, !dbg !8457, !nonnull !28, !noundef !28
  store i64* %self1, i64** %self.dbg.spill2, align 8, !dbg !8457
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8459, metadata !DIExpression()), !dbg !8465
  %_13 = bitcast i64* %self1 to %"alloc::sync::ArcInner<std::thread::Inner>"*, !dbg !8465
  %_10 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Inner>", %"alloc::sync::ArcInner<std::thread::Inner>"* %_13, i32 0, i32 2, !dbg !8457
; call core::ptr::drop_in_place<std::thread::Inner>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..thread..Inner$GT$17h7658d240831fd067E"(%"std::thread::Inner"* %_10), !dbg !8467
  br label %bb1, !dbg !8467

bb1:                                              ; preds = %start
  %_7 = load i64*, i64** %self, align 8, !dbg !8468, !nonnull !28, !noundef !28
  store i64* %_7, i64** %_x, align 8, !dbg !8469
; call core::ptr::drop_in_place<alloc::sync::Weak<std::thread::Inner>>
  call void @"_ZN4core3ptr64drop_in_place$LT$alloc..sync..Weak$LT$std..thread..Inner$GT$$GT$17h9c237f6c4bc17438E"(i64** %_x), !dbg !8448
  br label %bb2, !dbg !8448

bb2:                                              ; preds = %bb1
  ret void, !dbg !8470
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define internal void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h7cada30ff35c6670E"(i64** align 8 %self) unnamed_addr #2 !dbg !8471 {
start:
  %self.dbg.spill2 = alloca i64*, align 8
  %this.dbg.spill = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_x = alloca i64*, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8476, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.declare(metadata i64** %_x, metadata !8478, metadata !DIExpression()), !dbg !8484
  store i64** %self, i64*** %this.dbg.spill, align 8, !dbg !8486
  call void @llvm.dbg.declare(metadata i64*** %this.dbg.spill, metadata !8487, metadata !DIExpression()), !dbg !8493
  %self1 = load i64*, i64** %self, align 8, !dbg !8493, !nonnull !28, !noundef !28
  store i64* %self1, i64** %self.dbg.spill2, align 8, !dbg !8493
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8495, metadata !DIExpression()), !dbg !8501
  %_13 = bitcast i64* %self1 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, !dbg !8501
  %_10 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %_13, i32 0, i32 2, !dbg !8493
; call core::ptr::drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>
  call void @"_ZN4core3ptr77drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17hdaff1c604a5024deE"(%"std::sync::mutex::Mutex<alloc::vec::Vec<u8>>"* %_10), !dbg !8503
  br label %bb1, !dbg !8503

bb1:                                              ; preds = %start
  %_7 = load i64*, i64** %self, align 8, !dbg !8504, !nonnull !28, !noundef !28
  store i64* %_7, i64** %_x, align 8, !dbg !8505
; call core::ptr::drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>>
  call void @"_ZN4core3ptr102drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$17h40aacf4efd7e3b7eE"(i64** %_x), !dbg !8484
  br label %bb2, !dbg !8484

bb2:                                              ; preds = %bb1
  ret void, !dbg !8506
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define internal void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb3651e22e411dae6E"(i64** align 8 %self) unnamed_addr #2 !dbg !8507 {
start:
  %self.dbg.spill2 = alloca i64*, align 8
  %this.dbg.spill = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_x = alloca i64*, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8511, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.declare(metadata i64** %_x, metadata !8513, metadata !DIExpression()), !dbg !8519
  store i64** %self, i64*** %this.dbg.spill, align 8, !dbg !8521
  call void @llvm.dbg.declare(metadata i64*** %this.dbg.spill, metadata !8522, metadata !DIExpression()), !dbg !8525
  %self1 = load i64*, i64** %self, align 8, !dbg !8525, !nonnull !28, !noundef !28
  store i64* %self1, i64** %self.dbg.spill2, align 8, !dbg !8525
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8527, metadata !DIExpression()), !dbg !8531
  %_13 = bitcast i64* %self1 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8531
  %_10 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_13, i32 0, i32 2, !dbg !8525
; call core::ptr::drop_in_place<std::thread::Packet<()>>
  call void @"_ZN4core3ptr56drop_in_place$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$17h3c8e128dc6e8014eE"(%"std::thread::Packet<()>"* %_10), !dbg !8533
  br label %bb1, !dbg !8533

bb1:                                              ; preds = %start
  %_7 = load i64*, i64** %self, align 8, !dbg !8534, !nonnull !28, !noundef !28
  store i64* %_7, i64** %_x, align 8, !dbg !8535
; call core::ptr::drop_in_place<alloc::sync::Weak<std::thread::Packet<()>>>
  call void @"_ZN4core3ptr81drop_in_place$LT$alloc..sync..Weak$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17ha5187d1350988a8cE"(i64** %_x), !dbg !8519
  br label %bb2, !dbg !8519

bb2:                                              ; preds = %bb1
  ret void, !dbg !8536
}

; alloc::sync::Arc<T>::drop_slow
; Function Attrs: noinline nonlazybind uwtable
define internal void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hfa94940a74c27332E"(i64** align 8 %self) unnamed_addr #2 !dbg !8537 {
start:
  %self.dbg.spill2 = alloca i64*, align 8
  %this.dbg.spill = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_x = alloca i64*, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8542, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.declare(metadata i64** %_x, metadata !8544, metadata !DIExpression()), !dbg !8550
  store i64** %self, i64*** %this.dbg.spill, align 8, !dbg !8552
  call void @llvm.dbg.declare(metadata i64*** %this.dbg.spill, metadata !8553, metadata !DIExpression()), !dbg !8559
  %self1 = load i64*, i64** %self, align 8, !dbg !8559, !nonnull !28, !noundef !28
  store i64* %self1, i64** %self.dbg.spill2, align 8, !dbg !8559
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8561, metadata !DIExpression()), !dbg !8565
  %_13 = bitcast i64* %self1 to %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, !dbg !8565
  %_10 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>", %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_13, i32 0, i32 2, !dbg !8559
; call core::ptr::drop_in_place<std::thread::scoped::ScopeData>
  call void @"_ZN4core3ptr51drop_in_place$LT$std..thread..scoped..ScopeData$GT$17h26f8f5924a34f6feE"(%"std::thread::scoped::ScopeData"* %_10), !dbg !8567
  br label %bb1, !dbg !8567

bb1:                                              ; preds = %start
  %_7 = load i64*, i64** %self, align 8, !dbg !8568, !nonnull !28, !noundef !28
  store i64* %_7, i64** %_x, align 8, !dbg !8569
; call core::ptr::drop_in_place<alloc::sync::Weak<std::thread::scoped::ScopeData>>
  call void @"_ZN4core3ptr76drop_in_place$LT$alloc..sync..Weak$LT$std..thread..scoped..ScopeData$GT$$GT$17h8b96fa35114eb1c4E"(i64** %_x), !dbg !8550
  br label %bb2, !dbg !8550

bb2:                                              ; preds = %bb1
  ret void, !dbg !8570
}

; alloc::sync::Arc<T>::is_unique
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN5alloc4sync12Arc$LT$T$GT$9is_unique17hcbd9e074c49c5d84E"(i64** align 8 %self) unnamed_addr #1 !dbg !8571 {
start:
  %self.dbg.spill25 = alloca i64*, align 8
  %self.dbg.spill23 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill21 = alloca i64*, align 8
  %self.dbg.spill19 = alloca i64**, align 8
  %self.dbg.spill18 = alloca i64**, align 8
  %unique.dbg.spill = alloca i8, align 1
  %self.dbg.spill17 = alloca i64*, align 8
  %self.dbg.spill15 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill13 = alloca i64*, align 8
  %self.dbg.spill11 = alloca i64**, align 8
  %self.dbg.spill10 = alloca i64**, align 8
  %self.dbg.spill9 = alloca { i64, i64 }*, align 8
  %self.dbg.spill8 = alloca i64*, align 8
  %self.dbg.spill6 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64**, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_4 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8575, metadata !DIExpression()), !dbg !8578
  store i64** %self, i64*** %self.dbg.spill1, align 8, !dbg !8579
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !8580, metadata !DIExpression()), !dbg !8583
  store i64** %self, i64*** %self.dbg.spill2, align 8, !dbg !8583
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill2, metadata !8584, metadata !DIExpression()), !dbg !8588
  %self3 = load i64*, i64** %self, align 8, !dbg !8588, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !8588
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !8590, metadata !DIExpression()), !dbg !8594
  %_23 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8594
  %self5 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_23, i32 0, i32 1, !dbg !8579
  store %"core::sync::atomic::AtomicUsize"* %self5, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, align 8, !dbg !8579
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, metadata !8596, metadata !DIExpression()), !dbg !8607
  %self7 = bitcast %"core::sync::atomic::AtomicUsize"* %self5 to i64*, !dbg !8607
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !8607
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !8608, metadata !DIExpression()), !dbg !8615
; call core::sync::atomic::atomic_compare_exchange
  %1 = call { i64, i64 } @_ZN4core4sync6atomic23atomic_compare_exchange17h57ca4702d7acaf8aE(i64* %self7, i64 1, i64 -1, i8 2, i8 0), !dbg !8607
  store { i64, i64 } %1, { i64, i64 }* %_4, align 8, !dbg !8607
  br label %bb5, !dbg !8607

bb5:                                              ; preds = %start
  store { i64, i64 }* %_4, { i64, i64 }** %self.dbg.spill9, align 8, !dbg !8579
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill9, metadata !8617, metadata !DIExpression()), !dbg !8624
  %2 = bitcast { i64, i64 }* %_4 to i64*, !dbg !8624
  %_34 = load i64, i64* %2, align 8, !dbg !8624, !range !1578, !noundef !28
  %3 = icmp eq i64 %_34, 0, !dbg !8624
  br i1 %3, label %bb7, label %bb6, !dbg !8624

bb7:                                              ; preds = %bb5
  store i8 1, i8* %_2, align 1, !dbg !8624
  br label %bb1, !dbg !8624

bb6:                                              ; preds = %bb5
  store i8 0, i8* %_2, align 1, !dbg !8624
  br label %bb1, !dbg !8624

bb1:                                              ; preds = %bb7, %bb6
  %4 = load i8, i8* %_2, align 1, !dbg !8579, !range !1099, !noundef !28
  %5 = trunc i8 %4 to i1, !dbg !8579
  br i1 %5, label %bb2, label %bb3, !dbg !8579

bb3:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1, !dbg !8625
  br label %bb4, !dbg !8626

bb2:                                              ; preds = %bb1
  store i64** %self, i64*** %self.dbg.spill10, align 8, !dbg !8627
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill10, metadata !8628, metadata !DIExpression()), !dbg !8631
  store i64** %self, i64*** %self.dbg.spill11, align 8, !dbg !8631
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill11, metadata !8632, metadata !DIExpression()), !dbg !8636
  %self12 = load i64*, i64** %self, align 8, !dbg !8636, !nonnull !28, !noundef !28
  store i64* %self12, i64** %self.dbg.spill13, align 8, !dbg !8636
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill13, metadata !8638, metadata !DIExpression()), !dbg !8642
  %_38 = bitcast i64* %self12 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8642
  %self14 = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_38 to %"core::sync::atomic::AtomicUsize"*, !dbg !8627
  store %"core::sync::atomic::AtomicUsize"* %self14, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill15, align 8, !dbg !8627
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill15, metadata !8644, metadata !DIExpression()), !dbg !8651
  %self16 = bitcast %"core::sync::atomic::AtomicUsize"* %self14 to i64*, !dbg !8651
  store i64* %self16, i64** %self.dbg.spill17, align 8, !dbg !8651
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill17, metadata !8652, metadata !DIExpression()), !dbg !8656
; call core::sync::atomic::atomic_load
  %_11 = call i64 @_ZN4core4sync6atomic11atomic_load17h59d687c8d66b8239E(i64* %self16, i8 2), !dbg !8651
  br label %bb8, !dbg !8651

bb8:                                              ; preds = %bb2
  %unique = icmp eq i64 %_11, 1, !dbg !8627
  %6 = zext i1 %unique to i8, !dbg !8627
  store i8 %6, i8* %unique.dbg.spill, align 1, !dbg !8627
  call void @llvm.dbg.declare(metadata i8* %unique.dbg.spill, metadata !8576, metadata !DIExpression()), !dbg !8658
  store i64** %self, i64*** %self.dbg.spill18, align 8, !dbg !8659
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill18, metadata !8660, metadata !DIExpression()), !dbg !8663
  store i64** %self, i64*** %self.dbg.spill19, align 8, !dbg !8663
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill19, metadata !8664, metadata !DIExpression()), !dbg !8668
  %self20 = load i64*, i64** %self, align 8, !dbg !8668, !nonnull !28, !noundef !28
  store i64* %self20, i64** %self.dbg.spill21, align 8, !dbg !8668
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill21, metadata !8670, metadata !DIExpression()), !dbg !8674
  %_48 = bitcast i64* %self20 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8674
  %self22 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_48, i32 0, i32 1, !dbg !8659
  store %"core::sync::atomic::AtomicUsize"* %self22, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill23, align 8, !dbg !8659
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill23, metadata !8676, metadata !DIExpression()), !dbg !8684
  %self24 = bitcast %"core::sync::atomic::AtomicUsize"* %self22 to i64*, !dbg !8684
  store i64* %self24, i64** %self.dbg.spill25, align 8, !dbg !8684
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill25, metadata !8685, metadata !DIExpression()), !dbg !8689
; call core::sync::atomic::atomic_store
  call void @_ZN4core4sync6atomic12atomic_store17hbca3b501a55c8f51E(i64* %self24, i64 1, i8 1), !dbg !8684
  br label %bb9, !dbg !8684

bb9:                                              ; preds = %bb8
  %7 = zext i1 %unique to i8, !dbg !8691
  store i8 %7, i8* %0, align 1, !dbg !8691
  br label %bb4, !dbg !8626

bb4:                                              ; preds = %bb3, %bb9
  %8 = load i8, i8* %0, align 1, !dbg !8692, !range !1099, !noundef !28
  %9 = trunc i8 %8 to i1, !dbg !8692
  ret i1 %9, !dbg !8692
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h1637794c46f734c6E"(i64** align 8 %self) unnamed_addr #0 !dbg !8693 {
start:
  %ptr.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Inner>"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8715, metadata !DIExpression()), !dbg !8718
  %self1 = load i64*, i64** %self, align 8, !dbg !8719, !nonnull !28, !noundef !28
  store i64* %self1, i64** %self.dbg.spill2, align 8, !dbg !8719
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8720, metadata !DIExpression()), !dbg !8724
  %_12 = bitcast i64* %self1 to %"alloc::sync::ArcInner<std::thread::Inner>"*, !dbg !8724
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h3eedc86df22cea98E(%"alloc::sync::ArcInner<std::thread::Inner>"* %_12), !dbg !8725
  br label %bb1, !dbg !8725

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3, !dbg !8725

bb3:                                              ; preds = %bb1
  %self3 = load i64*, i64** %self, align 8, !dbg !8726, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !8726
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !8727, metadata !DIExpression()), !dbg !8731
  %_13 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::Inner>"*, !dbg !8731
  store %"alloc::sync::ArcInner<std::thread::Inner>"* %_13, %"alloc::sync::ArcInner<std::thread::Inner>"** %ptr.dbg.spill, align 8, !dbg !8731
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Inner>"** %ptr.dbg.spill, metadata !8716, metadata !DIExpression()), !dbg !8732
  %_9 = bitcast %"alloc::sync::ArcInner<std::thread::Inner>"* %_13 to %"core::sync::atomic::AtomicUsize"*, !dbg !8733
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Inner>", %"alloc::sync::ArcInner<std::thread::Inner>"* %_13, i32 0, i32 1, !dbg !8734
  %1 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**, !dbg !8735
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %1, align 8, !dbg !8735
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !8735
  %3 = bitcast i64** %2 to %"core::sync::atomic::AtomicUsize"**, !dbg !8735
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %3, align 8, !dbg !8735
  %4 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*, !dbg !8736
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0, !dbg !8736
  %6 = load i64*, i64** %5, align 8, !dbg !8736, !nonnull !28, !align !1582, !noundef !28
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !8736
  %8 = load i64*, i64** %7, align 8, !dbg !8736, !nonnull !28, !align !1582, !noundef !28
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %4, i32 0, i32 0, !dbg !8736
  store i64* %6, i64** %9, align 8, !dbg !8736
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %4, i32 0, i32 1, !dbg !8736
  store i64* %8, i64** %10, align 8, !dbg !8736
  br label %bb4, !dbg !8737

bb2:                                              ; preds = %bb1
  %11 = bitcast { i64*, i8* }* %0 to {}**, !dbg !8738
  store {}* null, {}** %11, align 8, !dbg !8738
  br label %bb4, !dbg !8737

bb4:                                              ; preds = %bb3, %bb2
  %12 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0, !dbg !8739
  %13 = load i64*, i64** %12, align 8, !dbg !8739, !align !1582
  %14 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1, !dbg !8739
  %15 = load i8*, i8** %14, align 8, !dbg !8739
  %16 = insertvalue { i64*, i8* } undef, i64* %13, 0, !dbg !8739
  %17 = insertvalue { i64*, i8* } %16, i8* %15, 1, !dbg !8739
  ret { i64*, i8* } %17, !dbg !8739
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h186709c82b4962d4E"(i64** align 8 %self) unnamed_addr #0 !dbg !8740 {
start:
  %ptr.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8745, metadata !DIExpression()), !dbg !8748
  %self1 = load i64*, i64** %self, align 8, !dbg !8749, !nonnull !28, !noundef !28
  store i64* %self1, i64** %self.dbg.spill2, align 8, !dbg !8749
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8750, metadata !DIExpression()), !dbg !8754
  %_12 = bitcast i64* %self1 to %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, !dbg !8754
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17ha6c882c5aacd3354E(%"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_12), !dbg !8755
  br label %bb1, !dbg !8755

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3, !dbg !8755

bb3:                                              ; preds = %bb1
  %self3 = load i64*, i64** %self, align 8, !dbg !8756, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !8756
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !8757, metadata !DIExpression()), !dbg !8761
  %_13 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, !dbg !8761
  store %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_13, %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %ptr.dbg.spill, align 8, !dbg !8761
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"** %ptr.dbg.spill, metadata !8746, metadata !DIExpression()), !dbg !8762
  %_9 = bitcast %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_13 to %"core::sync::atomic::AtomicUsize"*, !dbg !8763
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>", %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_13, i32 0, i32 1, !dbg !8764
  %1 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**, !dbg !8765
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %1, align 8, !dbg !8765
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !8765
  %3 = bitcast i64** %2 to %"core::sync::atomic::AtomicUsize"**, !dbg !8765
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %3, align 8, !dbg !8765
  %4 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*, !dbg !8766
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0, !dbg !8766
  %6 = load i64*, i64** %5, align 8, !dbg !8766, !nonnull !28, !align !1582, !noundef !28
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !8766
  %8 = load i64*, i64** %7, align 8, !dbg !8766, !nonnull !28, !align !1582, !noundef !28
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %4, i32 0, i32 0, !dbg !8766
  store i64* %6, i64** %9, align 8, !dbg !8766
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %4, i32 0, i32 1, !dbg !8766
  store i64* %8, i64** %10, align 8, !dbg !8766
  br label %bb4, !dbg !8767

bb2:                                              ; preds = %bb1
  %11 = bitcast { i64*, i8* }* %0 to {}**, !dbg !8768
  store {}* null, {}** %11, align 8, !dbg !8768
  br label %bb4, !dbg !8767

bb4:                                              ; preds = %bb3, %bb2
  %12 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0, !dbg !8769
  %13 = load i64*, i64** %12, align 8, !dbg !8769, !align !1582
  %14 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1, !dbg !8769
  %15 = load i8*, i8** %14, align 8, !dbg !8769
  %16 = insertvalue { i64*, i8* } undef, i64* %13, 0, !dbg !8769
  %17 = insertvalue { i64*, i8* } %16, i8* %15, 1, !dbg !8769
  ret { i64*, i8* } %17, !dbg !8769
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h34a5dc89203c17e7E"(i64** align 8 %self) unnamed_addr #0 !dbg !8770 {
start:
  %ptr.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8775, metadata !DIExpression()), !dbg !8778
  %self1 = load i64*, i64** %self, align 8, !dbg !8779, !nonnull !28, !noundef !28
  store i64* %self1, i64** %self.dbg.spill2, align 8, !dbg !8779
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8780, metadata !DIExpression()), !dbg !8784
  %_12 = bitcast i64* %self1 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8784
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17hc2b6067f1af68b06E(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_12), !dbg !8785
  br label %bb1, !dbg !8785

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3, !dbg !8785

bb3:                                              ; preds = %bb1
  %self3 = load i64*, i64** %self, align 8, !dbg !8786, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !8786
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !8787, metadata !DIExpression()), !dbg !8791
  %_13 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !8791
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_13, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %ptr.dbg.spill, align 8, !dbg !8791
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %ptr.dbg.spill, metadata !8776, metadata !DIExpression()), !dbg !8792
  %_9 = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_13 to %"core::sync::atomic::AtomicUsize"*, !dbg !8793
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::Packet<()>>", %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_13, i32 0, i32 1, !dbg !8794
  %1 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**, !dbg !8795
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %1, align 8, !dbg !8795
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !8795
  %3 = bitcast i64** %2 to %"core::sync::atomic::AtomicUsize"**, !dbg !8795
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %3, align 8, !dbg !8795
  %4 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*, !dbg !8796
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0, !dbg !8796
  %6 = load i64*, i64** %5, align 8, !dbg !8796, !nonnull !28, !align !1582, !noundef !28
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !8796
  %8 = load i64*, i64** %7, align 8, !dbg !8796, !nonnull !28, !align !1582, !noundef !28
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %4, i32 0, i32 0, !dbg !8796
  store i64* %6, i64** %9, align 8, !dbg !8796
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %4, i32 0, i32 1, !dbg !8796
  store i64* %8, i64** %10, align 8, !dbg !8796
  br label %bb4, !dbg !8797

bb2:                                              ; preds = %bb1
  %11 = bitcast { i64*, i8* }* %0 to {}**, !dbg !8798
  store {}* null, {}** %11, align 8, !dbg !8798
  br label %bb4, !dbg !8797

bb4:                                              ; preds = %bb3, %bb2
  %12 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0, !dbg !8799
  %13 = load i64*, i64** %12, align 8, !dbg !8799, !align !1582
  %14 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1, !dbg !8799
  %15 = load i8*, i8** %14, align 8, !dbg !8799
  %16 = insertvalue { i64*, i8* } undef, i64* %13, 0, !dbg !8799
  %17 = insertvalue { i64*, i8* } %16, i8* %15, 1, !dbg !8799
  ret { i64*, i8* } %17, !dbg !8799
}

; alloc::sync::Weak<T>::inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h9c4dd7cdbacb2b24E"(i64** align 8 %self) unnamed_addr #0 !dbg !8800 {
start:
  %ptr.dbg.spill = alloca %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_5 = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i8* }, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8805, metadata !DIExpression()), !dbg !8808
  %self1 = load i64*, i64** %self, align 8, !dbg !8809, !nonnull !28, !noundef !28
  store i64* %self1, i64** %self.dbg.spill2, align 8, !dbg !8809
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8810, metadata !DIExpression()), !dbg !8814
  %_12 = bitcast i64* %self1 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, !dbg !8814
; call alloc::rc::is_dangling
  %_2 = call zeroext i1 @_ZN5alloc2rc11is_dangling17h58cbd800988c2e0aE(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %_12), !dbg !8815
  br label %bb1, !dbg !8815

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3, !dbg !8815

bb3:                                              ; preds = %bb1
  %self3 = load i64*, i64** %self, align 8, !dbg !8816, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !8816
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !8817, metadata !DIExpression()), !dbg !8821
  %_13 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, !dbg !8821
  store %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %_13, %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %ptr.dbg.spill, align 8, !dbg !8821
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"** %ptr.dbg.spill, metadata !8806, metadata !DIExpression()), !dbg !8822
  %_9 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %_13 to %"core::sync::atomic::AtomicUsize"*, !dbg !8823
  %_11 = getelementptr inbounds %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>", %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %_13, i32 0, i32 1, !dbg !8824
  %1 = bitcast { i64*, i64* }* %_5 to %"core::sync::atomic::AtomicUsize"**, !dbg !8825
  store %"core::sync::atomic::AtomicUsize"* %_11, %"core::sync::atomic::AtomicUsize"** %1, align 8, !dbg !8825
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !8825
  %3 = bitcast i64** %2 to %"core::sync::atomic::AtomicUsize"**, !dbg !8825
  store %"core::sync::atomic::AtomicUsize"* %_9, %"core::sync::atomic::AtomicUsize"** %3, align 8, !dbg !8825
  %4 = bitcast { i64*, i8* }* %0 to { i64*, i64* }*, !dbg !8826
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 0, !dbg !8826
  %6 = load i64*, i64** %5, align 8, !dbg !8826, !nonnull !28, !align !1582, !noundef !28
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_5, i32 0, i32 1, !dbg !8826
  %8 = load i64*, i64** %7, align 8, !dbg !8826, !nonnull !28, !align !1582, !noundef !28
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %4, i32 0, i32 0, !dbg !8826
  store i64* %6, i64** %9, align 8, !dbg !8826
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %4, i32 0, i32 1, !dbg !8826
  store i64* %8, i64** %10, align 8, !dbg !8826
  br label %bb4, !dbg !8827

bb2:                                              ; preds = %bb1
  %11 = bitcast { i64*, i8* }* %0 to {}**, !dbg !8828
  store {}* null, {}** %11, align 8, !dbg !8828
  br label %bb4, !dbg !8827

bb4:                                              ; preds = %bb3, %bb2
  %12 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 0, !dbg !8829
  %13 = load i64*, i64** %12, align 8, !dbg !8829, !align !1582
  %14 = getelementptr inbounds { i64*, i8* }, { i64*, i8* }* %0, i32 0, i32 1, !dbg !8829
  %15 = load i8*, i8** %14, align 8, !dbg !8829
  %16 = insertvalue { i64*, i8* } undef, i64* %13, 0, !dbg !8829
  %17 = insertvalue { i64*, i8* } %16, i8* %15, 1, !dbg !8829
  ret { i64*, i8* } %17, !dbg !8829
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @_ZN5alloc5alloc15exchange_malloc17hcbc5eeb785b10e95E(i64 %size, i64 %align) unnamed_addr #0 !dbg !8830 {
start:
  %ptr.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { i8*, i64 }, align 8
  %self.dbg.spill5 = alloca { i8*, i64 }, align 8
  %self.dbg.spill4 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %0 = alloca i64, align 8
  %align.dbg.spill3 = alloca i64, align 8
  %align.dbg.spill2 = alloca i64, align 8
  %size.dbg.spill1 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %self = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !8835, metadata !DIExpression()), !dbg !8841
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !8836, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !8837, metadata !DIExpression()), !dbg !8843
  call void @llvm.dbg.declare(metadata i8** %self, metadata !8844, metadata !DIExpression()), !dbg !8848
  store i64 %size, i64* %size.dbg.spill1, align 8, !dbg !8857
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill1, metadata !8858, metadata !DIExpression()), !dbg !8863
  store i64 %align, i64* %align.dbg.spill2, align 8, !dbg !8865
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill2, metadata !8862, metadata !DIExpression()), !dbg !8863
  store i64 %align, i64* %align.dbg.spill3, align 8, !dbg !8863
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill3, metadata !8866, metadata !DIExpression()), !dbg !8873
  store i64 %align, i64* %0, align 8, !dbg !8873
  %_16 = load i64, i64* %0, align 8, !dbg !8873, !range !6278, !noundef !28
  br label %bb4, !dbg !8873

bb4:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %layout to i64*, !dbg !8863
  store i64 %size, i64* %1, align 8, !dbg !8863
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !8863
  store i64 %_16, i64* %2, align 8, !dbg !8863
  store %"alloc::alloc::Global"* bitcast (<{}>* @alloc470 to %"alloc::alloc::Global"*), %"alloc::alloc::Global"** %self.dbg.spill, align 8, !dbg !8875
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !8876, metadata !DIExpression()), !dbg !8884
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !8885
  %layout.0 = load i64, i64* %3, align 8, !dbg !8885
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !8885
  %layout.1 = load i64, i64* %4, align 8, !dbg !8885, !range !6278, !noundef !28
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !8885
  store i64 %layout.0, i64* %5, align 8, !dbg !8885
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !8885
  store i64 %layout.1, i64* %6, align 8, !dbg !8885
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !8883, metadata !DIExpression()), !dbg !8884
; call alloc::alloc::Global::alloc_impl
  %7 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3279d76f6ee45f52E(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc470 to %"alloc::alloc::Global"*), i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !8884
  store { i8*, i64 } %7, { i8*, i64 }* %_6, align 8, !dbg !8884
  br label %bb5, !dbg !8884

bb5:                                              ; preds = %bb4
  %8 = bitcast { i8*, i64 }* %_6 to {}**, !dbg !8875
  %9 = load {}*, {}** %8, align 8, !dbg !8875
  %10 = icmp eq {}* %9, null, !dbg !8875
  %_9 = select i1 %10, i64 1, i64 0, !dbg !8875
  switch i64 %_9, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !8886

bb2:                                              ; preds = %bb5
  unreachable, !dbg !8875

bb3:                                              ; preds = %bb5
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !8887
  %ptr.0 = load i8*, i8** %11, align 8, !dbg !8887, !nonnull !28, !noundef !28
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !8887
  %ptr.1 = load i64, i64* %12, align 8, !dbg !8887
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !8887
  store i8* %ptr.0, i8** %13, align 8, !dbg !8887
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !8887
  store i64 %ptr.1, i64* %14, align 8, !dbg !8887
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !8839, metadata !DIExpression()), !dbg !8888
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !8856
  store i8* %ptr.0, i8** %15, align 8, !dbg !8856
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !8856
  store i64 %ptr.1, i64* %16, align 8, !dbg !8856
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill4, metadata !8854, metadata !DIExpression()), !dbg !8889
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !8889
  store i8* %ptr.0, i8** %17, align 8, !dbg !8889
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !8889
  store i64 %ptr.1, i64* %18, align 8, !dbg !8889
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill5, metadata !8890, metadata !DIExpression()), !dbg !8896
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !8896
  store i8* %ptr.0, i8** %19, align 8, !dbg !8896
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !8896
  store i64 %ptr.1, i64* %20, align 8, !dbg !8896
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill6, metadata !8897, metadata !DIExpression()), !dbg !8903
  %_27.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !8903
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !8903
  store [0 x i8]* %_27.0, [0 x i8]** %21, align 8, !dbg !8903
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !8903
  store i64 %ptr.1, i64* %22, align 8, !dbg !8903
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !8905, metadata !DIExpression()), !dbg !8909
  %ptr = bitcast [0 x i8]* %_27.0 to i8*, !dbg !8909
  store i8* %ptr, i8** %ptr.dbg.spill8, align 8, !dbg !8909
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill8, metadata !8910, metadata !DIExpression()), !dbg !8914
  store i8* %ptr, i8** %self, align 8, !dbg !8914
  %_32 = load i8*, i8** %self, align 8, !dbg !8848
  ret i8* %_32, !dbg !8916

bb1:                                              ; preds = %bb5
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !8917
  %_13.0 = load i64, i64* %23, align 8, !dbg !8917
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !8917
  %_13.1 = load i64, i64* %24, align 8, !dbg !8917, !range !6278, !noundef !28
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %_13.0, i64 %_13.1) #17, !dbg !8918
  unreachable, !dbg !8918
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3279d76f6ee45f52E(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !8919 {
start:
  %ptr.dbg.spill38 = alloca { [0 x i8]*, i64 }, align 8
  %data_address.dbg.spill35 = alloca {}*, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %self.dbg.spill31 = alloca i8*, align 8
  %ptr.dbg.spill29 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill25 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %len.dbg.spill23 = alloca i64, align 8
  %data.dbg.spill22 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill20 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %n.dbg.spill18 = alloca i64, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %self.dbg.spill16 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill15 = alloca { i64, i64 }*, align 8
  %self.dbg.spill14 = alloca { i64, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %self.dbg.spill13 = alloca { i64, i64 }*, align 8
  %e.dbg.spill12 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %_94 = alloca { i8*, i64 }, align 8
  %_93 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %_51 = alloca { i8*, i64 }, align 8
  %_50 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self7 = alloca i64, align 8
  %self6 = alloca i64, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout2 = alloca { i64, i64 }, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %raw_ptr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !8923, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !8924, metadata !DIExpression()), !dbg !8950
  %6 = zext i1 %zeroed to i8
  store i8 %6, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !8925, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.declare(metadata i8** %data, metadata !8952, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !8928, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !8962, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout2, metadata !8969, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !8974, metadata !DIExpression()), !dbg !9016
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !9018, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !9024, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !8932, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !9030, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !9043, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !9063, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !9068, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !9079, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !9084, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !9095, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !9013, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill12, metadata !9036, metadata !DIExpression()), !dbg !9101
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill13, align 8, !dbg !9102
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill13, metadata !9103, metadata !DIExpression()), !dbg !9107
  %7 = bitcast { i64, i64 }* %layout to i64*, !dbg !9107
  %_4 = load i64, i64* %7, align 8, !dbg !9107
  %8 = icmp eq i64 %_4, 0, !dbg !9108
  br i1 %8, label %bb2, label %bb1, !dbg !9108

bb2:                                              ; preds = %start
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !9062
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !9060, metadata !DIExpression()), !dbg !9109
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !9109
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !9053, metadata !DIExpression()), !dbg !9110
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !9110
  %10 = load i64, i64* %9, align 8, !dbg !9110, !range !6278, !noundef !28
  store i64 %10, i64* %self7, align 8, !dbg !9110
  %_33 = load i64, i64* %self7, align 8, !dbg !9067, !range !6278, !noundef !28
  store i64 %_33, i64* %n.dbg.spill28, align 8, !dbg !9067
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !9111, metadata !DIExpression()), !dbg !9118
  store i64 %_33, i64* %self6, align 8, !dbg !9118
  %addr = load i64, i64* %self6, align 8, !dbg !9047
  store i64 %addr, i64* %addr.dbg.spill, align 8, !dbg !9047
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !9120, metadata !DIExpression()), !dbg !9126
  %11 = bitcast i8** %2 to i64*, !dbg !9126
  store i64 %addr, i64* %11, align 8, !dbg !9126
  %ptr = load i8*, i8** %2, align 8, !dbg !9126
  store i8* %ptr, i8** %ptr.dbg.spill29, align 8, !dbg !9126
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill29, metadata !9128, metadata !DIExpression()), !dbg !9132
  br label %bb13, !dbg !9126

bb1:                                              ; preds = %start
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !9134
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !8926, metadata !DIExpression()), !dbg !9135
  br i1 %zeroed, label %bb3, label %bb4, !dbg !9136

bb4:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !9137
  %13 = load i64, i64* %12, align 8, !dbg !9137
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !9137
  %15 = load i64, i64* %14, align 8, !dbg !9137, !range !6278, !noundef !28
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 0, !dbg !9137
  store i64 %13, i64* %16, align 8, !dbg !9137
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !9137
  store i64 %15, i64* %17, align 8, !dbg !9137
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill16, align 8, !dbg !8972
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill16, metadata !9138, metadata !DIExpression()), !dbg !9142
  %18 = bitcast { i64, i64 }* %layout2 to i64*, !dbg !9142
  %_67 = load i64, i64* %18, align 8, !dbg !9142
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !8972
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !9092, metadata !DIExpression()), !dbg !9144
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !9144
  %20 = load i64, i64* %19, align 8, !dbg !9144, !range !6278, !noundef !28
  store i64 %20, i64* %self11, align 8, !dbg !9144
  %_74 = load i64, i64* %self11, align 8, !dbg !9099, !range !6278, !noundef !28
  store i64 %_74, i64* %n.dbg.spill18, align 8, !dbg !9099
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill18, metadata !9145, metadata !DIExpression()), !dbg !9152
  store i64 %_74, i64* %self10, align 8, !dbg !9152
  %_69 = load i64, i64* %self10, align 8, !dbg !9088
  %21 = call i8* @__rust_alloc(i64 %_67, i64 %_69) #20, !dbg !8972
  store i8* %21, i8** %raw_ptr, align 8, !dbg !8972
  br label %bb15, !dbg !8972

bb3:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !9154
  %23 = load i64, i64* %22, align 8, !dbg !9154
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !9154
  %25 = load i64, i64* %24, align 8, !dbg !9154, !range !6278, !noundef !28
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !9154
  store i64 %23, i64* %26, align 8, !dbg !9154
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !9154
  store i64 %25, i64* %27, align 8, !dbg !9154
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill14, align 8, !dbg !8967
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill14, metadata !9155, metadata !DIExpression()), !dbg !9159
  %28 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !9159
  %_57 = load i64, i64* %28, align 8, !dbg !9159
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill15, align 8, !dbg !8967
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill15, metadata !9076, metadata !DIExpression()), !dbg !9161
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !9161
  %30 = load i64, i64* %29, align 8, !dbg !9161, !range !6278, !noundef !28
  store i64 %30, i64* %self9, align 8, !dbg !9161
  %_64 = load i64, i64* %self9, align 8, !dbg !9083, !range !6278, !noundef !28
  store i64 %_64, i64* %n.dbg.spill, align 8, !dbg !9083
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !9162, metadata !DIExpression()), !dbg !9169
  store i64 %_64, i64* %self8, align 8, !dbg !9169
  %_59 = load i64, i64* %self8, align 8, !dbg !9072
  %31 = call i8* @__rust_alloc_zeroed(i64 %_57, i64 %_59) #20, !dbg !8967
  store i8* %31, i8** %raw_ptr, align 8, !dbg !8967
  br label %bb14, !dbg !8967

bb14:                                             ; preds = %bb3
  br label %bb5, !dbg !9171

bb5:                                              ; preds = %bb15, %bb14
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !9172
; call core::ptr::non_null::NonNull<T>::new
  %32 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h6ac0428d28465f0cE"(i8* %_18), !dbg !9017
  store i8* %32, i8** %self4, align 8, !dbg !9017
  br label %bb6, !dbg !9017

bb15:                                             ; preds = %bb4
  br label %bb5, !dbg !9171

bb6:                                              ; preds = %bb5
  %33 = bitcast i8** %self4 to {}**, !dbg !9028
  %34 = load {}*, {}** %33, align 8, !dbg !9028
  %35 = icmp eq {}* %34, null, !dbg !9028
  %_77 = select i1 %35, i64 0, i64 1, !dbg !9028
  switch i64 %_77, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !9028

bb17:                                             ; preds = %bb6
  unreachable, !dbg !9028

bb16:                                             ; preds = %bb6
  %36 = bitcast i8** %self3 to {}**, !dbg !9028
  store {}* null, {}** %36, align 8, !dbg !9028
  br label %bb19, !dbg !9028

bb18:                                             ; preds = %bb6
  %v = load i8*, i8** %self4, align 8, !dbg !9028, !nonnull !28, !noundef !28
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !9028
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !9025, metadata !DIExpression()), !dbg !9173
  store i8* %v, i8** %self3, align 8, !dbg !9173
  br label %bb19, !dbg !9028

bb19:                                             ; preds = %bb16, %bb18
  %37 = bitcast i8** %self3 to {}**, !dbg !9016
  %38 = load {}*, {}** %37, align 8, !dbg !9016
  %39 = icmp eq {}* %38, null, !dbg !9016
  %_80 = select i1 %39, i64 1, i64 0, !dbg !9016
  switch i64 %_80, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !9016

bb21:                                             ; preds = %bb19
  unreachable, !dbg !9016

bb22:                                             ; preds = %bb19
  %v19 = load i8*, i8** %self3, align 8, !dbg !9016, !nonnull !28, !noundef !28
  store i8* %v19, i8** %v.dbg.spill20, align 8, !dbg !9016
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill20, metadata !9010, metadata !DIExpression()), !dbg !9174
  store i8* %v19, i8** %_15, align 8, !dbg !9174
  br label %bb7, !dbg !9016

bb20:                                             ; preds = %bb19
  %40 = bitcast i8** %_15 to {}**, !dbg !9100
  store {}* null, {}** %40, align 8, !dbg !9100
  br label %bb7, !dbg !9016

bb7:                                              ; preds = %bb22, %bb20
  %41 = bitcast i8** %_15 to {}**, !dbg !9017
  %42 = load {}*, {}** %41, align 8, !dbg !9017
  %43 = icmp eq {}* %42, null, !dbg !9017
  %_20 = select i1 %43, i64 1, i64 0, !dbg !9017
  switch i64 %_20, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !9017

bb9:                                              ; preds = %bb7
  unreachable, !dbg !9017

bb8:                                              ; preds = %bb7
  %val = load i8*, i8** %_15, align 8, !dbg !9017, !nonnull !28, !noundef !28
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !9017
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !8947, metadata !DIExpression()), !dbg !9175
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !9175
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !8930, metadata !DIExpression()), !dbg !9176
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !9177
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !9178, metadata !DIExpression()), !dbg !9183
  store i64 %_4, i64* %len.dbg.spill, align 8, !dbg !9185
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !9182, metadata !DIExpression()), !dbg !9183
  store i8* %val, i8** %self.dbg.spill21, align 8, !dbg !9183
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !9186, metadata !DIExpression()), !dbg !9190
  store i8* %val, i8** %data.dbg.spill22, align 8, !dbg !9190
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill22, metadata !9192, metadata !DIExpression()), !dbg !9197
  store i64 %_4, i64* %len.dbg.spill23, align 8, !dbg !9183
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill23, metadata !9196, metadata !DIExpression()), !dbg !9197
  store i8* %val, i8** %self.dbg.spill24, align 8, !dbg !9197
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !9199, metadata !DIExpression()), !dbg !9203
  %data_address = bitcast i8* %val to {}*, !dbg !9203
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !9203
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !9205, metadata !DIExpression()), !dbg !9210
  store i64 %_4, i64* %metadata.dbg.spill, align 8, !dbg !9197
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !9209, metadata !DIExpression()), !dbg !9210
  %44 = bitcast { i8*, i64 }* %_94 to {}**, !dbg !9210
  store {}* %data_address, {}** %44, align 8, !dbg !9210
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !9210
  store i64 %_4, i64* %45, align 8, !dbg !9210
  %46 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { i8*, i64 }*, !dbg !9210
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 0, !dbg !9210
  %48 = load i8*, i8** %47, align 8, !dbg !9210
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !9210
  %50 = load i64, i64* %49, align 8, !dbg !9210
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0, !dbg !9210
  store i8* %48, i8** %51, align 8, !dbg !9210
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1, !dbg !9210
  store i64 %50, i64* %52, align 8, !dbg !9210
  %53 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { [0 x i8]*, i64 }*, !dbg !9210
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0, !dbg !9210
  %ptr.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !dbg !9210
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1, !dbg !9210
  %ptr.1 = load i64, i64* %55, align 8, !dbg !9210
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 0, !dbg !9210
  store [0 x i8]* %ptr.0, [0 x i8]** %56, align 8, !dbg !9210
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 1, !dbg !9210
  store i64 %ptr.1, i64* %57, align 8, !dbg !9210
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill25, metadata !9212, metadata !DIExpression()), !dbg !9218
  %58 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !9218
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0, !dbg !9218
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !9218
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1, !dbg !9218
  store i64 %ptr.1, i64* %60, align 8, !dbg !9218
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !9220
  %62 = load i8*, i8** %61, align 8, !dbg !9220, !nonnull !28, !noundef !28
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !9220
  %64 = load i64, i64* %63, align 8, !dbg !9220
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !9220
  store i8* %62, i8** %65, align 8, !dbg !9220
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !9220
  store i64 %64, i64* %66, align 8, !dbg !9220
  br label %bb11, !dbg !9221

bb10:                                             ; preds = %bb7
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h83b52891866b685fE"(), !dbg !9101
  br label %bb23, !dbg !9101

bb23:                                             ; preds = %bb10
  %67 = bitcast { i8*, i64 }* %3 to {}**, !dbg !9101
  store {}* null, {}** %67, align 8, !dbg !9101
  br label %bb12, !dbg !9222

bb12:                                             ; preds = %bb11, %bb23
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !9222
  %69 = load i8*, i8** %68, align 8, !dbg !9222
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !9222
  %71 = load i64, i64* %70, align 8, !dbg !9222
  %72 = insertvalue { i8*, i64 } undef, i8* %69, 0, !dbg !9222
  %73 = insertvalue { i8*, i64 } %72, i64 %71, 1, !dbg !9222
  ret { i8*, i64 } %73, !dbg !9222

bb11:                                             ; preds = %bb13, %bb8
  br label %bb12, !dbg !9222

bb13:                                             ; preds = %bb2
  store i8* %ptr, i8** %data, align 8, !dbg !9132
  %self30 = load i8*, i8** %data, align 8, !dbg !8959, !nonnull !28, !noundef !28
  store i8* %self30, i8** %self.dbg.spill31, align 8, !dbg !8959
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill31, metadata !9223, metadata !DIExpression()), !dbg !9227
  store i8* %self30, i8** %data.dbg.spill32, align 8, !dbg !9227
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !9229, metadata !DIExpression()), !dbg !9234
  store i8* %self30, i8** %self.dbg.spill33, align 8, !dbg !9234
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !9236, metadata !DIExpression()), !dbg !9240
  %data_address34 = bitcast i8* %self30 to {}*, !dbg !9240
  store {}* %data_address34, {}** %data_address.dbg.spill35, align 8, !dbg !9240
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill35, metadata !9242, metadata !DIExpression()), !dbg !9247
  %74 = bitcast { i8*, i64 }* %_51 to {}**, !dbg !9247
  store {}* %data_address34, {}** %74, align 8, !dbg !9247
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !9247
  store i64 0, i64* %75, align 8, !dbg !9247
  %76 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { i8*, i64 }*, !dbg !9247
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 0, !dbg !9247
  %78 = load i8*, i8** %77, align 8, !dbg !9247
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !9247
  %80 = load i64, i64* %79, align 8, !dbg !9247
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 0, !dbg !9247
  store i8* %78, i8** %81, align 8, !dbg !9247
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 1, !dbg !9247
  store i64 %80, i64* %82, align 8, !dbg !9247
  %83 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { [0 x i8]*, i64 }*, !dbg !9247
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 0, !dbg !9247
  %ptr.036 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !9247
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 1, !dbg !9247
  %ptr.137 = load i64, i64* %85, align 8, !dbg !9247
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 0, !dbg !9247
  store [0 x i8]* %ptr.036, [0 x i8]** %86, align 8, !dbg !9247
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 1, !dbg !9247
  store i64 %ptr.137, i64* %87, align 8, !dbg !9247
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill38, metadata !9249, metadata !DIExpression()), !dbg !9253
  %88 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !9253
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0, !dbg !9253
  store [0 x i8]* %ptr.036, [0 x i8]** %89, align 8, !dbg !9253
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1, !dbg !9253
  store i64 %ptr.137, i64* %90, align 8, !dbg !9253
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !9255
  %92 = load i8*, i8** %91, align 8, !dbg !9255, !nonnull !28, !noundef !28
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !9255
  %94 = load i64, i64* %93, align 8, !dbg !9255
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !9255
  store i8* %92, i8** %95, align 8, !dbg !9255
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !9255
  store i64 %94, i64* %96, align 8, !dbg !9255
  br label %bb11, !dbg !9256
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h3923d4caf9789d9bE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !9257 {
start:
  %count.dbg.spill54 = alloca i64, align 8
  %dst.dbg.spill53 = alloca i8*, align 8
  %ptr.dbg.spill52 = alloca i8*, align 8
  %self.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill49 = alloca { i8*, i64 }, align 8
  %self.dbg.spill48 = alloca { i8*, i64 }, align 8
  %self.dbg.spill47 = alloca { i8*, i64 }, align 8
  %src.dbg.spill = alloca i8*, align 8
  %self.dbg.spill46 = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill45 = alloca { i8*, i64 }, align 8
  %v.dbg.spill44 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill43 = alloca i64, align 8
  %ptr.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill41 = alloca i8*, align 8
  %len.dbg.spill40 = alloca i64, align 8
  %data.dbg.spill39 = alloca i8*, align 8
  %self.dbg.spill38 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %count.dbg.spill37 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %count.dbg.spill36 = alloca i64, align 8
  %self.dbg.spill35 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill34 = alloca i64, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill32 = alloca i8*, align 8
  %ptr.dbg.spill31 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill30 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill25 = alloca i64, align 8
  %ptr.dbg.spill24 = alloca i8*, align 8
  %self.dbg.spill23 = alloca i8*, align 8
  %self.dbg.spill22 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %old_size.dbg.spill = alloca i64, align 8
  %n.dbg.spill20 = alloca i64, align 8
  %self.dbg.spill19 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill18 = alloca { i64, i64 }*, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %e.dbg.spill15 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill14 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill13 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %self16 = alloca i8*, align 8
  %_135 = alloca { i8*, i64 }, align 8
  %_134 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self12 = alloca i64, align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %self7 = alloca i64, align 8
  %self4 = alloca { i8*, i64 }, align 8
  %_55 = alloca { i8*, i64 }, align 8
  %_50 = alloca { i8*, i64 }, align 8
  %self2 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_33 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !9261, metadata !DIExpression()), !dbg !9287
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !9262, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !9263, metadata !DIExpression()), !dbg !9289
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !9264, metadata !DIExpression()), !dbg !9290
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !9265, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !9292, metadata !DIExpression()), !dbg !9299
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !9301, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !9313, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !9317, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !9275, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill3, metadata !9323, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self4, metadata !9332, metadata !DIExpression()), !dbg !9359
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !9283, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill6, metadata !9362, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !9371, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !9382, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !9387, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !9398, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !9403, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.declare(metadata i64* %self12, metadata !9414, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !9308, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill13, metadata !9327, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill14, metadata !9356, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill15, metadata !9366, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.declare(metadata i8** %self16, metadata !9423, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !9434, metadata !DIExpression()), !dbg !9454
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !9456
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !9457, metadata !DIExpression()), !dbg !9461
  %11 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !9461
  %_8 = load i64, i64* %11, align 8, !dbg !9461
  %12 = icmp eq i64 %_8, 0, !dbg !9462
  br i1 %12, label %bb1, label %bb3, !dbg !9462

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !9463
  %_11.0 = load i64, i64* %13, align 8, !dbg !9463
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !9463
  %_11.1 = load i64, i64* %14, align 8, !dbg !9463, !range !6278, !noundef !28
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3279d76f6ee45f52E(%"alloc::alloc::Global"* align 1 %self, i64 %_11.0, i64 %_11.1, i1 zeroext %zeroed), !dbg !9464
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8, !dbg !9464
  br label %bb2, !dbg !9464

bb3:                                              ; preds = %start
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill18, align 8, !dbg !9381
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill18, metadata !9379, metadata !DIExpression()), !dbg !9465
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !9465
  %17 = load i64, i64* %16, align 8, !dbg !9465, !range !6278, !noundef !28
  store i64 %17, i64* %self8, align 8, !dbg !9465
  %_78 = load i64, i64* %self8, align 8, !dbg !9386, !range !6278, !noundef !28
  store i64 %_78, i64* %n.dbg.spill, align 8, !dbg !9386
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !9466, metadata !DIExpression()), !dbg !9473
  store i64 %_78, i64* %self7, align 8, !dbg !9473
  %_16 = load i64, i64* %self7, align 8, !dbg !9375
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill19, align 8, !dbg !9397
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill19, metadata !9395, metadata !DIExpression()), !dbg !9475
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !9475
  %19 = load i64, i64* %18, align 8, !dbg !9475, !range !6278, !noundef !28
  store i64 %19, i64* %self10, align 8, !dbg !9475
  %_84 = load i64, i64* %self10, align 8, !dbg !9402, !range !6278, !noundef !28
  store i64 %_84, i64* %n.dbg.spill20, align 8, !dbg !9402
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill20, metadata !9476, metadata !DIExpression()), !dbg !9483
  store i64 %_84, i64* %self9, align 8, !dbg !9483
  %_18 = load i64, i64* %self9, align 8, !dbg !9391
  %_15 = icmp eq i64 %_16, %_18, !dbg !9381
  br i1 %_15, label %bb4, label %bb5, !dbg !9381

bb5:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill43, align 8, !dbg !9485
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill43, metadata !9279, metadata !DIExpression()), !dbg !9486
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !9487
  %_58.0 = load i64, i64* %20, align 8, !dbg !9487
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !9487
  %_58.1 = load i64, i64* %21, align 8, !dbg !9487, !range !6278, !noundef !28
; call alloc::alloc::Global::alloc_impl
  %22 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3279d76f6ee45f52E(%"alloc::alloc::Global"* align 1 %self, i64 %_58.0, i64 %_58.1, i1 zeroext %zeroed), !dbg !9360
  store { i8*, i64 } %22, { i8*, i64 }* %self4, align 8, !dbg !9360
  br label %bb14, !dbg !9360

bb4:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill, align 8, !dbg !9488
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !9266, metadata !DIExpression()), !dbg !9489
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !9490
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !9491, metadata !DIExpression()), !dbg !9495
  %23 = bitcast { i64, i64 }* %new_layout to i64*, !dbg !9495
  %new_size = load i64, i64* %23, align 8, !dbg !9495
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !9495
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !9269, metadata !DIExpression()), !dbg !9496
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill22, align 8, !dbg !9497
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill22, metadata !9498, metadata !DIExpression()), !dbg !9502
  %24 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !9502
  %_25 = load i64, i64* %24, align 8, !dbg !9502
  %_23 = icmp uge i64 %new_size, %_25, !dbg !9503
  call void @llvm.assume(i1 %_23), !dbg !9504
  br label %bb6, !dbg !9504

bb6:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill23, align 8, !dbg !9505
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !9506, metadata !DIExpression()), !dbg !9510
  store i8* %ptr, i8** %ptr.dbg.spill24, align 8, !dbg !9510
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill24, metadata !9297, metadata !DIExpression()), !dbg !9299
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !9511
  %26 = load i64, i64* %25, align 8, !dbg !9511
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !9511
  %28 = load i64, i64* %27, align 8, !dbg !9511, !range !6278, !noundef !28
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !9511
  store i64 %26, i64* %29, align 8, !dbg !9511
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !9511
  store i64 %28, i64* %30, align 8, !dbg !9511
  store i64 %new_size, i64* %new_size.dbg.spill25, align 8, !dbg !9512
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill25, metadata !9298, metadata !DIExpression()), !dbg !9299
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !9299
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !9513, metadata !DIExpression()), !dbg !9517
  %31 = bitcast { i64, i64 }* %layout to i64*, !dbg !9517
  %_89 = load i64, i64* %31, align 8, !dbg !9517
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !9299
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !9411, metadata !DIExpression()), !dbg !9519
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !9519
  %33 = load i64, i64* %32, align 8, !dbg !9519, !range !6278, !noundef !28
  store i64 %33, i64* %self12, align 8, !dbg !9519
  %_97 = load i64, i64* %self12, align 8, !dbg !9418, !range !6278, !noundef !28
  store i64 %_97, i64* %n.dbg.spill28, align 8, !dbg !9418
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !9520, metadata !DIExpression()), !dbg !9527
  store i64 %_97, i64* %self11, align 8, !dbg !9527
  %_91 = load i64, i64* %self11, align 8, !dbg !9407
  %raw_ptr = call i8* @__rust_realloc(i8* %ptr, i64 %_89, i64 %_91, i64 %new_size) #20, !dbg !9299
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !9299
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !9271, metadata !DIExpression()), !dbg !9529
  br label %bb23, !dbg !9299

bb23:                                             ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::new
  %34 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h6ac0428d28465f0cE"(i8* %raw_ptr), !dbg !9312
  store i8* %34, i8** %self2, align 8, !dbg !9312
  br label %bb7, !dbg !9312

bb7:                                              ; preds = %bb23
  %35 = bitcast i8** %self2 to {}**, !dbg !9321
  %36 = load {}*, {}** %35, align 8, !dbg !9321
  %37 = icmp eq {}* %36, null, !dbg !9321
  %_100 = select i1 %37, i64 0, i64 1, !dbg !9321
  switch i64 %_100, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ], !dbg !9321

bb25:                                             ; preds = %bb7
  unreachable, !dbg !9321

bb24:                                             ; preds = %bb7
  %38 = bitcast i8** %self1 to {}**, !dbg !9321
  store {}* null, {}** %38, align 8, !dbg !9321
  br label %bb27, !dbg !9321

bb26:                                             ; preds = %bb7
  %v = load i8*, i8** %self2, align 8, !dbg !9321, !nonnull !28, !noundef !28
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !9321
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !9318, metadata !DIExpression()), !dbg !9530
  store i8* %v, i8** %self1, align 8, !dbg !9530
  br label %bb27, !dbg !9321

bb27:                                             ; preds = %bb24, %bb26
  %39 = bitcast i8** %self1 to {}**, !dbg !9311
  %40 = load {}*, {}** %39, align 8, !dbg !9311
  %41 = icmp eq {}* %40, null, !dbg !9311
  %_103 = select i1 %41, i64 1, i64 0, !dbg !9311
  switch i64 %_103, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !9311

bb29:                                             ; preds = %bb27
  unreachable, !dbg !9311

bb30:                                             ; preds = %bb27
  %v29 = load i8*, i8** %self1, align 8, !dbg !9311, !nonnull !28, !noundef !28
  store i8* %v29, i8** %v.dbg.spill30, align 8, !dbg !9311
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill30, metadata !9305, metadata !DIExpression()), !dbg !9531
  store i8* %v29, i8** %_33, align 8, !dbg !9531
  br label %bb8, !dbg !9311

bb28:                                             ; preds = %bb27
  %42 = bitcast i8** %_33 to {}**, !dbg !9419
  store {}* null, {}** %42, align 8, !dbg !9419
  br label %bb8, !dbg !9311

bb8:                                              ; preds = %bb30, %bb28
  %43 = bitcast i8** %_33 to {}**, !dbg !9312
  %44 = load {}*, {}** %43, align 8, !dbg !9312
  %45 = icmp eq {}* %44, null, !dbg !9312
  %_38 = select i1 %45, i64 1, i64 0, !dbg !9312
  switch i64 %_38, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !9312

bb10:                                             ; preds = %bb8
  unreachable, !dbg !9312

bb9:                                              ; preds = %bb8
  %val = load i8*, i8** %_33, align 8, !dbg !9312, !nonnull !28, !noundef !28
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !9312
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !9277, metadata !DIExpression()), !dbg !9532
  store i8* %val, i8** %ptr.dbg.spill31, align 8, !dbg !9532
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill31, metadata !9273, metadata !DIExpression()), !dbg !9533
  br i1 %zeroed, label %bb12, label %bb13, !dbg !9534

bb11:                                             ; preds = %bb8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h83b52891866b685fE"(), !dbg !9420
  br label %bb31, !dbg !9420

bb31:                                             ; preds = %bb11
  %46 = bitcast { i8*, i64 }* %5 to {}**, !dbg !9420
  store {}* null, {}** %46, align 8, !dbg !9420
  br label %bb21, !dbg !9535

bb21:                                             ; preds = %bb37, %bb31
  br label %bb22, !dbg !9537

bb13:                                             ; preds = %bb33, %bb9
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !9538
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !9539, metadata !DIExpression()), !dbg !9544
  store i64 %new_size, i64* %len.dbg.spill, align 8, !dbg !9546
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !9543, metadata !DIExpression()), !dbg !9544
  store i8* %val, i8** %self.dbg.spill38, align 8, !dbg !9544
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill38, metadata !9547, metadata !DIExpression()), !dbg !9551
  store i8* %val, i8** %data.dbg.spill39, align 8, !dbg !9551
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill39, metadata !9553, metadata !DIExpression()), !dbg !9558
  store i64 %new_size, i64* %len.dbg.spill40, align 8, !dbg !9544
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill40, metadata !9557, metadata !DIExpression()), !dbg !9558
  store i8* %val, i8** %self.dbg.spill41, align 8, !dbg !9558
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill41, metadata !9560, metadata !DIExpression()), !dbg !9564
  %data_address = bitcast i8* %val to {}*, !dbg !9564
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !9564
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !9566, metadata !DIExpression()), !dbg !9571
  store i64 %new_size, i64* %metadata.dbg.spill, align 8, !dbg !9558
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !9570, metadata !DIExpression()), !dbg !9571
  %47 = bitcast { i8*, i64 }* %_135 to {}**, !dbg !9571
  store {}* %data_address, {}** %47, align 8, !dbg !9571
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !9571
  store i64 %new_size, i64* %48, align 8, !dbg !9571
  %49 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { i8*, i64 }*, !dbg !9571
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 0, !dbg !9571
  %51 = load i8*, i8** %50, align 8, !dbg !9571
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !9571
  %53 = load i64, i64* %52, align 8, !dbg !9571
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 0, !dbg !9571
  store i8* %51, i8** %54, align 8, !dbg !9571
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 1, !dbg !9571
  store i64 %53, i64* %55, align 8, !dbg !9571
  %56 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { [0 x i8]*, i64 }*, !dbg !9571
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0, !dbg !9571
  %ptr.0 = load [0 x i8]*, [0 x i8]** %57, align 8, !dbg !9571
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1, !dbg !9571
  %ptr.1 = load i64, i64* %58, align 8, !dbg !9571
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 0, !dbg !9571
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !9571
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 1, !dbg !9571
  store i64 %ptr.1, i64* %60, align 8, !dbg !9571
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill42, metadata !9573, metadata !DIExpression()), !dbg !9577
  %61 = bitcast { i8*, i64 }* %_50 to { [0 x i8]*, i64 }*, !dbg !9577
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0, !dbg !9577
  store [0 x i8]* %ptr.0, [0 x i8]** %62, align 8, !dbg !9577
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1, !dbg !9577
  store i64 %ptr.1, i64* %63, align 8, !dbg !9577
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 0, !dbg !9579
  %65 = load i8*, i8** %64, align 8, !dbg !9579, !nonnull !28, !noundef !28
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 1, !dbg !9579
  %67 = load i64, i64* %66, align 8, !dbg !9579
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !9579
  store i8* %65, i8** %68, align 8, !dbg !9579
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !9579
  store i64 %67, i64* %69, align 8, !dbg !9579
  br label %bb20, !dbg !9580

bb12:                                             ; preds = %bb9
  store i8* %raw_ptr, i8** %self.dbg.spill32, align 8, !dbg !9581
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill32, metadata !9582, metadata !DIExpression()), !dbg !9587
  store i64 %_8, i64* %count.dbg.spill, align 8, !dbg !9588
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !9586, metadata !DIExpression()), !dbg !9587
  store i8* %raw_ptr, i8** %self.dbg.spill33, align 8, !dbg !9587
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !9589, metadata !DIExpression()), !dbg !9594
  store i64 %_8, i64* %count.dbg.spill34, align 8, !dbg !9587
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill34, metadata !9593, metadata !DIExpression()), !dbg !9594
  %70 = getelementptr inbounds i8, i8* %raw_ptr, i64 %_8, !dbg !9594
  store i8* %70, i8** %4, align 8, !dbg !9594
  %_113 = load i8*, i8** %4, align 8, !dbg !9594
  br label %bb32, !dbg !9594

bb32:                                             ; preds = %bb12
  store i8* %_113, i8** %self.dbg.spill35, align 8, !dbg !9594
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill35, metadata !9596, metadata !DIExpression()), !dbg !9604
  %count = sub i64 %new_size, %_8, !dbg !9605
  store i64 %count, i64* %count.dbg.spill36, align 8, !dbg !9605
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill36, metadata !9603, metadata !DIExpression()), !dbg !9604
  store i8* %_113, i8** %dst.dbg.spill, align 8, !dbg !9604
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !9606, metadata !DIExpression()), !dbg !9619
  store i64 %count, i64* %count.dbg.spill37, align 8, !dbg !9604
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill37, metadata !9611, metadata !DIExpression()), !dbg !9619
  %71 = mul i64 1, %count, !dbg !9619
  call void @llvm.memset.p0i8.i64(i8* align 1 %_113, i8 0, i64 %71, i1 false), !dbg !9619
  br label %bb33, !dbg !9619

bb33:                                             ; preds = %bb32
  br label %bb13, !dbg !9621

bb20:                                             ; preds = %bb2, %bb19, %bb13
  br label %bb22, !dbg !9537

bb14:                                             ; preds = %bb5
  %72 = bitcast { i8*, i64 }* %self4 to {}**, !dbg !9359
  %73 = load {}*, {}** %72, align 8, !dbg !9359
  %74 = icmp eq {}* %73, null, !dbg !9359
  %_142 = select i1 %74, i64 1, i64 0, !dbg !9359
  switch i64 %_142, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !9359

bb35:                                             ; preds = %bb14
  unreachable, !dbg !9359

bb36:                                             ; preds = %bb14
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 0, !dbg !9359
  %v.0 = load i8*, i8** %75, align 8, !dbg !9359, !nonnull !28, !noundef !28
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 1, !dbg !9359
  %v.1 = load i64, i64* %76, align 8, !dbg !9359
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 0, !dbg !9359
  store i8* %v.0, i8** %77, align 8, !dbg !9359
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 1, !dbg !9359
  store i64 %v.1, i64* %78, align 8, !dbg !9359
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill44, metadata !9353, metadata !DIExpression()), !dbg !9622
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !9622
  store i8* %v.0, i8** %79, align 8, !dbg !9622
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !9622
  store i64 %v.1, i64* %80, align 8, !dbg !9622
  br label %bb15, !dbg !9359

bb34:                                             ; preds = %bb14
  %81 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !9421
  store {}* null, {}** %81, align 8, !dbg !9421
  br label %bb15, !dbg !9359

bb15:                                             ; preds = %bb36, %bb34
  %82 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !9360
  %83 = load {}*, {}** %82, align 8, !dbg !9360
  %84 = icmp eq {}* %83, null, !dbg !9360
  %_60 = select i1 %84, i64 1, i64 0, !dbg !9360
  switch i64 %_60, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !9360

bb17:                                             ; preds = %bb15
  unreachable, !dbg !9360

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !9360
  %val.0 = load i8*, i8** %85, align 8, !dbg !9360, !nonnull !28, !noundef !28
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !9360
  %val.1 = load i64, i64* %86, align 8, !dbg !9360
  %87 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 0, !dbg !9360
  store i8* %val.0, i8** %87, align 8, !dbg !9360
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 1, !dbg !9360
  store i64 %val.1, i64* %88, align 8, !dbg !9360
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill45, metadata !9285, metadata !DIExpression()), !dbg !9623
  %89 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !9623
  store i8* %val.0, i8** %89, align 8, !dbg !9623
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !9623
  store i64 %val.1, i64* %90, align 8, !dbg !9623
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !9281, metadata !DIExpression()), !dbg !9624
  store i8* %ptr, i8** %self.dbg.spill46, align 8, !dbg !9625
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill46, metadata !9626, metadata !DIExpression()), !dbg !9630
  store i8* %ptr, i8** %src.dbg.spill, align 8, !dbg !9625
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !9442, metadata !DIExpression()), !dbg !9631
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 0, !dbg !9433
  store i8* %val.0, i8** %91, align 8, !dbg !9433
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 1, !dbg !9433
  store i64 %val.1, i64* %92, align 8, !dbg !9433
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill47, metadata !9431, metadata !DIExpression()), !dbg !9632
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 0, !dbg !9632
  store i8* %val.0, i8** %93, align 8, !dbg !9632
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 1, !dbg !9632
  store i64 %val.1, i64* %94, align 8, !dbg !9632
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill48, metadata !9633, metadata !DIExpression()), !dbg !9637
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 0, !dbg !9637
  store i8* %val.0, i8** %95, align 8, !dbg !9637
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 1, !dbg !9637
  store i64 %val.1, i64* %96, align 8, !dbg !9637
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill49, metadata !9638, metadata !DIExpression()), !dbg !9642
  %_155.0 = bitcast i8* %val.0 to [0 x i8]*, !dbg !9642
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 0, !dbg !9642
  store [0 x i8]* %_155.0, [0 x i8]** %97, align 8, !dbg !9642
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 1, !dbg !9642
  store i64 %val.1, i64* %98, align 8, !dbg !9642
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill50, metadata !9644, metadata !DIExpression()), !dbg !9648
  %ptr51 = bitcast [0 x i8]* %_155.0 to i8*, !dbg !9648
  store i8* %ptr51, i8** %ptr.dbg.spill52, align 8, !dbg !9648
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill52, metadata !9649, metadata !DIExpression()), !dbg !9653
  store i8* %ptr51, i8** %self16, align 8, !dbg !9653
  %_160 = load i8*, i8** %self16, align 8, !dbg !9427
  store i8* %_160, i8** %dst.dbg.spill53, align 8, !dbg !9427
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill53, metadata !9444, metadata !DIExpression()), !dbg !9631
  store i64 %_8, i64* %count.dbg.spill54, align 8, !dbg !9655
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill54, metadata !9445, metadata !DIExpression()), !dbg !9631
  %99 = mul i64 %_8, 1, !dbg !9631
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_160, i8* align 1 %ptr, i64 %99, i1 false), !dbg !9631
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !9656
  %_73.0 = load i64, i64* %100, align 8, !dbg !9656
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !9656
  %_73.1 = load i64, i64* %101, align 8, !dbg !9656, !range !6278, !noundef !28
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %_73.0, i64 %_73.1), !dbg !9657
  br label %bb19, !dbg !9657

bb18:                                             ; preds = %bb15
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h83b52891866b685fE"(), !dbg !9422
  br label %bb37, !dbg !9422

bb37:                                             ; preds = %bb18
  %102 = bitcast { i8*, i64 }* %5 to {}**, !dbg !9422
  store {}* null, {}** %102, align 8, !dbg !9422
  br label %bb21, !dbg !9535

bb22:                                             ; preds = %bb20, %bb21
  %103 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !9537
  %104 = load i8*, i8** %103, align 8, !dbg !9537
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !9537
  %106 = load i64, i64* %105, align 8, !dbg !9537
  %107 = insertvalue { i8*, i64 } undef, i8* %104, 0, !dbg !9537
  %108 = insertvalue { i8*, i64 } %107, i64 %106, 1, !dbg !9537
  ret { i8*, i64 } %108, !dbg !9537

bb19:                                             ; preds = %bb16
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !9658
  store i8* %val.0, i8** %109, align 8, !dbg !9658
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !9658
  store i64 %val.1, i64* %110, align 8, !dbg !9658
  br label %bb20, !dbg !9659

bb2:                                              ; preds = %bb1
  br label %bb20, !dbg !9660
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h8cf202bc5c4056e9E(i8* %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9661 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64 }, align 8
  %self.dbg.spill14 = alloca { i8*, i64 }, align 8
  %self.dbg.spill13 = alloca { i8*, i64 }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64 }, align 8
  %self.dbg.spill4 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64 }, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr, metadata !9670, metadata !DIExpression()), !dbg !9678
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !9671, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !9676, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !9681, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !9687, metadata !DIExpression()), !dbg !9694
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill, align 8, !dbg !9704
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !9705, metadata !DIExpression()), !dbg !9712
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !9712
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !9713, metadata !DIExpression()), !dbg !9720
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !9720
  %self.0 = load i8*, i8** %8, align 8, !dbg !9720, !nonnull !28, !noundef !28
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !9720
  %self.1 = load i64, i64* %9, align 8, !dbg !9720
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !9720
  store i8* %self.0, i8** %10, align 8, !dbg !9720
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !9720
  store i64 %self.1, i64* %11, align 8, !dbg !9720
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !9722, metadata !DIExpression()), !dbg !9726
  %_22.0 = bitcast i8* %self.0 to [0 x i8]*, !dbg !9726
  %12 = mul nsw i64 %self.1, 1, !dbg !9728
  store i64 %12, i64* %5, align 8, !dbg !9728
  %size = load i64, i64* %5, align 8, !dbg !9728
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !9728
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !9672, metadata !DIExpression()), !dbg !9729
  br label %bb1, !dbg !9728

bb1:                                              ; preds = %start
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill3, align 8, !dbg !9730
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill3, metadata !9731, metadata !DIExpression()), !dbg !9735
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill4, align 8, !dbg !9735
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill4, metadata !9736, metadata !DIExpression()), !dbg !9740
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !9740
  %self.05 = load i8*, i8** %13, align 8, !dbg !9740, !nonnull !28, !noundef !28
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !9740
  %self.16 = load i64, i64* %14, align 8, !dbg !9740
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !9740
  store i8* %self.05, i8** %15, align 8, !dbg !9740
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !9740
  store i64 %self.16, i64* %16, align 8, !dbg !9740
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill7, metadata !9742, metadata !DIExpression()), !dbg !9746
  %_26.0 = bitcast i8* %self.05 to [0 x i8]*, !dbg !9746
  %17 = mul nsw i64 %self.16, 1, !dbg !9748
  store i64 1, i64* %4, align 8, !dbg !9748
  %align = load i64, i64* %4, align 8, !dbg !9748
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !9748
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !9674, metadata !DIExpression()), !dbg !9749
  br label %bb2, !dbg !9748

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !9750
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !9751, metadata !DIExpression()), !dbg !9756
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !9758
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !9755, metadata !DIExpression()), !dbg !9756
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !9756
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !9759, metadata !DIExpression()), !dbg !9766
  store i64 %align, i64* %3, align 8, !dbg !9766
  %_28 = load i64, i64* %3, align 8, !dbg !9766, !range !6278, !noundef !28
  br label %bb7, !dbg !9766

bb7:                                              ; preds = %bb2
  %18 = bitcast { i64, i64 }* %layout to i64*, !dbg !9756
  store i64 %size, i64* %18, align 8, !dbg !9756
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !9756
  store i64 %_28, i64* %19, align 8, !dbg !9756
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !9703
  %self.011 = load i8*, i8** %20, align 8, !dbg !9703, !nonnull !28, !noundef !28
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !9703
  %self.112 = load i64, i64* %21, align 8, !dbg !9703
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !9703
  store i8* %self.011, i8** %22, align 8, !dbg !9703
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !9703
  store i64 %self.112, i64* %23, align 8, !dbg !9703
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill13, metadata !9700, metadata !DIExpression()), !dbg !9768
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !9768
  store i8* %self.011, i8** %24, align 8, !dbg !9768
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !9768
  store i64 %self.112, i64* %25, align 8, !dbg !9768
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill14, metadata !9769, metadata !DIExpression()), !dbg !9773
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 0, !dbg !9773
  store i8* %self.011, i8** %26, align 8, !dbg !9773
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 1, !dbg !9773
  store i64 %self.112, i64* %27, align 8, !dbg !9773
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill15, metadata !9775, metadata !DIExpression()), !dbg !9779
  %_37.0 = bitcast i8* %self.011 to [0 x i8]*, !dbg !9779
  %ptr16 = bitcast [0 x i8]* %_37.0 to i8*, !dbg !9773
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !9773
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !9781, metadata !DIExpression()), !dbg !9785
  store i8* %ptr16, i8** %pointer, align 8, !dbg !9785
  %_41 = load i8*, i8** %pointer, align 8, !dbg !9694, !nonnull !28, !noundef !28
  store i8* %_41, i8** %unique, align 8, !dbg !9694
  %self = load i8*, i8** %unique, align 8, !dbg !9685, !nonnull !28, !noundef !28
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !9685
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !9787, metadata !DIExpression()), !dbg !9791
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !9791
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !9793, metadata !DIExpression()), !dbg !9797
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !9797
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !9799, metadata !DIExpression()), !dbg !9803
  store i8* %self, i8** %_15, align 8, !dbg !9803
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !9805
  %_18.0 = load i64, i64* %28, align 8, !dbg !9805
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !9805
  %_18.1 = load i64, i64* %29, align 8, !dbg !9805, !range !6278, !noundef !28
  %30 = load i8*, i8** %_15, align 8, !dbg !9806, !nonnull !28, !noundef !28
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %30, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !9806

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !9807

cleanup:                                          ; preds = %bb7
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !9807

bb6:                                              ; preds = %bb5
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !9808
  %37 = load i8*, i8** %36, align 8, !dbg !9808
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !9808
  %39 = load i32, i32* %38, align 8, !dbg !9808
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !9808
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !9808
  resume { i8*, i32 } %41, !dbg !9808

bb4:                                              ; preds = %bb3
  ret void, !dbg !9809
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h9d07eb48ae969750E(i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9810 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill13 = alloca i64*, align 8
  %self.dbg.spill12 = alloca i64*, align 8
  %self.dbg.spill11 = alloca i64*, align 8
  %2 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %align.dbg.spill8 = alloca i64, align 8
  %size.dbg.spill7 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill6 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64**, align 8
  %self.dbg.spill3 = alloca i64**, align 8
  %size.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
  call void @llvm.dbg.declare(metadata i64** %ptr, metadata !9823, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !9824, metadata !DIExpression()), !dbg !9833
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !9829, metadata !DIExpression()), !dbg !9834
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !9835, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !9841, metadata !DIExpression()), !dbg !9845
  store i64** %ptr, i64*** %self.dbg.spill, align 8, !dbg !9855
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !9856, metadata !DIExpression()), !dbg !9863
  store i64** %ptr, i64*** %self.dbg.spill1, align 8, !dbg !9863
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !9864, metadata !DIExpression()), !dbg !9871
  %self = load i64*, i64** %ptr, align 8, !dbg !9871, !nonnull !28, !noundef !28
  store i64* %self, i64** %self.dbg.spill2, align 8, !dbg !9871
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !9873, metadata !DIExpression()), !dbg !9879
  %_22 = bitcast i64* %self to %"std::io::error::Custom"*, !dbg !9879
  store i64 24, i64* %4, align 8, !dbg !9881
  %size = load i64, i64* %4, align 8, !dbg !9881
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !9881
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !9825, metadata !DIExpression()), !dbg !9882
  br label %bb1, !dbg !9881

bb1:                                              ; preds = %start
  store i64** %ptr, i64*** %self.dbg.spill3, align 8, !dbg !9883
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill3, metadata !9884, metadata !DIExpression()), !dbg !9888
  store i64** %ptr, i64*** %self.dbg.spill4, align 8, !dbg !9888
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill4, metadata !9889, metadata !DIExpression()), !dbg !9893
  %self5 = load i64*, i64** %ptr, align 8, !dbg !9893, !nonnull !28, !noundef !28
  store i64* %self5, i64** %self.dbg.spill6, align 8, !dbg !9893
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill6, metadata !9895, metadata !DIExpression()), !dbg !9899
  %_26 = bitcast i64* %self5 to %"std::io::error::Custom"*, !dbg !9899
  store i64 8, i64* %3, align 8, !dbg !9901
  %align = load i64, i64* %3, align 8, !dbg !9901
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !9901
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !9827, metadata !DIExpression()), !dbg !9902
  br label %bb2, !dbg !9901

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill7, align 8, !dbg !9903
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill7, metadata !9904, metadata !DIExpression()), !dbg !9909
  store i64 %align, i64* %align.dbg.spill8, align 8, !dbg !9911
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill8, metadata !9908, metadata !DIExpression()), !dbg !9909
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !9909
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !9912, metadata !DIExpression()), !dbg !9919
  store i64 %align, i64* %2, align 8, !dbg !9919
  %_28 = load i64, i64* %2, align 8, !dbg !9919, !range !6278, !noundef !28
  br label %bb7, !dbg !9919

bb7:                                              ; preds = %bb2
  %5 = bitcast { i64, i64 }* %layout to i64*, !dbg !9909
  store i64 %size, i64* %5, align 8, !dbg !9909
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !9909
  store i64 %_28, i64* %6, align 8, !dbg !9909
  %self10 = load i64*, i64** %ptr, align 8, !dbg !9854, !nonnull !28, !noundef !28
  store i64* %self10, i64** %self.dbg.spill11, align 8, !dbg !9854
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill11, metadata !9851, metadata !DIExpression()), !dbg !9921
  store i64* %self10, i64** %self.dbg.spill12, align 8, !dbg !9921
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill12, metadata !9922, metadata !DIExpression()), !dbg !9928
  store i64* %self10, i64** %self.dbg.spill13, align 8, !dbg !9928
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill13, metadata !9930, metadata !DIExpression()), !dbg !9934
  %_37 = bitcast i64* %self10 to %"std::io::error::Custom"*, !dbg !9934
  %ptr14 = bitcast %"std::io::error::Custom"* %_37 to i8*, !dbg !9928
  store i8* %ptr14, i8** %ptr.dbg.spill, align 8, !dbg !9928
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !9936, metadata !DIExpression()), !dbg !9940
  store i8* %ptr14, i8** %pointer, align 8, !dbg !9940
  %_41 = load i8*, i8** %pointer, align 8, !dbg !9845, !nonnull !28, !noundef !28
  store i8* %_41, i8** %unique, align 8, !dbg !9845
  %self15 = load i8*, i8** %unique, align 8, !dbg !9839, !nonnull !28, !noundef !28
  store i8* %self15, i8** %self.dbg.spill16, align 8, !dbg !9839
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !9942, metadata !DIExpression()), !dbg !9946
  store i8* %self15, i8** %self.dbg.spill17, align 8, !dbg !9946
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !9948, metadata !DIExpression()), !dbg !9952
  store i8* %self15, i8** %ptr.dbg.spill18, align 8, !dbg !9952
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill18, metadata !9954, metadata !DIExpression()), !dbg !9958
  store i8* %self15, i8** %_15, align 8, !dbg !9958
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !9960
  %_18.0 = load i64, i64* %7, align 8, !dbg !9960
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !9960
  %_18.1 = load i64, i64* %8, align 8, !dbg !9960, !range !6278, !noundef !28
  %9 = load i8*, i8** %_15, align 8, !dbg !9961, !nonnull !28, !noundef !28
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %9, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !9961

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !9962

cleanup:                                          ; preds = %bb7
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !9962

bb6:                                              ; preds = %bb5
  %15 = bitcast { i8*, i32 }* %1 to i8**, !dbg !9963
  %16 = load i8*, i8** %15, align 8, !dbg !9963
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !9963
  %18 = load i32, i32* %17, align 8, !dbg !9963
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !9963
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !9963
  resume { i8*, i32 } %20, !dbg !9963

bb4:                                              ; preds = %bb3
  ret void, !dbg !9964
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hcb2f4858f732f2d5E(i8* %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9965 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64* }, align 8
  %self.dbg.spill14 = alloca { i8*, i64* }, align 8
  %self.dbg.spill13 = alloca { i8*, i64* }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64* }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %ptr, metadata !9981, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !9982, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !9987, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !9993, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !9999, metadata !DIExpression()), !dbg !10003
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !10013
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !10014, metadata !DIExpression()), !dbg !10025
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill1, align 8, !dbg !10025
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill1, metadata !10026, metadata !DIExpression()), !dbg !10033
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !10033
  %self.0 = load i8*, i8** %8, align 8, !dbg !10033, !nonnull !28, !noundef !28
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !10033
  %self.1 = load i64*, i64** %9, align 8, !dbg !10033, !nonnull !28, !align !1582, !noundef !28
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !10033
  store i8* %self.0, i8** %10, align 8, !dbg !10033
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !10033
  store i64* %self.1, i64** %11, align 8, !dbg !10033
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !10035, metadata !DIExpression()), !dbg !10041
  %_22.0 = bitcast i8* %self.0 to {}*, !dbg !10041
  %_22.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !10041
  %12 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !10043
  %13 = getelementptr inbounds i64, i64* %12, i64 1, !dbg !10043
  %14 = load i64, i64* %13, align 8, !dbg !10043, !invariant.load !28
  %15 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !10043
  %16 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !10043
  %17 = load i64, i64* %16, align 8, !dbg !10043, !range !10044, !invariant.load !28
  store i64 %14, i64* %5, align 8, !dbg !10043
  %size = load i64, i64* %5, align 8, !dbg !10043
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !10043
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !9983, metadata !DIExpression()), !dbg !10045
  br label %bb1, !dbg !10043

bb1:                                              ; preds = %start
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill3, align 8, !dbg !10046
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill3, metadata !10047, metadata !DIExpression()), !dbg !10051
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill4, align 8, !dbg !10051
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill4, metadata !10052, metadata !DIExpression()), !dbg !10056
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !10056
  %self.05 = load i8*, i8** %18, align 8, !dbg !10056, !nonnull !28, !noundef !28
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !10056
  %self.16 = load i64*, i64** %19, align 8, !dbg !10056, !nonnull !28, !align !1582, !noundef !28
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 0, !dbg !10056
  store i8* %self.05, i8** %20, align 8, !dbg !10056
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 1, !dbg !10056
  store i64* %self.16, i64** %21, align 8, !dbg !10056
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill7, metadata !10058, metadata !DIExpression()), !dbg !10062
  %_26.0 = bitcast i8* %self.05 to {}*, !dbg !10062
  %_26.1 = bitcast i64* %self.16 to [3 x i64]*, !dbg !10062
  %22 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !10064
  %23 = getelementptr inbounds i64, i64* %22, i64 1, !dbg !10064
  %24 = load i64, i64* %23, align 8, !dbg !10064, !invariant.load !28
  %25 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !10064
  %26 = getelementptr inbounds i64, i64* %25, i64 2, !dbg !10064
  %27 = load i64, i64* %26, align 8, !dbg !10064, !range !10044, !invariant.load !28
  store i64 %27, i64* %4, align 8, !dbg !10064
  %align = load i64, i64* %4, align 8, !dbg !10064
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !10064
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !9985, metadata !DIExpression()), !dbg !10065
  br label %bb2, !dbg !10064

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !10066
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !10067, metadata !DIExpression()), !dbg !10072
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !10074
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !10071, metadata !DIExpression()), !dbg !10072
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !10072
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !10075, metadata !DIExpression()), !dbg !10082
  store i64 %align, i64* %3, align 8, !dbg !10082
  %_28 = load i64, i64* %3, align 8, !dbg !10082, !range !6278, !noundef !28
  br label %bb7, !dbg !10082

bb7:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %layout to i64*, !dbg !10072
  store i64 %size, i64* %28, align 8, !dbg !10072
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10072
  store i64 %_28, i64* %29, align 8, !dbg !10072
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !10012
  %self.011 = load i8*, i8** %30, align 8, !dbg !10012, !nonnull !28, !noundef !28
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !10012
  %self.112 = load i64*, i64** %31, align 8, !dbg !10012, !nonnull !28, !align !1582, !noundef !28
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 0, !dbg !10012
  store i8* %self.011, i8** %32, align 8, !dbg !10012
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 1, !dbg !10012
  store i64* %self.112, i64** %33, align 8, !dbg !10012
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill13, metadata !10009, metadata !DIExpression()), !dbg !10084
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 0, !dbg !10084
  store i8* %self.011, i8** %34, align 8, !dbg !10084
  %35 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 1, !dbg !10084
  store i64* %self.112, i64** %35, align 8, !dbg !10084
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill14, metadata !10085, metadata !DIExpression()), !dbg !10091
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 0, !dbg !10091
  store i8* %self.011, i8** %36, align 8, !dbg !10091
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 1, !dbg !10091
  store i64* %self.112, i64** %37, align 8, !dbg !10091
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill15, metadata !10093, metadata !DIExpression()), !dbg !10097
  %_37.0 = bitcast i8* %self.011 to {}*, !dbg !10097
  %_37.1 = bitcast i64* %self.112 to [3 x i64]*, !dbg !10097
  %ptr16 = bitcast {}* %_37.0 to i8*, !dbg !10091
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !10091
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10099, metadata !DIExpression()), !dbg !10103
  store i8* %ptr16, i8** %pointer, align 8, !dbg !10103
  %_41 = load i8*, i8** %pointer, align 8, !dbg !10003, !nonnull !28, !noundef !28
  store i8* %_41, i8** %unique, align 8, !dbg !10003
  %self = load i8*, i8** %unique, align 8, !dbg !9997, !nonnull !28, !noundef !28
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !9997
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !10105, metadata !DIExpression()), !dbg !10109
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !10109
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !10111, metadata !DIExpression()), !dbg !10115
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !10115
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !10117, metadata !DIExpression()), !dbg !10121
  store i8* %self, i8** %_15, align 8, !dbg !10121
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !10123
  %_18.0 = load i64, i64* %38, align 8, !dbg !10123
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10123
  %_18.1 = load i64, i64* %39, align 8, !dbg !10123, !range !6278, !noundef !28
  %40 = load i8*, i8** %_15, align 8, !dbg !10124, !nonnull !28, !noundef !28
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %40, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !10124

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !10125

cleanup:                                          ; preds = %bb7
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !10125

bb6:                                              ; preds = %bb5
  %46 = bitcast { i8*, i32 }* %2 to i8**, !dbg !10126
  %47 = load i8*, i8** %46, align 8, !dbg !10126
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !10126
  %49 = load i32, i32* %48, align 8, !dbg !10126
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !10126
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !10126
  resume { i8*, i32 } %51, !dbg !10126

bb4:                                              ; preds = %bb3
  ret void, !dbg !10127
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hf2b034534e2503d1E(i8* %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !10128 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64* }, align 8
  %self.dbg.spill14 = alloca { i8*, i64* }, align 8
  %self.dbg.spill13 = alloca { i8*, i64* }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64* }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %ptr, metadata !10144, metadata !DIExpression()), !dbg !10153
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !10145, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !10150, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !10156, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !10162, metadata !DIExpression()), !dbg !10166
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !10176
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !10177, metadata !DIExpression()), !dbg !10188
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill1, align 8, !dbg !10188
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill1, metadata !10189, metadata !DIExpression()), !dbg !10196
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !10196
  %self.0 = load i8*, i8** %8, align 8, !dbg !10196, !nonnull !28, !noundef !28
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !10196
  %self.1 = load i64*, i64** %9, align 8, !dbg !10196, !nonnull !28, !align !1582, !noundef !28
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !10196
  store i8* %self.0, i8** %10, align 8, !dbg !10196
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !10196
  store i64* %self.1, i64** %11, align 8, !dbg !10196
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !10198, metadata !DIExpression()), !dbg !10204
  %_22.0 = bitcast i8* %self.0 to {}*, !dbg !10204
  %_22.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !10204
  %12 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !10206
  %13 = getelementptr inbounds i64, i64* %12, i64 1, !dbg !10206
  %14 = load i64, i64* %13, align 8, !dbg !10206, !invariant.load !28
  %15 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !10206
  %16 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !10206
  %17 = load i64, i64* %16, align 8, !dbg !10206, !range !10044, !invariant.load !28
  store i64 %14, i64* %5, align 8, !dbg !10206
  %size = load i64, i64* %5, align 8, !dbg !10206
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !10206
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !10146, metadata !DIExpression()), !dbg !10207
  br label %bb1, !dbg !10206

bb1:                                              ; preds = %start
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill3, align 8, !dbg !10208
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill3, metadata !10209, metadata !DIExpression()), !dbg !10213
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill4, align 8, !dbg !10213
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill4, metadata !10214, metadata !DIExpression()), !dbg !10218
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !10218
  %self.05 = load i8*, i8** %18, align 8, !dbg !10218, !nonnull !28, !noundef !28
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !10218
  %self.16 = load i64*, i64** %19, align 8, !dbg !10218, !nonnull !28, !align !1582, !noundef !28
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 0, !dbg !10218
  store i8* %self.05, i8** %20, align 8, !dbg !10218
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 1, !dbg !10218
  store i64* %self.16, i64** %21, align 8, !dbg !10218
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill7, metadata !10220, metadata !DIExpression()), !dbg !10224
  %_26.0 = bitcast i8* %self.05 to {}*, !dbg !10224
  %_26.1 = bitcast i64* %self.16 to [3 x i64]*, !dbg !10224
  %22 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !10226
  %23 = getelementptr inbounds i64, i64* %22, i64 1, !dbg !10226
  %24 = load i64, i64* %23, align 8, !dbg !10226, !invariant.load !28
  %25 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !10226
  %26 = getelementptr inbounds i64, i64* %25, i64 2, !dbg !10226
  %27 = load i64, i64* %26, align 8, !dbg !10226, !range !10044, !invariant.load !28
  store i64 %27, i64* %4, align 8, !dbg !10226
  %align = load i64, i64* %4, align 8, !dbg !10226
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !10226
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !10148, metadata !DIExpression()), !dbg !10227
  br label %bb2, !dbg !10226

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !10228
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !10229, metadata !DIExpression()), !dbg !10234
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !10236
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !10233, metadata !DIExpression()), !dbg !10234
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !10234
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !10237, metadata !DIExpression()), !dbg !10244
  store i64 %align, i64* %3, align 8, !dbg !10244
  %_28 = load i64, i64* %3, align 8, !dbg !10244, !range !6278, !noundef !28
  br label %bb7, !dbg !10244

bb7:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %layout to i64*, !dbg !10234
  store i64 %size, i64* %28, align 8, !dbg !10234
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10234
  store i64 %_28, i64* %29, align 8, !dbg !10234
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !10175
  %self.011 = load i8*, i8** %30, align 8, !dbg !10175, !nonnull !28, !noundef !28
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !10175
  %self.112 = load i64*, i64** %31, align 8, !dbg !10175, !nonnull !28, !align !1582, !noundef !28
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 0, !dbg !10175
  store i8* %self.011, i8** %32, align 8, !dbg !10175
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 1, !dbg !10175
  store i64* %self.112, i64** %33, align 8, !dbg !10175
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill13, metadata !10172, metadata !DIExpression()), !dbg !10246
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 0, !dbg !10246
  store i8* %self.011, i8** %34, align 8, !dbg !10246
  %35 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 1, !dbg !10246
  store i64* %self.112, i64** %35, align 8, !dbg !10246
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill14, metadata !10247, metadata !DIExpression()), !dbg !10253
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 0, !dbg !10253
  store i8* %self.011, i8** %36, align 8, !dbg !10253
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 1, !dbg !10253
  store i64* %self.112, i64** %37, align 8, !dbg !10253
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill15, metadata !10255, metadata !DIExpression()), !dbg !10259
  %_37.0 = bitcast i8* %self.011 to {}*, !dbg !10259
  %_37.1 = bitcast i64* %self.112 to [3 x i64]*, !dbg !10259
  %ptr16 = bitcast {}* %_37.0 to i8*, !dbg !10253
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !10253
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10261, metadata !DIExpression()), !dbg !10265
  store i8* %ptr16, i8** %pointer, align 8, !dbg !10265
  %_41 = load i8*, i8** %pointer, align 8, !dbg !10166, !nonnull !28, !noundef !28
  store i8* %_41, i8** %unique, align 8, !dbg !10166
  %self = load i8*, i8** %unique, align 8, !dbg !10160, !nonnull !28, !noundef !28
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !10160
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !10267, metadata !DIExpression()), !dbg !10271
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !10271
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !10273, metadata !DIExpression()), !dbg !10277
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !10277
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !10279, metadata !DIExpression()), !dbg !10283
  store i8* %self, i8** %_15, align 8, !dbg !10283
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !10285
  %_18.0 = load i64, i64* %38, align 8, !dbg !10285
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10285
  %_18.1 = load i64, i64* %39, align 8, !dbg !10285, !range !6278, !noundef !28
  %40 = load i8*, i8** %_15, align 8, !dbg !10286, !nonnull !28, !noundef !28
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 %alloc, i8* %40, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !10286

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !10287

cleanup:                                          ; preds = %bb7
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !10287

bb6:                                              ; preds = %bb5
  %46 = bitcast { i8*, i32 }* %2 to i8**, !dbg !10288
  %47 = load i8*, i8** %46, align 8, !dbg !10288
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !10288
  %49 = load i32, i32* %48, align 8, !dbg !10288
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !10288
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !10288
  resume { i8*, i32 } %51, !dbg !10288

bb4:                                              ; preds = %bb3
  ret void, !dbg !10289
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11finish_grow17h1902612814c64536E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, %"alloc::alloc::Global"* align 1 %alloc) unnamed_addr #2 !dbg !10290 {
start:
  %n.dbg.spill22 = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %e.dbg.spill20 = alloca { i64, i64 }, align 8
  %residual.dbg.spill17 = alloca { i64, i64 }, align 8
  %e.dbg.spill14 = alloca { i64, i64 }, align 8
  %val.dbg.spill11 = alloca { i64, i64 }, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill10 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill7 = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %self6 = alloca i64, align 8
  %self5 = alloca i64, align 8
  %self4 = alloca i64, align 8
  %self3 = alloca i64, align 8
  %_58 = alloca { i64, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_43 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %residual2 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !10312, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.declare(metadata %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, metadata !10313, metadata !DIExpression()), !dbg !10365
  store %"alloc::alloc::Global"* %alloc, %"alloc::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %alloc.dbg.spill, metadata !10314, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !10315, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self, metadata !10368, metadata !DIExpression()), !dbg !10396
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !10398, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !10410, metadata !DIExpression()), !dbg !10438
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual2, metadata !10440, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !10349, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !10351, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !10355, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !10432, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !10456, metadata !DIExpression()), !dbg !10460
  call void @llvm.dbg.declare(metadata i64* %self4, metadata !10467, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.declare(metadata i64* %self5, metadata !10472, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !10483, metadata !DIExpression()), !dbg !10487
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hee905a535b73bc12E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %self, i64 %new_layout.0, i64 %new_layout.1), !dbg !10397
  br label %bb1, !dbg !10397

bb1:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*, !dbg !10396
  %_45 = load i64, i64* %3, align 8, !dbg !10396, !range !1578, !noundef !28
  switch i64 %_45, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ], !dbg !10396

bb20:                                             ; preds = %bb1
  unreachable, !dbg !10396

bb21:                                             ; preds = %bb1
  %4 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !10396
  %5 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %4, i32 0, i32 1, !dbg !10396
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !10396
  %v.0 = load i64, i64* %6, align 8, !dbg !10396
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !10396
  %v.1 = load i64, i64* %7, align 8, !dbg !10396, !range !6278, !noundef !28
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 0, !dbg !10396
  store i64 %v.0, i64* %8, align 8, !dbg !10396
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 1, !dbg !10396
  store i64 %v.1, i64* %9, align 8, !dbg !10396
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill7, metadata !10390, metadata !DIExpression()), !dbg !10488
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !10488
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %10, i32 0, i32 1, !dbg !10488
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !10488
  store i64 %v.0, i64* %12, align 8, !dbg !10488
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !10488
  store i64 %v.1, i64* %13, align 8, !dbg !10488
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !10488
  store i64 0, i64* %14, align 8, !dbg !10488
  br label %bb2, !dbg !10396

bb19:                                             ; preds = %bb1
  %15 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !10396
  %16 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %15, i32 0, i32 1, !dbg !10396
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !10396
  %e.0 = load i64, i64* %17, align 8, !dbg !10396
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !10396
  %e.1 = load i64, i64* %18, align 8, !dbg !10396, !range !1479, !noundef !28
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !10396
  store i64 %e.0, i64* %19, align 8, !dbg !10396
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !10396
  store i64 %e.1, i64* %20, align 8, !dbg !10396
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !10393, metadata !DIExpression()), !dbg !10489
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !10489
  store i64 %e.0, i64* %21, align 8, !dbg !10489
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !10489
  store i64 %e.1, i64* %22, align 8, !dbg !10489
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !10489
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %23, i32 0, i32 1, !dbg !10489
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !10489
  %26 = load i64, i64* %25, align 8, !dbg !10489
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !10489
  %28 = load i64, i64* %27, align 8, !dbg !10489, !range !1479, !noundef !28
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !10489
  store i64 %26, i64* %29, align 8, !dbg !10489
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !10489
  store i64 %28, i64* %30, align 8, !dbg !10489
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !10489
  store i64 1, i64* %31, align 8, !dbg !10489
  br label %bb2, !dbg !10396

bb2:                                              ; preds = %bb21, %bb19
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !10397
  %_9 = load i64, i64* %32, align 8, !dbg !10397, !range !1578, !noundef !28
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !10397

bb4:                                              ; preds = %bb2
  unreachable, !dbg !10397

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !10397
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %33, i32 0, i32 1, !dbg !10397
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !10397
  %val.0 = load i64, i64* %35, align 8, !dbg !10397
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !10397
  %val.1 = load i64, i64* %36, align 8, !dbg !10397, !range !6278, !noundef !28
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 0, !dbg !10397
  store i64 %val.0, i64* %37, align 8, !dbg !10397
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 1, !dbg !10397
  store i64 %val.1, i64* %38, align 8, !dbg !10397
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill11, metadata !10332, metadata !DIExpression()), !dbg !10490
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !10490
  store i64 %val.0, i64* %39, align 8, !dbg !10490
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !10490
  store i64 %val.1, i64* %40, align 8, !dbg !10490
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !10491
  store i64 -9223372036854775807, i64* %41, align 8, !dbg !10491
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !10438
  %43 = load i64, i64* %42, align 8, !dbg !10438, !range !7464, !noundef !28
  %44 = sub i64 %43, -9223372036854775807, !dbg !10438
  %45 = icmp eq i64 %44, 0, !dbg !10438
  %_55 = select i1 %45, i64 0, i64 1, !dbg !10438
  switch i64 %_55, label %bb23 [
    i64 0, label %bb24
    i64 1, label %bb22
  ], !dbg !10438

bb5:                                              ; preds = %bb2
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !10497
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %46, i32 0, i32 1, !dbg !10497
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 0, !dbg !10497
  %residual.0 = load i64, i64* %48, align 8, !dbg !10497
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 1, !dbg !10497
  %residual.1 = load i64, i64* %49, align 8, !dbg !10497, !range !1479, !noundef !28
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !10497
  store i64 %residual.0, i64* %50, align 8, !dbg !10497
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !10497
  store i64 %residual.1, i64* %51, align 8, !dbg !10497
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !10317, metadata !DIExpression()), !dbg !10498
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !10498
  store i64 %residual.0, i64* %52, align 8, !dbg !10498
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !10498
  store i64 %residual.1, i64* %53, align 8, !dbg !10498
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !10408
  %e.08 = load i64, i64* %54, align 8, !dbg !10408
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !10408
  %e.19 = load i64, i64* %55, align 8, !dbg !10408, !range !1479, !noundef !28
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 0, !dbg !10408
  store i64 %e.08, i64* %56, align 8, !dbg !10408
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 1, !dbg !10408
  store i64 %e.19, i64* %57, align 8, !dbg !10408
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill10, metadata !10404, metadata !DIExpression()), !dbg !10499
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !10499
  store i64 %e.08, i64* %58, align 8, !dbg !10499
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !10499
  store i64 %e.19, i64* %59, align 8, !dbg !10499
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !10500, metadata !DIExpression()), !dbg !10504
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !10504
  store i64 %e.08, i64* %60, align 8, !dbg !10504
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !10504
  store i64 %e.19, i64* %61, align 8, !dbg !10504
  %62 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !10499
  %63 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %62, i32 0, i32 1, !dbg !10499
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !10499
  %65 = load i64, i64* %64, align 8, !dbg !10499
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !10499
  %67 = load i64, i64* %66, align 8, !dbg !10499, !range !1479, !noundef !28
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 0, !dbg !10499
  store i64 %65, i64* %68, align 8, !dbg !10499
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 1, !dbg !10499
  store i64 %67, i64* %69, align 8, !dbg !10499
  %70 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !10499
  store i64 1, i64* %70, align 8, !dbg !10499
  br label %bb17, !dbg !10506

bb17:                                             ; preds = %bb25, %bb5
  br label %bb18, !dbg !10508

bb23:                                             ; preds = %bb3
  unreachable, !dbg !10438

bb24:                                             ; preds = %bb3
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !10455
  store i64 -9223372036854775807, i64* %71, align 8, !dbg !10455
  br label %bb6, !dbg !10438

bb22:                                             ; preds = %bb3
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !10438
  %e.012 = load i64, i64* %72, align 8, !dbg !10438
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !10438
  %e.113 = load i64, i64* %73, align 8, !dbg !10438, !range !1479, !noundef !28
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 0, !dbg !10438
  store i64 %e.012, i64* %74, align 8, !dbg !10438
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 1, !dbg !10438
  store i64 %e.113, i64* %75, align 8, !dbg !10438
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill14, metadata !10435, metadata !DIExpression()), !dbg !10509
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !10509
  store i64 %e.012, i64* %76, align 8, !dbg !10509
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !10509
  store i64 %e.113, i64* %77, align 8, !dbg !10509
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !10509
  %79 = load i64, i64* %78, align 8, !dbg !10509
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !10509
  %81 = load i64, i64* %80, align 8, !dbg !10509, !range !1479, !noundef !28
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !10509
  store i64 %79, i64* %82, align 8, !dbg !10509
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !10509
  store i64 %81, i64* %83, align 8, !dbg !10509
  br label %bb6, !dbg !10438

bb6:                                              ; preds = %bb24, %bb22
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !10439
  %85 = load i64, i64* %84, align 8, !dbg !10439, !range !7464, !noundef !28
  %86 = sub i64 %85, -9223372036854775807, !dbg !10439
  %87 = icmp eq i64 %86, 0, !dbg !10439
  %_17 = select i1 %87, i64 0, i64 1, !dbg !10439
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !10439

bb8:                                              ; preds = %bb6
  unreachable, !dbg !10439

bb7:                                              ; preds = %bb6
  %88 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, i32 0, i32 1, !dbg !10510
  %89 = load i64, i64* %88, align 8, !dbg !10510, !range !1479, !noundef !28
  %90 = icmp eq i64 %89, 0, !dbg !10510
  %_22 = select i1 %90, i64 0, i64 1, !dbg !10510
  %91 = icmp eq i64 %_22, 1, !dbg !10510
  br i1 %91, label %bb11, label %bb10, !dbg !10510

bb9:                                              ; preds = %bb6
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !10511
  %residual.015 = load i64, i64* %92, align 8, !dbg !10511
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !10511
  %residual.116 = load i64, i64* %93, align 8, !dbg !10511, !range !1479, !noundef !28
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 0, !dbg !10511
  store i64 %residual.015, i64* %94, align 8, !dbg !10511
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 1, !dbg !10511
  store i64 %residual.116, i64* %95, align 8, !dbg !10511
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill17, metadata !10334, metadata !DIExpression()), !dbg !10512
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !10512
  store i64 %residual.015, i64* %96, align 8, !dbg !10512
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !10512
  store i64 %residual.116, i64* %97, align 8, !dbg !10512
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !10450
  %e.018 = load i64, i64* %98, align 8, !dbg !10450
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !10450
  %e.119 = load i64, i64* %99, align 8, !dbg !10450, !range !1479, !noundef !28
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 0, !dbg !10450
  store i64 %e.018, i64* %100, align 8, !dbg !10450
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 1, !dbg !10450
  store i64 %e.119, i64* %101, align 8, !dbg !10450
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill20, metadata !10446, metadata !DIExpression()), !dbg !10513
; call <T as core::convert::From<T>>::from
  %102 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5f7fe61e0968c338E"(i64 %e.018, i64 %e.119), !dbg !10513
  %_61.0 = extractvalue { i64, i64 } %102, 0, !dbg !10513
  %_61.1 = extractvalue { i64, i64 } %102, 1, !dbg !10513
  br label %bb25, !dbg !10513

bb25:                                             ; preds = %bb9
  %103 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !10513
  %104 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %103, i32 0, i32 1, !dbg !10513
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 0, !dbg !10513
  store i64 %_61.0, i64* %105, align 8, !dbg !10513
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 1, !dbg !10513
  store i64 %_61.1, i64* %106, align 8, !dbg !10513
  %107 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !10513
  store i64 1, i64* %107, align 8, !dbg !10513
  br label %bb17, !dbg !10514

bb18:                                             ; preds = %bb16, %bb17
  ret void, !dbg !10508

bb11:                                             ; preds = %bb7
  %108 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !10516
  %109 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %108 to { i8*, { i64, i64 } }*, !dbg !10516
  %110 = bitcast { i8*, { i64, i64 } }* %109 to i8**, !dbg !10516
  %ptr = load i8*, i8** %110, align 8, !dbg !10516, !nonnull !28, !noundef !28
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !10516
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10353, metadata !DIExpression()), !dbg !10516
  %111 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !10454
  %112 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %111 to { i8*, { i64, i64 } }*, !dbg !10454
  %113 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %112, i32 0, i32 1, !dbg !10454
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 0, !dbg !10454
  %115 = load i64, i64* %114, align 8, !dbg !10454
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 1, !dbg !10454
  %117 = load i64, i64* %116, align 8, !dbg !10454, !range !6278, !noundef !28
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !10454
  store i64 %115, i64* %118, align 8, !dbg !10454
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !10454
  store i64 %117, i64* %119, align 8, !dbg !10454
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill, align 8, !dbg !10466
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !10464, metadata !DIExpression()), !dbg !10517
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !10517
  %121 = load i64, i64* %120, align 8, !dbg !10517, !range !6278, !noundef !28
  store i64 %121, i64* %self4, align 8, !dbg !10517
  %_74 = load i64, i64* %self4, align 8, !dbg !10471, !range !6278, !noundef !28
  store i64 %_74, i64* %n.dbg.spill, align 8, !dbg !10471
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !10518, metadata !DIExpression()), !dbg !10525
  store i64 %_74, i64* %self3, align 8, !dbg !10525
  %_32 = load i64, i64* %self3, align 8, !dbg !10460
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !10482
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !10480, metadata !DIExpression()), !dbg !10527
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !10527
  %123 = load i64, i64* %122, align 8, !dbg !10527, !range !6278, !noundef !28
  store i64 %123, i64* %self6, align 8, !dbg !10527
  %_80 = load i64, i64* %self6, align 8, !dbg !10487, !range !6278, !noundef !28
  store i64 %_80, i64* %n.dbg.spill22, align 8, !dbg !10487
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill22, metadata !10528, metadata !DIExpression()), !dbg !10535
  store i64 %_80, i64* %self5, align 8, !dbg !10535
  %_34 = load i64, i64* %self5, align 8, !dbg !10476
  %_31 = icmp eq i64 %_32, %_34, !dbg !10466
  call void @llvm.assume(i1 %_31), !dbg !10537
  br label %bb12, !dbg !10537

bb10:                                             ; preds = %bb7
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !10538
  %_41.0 = load i64, i64* %124, align 8, !dbg !10538
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !10538
  %_41.1 = load i64, i64* %125, align 8, !dbg !10538, !range !6278, !noundef !28
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %126 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h760fa60d0593f80cE"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_41.0, i64 %_41.1), !dbg !10539
  store { i8*, i64 } %126, { i8*, i64 }* %memory, align 8, !dbg !10539
  br label %bb14, !dbg !10539

bb14:                                             ; preds = %bb10
  br label %bb15, !dbg !10540

bb15:                                             ; preds = %bb13, %bb14
  %127 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !10541
  %_42.0 = load i8*, i8** %127, align 8, !dbg !10541
  %128 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !10541
  %_42.1 = load i64, i64* %128, align 8, !dbg !10541
  %129 = bitcast i64** %_43 to { i64, i64 }**, !dbg !10542
  store { i64, i64 }* %new_layout, { i64, i64 }** %129, align 8, !dbg !10542
  %130 = load i64*, i64** %_43, align 8, !dbg !10541, !nonnull !28, !align !1582, !noundef !28
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc2067a3f66512852E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %_42.0, i64 %_42.1, i64* align 8 %130), !dbg !10541
  br label %bb16, !dbg !10541

bb12:                                             ; preds = %bb11
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !10543
  %_38.0 = load i64, i64* %131, align 8, !dbg !10543
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !10543
  %_38.1 = load i64, i64* %132, align 8, !dbg !10543, !range !6278, !noundef !28
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !10544
  %_39.0 = load i64, i64* %133, align 8, !dbg !10544
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !10544
  %_39.1 = load i64, i64* %134, align 8, !dbg !10544, !range !6278, !noundef !28
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %135 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h0d6a3619a715c446E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %ptr, i64 %_38.0, i64 %_38.1, i64 %_39.0, i64 %_39.1), !dbg !10545
  store { i8*, i64 } %135, { i8*, i64 }* %memory, align 8, !dbg !10545
  br label %bb13, !dbg !10545

bb13:                                             ; preds = %bb12
  br label %bb15, !dbg !10540

bb16:                                             ; preds = %bb15
  br label %bb18, !dbg !10508
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h66c167fe7c85872cE"() unnamed_addr #0 !dbg !10546 {
start:
  %_2.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !10550, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %_2.dbg.spill, metadata !10551, metadata !DIExpression()), !dbg !10553
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !10554
  store i64 0, i64* %1, align 8, !dbg !10554
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !10555
  %3 = load i64, i64* %2, align 8, !dbg !10555
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !10555
  %5 = load i64, i64* %4, align 8, !dbg !10555, !range !1479, !noundef !28
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !10555
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !10555
  ret { i64, i64 } %7, !dbg !10555
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h6f36d7ffec3c0b0aE"(i64* align 8 %0) unnamed_addr #0 !dbg !10556 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_3 = alloca { i64, i64 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %1 = bitcast i64** %_1 to { i64, i64 }**
  %2 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !nonnull !28, !align !1582, !noundef !28
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !10560, metadata !DIExpression(DW_OP_deref)), !dbg !10562
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %_2.dbg.spill, metadata !10561, metadata !DIExpression()), !dbg !10563
  %3 = bitcast i64** %_1 to { i64, i64 }**, !dbg !10564
  %_5 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !10564, !nonnull !28, !align !1582, !noundef !28
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !10564
  %_4.0 = load i64, i64* %4, align 8, !dbg !10564
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !10564
  %_4.1 = load i64, i64* %5, align 8, !dbg !10564, !range !6278, !noundef !28
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !10565
  store i64 %_4.0, i64* %6, align 8, !dbg !10565
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !10565
  store i64 %_4.1, i64* %7, align 8, !dbg !10565
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !10565
  %9 = load i64, i64* %8, align 8, !dbg !10565
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !10565
  %11 = load i64, i64* %10, align 8, !dbg !10565, !range !1479, !noundef !28
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb06c121365edc62aE"(i64 %9, i64 %11), !dbg !10565
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !10565
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !10565
  br label %bb1, !dbg !10565

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !10566
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !10566
  ret { i64, i64 } %16, !dbg !10566
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h00be94c037ccf9fdE(i64 %result.0, i64 %result.1) unnamed_addr #0 !dbg !10567 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %result.dbg.spill = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 0
  store i64 %result.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 1
  store i64 %result.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %result.dbg.spill, metadata !10571, metadata !DIExpression()), !dbg !10574
; call core::result::Result<T,E>::map_err
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc957735d7d5d8d2bE"(i64 %result.0, i64 %result.1), !dbg !10575
  store { i64, i64 } %2, { i64, i64 }* %_2, align 8, !dbg !10575
  br label %bb1, !dbg !10575

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !10575
  %4 = load i64, i64* %3, align 8, !dbg !10575, !range !7464, !noundef !28
  %5 = sub i64 %4, -9223372036854775807, !dbg !10575
  %6 = icmp eq i64 %5, 0, !dbg !10575
  %_6 = select i1 %6, i64 0, i64 1, !dbg !10575
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !10576

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !10575

bb2:                                              ; preds = %bb1
  ret void, !dbg !10577

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !10575
  %8 = load i64, i64* %7, align 8, !dbg !10575, !range !1479, !noundef !28
  %9 = icmp eq i64 %8, 0, !dbg !10575
  %_5 = select i1 %9, i64 0, i64 1, !dbg !10575
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !10576

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #17, !dbg !10578
  unreachable, !dbg !10578

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !10579
  %layout.0 = load i64, i64* %10, align 8, !dbg !10579
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !10579
  %layout.1 = load i64, i64* %11, align 8, !dbg !10579, !range !6278, !noundef !28
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !10579
  store i64 %layout.0, i64* %12, align 8, !dbg !10579
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !10579
  store i64 %layout.1, i64* %13, align 8, !dbg !10579
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !10572, metadata !DIExpression()), !dbg !10580
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #17, !dbg !10581
  unreachable, !dbg !10581
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h49235c1b243c36e6E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !10582 {
start:
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill1 = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %2 = alloca { i64, i64 }, align 8
  %e = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !10587, metadata !DIExpression()), !dbg !10588
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !10586, metadata !DIExpression()), !dbg !10589
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill, align 8, !dbg !10590
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !10591, metadata !DIExpression()), !dbg !10598
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill1, align 8, !dbg !10598
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill1, metadata !10599, metadata !DIExpression()), !dbg !10612
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !10612
  %6 = load i64, i64* %5, align 8, !dbg !10612, !range !1479, !noundef !28
  %7 = icmp eq i64 %6, 0, !dbg !10612
  %_5 = select i1 %7, i64 0, i64 1, !dbg !10612
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !10612

bb3:                                              ; preds = %start
  unreachable, !dbg !10612

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !10612
  store i64 0, i64* %8, align 8, !dbg !10612
  br label %bb1, !dbg !10612

bb2:                                              ; preds = %start
  store { i64, i64 }* %e, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !10612
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !10607, metadata !DIExpression()), !dbg !10614
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !10614
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !10615, metadata !DIExpression()), !dbg !10622
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0, !dbg !10622
  %_8.0 = load i64, i64* %9, align 8, !dbg !10622
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !10622
  %_8.1 = load i64, i64* %10, align 8, !dbg !10622, !range !6278, !noundef !28
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !10614
  store i64 %_8.0, i64* %11, align 8, !dbg !10614
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !10614
  store i64 %_8.1, i64* %12, align 8, !dbg !10614
  br label %bb1, !dbg !10612

bb1:                                              ; preds = %bb4, %bb2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !10624
  %14 = load i64, i64* %13, align 8, !dbg !10624
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !10624
  %16 = load i64, i64* %15, align 8, !dbg !10624, !range !1479, !noundef !28
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !10624
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !10624
  ret { i64, i64 } %18, !dbg !10624
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hd0b14824167d3f29E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !10625 {
start:
  %ptr.dbg.spill6 = alloca { [0 x i8]*, i64 }*, align 8
  %ptr.dbg.spill5 = alloca { [0 x i8]*, i64 }*, align 8
  %ptr.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i64*, align 8
  %_37 = alloca i8, align 1
  %self = alloca i64*, align 8
  %_31 = alloca i64*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i64*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !10629, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.declare(metadata i8* %init, metadata !10630, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !10631, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !10636, metadata !DIExpression()), !dbg !10645
  call void @llvm.dbg.declare(metadata i64** %self, metadata !10646, metadata !DIExpression()), !dbg !10650
  store i8 1, i8* %_37, align 1, !dbg !10652
  br i1 false, label %bb1, label %bb2, !dbg !10652

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !10652
  br label %bb3, !dbg !10652

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !10653
  %4 = zext i1 %_6 to i8, !dbg !10652
  store i8 %4, i8* %_4, align 1, !dbg !10652
  br label %bb3, !dbg !10652

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !10652, !range !1099, !noundef !28
  %6 = trunc i8 %5 to i1, !dbg !10652
  br i1 %6, label %bb4, label %bb6, !dbg !10652

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h9459a5cb1ebe3a3fE(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !10654

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !10655
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h753802f2aa00204aE"()
          to label %bb5 unwind label %cleanup, !dbg !10656

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !10657, !range !1099, !noundef !28
  %10 = trunc i8 %9 to i1, !dbg !10657
  br i1 %10, label %bb25, label %bb24, !dbg !10657

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i64*, i64 } %8, { i64*, i64 }* %2, align 8, !dbg !10656
  br label %bb23, !dbg !10658

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0, !dbg !10659
  %17 = load i64*, i64** %16, align 8, !dbg !10659, !nonnull !28, !noundef !28
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !10659
  %19 = load i64, i64* %18, align 8, !dbg !10659
  %20 = insertvalue { i64*, i64 } undef, i64* %17, 0, !dbg !10659
  %21 = insertvalue { i64*, i64 } %20, i64 %19, 1, !dbg !10659
  ret { i64*, i64 } %21, !dbg !10659

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !10654
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !10654
  %23 = load i64, i64* %22, align 8, !dbg !10654, !range !1479, !noundef !28
  %24 = icmp eq i64 %23, 0, !dbg !10654
  %_12 = select i1 %24, i64 1, i64 0, !dbg !10654
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !10660

bb9:                                              ; preds = %bb7
  unreachable, !dbg !10654

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !10661
  %layout.0 = load i64, i64* %25, align 8, !dbg !10661
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !10661
  %layout.1 = load i64, i64* %26, align 8, !dbg !10661, !range !6278, !noundef !28
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !10661
  store i64 %layout.0, i64* %27, align 8, !dbg !10661
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !10661
  store i64 %layout.1, i64* %28, align 8, !dbg !10661
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !10634, metadata !DIExpression()), !dbg !10662
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !10663
  store i64 %layout.0, i64* %29, align 8, !dbg !10663
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !10663
  store i64 %layout.1, i64* %30, align 8, !dbg !10663
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !10632, metadata !DIExpression()), !dbg !10664
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !10665
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !10665
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !10669
  %33 = load i64, i64* %32, align 8, !dbg !10669, !range !7464, !noundef !28
  %34 = sub i64 %33, -9223372036854775807, !dbg !10669
  %35 = icmp eq i64 %34, 0, !dbg !10669
  %_18 = select i1 %35, i64 0, i64 1, !dbg !10669
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !10670

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #17
          to label %unreachable unwind label %cleanup, !dbg !10671

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !10669

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !10672, !range !1099, !noundef !28
  %37 = trunc i8 %36 to i1, !dbg !10672
  %_21 = zext i1 %37 to i64, !dbg !10672
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !10673

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #17
          to label %unreachable unwind label %cleanup, !dbg !10674

bb15:                                             ; preds = %bb13
  unreachable, !dbg !10672

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h760fa60d0593f80cE"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !10675

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb93721974950716eE"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !10676

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !10676
  br label %bb19, !dbg !10677

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !10678
  %41 = load {}*, {}** %40, align 8, !dbg !10678
  %42 = icmp eq {}* %41, null, !dbg !10678
  %_27 = select i1 %42, i64 1, i64 0, !dbg !10678
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !10679

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !10675
  br label %bb19, !dbg !10680

bb21:                                             ; preds = %bb19
  unreachable, !dbg !10678

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !10681
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !10681, !nonnull !28, !noundef !28
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !10681
  %ptr.1 = load i64, i64* %44, align 8, !dbg !10681
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !10681
  store i8* %ptr.0, i8** %45, align 8, !dbg !10681
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !10681
  store i64 %ptr.1, i64* %46, align 8, !dbg !10681
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !10640, metadata !DIExpression()), !dbg !10682
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !10683
  store i8* %ptr.0, i8** %47, align 8, !dbg !10683
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !10683
  store i64 %ptr.1, i64* %48, align 8, !dbg !10683
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !10638, metadata !DIExpression()), !dbg !10684
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !10651
  store i8* %ptr.0, i8** %49, align 8, !dbg !10651
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !10651
  store i64 %ptr.1, i64* %50, align 8, !dbg !10651
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !10685, metadata !DIExpression()), !dbg !10692
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !10692
  store i8* %ptr.0, i8** %51, align 8, !dbg !10692
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !10692
  store i64 %ptr.1, i64* %52, align 8, !dbg !10692
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !10693, metadata !DIExpression()), !dbg !10697
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !10697
  %ptr = bitcast [0 x i8]* %_41.0 to { [0 x i8]*, i64 }*, !dbg !10692
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill4, align 8, !dbg !10692
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill4, metadata !10699, metadata !DIExpression()), !dbg !10703
  %53 = bitcast i64** %self to { [0 x i8]*, i64 }**, !dbg !10703
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %53, align 8, !dbg !10703
  %54 = bitcast i64** %self to { [0 x i8]*, i64 }**, !dbg !10650
  %_45 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %54, align 8, !dbg !10650
  store { [0 x i8]*, i64 }* %_45, { [0 x i8]*, i64 }** %ptr.dbg.spill5, align 8, !dbg !10650
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill5, metadata !10705, metadata !DIExpression()), !dbg !10711
  store { [0 x i8]*, i64 }* %_45, { [0 x i8]*, i64 }** %ptr.dbg.spill6, align 8, !dbg !10711
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill6, metadata !10713, metadata !DIExpression()), !dbg !10717
  %55 = bitcast i64** %_46 to { [0 x i8]*, i64 }**, !dbg !10717
  store { [0 x i8]*, i64 }* %_45, { [0 x i8]*, i64 }** %55, align 8, !dbg !10717
  %56 = load i64*, i64** %_46, align 8, !dbg !10711, !nonnull !28, !noundef !28
  store i64* %56, i64** %_31, align 8, !dbg !10711
  %57 = bitcast { i64*, i64 }* %2 to i64**, !dbg !10719
  %58 = load i64*, i64** %_31, align 8, !dbg !10719, !nonnull !28, !noundef !28
  store i64* %58, i64** %57, align 8, !dbg !10719
  %59 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !10719
  store i64 %capacity, i64* %59, align 8, !dbg !10719
  %60 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !10719
  br label %bb23, !dbg !10658

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #17
          to label %unreachable unwind label %cleanup, !dbg !10720

bb24:                                             ; preds = %bb25, %bb26
  %61 = bitcast { i8*, i32 }* %1 to i8**, !dbg !10721
  %62 = load i8*, i8** %61, align 8, !dbg !10721
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !10721
  %64 = load i32, i32* %63, align 8, !dbg !10721
  %65 = insertvalue { i8*, i32 } undef, i8* %62, 0, !dbg !10721
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1, !dbg !10721
  resume { i8*, i32 } %66, !dbg !10721

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !10657
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hceca2e7dfe8279dcE"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !10722 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !10726, metadata !DIExpression()), !dbg !10729
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10727, metadata !DIExpression()), !dbg !10730
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !10728, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !10732, metadata !DIExpression()), !dbg !10737
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !10738
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !10739, metadata !DIExpression()), !dbg !10742
  br i1 false, label %bb2, label %bb3, !dbg !10742

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !10742
  br label %bb1, !dbg !10742

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !10742
  %1 = load i64, i64* %0, align 8, !dbg !10742
  store i64 %1, i64* %self1, align 8, !dbg !10742
  br label %bb1, !dbg !10742

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !10743
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !10736, metadata !DIExpression()), !dbg !10737
  %_10 = load i64, i64* %self1, align 8, !dbg !10737
  %_5 = sub i64 %_10, %len, !dbg !10737
  %2 = icmp ugt i64 %additional, %_5, !dbg !10744
  ret i1 %2, !dbg !10745
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8f4aabb6d3acb1f5E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i8*, i64 }* align 8 %self) unnamed_addr #1 !dbg !10746 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !10750, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !10754, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !10765, metadata !DIExpression()), !dbg !10769
  br i1 false, label %bb1, label %bb2, !dbg !10778

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !10778
  br label %bb3, !dbg !10778

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !10779
  %_5 = load i64, i64* %1, align 8, !dbg !10779
  %_4 = icmp eq i64 %_5, 0, !dbg !10779
  %2 = zext i1 %_4 to i8, !dbg !10778
  store i8 %2, i8* %_2, align 1, !dbg !10778
  br label %bb3, !dbg !10778

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !10778, !range !1099, !noundef !28
  %4 = trunc i8 %3 to i1, !dbg !10778
  br i1 %4, label %bb4, label %bb5, !dbg !10778

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !10780
  %_8 = load i64, i64* %5, align 8, !dbg !10780
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h19e26fcbb5fdf4b7E(i64 %_8), !dbg !10764
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !10764
  br label %bb6, !dbg !10764

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !10781
  store i64 0, i64* %7, align 8, !dbg !10781
  br label %bb8, !dbg !10782

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !10783

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !10763
  %9 = load i64, i64* %8, align 8, !dbg !10763, !range !1479, !noundef !28
  %10 = icmp eq i64 %9, 0, !dbg !10763
  %_15 = select i1 %10, i64 1, i64 0, !dbg !10763
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !10763

bb10:                                             ; preds = %bb6
  unreachable, !dbg !10763

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !10763
  %t.0 = load i64, i64* %11, align 8, !dbg !10763
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !10763
  %t.1 = load i64, i64* %12, align 8, !dbg !10763, !range !6278, !noundef !28
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !10763
  store i64 %t.0, i64* %13, align 8, !dbg !10763
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !10763
  store i64 %t.1, i64* %14, align 8, !dbg !10763
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !10760, metadata !DIExpression()), !dbg !10784
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !10784
  store i64 %t.0, i64* %15, align 8, !dbg !10784
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !10784
  store i64 %t.1, i64* %16, align 8, !dbg !10784
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !10751, metadata !DIExpression()), !dbg !10785
  %17 = bitcast { i8*, i64 }* %self to i8**, !dbg !10777
  %self2 = load i8*, i8** %17, align 8, !dbg !10777, !nonnull !28, !noundef !28
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !10777
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !10775, metadata !DIExpression()), !dbg !10786
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !10786
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !10787, metadata !DIExpression()), !dbg !10793
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !10793
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !10795, metadata !DIExpression()), !dbg !10799
  store i8* %self2, i8** %ptr.dbg.spill, align 8, !dbg !10793
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10801, metadata !DIExpression()), !dbg !10805
  store i8* %self2, i8** %pointer, align 8, !dbg !10805
  %_26 = load i8*, i8** %pointer, align 8, !dbg !10769, !nonnull !28, !noundef !28
  store i8* %_26, i8** %_11, align 8, !dbg !10769
  %18 = load i8*, i8** %_11, align 8, !dbg !10777, !nonnull !28, !noundef !28
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h968d041dad957f97E"(i8* %18), !dbg !10777
  br label %bb7, !dbg !10777

bb9:                                              ; preds = %bb6
  unreachable, !dbg !10807

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !10811
  store i8* %_10, i8** %19, align 8, !dbg !10811
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !10811
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !10811
  store i64 %t.0, i64* %21, align 8, !dbg !10811
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !10811
  store i64 %t.1, i64* %22, align 8, !dbg !10811
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !10812
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !10812
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !10812
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !10812
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !10812
  br label %bb8, !dbg !10782
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9516373acb554c32E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !10813 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !10817, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !10821, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !10830, metadata !DIExpression()), !dbg !10834
  br i1 false, label %bb1, label %bb2, !dbg !10844

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !10844
  br label %bb3, !dbg !10844

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !10845
  %_5 = load i64, i64* %1, align 8, !dbg !10845
  %_4 = icmp eq i64 %_5, 0, !dbg !10845
  %2 = zext i1 %_4 to i8, !dbg !10844
  store i8 %2, i8* %_2, align 1, !dbg !10844
  br label %bb3, !dbg !10844

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !10844, !range !1099, !noundef !28
  %4 = trunc i8 %3 to i1, !dbg !10844
  br i1 %4, label %bb4, label %bb5, !dbg !10844

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !10846
  %_8 = load i64, i64* %5, align 8, !dbg !10846
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h9459a5cb1ebe3a3fE(i64 %_8), !dbg !10829
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !10829
  br label %bb6, !dbg !10829

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !10847
  store i64 0, i64* %7, align 8, !dbg !10847
  br label %bb8, !dbg !10848

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !10849

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !10828
  %9 = load i64, i64* %8, align 8, !dbg !10828, !range !1479, !noundef !28
  %10 = icmp eq i64 %9, 0, !dbg !10828
  %_15 = select i1 %10, i64 1, i64 0, !dbg !10828
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !10828

bb10:                                             ; preds = %bb6
  unreachable, !dbg !10828

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !10828
  %t.0 = load i64, i64* %11, align 8, !dbg !10828
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !10828
  %t.1 = load i64, i64* %12, align 8, !dbg !10828, !range !6278, !noundef !28
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !10828
  store i64 %t.0, i64* %13, align 8, !dbg !10828
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !10828
  store i64 %t.1, i64* %14, align 8, !dbg !10828
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !10825, metadata !DIExpression()), !dbg !10850
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !10850
  store i64 %t.0, i64* %15, align 8, !dbg !10850
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !10850
  store i64 %t.1, i64* %16, align 8, !dbg !10850
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !10818, metadata !DIExpression()), !dbg !10851
  %17 = bitcast { i64*, i64 }* %self to i64**, !dbg !10843
  %self2 = load i64*, i64** %17, align 8, !dbg !10843, !nonnull !28, !noundef !28
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !10843
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !10840, metadata !DIExpression()), !dbg !10852
  store i64* %self2, i64** %self.dbg.spill4, align 8, !dbg !10852
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !10853, metadata !DIExpression()), !dbg !10859
  store i64* %self2, i64** %self.dbg.spill5, align 8, !dbg !10859
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !10861, metadata !DIExpression()), !dbg !10865
  %_22 = bitcast i64* %self2 to { [0 x i8]*, i64 }*, !dbg !10865
  %ptr = bitcast { [0 x i8]*, i64 }* %_22 to i8*, !dbg !10859
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !10859
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10867, metadata !DIExpression()), !dbg !10871
  store i8* %ptr, i8** %pointer, align 8, !dbg !10871
  %_26 = load i8*, i8** %pointer, align 8, !dbg !10834, !nonnull !28, !noundef !28
  store i8* %_26, i8** %_11, align 8, !dbg !10834
  %18 = load i8*, i8** %_11, align 8, !dbg !10843, !nonnull !28, !noundef !28
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h968d041dad957f97E"(i8* %18), !dbg !10843
  br label %bb7, !dbg !10843

bb9:                                              ; preds = %bb6
  unreachable, !dbg !10873

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !10877
  store i8* %_10, i8** %19, align 8, !dbg !10877
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !10877
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !10877
  store i64 %t.0, i64* %21, align 8, !dbg !10877
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !10877
  store i64 %t.1, i64* %22, align 8, !dbg !10877
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !10878
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !10878
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !10878
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !10878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !10878
  br label %bb8, !dbg !10848
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h987b5bcb2ce470f8E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !10879 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !10884, metadata !DIExpression()), !dbg !10905
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10885, metadata !DIExpression()), !dbg !10906
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !10886, metadata !DIExpression()), !dbg !10907
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !10908, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !10950, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !10956, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !10961, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !10973, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !11001, metadata !DIExpression()), !dbg !11011
  br i1 false, label %bb1, label %bb3, !dbg !11013

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !11014
  store i64 0, i64* %1, align 8, !dbg !11014
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !11014
  %3 = load i64, i64* %2, align 8, !dbg !11014
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !11014
  %5 = load i64, i64* %4, align 8, !dbg !11014, !range !1479, !noundef !28
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb06c121365edc62aE"(i64 %3, i64 %5), !dbg !11014
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !11014
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !11014
  br label %bb2, !dbg !11014

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hef81380ba2856b32E"(i64 %len, i64 %additional), !dbg !10949
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !10949
  br label %bb4, !dbg !10949

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !11015
  store i64 0, i64* %8, align 8, !dbg !11015
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !10960
  %_42 = load i64, i64* %9, align 8, !dbg !10960, !range !1578, !noundef !28
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !10960

bb20:                                             ; preds = %bb4
  unreachable, !dbg !10960

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !10960
  %_45.0 = load i64, i64* %10, align 8, !dbg !10960
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !10960
  %_45.1 = load i64, i64* %11, align 8, !dbg !10960, !range !1479, !noundef !28
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !10960
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !10960
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !10960
  store i64 %_45.0, i64* %14, align 8, !dbg !10960
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !10960
  store i64 %_45.1, i64* %15, align 8, !dbg !10960
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !10960
  store i64 1, i64* %16, align 8, !dbg !10960
  br label %bb22, !dbg !10960

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !10960
  %v = load i64, i64* %17, align 8, !dbg !10960
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !10960
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !10957, metadata !DIExpression()), !dbg !11016
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !11016
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !11016
  store i64 %v, i64* %19, align 8, !dbg !11016
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !11016
  store i64 0, i64* %20, align 8, !dbg !11016
  br label %bb22, !dbg !10960

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !10948
  %_46 = load i64, i64* %21, align 8, !dbg !10948, !range !1578, !noundef !28
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !10948

bb24:                                             ; preds = %bb22
  unreachable, !dbg !10948

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !10948
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !10948
  %v5 = load i64, i64* %23, align 8, !dbg !10948
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !10948
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !10942, metadata !DIExpression()), !dbg !11017
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !11017
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !11017
  store i64 %v5, i64* %25, align 8, !dbg !11017
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !11017
  store i64 0, i64* %26, align 8, !dbg !11017
  br label %bb5, !dbg !10948

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !10948
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !10948
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !10948
  %e.0 = load i64, i64* %29, align 8, !dbg !10948
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !10948
  %e.1 = load i64, i64* %30, align 8, !dbg !10948, !range !1479, !noundef !28
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !10948
  store i64 %e.0, i64* %31, align 8, !dbg !10948
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !10948
  store i64 %e.1, i64* %32, align 8, !dbg !10948
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !10945, metadata !DIExpression()), !dbg !11018
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !11018
  store i64 %e.0, i64* %33, align 8, !dbg !11018
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !11018
  store i64 %e.1, i64* %34, align 8, !dbg !11018
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !11018
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !11018
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !11018
  %38 = load i64, i64* %37, align 8, !dbg !11018
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !11018
  %40 = load i64, i64* %39, align 8, !dbg !11018, !range !1479, !noundef !28
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !11018
  store i64 %38, i64* %41, align 8, !dbg !11018
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !11018
  store i64 %40, i64* %42, align 8, !dbg !11018
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !11018
  store i64 1, i64* %43, align 8, !dbg !11018
  br label %bb5, !dbg !10948

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !10949
  %_14 = load i64, i64* %44, align 8, !dbg !10949, !range !1578, !noundef !28
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !10949

bb7:                                              ; preds = %bb5
  unreachable, !dbg !10949

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !10949
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !10949
  %val = load i64, i64* %46, align 8, !dbg !10949
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !10949
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !10891, metadata !DIExpression()), !dbg !11019
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !11019
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !10887, metadata !DIExpression()), !dbg !11020
  %47 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !11021
  %_20 = load i64, i64* %47, align 8, !dbg !11021
  %v1 = mul i64 %_20, 2, !dbg !11021
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !11021
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !11022, metadata !DIExpression()), !dbg !11027
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !11029
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !11026, metadata !DIExpression()), !dbg !11027
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17h87e416972f67cf67E(i64 %v1, i64 %val), !dbg !11027
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !11027
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !10893, metadata !DIExpression()), !dbg !11030
  br label %bb26, !dbg !11027

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !11031
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !11031
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !11031
  %residual.0 = load i64, i64* %50, align 8, !dbg !11031
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !11031
  %residual.1 = load i64, i64* %51, align 8, !dbg !11031, !range !1479, !noundef !28
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !11031
  store i64 %residual.0, i64* %52, align 8, !dbg !11031
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !11031
  store i64 %residual.1, i64* %53, align 8, !dbg !11031
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !10889, metadata !DIExpression()), !dbg !11032
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !11032
  store i64 %residual.0, i64* %54, align 8, !dbg !11032
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !11032
  store i64 %residual.1, i64* %55, align 8, !dbg !11032
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !10971
  %e.07 = load i64, i64* %56, align 8, !dbg !10971
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !10971
  %e.18 = load i64, i64* %57, align 8, !dbg !10971, !range !1479, !noundef !28
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !10971
  store i64 %e.07, i64* %58, align 8, !dbg !10971
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !10971
  store i64 %e.18, i64* %59, align 8, !dbg !10971
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !10967, metadata !DIExpression()), !dbg !11033
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !11033
  store i64 %e.07, i64* %60, align 8, !dbg !11033
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !11033
  store i64 %e.18, i64* %61, align 8, !dbg !11033
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !11034, metadata !DIExpression()), !dbg !11038
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !11038
  store i64 %e.07, i64* %62, align 8, !dbg !11038
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !11038
  store i64 %e.18, i64* %63, align 8, !dbg !11038
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !11033
  %65 = load i64, i64* %64, align 8, !dbg !11033
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !11033
  %67 = load i64, i64* %66, align 8, !dbg !11033, !range !1479, !noundef !28
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !11033
  store i64 %65, i64* %68, align 8, !dbg !11033
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !11033
  store i64 %67, i64* %69, align 8, !dbg !11033
  br label %bb17, !dbg !11040

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !11040

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !11042
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !11043, metadata !DIExpression()), !dbg !11048
  store i64 4, i64* %v1.dbg.spill11, align 8, !dbg !11049
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !11047, metadata !DIExpression()), !dbg !11048
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17h87e416972f67cf67E(i64 4, i64 %cap), !dbg !11048
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !11048
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !10895, metadata !DIExpression()), !dbg !11050
  br label %bb27, !dbg !11048

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h9459a5cb1ebe3a3fE(i64 %cap12), !dbg !11051
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !11051
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !11051
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !11051
  store i64 %new_layout.0, i64* %71, align 8, !dbg !11051
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !11051
  store i64 %new_layout.1, i64* %72, align 8, !dbg !11051
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !10897, metadata !DIExpression()), !dbg !11052
  br label %bb9, !dbg !11051

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9516373acb554c32E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i64*, i64 }* align 8 %self), !dbg !11053
  br label %bb10, !dbg !11053

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !11054
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h1902612814c64536E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !11000
  br label %bb11, !dbg !11000

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !10999
  %_61 = load i64, i64* %73, align 8, !dbg !10999, !range !1578, !noundef !28
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !10999

bb29:                                             ; preds = %bb11
  unreachable, !dbg !10999

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !10999
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !10999
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !10999
  %v.0 = load i8*, i8** %76, align 8, !dbg !10999, !nonnull !28, !noundef !28
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !10999
  %v.1 = load i64, i64* %77, align 8, !dbg !10999
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !10999
  store i8* %v.0, i8** %78, align 8, !dbg !10999
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !10999
  store i64 %v.1, i64* %79, align 8, !dbg !10999
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !10993, metadata !DIExpression()), !dbg !11055
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !11055
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !11055
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !11055
  store i8* %v.0, i8** %82, align 8, !dbg !11055
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !11055
  store i64 %v.1, i64* %83, align 8, !dbg !11055
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !11055
  store i64 0, i64* %84, align 8, !dbg !11055
  br label %bb12, !dbg !10999

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !10999
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !10999
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !10999
  %e.014 = load i64, i64* %87, align 8, !dbg !10999
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !10999
  %e.115 = load i64, i64* %88, align 8, !dbg !10999, !range !1479, !noundef !28
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !10999
  store i64 %e.014, i64* %89, align 8, !dbg !10999
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !10999
  store i64 %e.115, i64* %90, align 8, !dbg !10999
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !10996, metadata !DIExpression()), !dbg !11056
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !11056
  store i64 %e.014, i64* %91, align 8, !dbg !11056
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !11056
  store i64 %e.115, i64* %92, align 8, !dbg !11056
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !11056
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !11056
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !11056
  %96 = load i64, i64* %95, align 8, !dbg !11056
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !11056
  %98 = load i64, i64* %97, align 8, !dbg !11056, !range !1479, !noundef !28
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !11056
  store i64 %96, i64* %99, align 8, !dbg !11056
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !11056
  store i64 %98, i64* %100, align 8, !dbg !11056
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !11056
  store i64 1, i64* %101, align 8, !dbg !11056
  br label %bb12, !dbg !10999

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !11000
  %_34 = load i64, i64* %102, align 8, !dbg !11000, !range !1578, !noundef !28
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !11000

bb14:                                             ; preds = %bb12
  unreachable, !dbg !11000

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !11000
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !11000
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !11000
  %val.0 = load i8*, i8** %105, align 8, !dbg !11000, !nonnull !28, !noundef !28
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !11000
  %val.1 = load i64, i64* %106, align 8, !dbg !11000
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !11000
  store i8* %val.0, i8** %107, align 8, !dbg !11000
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !11000
  store i64 %val.1, i64* %108, align 8, !dbg !11000
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !10903, metadata !DIExpression()), !dbg !11057
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !11057
  store i8* %val.0, i8** %109, align 8, !dbg !11057
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !11057
  store i64 %val.1, i64* %110, align 8, !dbg !11057
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !10899, metadata !DIExpression()), !dbg !11058
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hd96ee3a8641a3a12E"({ i64*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !11059
  br label %bb16, !dbg !11059

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !11060
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !11060
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !11060
  %residual.018 = load i64, i64* %113, align 8, !dbg !11060
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !11060
  %residual.119 = load i64, i64* %114, align 8, !dbg !11060, !range !1479, !noundef !28
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !11060
  store i64 %residual.018, i64* %115, align 8, !dbg !11060
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !11060
  store i64 %residual.119, i64* %116, align 8, !dbg !11060
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !10901, metadata !DIExpression()), !dbg !11061
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !11061
  store i64 %residual.018, i64* %117, align 8, !dbg !11061
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !11061
  store i64 %residual.119, i64* %118, align 8, !dbg !11061
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !11011
  %e.021 = load i64, i64* %119, align 8, !dbg !11011
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !11011
  %e.122 = load i64, i64* %120, align 8, !dbg !11011, !range !1479, !noundef !28
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !11011
  store i64 %e.021, i64* %121, align 8, !dbg !11011
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !11011
  store i64 %e.122, i64* %122, align 8, !dbg !11011
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !11007, metadata !DIExpression()), !dbg !11062
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5f7fe61e0968c338E"(i64 %e.021, i64 %e.122), !dbg !11062
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !11062
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !11062
  br label %bb31, !dbg !11062

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !11062
  store i64 %_68.0, i64* %124, align 8, !dbg !11062
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !11062
  store i64 %_68.1, i64* %125, align 8, !dbg !11062
  br label %bb17, !dbg !11063

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !11065
  %127 = load i64, i64* %126, align 8, !dbg !11065
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !11065
  %129 = load i64, i64* %128, align 8, !dbg !11065, !range !7464, !noundef !28
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !11065
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !11065
  ret { i64, i64 } %131, !dbg !11065

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !11066
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !11066
  br label %bb18, !dbg !11065

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !11067
  store i64 %_5.0, i64* %133, align 8, !dbg !11067
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !11067
  store i64 %_5.1, i64* %134, align 8, !dbg !11067
  br label %bb18, !dbg !11040
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hd96ee3a8641a3a12E"({ i64*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 !dbg !11068 {
start:
  %ptr.dbg.spill6 = alloca { [0 x i8]*, i64 }*, align 8
  %ptr.dbg.spill5 = alloca { [0 x i8]*, i64 }*, align 8
  %ptr.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_17 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !11072, metadata !DIExpression()), !dbg !11075
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !11073, metadata !DIExpression()), !dbg !11076
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !11074, metadata !DIExpression()), !dbg !11077
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !11078, metadata !DIExpression()), !dbg !11082
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !11083
  store i8* %ptr.0, i8** %2, align 8, !dbg !11083
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !11083
  store i64 %ptr.1, i64* %3, align 8, !dbg !11083
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !11084, metadata !DIExpression()), !dbg !11088
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !11088
  store i8* %ptr.0, i8** %4, align 8, !dbg !11088
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !11088
  store i64 %ptr.1, i64* %5, align 8, !dbg !11088
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !11089, metadata !DIExpression()), !dbg !11093
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !11093
  %ptr = bitcast [0 x i8]* %_12.0 to { [0 x i8]*, i64 }*, !dbg !11088
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill4, align 8, !dbg !11088
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill4, metadata !11095, metadata !DIExpression()), !dbg !11099
  %6 = bitcast i64** %self1 to { [0 x i8]*, i64 }**, !dbg !11099
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %6, align 8, !dbg !11099
  %7 = bitcast i64** %self1 to { [0 x i8]*, i64 }**, !dbg !11082
  %_16 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %7, align 8, !dbg !11082
  store { [0 x i8]*, i64 }* %_16, { [0 x i8]*, i64 }** %ptr.dbg.spill5, align 8, !dbg !11082
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill5, metadata !11101, metadata !DIExpression()), !dbg !11105
  store { [0 x i8]*, i64 }* %_16, { [0 x i8]*, i64 }** %ptr.dbg.spill6, align 8, !dbg !11105
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill6, metadata !11107, metadata !DIExpression()), !dbg !11111
  %8 = bitcast i64** %_17 to { [0 x i8]*, i64 }**, !dbg !11111
  store { [0 x i8]*, i64 }* %_16, { [0 x i8]*, i64 }** %8, align 8, !dbg !11111
  %9 = load i64*, i64** %_17, align 8, !dbg !11105, !nonnull !28, !noundef !28
  store i64* %9, i64** %_4, align 8, !dbg !11105
  %10 = bitcast { i64*, i64 }* %self to i64**, !dbg !11113
  %11 = load i64*, i64** %_4, align 8, !dbg !11113, !nonnull !28, !noundef !28
  store i64* %11, i64** %10, align 8, !dbg !11113
  %12 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !11114
  store i64 %cap, i64* %12, align 8, !dbg !11114
  ret void, !dbg !11115
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h753802f2aa00204aE"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11116 {
start:
  %ptr.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { [0 x i8]*, i64 }*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i64*, align 8
  %_2 = alloca i64*, align 8
  %2 = alloca { i64*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !11120, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.declare(metadata i64** %pointer, metadata !11122, metadata !DIExpression()), !dbg !11128
  store i64 8, i64* %addr.dbg.spill, align 8, !dbg !11134
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !11146, metadata !DIExpression()), !dbg !11152
  %3 = bitcast { [0 x i8]*, i64 }** %1 to i64*, !dbg !11152
  store i64 8, i64* %3, align 8, !dbg !11152
  %ptr = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8, !dbg !11152
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill, align 8, !dbg !11152
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill, metadata !11142, metadata !DIExpression()), !dbg !11154
  br label %bb3, !dbg !11152

bb3:                                              ; preds = %start
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill1, align 8, !dbg !11154
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill1, metadata !11155, metadata !DIExpression()), !dbg !11159
  %4 = bitcast i64** %pointer to { [0 x i8]*, i64 }**, !dbg !11159
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %4, align 8, !dbg !11159
  %_12 = load i64*, i64** %pointer, align 8, !dbg !11128, !nonnull !28, !noundef !28
  store i64* %_12, i64** %_2, align 8, !dbg !11128
  %5 = bitcast { i64*, i64 }* %2 to i64**, !dbg !11161
  %6 = load i64*, i64** %_2, align 8, !dbg !11161, !nonnull !28, !noundef !28
  store i64* %6, i64** %5, align 8, !dbg !11161
  %7 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !11161
  store i64 0, i64* %7, align 8, !dbg !11161
  %8 = bitcast { i64*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !11161
  %9 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 0, !dbg !11162
  %10 = load i64*, i64** %9, align 8, !dbg !11162, !nonnull !28, !noundef !28
  %11 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %2, i32 0, i32 1, !dbg !11162
  %12 = load i64, i64* %11, align 8, !dbg !11162
  %13 = insertvalue { i64*, i64 } undef, i64* %10, 0, !dbg !11162
  %14 = insertvalue { i64*, i64 } %13, i64 %12, 1, !dbg !11162
  ret { i64*, i64 } %14, !dbg !11162

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !11163

bb2:                                              ; preds = %bb1
  %15 = bitcast { i8*, i32 }* %0 to i8**, !dbg !11164
  %16 = load i8*, i8** %15, align 8, !dbg !11164
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !11164
  %18 = load i32, i32* %17, align 8, !dbg !11164
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !11164
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !11164
  resume { i8*, i32 } %20, !dbg !11164
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h06188d9f7d316e3dE"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !11165 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !11169, metadata !DIExpression()), !dbg !11172
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !11170, metadata !DIExpression()), !dbg !11173
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !11171, metadata !DIExpression()), !dbg !11174
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hceca2e7dfe8279dcE"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !11175
  br label %bb1, !dbg !11175

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !11175

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !11176

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9c45ec13005a0ab5E"({ i64*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !11177
  br label %bb3, !dbg !11177

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !11178
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9c45ec13005a0ab5E"({ i64*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #4 !dbg !11179 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %slf, { i64*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %slf.dbg.spill, metadata !11183, metadata !DIExpression()), !dbg !11186
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !11184, metadata !DIExpression()), !dbg !11187
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !11185, metadata !DIExpression()), !dbg !11188
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h987b5bcb2ce470f8E"({ i64*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !11189
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !11189
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !11189
  br label %bb1, !dbg !11189

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h00be94c037ccf9fdE(i64 %_5.0, i64 %_5.1), !dbg !11190
  br label %bb2, !dbg !11190

bb2:                                              ; preds = %bb1
  ret void, !dbg !11191
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h28601dbc0e3e9f29E"(i32* %self.0, i32* %self.1) unnamed_addr #0 !dbg !11192 {
start:
  %self.dbg.spill = alloca { i32*, i32* }, align 8
  %0 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self.dbg.spill, i32 0, i32 0
  store i32* %self.0, i32** %0, align 8
  %1 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self.dbg.spill, i32 0, i32 1
  store i32* %self.1, i32** %1, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }* %self.dbg.spill, metadata !11196, metadata !DIExpression()), !dbg !11198
  %2 = insertvalue { i32*, i32* } undef, i32* %self.0, 0, !dbg !11199
  %3 = insertvalue { i32*, i32* } %2, i32* %self.1, 1, !dbg !11199
  ret { i32*, i32* } %3, !dbg !11199
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf62c8bb5b8244d66E"(%"core::str::iter::Lines"* sret(%"core::str::iter::Lines") %0, %"core::str::iter::Lines"* %self) unnamed_addr #0 !dbg !11200 {
start:
  call void @llvm.dbg.declare(metadata %"core::str::iter::Lines"* %self, metadata !11204, metadata !DIExpression()), !dbg !11206
  %1 = bitcast %"core::str::iter::Lines"* %0 to i8*, !dbg !11207
  %2 = bitcast %"core::str::iter::Lines"* %self to i8*, !dbg !11207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 72, i1 false), !dbg !11207
  ret void, !dbg !11208
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !11209 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !11213, metadata !DIExpression()), !dbg !11216
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11214, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11215, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !11219, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !11227, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !11238, metadata !DIExpression()), !dbg !11242
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !11243
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !11244, metadata !DIExpression()), !dbg !11248
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !11248
  %_4 = load i64, i64* %4, align 8, !dbg !11248
  %5 = icmp eq i64 %_4, 0, !dbg !11243
  br i1 %5, label %bb2, label %bb1, !dbg !11243

bb2:                                              ; preds = %start
  br label %bb3, !dbg !11249

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !11250
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !11251, metadata !DIExpression()), !dbg !11255
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !11255
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !11224, metadata !DIExpression()), !dbg !11225
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !11256
  %7 = load i64, i64* %6, align 8, !dbg !11256
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11256
  %9 = load i64, i64* %8, align 8, !dbg !11256, !range !6278, !noundef !28
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !11256
  store i64 %7, i64* %10, align 8, !dbg !11256
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !11256
  store i64 %9, i64* %11, align 8, !dbg !11256
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !11225
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !11257, metadata !DIExpression()), !dbg !11261
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !11261
  %_11 = load i64, i64* %12, align 8, !dbg !11261
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !11225
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !11235, metadata !DIExpression()), !dbg !11263
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !11263
  %14 = load i64, i64* %13, align 8, !dbg !11263, !range !6278, !noundef !28
  store i64 %14, i64* %self3, align 8, !dbg !11263
  %_18 = load i64, i64* %self3, align 8, !dbg !11242, !range !6278, !noundef !28
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !11242
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !11264, metadata !DIExpression()), !dbg !11271
  store i64 %_18, i64* %self2, align 8, !dbg !11271
  %_13 = load i64, i64* %self2, align 8, !dbg !11231
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #20, !dbg !11225
  br label %bb4, !dbg !11225

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !11249

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !11273
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb93721974950716eE"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !11274 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !11276, metadata !DIExpression()), !dbg !11278
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !11277, metadata !DIExpression()), !dbg !11279
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3279d76f6ee45f52E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true), !dbg !11280
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !11280
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !11280
  br label %bb1, !dbg !11280

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !11281
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !11281
  ret { i8*, i64 } %6, !dbg !11281
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h0d6a3619a715c446E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !11282 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !11286, metadata !DIExpression()), !dbg !11290
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11287, metadata !DIExpression()), !dbg !11291
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !11288, metadata !DIExpression()), !dbg !11292
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !11289, metadata !DIExpression()), !dbg !11293
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h3923d4caf9789d9bE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !11294
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !11294
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !11294
  br label %bb1, !dbg !11294

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !11295
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !11295
  ret { i8*, i64 } %8, !dbg !11295
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h760fa60d0593f80cE"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !11296 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !11298, metadata !DIExpression()), !dbg !11300
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !11299, metadata !DIExpression()), !dbg !11301
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3279d76f6ee45f52E(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !11302
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !11302
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !11302
  br label %bb1, !dbg !11302

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !11303
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !11303
  ret { i8*, i64 } %6, !dbg !11303
}

; <alloc::sync::Arc<T> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64* @"_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h139c9a59e8ca1255E"(i64** align 8 %self) unnamed_addr #0 !dbg !11304 {
start:
  %old_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca i64*, align 8
  %self.dbg.spill6 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64**, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11309, metadata !DIExpression()), !dbg !11312
  store i64** %self, i64*** %self.dbg.spill1, align 8, !dbg !11313
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !11314, metadata !DIExpression()), !dbg !11317
  store i64** %self, i64*** %self.dbg.spill2, align 8, !dbg !11317
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill2, metadata !11318, metadata !DIExpression()), !dbg !11322
  %self3 = load i64*, i64** %self, align 8, !dbg !11322, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !11322
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !11324, metadata !DIExpression()), !dbg !11328
  %_14 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !11328
  %self5 = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_14 to %"core::sync::atomic::AtomicUsize"*, !dbg !11313
  store %"core::sync::atomic::AtomicUsize"* %self5, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, align 8, !dbg !11313
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, metadata !11330, metadata !DIExpression()), !dbg !11338
  %self7 = bitcast %"core::sync::atomic::AtomicUsize"* %self5 to i64*, !dbg !11338
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11338
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11339, metadata !DIExpression()), !dbg !11343
; call core::sync::atomic::atomic_add
  %old_size = call i64 @_ZN4core4sync6atomic10atomic_add17h1664563a3ca77b86E(i64* %self7, i64 1, i8 0), !dbg !11338
  store i64 %old_size, i64* %old_size.dbg.spill, align 8, !dbg !11338
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !11310, metadata !DIExpression()), !dbg !11345
  br label %bb4, !dbg !11338

bb4:                                              ; preds = %start
  %_7 = icmp ugt i64 %old_size, 9223372036854775807, !dbg !11346
  br i1 %_7, label %bb1, label %bb2, !dbg !11346

bb2:                                              ; preds = %bb4
  %_10 = load i64*, i64** %self, align 8, !dbg !11347, !nonnull !28, !noundef !28
; call alloc::sync::Arc<T>::from_inner
  %0 = call i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h4f05692ff44a0bfbE"(i64* %_10), !dbg !11348
  br label %bb3, !dbg !11348

bb1:                                              ; preds = %bb4
  call void @llvm.trap(), !dbg !11349
  unreachable, !dbg !11349

bb3:                                              ; preds = %bb2
  ret i64* %0, !dbg !11350
}

; <alloc::sync::Arc<T> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64* @"_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hb0af00fa3275bdc1E"(i64** align 8 %self) unnamed_addr #0 !dbg !11351 {
start:
  %old_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca i64*, align 8
  %self.dbg.spill6 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64**, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11356, metadata !DIExpression()), !dbg !11359
  store i64** %self, i64*** %self.dbg.spill1, align 8, !dbg !11360
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !11361, metadata !DIExpression()), !dbg !11367
  store i64** %self, i64*** %self.dbg.spill2, align 8, !dbg !11367
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill2, metadata !11368, metadata !DIExpression()), !dbg !11375
  %self3 = load i64*, i64** %self, align 8, !dbg !11375, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !11375
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !11377, metadata !DIExpression()), !dbg !11381
  %_14 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::Inner>"*, !dbg !11381
  %self5 = bitcast %"alloc::sync::ArcInner<std::thread::Inner>"* %_14 to %"core::sync::atomic::AtomicUsize"*, !dbg !11360
  store %"core::sync::atomic::AtomicUsize"* %self5, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, align 8, !dbg !11360
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, metadata !11383, metadata !DIExpression()), !dbg !11389
  %self7 = bitcast %"core::sync::atomic::AtomicUsize"* %self5 to i64*, !dbg !11389
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11389
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11390, metadata !DIExpression()), !dbg !11394
; call core::sync::atomic::atomic_add
  %old_size = call i64 @_ZN4core4sync6atomic10atomic_add17h1664563a3ca77b86E(i64* %self7, i64 1, i8 0), !dbg !11389
  store i64 %old_size, i64* %old_size.dbg.spill, align 8, !dbg !11389
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !11357, metadata !DIExpression()), !dbg !11396
  br label %bb4, !dbg !11389

bb4:                                              ; preds = %start
  %_7 = icmp ugt i64 %old_size, 9223372036854775807, !dbg !11397
  br i1 %_7, label %bb1, label %bb2, !dbg !11397

bb2:                                              ; preds = %bb4
  %_10 = load i64*, i64** %self, align 8, !dbg !11398, !nonnull !28, !noundef !28
; call alloc::sync::Arc<T>::from_inner
  %0 = call i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h5ca78c3165444956E"(i64* %_10), !dbg !11399
  br label %bb3, !dbg !11399

bb1:                                              ; preds = %bb4
  call void @llvm.trap(), !dbg !11400
  unreachable, !dbg !11400

bb3:                                              ; preds = %bb2
  ret i64* %0, !dbg !11401
}

; <alloc::sync::Arc<T> as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64* @"_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hc8dc62dc592d2f9fE"(i64** align 8 %self) unnamed_addr #0 !dbg !11402 {
start:
  %old_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca i64*, align 8
  %self.dbg.spill6 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64**, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11406, metadata !DIExpression()), !dbg !11409
  store i64** %self, i64*** %self.dbg.spill1, align 8, !dbg !11410
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !11411, metadata !DIExpression()), !dbg !11417
  store i64** %self, i64*** %self.dbg.spill2, align 8, !dbg !11417
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill2, metadata !11418, metadata !DIExpression()), !dbg !11425
  %self3 = load i64*, i64** %self, align 8, !dbg !11425, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !11425
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !11427, metadata !DIExpression()), !dbg !11431
  %_14 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, !dbg !11431
  %self5 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %_14 to %"core::sync::atomic::AtomicUsize"*, !dbg !11410
  store %"core::sync::atomic::AtomicUsize"* %self5, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, align 8, !dbg !11410
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, metadata !11433, metadata !DIExpression()), !dbg !11439
  %self7 = bitcast %"core::sync::atomic::AtomicUsize"* %self5 to i64*, !dbg !11439
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11439
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11440, metadata !DIExpression()), !dbg !11444
; call core::sync::atomic::atomic_add
  %old_size = call i64 @_ZN4core4sync6atomic10atomic_add17h1664563a3ca77b86E(i64* %self7, i64 1, i8 0), !dbg !11439
  store i64 %old_size, i64* %old_size.dbg.spill, align 8, !dbg !11439
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !11407, metadata !DIExpression()), !dbg !11446
  br label %bb4, !dbg !11439

bb4:                                              ; preds = %start
  %_7 = icmp ugt i64 %old_size, 9223372036854775807, !dbg !11447
  br i1 %_7, label %bb1, label %bb2, !dbg !11447

bb2:                                              ; preds = %bb4
  %_10 = load i64*, i64** %self, align 8, !dbg !11448, !nonnull !28, !noundef !28
; call alloc::sync::Arc<T>::from_inner
  %0 = call i64* @"_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17hbdeb4c2f03f74c32E"(i64* %_10), !dbg !11449
  br label %bb3, !dbg !11449

bb1:                                              ; preds = %bb4
  call void @llvm.trap(), !dbg !11450
  unreachable, !dbg !11450

bb3:                                              ; preds = %bb2
  ret i64* %0, !dbg !11451
}

; <T as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN66_$LT$T$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h06ec03921d146e9aE"(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* sret(%"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>") %0, %"alloc::string::String"* %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11452 {
start:
  %i.dbg.spill = alloca i64, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill2 = alloca i64, align 8
  %data.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_29 = alloca { i8*, i64 }, align 8
  %_28 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_16 = alloca i8, align 1
  %_15 = alloca %"alloc::vec::Vec<u8>", align 8
  %_13 = alloca %"alloc::vec::Vec<u8>", align 8
  %_11 = alloca %"alloc::ffi::c_str::NulError", align 8
  %_4 = alloca { i64, i64 }, align 8
  %_3 = alloca %"alloc::string::String", align 8
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %self, metadata !11457, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %bytes, metadata !11458, metadata !DIExpression()), !dbg !11463
  %2 = bitcast %"alloc::string::String"* %_3 to i8*, !dbg !11464
  %3 = bitcast %"alloc::string::String"* %self to i8*, !dbg !11464
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !11464
  store i8 1, i8* %_16, align 1, !dbg !11464
; call <T as core::convert::Into<U>>::into
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc0985960b0716d81E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %bytes, %"alloc::string::String"* %_3), !dbg !11464
  br label %bb1, !dbg !11464

bb1:                                              ; preds = %start
  store %"alloc::vec::Vec<u8>"* %bytes, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8, !dbg !11465
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !11466, metadata !DIExpression()), !dbg !11473
; invoke alloc::vec::Vec<T,A>::as_ptr
  %data = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h953c86afc66fb6fdE"(%"alloc::vec::Vec<u8>"* align 8 %bytes)
          to label %bb11 unwind label %cleanup, !dbg !11473

bb10:                                             ; preds = %cleanup
  %4 = load i8, i8* %_16, align 1, !dbg !11474, !range !1099, !noundef !28
  %5 = trunc i8 %4 to i1, !dbg !11474
  br i1 %5, label %bb9, label %bb8, !dbg !11474

cleanup:                                          ; preds = %bb3, %bb11, %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb10

bb11:                                             ; preds = %bb1
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !11473
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !11475, metadata !DIExpression()), !dbg !11492
  %11 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %bytes, i32 0, i32 1, !dbg !11473
  %len = load i64, i64* %11, align 8, !dbg !11473
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !11473
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !11483, metadata !DIExpression()), !dbg !11492
  store i8* %data, i8** %data.dbg.spill1, align 8, !dbg !11492
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill1, metadata !11494, metadata !DIExpression()), !dbg !11499
  store i64 %len, i64* %len.dbg.spill2, align 8, !dbg !11492
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill2, metadata !11498, metadata !DIExpression()), !dbg !11499
  store i8* %data, i8** %self.dbg.spill3, align 8, !dbg !11499
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !11501, metadata !DIExpression()), !dbg !11505
  %data_address = bitcast i8* %data to {}*, !dbg !11505
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !11505
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !11507, metadata !DIExpression()), !dbg !11512
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !11499
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !11511, metadata !DIExpression()), !dbg !11512
  %12 = bitcast { i8*, i64 }* %_29 to {}**, !dbg !11512
  store {}* %data_address, {}** %12, align 8, !dbg !11512
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_29, i32 0, i32 1, !dbg !11512
  store i64 %len, i64* %13, align 8, !dbg !11512
  %14 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_28 to { i8*, i64 }*, !dbg !11512
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_29, i32 0, i32 0, !dbg !11512
  %16 = load i8*, i8** %15, align 8, !dbg !11512
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_29, i32 0, i32 1, !dbg !11512
  %18 = load i64, i64* %17, align 8, !dbg !11512
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %14, i32 0, i32 0, !dbg !11512
  store i8* %16, i8** %19, align 8, !dbg !11512
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %14, i32 0, i32 1, !dbg !11512
  store i64 %18, i64* %20, align 8, !dbg !11512
  %21 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_28 to { [0 x i8]*, i64 }*, !dbg !11512
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 0, !dbg !11512
  %_21.0 = load [0 x i8]*, [0 x i8]** %22, align 8, !dbg !11512
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %21, i32 0, i32 1, !dbg !11512
  %_21.1 = load i64, i64* %23, align 8, !dbg !11512
; invoke core::slice::memchr::memchr
  %24 = invoke { i64, i64 } @_ZN4core5slice6memchr6memchr17h89ad2c6d6bd525ccE(i8 0, [0 x i8]* align 1 %_21.0, i64 %_21.1)
          to label %bb2 unwind label %cleanup, !dbg !11514

bb2:                                              ; preds = %bb11
  store { i64, i64 } %24, { i64, i64 }* %_4, align 8, !dbg !11514
  %25 = bitcast { i64, i64 }* %_4 to i64*, !dbg !11514
  %_9 = load i64, i64* %25, align 8, !dbg !11514, !range !1578, !noundef !28
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !11515

bb4:                                              ; preds = %bb2
  unreachable, !dbg !11514

bb3:                                              ; preds = %bb2
  store i8 0, i8* %_16, align 1, !dbg !11516
  %26 = bitcast %"alloc::vec::Vec<u8>"* %_15 to i8*, !dbg !11516
  %27 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*, !dbg !11516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false), !dbg !11516
; invoke alloc::ffi::c_str::CString::_from_vec_unchecked
  %28 = invoke { i8*, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17hb02fdd297b1bddd9E(%"alloc::vec::Vec<u8>"* %_15)
          to label %bb6 unwind label %cleanup, !dbg !11517

bb5:                                              ; preds = %bb2
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !11518
  %i = load i64, i64* %29, align 8, !dbg !11518
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !11518
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !11460, metadata !DIExpression()), !dbg !11519
  %30 = bitcast %"alloc::vec::Vec<u8>"* %_13 to i8*, !dbg !11520
  %31 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*, !dbg !11520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false), !dbg !11520
  %32 = bitcast %"alloc::ffi::c_str::NulError"* %_11 to i64*, !dbg !11521
  store i64 %i, i64* %32, align 8, !dbg !11521
  %33 = getelementptr inbounds %"alloc::ffi::c_str::NulError", %"alloc::ffi::c_str::NulError"* %_11, i32 0, i32 1, !dbg !11521
  %34 = bitcast %"alloc::vec::Vec<u8>"* %33 to i8*, !dbg !11521
  %35 = bitcast %"alloc::vec::Vec<u8>"* %_13 to i8*, !dbg !11521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false), !dbg !11521
  %36 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %0 to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"*, !dbg !11522
  %37 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Err"* %36, i32 0, i32 1, !dbg !11522
  %38 = bitcast %"alloc::ffi::c_str::NulError"* %37 to i8*, !dbg !11522
  %39 = bitcast %"alloc::ffi::c_str::NulError"* %_11 to i8*, !dbg !11522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 32, i1 false), !dbg !11522
  %40 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %0 to i64*, !dbg !11522
  store i64 1, i64* %40, align 8, !dbg !11522
  br label %bb7, !dbg !11523

bb7:                                              ; preds = %bb6, %bb5
  ret void, !dbg !11524

bb6:                                              ; preds = %bb3
  %_14.0 = extractvalue { i8*, i64 } %28, 0, !dbg !11517
  %_14.1 = extractvalue { i8*, i64 } %28, 1, !dbg !11517
  %41 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %0 to %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"*, !dbg !11525
  %42 = getelementptr inbounds %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok", %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>::Ok"* %41, i32 0, i32 1, !dbg !11525
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %42, i32 0, i32 0, !dbg !11525
  store i8* %_14.0, i8** %43, align 8, !dbg !11525
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %42, i32 0, i32 1, !dbg !11525
  store i64 %_14.1, i64* %44, align 8, !dbg !11525
  %45 = bitcast %"core::result::Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>"* %0 to i64*, !dbg !11525
  store i64 0, i64* %45, align 8, !dbg !11525
  br label %bb7, !dbg !11526

bb8:                                              ; preds = %bb9, %bb10
  %46 = bitcast { i8*, i32 }* %1 to i8**, !dbg !11527
  %47 = load i8*, i8** %46, align 8, !dbg !11527
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !11527
  %49 = load i32, i32* %48, align 8, !dbg !11527
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !11527
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !11527
  resume { i8*, i32 } %51, !dbg !11527

bb9:                                              ; preds = %bb10
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hbabdf85196cda4deE"(%"alloc::vec::Vec<u8>"* %bytes) #18
          to label %bb8 unwind label %abort, !dbg !11474

abort:                                            ; preds = %bb9
  %52 = landingpad { i8*, i32 }
          cleanup, !dbg !11527
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !11527
  unreachable, !dbg !11527
}

; <alloc::boxed::Box<T,A> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN67_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h7a8d1becfc6dcc7bE"({ {}*, [3 x i64]* }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !11528 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %self, { {}*, [3 x i64]* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %self.dbg.spill, metadata !11534, metadata !DIExpression()), !dbg !11536
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !11535, metadata !DIExpression()), !dbg !11537
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %self, i32 0, i32 0, !dbg !11538
  %_6.0 = load {}*, {}** %0, align 8, !dbg !11538, !nonnull !28, !align !1104, !noundef !28
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %self, i32 0, i32 1, !dbg !11538
  %_6.1 = load [3 x i64]*, [3 x i64]** %1, align 8, !dbg !11538, !nonnull !28, !align !1582, !noundef !28
  %2 = bitcast {}* %_6.0 to i8*, !dbg !11538
  %3 = bitcast [3 x i64]* %_6.1 to i64*, !dbg !11538
  %_7.0 = bitcast i8* %2 to {}*, !dbg !11538
  %_7.1 = bitcast i64* %3 to [3 x i64]*, !dbg !11538
; call <dyn core::any::Any+core::marker::Send as core::fmt::Debug>::fmt
  %4 = call zeroext i1 @"_ZN82_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$u20$as$u20$core..fmt..Debug$GT$3fmt17h8280e0bd264d45c8E"({}* align 1 %_7.0, [3 x i64]* align 8 %_7.1, %"core::fmt::Formatter"* align 8 %f), !dbg !11539
  br label %bb1, !dbg !11539

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !11540
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h09b34d7a0183b9e1E"(i64** align 8 %self) unnamed_addr #0 !dbg !11541 {
start:
  %self.dbg.spill8 = alloca i64*, align 8
  %self.dbg.spill6 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64**, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_8 = alloca i8, align 1
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11544, metadata !DIExpression()), !dbg !11545
  store i64** %self, i64*** %self.dbg.spill1, align 8, !dbg !11546
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !11547, metadata !DIExpression()), !dbg !11550
  store i64** %self, i64*** %self.dbg.spill2, align 8, !dbg !11550
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill2, metadata !11551, metadata !DIExpression()), !dbg !11555
  %self3 = load i64*, i64** %self, align 8, !dbg !11555, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !11555
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !11557, metadata !DIExpression()), !dbg !11561
  %_14 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, !dbg !11561
  %self5 = bitcast %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_14 to %"core::sync::atomic::AtomicUsize"*, !dbg !11546
  store %"core::sync::atomic::AtomicUsize"* %self5, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, align 8, !dbg !11546
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, metadata !11563, metadata !DIExpression()), !dbg !11569
  %self7 = bitcast %"core::sync::atomic::AtomicUsize"* %self5 to i64*, !dbg !11569
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11569
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11570, metadata !DIExpression()), !dbg !11574
; call core::sync::atomic::atomic_sub
  %_2 = call i64 @_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E(i64* %self7, i64 1, i8 1), !dbg !11569
  br label %bb6, !dbg !11569

bb6:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 1, !dbg !11546
  br i1 %0, label %bb2, label %bb1, !dbg !11546

bb2:                                              ; preds = %bb6
  store i8 2, i8* %_8, align 1, !dbg !11576
  %1 = load i8, i8* %_8, align 1, !dbg !11576, !range !6057, !noundef !28
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h15f3db8a753d287dE(i8 %1), !dbg !11576
  br label %bb3, !dbg !11576

bb1:                                              ; preds = %bb6
  br label %bb5, !dbg !11577

bb5:                                              ; preds = %bb4, %bb1
  ret void, !dbg !11577

bb3:                                              ; preds = %bb2
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hfa94940a74c27332E"(i64** align 8 %self), !dbg !11578
  br label %bb4, !dbg !11578

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !11577
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0cc1e64477d80e45E"(i64** align 8 %self) unnamed_addr #0 !dbg !11579 {
start:
  %self.dbg.spill8 = alloca i64*, align 8
  %self.dbg.spill6 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64**, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_8 = alloca i8, align 1
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11581, metadata !DIExpression()), !dbg !11582
  store i64** %self, i64*** %self.dbg.spill1, align 8, !dbg !11583
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !11584, metadata !DIExpression()), !dbg !11587
  store i64** %self, i64*** %self.dbg.spill2, align 8, !dbg !11587
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill2, metadata !11588, metadata !DIExpression()), !dbg !11592
  %self3 = load i64*, i64** %self, align 8, !dbg !11592, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !11592
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !11594, metadata !DIExpression()), !dbg !11598
  %_14 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::Inner>"*, !dbg !11598
  %self5 = bitcast %"alloc::sync::ArcInner<std::thread::Inner>"* %_14 to %"core::sync::atomic::AtomicUsize"*, !dbg !11583
  store %"core::sync::atomic::AtomicUsize"* %self5, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, align 8, !dbg !11583
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, metadata !11600, metadata !DIExpression()), !dbg !11606
  %self7 = bitcast %"core::sync::atomic::AtomicUsize"* %self5 to i64*, !dbg !11606
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11606
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11607, metadata !DIExpression()), !dbg !11611
; call core::sync::atomic::atomic_sub
  %_2 = call i64 @_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E(i64* %self7, i64 1, i8 1), !dbg !11606
  br label %bb6, !dbg !11606

bb6:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 1, !dbg !11583
  br i1 %0, label %bb2, label %bb1, !dbg !11583

bb2:                                              ; preds = %bb6
  store i8 2, i8* %_8, align 1, !dbg !11613
  %1 = load i8, i8* %_8, align 1, !dbg !11613, !range !6057, !noundef !28
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h15f3db8a753d287dE(i8 %1), !dbg !11613
  br label %bb3, !dbg !11613

bb1:                                              ; preds = %bb6
  br label %bb5, !dbg !11614

bb5:                                              ; preds = %bb4, %bb1
  ret void, !dbg !11614

bb3:                                              ; preds = %bb2
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h32b6f12d9fa8a34aE"(i64** align 8 %self), !dbg !11615
  br label %bb4, !dbg !11615

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !11614
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3faf7497f9d00665E"(i64** align 8 %self) unnamed_addr #0 !dbg !11616 {
start:
  %self.dbg.spill8 = alloca i64*, align 8
  %self.dbg.spill6 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64**, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_8 = alloca i8, align 1
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11618, metadata !DIExpression()), !dbg !11619
  store i64** %self, i64*** %self.dbg.spill1, align 8, !dbg !11620
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !11621, metadata !DIExpression()), !dbg !11624
  store i64** %self, i64*** %self.dbg.spill2, align 8, !dbg !11624
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill2, metadata !11625, metadata !DIExpression()), !dbg !11629
  %self3 = load i64*, i64** %self, align 8, !dbg !11629, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !11629
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !11631, metadata !DIExpression()), !dbg !11635
  %_14 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, !dbg !11635
  %self5 = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %_14 to %"core::sync::atomic::AtomicUsize"*, !dbg !11620
  store %"core::sync::atomic::AtomicUsize"* %self5, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, align 8, !dbg !11620
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, metadata !11637, metadata !DIExpression()), !dbg !11643
  %self7 = bitcast %"core::sync::atomic::AtomicUsize"* %self5 to i64*, !dbg !11643
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11643
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11644, metadata !DIExpression()), !dbg !11648
; call core::sync::atomic::atomic_sub
  %_2 = call i64 @_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E(i64* %self7, i64 1, i8 1), !dbg !11643
  br label %bb6, !dbg !11643

bb6:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 1, !dbg !11620
  br i1 %0, label %bb2, label %bb1, !dbg !11620

bb2:                                              ; preds = %bb6
  store i8 2, i8* %_8, align 1, !dbg !11650
  %1 = load i8, i8* %_8, align 1, !dbg !11650, !range !6057, !noundef !28
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h15f3db8a753d287dE(i8 %1), !dbg !11650
  br label %bb3, !dbg !11650

bb1:                                              ; preds = %bb6
  br label %bb5, !dbg !11651

bb5:                                              ; preds = %bb4, %bb1
  ret void, !dbg !11651

bb3:                                              ; preds = %bb2
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h7cada30ff35c6670E"(i64** align 8 %self), !dbg !11652
  br label %bb4, !dbg !11652

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !11651
}

; <alloc::sync::Arc<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he236f3fc22265f07E"(i64** align 8 %self) unnamed_addr #0 !dbg !11653 {
start:
  %self.dbg.spill8 = alloca i64*, align 8
  %self.dbg.spill6 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca i64**, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_8 = alloca i8, align 1
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11655, metadata !DIExpression()), !dbg !11656
  store i64** %self, i64*** %self.dbg.spill1, align 8, !dbg !11657
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !11658, metadata !DIExpression()), !dbg !11661
  store i64** %self, i64*** %self.dbg.spill2, align 8, !dbg !11661
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill2, metadata !11662, metadata !DIExpression()), !dbg !11666
  %self3 = load i64*, i64** %self, align 8, !dbg !11666, !nonnull !28, !noundef !28
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !11666
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !11668, metadata !DIExpression()), !dbg !11672
  %_14 = bitcast i64* %self3 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !11672
  %self5 = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_14 to %"core::sync::atomic::AtomicUsize"*, !dbg !11657
  store %"core::sync::atomic::AtomicUsize"* %self5, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, align 8, !dbg !11657
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill6, metadata !11674, metadata !DIExpression()), !dbg !11680
  %self7 = bitcast %"core::sync::atomic::AtomicUsize"* %self5 to i64*, !dbg !11680
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11680
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11681, metadata !DIExpression()), !dbg !11685
; call core::sync::atomic::atomic_sub
  %_2 = call i64 @_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E(i64* %self7, i64 1, i8 1), !dbg !11680
  br label %bb6, !dbg !11680

bb6:                                              ; preds = %start
  %0 = icmp eq i64 %_2, 1, !dbg !11657
  br i1 %0, label %bb2, label %bb1, !dbg !11657

bb2:                                              ; preds = %bb6
  store i8 2, i8* %_8, align 1, !dbg !11687
  %1 = load i8, i8* %_8, align 1, !dbg !11687, !range !6057, !noundef !28
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h15f3db8a753d287dE(i8 %1), !dbg !11687
  br label %bb3, !dbg !11687

bb1:                                              ; preds = %bb6
  br label %bb5, !dbg !11688

bb5:                                              ; preds = %bb4, %bb1
  ret void, !dbg !11688

bb3:                                              ; preds = %bb2
; call alloc::sync::Arc<T>::drop_slow
  call void @"_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb3651e22e411dae6E"(i64** align 8 %self), !dbg !11689
  br label %bb4, !dbg !11689

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !11688
}

; <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf8df026b45c34b8eE"({ i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !11690 {
start:
  %0 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !11696, metadata !DIExpression()), !dbg !11697
  %1 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !11698
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !11698
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !11698, !nonnull !28, !align !1104, !noundef !28
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !11698
  %_4.1 = load i64, i64* %3, align 8, !dbg !11698
  %4 = bitcast [0 x i8]* %_4.0 to i8*, !dbg !11698
  %_5.0 = bitcast i8* %4 to [0 x i8]*, !dbg !11698
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !11698
  store [0 x i8]* %_5.0, [0 x i8]** %5, align 8, !dbg !11698
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !11698
  store i64 %_4.1, i64* %6, align 8, !dbg !11698
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !11699, metadata !DIExpression()), !dbg !11706
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !11706
  store [0 x i8]* %_5.0, [0 x i8]** %7, align 8, !dbg !11706
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !11706
  store i64 %_4.1, i64* %8, align 8, !dbg !11706
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !11707, metadata !DIExpression()), !dbg !11723
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !11723
  store [0 x i8]* %_5.0, [0 x i8]** %9, align 8, !dbg !11723
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !11723
  store i64 %_4.1, i64* %10, align 8, !dbg !11723
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !11725, metadata !DIExpression()), !dbg !11729
  %self3 = bitcast [0 x i8]* %_5.0 to i8*, !dbg !11729
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !11729
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !11731, metadata !DIExpression()), !dbg !11736
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !11736
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !11737, metadata !DIExpression()), !dbg !11742
  %11 = getelementptr inbounds i8, i8* %self3, i64 0, !dbg !11742
  store i8* %11, i8** %0, align 8, !dbg !11742
  %_20 = load i8*, i8** %0, align 8, !dbg !11742
  br label %bb1, !dbg !11742

bb1:                                              ; preds = %start
  store i8 0, i8* %_20, align 1, !dbg !11744
  ret void, !dbg !11745
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h238b41a7943c0222E"(i64** align 8 %self) unnamed_addr #1 !dbg !11746 {
start:
  %self.dbg.spill8 = alloca i64*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill6 = alloca i64*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %self.dbg.spill1 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %inner.dbg.spill = alloca { i64*, i64* }, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_13 = alloca i8*, align 8
  %_11 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
  %inner = alloca { i64*, i64* }, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11752, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %inner, metadata !11753, metadata !DIExpression()), !dbg !11758
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h1637794c46f734c6E"(i64** align 8 %self), !dbg !11759
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8, !dbg !11759
  br label %bb1, !dbg !11759

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**, !dbg !11760
  %2 = load {}*, {}** %1, align 8, !dbg !11760
  %3 = icmp eq {}* %2, null, !dbg !11760
  %_5 = select i1 %3, i64 0, i64 1, !dbg !11760
  %4 = icmp eq i64 %_5, 1, !dbg !11760
  br i1 %4, label %bb2, label %bb3, !dbg !11760

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*, !dbg !11761
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0, !dbg !11761
  %inner.0 = load i64*, i64** %6, align 8, !dbg !11761, !nonnull !28, !align !1582, !noundef !28
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1, !dbg !11761
  %inner.1 = load i64*, i64** %7, align 8, !dbg !11761, !nonnull !28, !align !1582, !noundef !28
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner.dbg.spill, i32 0, i32 0, !dbg !11761
  store i64* %inner.0, i64** %8, align 8, !dbg !11761
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner.dbg.spill, i32 0, i32 1, !dbg !11761
  store i64* %inner.1, i64** %9, align 8, !dbg !11761
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %inner.dbg.spill, metadata !11755, metadata !DIExpression()), !dbg !11761
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner, i32 0, i32 0, !dbg !11762
  store i64* %inner.0, i64** %10, align 8, !dbg !11762
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner, i32 0, i32 1, !dbg !11762
  store i64* %inner.1, i64** %11, align 8, !dbg !11762
  %12 = bitcast { i64*, i64* }* %inner to %"core::sync::atomic::AtomicUsize"**, !dbg !11763
  %_20 = load %"core::sync::atomic::AtomicUsize"*, %"core::sync::atomic::AtomicUsize"** %12, align 8, !dbg !11763, !nonnull !28, !align !1582, !noundef !28
  store %"core::sync::atomic::AtomicUsize"* %_20, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill1, align 8, !dbg !11763
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill1, metadata !11764, metadata !DIExpression()), !dbg !11770
  %self2 = bitcast %"core::sync::atomic::AtomicUsize"* %_20 to i64*, !dbg !11770
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !11770
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !11771, metadata !DIExpression()), !dbg !11775
; call core::sync::atomic::atomic_sub
  %_7 = call i64 @_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E(i64* %self2, i64 1, i8 1), !dbg !11770
  br label %bb11, !dbg !11770

bb3:                                              ; preds = %bb1
  br label %bb10, !dbg !11777

bb10:                                             ; preds = %bb9, %bb3
  ret void, !dbg !11777

bb11:                                             ; preds = %bb2
  %13 = icmp eq i64 %_7, 1, !dbg !11763
  br i1 %13, label %bb4, label %bb8, !dbg !11763

bb4:                                              ; preds = %bb11
  store i8 2, i8* %_11, align 1, !dbg !11778
  %14 = load i8, i8* %_11, align 1, !dbg !11778, !range !6057, !noundef !28
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h15f3db8a753d287dE(i8 %14), !dbg !11778
  br label %bb5, !dbg !11778

bb8:                                              ; preds = %bb11
  br label %bb9, !dbg !11779

bb9:                                              ; preds = %bb7, %bb8
  br label %bb10, !dbg !11777

bb5:                                              ; preds = %bb4
  %self4 = load i64*, i64** %self, align 8, !dbg !11780, !nonnull !28, !noundef !28
  store i64* %self4, i64** %self.dbg.spill5, align 8, !dbg !11780
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !11781, metadata !DIExpression()), !dbg !11788
  store i64* %self4, i64** %self.dbg.spill6, align 8, !dbg !11788
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill6, metadata !11789, metadata !DIExpression()), !dbg !11793
  %_31 = bitcast i64* %self4 to %"alloc::sync::ArcInner<std::thread::Inner>"*, !dbg !11793
  %ptr = bitcast %"alloc::sync::ArcInner<std::thread::Inner>"* %_31 to i8*, !dbg !11788
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !11788
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11795, metadata !DIExpression()), !dbg !11799
  store i8* %ptr, i8** %_13, align 8, !dbg !11799
  %self7 = load i64*, i64** %self, align 8, !dbg !11801, !nonnull !28, !noundef !28
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11801
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11802, metadata !DIExpression()), !dbg !11806
  %_35 = bitcast i64* %self7 to %"alloc::sync::ArcInner<std::thread::Inner>"*, !dbg !11806
; call core::alloc::layout::Layout::for_value_raw
  %15 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h1ce445a8822533ceE(%"alloc::sync::ArcInner<std::thread::Inner>"* %_35), !dbg !11807
  %_15.0 = extractvalue { i64, i64 } %15, 0, !dbg !11807
  %_15.1 = extractvalue { i64, i64 } %15, 1, !dbg !11807
  br label %bb6, !dbg !11807

bb6:                                              ; preds = %bb5
  %16 = load i8*, i8** %_13, align 8, !dbg !11808, !nonnull !28, !noundef !28
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc470 to %"alloc::alloc::Global"*), i8* %16, i64 %_15.0, i64 %_15.1), !dbg !11808
  br label %bb7, !dbg !11808

bb7:                                              ; preds = %bb6
  br label %bb9, !dbg !11779
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48f4b0751265aadcE"(i64** align 8 %self) unnamed_addr #1 !dbg !11809 {
start:
  %self.dbg.spill8 = alloca i64*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill6 = alloca i64*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %self.dbg.spill1 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %inner.dbg.spill = alloca { i64*, i64* }, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_13 = alloca i8*, align 8
  %_11 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
  %inner = alloca { i64*, i64* }, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11814, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %inner, metadata !11815, metadata !DIExpression()), !dbg !11820
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h186709c82b4962d4E"(i64** align 8 %self), !dbg !11821
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8, !dbg !11821
  br label %bb1, !dbg !11821

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**, !dbg !11822
  %2 = load {}*, {}** %1, align 8, !dbg !11822
  %3 = icmp eq {}* %2, null, !dbg !11822
  %_5 = select i1 %3, i64 0, i64 1, !dbg !11822
  %4 = icmp eq i64 %_5, 1, !dbg !11822
  br i1 %4, label %bb2, label %bb3, !dbg !11822

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*, !dbg !11823
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0, !dbg !11823
  %inner.0 = load i64*, i64** %6, align 8, !dbg !11823, !nonnull !28, !align !1582, !noundef !28
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1, !dbg !11823
  %inner.1 = load i64*, i64** %7, align 8, !dbg !11823, !nonnull !28, !align !1582, !noundef !28
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner.dbg.spill, i32 0, i32 0, !dbg !11823
  store i64* %inner.0, i64** %8, align 8, !dbg !11823
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner.dbg.spill, i32 0, i32 1, !dbg !11823
  store i64* %inner.1, i64** %9, align 8, !dbg !11823
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %inner.dbg.spill, metadata !11817, metadata !DIExpression()), !dbg !11823
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner, i32 0, i32 0, !dbg !11824
  store i64* %inner.0, i64** %10, align 8, !dbg !11824
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner, i32 0, i32 1, !dbg !11824
  store i64* %inner.1, i64** %11, align 8, !dbg !11824
  %12 = bitcast { i64*, i64* }* %inner to %"core::sync::atomic::AtomicUsize"**, !dbg !11825
  %_20 = load %"core::sync::atomic::AtomicUsize"*, %"core::sync::atomic::AtomicUsize"** %12, align 8, !dbg !11825, !nonnull !28, !align !1582, !noundef !28
  store %"core::sync::atomic::AtomicUsize"* %_20, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill1, align 8, !dbg !11825
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill1, metadata !11826, metadata !DIExpression()), !dbg !11832
  %self2 = bitcast %"core::sync::atomic::AtomicUsize"* %_20 to i64*, !dbg !11832
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !11832
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !11833, metadata !DIExpression()), !dbg !11837
; call core::sync::atomic::atomic_sub
  %_7 = call i64 @_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E(i64* %self2, i64 1, i8 1), !dbg !11832
  br label %bb11, !dbg !11832

bb3:                                              ; preds = %bb1
  br label %bb10, !dbg !11839

bb10:                                             ; preds = %bb9, %bb3
  ret void, !dbg !11839

bb11:                                             ; preds = %bb2
  %13 = icmp eq i64 %_7, 1, !dbg !11825
  br i1 %13, label %bb4, label %bb8, !dbg !11825

bb4:                                              ; preds = %bb11
  store i8 2, i8* %_11, align 1, !dbg !11840
  %14 = load i8, i8* %_11, align 1, !dbg !11840, !range !6057, !noundef !28
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h15f3db8a753d287dE(i8 %14), !dbg !11840
  br label %bb5, !dbg !11840

bb8:                                              ; preds = %bb11
  br label %bb9, !dbg !11841

bb9:                                              ; preds = %bb7, %bb8
  br label %bb10, !dbg !11839

bb5:                                              ; preds = %bb4
  %self4 = load i64*, i64** %self, align 8, !dbg !11842, !nonnull !28, !noundef !28
  store i64* %self4, i64** %self.dbg.spill5, align 8, !dbg !11842
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !11843, metadata !DIExpression()), !dbg !11850
  store i64* %self4, i64** %self.dbg.spill6, align 8, !dbg !11850
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill6, metadata !11851, metadata !DIExpression()), !dbg !11855
  %_31 = bitcast i64* %self4 to %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, !dbg !11855
  %ptr = bitcast %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_31 to i8*, !dbg !11850
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !11850
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11857, metadata !DIExpression()), !dbg !11861
  store i8* %ptr, i8** %_13, align 8, !dbg !11861
  %self7 = load i64*, i64** %self, align 8, !dbg !11863, !nonnull !28, !noundef !28
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11863
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11864, metadata !DIExpression()), !dbg !11868
  %_35 = bitcast i64* %self7 to %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, !dbg !11868
; call core::alloc::layout::Layout::for_value_raw
  %15 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h1a76ce0b01bf9f63E(%"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_35), !dbg !11869
  %_15.0 = extractvalue { i64, i64 } %15, 0, !dbg !11869
  %_15.1 = extractvalue { i64, i64 } %15, 1, !dbg !11869
  br label %bb6, !dbg !11869

bb6:                                              ; preds = %bb5
  %16 = load i8*, i8** %_13, align 8, !dbg !11870, !nonnull !28, !noundef !28
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc470 to %"alloc::alloc::Global"*), i8* %16, i64 %_15.0, i64 %_15.1), !dbg !11870
  br label %bb7, !dbg !11870

bb7:                                              ; preds = %bb6
  br label %bb9, !dbg !11841
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8eec142c20276135E"(i64** align 8 %self) unnamed_addr #1 !dbg !11871 {
start:
  %self.dbg.spill8 = alloca i64*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill6 = alloca i64*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %self.dbg.spill1 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %inner.dbg.spill = alloca { i64*, i64* }, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_13 = alloca i8*, align 8
  %_11 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
  %inner = alloca { i64*, i64* }, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11876, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %inner, metadata !11877, metadata !DIExpression()), !dbg !11882
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h34a5dc89203c17e7E"(i64** align 8 %self), !dbg !11883
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8, !dbg !11883
  br label %bb1, !dbg !11883

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**, !dbg !11884
  %2 = load {}*, {}** %1, align 8, !dbg !11884
  %3 = icmp eq {}* %2, null, !dbg !11884
  %_5 = select i1 %3, i64 0, i64 1, !dbg !11884
  %4 = icmp eq i64 %_5, 1, !dbg !11884
  br i1 %4, label %bb2, label %bb3, !dbg !11884

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*, !dbg !11885
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0, !dbg !11885
  %inner.0 = load i64*, i64** %6, align 8, !dbg !11885, !nonnull !28, !align !1582, !noundef !28
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1, !dbg !11885
  %inner.1 = load i64*, i64** %7, align 8, !dbg !11885, !nonnull !28, !align !1582, !noundef !28
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner.dbg.spill, i32 0, i32 0, !dbg !11885
  store i64* %inner.0, i64** %8, align 8, !dbg !11885
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner.dbg.spill, i32 0, i32 1, !dbg !11885
  store i64* %inner.1, i64** %9, align 8, !dbg !11885
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %inner.dbg.spill, metadata !11879, metadata !DIExpression()), !dbg !11885
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner, i32 0, i32 0, !dbg !11886
  store i64* %inner.0, i64** %10, align 8, !dbg !11886
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner, i32 0, i32 1, !dbg !11886
  store i64* %inner.1, i64** %11, align 8, !dbg !11886
  %12 = bitcast { i64*, i64* }* %inner to %"core::sync::atomic::AtomicUsize"**, !dbg !11887
  %_20 = load %"core::sync::atomic::AtomicUsize"*, %"core::sync::atomic::AtomicUsize"** %12, align 8, !dbg !11887, !nonnull !28, !align !1582, !noundef !28
  store %"core::sync::atomic::AtomicUsize"* %_20, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill1, align 8, !dbg !11887
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill1, metadata !11888, metadata !DIExpression()), !dbg !11894
  %self2 = bitcast %"core::sync::atomic::AtomicUsize"* %_20 to i64*, !dbg !11894
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !11894
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !11895, metadata !DIExpression()), !dbg !11899
; call core::sync::atomic::atomic_sub
  %_7 = call i64 @_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E(i64* %self2, i64 1, i8 1), !dbg !11894
  br label %bb11, !dbg !11894

bb3:                                              ; preds = %bb1
  br label %bb10, !dbg !11901

bb10:                                             ; preds = %bb9, %bb3
  ret void, !dbg !11901

bb11:                                             ; preds = %bb2
  %13 = icmp eq i64 %_7, 1, !dbg !11887
  br i1 %13, label %bb4, label %bb8, !dbg !11887

bb4:                                              ; preds = %bb11
  store i8 2, i8* %_11, align 1, !dbg !11902
  %14 = load i8, i8* %_11, align 1, !dbg !11902, !range !6057, !noundef !28
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h15f3db8a753d287dE(i8 %14), !dbg !11902
  br label %bb5, !dbg !11902

bb8:                                              ; preds = %bb11
  br label %bb9, !dbg !11903

bb9:                                              ; preds = %bb7, %bb8
  br label %bb10, !dbg !11901

bb5:                                              ; preds = %bb4
  %self4 = load i64*, i64** %self, align 8, !dbg !11904, !nonnull !28, !noundef !28
  store i64* %self4, i64** %self.dbg.spill5, align 8, !dbg !11904
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !11905, metadata !DIExpression()), !dbg !11912
  store i64* %self4, i64** %self.dbg.spill6, align 8, !dbg !11912
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill6, metadata !11913, metadata !DIExpression()), !dbg !11917
  %_31 = bitcast i64* %self4 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !11917
  %ptr = bitcast %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_31 to i8*, !dbg !11912
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !11912
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11919, metadata !DIExpression()), !dbg !11923
  store i8* %ptr, i8** %_13, align 8, !dbg !11923
  %self7 = load i64*, i64** %self, align 8, !dbg !11925, !nonnull !28, !noundef !28
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11925
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11926, metadata !DIExpression()), !dbg !11930
  %_35 = bitcast i64* %self7 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, !dbg !11930
; call core::alloc::layout::Layout::for_value_raw
  %15 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17h733a0486ea5e593dE(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* %_35), !dbg !11931
  %_15.0 = extractvalue { i64, i64 } %15, 0, !dbg !11931
  %_15.1 = extractvalue { i64, i64 } %15, 1, !dbg !11931
  br label %bb6, !dbg !11931

bb6:                                              ; preds = %bb5
  %16 = load i8*, i8** %_13, align 8, !dbg !11932, !nonnull !28, !noundef !28
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc470 to %"alloc::alloc::Global"*), i8* %16, i64 %_15.0, i64 %_15.1), !dbg !11932
  br label %bb7, !dbg !11932

bb7:                                              ; preds = %bb6
  br label %bb9, !dbg !11903
}

; <alloc::sync::Weak<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha6b9e9feb5fd2bdbE"(i64** align 8 %self) unnamed_addr #1 !dbg !11933 {
start:
  %self.dbg.spill8 = alloca i64*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill6 = alloca i64*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %self.dbg.spill1 = alloca %"core::sync::atomic::AtomicUsize"*, align 8
  %inner.dbg.spill = alloca { i64*, i64* }, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_13 = alloca i8*, align 8
  %_11 = alloca i8, align 1
  %_3 = alloca { i64*, i8* }, align 8
  %inner = alloca { i64*, i64* }, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11938, metadata !DIExpression()), !dbg !11943
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %inner, metadata !11939, metadata !DIExpression()), !dbg !11944
; call alloc::sync::Weak<T>::inner
  %0 = call { i64*, i8* } @"_ZN5alloc4sync13Weak$LT$T$GT$5inner17h9c4dd7cdbacb2b24E"(i64** align 8 %self), !dbg !11945
  store { i64*, i8* } %0, { i64*, i8* }* %_3, align 8, !dbg !11945
  br label %bb1, !dbg !11945

bb1:                                              ; preds = %start
  %1 = bitcast { i64*, i8* }* %_3 to {}**, !dbg !11946
  %2 = load {}*, {}** %1, align 8, !dbg !11946
  %3 = icmp eq {}* %2, null, !dbg !11946
  %_5 = select i1 %3, i64 0, i64 1, !dbg !11946
  %4 = icmp eq i64 %_5, 1, !dbg !11946
  br i1 %4, label %bb2, label %bb3, !dbg !11946

bb2:                                              ; preds = %bb1
  %5 = bitcast { i64*, i8* }* %_3 to { i64*, i64* }*, !dbg !11947
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 0, !dbg !11947
  %inner.0 = load i64*, i64** %6, align 8, !dbg !11947, !nonnull !28, !align !1582, !noundef !28
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %5, i32 0, i32 1, !dbg !11947
  %inner.1 = load i64*, i64** %7, align 8, !dbg !11947, !nonnull !28, !align !1582, !noundef !28
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner.dbg.spill, i32 0, i32 0, !dbg !11947
  store i64* %inner.0, i64** %8, align 8, !dbg !11947
  %9 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner.dbg.spill, i32 0, i32 1, !dbg !11947
  store i64* %inner.1, i64** %9, align 8, !dbg !11947
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %inner.dbg.spill, metadata !11941, metadata !DIExpression()), !dbg !11947
  %10 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner, i32 0, i32 0, !dbg !11948
  store i64* %inner.0, i64** %10, align 8, !dbg !11948
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %inner, i32 0, i32 1, !dbg !11948
  store i64* %inner.1, i64** %11, align 8, !dbg !11948
  %12 = bitcast { i64*, i64* }* %inner to %"core::sync::atomic::AtomicUsize"**, !dbg !11949
  %_20 = load %"core::sync::atomic::AtomicUsize"*, %"core::sync::atomic::AtomicUsize"** %12, align 8, !dbg !11949, !nonnull !28, !align !1582, !noundef !28
  store %"core::sync::atomic::AtomicUsize"* %_20, %"core::sync::atomic::AtomicUsize"** %self.dbg.spill1, align 8, !dbg !11949
  call void @llvm.dbg.declare(metadata %"core::sync::atomic::AtomicUsize"** %self.dbg.spill1, metadata !11950, metadata !DIExpression()), !dbg !11956
  %self2 = bitcast %"core::sync::atomic::AtomicUsize"* %_20 to i64*, !dbg !11956
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !11956
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !11957, metadata !DIExpression()), !dbg !11961
; call core::sync::atomic::atomic_sub
  %_7 = call i64 @_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E(i64* %self2, i64 1, i8 1), !dbg !11956
  br label %bb11, !dbg !11956

bb3:                                              ; preds = %bb1
  br label %bb10, !dbg !11963

bb10:                                             ; preds = %bb9, %bb3
  ret void, !dbg !11963

bb11:                                             ; preds = %bb2
  %13 = icmp eq i64 %_7, 1, !dbg !11949
  br i1 %13, label %bb4, label %bb8, !dbg !11949

bb4:                                              ; preds = %bb11
  store i8 2, i8* %_11, align 1, !dbg !11964
  %14 = load i8, i8* %_11, align 1, !dbg !11964, !range !6057, !noundef !28
; call core::sync::atomic::fence
  call void @_ZN4core4sync6atomic5fence17h15f3db8a753d287dE(i8 %14), !dbg !11964
  br label %bb5, !dbg !11964

bb8:                                              ; preds = %bb11
  br label %bb9, !dbg !11965

bb9:                                              ; preds = %bb7, %bb8
  br label %bb10, !dbg !11963

bb5:                                              ; preds = %bb4
  %self4 = load i64*, i64** %self, align 8, !dbg !11966, !nonnull !28, !noundef !28
  store i64* %self4, i64** %self.dbg.spill5, align 8, !dbg !11966
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !11967, metadata !DIExpression()), !dbg !11974
  store i64* %self4, i64** %self.dbg.spill6, align 8, !dbg !11974
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill6, metadata !11975, metadata !DIExpression()), !dbg !11979
  %_31 = bitcast i64* %self4 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, !dbg !11979
  %ptr = bitcast %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %_31 to i8*, !dbg !11974
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !11974
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11981, metadata !DIExpression()), !dbg !11985
  store i8* %ptr, i8** %_13, align 8, !dbg !11985
  %self7 = load i64*, i64** %self, align 8, !dbg !11987, !nonnull !28, !noundef !28
  store i64* %self7, i64** %self.dbg.spill8, align 8, !dbg !11987
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill8, metadata !11988, metadata !DIExpression()), !dbg !11992
  %_35 = bitcast i64* %self7 to %"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"*, !dbg !11992
; call core::alloc::layout::Layout::for_value_raw
  %15 = call { i64, i64 } @_ZN4core5alloc6layout6Layout13for_value_raw17haffdeafed5addff5E(%"alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8>>>"* %_35), !dbg !11993
  %_15.0 = extractvalue { i64, i64 } %15, 0, !dbg !11993
  %_15.1 = extractvalue { i64, i64 } %15, 1, !dbg !11993
  br label %bb6, !dbg !11993

bb6:                                              ; preds = %bb5
  %16 = load i8*, i8** %_13, align 8, !dbg !11994, !nonnull !28, !noundef !28
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 bitcast (<{}>* @alloc470 to %"alloc::alloc::Global"*), i8* %16, i64 %_15.0, i64 %_15.1), !dbg !11994
  br label %bb7, !dbg !11994

bb7:                                              ; preds = %bb6
  br label %bb9, !dbg !11965
}

; <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h1ea9d04047e5b119E"([11 x i32]* align 4 %a, [11 x i32]* align 4 %b) unnamed_addr #1 !dbg !11995 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill2 = alloca [11 x i32]*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %b.dbg.spill = alloca [11 x i32]*, align 8
  %a.dbg.spill = alloca [11 x i32]*, align 8
  store [11 x i32]* %a, [11 x i32]** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i32]** %a.dbg.spill, metadata !11998, metadata !DIExpression()), !dbg !12002
  store [11 x i32]* %b, [11 x i32]** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i32]** %b.dbg.spill, metadata !11999, metadata !DIExpression()), !dbg !12003
  %self.0 = bitcast [11 x i32]* %b to [0 x i32]*, !dbg !12004
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !12004
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !12004
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !12004
  store i64 11, i64* %2, align 8, !dbg !12004
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !12005, metadata !DIExpression()), !dbg !12009
  %self = bitcast [0 x i32]* %self.0 to i32*, !dbg !12009
  store i32* %self, i32** %self.dbg.spill1, align 8, !dbg !12009
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !12010, metadata !DIExpression()), !dbg !12018
  %_4 = bitcast i32* %self to [11 x i32]*, !dbg !12018
  store [11 x i32]* %_4, [11 x i32]** %b.dbg.spill2, align 8, !dbg !12019
  call void @llvm.dbg.declare(metadata [11 x i32]** %b.dbg.spill2, metadata !12000, metadata !DIExpression()), !dbg !12020
  %3 = bitcast [11 x i32]* %a to i8*, !dbg !12021
  %4 = bitcast [11 x i32]* %_4 to i8*, !dbg !12021
  %5 = call i32 @memcmp(i8* %3, i8* %4, i64 44), !dbg !12021
  %6 = icmp eq i32 %5, 0, !dbg !12021
  %7 = zext i1 %6 to i8, !dbg !12021
  store i8 %7, i8* %0, align 1, !dbg !12021
  %8 = load i8, i8* %0, align 1, !dbg !12021, !range !1099, !noundef !28
  %9 = trunc i8 %8 to i1, !dbg !12021
  br label %bb1, !dbg !12021

bb1:                                              ; preds = %start
  ret i1 %9, !dbg !12022
}

; <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h904442c2dbb18634E"([16 x i32]* align 4 %a, [16 x i32]* align 4 %b) unnamed_addr #1 !dbg !12023 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill2 = alloca [16 x i32]*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %b.dbg.spill = alloca [16 x i32]*, align 8
  %a.dbg.spill = alloca [16 x i32]*, align 8
  store [16 x i32]* %a, [16 x i32]** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]** %a.dbg.spill, metadata !12025, metadata !DIExpression()), !dbg !12029
  store [16 x i32]* %b, [16 x i32]** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i32]** %b.dbg.spill, metadata !12026, metadata !DIExpression()), !dbg !12030
  %self.0 = bitcast [16 x i32]* %b to [0 x i32]*, !dbg !12031
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !12031
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !12031
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !12031
  store i64 16, i64* %2, align 8, !dbg !12031
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !12032, metadata !DIExpression()), !dbg !12036
  %self = bitcast [0 x i32]* %self.0 to i32*, !dbg !12036
  store i32* %self, i32** %self.dbg.spill1, align 8, !dbg !12036
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !12037, metadata !DIExpression()), !dbg !12045
  %_4 = bitcast i32* %self to [16 x i32]*, !dbg !12045
  store [16 x i32]* %_4, [16 x i32]** %b.dbg.spill2, align 8, !dbg !12046
  call void @llvm.dbg.declare(metadata [16 x i32]** %b.dbg.spill2, metadata !12027, metadata !DIExpression()), !dbg !12047
  %3 = bitcast [16 x i32]* %a to i8*, !dbg !12048
  %4 = bitcast [16 x i32]* %_4 to i8*, !dbg !12048
  %5 = call i32 @memcmp(i8* %3, i8* %4, i64 64), !dbg !12048
  %6 = icmp eq i32 %5, 0, !dbg !12048
  %7 = zext i1 %6 to i8, !dbg !12048
  store i8 %7, i8* %0, align 1, !dbg !12048
  %8 = load i8, i8* %0, align 1, !dbg !12048, !range !1099, !noundef !28
  %9 = trunc i8 %8 to i1, !dbg !12048
  br label %bb1, !dbg !12048

bb1:                                              ; preds = %start
  ret i1 %9, !dbg !12049
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6a1e13ce38811b0aE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !12050 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !12055, metadata !DIExpression()), !dbg !12056
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h2234ff1fdc1120aeE"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !12057
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !12057
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !12058, metadata !DIExpression()), !dbg !12063
  br label %bb1, !dbg !12057

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !12065
  %len = load i64, i64* %0, align 8, !dbg !12065
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !12065
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !12062, metadata !DIExpression()), !dbg !12063
  store i8* %data, i8** %self.dbg.spill1, align 8, !dbg !12063
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !12066, metadata !DIExpression()), !dbg !12070
  %data_address = bitcast i8* %data to {}*, !dbg !12070
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !12070
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !12072, metadata !DIExpression()), !dbg !12077
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !12063
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !12076, metadata !DIExpression()), !dbg !12077
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !12077
  store {}* %data_address, {}** %1, align 8, !dbg !12077
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !12077
  store i64 %len, i64* %2, align 8, !dbg !12077
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { i8*, i64 }*, !dbg !12077
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !12077
  %5 = load i8*, i8** %4, align 8, !dbg !12077
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !12077
  %7 = load i64, i64* %6, align 8, !dbg !12077
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !12077
  store i8* %5, i8** %8, align 8, !dbg !12077
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !12077
  store i64 %7, i64* %9, align 8, !dbg !12077
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { [0 x i8]*, i64 }*, !dbg !12077
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !12077
  %_2.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !12077
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !12077
  %_2.1 = load i64, i64* %12, align 8, !dbg !12077
  br label %bb2, !dbg !12079

bb2:                                              ; preds = %bb1
  ret void, !dbg !12080
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he934566eb94c4369E"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #1 !dbg !12081 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<&str>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill, metadata !12085, metadata !DIExpression()), !dbg !12086
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h86cddd9b1ca10b26E"(%"alloc::vec::Vec<&str>"* align 8 %self), !dbg !12087
  store { [0 x i8]*, i64 }* %data, { [0 x i8]*, i64 }** %data.dbg.spill, align 8, !dbg !12087
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %data.dbg.spill, metadata !12088, metadata !DIExpression()), !dbg !12099
  br label %bb1, !dbg !12087

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1, !dbg !12101
  %len = load i64, i64* %0, align 8, !dbg !12101
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !12101
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !12098, metadata !DIExpression()), !dbg !12099
  store { [0 x i8]*, i64 }* %data, { [0 x i8]*, i64 }** %self.dbg.spill1, align 8, !dbg !12099
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill1, metadata !12102, metadata !DIExpression()), !dbg !12109
  %data_address = bitcast { [0 x i8]*, i64 }* %data to {}*, !dbg !12109
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !12109
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !12111, metadata !DIExpression()), !dbg !12118
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !12099
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !12117, metadata !DIExpression()), !dbg !12118
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !12118
  store {}* %data_address, {}** %1, align 8, !dbg !12118
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !12118
  store i64 %len, i64* %2, align 8, !dbg !12118
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_10 to { i8*, i64 }*, !dbg !12118
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !12118
  %5 = load i8*, i8** %4, align 8, !dbg !12118
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !12118
  %7 = load i64, i64* %6, align 8, !dbg !12118
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !12118
  store i8* %5, i8** %8, align 8, !dbg !12118
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !12118
  store i64 %7, i64* %9, align 8, !dbg !12118
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_10 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !12118
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %10, i32 0, i32 0, !dbg !12118
  %_2.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %11, align 8, !dbg !12118
  %12 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %10, i32 0, i32 1, !dbg !12118
  %_2.1 = load i64, i64* %12, align 8, !dbg !12118
  br label %bb2, !dbg !12120

bb2:                                              ; preds = %bb1
  ret void, !dbg !12121
}

; <std::thread::Packet<T> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$std..thread..Packet$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0ac411b30db094d6E"(%"std::thread::Packet<()>"* align 8 %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12122 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill8 = alloca %"core::fmt::Arguments"*, align 8
  %x.dbg.spill = alloca %"core::fmt::Arguments"*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill7 = alloca i64*, align 8
  %self.dbg.spill5 = alloca i64**, align 8
  %self.dbg.spill4 = alloca i64**, align 8
  %self.dbg.spill3 = alloca i64**, align 8
  %scope.dbg.spill = alloca i64**, align 8
  %self.dbg.spill2 = alloca %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"*, align 8
  %self.dbg.spill = alloca %"std::thread::Packet<()>"*, align 8
  %_29 = alloca %"core::fmt::Arguments", align 8
  %_26 = alloca { i8*, i64* }, align 8
  %_25 = alloca [1 x { i8*, i64* }], align 8
  %_18 = alloca %"core::fmt::Arguments", align 8
  %_15 = alloca i8*, align 8
  %out = alloca %"std::sys::unix::stdio::Stderr", align 1
  %_12 = alloca i8, align 1
  %_9 = alloca i64*, align 8
  %_8 = alloca i64*, align 8
  %_7 = alloca { i8*, i8* }, align 8
  %unhandled_panic = alloca i8, align 1
  store %"std::thread::Packet<()>"* %self, %"std::thread::Packet<()>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::thread::Packet<()>"** %self.dbg.spill, metadata !12126, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.declare(metadata i8* %unhandled_panic, metadata !12127, metadata !DIExpression()), !dbg !12135
  call void @llvm.dbg.declare(metadata %"std::sys::unix::stdio::Stderr"* %out, metadata !12129, metadata !DIExpression()), !dbg !12136
  %self1 = getelementptr inbounds %"std::thread::Packet<()>", %"std::thread::Packet<()>"* %self, i32 0, i32 2, !dbg !12137
  store %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %self1, %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill2, align 8, !dbg !12137
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill2, metadata !12138, metadata !DIExpression()), !dbg !12142
  %_49 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %self1 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, !dbg !12142
  %3 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_49 to i64*, !dbg !12137
  %_6 = load i64, i64* %3, align 8, !dbg !12137, !range !1578, !noundef !28
  %4 = icmp eq i64 %_6, 1, !dbg !12143
  br i1 %4, label %bb2, label %bb1, !dbg !12143

bb2:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_49 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some"*, !dbg !12137
  %6 = getelementptr inbounds %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some", %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>::Some"* %5, i32 0, i32 1, !dbg !12137
  %7 = bitcast { i8*, i8* }* %6 to {}**, !dbg !12137
  %8 = load {}*, {}** %7, align 8, !dbg !12137
  %9 = icmp eq {}* %8, null, !dbg !12137
  %_5 = select i1 %9, i64 0, i64 1, !dbg !12137
  %10 = icmp eq i64 %_5, 1, !dbg !12143
  br i1 %10, label %bb3, label %bb1, !dbg !12143

bb1:                                              ; preds = %bb2, %start
  store i8 0, i8* %unhandled_panic, align 1, !dbg !12143
  br label %bb4, !dbg !12143

bb3:                                              ; preds = %bb2
  store i8 1, i8* %unhandled_panic, align 1, !dbg !12143
  br label %bb4, !dbg !12143

bb4:                                              ; preds = %bb3, %bb1
  %_10 = getelementptr inbounds %"std::thread::Packet<()>", %"std::thread::Packet<()>"* %self, i32 0, i32 2, !dbg !12144
  %11 = bitcast i64** %_9 to %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"**, !dbg !12144
  store %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %_10, %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %11, align 8, !dbg !12144
  %12 = load i64*, i64** %_9, align 8, !dbg !12145, !nonnull !28, !align !1582, !noundef !28
  store i64* %12, i64** %_8, align 8, !dbg !12145
  %13 = load i64*, i64** %_8, align 8, !dbg !12146, !nonnull !28, !align !1582, !noundef !28
; call std::panic::catch_unwind
  %14 = call { i8*, i8* } @_ZN3std5panic12catch_unwind17h04c1075fbce9ae98E(i64* align 8 %13), !dbg !12146
  store { i8*, i8* } %14, { i8*, i8* }* %_7, align 8, !dbg !12146
  br label %bb5, !dbg !12146

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8*, i8* }* %_7 to {}**, !dbg !12147
  %16 = load {}*, {}** %15, align 8, !dbg !12147
  %17 = icmp eq {}* %16, null, !dbg !12147
  %_11 = select i1 %17, i64 0, i64 1, !dbg !12147
  %18 = icmp eq i64 %_11, 1, !dbg !12147
  br i1 %18, label %bb6, label %bb14, !dbg !12147

bb6:                                              ; preds = %bb5
; invoke std::sys::unix::stdio::panic_output
  %19 = invoke zeroext i1 @_ZN3std3sys4unix5stdio12panic_output17h0e3ed00a45758d05E()
          to label %bb7 unwind label %cleanup, !dbg !12136

bb14:                                             ; preds = %bb5
; call core::ptr::drop_in_place<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>
  call void @"_ZN4core3ptr130drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$17ha5dc4a097ef368c1E"({ i8*, i8* }* %_7), !dbg !12148
  br label %bb15, !dbg !12148

bb15:                                             ; preds = %bb14
  %_37 = bitcast %"std::thread::Packet<()>"* %self to i64**, !dbg !12149
  %20 = bitcast i64** %_37 to {}**, !dbg !12150
  %21 = load {}*, {}** %20, align 8, !dbg !12150
  %22 = icmp eq {}* %21, null, !dbg !12150
  %_38 = select i1 %22, i64 0, i64 1, !dbg !12150
  %23 = icmp eq i64 %_38, 1, !dbg !12150
  br i1 %23, label %bb16, label %bb18, !dbg !12150

bb16:                                             ; preds = %bb15
  store i64** %_37, i64*** %scope.dbg.spill, align 8, !dbg !12151
  call void @llvm.dbg.declare(metadata i64*** %scope.dbg.spill, metadata !12132, metadata !DIExpression()), !dbg !12151
  store i64** %_37, i64*** %self.dbg.spill3, align 8, !dbg !12152
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill3, metadata !12153, metadata !DIExpression()), !dbg !12157
  store i64** %_37, i64*** %self.dbg.spill4, align 8, !dbg !12157
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill4, metadata !12158, metadata !DIExpression()), !dbg !12162
  store i64** %_37, i64*** %self.dbg.spill5, align 8, !dbg !12162
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill5, metadata !12164, metadata !DIExpression()), !dbg !12168
  %self6 = load i64*, i64** %_37, align 8, !dbg !12168, !nonnull !28, !noundef !28
  store i64* %self6, i64** %self.dbg.spill7, align 8, !dbg !12168
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill7, metadata !12170, metadata !DIExpression()), !dbg !12174
  %_61 = bitcast i64* %self6 to %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"*, !dbg !12174
  %_42 = getelementptr inbounds %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>", %"alloc::sync::ArcInner<std::thread::scoped::ScopeData>"* %_61, i32 0, i32 2, !dbg !12157
  %24 = load i8, i8* %unhandled_panic, align 1, !dbg !12176, !range !1099, !noundef !28
  %_44 = trunc i8 %24 to i1, !dbg !12176
; call std::thread::scoped::ScopeData::decrement_num_running_threads
  call void @_ZN3std6thread6scoped9ScopeData29decrement_num_running_threads17h5fbb8ce69bc0c6f5E(%"std::thread::scoped::ScopeData"* align 8 %_42, i1 zeroext %_44), !dbg !12152
  br label %bb17, !dbg !12152

bb18:                                             ; preds = %bb17, %bb15
  ret void, !dbg !12177

bb17:                                             ; preds = %bb16
  br label %bb18, !dbg !12178

bb19:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>
  invoke void @"_ZN4core3ptr130drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$17ha5dc4a097ef368c1E"({ i8*, i8* }* %_7) #18
          to label %bb20 unwind label %abort, !dbg !12148

cleanup:                                          ; preds = %bb13, %bb11, %bb10, %bb22, %bb8, %bb6
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb19

bb7:                                              ; preds = %bb6
  %30 = zext i1 %19 to i8, !dbg !12136
  store i8 %30, i8* %_12, align 1, !dbg !12136
  %31 = load i8, i8* %_12, align 1, !dbg !12136, !range !1099, !noundef !28
  %32 = trunc i8 %31 to i1, !dbg !12136
  %_13 = zext i1 %32 to i64, !dbg !12136
  %33 = icmp eq i64 %_13, 1, !dbg !12136
  br i1 %33, label %bb8, label %bb13, !dbg !12136

bb8:                                              ; preds = %bb7
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_29, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc468 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc470 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb9 unwind label %cleanup, !dbg !12136

bb13:                                             ; preds = %bb12, %bb7
; invoke std::sys::unix::abort_internal
  invoke void @_ZN3std3sys4unix14abort_internal17hdc4a906dbfd99d12E() #17
          to label %unreachable unwind label %cleanup, !dbg !12179

bb9:                                              ; preds = %bb8
  store %"core::fmt::Arguments"* %_29, %"core::fmt::Arguments"** %x.dbg.spill, align 8, !dbg !12136
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"** %x.dbg.spill, metadata !12180, metadata !DIExpression()), !dbg !12187
  store %"core::fmt::Arguments"* %_29, %"core::fmt::Arguments"** %x.dbg.spill8, align 8, !dbg !12187
  call void @llvm.dbg.declare(metadata %"core::fmt::Arguments"** %x.dbg.spill8, metadata !12189, metadata !DIExpression()), !dbg !12199
  store i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h3acc6455b8791ff2E", i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !12187
  call void @llvm.dbg.declare(metadata i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !12198, metadata !DIExpression()), !dbg !12199
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (%"core::fmt::Arguments"*, %"core::fmt::Formatter"*)* @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h3acc6455b8791ff2E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !12199
  %_52 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !12199, !nonnull !28, !noundef !28
  br label %bb21, !dbg !12199

bb21:                                             ; preds = %bb9
  %34 = bitcast %"core::fmt::Arguments"* %_29 to %"core::fmt::Opaque"*, !dbg !12199
  store %"core::fmt::Opaque"* %34, %"core::fmt::Opaque"** %0, align 8, !dbg !12199
  %_54 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !12199, !nonnull !28, !align !1104, !noundef !28
  br label %bb22, !dbg !12199

bb22:                                             ; preds = %bb21
  %35 = bitcast { i8*, i64* }* %_26 to %"core::fmt::Opaque"**, !dbg !12199
  store %"core::fmt::Opaque"* %_54, %"core::fmt::Opaque"** %35, align 8, !dbg !12199
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_26, i32 0, i32 1, !dbg !12199
  %37 = bitcast i64** %36 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !12199
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_52, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %37, align 8, !dbg !12199
  %38 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_26, i32 0, i32 0, !dbg !12136
  %39 = load i8*, i8** %38, align 8, !dbg !12136, !nonnull !28, !align !1104, !noundef !28
  %40 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_26, i32 0, i32 1, !dbg !12136
  %41 = load i64*, i64** %40, align 8, !dbg !12136, !nonnull !28, !noundef !28
  %42 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_25, i64 0, i64 0, !dbg !12136
  %43 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 0, !dbg !12136
  store i8* %39, i8** %43, align 8, !dbg !12136
  %44 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %42, i32 0, i32 1, !dbg !12136
  store i64* %41, i64** %44, align 8, !dbg !12136
  %_22.0 = bitcast [1 x { i8*, i64* }]* %_25 to [0 x { i8*, i64* }]*, !dbg !12136
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_18, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc464 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_22.0, i64 1)
          to label %bb10 unwind label %cleanup, !dbg !12136

bb10:                                             ; preds = %bb22
; invoke std::io::Write::write_fmt
  %45 = invoke i8* @_ZN3std2io5Write9write_fmt17hd7dc32ae724c3112E(%"std::sys::unix::stdio::Stderr"* align 1 %out, %"core::fmt::Arguments"* %_18)
          to label %bb11 unwind label %cleanup, !dbg !12136

bb11:                                             ; preds = %bb10
  store i8* %45, i8** %_15, align 8, !dbg !12136
; invoke core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  invoke void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h38ccdb4d7617198cE"(i8** %_15)
          to label %bb12 unwind label %cleanup, !dbg !12136

bb12:                                             ; preds = %bb11
  br label %bb13, !dbg !12179

unreachable:                                      ; preds = %bb13
  unreachable

abort:                                            ; preds = %bb19
  %46 = landingpad { i8*, i32 }
          cleanup, !dbg !12201
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !12201
  unreachable, !dbg !12201

bb20:                                             ; preds = %bb19
  %47 = bitcast { i8*, i32 }* %2 to i8**, !dbg !12201
  %48 = load i8*, i8** %47, align 8, !dbg !12201
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !12201
  %50 = load i32, i32* %49, align 8, !dbg !12201
  %51 = insertvalue { i8*, i32 } undef, i8* %48, 0, !dbg !12201
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1, !dbg !12201
  resume { i8*, i32 } %52, !dbg !12201
}

; <std::thread::Packet<T> as core::ops::drop::Drop>::drop::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN70_$LT$std..thread..Packet$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h57932cbd980faa8bE"(i64** align 8 %_1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12202 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"*, align 8
  %_1.dbg.spill = alloca i64**, align 8
  %_2 = alloca %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>", align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  %1 = load i64**, i64*** %_1.dbg.spill, align 8, !nonnull !28, !align !1582, !noundef !28
  %2 = bitcast i64** %1 to %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"**
  %3 = load %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"*, %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %2, align 8, !nonnull !28, !align !1582, !noundef !28
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !12207, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !12208
  %4 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_2 to i64*, !dbg !12209
  store i64 0, i64* %4, align 8, !dbg !12209
  %5 = bitcast i64** %_1 to %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"**, !dbg !12210
  %_5 = load %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"*, %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %5, align 8, !dbg !12210, !nonnull !28, !align !1582, !noundef !28
  store %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %_5, %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill, align 8, !dbg !12210
  call void @llvm.dbg.declare(metadata %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"** %self.dbg.spill, metadata !12211, metadata !DIExpression()), !dbg !12215
  %_8 = bitcast %"core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>>"* %_5 to %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"*, !dbg !12215
; invoke core::ptr::drop_in_place<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>
  invoke void @"_ZN4core3ptr158drop_in_place$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$17hec04110808742394E"(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_8)
          to label %bb3 unwind label %cleanup, !dbg !12216

bb2:                                              ; preds = %cleanup
  %6 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_8 to i8*, !dbg !12216
  %7 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_2 to i8*, !dbg !12216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !12216
  br i1 false, label %bb4, label %bb1, !dbg !12217

cleanup:                                          ; preds = %start
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %10, i32* %12, align 8
  br label %bb2

bb3:                                              ; preds = %start
  %13 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_8 to i8*, !dbg !12216
  %14 = bitcast %"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_2 to i8*, !dbg !12216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !12216
  ret void, !dbg !12218

bb1:                                              ; preds = %bb4, %bb2
  %15 = bitcast { i8*, i32 }* %0 to i8**, !dbg !12219
  %16 = load i8*, i8** %15, align 8, !dbg !12219
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !12219
  %18 = load i32, i32* %17, align 8, !dbg !12219
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !12219
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !12219
  resume { i8*, i32 } %20, !dbg !12219

bb4:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>>
  invoke void @"_ZN4core3ptr158drop_in_place$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$17hec04110808742394E"(%"core::option::Option<core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>>"* %_2) #18
          to label %bb1 unwind label %abort, !dbg !12217

abort:                                            ; preds = %bb4
  %21 = landingpad { i8*, i32 }
          cleanup, !dbg !12219
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !12219
  unreachable, !dbg !12219
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x { [0 x i8]*, i64 }]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfb4be6d7c3069c49E"(%"alloc::vec::Vec<&str>"* align 8 %self) unnamed_addr #0 !dbg !12220 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }*, align 8
  %len.dbg.spill2 = alloca i64, align 8
  %data.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<&str>"*, align 8
  %_14 = alloca { i8*, i64 }, align 8
  %_13 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill, metadata !12224, metadata !DIExpression()), !dbg !12225
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hc3c39fd5d04ba6beE"(%"alloc::vec::Vec<&str>"* align 8 %self), !dbg !12226
  store { [0 x i8]*, i64 }* %data, { [0 x i8]*, i64 }** %data.dbg.spill, align 8, !dbg !12226
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %data.dbg.spill, metadata !12227, metadata !DIExpression()), !dbg !12242
  br label %bb1, !dbg !12226

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1, !dbg !12244
  %len = load i64, i64* %0, align 8, !dbg !12244
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !12244
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !12233, metadata !DIExpression()), !dbg !12242
  store { [0 x i8]*, i64 }* %data, { [0 x i8]*, i64 }** %data.dbg.spill1, align 8, !dbg !12242
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %data.dbg.spill1, metadata !12245, metadata !DIExpression()), !dbg !12256
  store i64 %len, i64* %len.dbg.spill2, align 8, !dbg !12242
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill2, metadata !12255, metadata !DIExpression()), !dbg !12256
  store { [0 x i8]*, i64 }* %data, { [0 x i8]*, i64 }** %self.dbg.spill3, align 8, !dbg !12256
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill3, metadata !12258, metadata !DIExpression()), !dbg !12264
  %data_address = bitcast { [0 x i8]*, i64 }* %data to {}*, !dbg !12264
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !12264
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !12266, metadata !DIExpression()), !dbg !12273
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !12256
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !12272, metadata !DIExpression()), !dbg !12273
  %1 = bitcast { i8*, i64 }* %_14 to {}**, !dbg !12273
  store {}* %data_address, {}** %1, align 8, !dbg !12273
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_14, i32 0, i32 1, !dbg !12273
  store i64 %len, i64* %2, align 8, !dbg !12273
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_13 to { i8*, i64 }*, !dbg !12273
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_14, i32 0, i32 0, !dbg !12273
  %5 = load i8*, i8** %4, align 8, !dbg !12273
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_14, i32 0, i32 1, !dbg !12273
  %7 = load i64, i64* %6, align 8, !dbg !12273
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !12273
  store i8* %5, i8** %8, align 8, !dbg !12273
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !12273
  store i64 %7, i64* %9, align 8, !dbg !12273
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_13 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !12273
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %10, i32 0, i32 0, !dbg !12273
  %_6.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %11, align 8, !dbg !12273
  %12 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %10, i32 0, i32 1, !dbg !12273
  %_6.1 = load i64, i64* %12, align 8, !dbg !12273
  %13 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } undef, [0 x { [0 x i8]*, i64 }]* %_6.0, 0, !dbg !12275
  %14 = insertvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %13, i64 %_6.1, 1, !dbg !12275
  ret { [0 x { [0 x i8]*, i64 }]*, i64 } %14, !dbg !12275
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h3b54d3325e8b8859E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !12276 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %size.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca i8, align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !12279, metadata !DIExpression()), !dbg !12283
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !12280, metadata !DIExpression()), !dbg !12284
  %_3 = icmp ne i64 %self.1, %other.1, !dbg !12285
  br i1 %_3, label %bb1, label %bb2, !dbg !12285

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !12286
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !12286
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !12286
  store i64 %self.1, i64* %7, align 8, !dbg !12286
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !12287, metadata !DIExpression()), !dbg !12293
  %8 = mul nsw i64 %self.1, 1, !dbg !12293
  store i64 %8, i64* %0, align 8, !dbg !12293
  %size = load i64, i64* %0, align 8, !dbg !12293
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !12293
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !12281, metadata !DIExpression()), !dbg !12295
  br label %bb5, !dbg !12293

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1, !dbg !12296
  br label %bb4, !dbg !12297

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %1, align 1, !dbg !12297, !range !1099, !noundef !28
  %10 = trunc i8 %9 to i1, !dbg !12297
  ret i1 %10, !dbg !12297

bb5:                                              ; preds = %bb2
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !12298
  store [0 x i8]* %self.0, [0 x i8]** %11, align 8, !dbg !12298
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !12298
  store i64 %self.1, i64* %12, align 8, !dbg !12298
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !12299, metadata !DIExpression()), !dbg !12303
  %_12 = bitcast [0 x i8]* %self.0 to i8*, !dbg !12303
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !12304
  store [0 x i8]* %other.0, [0 x i8]** %13, align 8, !dbg !12304
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !12304
  store i64 %other.1, i64* %14, align 8, !dbg !12304
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !12305, metadata !DIExpression()), !dbg !12309
  %_15 = bitcast [0 x i8]* %other.0 to i8*, !dbg !12309
  %_10 = call i32 @memcmp(i8* %_12, i8* %_15, i64 %size), !dbg !12310
  br label %bb3, !dbg !12310

bb3:                                              ; preds = %bb5
  %15 = icmp eq i32 %_10, 0, !dbg !12310
  %16 = zext i1 %15 to i8, !dbg !12310
  store i8 %16, i8* %1, align 1, !dbg !12310
  br label %bb4, !dbg !12297
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 1 i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h585e02aa47efab1bE"(i64 %self, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !12311 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %1 = alloca i8*, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !12315, metadata !DIExpression()), !dbg !12317
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !12316, metadata !DIExpression()), !dbg !12318
  %_3 = icmp ult i64 %self, %slice.1, !dbg !12319
  br i1 %_3, label %bb1, label %bb2, !dbg !12319

bb2:                                              ; preds = %start
  %4 = bitcast i8** %1 to {}**, !dbg !12320
  store {}* null, {}** %4, align 8, !dbg !12320
  br label %bb3, !dbg !12321

bb1:                                              ; preds = %start
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !12322
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !12323, metadata !DIExpression()), !dbg !12337
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 0, !dbg !12338
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !12338
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill2, i32 0, i32 1, !dbg !12338
  store i64 %slice.1, i64* %6, align 8, !dbg !12338
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill2, metadata !12328, metadata !DIExpression()), !dbg !12337
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !12337
  store [0 x i8]* %slice.0, [0 x i8]** %7, align 8, !dbg !12337
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !12337
  store i64 %slice.1, i64* %8, align 8, !dbg !12337
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !12339, metadata !DIExpression()), !dbg !12343
  %self4 = bitcast [0 x i8]* %slice.0 to i8*, !dbg !12343
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !12343
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !12345, metadata !DIExpression()), !dbg !12350
  store i64 %self, i64* %count.dbg.spill, align 8, !dbg !12337
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !12349, metadata !DIExpression()), !dbg !12350
  store i8* %self4, i8** %self.dbg.spill6, align 8, !dbg !12350
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !12351, metadata !DIExpression()), !dbg !12356
  store i64 %self, i64* %count.dbg.spill7, align 8, !dbg !12350
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !12355, metadata !DIExpression()), !dbg !12356
  %9 = getelementptr inbounds i8, i8* %self4, i64 %self, !dbg !12356
  store i8* %9, i8** %0, align 8, !dbg !12356
  %_9 = load i8*, i8** %0, align 8, !dbg !12356
  br label %bb4, !dbg !12356

bb4:                                              ; preds = %bb1
  store i8* %_9, i8** %1, align 8, !dbg !12358
  br label %bb3, !dbg !12321

bb3:                                              ; preds = %bb2, %bb4
  %10 = load i8*, i8** %1, align 8, !dbg !12359, !align !1104
  ret i8* %10, !dbg !12359
}

; <usize as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 { [0 x i8]*, i64 }* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc2bd77b2ca9788fdE"(i64 %self, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !12360 {
start:
  %slice.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !12364, metadata !DIExpression()), !dbg !12366
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, metadata !12365, metadata !DIExpression()), !dbg !12367
  %_5 = icmp ult i64 %self, %slice.1, !dbg !12368
  %3 = call i1 @llvm.expect.i1(i1 %_5, i1 true), !dbg !12368
  br i1 %3, label %bb1, label %panic, !dbg !12368

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds [0 x { [0 x i8]*, i64 }], [0 x { [0 x i8]*, i64 }]* %slice.0, i64 0, i64 %self, !dbg !12369
  ret { [0 x i8]*, i64 }* %4, !dbg !12370

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %self, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #17, !dbg !12368
  unreachable, !dbg !12368
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5d708344fc23db98E"({ i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !12371 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !12376, metadata !DIExpression()), !dbg !12380
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9516373acb554c32E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self), !dbg !12381
  br label %bb1, !dbg !12381

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !12382
  %1 = load i64, i64* %0, align 8, !dbg !12382, !range !1479, !noundef !28
  %2 = icmp eq i64 %1, 0, !dbg !12382
  %_4 = select i1 %2, i64 0, i64 1, !dbg !12382
  %3 = icmp eq i64 %_4, 1, !dbg !12382
  br i1 %3, label %bb2, label %bb4, !dbg !12382

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12383
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !12383
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !12383
  %ptr = load i8*, i8** %6, align 8, !dbg !12383, !nonnull !28, !noundef !28
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !12383
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12377, metadata !DIExpression()), !dbg !12383
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12384
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !12384
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !12384
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !12384
  %layout.0 = load i64, i64* %10, align 8, !dbg !12384
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !12384
  %layout.1 = load i64, i64* %11, align 8, !dbg !12384, !range !6278, !noundef !28
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12384
  store i64 %layout.0, i64* %12, align 8, !dbg !12384
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12384
  store i64 %layout.1, i64* %13, align 8, !dbg !12384
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12379, metadata !DIExpression()), !dbg !12384
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !12385
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !12385
  br label %bb3, !dbg !12385

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !12386

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !12387
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hd818a3818618aa12E"({ i8*, i64 }* align 8 %self) unnamed_addr #1 !dbg !12388 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !12393, metadata !DIExpression()), !dbg !12397
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8f4aabb6d3acb1f5E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i8*, i64 }* align 8 %self), !dbg !12398
  br label %bb1, !dbg !12398

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !12399
  %1 = load i64, i64* %0, align 8, !dbg !12399, !range !1479, !noundef !28
  %2 = icmp eq i64 %1, 0, !dbg !12399
  %_4 = select i1 %2, i64 0, i64 1, !dbg !12399
  %3 = icmp eq i64 %_4, 1, !dbg !12399
  br i1 %3, label %bb2, label %bb4, !dbg !12399

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12400
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !12400
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !12400
  %ptr = load i8*, i8** %6, align 8, !dbg !12400, !nonnull !28, !noundef !28
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !12400
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12394, metadata !DIExpression()), !dbg !12400
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12401
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !12401
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !12401
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !12401
  %layout.0 = load i64, i64* %10, align 8, !dbg !12401
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !12401
  %layout.1 = load i64, i64* %11, align 8, !dbg !12401, !range !6278, !noundef !28
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12401
  store i64 %layout.0, i64* %12, align 8, !dbg !12401
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12401
  store i64 %layout.1, i64* %13, align 8, !dbg !12401
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12396, metadata !DIExpression()), !dbg !12401
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !12402
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !12402
  br label %bb3, !dbg !12402

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !12403

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !12404
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83e5aaa269437a1eE"(i8** align 8 %self) unnamed_addr #0 !dbg !12405 {
start:
  %self.dbg.spill = alloca i8**, align 8
  %_2 = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>", align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !12410, metadata !DIExpression()), !dbg !12411
  %_3 = load i8*, i8** %self, align 8, !dbg !12412, !nonnull !28, !noundef !28
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17h59e95b71693e0529E(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %_2, i8* %_3), !dbg !12413
  br label %bb1, !dbg !12413

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17h3ea16d77aacac4f1E"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_2), !dbg !12414
  br label %bb2, !dbg !12414

bb2:                                              ; preds = %bb1
  ret void, !dbg !12415
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h919d6555a94a7745E"(%"std::io::error::Custom"* %p) unnamed_addr #0 !dbg !12416 {
start:
  %ptr.dbg.spill2 = alloca %"std::io::error::Custom"*, align 8
  %ptr.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %raw.dbg.spill1 = alloca %"std::io::error::Custom"*, align 8
  %raw.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %p.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %_1.dbg.spill = alloca %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]", align 1
  %_8 = alloca i64*, align 8
  %_6 = alloca i64*, align 8
  %0 = alloca %"std::io::error::Custom"*, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]"* %_1.dbg.spill, metadata !12421, metadata !DIExpression()), !dbg !12422
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %p.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %p.dbg.spill, metadata !12420, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !12424, metadata !DIExpression()), !dbg !12431
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %raw.dbg.spill, align 8, !dbg !12441
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %raw.dbg.spill, metadata !12438, metadata !DIExpression()), !dbg !12442
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %raw.dbg.spill1, align 8, !dbg !12442
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %raw.dbg.spill1, metadata !12430, metadata !DIExpression()), !dbg !12431
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %ptr.dbg.spill, align 8, !dbg !12431
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %ptr.dbg.spill, metadata !12443, metadata !DIExpression()), !dbg !12449
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %ptr.dbg.spill2, align 8, !dbg !12449
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %ptr.dbg.spill2, metadata !12451, metadata !DIExpression()), !dbg !12457
  %1 = bitcast i64** %_8 to %"std::io::error::Custom"**, !dbg !12457
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %1, align 8, !dbg !12457
  %2 = load i64*, i64** %_8, align 8, !dbg !12449, !nonnull !28, !noundef !28
  store i64* %2, i64** %_6, align 8, !dbg !12449
  %3 = bitcast %"std::io::error::Custom"** %0 to i64**, !dbg !12431
  %4 = load i64*, i64** %_6, align 8, !dbg !12431, !nonnull !28, !noundef !28
  store i64* %4, i64** %3, align 8, !dbg !12431
  %5 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %0, align 8, !dbg !12459, !nonnull !28, !align !1582, !noundef !28
  ret %"std::io::error::Custom"* %5, !dbg !12459
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h9e67ceab2d5ac3b5E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::StrSearcher"* align 8 %self) unnamed_addr #0 !dbg !12460 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %4 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %is_long.dbg.spill = alloca i8, align 1
  %searcher.dbg.spill = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::StrSearcher"*, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  store %"core::str::pattern::StrSearcher"* %self, %"core::str::pattern::StrSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::StrSearcher"** %self.dbg.spill, metadata !12466, metadata !DIExpression()), !dbg !12474
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !12475
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to i64*, !dbg !12475
  %_2 = load i64, i64* %6, align 8, !dbg !12475, !range !1578, !noundef !28
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !12476

bb2:                                              ; preds = %start
  unreachable, !dbg !12475

bb3:                                              ; preds = %start
  br label %bb4, !dbg !12477

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !12478
  %8 = bitcast %"core::str::pattern::StrSearcherImpl"* %7 to %"core::str::pattern::StrSearcherImpl::TwoWay"*, !dbg !12478
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %8, i32 0, i32 1, !dbg !12478
  store %"core::str::pattern::TwoWaySearcher"* %searcher, %"core::str::pattern::TwoWaySearcher"** %searcher.dbg.spill, align 8, !dbg !12478
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %searcher.dbg.spill, metadata !12470, metadata !DIExpression()), !dbg !12479
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6, !dbg !12480
  %_13 = load i64, i64* %9, align 8, !dbg !12480
  %is_long = icmp eq i64 %_13, -1, !dbg !12480
  %10 = zext i1 %is_long to i8, !dbg !12480
  store i8 %10, i8* %is_long.dbg.spill, align 1, !dbg !12480
  call void @llvm.dbg.declare(metadata i8* %is_long.dbg.spill, metadata !12472, metadata !DIExpression()), !dbg !12481
  br i1 %is_long, label %bb10, label %bb12, !dbg !12482

bb12:                                             ; preds = %bb1
  %11 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !12483
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !12483
  %_31.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !12483, !nonnull !28, !align !1104, !noundef !28
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !12483
  %_31.1 = load i64, i64* %13, align 8, !dbg !12483
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !12483
  store [0 x i8]* %_31.0, [0 x i8]** %14, align 8, !dbg !12483
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !12483
  store i64 %_31.1, i64* %15, align 8, !dbg !12483
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !12484, metadata !DIExpression()), !dbg !12488
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !12488
  store [0 x i8]* %_31.0, [0 x i8]** %16, align 8, !dbg !12488
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !12488
  store i64 %_31.1, i64* %17, align 8, !dbg !12488
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !12488
  %_24.0 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !12488, !nonnull !28, !align !1104, !noundef !28
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !12488
  %_24.1 = load i64, i64* %19, align 8, !dbg !12488
  br label %bb19, !dbg !12488

bb10:                                             ; preds = %bb1
  %20 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !12489
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !12489
  %_29.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !12489, !nonnull !28, !align !1104, !noundef !28
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !12489
  %_29.1 = load i64, i64* %22, align 8, !dbg !12489
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !12489
  store [0 x i8]* %_29.0, [0 x i8]** %23, align 8, !dbg !12489
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !12489
  store i64 %_29.1, i64* %24, align 8, !dbg !12489
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !12490, metadata !DIExpression()), !dbg !12494
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !12494
  store [0 x i8]* %_29.0, [0 x i8]** %25, align 8, !dbg !12494
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !12494
  store i64 %_29.1, i64* %26, align 8, !dbg !12494
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !12494
  %_17.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !12494, !nonnull !28, !align !1104, !noundef !28
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !12494
  %_17.1 = load i64, i64* %28, align 8, !dbg !12494
  br label %bb17, !dbg !12494

bb17:                                             ; preds = %bb10
  %29 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1, !dbg !12495
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !12495
  %_30.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !12495, !nonnull !28, !align !1104, !noundef !28
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !12495
  %_30.1 = load i64, i64* %31, align 8, !dbg !12495
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !12495
  store [0 x i8]* %_30.0, [0 x i8]** %32, align 8, !dbg !12495
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !12495
  store i64 %_30.1, i64* %33, align 8, !dbg !12495
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !12496, metadata !DIExpression()), !dbg !12500
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !12500
  store [0 x i8]* %_30.0, [0 x i8]** %34, align 8, !dbg !12500
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !12500
  store i64 %_30.1, i64* %35, align 8, !dbg !12500
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !12500
  %_20.0 = load [0 x i8]*, [0 x i8]** %36, align 8, !dbg !12500, !nonnull !28, !align !1104, !noundef !28
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !12500
  %_20.1 = load i64, i64* %37, align 8, !dbg !12500
  br label %bb18, !dbg !12500

bb18:                                             ; preds = %bb17
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h50a3afca2d487e74E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %searcher, [0 x i8]* align 1 %_17.0, i64 %_17.1, [0 x i8]* align 1 %_20.0, i64 %_20.1, i1 zeroext true), !dbg !12501
  br label %bb11, !dbg !12501

bb11:                                             ; preds = %bb18
  br label %bb14, !dbg !12502

bb14:                                             ; preds = %bb13, %bb11
  br label %bb16, !dbg !12503

bb19:                                             ; preds = %bb12
  %38 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1, !dbg !12504
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 0, !dbg !12504
  %_32.0 = load [0 x i8]*, [0 x i8]** %39, align 8, !dbg !12504, !nonnull !28, !align !1104, !noundef !28
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 1, !dbg !12504
  %_32.1 = load i64, i64* %40, align 8, !dbg !12504
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !12504
  store [0 x i8]* %_32.0, [0 x i8]** %41, align 8, !dbg !12504
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !12504
  store i64 %_32.1, i64* %42, align 8, !dbg !12504
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !12505, metadata !DIExpression()), !dbg !12509
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !12509
  store [0 x i8]* %_32.0, [0 x i8]** %43, align 8, !dbg !12509
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !12509
  store i64 %_32.1, i64* %44, align 8, !dbg !12509
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !12509
  %_27.0 = load [0 x i8]*, [0 x i8]** %45, align 8, !dbg !12509, !nonnull !28, !align !1104, !noundef !28
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !12509
  %_27.1 = load i64, i64* %46, align 8, !dbg !12509
  br label %bb20, !dbg !12509

bb20:                                             ; preds = %bb19
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h50a3afca2d487e74E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::TwoWaySearcher"* align 8 %searcher, [0 x i8]* align 1 %_24.0, i64 %_24.1, [0 x i8]* align 1 %_27.0, i64 %_27.1, i1 zeroext false), !dbg !12510
  br label %bb13, !dbg !12510

bb13:                                             ; preds = %bb20
  br label %bb14, !dbg !12502

bb16:                                             ; preds = %bb15, %bb14
  ret void, !dbg !12511

bb4:                                              ; preds = %bb6, %bb3
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h48004b3f13e71c0bE"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_3, %"core::str::pattern::StrSearcher"* align 8 %self), !dbg !12512
  br label %bb5, !dbg !12512

bb5:                                              ; preds = %bb4
  %47 = bitcast %"core::str::pattern::SearchStep"* %_3 to i64*, !dbg !12512
  %_5 = load i64, i64* %47, align 8, !dbg !12512, !range !12513, !noundef !28
  switch i64 %_5, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb6
    i64 2, label %bb9
  ], !dbg !12514

bb7:                                              ; preds = %bb5
  unreachable, !dbg !12512

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*, !dbg !12515
  %49 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %48, i32 0, i32 1, !dbg !12515
  %a = load i64, i64* %49, align 8, !dbg !12515
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !12515
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !12467, metadata !DIExpression()), !dbg !12516
  %50 = bitcast %"core::str::pattern::SearchStep"* %_3 to %"core::str::pattern::SearchStep::Match"*, !dbg !12517
  %51 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %50, i32 0, i32 2, !dbg !12517
  %b = load i64, i64* %51, align 8, !dbg !12517
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !12517
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !12469, metadata !DIExpression()), !dbg !12518
  %52 = bitcast { i64, i64 }* %_8 to i64*, !dbg !12519
  store i64 %a, i64* %52, align 8, !dbg !12519
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1, !dbg !12519
  store i64 %b, i64* %53, align 8, !dbg !12519
  %54 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !12520
  %55 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %54, i32 0, i32 1, !dbg !12520
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 0, !dbg !12520
  %57 = load i64, i64* %56, align 8, !dbg !12520
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_8, i32 0, i32 1, !dbg !12520
  %59 = load i64, i64* %58, align 8, !dbg !12520
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %55, i32 0, i32 0, !dbg !12520
  store i64 %57, i64* %60, align 8, !dbg !12520
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %55, i32 0, i32 1, !dbg !12520
  store i64 %59, i64* %61, align 8, !dbg !12520
  %62 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !12520
  store i64 1, i64* %62, align 8, !dbg !12520
  br label %bb15, !dbg !12521

bb6:                                              ; preds = %bb5
  br label %bb4, !dbg !12477

bb9:                                              ; preds = %bb5
  %63 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !12523
  store i64 0, i64* %63, align 8, !dbg !12523
  br label %bb15, !dbg !12524

bb15:                                             ; preds = %bb8, %bb9
  br label %bb16, !dbg !12511
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h48004b3f13e71c0bE"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::StrSearcher"* align 8 %self) unnamed_addr #0 !dbg !12525 {
start:
  %self.dbg.spill12 = alloca i32, align 4
  %ch.dbg.spill = alloca i32, align 4
  %self.dbg.spill11 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill10 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill9 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill8 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %pos.dbg.spill = alloca i64, align 8
  %is_match.dbg.spill = alloca i8, align 1
  %searcher.dbg.spill6 = alloca %"core::str::pattern::EmptyNeedle"*, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %is_long.dbg.spill = alloca i8, align 1
  %4 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %searcher.dbg.spill = alloca %"core::str::pattern::TwoWaySearcher"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::StrSearcher"*, align 8
  %otherwise = alloca %"core::str::pattern::SearchStep", align 8
  %b = alloca i64, align 8
  %_32 = alloca %"core::str::pattern::SearchStep", align 8
  %index = alloca i64, align 8
  %_10 = alloca { i8*, i8* }, align 8
  %_8 = alloca i32, align 4
  store %"core::str::pattern::StrSearcher"* %self, %"core::str::pattern::StrSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::StrSearcher"** %self.dbg.spill, metadata !12529, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.declare(metadata i64* %index, metadata !12549, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.declare(metadata i64* %b, metadata !12545, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.declare(metadata %"core::str::pattern::SearchStep"* %otherwise, metadata !12546, metadata !DIExpression()), !dbg !12561
  %5 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !12562
  %6 = bitcast %"core::str::pattern::StrSearcherImpl"* %5 to i64*, !dbg !12562
  %_2 = load i64, i64* %6, align 8, !dbg !12562, !range !1578, !noundef !28
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !12563

bb2:                                              ; preds = %start
  unreachable, !dbg !12562

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !12564
  %8 = bitcast %"core::str::pattern::StrSearcherImpl"* %7 to %"core::str::pattern::StrSearcherImpl::Empty"*, !dbg !12564
  %searcher5 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", %"core::str::pattern::StrSearcherImpl::Empty"* %8, i32 0, i32 1, !dbg !12564
  store %"core::str::pattern::EmptyNeedle"* %searcher5, %"core::str::pattern::EmptyNeedle"** %searcher.dbg.spill6, align 8, !dbg !12564
  call void @llvm.dbg.declare(metadata %"core::str::pattern::EmptyNeedle"** %searcher.dbg.spill6, metadata !12530, metadata !DIExpression()), !dbg !12565
  %9 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 4, !dbg !12566
  %10 = load i8, i8* %9, align 2, !dbg !12566, !range !1099, !noundef !28
  %_4 = trunc i8 %10 to i1, !dbg !12566
  br i1 %_4, label %bb4, label %bb5, !dbg !12566

bb1:                                              ; preds = %start
  %11 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 2, !dbg !12567
  %12 = bitcast %"core::str::pattern::StrSearcherImpl"* %11 to %"core::str::pattern::StrSearcherImpl::TwoWay"*, !dbg !12567
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", %"core::str::pattern::StrSearcherImpl::TwoWay"* %12, i32 0, i32 1, !dbg !12567
  store %"core::str::pattern::TwoWaySearcher"* %searcher, %"core::str::pattern::TwoWaySearcher"** %searcher.dbg.spill, align 8, !dbg !12567
  call void @llvm.dbg.declare(metadata %"core::str::pattern::TwoWaySearcher"** %searcher.dbg.spill, metadata !12539, metadata !DIExpression()), !dbg !12568
  %13 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4, !dbg !12569
  %_27 = load i64, i64* %13, align 8, !dbg !12569
  %14 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !12570
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !12570
  %_54.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !dbg !12570, !nonnull !28, !align !1104, !noundef !28
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !12570
  %_54.1 = load i64, i64* %16, align 8, !dbg !12570
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !12570
  store [0 x i8]* %_54.0, [0 x i8]** %17, align 8, !dbg !12570
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !12570
  store i64 %_54.1, i64* %18, align 8, !dbg !12570
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !12571, metadata !DIExpression()), !dbg !12575
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !12575
  store [0 x i8]* %_54.0, [0 x i8]** %19, align 8, !dbg !12575
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !12575
  store i64 %_54.1, i64* %20, align 8, !dbg !12575
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !12576, metadata !DIExpression()), !dbg !12580
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !12580
  store [0 x i8]* %_54.0, [0 x i8]** %21, align 8, !dbg !12580
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !12580
  store i64 %_54.1, i64* %22, align 8, !dbg !12580
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !12580
  %_60.0 = load [0 x i8]*, [0 x i8]** %23, align 8, !dbg !12580, !nonnull !28, !align !1104, !noundef !28
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !12580
  %_60.1 = load i64, i64* %24, align 8, !dbg !12580
  br label %bb23, !dbg !12580

bb23:                                             ; preds = %bb1
  %_26 = icmp eq i64 %_27, %_60.1, !dbg !12569
  br i1 %_26, label %bb12, label %bb13, !dbg !12569

bb13:                                             ; preds = %bb23
  %25 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 6, !dbg !12582
  %_31 = load i64, i64* %25, align 8, !dbg !12582
  %is_long = icmp eq i64 %_31, -1, !dbg !12582
  %26 = zext i1 %is_long to i8, !dbg !12582
  store i8 %26, i8* %is_long.dbg.spill, align 1, !dbg !12582
  call void @llvm.dbg.declare(metadata i8* %is_long.dbg.spill, metadata !12541, metadata !DIExpression()), !dbg !12583
  %27 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !12584
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0, !dbg !12584
  %_56.0 = load [0 x i8]*, [0 x i8]** %28, align 8, !dbg !12584, !nonnull !28, !align !1104, !noundef !28
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1, !dbg !12584
  %_56.1 = load i64, i64* %29, align 8, !dbg !12584
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !12584
  store [0 x i8]* %_56.0, [0 x i8]** %30, align 8, !dbg !12584
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !12584
  store i64 %_56.1, i64* %31, align 8, !dbg !12584
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !12585, metadata !DIExpression()), !dbg !12589
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !12589
  store [0 x i8]* %_56.0, [0 x i8]** %32, align 8, !dbg !12589
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !12589
  store i64 %_56.1, i64* %33, align 8, !dbg !12589
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !12589
  %_35.0 = load [0 x i8]*, [0 x i8]** %34, align 8, !dbg !12589, !nonnull !28, !align !1104, !noundef !28
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !12589
  %_35.1 = load i64, i64* %35, align 8, !dbg !12589
  br label %bb30, !dbg !12589

bb12:                                             ; preds = %bb23
  %36 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !12590
  store i64 2, i64* %36, align 8, !dbg !12590
  br label %bb22, !dbg !12591

bb22:                                             ; preds = %bb11, %bb4, %bb21, %bb12
  ret void, !dbg !12593

bb30:                                             ; preds = %bb13
  %37 = getelementptr inbounds %"core::str::pattern::StrSearcher", %"core::str::pattern::StrSearcher"* %self, i32 0, i32 1, !dbg !12594
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0, !dbg !12594
  %_57.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !12594, !nonnull !28, !align !1104, !noundef !28
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1, !dbg !12594
  %_57.1 = load i64, i64* %39, align 8, !dbg !12594
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !12594
  store [0 x i8]* %_57.0, [0 x i8]** %40, align 8, !dbg !12594
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !12594
  store i64 %_57.1, i64* %41, align 8, !dbg !12594
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !12595, metadata !DIExpression()), !dbg !12599
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !12599
  store [0 x i8]* %_57.0, [0 x i8]** %42, align 8, !dbg !12599
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !12599
  store i64 %_57.1, i64* %43, align 8, !dbg !12599
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !12599
  %_38.0 = load [0 x i8]*, [0 x i8]** %44, align 8, !dbg !12599, !nonnull !28, !align !1104, !noundef !28
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !12599
  %_38.1 = load i64, i64* %45, align 8, !dbg !12599
  br label %bb31, !dbg !12599

bb31:                                             ; preds = %bb30
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17he070564a8339565aE(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_32, %"core::str::pattern::TwoWaySearcher"* align 8 %searcher, [0 x i8]* align 1 %_35.0, i64 %_35.1, [0 x i8]* align 1 %_38.0, i64 %_38.1, i1 zeroext %is_long), !dbg !12600
  br label %bb14, !dbg !12600

bb14:                                             ; preds = %bb31
  %46 = bitcast %"core::str::pattern::SearchStep"* %_32 to i64*, !dbg !12600
  %_41 = load i64, i64* %46, align 8, !dbg !12600, !range !12513, !noundef !28
  %47 = icmp eq i64 %_41, 1, !dbg !12601
  br i1 %47, label %bb16, label %bb15, !dbg !12601

bb16:                                             ; preds = %bb14
  %48 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*, !dbg !12602
  %49 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %48, i32 0, i32 1, !dbg !12602
  %a = load i64, i64* %49, align 8, !dbg !12602
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !12602
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !12543, metadata !DIExpression()), !dbg !12603
  %50 = bitcast %"core::str::pattern::SearchStep"* %_32 to %"core::str::pattern::SearchStep::Reject"*, !dbg !12604
  %51 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %50, i32 0, i32 2, !dbg !12604
  %52 = load i64, i64* %51, align 8, !dbg !12604
  store i64 %52, i64* %b, align 8, !dbg !12604
  br label %bb17, !dbg !12605

bb15:                                             ; preds = %bb14
  %53 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*, !dbg !12606
  %54 = bitcast %"core::str::pattern::SearchStep"* %_32 to i8*, !dbg !12606
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false), !dbg !12606
  %55 = bitcast %"core::str::pattern::SearchStep"* %0 to i8*, !dbg !12607
  %56 = bitcast %"core::str::pattern::SearchStep"* %otherwise to i8*, !dbg !12607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false), !dbg !12607
  br label %bb21, !dbg !12608

bb21:                                             ; preds = %bb32, %bb15
  br label %bb22, !dbg !12609

bb17:                                             ; preds = %bb19, %bb16
  %57 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !12610
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %57, i32 0, i32 0, !dbg !12610
  %_58.0 = load [0 x i8]*, [0 x i8]** %58, align 8, !dbg !12610, !nonnull !28, !align !1104, !noundef !28
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %57, i32 0, i32 1, !dbg !12610
  %_58.1 = load i64, i64* %59, align 8, !dbg !12610
  %_47 = load i64, i64* %b, align 8, !dbg !12611
; call core::str::<impl str>::is_char_boundary
  %_45 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hea636987af350794E"([0 x i8]* align 1 %_58.0, i64 %_58.1, i64 %_47), !dbg !12610
  br label %bb18, !dbg !12610

bb18:                                             ; preds = %bb17
  %_44 = xor i1 %_45, true, !dbg !12612
  br i1 %_44, label %bb19, label %bb20, !dbg !12612

bb20:                                             ; preds = %bb18
  %v1 = load i64, i64* %b, align 8, !dbg !12613
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !12613
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !12614, metadata !DIExpression()), !dbg !12619
  %60 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4, !dbg !12621
  %v2 = load i64, i64* %60, align 8, !dbg !12621
  store i64 %v2, i64* %v2.dbg.spill, align 8, !dbg !12621
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !12618, metadata !DIExpression()), !dbg !12619
; call core::cmp::Ord::max
  %_48 = call i64 @_ZN4core3cmp3Ord3max17h87e416972f67cf67E(i64 %v1, i64 %v2), !dbg !12619
  br label %bb32, !dbg !12619

bb19:                                             ; preds = %bb18
  %61 = load i64, i64* %b, align 8, !dbg !12622
  %62 = add i64 %61, 1, !dbg !12622
  store i64 %62, i64* %b, align 8, !dbg !12622
  br label %bb17, !dbg !12605

bb32:                                             ; preds = %bb20
  %63 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", %"core::str::pattern::TwoWaySearcher"* %searcher, i32 0, i32 4, !dbg !12623
  store i64 %_48, i64* %63, align 8, !dbg !12623
  %_52 = load i64, i64* %b, align 8, !dbg !12624
  %64 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !12625
  %65 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %64, i32 0, i32 1, !dbg !12625
  store i64 %a, i64* %65, align 8, !dbg !12625
  %66 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !12625
  %67 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %66, i32 0, i32 2, !dbg !12625
  store i64 %_52, i64* %67, align 8, !dbg !12625
  %68 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !12625
  store i64 1, i64* %68, align 8, !dbg !12625
  br label %bb21, !dbg !12626

bb5:                                              ; preds = %bb3
  %69 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 2, !dbg !12627
  %70 = load i8, i8* %69, align 8, !dbg !12627, !range !1099, !noundef !28
  %is_match = trunc i8 %70 to i1, !dbg !12627
  %71 = zext i1 %is_match to i8, !dbg !12627
  store i8 %71, i8* %is_match.dbg.spill, align 1, !dbg !12627
  call void @llvm.dbg.declare(metadata i8* %is_match.dbg.spill, metadata !12533, metadata !DIExpression()), !dbg !12628
  %72 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 2, !dbg !12629
  %73 = load i8, i8* %72, align 8, !dbg !12629, !range !1099, !noundef !28
  %_6 = trunc i8 %73 to i1, !dbg !12629
  %74 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 2, !dbg !12630
  %75 = xor i1 %_6, true, !dbg !12630
  %76 = zext i1 %75 to i8, !dbg !12630
  store i8 %76, i8* %74, align 8, !dbg !12630
  %77 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher5 to i64*, !dbg !12631
  %pos = load i64, i64* %77, align 8, !dbg !12631
  store i64 %pos, i64* %pos.dbg.spill, align 8, !dbg !12631
  call void @llvm.dbg.declare(metadata i64* %pos.dbg.spill, metadata !12535, metadata !DIExpression()), !dbg !12632
  %78 = bitcast %"core::str::pattern::StrSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !12559
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %78, i32 0, i32 0, !dbg !12559
  %_55.0 = load [0 x i8]*, [0 x i8]** %79, align 8, !dbg !12559, !nonnull !28, !align !1104, !noundef !28
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %78, i32 0, i32 1, !dbg !12559
  %_55.1 = load i64, i64* %80, align 8, !dbg !12559
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !12559
  store [0 x i8]* %_55.0, [0 x i8]** %81, align 8, !dbg !12559
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !12559
  store i64 %_55.1, i64* %82, align 8, !dbg !12559
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !12556, metadata !DIExpression()), !dbg !12558
  store i64 %pos, i64* %index, align 8, !dbg !12633
  %_63 = load i64, i64* %index, align 8, !dbg !12558
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %83 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h308added6b9a2813E"(i64 %_63, [0 x i8]* align 1 %_55.0, i64 %_55.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc711 to %"core::panic::location::Location"*)), !dbg !12558
  %_12.0 = extractvalue { [0 x i8]*, i64 } %83, 0, !dbg !12558
  %_12.1 = extractvalue { [0 x i8]*, i64 } %83, 1, !dbg !12558
  br label %bb24, !dbg !12558

bb4:                                              ; preds = %bb3
  %84 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !12634
  store i64 2, i64* %84, align 8, !dbg !12634
  br label %bb22, !dbg !12591

bb24:                                             ; preds = %bb5
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill8, i32 0, i32 0, !dbg !12559
  store [0 x i8]* %_12.0, [0 x i8]** %85, align 8, !dbg !12559
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill8, i32 0, i32 1, !dbg !12559
  store i64 %_12.1, i64* %86, align 8, !dbg !12559
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill8, metadata !12635, metadata !DIExpression()), !dbg !12644
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill9, i32 0, i32 0, !dbg !12644
  store [0 x i8]* %_12.0, [0 x i8]** %87, align 8, !dbg !12644
  %88 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill9, i32 0, i32 1, !dbg !12644
  store i64 %_12.1, i64* %88, align 8, !dbg !12644
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill9, metadata !12645, metadata !DIExpression()), !dbg !12649
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !12649
  store [0 x i8]* %_12.0, [0 x i8]** %89, align 8, !dbg !12649
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !12649
  store i64 %_12.1, i64* %90, align 8, !dbg !12649
  %91 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !12649
  %_67.0 = load [0 x i8]*, [0 x i8]** %91, align 8, !dbg !12649, !nonnull !28, !align !1104, !noundef !28
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !12649
  %_67.1 = load i64, i64* %92, align 8, !dbg !12649
  br label %bb25, !dbg !12649

bb25:                                             ; preds = %bb24
  %93 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !12644
  store [0 x i8]* %_67.0, [0 x i8]** %93, align 8, !dbg !12644
  %94 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !12644
  store i64 %_67.1, i64* %94, align 8, !dbg !12644
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill10, metadata !12651, metadata !DIExpression()), !dbg !12655
; call core::slice::iter::Iter<T>::new
  %95 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h89eec0c95a4a6cfeE"([0 x i8]* align 1 %_67.0, i64 %_67.1), !dbg !12655
  %_65.0 = extractvalue { i8*, i8* } %95, 0, !dbg !12655
  %_65.1 = extractvalue { i8*, i8* } %95, 1, !dbg !12655
  br label %bb26, !dbg !12655

bb26:                                             ; preds = %bb25
  %96 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 0, !dbg !12644
  store i8* %_65.0, i8** %96, align 8, !dbg !12644
  %97 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1, !dbg !12644
  store i8* %_65.1, i8** %97, align 8, !dbg !12644
  store { i8*, i8* }* %_10, { i8*, i8* }** %self.dbg.spill11, align 8, !dbg !12559
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill11, metadata !12656, metadata !DIExpression()), !dbg !12663
; call core::str::validations::next_code_point
  %98 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h4a2ce66f7591b49eE({ i8*, i8* }* align 8 %_10), !dbg !12663
  %_71.0 = extractvalue { i32, i32 } %98, 0, !dbg !12663
  %_71.1 = extractvalue { i32, i32 } %98, 1, !dbg !12663
  br label %bb27, !dbg !12663

bb27:                                             ; preds = %bb26
; call core::option::Option<T>::map
  %99 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17he15e4dede6ede8eeE"(i32 %_71.0, i32 %_71.1), !dbg !12663, !range !7228
  store i32 %99, i32* %_8, align 4, !dbg !12663
  br label %bb28, !dbg !12663

bb28:                                             ; preds = %bb27
  br i1 %is_match, label %bb8, label %bb9, !dbg !12664

bb9:                                              ; preds = %bb28
  %100 = load i32, i32* %_8, align 4, !dbg !12559, !range !7228, !noundef !28
  %101 = sub i32 %100, 1114112, !dbg !12559
  %102 = icmp eq i32 %101, 0, !dbg !12559
  %_16 = select i1 %102, i64 0, i64 1, !dbg !12559
  switch i64 %_16, label %bb7 [
    i64 0, label %bb10
    i64 1, label %bb6
  ], !dbg !12665

bb8:                                              ; preds = %bb28
  %103 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !12666
  %104 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %103, i32 0, i32 1, !dbg !12666
  store i64 %pos, i64* %104, align 8, !dbg !12666
  %105 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !12666
  %106 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %105, i32 0, i32 2, !dbg !12666
  store i64 %pos, i64* %106, align 8, !dbg !12666
  %107 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !12666
  store i64 0, i64* %107, align 8, !dbg !12666
  br label %bb11, !dbg !12667

bb11:                                             ; preds = %bb10, %bb29, %bb8
  br label %bb22, !dbg !12668

bb7:                                              ; preds = %bb9
  unreachable, !dbg !12559

bb10:                                             ; preds = %bb9
  %108 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", %"core::str::pattern::EmptyNeedle"* %searcher5, i32 0, i32 4, !dbg !12669
  store i8 1, i8* %108, align 2, !dbg !12669
  %109 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !12670
  store i64 2, i64* %109, align 8, !dbg !12670
  br label %bb11, !dbg !12670

bb6:                                              ; preds = %bb9
  %ch = load i32, i32* %_8, align 4, !dbg !12671, !range !7223, !noundef !28
  store i32 %ch, i32* %ch.dbg.spill, align 4, !dbg !12671
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !12537, metadata !DIExpression()), !dbg !12672
  store i32 %ch, i32* %self.dbg.spill12, align 4, !dbg !12673
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill12, metadata !12674, metadata !DIExpression()), !dbg !12680
; call core::char::methods::len_utf8
  %_21 = call i64 @_ZN4core4char7methods8len_utf817hf0e1d35775b96dcfE(i32 %ch), !dbg !12680
  br label %bb29, !dbg !12680

bb29:                                             ; preds = %bb6
  %110 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher5 to i64*, !dbg !12681
  %111 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher5 to i64*, !dbg !12681
  %112 = load i64, i64* %111, align 8, !dbg !12681
  %113 = add i64 %112, %_21, !dbg !12681
  store i64 %113, i64* %110, align 8, !dbg !12681
  %114 = bitcast %"core::str::pattern::EmptyNeedle"* %searcher5 to i64*, !dbg !12682
  %_24 = load i64, i64* %114, align 8, !dbg !12682
  %115 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !12683
  %116 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %115, i32 0, i32 1, !dbg !12683
  store i64 %pos, i64* %116, align 8, !dbg !12683
  %117 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !12683
  %118 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %117, i32 0, i32 2, !dbg !12683
  store i64 %_24, i64* %118, align 8, !dbg !12683
  %119 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !12683
  store i64 1, i64* %119, align 8, !dbg !12683
  br label %bb11, !dbg !12684
}

; <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h3abb5efb30b14f62E"({ i8*, i8* }* align 8 %self, [0 x i8]* align 1 %s.0, i64 %s.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12685 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %e.dbg.spill = alloca i8*, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_10 = alloca i8*, align 8
  %_3 = alloca i8*, align 8
  %2 = alloca i8, align 1
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !12690, metadata !DIExpression()), !dbg !12694
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !12691, metadata !DIExpression()), !dbg !12695
  %5 = bitcast { i8*, i8* }* %self to %"std::sys::unix::stdio::Stderr"**, !dbg !12696
  %_12 = load %"std::sys::unix::stdio::Stderr"*, %"std::sys::unix::stdio::Stderr"** %5, align 8, !dbg !12696, !nonnull !28, !align !1104, !noundef !28
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !12697
  store [0 x i8]* %s.0, [0 x i8]** %6, align 8, !dbg !12697
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !12697
  store i64 %s.1, i64* %7, align 8, !dbg !12697
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !12698, metadata !DIExpression()), !dbg !12702
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !12702
  store [0 x i8]* %s.0, [0 x i8]** %8, align 8, !dbg !12702
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !12702
  store i64 %s.1, i64* %9, align 8, !dbg !12702
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !12702
  %_6.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !12702, !nonnull !28, !align !1104, !noundef !28
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !12702
  %_6.1 = load i64, i64* %11, align 8, !dbg !12702
  br label %bb8, !dbg !12702

bb8:                                              ; preds = %start
; call std::io::Write::write_all
  %12 = call i8* @_ZN3std2io5Write9write_all17h2d81f1aebf73884aE(%"std::sys::unix::stdio::Stderr"* align 1 %_12, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !12696
  store i8* %12, i8** %_3, align 8, !dbg !12696
  br label %bb1, !dbg !12696

bb1:                                              ; preds = %bb8
  %13 = bitcast i8** %_3 to {}**, !dbg !12696
  %14 = load {}*, {}** %13, align 8, !dbg !12696
  %15 = icmp eq {}* %14, null, !dbg !12696
  %_8 = select i1 %15, i64 0, i64 1, !dbg !12696
  switch i64 %_8, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !12703

bb3:                                              ; preds = %bb1
  unreachable, !dbg !12696

bb4:                                              ; preds = %bb1
  store i8 0, i8* %2, align 1, !dbg !12704
  br label %bb7, !dbg !12705

bb2:                                              ; preds = %bb1
  %e = load i8*, i8** %_3, align 8, !dbg !12706, !nonnull !28, !noundef !28
  store i8* %e, i8** %e.dbg.spill, align 8, !dbg !12706
  call void @llvm.dbg.declare(metadata i8** %e.dbg.spill, metadata !12692, metadata !DIExpression()), !dbg !12707
  store i8* %e, i8** %_10, align 8, !dbg !12708
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !12709
; invoke core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  invoke void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h38ccdb4d7617198cE"(i8** %16)
          to label %bb6 unwind label %cleanup, !dbg !12709

bb5:                                              ; preds = %cleanup
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !12709
  %18 = load i8*, i8** %_10, align 8, !dbg !12709
  store i8* %18, i8** %17, align 8, !dbg !12709
  %19 = bitcast { i8*, i32 }* %0 to i8**, !dbg !12710
  %20 = load i8*, i8** %19, align 8, !dbg !12710
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !12710
  %22 = load i32, i32* %21, align 8, !dbg !12710
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0, !dbg !12710
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1, !dbg !12710
  resume { i8*, i32 } %24, !dbg !12710

cleanup:                                          ; preds = %bb2
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb5

bb6:                                              ; preds = %bb2
  %30 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !12709
  %31 = load i8*, i8** %_10, align 8, !dbg !12709
  store i8* %31, i8** %30, align 8, !dbg !12709
  store i8 1, i8* %2, align 1, !dbg !12711
  br label %bb7, !dbg !12712

bb7:                                              ; preds = %bb4, %bb6
  %32 = load i8, i8* %2, align 1, !dbg !12713, !range !1099, !noundef !28
  %33 = trunc i8 %32 to i1, !dbg !12713
  ret i1 %33, !dbg !12713
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 { [0 x i8]*, i64 }* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hd6789abdb498dafcE"(%"alloc::vec::Vec<&str>"* align 8 %self, i64 %index, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12714 {
start:
  %index.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca { [0 x i8]*, i64 }*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<&str>"*, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<&str>"*, align 8
  %_21 = alloca { i8*, i64 }, align 8
  %_20 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  %_8 = alloca i8, align 1
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill, metadata !12719, metadata !DIExpression()), !dbg !12722
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !12720, metadata !DIExpression()), !dbg !12723
  store i8 1, i8* %_8, align 1, !dbg !12724
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill1, align 8, !dbg !12725
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill1, metadata !12726, metadata !DIExpression()), !dbg !12729
; invoke alloc::vec::Vec<T,A>::as_ptr
  %data = invoke { [0 x i8]*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hc3c39fd5d04ba6beE"(%"alloc::vec::Vec<&str>"* align 8 %self)
          to label %bb4 unwind label %cleanup, !dbg !12729

bb3:                                              ; preds = %cleanup
  %2 = load i8, i8* %_8, align 1, !dbg !12731, !range !1099, !noundef !28
  %3 = trunc i8 %2 to i1, !dbg !12731
  br i1 %3, label %bb2, label %bb1, !dbg !12731

cleanup:                                          ; preds = %bb4, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb3

bb4:                                              ; preds = %start
  store { [0 x i8]*, i64 }* %data, { [0 x i8]*, i64 }** %data.dbg.spill, align 8, !dbg !12729
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %data.dbg.spill, metadata !12732, metadata !DIExpression()), !dbg !12740
  %9 = getelementptr inbounds %"alloc::vec::Vec<&str>", %"alloc::vec::Vec<&str>"* %self, i32 0, i32 1, !dbg !12729
  %len = load i64, i64* %9, align 8, !dbg !12729
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !12729
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !12736, metadata !DIExpression()), !dbg !12740
  store { [0 x i8]*, i64 }* %data, { [0 x i8]*, i64 }** %data.dbg.spill2, align 8, !dbg !12740
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %data.dbg.spill2, metadata !12742, metadata !DIExpression()), !dbg !12747
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !12740
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !12746, metadata !DIExpression()), !dbg !12747
  store { [0 x i8]*, i64 }* %data, { [0 x i8]*, i64 }** %self.dbg.spill4, align 8, !dbg !12747
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill4, metadata !12749, metadata !DIExpression()), !dbg !12753
  %data_address = bitcast { [0 x i8]*, i64 }* %data to {}*, !dbg !12753
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !12753
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !12755, metadata !DIExpression()), !dbg !12760
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !12747
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !12759, metadata !DIExpression()), !dbg !12760
  %10 = bitcast { i8*, i64 }* %_21 to {}**, !dbg !12760
  store {}* %data_address, {}** %10, align 8, !dbg !12760
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_21, i32 0, i32 1, !dbg !12760
  store i64 %len, i64* %11, align 8, !dbg !12760
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_20 to { i8*, i64 }*, !dbg !12760
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_21, i32 0, i32 0, !dbg !12760
  %14 = load i8*, i8** %13, align 8, !dbg !12760
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_21, i32 0, i32 1, !dbg !12760
  %16 = load i64, i64* %15, align 8, !dbg !12760
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 0, !dbg !12760
  store i8* %14, i8** %17, align 8, !dbg !12760
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 1, !dbg !12760
  store i64 %16, i64* %18, align 8, !dbg !12760
  %19 = bitcast %"core::ptr::metadata::PtrRepr<[&str]>"* %_20 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !12760
  %20 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %19, i32 0, i32 0, !dbg !12760
  %_13.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %20, align 8, !dbg !12760
  %21 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %19, i32 0, i32 1, !dbg !12760
  %_13.1 = load i64, i64* %21, align 8, !dbg !12760
  %22 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !12762
  store [0 x { [0 x i8]*, i64 }]* %_13.0, [0 x { [0 x i8]*, i64 }]** %22, align 8, !dbg !12762
  %23 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !12762
  store i64 %_13.1, i64* %23, align 8, !dbg !12762
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill5, metadata !12763, metadata !DIExpression()), !dbg !12771
  store i8 0, i8* %_8, align 1, !dbg !12772
  store i64 %index, i64* %index.dbg.spill6, align 8, !dbg !12772
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill6, metadata !12769, metadata !DIExpression()), !dbg !12771
; invoke <usize as core::slice::index::SliceIndex<[T]>>::index
  %24 = invoke align 8 { [0 x i8]*, i64 }* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc2bd77b2ca9788fdE"(i64 %index, [0 x { [0 x i8]*, i64 }]* align 8 %_13.0, i64 %_13.1, %"core::panic::location::Location"* align 8 %0)
          to label %bb5 unwind label %cleanup, !dbg !12771

bb5:                                              ; preds = %bb4
  ret { [0 x i8]*, i64 }* %24, !dbg !12773

bb1:                                              ; preds = %bb2, %bb3
  %25 = bitcast { i8*, i32 }* %1 to i8**, !dbg !12774
  %26 = load i8*, i8** %25, align 8, !dbg !12774
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !12774
  %28 = load i32, i32* %27, align 8, !dbg !12774
  %29 = insertvalue { i8*, i32 } undef, i8* %26, 0, !dbg !12774
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1, !dbg !12774
  resume { i8*, i32 } %30, !dbg !12774

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !12731
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hc1d724428925cc3cE"(i32 %ch) unnamed_addr #0 !dbg !12775 {
start:
  %0 = alloca i32, align 4
  %i.dbg.spill1 = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %_1.dbg.spill, metadata !12780, metadata !DIExpression()), !dbg !12781
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !12779, metadata !DIExpression()), !dbg !12782
  store i32 %ch, i32* %i.dbg.spill, align 4, !dbg !12783
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !12784, metadata !DIExpression()), !dbg !12791
  store i32 %ch, i32* %i.dbg.spill1, align 4, !dbg !12791
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill1, metadata !12793, metadata !DIExpression()), !dbg !12799
  store i32 %ch, i32* %0, align 4, !dbg !12799
  %1 = load i32, i32* %0, align 4, !dbg !12799, !range !7223, !noundef !28
  br label %bb1, !dbg !12799

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !12801
}

; <core::str::iter::Lines as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11c66e7f15130a1bE"(%"core::str::iter::Lines"* align 8 %self) unnamed_addr #0 !dbg !12802 {
start:
  %self.dbg.spill4 = alloca %"core::str::iter::SplitTerminator<char>"*, align 8
  %self.dbg.spill2 = alloca %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"*, align 8
  %self.dbg.spill = alloca %"core::str::iter::Lines"*, align 8
  store %"core::str::iter::Lines"* %self, %"core::str::iter::Lines"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Lines"** %self.dbg.spill, metadata !12808, metadata !DIExpression()), !dbg !12809
  %self1 = bitcast %"core::str::iter::Lines"* %self to %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"*, !dbg !12810
  store %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"* %self1, %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"** %self.dbg.spill2, align 8, !dbg !12810
  call void @llvm.dbg.declare(metadata %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"** %self.dbg.spill2, metadata !12811, metadata !DIExpression()), !dbg !12820
  %self3 = bitcast %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"* %self1 to %"core::str::iter::SplitTerminator<char>"*, !dbg !12820
  store %"core::str::iter::SplitTerminator<char>"* %self3, %"core::str::iter::SplitTerminator<char>"** %self.dbg.spill4, align 8, !dbg !12820
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitTerminator<char>"** %self.dbg.spill4, metadata !12821, metadata !DIExpression()), !dbg !12828
  %_6 = bitcast %"core::str::iter::SplitTerminator<char>"* %self3 to %"core::str::iter::SplitInternal<char>"*, !dbg !12828
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h836d2853c71d789aE"(%"core::str::iter::SplitInternal<char>"* align 8 %_6), !dbg !12828
  %_3.0 = extractvalue { i8*, i64 } %0, 0, !dbg !12828
  %_3.1 = extractvalue { i8*, i64 } %0, 1, !dbg !12828
  br label %bb2, !dbg !12828

bb2:                                              ; preds = %start
  %_5 = bitcast %"core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>"* %self1 to %"core::str::LinesAnyMap"*, !dbg !12820
; call core::option::Option<T>::map
  %1 = call { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hf5becb50fc7a807aE"(i8* align 1 %_3.0, i64 %_3.1, %"core::str::LinesAnyMap"* align 1 %_5), !dbg !12820
  %2 = extractvalue { i8*, i64 } %1, 0, !dbg !12820
  %3 = extractvalue { i8*, i64 } %1, 1, !dbg !12820
  br label %bb1, !dbg !12820

bb1:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0, !dbg !12830
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1, !dbg !12830
  ret { i8*, i64 } %5, !dbg !12830
}

; <core::str::iter::Lines as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h480fba72e8ec65f4E"({ i64, { i64, i64 } }* sret({ i64, { i64, i64 } }) %0, %"core::str::iter::Lines"* align 8 %self) unnamed_addr #0 !dbg !12831 {
start:
  %self.dbg.spill = alloca %"core::str::iter::Lines"*, align 8
  %_4 = alloca { i64, i64 }, align 8
  store %"core::str::iter::Lines"* %self, %"core::str::iter::Lines"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Lines"** %self.dbg.spill, metadata !12840, metadata !DIExpression()), !dbg !12841
  %1 = bitcast { i64, i64 }* %_4 to i64*, !dbg !12842
  store i64 0, i64* %1, align 8, !dbg !12842
  %2 = bitcast { i64, { i64, i64 } }* %0 to i64*, !dbg !12842
  store i64 0, i64* %2, align 8, !dbg !12842
  %3 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1, !dbg !12842
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0, !dbg !12842
  %5 = load i64, i64* %4, align 8, !dbg !12842, !range !1578, !noundef !28
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !12842
  %7 = load i64, i64* %6, align 8, !dbg !12842
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !12842
  store i64 %5, i64* %8, align 8, !dbg !12842
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !12842
  store i64 %7, i64* %9, align 8, !dbg !12842
  ret void, !dbg !12860
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hd598a1d4db3a7242E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharSearcher"* align 8 %self) unnamed_addr #0 !dbg !12861 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %index.dbg.spill23 = alloca { i64, i64 }, align 8
  %self.dbg.spill22 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill21 = alloca [4 x i8]*, align 8
  %self.dbg.spill19 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill18 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill17 = alloca { [0 x i8]*, i64 }, align 8
  %found_char.dbg.spill = alloca i64, align 8
  %index.dbg.spill16 = alloca i64, align 8
  %last_byte.dbg.spill = alloca i8, align 1
  %2 = alloca i8*, align 8
  %count.dbg.spill14 = alloca i64, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill12 = alloca i8*, align 8
  %self.dbg.spill10 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %residual.dbg.spill2 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca %"core::str::pattern::CharSearcher"*, align 8
  %_51 = alloca { i64, i64 }, align 8
  %index4 = alloca { i64, i64 }, align 8
  %_46 = alloca { [0 x i8]*, i64 }, align 8
  %slice = alloca { [0 x i8]*, i64 }, align 8
  %index3 = alloca { i64, i64 }, align 8
  %_34 = alloca { i8*, i64 }, align 8
  %_21 = alloca { i64, i64 }, align 8
  %index = alloca { i64, i64 }, align 8
  %self1 = alloca { i8*, i64 }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  store %"core::str::pattern::CharSearcher"* %self, %"core::str::pattern::CharSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharSearcher"** %self.dbg.spill, metadata !12867, metadata !DIExpression()), !dbg !12882
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self1, metadata !12883, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index, metadata !12909, metadata !DIExpression()), !dbg !12917
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !12870, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill2, metadata !12919, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index3, metadata !12927, metadata !DIExpression()), !dbg !12932
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice, metadata !12880, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index4, metadata !12935, metadata !DIExpression()), !dbg !12943
  br label %bb1, !dbg !12945

bb1:                                              ; preds = %bb13, %start
  %4 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !12908
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !12908
  %_55.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !dbg !12908, !nonnull !28, !align !1104, !noundef !28
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !12908
  %_55.1 = load i64, i64* %6, align 8, !dbg !12908
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !12908
  store [0 x i8]* %_55.0, [0 x i8]** %7, align 8, !dbg !12908
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !12908
  store i64 %_55.1, i64* %8, align 8, !dbg !12908
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !12946, metadata !DIExpression()), !dbg !12950
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !12950
  store [0 x i8]* %_55.0, [0 x i8]** %9, align 8, !dbg !12950
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !12950
  store i64 %_55.1, i64* %10, align 8, !dbg !12950
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !12950
  %_6.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !12950, !nonnull !28, !align !1104, !noundef !28
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !12950
  %_6.1 = load i64, i64* %12, align 8, !dbg !12950
  br label %bb17, !dbg !12950

bb17:                                             ; preds = %bb1
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !12908
  store [0 x i8]* %_6.0, [0 x i8]** %13, align 8, !dbg !12908
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !12908
  store i64 %_6.1, i64* %14, align 8, !dbg !12908
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !12915, metadata !DIExpression()), !dbg !12917
  %15 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !12951
  %_9 = load i64, i64* %15, align 8, !dbg !12951
  %16 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2, !dbg !12952
  %_10 = load i64, i64* %16, align 8, !dbg !12952
  %17 = bitcast { i64, i64 }* %index to i64*, !dbg !12951
  store i64 %_9, i64* %17, align 8, !dbg !12951
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !12951
  store i64 %_10, i64* %18, align 8, !dbg !12951
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 0, !dbg !12917
  %_58.0 = load i64, i64* %19, align 8, !dbg !12917
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !12917
  %_58.1 = load i64, i64* %20, align 8, !dbg !12917
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %21 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h1044681f6d30361aE"(i64 %_58.0, i64 %_58.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !12917
  store { i8*, i64 } %21, { i8*, i64 }* %self1, align 8, !dbg !12917
  br label %bb18, !dbg !12917

bb18:                                             ; preds = %bb17
  %22 = bitcast { i8*, i64 }* %self1 to {}**, !dbg !12907
  %23 = load {}*, {}** %22, align 8, !dbg !12907
  %24 = icmp eq {}* %23, null, !dbg !12907
  %_60 = select i1 %24, i64 0, i64 1, !dbg !12907
  switch i64 %_60, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !12907

bb20:                                             ; preds = %bb18
  unreachable, !dbg !12907

bb19:                                             ; preds = %bb18
  %25 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !12907
  store {}* null, {}** %25, align 8, !dbg !12907
  br label %bb2, !dbg !12907

bb21:                                             ; preds = %bb18
  %26 = bitcast { i8*, i64 }* %self1 to { [0 x i8]*, i64 }*, !dbg !12907
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !12907
  %v.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !12907, !nonnull !28, !align !1104, !noundef !28
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !12907
  %v.1 = load i64, i64* %28, align 8, !dbg !12907
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !12907
  store [0 x i8]* %v.0, [0 x i8]** %29, align 8, !dbg !12907
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !12907
  store i64 %v.1, i64* %30, align 8, !dbg !12907
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !12904, metadata !DIExpression()), !dbg !12953
  %31 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !12953
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0, !dbg !12953
  store [0 x i8]* %v.0, [0 x i8]** %32, align 8, !dbg !12953
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1, !dbg !12953
  store i64 %v.1, i64* %33, align 8, !dbg !12953
  br label %bb2, !dbg !12907

bb2:                                              ; preds = %bb19, %bb21
  %34 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !12908
  %35 = load {}*, {}** %34, align 8, !dbg !12908
  %36 = icmp eq {}* %35, null, !dbg !12908
  %_11 = select i1 %36, i64 1, i64 0, !dbg !12908
  switch i64 %_11, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !12908

bb4:                                              ; preds = %bb2
  unreachable, !dbg !12908

bb3:                                              ; preds = %bb2
  %37 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !12908
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0, !dbg !12908
  %val.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !12908, !nonnull !28, !align !1104, !noundef !28
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1, !dbg !12908
  %val.1 = load i64, i64* %39, align 8, !dbg !12908
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !12908
  store [0 x i8]* %val.0, [0 x i8]** %40, align 8, !dbg !12908
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !12908
  store i64 %val.1, i64* %41, align 8, !dbg !12908
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !12872, metadata !DIExpression()), !dbg !12954
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 0, !dbg !12954
  store [0 x i8]* %val.0, [0 x i8]** %42, align 8, !dbg !12954
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 1, !dbg !12954
  store i64 %val.1, i64* %43, align 8, !dbg !12954
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %bytes.dbg.spill, metadata !12868, metadata !DIExpression()), !dbg !12955
  %_18 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5, !dbg !12956
  %self.0 = bitcast [4 x i8]* %_18 to [0 x i8]*, !dbg !12956
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !12956
  store [0 x i8]* %self.0, [0 x i8]** %44, align 8, !dbg !12956
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !12956
  store i64 4, i64* %45, align 8, !dbg !12956
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !12957, metadata !DIExpression()), !dbg !12964
  %46 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !12965
  %_20 = load i64, i64* %46, align 8, !dbg !12965
  %index8 = sub i64 %_20, 1, !dbg !12965
  store i64 %index8, i64* %index.dbg.spill, align 8, !dbg !12965
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !12963, metadata !DIExpression()), !dbg !12964
  store i64 %index8, i64* %self.dbg.spill9, align 8, !dbg !12964
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !12966, metadata !DIExpression()), !dbg !12974
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !12964
  store [0 x i8]* %self.0, [0 x i8]** %47, align 8, !dbg !12964
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !12964
  store i64 4, i64* %48, align 8, !dbg !12964
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !12970, metadata !DIExpression()), !dbg !12974
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !12974
  store [0 x i8]* %self.0, [0 x i8]** %49, align 8, !dbg !12974
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !12974
  store i64 4, i64* %50, align 8, !dbg !12974
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill10, metadata !12976, metadata !DIExpression()), !dbg !12980
  %self11 = bitcast [0 x i8]* %self.0 to i8*, !dbg !12980
  store i8* %self11, i8** %self.dbg.spill12, align 8, !dbg !12980
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill12, metadata !12982, metadata !DIExpression()), !dbg !12987
  store i64 %index8, i64* %count.dbg.spill, align 8, !dbg !12974
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !12986, metadata !DIExpression()), !dbg !12987
  store i8* %self11, i8** %self.dbg.spill13, align 8, !dbg !12987
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !12988, metadata !DIExpression()), !dbg !12993
  store i64 %index8, i64* %count.dbg.spill14, align 8, !dbg !12987
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill14, metadata !12992, metadata !DIExpression()), !dbg !12993
  %51 = getelementptr inbounds i8, i8* %self11, i64 %index8, !dbg !12993
  store i8* %51, i8** %2, align 8, !dbg !12993
  %_63 = load i8*, i8** %2, align 8, !dbg !12993
  br label %bb22, !dbg !12993

bb5:                                              ; preds = %bb2
  %52 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !12925
  store i64 0, i64* %52, align 8, !dbg !12925
  br label %bb16, !dbg !12995

bb16:                                             ; preds = %bb15, %bb5
  ret void, !dbg !12997

bb22:                                             ; preds = %bb3
  %last_byte = load i8, i8* %_63, align 1, !dbg !12998
  store i8 %last_byte, i8* %last_byte.dbg.spill, align 1, !dbg !12998
  call void @llvm.dbg.declare(metadata i8* %last_byte.dbg.spill, metadata !12874, metadata !DIExpression()), !dbg !12999
; call core::slice::memchr::memchr
  %53 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17h89ad2c6d6bd525ccE(i8 %last_byte, [0 x i8]* align 1 %val.0, i64 %val.1), !dbg !13000
  store { i64, i64 } %53, { i64, i64 }* %_21, align 8, !dbg !13000
  br label %bb6, !dbg !13000

bb6:                                              ; preds = %bb22
  %54 = bitcast { i64, i64 }* %_21 to i64*, !dbg !13001
  %_24 = load i64, i64* %54, align 8, !dbg !13001, !range !1578, !noundef !28
  %55 = icmp eq i64 %_24, 1, !dbg !13001
  br i1 %55, label %bb7, label %bb14, !dbg !13001

bb7:                                              ; preds = %bb6
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1, !dbg !13002
  %index15 = load i64, i64* %56, align 8, !dbg !13002
  store i64 %index15, i64* %index.dbg.spill16, align 8, !dbg !13002
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill16, metadata !12876, metadata !DIExpression()), !dbg !13002
  %_26 = add i64 %index15, 1, !dbg !13003
  %57 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !13004
  %58 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !13004
  %59 = load i64, i64* %58, align 8, !dbg !13004
  %60 = add i64 %59, %_26, !dbg !13004
  store i64 %60, i64* %57, align 8, !dbg !13004
  %61 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !13005
  %_29 = load i64, i64* %61, align 8, !dbg !13005
  %62 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !13006
  %_30 = load i64, i64* %62, align 8, !dbg !13006
  %_28 = icmp uge i64 %_29, %_30, !dbg !13005
  br i1 %_28, label %bb8, label %bb13, !dbg !13005

bb14:                                             ; preds = %bb6
  %63 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2, !dbg !13007
  %_54 = load i64, i64* %63, align 8, !dbg !13007
  %64 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !13008
  store i64 %_54, i64* %64, align 8, !dbg !13008
  %65 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !13009
  store i64 0, i64* %65, align 8, !dbg !13009
  br label %bb15, !dbg !13010

bb15:                                             ; preds = %bb10, %bb14
  br label %bb16, !dbg !12995

bb13:                                             ; preds = %bb12, %bb7
  br label %bb1, !dbg !12945

bb8:                                              ; preds = %bb7
  %66 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !13011
  %_32 = load i64, i64* %66, align 8, !dbg !13011
  %67 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !13012
  %_33 = load i64, i64* %67, align 8, !dbg !13012
  %found_char = sub i64 %_32, %_33, !dbg !13011
  store i64 %found_char, i64* %found_char.dbg.spill, align 8, !dbg !13011
  call void @llvm.dbg.declare(metadata i64* %found_char.dbg.spill, metadata !12878, metadata !DIExpression()), !dbg !13013
  %68 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !12933
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0, !dbg !12933
  %_56.0 = load [0 x i8]*, [0 x i8]** %69, align 8, !dbg !12933, !nonnull !28, !align !1104, !noundef !28
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1, !dbg !12933
  %_56.1 = load i64, i64* %70, align 8, !dbg !12933
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 0, !dbg !12933
  store [0 x i8]* %_56.0, [0 x i8]** %71, align 8, !dbg !12933
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 1, !dbg !12933
  store i64 %_56.1, i64* %72, align 8, !dbg !12933
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill17, metadata !13014, metadata !DIExpression()), !dbg !13018
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !13018
  store [0 x i8]* %_56.0, [0 x i8]** %73, align 8, !dbg !13018
  %74 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !13018
  store i64 %_56.1, i64* %74, align 8, !dbg !13018
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !13018
  %_36.0 = load [0 x i8]*, [0 x i8]** %75, align 8, !dbg !13018, !nonnull !28, !align !1104, !noundef !28
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !13018
  %_36.1 = load i64, i64* %76, align 8, !dbg !13018
  br label %bb23, !dbg !13018

bb23:                                             ; preds = %bb8
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 0, !dbg !12933
  store [0 x i8]* %_36.0, [0 x i8]** %77, align 8, !dbg !12933
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 1, !dbg !12933
  store i64 %_36.1, i64* %78, align 8, !dbg !12933
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill18, metadata !12931, metadata !DIExpression()), !dbg !12932
  %79 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !13019
  %_40 = load i64, i64* %79, align 8, !dbg !13019
  %80 = bitcast { i64, i64 }* %index3 to i64*, !dbg !13020
  store i64 %found_char, i64* %80, align 8, !dbg !13020
  %81 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 1, !dbg !13020
  store i64 %_40, i64* %81, align 8, !dbg !13020
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 0, !dbg !12932
  %_77.0 = load i64, i64* %82, align 8, !dbg !12932
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 1, !dbg !12932
  %_77.1 = load i64, i64* %83, align 8, !dbg !12932
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %84 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h1044681f6d30361aE"(i64 %_77.0, i64 %_77.1, [0 x i8]* align 1 %_36.0, i64 %_36.1), !dbg !12932
  store { i8*, i64 } %84, { i8*, i64 }* %_34, align 8, !dbg !12932
  br label %bb24, !dbg !12932

bb24:                                             ; preds = %bb23
  %85 = bitcast { i8*, i64 }* %_34 to {}**, !dbg !13021
  %86 = load {}*, {}** %85, align 8, !dbg !13021
  %87 = icmp eq {}* %86, null, !dbg !13021
  %_41 = select i1 %87, i64 0, i64 1, !dbg !13021
  %88 = icmp eq i64 %_41, 1, !dbg !13021
  br i1 %88, label %bb9, label %bb12, !dbg !13021

bb9:                                              ; preds = %bb24
  %89 = bitcast { i8*, i64 }* %_34 to { [0 x i8]*, i64 }*, !dbg !12934
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %89, i32 0, i32 0, !dbg !12934
  %91 = load [0 x i8]*, [0 x i8]** %90, align 8, !dbg !12934, !nonnull !28, !align !1104, !noundef !28
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %89, i32 0, i32 1, !dbg !12934
  %93 = load i64, i64* %92, align 8, !dbg !12934
  %94 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0, !dbg !12934
  store [0 x i8]* %91, [0 x i8]** %94, align 8, !dbg !12934
  %95 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1, !dbg !12934
  store i64 %93, i64* %95, align 8, !dbg !12934
  store { [0 x i8]*, i64 }* %slice, { [0 x i8]*, i64 }** %self.dbg.spill19, align 8, !dbg !13022
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill19, metadata !13023, metadata !DIExpression()), !dbg !13028
  %self20 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5, !dbg !12944
  store [4 x i8]* %self20, [4 x i8]** %self.dbg.spill21, align 8, !dbg !12944
  call void @llvm.dbg.declare(metadata [4 x i8]** %self.dbg.spill21, metadata !12942, metadata !DIExpression()), !dbg !12943
  %96 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !13029
  %_50 = load i64, i64* %96, align 8, !dbg !13029
  %97 = bitcast { i64, i64 }* %index4 to i64*, !dbg !13030
  store i64 0, i64* %97, align 8, !dbg !13030
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 1, !dbg !13030
  store i64 %_50, i64* %98, align 8, !dbg !13030
  %_80.0 = bitcast [4 x i8]* %self20 to [0 x i8]*, !dbg !12943
  %99 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill22, i32 0, i32 0, !dbg !12943
  store [0 x i8]* %_80.0, [0 x i8]** %99, align 8, !dbg !12943
  %100 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill22, i32 0, i32 1, !dbg !12943
  store i64 4, i64* %100, align 8, !dbg !12943
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill22, metadata !13031, metadata !DIExpression()), !dbg !13038
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 0, !dbg !12943
  %index.0 = load i64, i64* %101, align 8, !dbg !12943
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 1, !dbg !12943
  %index.1 = load i64, i64* %102, align 8, !dbg !12943
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill23, i32 0, i32 0, !dbg !12943
  store i64 %index.0, i64* %103, align 8, !dbg !12943
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill23, i32 0, i32 1, !dbg !12943
  store i64 %index.1, i64* %104, align 8, !dbg !12943
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index.dbg.spill23, metadata !13037, metadata !DIExpression()), !dbg !13038
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %105 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hf4ddb75c2013ce2dE"(i64 %index.0, i64 %index.1, [0 x i8]* align 1 %_80.0, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc713 to %"core::panic::location::Location"*)), !dbg !13038
  %_47.0 = extractvalue { [0 x i8]*, i64 } %105, 0, !dbg !13038
  %_47.1 = extractvalue { [0 x i8]*, i64 } %105, 1, !dbg !13038
  br label %bb25, !dbg !13038

bb12:                                             ; preds = %bb11, %bb24
  br label %bb13, !dbg !13040

bb25:                                             ; preds = %bb9
  %106 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0, !dbg !13041
  store [0 x i8]* %_47.0, [0 x i8]** %106, align 8, !dbg !13041
  %107 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1, !dbg !13041
  store i64 %_47.1, i64* %107, align 8, !dbg !13041
  store { [0 x i8]*, i64 }* %_46, { [0 x i8]*, i64 }** %other.dbg.spill, align 8, !dbg !13041
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !13027, metadata !DIExpression()), !dbg !13028
  %108 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0, !dbg !13028
  %_87.0 = load [0 x i8]*, [0 x i8]** %108, align 8, !dbg !13028, !nonnull !28, !align !1104, !noundef !28
  %109 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1, !dbg !13028
  %_87.1 = load i64, i64* %109, align 8, !dbg !13028
  %110 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0, !dbg !13028
  %_88.0 = load [0 x i8]*, [0 x i8]** %110, align 8, !dbg !13028, !nonnull !28, !align !1104, !noundef !28
  %111 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1, !dbg !13028
  %_88.1 = load i64, i64* %111, align 8, !dbg !13028
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %_43 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h8417e7e68e2e7c02E"([0 x i8]* align 1 %_87.0, i64 %_87.1, [0 x i8]* align 1 %_88.0, i64 %_88.1), !dbg !13028
  br label %bb26, !dbg !13028

bb26:                                             ; preds = %bb25
  br i1 %_43, label %bb10, label %bb11, !dbg !13022

bb11:                                             ; preds = %bb26
  br label %bb12, !dbg !13042

bb10:                                             ; preds = %bb26
  %112 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !13043
  %_53 = load i64, i64* %112, align 8, !dbg !13043
  %113 = bitcast { i64, i64 }* %_51 to i64*, !dbg !13044
  store i64 %found_char, i64* %113, align 8, !dbg !13044
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1, !dbg !13044
  store i64 %_53, i64* %114, align 8, !dbg !13044
  %115 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !13045
  %116 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %115, i32 0, i32 1, !dbg !13045
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 0, !dbg !13045
  %118 = load i64, i64* %117, align 8, !dbg !13045
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1, !dbg !13045
  %120 = load i64, i64* %119, align 8, !dbg !13045
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i32 0, i32 0, !dbg !13045
  store i64 %118, i64* %121, align 8, !dbg !13045
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i32 0, i32 1, !dbg !13045
  store i64 %120, i64* %122, align 8, !dbg !13045
  %123 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !13045
  store i64 1, i64* %123, align 8, !dbg !13045
  br label %bb15, !dbg !13046
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h3521de85da7148d8E"(%"core::str::pattern::CharSearcher"* align 8 %self) unnamed_addr #0 !dbg !13048 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharSearcher"*, align 8
  store %"core::str::pattern::CharSearcher"* %self, %"core::str::pattern::CharSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharSearcher"** %self.dbg.spill, metadata !13053, metadata !DIExpression()), !dbg !13054
  %0 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !13055
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !13055
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !dbg !13055, !nonnull !28, !align !1104, !noundef !28
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !13055
  %4 = load i64, i64* %3, align 8, !dbg !13055
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !13056
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1, !dbg !13056
  ret { [0 x i8]*, i64 } %6, !dbg !13056
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb002ffb500e0b323E"() unnamed_addr #0 !dbg !13057 {
start:
  ret i1 false, !dbg !13061
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h53b2776185f0c713E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %a, i64 %b) unnamed_addr #0 !dbg !13062 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %a, i64* %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !13066, metadata !DIExpression()), !dbg !13068
  store i64 %b, i64* %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !13067, metadata !DIExpression()), !dbg !13069
  %1 = bitcast { i64, i64 }* %_3 to i64*, !dbg !13070
  store i64 %a, i64* %1, align 8, !dbg !13070
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !13070
  store i64 %b, i64* %2, align 8, !dbg !13070
  %3 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !13071
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %3, i32 0, i32 1, !dbg !13071
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !13071
  %6 = load i64, i64* %5, align 8, !dbg !13071
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !13071
  %8 = load i64, i64* %7, align 8, !dbg !13071
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 0, !dbg !13071
  store i64 %6, i64* %9, align 8, !dbg !13071
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1, !dbg !13071
  store i64 %8, i64* %10, align 8, !dbg !13071
  %11 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !13071
  store i64 1, i64* %11, align 8, !dbg !13071
  ret void, !dbg !13072
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17he46f0eaac2dbcdd2E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, i64 %_a, i64 %_b) unnamed_addr #0 !dbg !13073 {
start:
  %_b.dbg.spill = alloca i64, align 8
  %_a.dbg.spill = alloca i64, align 8
  store i64 %_a, i64* %_a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %_a.dbg.spill, metadata !13075, metadata !DIExpression()), !dbg !13077
  store i64 %_b, i64* %_b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %_b.dbg.spill, metadata !13076, metadata !DIExpression()), !dbg !13078
  %1 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !13079
  store i64 0, i64* %1, align 8, !dbg !13079
  ret void, !dbg !13080
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h14008ed51e9c3bc6E"({ i64, i64 }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !13081 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %1 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !13084, metadata !DIExpression()), !dbg !13085
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !13086
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !13087
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17ha506a09541c0c86bE"(i64* align 8 %_3, i64* align 8 %_4), !dbg !13086
  br label %bb1, !dbg !13086

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !13086

bb6:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %1 to i64*, !dbg !13088
  store i64 0, i64* %2, align 8, !dbg !13088
  br label %bb7, !dbg !13089

bb2:                                              ; preds = %bb1
  %_7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !13090
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h0239486d9a4ab0b9E"(i64* align 8 %_7), !dbg !13090
  br label %bb3, !dbg !13090

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::backward_unchecked
  %_5 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h7ca4e02a87554400E"(i64 %_6, i64 1), !dbg !13091
  br label %bb4, !dbg !13091

bb4:                                              ; preds = %bb3
  br label %bb9, !dbg !13092

bb9:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !13092
  store i64 %_5, i64* %3, align 8, !dbg !13092
  %_9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !13093
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_8 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h0239486d9a4ab0b9E"(i64* align 8 %_9), !dbg !13093
  br label %bb5, !dbg !13093

bb8:                                              ; No predecessors!
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !13092
  store i64 %_5, i64* %4, align 8, !dbg !13092
  %5 = bitcast { i8*, i32 }* %0 to i8**, !dbg !13094
  %6 = load i8*, i8** %5, align 8, !dbg !13094
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !13094
  %8 = load i32, i32* %7, align 8, !dbg !13094
  %9 = insertvalue { i8*, i32 } undef, i8* %6, 0, !dbg !13094
  %10 = insertvalue { i8*, i32 } %9, i32 %8, 1, !dbg !13094
  resume { i8*, i32 } %10, !dbg !13094

bb5:                                              ; preds = %bb9
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !13095
  store i64 %_8, i64* %11, align 8, !dbg !13095
  %12 = bitcast { i64, i64 }* %1 to i64*, !dbg !13095
  store i64 1, i64* %12, align 8, !dbg !13095
  br label %bb7, !dbg !13089

bb7:                                              ; preds = %bb6, %bb5
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !13096
  %14 = load i64, i64* %13, align 8, !dbg !13096, !range !1578, !noundef !28
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !13096
  %16 = load i64, i64* %15, align 8, !dbg !13096
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !13096
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !13096
  ret { i64, i64 } %18, !dbg !13096
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h1d9258947ac1e1f3E"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !13097 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !13099, metadata !DIExpression()), !dbg !13102
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !13103
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !13104
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17ha506a09541c0c86bE"(i64* align 8 %_3, i64* align 8 %_4), !dbg !13103
  br label %bb1, !dbg !13103

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !13103

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !13105
  store i64 0, i64* %1, align 8, !dbg !13105
  br label %bb7, !dbg !13106

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !13107
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h0239486d9a4ab0b9E"(i64* align 8 %_7), !dbg !13107
  br label %bb3, !dbg !13107

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h4f08995ab98d8c7cE"(i64 %_6, i64 1), !dbg !13108
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !13108
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !13100, metadata !DIExpression()), !dbg !13109
  br label %bb4, !dbg !13108

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !13110
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17haa87c38c4eb0b131E(i64* align 8 %_10, i64 %n), !dbg !13111
  br label %bb5, !dbg !13111

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13112
  store i64 %_8, i64* %2, align 8, !dbg !13112
  %3 = bitcast { i64, i64 }* %0 to i64*, !dbg !13112
  store i64 1, i64* %3, align 8, !dbg !13112
  br label %bb7, !dbg !13106

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13113
  %5 = load i64, i64* %4, align 8, !dbg !13113, !range !1578, !noundef !28
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13113
  %7 = load i64, i64* %6, align 8, !dbg !13113
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !13113
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !13113
  ret { i64, i64 } %9, !dbg !13113
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h1b202ebc91a248faE"() unnamed_addr #0 !dbg !13114 {
start:
  ret i1 true, !dbg !13116
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h2f3cec3c950c6e05E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %a, i64 %b) unnamed_addr #0 !dbg !13117 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  store i64 %a, i64* %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !13121, metadata !DIExpression()), !dbg !13123
  store i64 %b, i64* %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !13122, metadata !DIExpression()), !dbg !13124
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !13125
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %1, i32 0, i32 1, !dbg !13125
  store i64 %a, i64* %2, align 8, !dbg !13125
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !13125
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %3, i32 0, i32 2, !dbg !13125
  store i64 %b, i64* %4, align 8, !dbg !13125
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !13125
  store i64 0, i64* %5, align 8, !dbg !13125
  ret void, !dbg !13126
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h3c9d378573ab90c8E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, i64 %a, i64 %b) unnamed_addr #0 !dbg !13127 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  store i64 %a, i64* %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !13129, metadata !DIExpression()), !dbg !13131
  store i64 %b, i64* %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !13130, metadata !DIExpression()), !dbg !13132
  %1 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !13133
  %2 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %1, i32 0, i32 1, !dbg !13133
  store i64 %a, i64* %2, align 8, !dbg !13133
  %3 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !13133
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %3, i32 0, i32 2, !dbg !13133
  store i64 %b, i64* %4, align 8, !dbg !13133
  %5 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !13133
  store i64 1, i64* %5, align 8, !dbg !13133
  ret void, !dbg !13134
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2695af24d0687f28E"({ i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !13135 {
start:
  %self.dbg.spill23 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill20 = alloca i8*, align 8
  %self.dbg.spill19 = alloca i8*, align 8
  %old.dbg.spill = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill12 = alloca i8*, align 8
  %data_address.dbg.spill10 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_62 = alloca i8*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !13141, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !13143, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !13157, metadata !DIExpression()), !dbg !13162
  %7 = bitcast { i8*, i8* }* %self to i8**, !dbg !13156
  %self2 = load i8*, i8** %7, align 8, !dbg !13156, !nonnull !28, !noundef !28
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !13156
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !13171, metadata !DIExpression()), !dbg !13175
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !13175
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !13154, metadata !DIExpression()), !dbg !13176
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !13176
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !13177, metadata !DIExpression()), !dbg !13182
  %8 = bitcast {}** %5 to i64*, !dbg !13184
  store i64 0, i64* %8, align 8, !dbg !13184
  %data_address = load {}*, {}** %5, align 8, !dbg !13184
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13184
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13147, metadata !DIExpression()), !dbg !13148
  br label %bb9, !dbg !13184

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !13148
  store {}* %data_address, {}** %9, align 8, !dbg !13148
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !13148
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !13148
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !13148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !13148
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !13148
  %other = load i8*, i8** %13, align 8, !dbg !13148
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !13148
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !13181, metadata !DIExpression()), !dbg !13182
  %14 = icmp eq i8* %self2, %other, !dbg !13182
  %15 = zext i1 %14 to i8, !dbg !13182
  store i8 %15, i8* %4, align 1, !dbg !13182
  %16 = load i8, i8* %4, align 1, !dbg !13182, !range !1099, !noundef !28
  %_4 = trunc i8 %16 to i1, !dbg !13182
  br label %bb10, !dbg !13182

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !13190
  call void @llvm.assume(i1 %_3), !dbg !13191
  br label %bb1, !dbg !13191

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !13192

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !13193

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !13170
  %self6 = load i8*, i8** %17, align 8, !dbg !13170
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !13170
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !13168, metadata !DIExpression()), !dbg !13194
  store i8* %self6, i8** %self.dbg.spill8, align 8, !dbg !13194
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !13195, metadata !DIExpression()), !dbg !13200
  %18 = bitcast {}** %3 to i64*, !dbg !13202
  store i64 0, i64* %18, align 8, !dbg !13202
  %data_address9 = load {}*, {}** %3, align 8, !dbg !13202
  store {}* %data_address9, {}** %data_address.dbg.spill10, align 8, !dbg !13202
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill10, metadata !13161, metadata !DIExpression()), !dbg !13162
  br label %bb11, !dbg !13202

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !13162
  store {}* %data_address9, {}** %19, align 8, !dbg !13162
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !13162
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !13162
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !13162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !13162
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !13162
  %other11 = load i8*, i8** %23, align 8, !dbg !13162
  store i8* %other11, i8** %other.dbg.spill12, align 8, !dbg !13162
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill12, metadata !13199, metadata !DIExpression()), !dbg !13200
  %24 = icmp eq i8* %self6, %other11, !dbg !13200
  %25 = zext i1 %24 to i8, !dbg !13200
  store i8 %25, i8* %2, align 1, !dbg !13200
  %26 = load i8, i8* %2, align 1, !dbg !13200, !range !1099, !noundef !28
  %_10 = trunc i8 %26 to i1, !dbg !13200
  br label %bb12, !dbg !13200

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !13208
  call void @llvm.assume(i1 %_9), !dbg !13209
  br label %bb3, !dbg !13209

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !13193

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i8*, i8* }* %self to i8**, !dbg !13210
  %self13 = load i8*, i8** %27, align 8, !dbg !13210, !nonnull !28, !noundef !28
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !13210
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !13211, metadata !DIExpression()), !dbg !13215
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !13210
  %_16 = load i8*, i8** %28, align 8, !dbg !13210
  %_12 = icmp eq i8* %self13, %_16, !dbg !13210
  br i1 %_12, label %bb6, label %bb7, !dbg !13210

bb7:                                              ; preds = %bb5
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill15, align 8, !dbg !13217
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill15, metadata !13218, metadata !DIExpression()), !dbg !13226
  br i1 false, label %bb13, label %bb14, !dbg !13226

bb6:                                              ; preds = %bb5
  %29 = bitcast i8** %6 to {}**, !dbg !13228
  store {}* null, {}** %29, align 8, !dbg !13228
  br label %bb8, !dbg !13229

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i8*, i8** %6, align 8, !dbg !13230, !align !1104
  ret i8* %30, !dbg !13230

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !13226
  %_56 = load i8*, i8** %31, align 8, !dbg !13226
  store i8* %_56, i8** %self.dbg.spill21, align 8, !dbg !13226
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !13231, metadata !DIExpression()), !dbg !13236
  %32 = getelementptr i8, i8* %_56, i64 -1, !dbg !13236
  store i8* %32, i8** %0, align 8, !dbg !13236
  %_54 = load i8*, i8** %0, align 8, !dbg !13236
  br label %bb16, !dbg !13236

bb14:                                             ; preds = %bb7
  %33 = bitcast { i8*, i8* }* %self to i8**, !dbg !13226
  %self16 = load i8*, i8** %33, align 8, !dbg !13226, !nonnull !28, !noundef !28
  store i8* %self16, i8** %self.dbg.spill17, align 8, !dbg !13226
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !13238, metadata !DIExpression()), !dbg !13242
  store i8* %self16, i8** %old.dbg.spill, align 8, !dbg !13242
  call void @llvm.dbg.declare(metadata i8** %old.dbg.spill, metadata !13224, metadata !DIExpression()), !dbg !13244
  %34 = bitcast { i8*, i8* }* %self to i8**, !dbg !13244
  %self18 = load i8*, i8** %34, align 8, !dbg !13244, !nonnull !28, !noundef !28
  store i8* %self18, i8** %self.dbg.spill19, align 8, !dbg !13244
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill19, metadata !13245, metadata !DIExpression()), !dbg !13249
  store i8* %self18, i8** %self.dbg.spill20, align 8, !dbg !13249
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill20, metadata !13251, metadata !DIExpression()), !dbg !13256
  %35 = getelementptr inbounds i8, i8* %self18, i64 1, !dbg !13256
  store i8* %35, i8** %1, align 8, !dbg !13256
  %_73 = load i8*, i8** %1, align 8, !dbg !13256
  br label %bb17, !dbg !13256

bb17:                                             ; preds = %bb14
  store i8* %_73, i8** %ptr.dbg.spill, align 8, !dbg !13256
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13257, metadata !DIExpression()), !dbg !13261
  store i8* %_73, i8** %_62, align 8, !dbg !13261
  %36 = bitcast { i8*, i8* }* %self to i8**, !dbg !13244
  %37 = load i8*, i8** %_62, align 8, !dbg !13244, !nonnull !28, !noundef !28
  store i8* %37, i8** %36, align 8, !dbg !13244
  store i8* %self16, i8** %_19, align 8, !dbg !13244
  br label %bb15, !dbg !13226

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i8*, i8** %_19, align 8, !dbg !13217
  store i8* %_18, i8** %6, align 8, !dbg !13263
  br label %bb8, !dbg !13229

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !13226
  store i8* %_54, i8** %38, align 8, !dbg !13226
  %39 = bitcast { i8*, i8* }* %self to i8**, !dbg !13226
  %self22 = load i8*, i8** %39, align 8, !dbg !13226, !nonnull !28, !noundef !28
  store i8* %self22, i8** %self.dbg.spill23, align 8, !dbg !13226
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !13264, metadata !DIExpression()), !dbg !13268
  store i8* %self22, i8** %_19, align 8, !dbg !13226
  br label %bb15, !dbg !13226
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 4 i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8771c2e09e12367dE"({ i32*, i32* }* align 8 %self) unnamed_addr #0 !dbg !13270 {
start:
  %self.dbg.spill26 = alloca i32*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %self.dbg.spill22 = alloca i32*, align 8
  %self.dbg.spill21 = alloca i32*, align 8
  %old.dbg.spill = alloca i32*, align 8
  %self.dbg.spill19 = alloca i32*, align 8
  %self.dbg.spill17 = alloca { i32*, i32* }*, align 8
  %self.dbg.spill16 = alloca i32*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill14 = alloca i8*, align 8
  %data_address.dbg.spill12 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill8 = alloca i32*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i32*, i32* }*, align 8
  %_62 = alloca i32*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill, metadata !13286, metadata !DIExpression()), !dbg !13287
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !13288, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !13304, metadata !DIExpression()), !dbg !13309
  %7 = bitcast { i32*, i32* }* %self to i32**, !dbg !13303
  %self2 = load i32*, i32** %7, align 8, !dbg !13303, !nonnull !28, !noundef !28
  store i32* %self2, i32** %self.dbg.spill3, align 8, !dbg !13303
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !13318, metadata !DIExpression()), !dbg !13324
  store i32* %self2, i32** %self.dbg.spill4, align 8, !dbg !13324
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !13301, metadata !DIExpression()), !dbg !13325
  %self5 = bitcast i32* %self2 to i8*, !dbg !13325
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !13325
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !13326, metadata !DIExpression()), !dbg !13331
  %8 = bitcast {}** %5 to i64*, !dbg !13333
  store i64 0, i64* %8, align 8, !dbg !13333
  %data_address = load {}*, {}** %5, align 8, !dbg !13333
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13333
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13292, metadata !DIExpression()), !dbg !13293
  br label %bb9, !dbg !13333

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !13293
  store {}* %data_address, {}** %9, align 8, !dbg !13293
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !13293
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !13293
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !13293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !13293
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !13293
  %other = load i8*, i8** %13, align 8, !dbg !13293
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !13293
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !13330, metadata !DIExpression()), !dbg !13331
  %14 = icmp eq i8* %self5, %other, !dbg !13331
  %15 = zext i1 %14 to i8, !dbg !13331
  store i8 %15, i8* %4, align 1, !dbg !13331
  %16 = load i8, i8* %4, align 1, !dbg !13331, !range !1099, !noundef !28
  %_4 = trunc i8 %16 to i1, !dbg !13331
  br label %bb10, !dbg !13331

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !13339
  call void @llvm.assume(i1 %_3), !dbg !13340
  br label %bb1, !dbg !13340

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !13341

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !13342

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !13317
  %self7 = load i32*, i32** %17, align 8, !dbg !13317
  store i32* %self7, i32** %self.dbg.spill8, align 8, !dbg !13317
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill8, metadata !13315, metadata !DIExpression()), !dbg !13343
  %self9 = bitcast i32* %self7 to i8*, !dbg !13343
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !13343
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !13344, metadata !DIExpression()), !dbg !13349
  %18 = bitcast {}** %3 to i64*, !dbg !13351
  store i64 0, i64* %18, align 8, !dbg !13351
  %data_address11 = load {}*, {}** %3, align 8, !dbg !13351
  store {}* %data_address11, {}** %data_address.dbg.spill12, align 8, !dbg !13351
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill12, metadata !13308, metadata !DIExpression()), !dbg !13309
  br label %bb11, !dbg !13351

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !13309
  store {}* %data_address11, {}** %19, align 8, !dbg !13309
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !13309
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !13309
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !13309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !13309
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !13309
  %other13 = load i8*, i8** %23, align 8, !dbg !13309
  store i8* %other13, i8** %other.dbg.spill14, align 8, !dbg !13309
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill14, metadata !13348, metadata !DIExpression()), !dbg !13349
  %24 = icmp eq i8* %self9, %other13, !dbg !13349
  %25 = zext i1 %24 to i8, !dbg !13349
  store i8 %25, i8* %2, align 1, !dbg !13349
  %26 = load i8, i8* %2, align 1, !dbg !13349, !range !1099, !noundef !28
  %_10 = trunc i8 %26 to i1, !dbg !13349
  br label %bb12, !dbg !13349

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !13357
  call void @llvm.assume(i1 %_9), !dbg !13358
  br label %bb3, !dbg !13358

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !13342

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i32*, i32* }* %self to i32**, !dbg !13359
  %self15 = load i32*, i32** %27, align 8, !dbg !13359, !nonnull !28, !noundef !28
  store i32* %self15, i32** %self.dbg.spill16, align 8, !dbg !13359
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill16, metadata !13360, metadata !DIExpression()), !dbg !13364
  %28 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !13359
  %_16 = load i32*, i32** %28, align 8, !dbg !13359
  %_12 = icmp eq i32* %self15, %_16, !dbg !13359
  br i1 %_12, label %bb6, label %bb7, !dbg !13359

bb7:                                              ; preds = %bb5
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill17, align 8, !dbg !13366
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill17, metadata !13367, metadata !DIExpression()), !dbg !13375
  br i1 false, label %bb13, label %bb14, !dbg !13375

bb6:                                              ; preds = %bb5
  %29 = bitcast i32** %6 to {}**, !dbg !13377
  store {}* null, {}** %29, align 8, !dbg !13377
  br label %bb8, !dbg !13378

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i32*, i32** %6, align 8, !dbg !13379, !align !3487
  ret i32* %30, !dbg !13379

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !13375
  %_56 = load i32*, i32** %31, align 8, !dbg !13375
  %self23 = bitcast i32* %_56 to i8*, !dbg !13375
  store i8* %self23, i8** %self.dbg.spill24, align 8, !dbg !13375
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !13380, metadata !DIExpression()), !dbg !13385
  %32 = getelementptr i8, i8* %self23, i64 -1, !dbg !13385
  store i8* %32, i8** %0, align 8, !dbg !13385
  %_54 = load i8*, i8** %0, align 8, !dbg !13385
  br label %bb16, !dbg !13385

bb14:                                             ; preds = %bb7
  %33 = bitcast { i32*, i32* }* %self to i32**, !dbg !13375
  %self18 = load i32*, i32** %33, align 8, !dbg !13375, !nonnull !28, !noundef !28
  store i32* %self18, i32** %self.dbg.spill19, align 8, !dbg !13375
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill19, metadata !13387, metadata !DIExpression()), !dbg !13391
  store i32* %self18, i32** %old.dbg.spill, align 8, !dbg !13391
  call void @llvm.dbg.declare(metadata i32** %old.dbg.spill, metadata !13373, metadata !DIExpression()), !dbg !13393
  %34 = bitcast { i32*, i32* }* %self to i32**, !dbg !13393
  %self20 = load i32*, i32** %34, align 8, !dbg !13393, !nonnull !28, !noundef !28
  store i32* %self20, i32** %self.dbg.spill21, align 8, !dbg !13393
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill21, metadata !13394, metadata !DIExpression()), !dbg !13398
  store i32* %self20, i32** %self.dbg.spill22, align 8, !dbg !13398
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill22, metadata !13400, metadata !DIExpression()), !dbg !13407
  %35 = getelementptr inbounds i32, i32* %self20, i64 1, !dbg !13407
  store i32* %35, i32** %1, align 8, !dbg !13407
  %_73 = load i32*, i32** %1, align 8, !dbg !13407
  br label %bb17, !dbg !13407

bb17:                                             ; preds = %bb14
  store i32* %_73, i32** %ptr.dbg.spill, align 8, !dbg !13407
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !13408, metadata !DIExpression()), !dbg !13412
  store i32* %_73, i32** %_62, align 8, !dbg !13412
  %36 = bitcast { i32*, i32* }* %self to i32**, !dbg !13393
  %37 = load i32*, i32** %_62, align 8, !dbg !13393, !nonnull !28, !noundef !28
  store i32* %37, i32** %36, align 8, !dbg !13393
  store i32* %self18, i32** %_19, align 8, !dbg !13393
  br label %bb15, !dbg !13375

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i32*, i32** %_19, align 8, !dbg !13366
  store i32* %_18, i32** %6, align 8, !dbg !13414
  br label %bb8, !dbg !13378

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !13375
  %39 = bitcast i8* %_54 to i32*, !dbg !13375
  store i32* %39, i32** %38, align 8, !dbg !13375
  %40 = bitcast { i32*, i32* }* %self to i32**, !dbg !13375
  %self25 = load i32*, i32** %40, align 8, !dbg !13375, !nonnull !28, !noundef !28
  store i32* %self25, i32** %self.dbg.spill26, align 8, !dbg !13375
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill26, metadata !13415, metadata !DIExpression()), !dbg !13419
  store i32* %self25, i32** %_19, align 8, !dbg !13375
  br label %bb15, !dbg !13375
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha6d8713f2e09f655E"({ i64*, i64* }* align 8 %self) unnamed_addr #0 !dbg !13421 {
start:
  %self.dbg.spill26 = alloca i64*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill22 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill21 = alloca i64*, align 8
  %old.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill19 = alloca i64*, align 8
  %self.dbg.spill17 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill16 = alloca i64*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill14 = alloca i8*, align 8
  %data_address.dbg.spill12 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill8 = alloca { [0 x i8]*, i64 }*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_62 = alloca i64*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca { [0 x i8]*, i64 }*, align 8
  %6 = alloca i64*, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !13437, metadata !DIExpression()), !dbg !13438
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !13439, metadata !DIExpression()), !dbg !13444
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !13453, metadata !DIExpression()), !dbg !13458
  %7 = bitcast { i64*, i64* }* %self to i64**, !dbg !13452
  %self2 = load i64*, i64** %7, align 8, !dbg !13452, !nonnull !28, !noundef !28
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !13452
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !13467, metadata !DIExpression()), !dbg !13471
  %_21 = bitcast i64* %self2 to { [0 x i8]*, i64 }*, !dbg !13471
  store { [0 x i8]*, i64 }* %_21, { [0 x i8]*, i64 }** %self.dbg.spill4, align 8, !dbg !13471
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill4, metadata !13450, metadata !DIExpression()), !dbg !13472
  %self5 = bitcast { [0 x i8]*, i64 }* %_21 to i8*, !dbg !13472
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !13472
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !13473, metadata !DIExpression()), !dbg !13478
  %8 = bitcast {}** %5 to i64*, !dbg !13480
  store i64 0, i64* %8, align 8, !dbg !13480
  %data_address = load {}*, {}** %5, align 8, !dbg !13480
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13480
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13443, metadata !DIExpression()), !dbg !13444
  br label %bb9, !dbg !13480

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !13444
  store {}* %data_address, {}** %9, align 8, !dbg !13444
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !13444
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !13444
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !13444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !13444
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !13444
  %other = load i8*, i8** %13, align 8, !dbg !13444
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !13444
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !13477, metadata !DIExpression()), !dbg !13478
  %14 = icmp eq i8* %self5, %other, !dbg !13478
  %15 = zext i1 %14 to i8, !dbg !13478
  store i8 %15, i8* %4, align 1, !dbg !13478
  %16 = load i8, i8* %4, align 1, !dbg !13478, !range !1099, !noundef !28
  %_4 = trunc i8 %16 to i1, !dbg !13478
  br label %bb10, !dbg !13478

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !13486
  call void @llvm.assume(i1 %_3), !dbg !13487
  br label %bb1, !dbg !13487

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !13488

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !13489

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !13466
  %18 = bitcast i64** %17 to { [0 x i8]*, i64 }**, !dbg !13466
  %self7 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %18, align 8, !dbg !13466
  store { [0 x i8]*, i64 }* %self7, { [0 x i8]*, i64 }** %self.dbg.spill8, align 8, !dbg !13466
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill8, metadata !13464, metadata !DIExpression()), !dbg !13490
  %self9 = bitcast { [0 x i8]*, i64 }* %self7 to i8*, !dbg !13490
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !13490
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !13491, metadata !DIExpression()), !dbg !13496
  %19 = bitcast {}** %3 to i64*, !dbg !13498
  store i64 0, i64* %19, align 8, !dbg !13498
  %data_address11 = load {}*, {}** %3, align 8, !dbg !13498
  store {}* %data_address11, {}** %data_address.dbg.spill12, align 8, !dbg !13498
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill12, metadata !13457, metadata !DIExpression()), !dbg !13458
  br label %bb11, !dbg !13498

bb11:                                             ; preds = %bb2
  %20 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !13458
  store {}* %data_address11, {}** %20, align 8, !dbg !13458
  %21 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !13458
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %21 to i8*, !dbg !13458
  %23 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !13458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 8, i1 false), !dbg !13458
  %24 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !13458
  %other13 = load i8*, i8** %24, align 8, !dbg !13458
  store i8* %other13, i8** %other.dbg.spill14, align 8, !dbg !13458
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill14, metadata !13495, metadata !DIExpression()), !dbg !13496
  %25 = icmp eq i8* %self9, %other13, !dbg !13496
  %26 = zext i1 %25 to i8, !dbg !13496
  store i8 %26, i8* %2, align 1, !dbg !13496
  %27 = load i8, i8* %2, align 1, !dbg !13496, !range !1099, !noundef !28
  %_10 = trunc i8 %27 to i1, !dbg !13496
  br label %bb12, !dbg !13496

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !13504
  call void @llvm.assume(i1 %_9), !dbg !13505
  br label %bb3, !dbg !13505

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !13489

bb5:                                              ; preds = %bb4, %bb3
  %28 = bitcast { i64*, i64* }* %self to i64**, !dbg !13506
  %self15 = load i64*, i64** %28, align 8, !dbg !13506, !nonnull !28, !noundef !28
  store i64* %self15, i64** %self.dbg.spill16, align 8, !dbg !13506
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill16, metadata !13507, metadata !DIExpression()), !dbg !13511
  %_51 = bitcast i64* %self15 to { [0 x i8]*, i64 }*, !dbg !13511
  %29 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !13506
  %30 = bitcast i64** %29 to { [0 x i8]*, i64 }**, !dbg !13506
  %_16 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %30, align 8, !dbg !13506
  %_12 = icmp eq { [0 x i8]*, i64 }* %_51, %_16, !dbg !13506
  br i1 %_12, label %bb6, label %bb7, !dbg !13506

bb7:                                              ; preds = %bb5
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill17, align 8, !dbg !13513
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill17, metadata !13514, metadata !DIExpression()), !dbg !13522
  br i1 false, label %bb13, label %bb14, !dbg !13522

bb6:                                              ; preds = %bb5
  %31 = bitcast i64** %6 to {}**, !dbg !13524
  store {}* null, {}** %31, align 8, !dbg !13524
  br label %bb8, !dbg !13525

bb8:                                              ; preds = %bb15, %bb6
  %32 = load i64*, i64** %6, align 8, !dbg !13526, !align !1582
  ret i64* %32, !dbg !13526

bb13:                                             ; preds = %bb7
  %33 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !13522
  %34 = bitcast i64** %33 to { [0 x i8]*, i64 }**, !dbg !13522
  %_56 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %34, align 8, !dbg !13522
  %self23 = bitcast { [0 x i8]*, i64 }* %_56 to i8*, !dbg !13522
  store i8* %self23, i8** %self.dbg.spill24, align 8, !dbg !13522
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !13527, metadata !DIExpression()), !dbg !13532
  %35 = getelementptr i8, i8* %self23, i64 -1, !dbg !13532
  store i8* %35, i8** %0, align 8, !dbg !13532
  %_54 = load i8*, i8** %0, align 8, !dbg !13532
  br label %bb16, !dbg !13532

bb14:                                             ; preds = %bb7
  %36 = bitcast { i64*, i64* }* %self to i64**, !dbg !13522
  %self18 = load i64*, i64** %36, align 8, !dbg !13522, !nonnull !28, !noundef !28
  store i64* %self18, i64** %self.dbg.spill19, align 8, !dbg !13522
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill19, metadata !13534, metadata !DIExpression()), !dbg !13538
  %_71 = bitcast i64* %self18 to { [0 x i8]*, i64 }*, !dbg !13538
  store { [0 x i8]*, i64 }* %_71, { [0 x i8]*, i64 }** %old.dbg.spill, align 8, !dbg !13538
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %old.dbg.spill, metadata !13520, metadata !DIExpression()), !dbg !13540
  %37 = bitcast { i64*, i64* }* %self to i64**, !dbg !13540
  %self20 = load i64*, i64** %37, align 8, !dbg !13540, !nonnull !28, !noundef !28
  store i64* %self20, i64** %self.dbg.spill21, align 8, !dbg !13540
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill21, metadata !13541, metadata !DIExpression()), !dbg !13545
  %_72 = bitcast i64* %self20 to { [0 x i8]*, i64 }*, !dbg !13545
  store { [0 x i8]*, i64 }* %_72, { [0 x i8]*, i64 }** %self.dbg.spill22, align 8, !dbg !13545
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill22, metadata !13547, metadata !DIExpression()), !dbg !13552
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_72, i64 1, !dbg !13552
  store { [0 x i8]*, i64 }* %38, { [0 x i8]*, i64 }** %1, align 8, !dbg !13552
  %_73 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8, !dbg !13552
  br label %bb17, !dbg !13552

bb17:                                             ; preds = %bb14
  store { [0 x i8]*, i64 }* %_73, { [0 x i8]*, i64 }** %ptr.dbg.spill, align 8, !dbg !13552
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill, metadata !13553, metadata !DIExpression()), !dbg !13557
  %39 = bitcast i64** %_62 to { [0 x i8]*, i64 }**, !dbg !13557
  store { [0 x i8]*, i64 }* %_73, { [0 x i8]*, i64 }** %39, align 8, !dbg !13557
  %40 = bitcast { i64*, i64* }* %self to i64**, !dbg !13540
  %41 = load i64*, i64** %_62, align 8, !dbg !13540, !nonnull !28, !noundef !28
  store i64* %41, i64** %40, align 8, !dbg !13540
  store { [0 x i8]*, i64 }* %_71, { [0 x i8]*, i64 }** %_19, align 8, !dbg !13540
  br label %bb15, !dbg !13522

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %_19, align 8, !dbg !13513
  %42 = bitcast i64** %6 to { [0 x i8]*, i64 }**, !dbg !13559
  store { [0 x i8]*, i64 }* %_18, { [0 x i8]*, i64 }** %42, align 8, !dbg !13559
  br label %bb8, !dbg !13525

bb16:                                             ; preds = %bb13
  %43 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !13522
  %44 = bitcast i64** %43 to { [0 x i8]*, i64 }**, !dbg !13522
  %45 = bitcast i8* %_54 to { [0 x i8]*, i64 }*, !dbg !13522
  store { [0 x i8]*, i64 }* %45, { [0 x i8]*, i64 }** %44, align 8, !dbg !13522
  %46 = bitcast { i64*, i64* }* %self to i64**, !dbg !13522
  %self25 = load i64*, i64** %46, align 8, !dbg !13522, !nonnull !28, !noundef !28
  store i64* %self25, i64** %self.dbg.spill26, align 8, !dbg !13522
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill26, metadata !13560, metadata !DIExpression()), !dbg !13564
  %_70 = bitcast i64* %self25 to { [0 x i8]*, i64 }*, !dbg !13564
  store { [0 x i8]*, i64 }* %_70, { [0 x i8]*, i64 }** %_19, align 8, !dbg !13522
  br label %bb15, !dbg !13522
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h57df9ce632f31387E"({ i64*, i64* }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !13566 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill11 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill10 = alloca i64*, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_28 = alloca i64*, align 8
  %_22 = alloca i64*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %6 = alloca { i64, i64 }, align 8
  %predicate = alloca %"[closure@src/test_sections.rs:43:23: 43:27]", align 1
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !13571, metadata !DIExpression()), !dbg !13587
  call void @llvm.dbg.declare(metadata %"[closure@src/test_sections.rs:43:23: 43:27]"* %predicate, metadata !13572, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.declare(metadata i64* %n, metadata !13573, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13581, metadata !DIExpression()), !dbg !13590
  %7 = bitcast { i64*, i64* }* %self to i64**, !dbg !13591
  %start1 = load i64*, i64** %7, align 8, !dbg !13591, !nonnull !28, !noundef !28
  store i64* %start1, i64** %start.dbg.spill, align 8, !dbg !13591
  call void @llvm.dbg.declare(metadata i64** %start.dbg.spill, metadata !13575, metadata !DIExpression()), !dbg !13592
  store i64 16, i64* %size.dbg.spill, align 8, !dbg !13593
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !13577, metadata !DIExpression()), !dbg !13601
  br i1 false, label %bb1, label %bb2, !dbg !13601

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !13601
  %9 = bitcast i64** %8 to { [0 x i8]*, i64 }**, !dbg !13601
  %self6 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %9, align 8, !dbg !13601
  store { [0 x i8]*, i64 }* %self6, { [0 x i8]*, i64 }** %self.dbg.spill7, align 8, !dbg !13601
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill7, metadata !13602, metadata !DIExpression()), !dbg !13606
  %10 = bitcast i64* %2 to { [0 x i8]*, i64 }**, !dbg !13606
  store { [0 x i8]*, i64 }* %self6, { [0 x i8]*, i64 }** %10, align 8, !dbg !13606
  %self8 = load i64, i64* %2, align 8, !dbg !13606
  store i64 %self8, i64* %self.dbg.spill9, align 8, !dbg !13606
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !13608, metadata !DIExpression()), !dbg !13613
  br label %bb18, !dbg !13606

bb2:                                              ; preds = %start
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !13601
  %12 = bitcast i64** %11 to { [0 x i8]*, i64 }**, !dbg !13601
  %self2 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %12, align 8, !dbg !13601
  store { [0 x i8]*, i64 }* %self2, { [0 x i8]*, i64 }** %self.dbg.spill3, align 8, !dbg !13601
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill3, metadata !13614, metadata !DIExpression()), !dbg !13618
  %13 = bitcast i64* %5 to { [0 x i8]*, i64 }**, !dbg !13618
  store { [0 x i8]*, i64 }* %self2, { [0 x i8]*, i64 }** %13, align 8, !dbg !13618
  %_14 = load i64, i64* %5, align 8, !dbg !13618
  br label %bb20, !dbg !13618

bb20:                                             ; preds = %bb2
  store i64* %start1, i64** %self.dbg.spill4, align 8, !dbg !13601
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !13620, metadata !DIExpression()), !dbg !13624
  %_42 = bitcast i64* %start1 to { [0 x i8]*, i64 }*, !dbg !13624
  store { [0 x i8]*, i64 }* %_42, { [0 x i8]*, i64 }** %self.dbg.spill5, align 8, !dbg !13624
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill5, metadata !13626, metadata !DIExpression()), !dbg !13632
  %14 = bitcast i64* %4 to { [0 x i8]*, i64 }**, !dbg !13632
  store { [0 x i8]*, i64 }* %_42, { [0 x i8]*, i64 }** %14, align 8, !dbg !13632
  %_16 = load i64, i64* %4, align 8, !dbg !13632
  br label %bb21, !dbg !13632

bb21:                                             ; preds = %bb20
  %15 = sub nuw i64 %_14, %_16, !dbg !13601
  store i64 %15, i64* %3, align 8, !dbg !13601
  %diff = load i64, i64* %3, align 8, !dbg !13601
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !13601
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !13579, metadata !DIExpression()), !dbg !13633
  br label %bb3, !dbg !13601

bb3:                                              ; preds = %bb21
  %16 = udiv exact i64 %diff, 16, !dbg !13633
  store i64 %16, i64* %n, align 8, !dbg !13633
  br label %bb4, !dbg !13633

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !13601

bb5:                                              ; preds = %bb19, %bb4
  store i64 0, i64* %i, align 8, !dbg !13634
  br label %bb6, !dbg !13635

bb18:                                             ; preds = %bb1
  store i64* %start1, i64** %self.dbg.spill10, align 8, !dbg !13601
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill10, metadata !13636, metadata !DIExpression()), !dbg !13640
  %_37 = bitcast i64* %start1 to { [0 x i8]*, i64 }*, !dbg !13640
  store { [0 x i8]*, i64 }* %_37, { [0 x i8]*, i64 }** %self.dbg.spill11, align 8, !dbg !13640
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill11, metadata !13642, metadata !DIExpression()), !dbg !13646
  %17 = bitcast i64* %1 to { [0 x i8]*, i64 }**, !dbg !13646
  store { [0 x i8]*, i64 }* %_37, { [0 x i8]*, i64 }** %17, align 8, !dbg !13646
  %rhs = load i64, i64* %1, align 8, !dbg !13646
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !13646
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !13612, metadata !DIExpression()), !dbg !13613
  br label %bb19, !dbg !13646

bb19:                                             ; preds = %bb18
  %18 = sub i64 %self8, %rhs, !dbg !13613
  store i64 %18, i64* %n, align 8, !dbg !13613
  br label %bb5, !dbg !13601

bb6:                                              ; preds = %bb13, %bb5
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %19 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha6d8713f2e09f655E"({ i64*, i64* }* align 8 %self)
          to label %bb7 unwind label %cleanup, !dbg !13647

bb16:                                             ; preds = %cleanup
  br label %bb17, !dbg !13648

cleanup:                                          ; preds = %panic, %bb8, %bb6
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  %22 = extractvalue { i8*, i32 } %20, 1
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %22, i32* %24, align 8
  br label %bb16

bb7:                                              ; preds = %bb6
  store i64* %19, i64** %_22, align 8, !dbg !13647
  %25 = bitcast i64** %_22 to {}**, !dbg !13649
  %26 = load {}*, {}** %25, align 8, !dbg !13649
  %27 = icmp eq {}* %26, null, !dbg !13649
  %_24 = select i1 %27, i64 0, i64 1, !dbg !13649
  %28 = icmp eq i64 %_24, 1, !dbg !13649
  br i1 %28, label %bb8, label %bb14, !dbg !13649

bb8:                                              ; preds = %bb7
  %29 = bitcast i64** %_22 to { [0 x i8]*, i64 }**, !dbg !13650
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %29, align 8, !dbg !13650, !nonnull !28, !align !1582, !noundef !28
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8, !dbg !13650
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !13583, metadata !DIExpression()), !dbg !13650
  %30 = bitcast i64** %_28 to { [0 x i8]*, i64 }**, !dbg !13651
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %30, align 8, !dbg !13651
  %31 = load i64*, i64** %_28, align 8, !dbg !13651, !nonnull !28, !align !1582, !noundef !28
  %32 = bitcast i64* %31 to { [0 x i8]*, i64 }*, !dbg !13651
; invoke statics_tests::test_sections::test_sectioned_used_static::{{closure}}
  %_26 = invoke zeroext i1 @"_ZN13statics_tests13test_sections26test_sectioned_used_static28_$u7b$$u7b$closure$u7d$$u7d$17h549c4656ecb13e93E"(%"[closure@src/test_sections.rs:43:23: 43:27]"* align 1 %predicate, { [0 x i8]*, i64 }* align 8 %32)
          to label %bb9 unwind label %cleanup, !dbg !13651

bb14:                                             ; preds = %bb7
  %33 = bitcast { i64, i64 }* %6 to i64*, !dbg !13652
  store i64 0, i64* %33, align 8, !dbg !13652
  br label %bb15, !dbg !13648

bb15:                                             ; preds = %bb11, %bb14
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !13653
  %35 = load i64, i64* %34, align 8, !dbg !13653, !range !1578, !noundef !28
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !13653
  %37 = load i64, i64* %36, align 8, !dbg !13653
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0, !dbg !13653
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1, !dbg !13653
  ret { i64, i64 } %39, !dbg !13653

bb9:                                              ; preds = %bb8
  br i1 %_26, label %bb10, label %bb12, !dbg !13651

bb12:                                             ; preds = %bb9
  %40 = load i64, i64* %i, align 8, !dbg !13654
  %41 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %40, i64 1), !dbg !13654
  %_35.0 = extractvalue { i64, i1 } %41, 0, !dbg !13654
  %_35.1 = extractvalue { i64, i1 } %41, 1, !dbg !13654
  %42 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !13654
  br i1 %42, label %panic, label %bb13, !dbg !13654

bb10:                                             ; preds = %bb9
  %_32 = load i64, i64* %i, align 8, !dbg !13655
  %_33 = load i64, i64* %n, align 8, !dbg !13656
  %_31 = icmp ult i64 %_32, %_33, !dbg !13655
  call void @llvm.assume(i1 %_31), !dbg !13657
  br label %bb11, !dbg !13657

bb11:                                             ; preds = %bb10
  %_34 = load i64, i64* %i, align 8, !dbg !13658
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !13659
  store i64 %_34, i64* %43, align 8, !dbg !13659
  %44 = bitcast { i64, i64 }* %6 to i64*, !dbg !13659
  store i64 1, i64* %44, align 8, !dbg !13659
  br label %bb15, !dbg !13648

bb13:                                             ; preds = %bb12
  store i64 %_35.0, i64* %i, align 8, !dbg !13654
  br label %bb6, !dbg !13635

panic:                                            ; preds = %bb12
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc715 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !13654

unreachable:                                      ; preds = %panic
  unreachable

bb17:                                             ; preds = %bb16
  %45 = bitcast { i8*, i32 }* %0 to i8**, !dbg !13660
  %46 = load i8*, i8** %45, align 8, !dbg !13660
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !13660
  %48 = load i32, i32* %47, align 8, !dbg !13660
  %49 = insertvalue { i8*, i32 } undef, i8* %46, 0, !dbg !13660
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1, !dbg !13660
  resume { i8*, i32 } %50, !dbg !13660
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h688fb9758e67fecbE"({ i8*, i8* }* align 8 %self, i8* align 1 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !13661 {
start:
  %x.dbg.spill = alloca i8*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_28 = alloca i8*, align 8
  %_22 = alloca i8*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %7 = alloca { i64, i64 }, align 8
  %predicate = alloca i8*, align 8
  store i8* %0, i8** %predicate, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !13665, metadata !DIExpression()), !dbg !13681
  call void @llvm.dbg.declare(metadata i8** %predicate, metadata !13666, metadata !DIExpression()), !dbg !13682
  call void @llvm.dbg.declare(metadata i64* %n, metadata !13667, metadata !DIExpression()), !dbg !13683
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13675, metadata !DIExpression()), !dbg !13684
  %8 = bitcast { i8*, i8* }* %self to i8**, !dbg !13685
  %start1 = load i8*, i8** %8, align 8, !dbg !13685, !nonnull !28, !noundef !28
  store i8* %start1, i8** %start.dbg.spill, align 8, !dbg !13685
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !13669, metadata !DIExpression()), !dbg !13686
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !13687
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !13671, metadata !DIExpression()), !dbg !13695
  br i1 false, label %bb1, label %bb2, !dbg !13695

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !13695
  %self6 = load i8*, i8** %9, align 8, !dbg !13695
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !13695
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !13696, metadata !DIExpression()), !dbg !13700
  %10 = bitcast i64* %3 to i8**, !dbg !13700
  store i8* %self6, i8** %10, align 8, !dbg !13700
  %self8 = load i64, i64* %3, align 8, !dbg !13700
  store i64 %self8, i64* %self.dbg.spill9, align 8, !dbg !13700
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !13702, metadata !DIExpression()), !dbg !13707
  br label %bb18, !dbg !13700

bb2:                                              ; preds = %start
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !13695
  %self2 = load i8*, i8** %11, align 8, !dbg !13695
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !13695
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !13708, metadata !DIExpression()), !dbg !13712
  %12 = bitcast i64* %6 to i8**, !dbg !13712
  store i8* %self2, i8** %12, align 8, !dbg !13712
  %_14 = load i64, i64* %6, align 8, !dbg !13712
  br label %bb20, !dbg !13712

bb20:                                             ; preds = %bb2
  store i8* %start1, i8** %self.dbg.spill4, align 8, !dbg !13695
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !13714, metadata !DIExpression()), !dbg !13718
  store i8* %start1, i8** %self.dbg.spill5, align 8, !dbg !13718
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !13720, metadata !DIExpression()), !dbg !13726
  %13 = bitcast i64* %5 to i8**, !dbg !13726
  store i8* %start1, i8** %13, align 8, !dbg !13726
  %_16 = load i64, i64* %5, align 8, !dbg !13726
  br label %bb21, !dbg !13726

bb21:                                             ; preds = %bb20
  %14 = sub nuw i64 %_14, %_16, !dbg !13695
  store i64 %14, i64* %4, align 8, !dbg !13695
  %diff = load i64, i64* %4, align 8, !dbg !13695
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !13695
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !13673, metadata !DIExpression()), !dbg !13727
  br label %bb3, !dbg !13695

bb3:                                              ; preds = %bb21
  %15 = udiv exact i64 %diff, 1, !dbg !13727
  store i64 %15, i64* %n, align 8, !dbg !13727
  br label %bb4, !dbg !13727

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !13695

bb5:                                              ; preds = %bb19, %bb4
  store i64 0, i64* %i, align 8, !dbg !13728
  br label %bb6, !dbg !13729

bb18:                                             ; preds = %bb1
  store i8* %start1, i8** %self.dbg.spill10, align 8, !dbg !13695
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !13730, metadata !DIExpression()), !dbg !13734
  store i8* %start1, i8** %self.dbg.spill11, align 8, !dbg !13734
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill11, metadata !13736, metadata !DIExpression()), !dbg !13740
  %16 = bitcast i64* %2 to i8**, !dbg !13740
  store i8* %start1, i8** %16, align 8, !dbg !13740
  %rhs = load i64, i64* %2, align 8, !dbg !13740
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !13740
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !13706, metadata !DIExpression()), !dbg !13707
  br label %bb19, !dbg !13740

bb19:                                             ; preds = %bb18
  %17 = sub i64 %self8, %rhs, !dbg !13707
  store i64 %17, i64* %n, align 8, !dbg !13707
  br label %bb5, !dbg !13695

bb6:                                              ; preds = %bb13, %bb5
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %18 = invoke align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2695af24d0687f28E"({ i8*, i8* }* align 8 %self)
          to label %bb7 unwind label %cleanup, !dbg !13741

bb16:                                             ; preds = %cleanup
  br label %bb17, !dbg !13742

cleanup:                                          ; preds = %panic, %bb8, %bb6
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb16

bb7:                                              ; preds = %bb6
  store i8* %18, i8** %_22, align 8, !dbg !13741
  %24 = bitcast i8** %_22 to {}**, !dbg !13743
  %25 = load {}*, {}** %24, align 8, !dbg !13743
  %26 = icmp eq {}* %25, null, !dbg !13743
  %_24 = select i1 %26, i64 0, i64 1, !dbg !13743
  %27 = icmp eq i64 %_24, 1, !dbg !13743
  br i1 %27, label %bb8, label %bb14, !dbg !13743

bb8:                                              ; preds = %bb7
  %x = load i8*, i8** %_22, align 8, !dbg !13744, !nonnull !28, !align !1104, !noundef !28
  store i8* %x, i8** %x.dbg.spill, align 8, !dbg !13744
  call void @llvm.dbg.declare(metadata i8** %x.dbg.spill, metadata !13677, metadata !DIExpression()), !dbg !13744
  store i8* %x, i8** %_28, align 8, !dbg !13745
  %28 = load i8*, i8** %_28, align 8, !dbg !13745, !nonnull !28, !align !1104, !noundef !28
; invoke core::slice::memchr::memchr::{{closure}}
  %_26 = invoke zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h28055ad8613f3affE"(i8** align 8 %predicate, i8* align 1 %28)
          to label %bb9 unwind label %cleanup, !dbg !13745

bb14:                                             ; preds = %bb7
  %29 = bitcast { i64, i64 }* %7 to i64*, !dbg !13746
  store i64 0, i64* %29, align 8, !dbg !13746
  br label %bb15, !dbg !13742

bb15:                                             ; preds = %bb11, %bb14
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !13747
  %31 = load i64, i64* %30, align 8, !dbg !13747, !range !1578, !noundef !28
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !13747
  %33 = load i64, i64* %32, align 8, !dbg !13747
  %34 = insertvalue { i64, i64 } undef, i64 %31, 0, !dbg !13747
  %35 = insertvalue { i64, i64 } %34, i64 %33, 1, !dbg !13747
  ret { i64, i64 } %35, !dbg !13747

bb9:                                              ; preds = %bb8
  br i1 %_26, label %bb10, label %bb12, !dbg !13745

bb12:                                             ; preds = %bb9
  %36 = load i64, i64* %i, align 8, !dbg !13748
  %37 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %36, i64 1), !dbg !13748
  %_35.0 = extractvalue { i64, i1 } %37, 0, !dbg !13748
  %_35.1 = extractvalue { i64, i1 } %37, 1, !dbg !13748
  %38 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !13748
  br i1 %38, label %panic, label %bb13, !dbg !13748

bb10:                                             ; preds = %bb9
  %_32 = load i64, i64* %i, align 8, !dbg !13749
  %_33 = load i64, i64* %n, align 8, !dbg !13750
  %_31 = icmp ult i64 %_32, %_33, !dbg !13749
  call void @llvm.assume(i1 %_31), !dbg !13751
  br label %bb11, !dbg !13751

bb11:                                             ; preds = %bb10
  %_34 = load i64, i64* %i, align 8, !dbg !13752
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !13753
  store i64 %_34, i64* %39, align 8, !dbg !13753
  %40 = bitcast { i64, i64 }* %7 to i64*, !dbg !13753
  store i64 1, i64* %40, align 8, !dbg !13753
  br label %bb15, !dbg !13742

bb13:                                             ; preds = %bb12
  store i64 %_35.0, i64* %i, align 8, !dbg !13748
  br label %bb6, !dbg !13729

panic:                                            ; preds = %bb12
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc715 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !13748

unreachable:                                      ; preds = %panic
  unreachable

bb17:                                             ; preds = %bb16
  %41 = bitcast { i8*, i32 }* %1 to i8**, !dbg !13754
  %42 = load i8*, i8** %41, align 8, !dbg !13754
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !13754
  %44 = load i32, i32* %43, align 8, !dbg !13754
  %45 = insertvalue { i8*, i32 } undef, i8* %42, 0, !dbg !13754
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1, !dbg !13754
  resume { i8*, i32 } %46, !dbg !13754
}

; <core::str::LinesAnyMap as core::ops::function::Fn<(&str,)>>::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN92_$LT$core..str..LinesAnyMap$u20$as$u20$core..ops..function..Fn$LT$$LP$$RF$str$C$$RP$$GT$$GT$4call17h183e31b4d5fedbacE"(%"core::str::LinesAnyMap"* align 1 %self, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #0 !dbg !13755 {
start:
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %l.dbg.spill = alloca i64, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %line.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::LinesAnyMap"*, align 8
  %index = alloca { i64, i64 }, align 8
  %_6 = alloca i8, align 1
  %4 = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca { i8*, i64 }, align 8
  %5 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  store %"core::str::LinesAnyMap"* %self, %"core::str::LinesAnyMap"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::LinesAnyMap"** %self.dbg.spill, metadata !13762, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %_2, metadata !13767, metadata !DIExpression()), !dbg !13769
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index, metadata !13770, metadata !DIExpression()), !dbg !13777
  %8 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*, !dbg !13779
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0, !dbg !13779
  %line.0 = load [0 x i8]*, [0 x i8]** %9, align 8, !dbg !13779, !nonnull !28, !align !1104, !noundef !28
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1, !dbg !13779
  %line.1 = load i64, i64* %10, align 8, !dbg !13779
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %line.dbg.spill, i32 0, i32 0, !dbg !13779
  store [0 x i8]* %line.0, [0 x i8]** %11, align 8, !dbg !13779
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %line.dbg.spill, i32 0, i32 1, !dbg !13779
  store i64 %line.1, i64* %12, align 8, !dbg !13779
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %line.dbg.spill, metadata !13763, metadata !DIExpression()), !dbg !13780
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !13781
  store [0 x i8]* %line.0, [0 x i8]** %13, align 8, !dbg !13781
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !13781
  store i64 %line.1, i64* %14, align 8, !dbg !13781
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !13783, metadata !DIExpression()), !dbg !13786
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !13786
  store [0 x i8]* %line.0, [0 x i8]** %15, align 8, !dbg !13786
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !13786
  store i64 %line.1, i64* %16, align 8, !dbg !13786
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !13787, metadata !DIExpression()), !dbg !13790
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !13790
  store [0 x i8]* %line.0, [0 x i8]** %17, align 8, !dbg !13790
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !13790
  store i64 %line.1, i64* %18, align 8, !dbg !13790
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !13790
  %_24.0 = load [0 x i8]*, [0 x i8]** %19, align 8, !dbg !13790, !nonnull !28, !align !1104, !noundef !28
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !13790
  %_24.1 = load i64, i64* %20, align 8, !dbg !13790
  br label %bb8, !dbg !13790

bb8:                                              ; preds = %start
  store i64 %_24.1, i64* %l.dbg.spill, align 8, !dbg !13786
  call void @llvm.dbg.declare(metadata i64* %l.dbg.spill, metadata !13765, metadata !DIExpression()), !dbg !13792
  %_7 = icmp ugt i64 %_24.1, 0, !dbg !13793
  br i1 %_7, label %bb2, label %bb1, !dbg !13793

bb1:                                              ; preds = %bb8
  store i8 0, i8* %_6, align 1, !dbg !13793
  br label %bb3, !dbg !13793

bb2:                                              ; preds = %bb8
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !13794
  store [0 x i8]* %line.0, [0 x i8]** %21, align 8, !dbg !13794
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !13794
  store i64 %line.1, i64* %22, align 8, !dbg !13794
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !13795, metadata !DIExpression()), !dbg !13798
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !13798
  store [0 x i8]* %line.0, [0 x i8]** %23, align 8, !dbg !13798
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !13798
  store i64 %line.1, i64* %24, align 8, !dbg !13798
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !13798
  %_11.0 = load [0 x i8]*, [0 x i8]** %25, align 8, !dbg !13798, !nonnull !28, !align !1104, !noundef !28
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !13798
  %_11.1 = load i64, i64* %26, align 8, !dbg !13798
  br label %bb9, !dbg !13798

bb9:                                              ; preds = %bb2
  %_13 = sub i64 %_24.1, 1, !dbg !13799
  %_16 = icmp ult i64 %_13, %_11.1, !dbg !13794
  %27 = call i1 @llvm.expect.i1(i1 %_16, i1 true), !dbg !13794
  br i1 %27, label %bb4, label %panic, !dbg !13794

bb4:                                              ; preds = %bb9
  %28 = getelementptr inbounds [0 x i8], [0 x i8]* %_11.0, i64 0, i64 %_13, !dbg !13794
  %_10 = load i8, i8* %28, align 1, !dbg !13794
  %_9 = icmp eq i8 %_10, 13, !dbg !13794
  %29 = zext i1 %_9 to i8, !dbg !13793
  store i8 %29, i8* %_6, align 1, !dbg !13793
  br label %bb3, !dbg !13793

panic:                                            ; preds = %bb9
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_13, i64 %_11.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc717 to %"core::panic::location::Location"*)) #17, !dbg !13794
  unreachable, !dbg !13794

bb3:                                              ; preds = %bb1, %bb4
  %30 = load i8, i8* %_6, align 1, !dbg !13793, !range !1099, !noundef !28
  %31 = trunc i8 %30 to i1, !dbg !13793
  br i1 %31, label %bb5, label %bb6, !dbg !13793

bb6:                                              ; preds = %bb3
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !13800
  store [0 x i8]* %line.0, [0 x i8]** %32, align 8, !dbg !13800
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !13800
  store i64 %line.1, i64* %33, align 8, !dbg !13800
  br label %bb7, !dbg !13801

bb5:                                              ; preds = %bb3
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !13778
  store [0 x i8]* %line.0, [0 x i8]** %34, align 8, !dbg !13778
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !13778
  store i64 %line.1, i64* %35, align 8, !dbg !13778
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !13776, metadata !DIExpression()), !dbg !13777
  %_21 = sub i64 %_24.1, 1, !dbg !13802
  %36 = bitcast { i64, i64 }* %index to i64*, !dbg !13803
  store i64 0, i64* %36, align 8, !dbg !13803
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !13803
  store i64 %_21, i64* %37, align 8, !dbg !13803
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 0, !dbg !13777
  %_28.0 = load i64, i64* %38, align 8, !dbg !13777
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !13777
  %_28.1 = load i64, i64* %39, align 8, !dbg !13777
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
  %40 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h83c6f72f7e717f46E"(i64 %_28.0, i64 %_28.1, [0 x i8]* align 1 %line.0, i64 %line.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc719 to %"core::panic::location::Location"*)), !dbg !13777
  %_18.0 = extractvalue { [0 x i8]*, i64 } %40, 0, !dbg !13777
  %_18.1 = extractvalue { [0 x i8]*, i64 } %40, 1, !dbg !13777
  br label %bb10, !dbg !13777

bb10:                                             ; preds = %bb5
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !13804
  store [0 x i8]* %_18.0, [0 x i8]** %41, align 8, !dbg !13804
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !13804
  store i64 %_18.1, i64* %42, align 8, !dbg !13804
  br label %bb7, !dbg !13801

bb7:                                              ; preds = %bb6, %bb10
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !13805
  %44 = load [0 x i8]*, [0 x i8]** %43, align 8, !dbg !13805, !nonnull !28, !align !1104, !noundef !28
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !13805
  %46 = load i64, i64* %45, align 8, !dbg !13805
  %47 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %44, 0, !dbg !13805
  %48 = insertvalue { [0 x i8]*, i64 } %47, i64 %46, 1, !dbg !13805
  ret { [0 x i8]*, i64 } %48, !dbg !13805
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h7211c62a78da3d20E"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Lines"* %iter) unnamed_addr #0 !dbg !13806 {
start:
  %_3 = alloca %"core::str::iter::Lines", align 8
  %_2 = alloca %"core::str::iter::Lines", align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Lines"* %iter, metadata !13809, metadata !DIExpression()), !dbg !13810
  %1 = bitcast %"core::str::iter::Lines"* %_3 to i8*, !dbg !13811
  %2 = bitcast %"core::str::iter::Lines"* %iter to i8*, !dbg !13811
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 72, i1 false), !dbg !13811
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf62c8bb5b8244d66E"(%"core::str::iter::Lines"* sret(%"core::str::iter::Lines") %_2, %"core::str::iter::Lines"* %_3), !dbg !13811
  br label %bb1, !dbg !13811

bb1:                                              ; preds = %start
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17heeef220a0dd2810fE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Lines"* %_2), !dbg !13812
  br label %bb2, !dbg !13812

bb2:                                              ; preds = %bb1
  ret void, !dbg !13813
}

; <core::str::LinesAnyMap as core::ops::function::FnMut<(&str,)>>::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN95_$LT$core..str..LinesAnyMap$u20$as$u20$core..ops..function..FnMut$LT$$LP$$RF$str$C$$RP$$GT$$GT$8call_mut17hb4db0a0e2b1f3091E"(%"core::str::LinesAnyMap"* align 1 %self, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #0 !dbg !13814 {
start:
  %line.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::LinesAnyMap"*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %_2 = alloca { i8*, i64 }, align 8
  %2 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store %"core::str::LinesAnyMap"* %self, %"core::str::LinesAnyMap"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::LinesAnyMap"** %self.dbg.spill, metadata !13817, metadata !DIExpression()), !dbg !13821
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %_2, metadata !13820, metadata !DIExpression()), !dbg !13822
  %5 = bitcast { i8*, i64 }* %_2 to { [0 x i8]*, i64 }*, !dbg !13823
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !13823
  %line.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !13823, !nonnull !28, !align !1104, !noundef !28
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !13823
  %line.1 = load i64, i64* %7, align 8, !dbg !13823
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %line.dbg.spill, i32 0, i32 0, !dbg !13823
  store [0 x i8]* %line.0, [0 x i8]** %8, align 8, !dbg !13823
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %line.dbg.spill, i32 0, i32 1, !dbg !13823
  store i64 %line.1, i64* %9, align 8, !dbg !13823
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %line.dbg.spill, metadata !13818, metadata !DIExpression()), !dbg !13824
  %10 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !13825
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !13825
  store [0 x i8]* %line.0, [0 x i8]** %11, align 8, !dbg !13825
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !13825
  store i64 %line.1, i64* %12, align 8, !dbg !13825
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !13826
  %14 = load i8*, i8** %13, align 8, !dbg !13826, !nonnull !28, !align !1104, !noundef !28
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !13826
  %16 = load i64, i64* %15, align 8, !dbg !13826
  %17 = bitcast i8* %14 to [0 x i8]*, !dbg !13826
; call <core::str::LinesAnyMap as core::ops::function::Fn<(&str,)>>::call
  %18 = call { [0 x i8]*, i64 } @"_ZN92_$LT$core..str..LinesAnyMap$u20$as$u20$core..ops..function..Fn$LT$$LP$$RF$str$C$$RP$$GT$$GT$4call17h183e31b4d5fedbacE"(%"core::str::LinesAnyMap"* align 1 %self, [0 x i8]* align 1 %17, i64 %16), !dbg !13826
  %19 = extractvalue { [0 x i8]*, i64 } %18, 0, !dbg !13826
  %20 = extractvalue { [0 x i8]*, i64 } %18, 1, !dbg !13826
  br label %bb1, !dbg !13826

bb1:                                              ; preds = %start
  %21 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !13827
  %22 = insertvalue { [0 x i8]*, i64 } %21, i64 %20, 1, !dbg !13827
  ret { [0 x i8]*, i64 } %22, !dbg !13827
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h05555628f815cf77E"(%"alloc::vec::Vec<&str>"* align 8 %self, %"core::str::iter::Lines"* %iter) unnamed_addr #1 !dbg !13828 {
start:
  %self.dbg.spill = alloca %"alloc::vec::Vec<&str>"*, align 8
  %_4 = alloca %"core::str::iter::Lines", align 8
  store %"alloc::vec::Vec<&str>"* %self, %"alloc::vec::Vec<&str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"** %self.dbg.spill, metadata !13833, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.declare(metadata %"core::str::iter::Lines"* %iter, metadata !13834, metadata !DIExpression()), !dbg !13837
  %0 = bitcast %"core::str::iter::Lines"* %_4 to i8*, !dbg !13838
  %1 = bitcast %"core::str::iter::Lines"* %iter to i8*, !dbg !13838
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 72, i1 false), !dbg !13838
; call alloc::vec::Vec<T,A>::extend_desugared
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17h00641bf6da95e416E"(%"alloc::vec::Vec<&str>"* align 8 %self, %"core::str::iter::Lines"* %_4), !dbg !13839
  br label %bb1, !dbg !13839

bb1:                                              ; preds = %start
  ret void, !dbg !13840
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17heeef220a0dd2810fE"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Lines"* %iterator) unnamed_addr #1 !dbg !13841 {
start:
  %_2 = alloca %"core::str::iter::Lines", align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Lines"* %iterator, metadata !13846, metadata !DIExpression()), !dbg !13847
  %1 = bitcast %"core::str::iter::Lines"* %_2 to i8*, !dbg !13848
  %2 = bitcast %"core::str::iter::Lines"* %iterator to i8*, !dbg !13848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 72, i1 false), !dbg !13848
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hd5b0d5e191eaad89E"(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %0, %"core::str::iter::Lines"* %_2), !dbg !13849
  br label %bb1, !dbg !13849

bb1:                                              ; preds = %start
  ret void, !dbg !13850
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64* @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc0de90d68a9c83deE"(%"alloc::sync::ArcInner<std::thread::Packet<()>>"* align 8 %reference) unnamed_addr #0 !dbg !13851 {
start:
  %reference.dbg.spill = alloca %"alloc::sync::ArcInner<std::thread::Packet<()>>"*, align 8
  %0 = alloca i64*, align 8
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %reference, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %reference.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %reference.dbg.spill, metadata !13854, metadata !DIExpression()), !dbg !13855
  %1 = bitcast i64** %0 to %"alloc::sync::ArcInner<std::thread::Packet<()>>"**, !dbg !13856
  store %"alloc::sync::ArcInner<std::thread::Packet<()>>"* %reference, %"alloc::sync::ArcInner<std::thread::Packet<()>>"** %1, align 8, !dbg !13856
  %2 = load i64*, i64** %0, align 8, !dbg !13857, !nonnull !28, !noundef !28
  ret i64* %2, !dbg !13857
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_thread_entry(i32 %buffer_size, i32* %buffer) unnamed_addr #1 !dbg !13858 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i65 = alloca i64, align 8
  %self.dbg.spill.i66 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i62 = alloca i64, align 8
  %self.dbg.spill.i63 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i59 = alloca i64, align 8
  %self.dbg.spill.i60 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i56 = alloca i64, align 8
  %self.dbg.spill.i57 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i53 = alloca i64, align 8
  %self.dbg.spill.i54 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i50 = alloca i64, align 8
  %self.dbg.spill.i51 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %count.dbg.spill.i47 = alloca i64, align 8
  %self.dbg.spill.i48 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %count.dbg.spill.i44 = alloca i64, align 8
  %self.dbg.spill.i45 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %count.dbg.spill.i41 = alloca i64, align 8
  %self.dbg.spill.i42 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %count.dbg.spill.i38 = alloca i64, align 8
  %self.dbg.spill.i39 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %count.dbg.spill.i35 = alloca i64, align 8
  %self.dbg.spill.i36 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %count.dbg.spill.i32 = alloca i64, align 8
  %self.dbg.spill.i33 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %count.dbg.spill.i29 = alloca i64, align 8
  %self.dbg.spill.i30 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %count.dbg.spill.i26 = alloca i64, align 8
  %self.dbg.spill.i27 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %fresh15.dbg.spill = alloca i32, align 4
  %fresh14.dbg.spill = alloca i32, align 4
  %fresh13.dbg.spill = alloca i32, align 4
  %fresh12.dbg.spill = alloca i32, align 4
  %fresh11.dbg.spill = alloca i32, align 4
  %fresh10.dbg.spill = alloca i32, align 4
  %fresh9.dbg.spill = alloca i32, align 4
  %fresh8.dbg.spill = alloca i32, align 4
  %fresh7.dbg.spill = alloca i32, align 4
  %fresh6.dbg.spill = alloca i32, align 4
  %fresh5.dbg.spill = alloca i32, align 4
  %fresh4.dbg.spill = alloca i32, align 4
  %fresh3.dbg.spill = alloca i32, align 4
  %fresh2.dbg.spill = alloca i32, align 4
  %fresh1.dbg.spill = alloca i32, align 4
  %fresh0.dbg.spill = alloca i32, align 4
  %buffer.dbg.spill = alloca i32*, align 8
  %buffer_size.dbg.spill = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %buffer_size, i32* %buffer_size.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.dbg.spill, metadata !13862, metadata !DIExpression()), !dbg !13898
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !13863, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13864, metadata !DIExpression()), !dbg !13900
  %_3 = icmp ult i32 %buffer_size, 16, !dbg !13901
  br i1 %_3, label %bb41, label %bb1, !dbg !13901

bb1:                                              ; preds = %start
  store i32 0, i32* %i, align 4, !dbg !13902
  store i32 0, i32* %fresh0.dbg.spill, align 4, !dbg !13903
  call void @llvm.dbg.declare(metadata i32* %fresh0.dbg.spill, metadata !13866, metadata !DIExpression()), !dbg !13904
  store i32 1, i32* %i, align 4, !dbg !13905
  %_8 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals9rust_gssi17ha42a983c30fd17ceE to i32*), align 4, !dbg !13906
  store i32* %buffer, i32** %self.dbg.spill.i66, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i66, metadata !13907, metadata !DIExpression()), !dbg !13911
  store i64 0, i64* %count.dbg.spill.i65, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i65, metadata !13910, metadata !DIExpression()), !dbg !13913
  store i32* %buffer, i32** %0, align 8, !dbg !13914
  %_3.i67 = load i32*, i32** %0, align 8, !dbg !13914
  br label %bb2, !dbg !13915

bb41:                                             ; preds = %bb40, %start
  ret void, !dbg !13916

bb2:                                              ; preds = %bb1
  store i32 %_8, i32* %_3.i67, align 4, !dbg !13917
  %16 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals9rust_gssi17ha42a983c30fd17ceE to i32*), align 4, !dbg !13918
  %17 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 1337), !dbg !13918
  %_16.0 = extractvalue { i32, i1 } %17, 0, !dbg !13918
  %_16.1 = extractvalue { i32, i1 } %17, 1, !dbg !13918
  %18 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !13918
  br i1 %18, label %panic, label %bb3, !dbg !13918

bb3:                                              ; preds = %bb2
  store i32 %_16.0, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals9rust_gssi17ha42a983c30fd17ceE to i32*), align 4, !dbg !13918
  %fresh1 = load i32, i32* %i, align 4, !dbg !13919
  store i32 %fresh1, i32* %fresh1.dbg.spill, align 4, !dbg !13919
  call void @llvm.dbg.declare(metadata i32* %fresh1.dbg.spill, metadata !13868, metadata !DIExpression()), !dbg !13920
  %_18 = load i32, i32* %i, align 4, !dbg !13921
  %19 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_18, i32 1), !dbg !13921
  %_19.0 = extractvalue { i32, i1 } %19, 0, !dbg !13921
  %_19.1 = extractvalue { i32, i1 } %19, 1, !dbg !13921
  %20 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !13921
  br i1 %20, label %panic1, label %bb4, !dbg !13921

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc721 to %"core::panic::location::Location"*)) #17, !dbg !13918
  unreachable, !dbg !13918

bb4:                                              ; preds = %bb3
  store i32 %_19.0, i32* %i, align 4, !dbg !13922
  %_20 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals9rust_gssi17ha42a983c30fd17ceE to i32*), align 4, !dbg !13923
  %_24 = sext i32 %fresh1 to i64, !dbg !13924
  store i32* %buffer, i32** %self.dbg.spill.i63, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i63, metadata !13907, metadata !DIExpression()), !dbg !13925
  store i64 %_24, i64* %count.dbg.spill.i62, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i62, metadata !13910, metadata !DIExpression()), !dbg !13927
  %21 = getelementptr inbounds i32, i32* %buffer, i64 %_24, !dbg !13928
  store i32* %21, i32** %1, align 8, !dbg !13928
  %_3.i64 = load i32*, i32** %1, align 8, !dbg !13928
  br label %bb5, !dbg !13929

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc723 to %"core::panic::location::Location"*)) #17, !dbg !13921
  unreachable, !dbg !13921

bb5:                                              ; preds = %bb4
  store i32 %_20, i32* %_3.i64, align 4, !dbg !13930
  %fresh2 = load i32, i32* %i, align 4, !dbg !13931
  store i32 %fresh2, i32* %fresh2.dbg.spill, align 4, !dbg !13931
  call void @llvm.dbg.declare(metadata i32* %fresh2.dbg.spill, metadata !13870, metadata !DIExpression()), !dbg !13932
  %_27 = load i32, i32* %i, align 4, !dbg !13933
  %22 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_27, i32 1), !dbg !13933
  %_28.0 = extractvalue { i32, i1 } %22, 0, !dbg !13933
  %_28.1 = extractvalue { i32, i1 } %22, 1, !dbg !13933
  %23 = call i1 @llvm.expect.i1(i1 %_28.1, i1 false), !dbg !13933
  br i1 %23, label %panic2, label %bb6, !dbg !13933

bb6:                                              ; preds = %bb5
  store i32 %_28.0, i32* %i, align 4, !dbg !13934
  %_29 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_gesi to i32*), align 4, !dbg !13935
  %_33 = sext i32 %fresh2 to i64, !dbg !13936
  store i32* %buffer, i32** %self.dbg.spill.i60, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i60, metadata !13907, metadata !DIExpression()), !dbg !13937
  store i64 %_33, i64* %count.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i59, metadata !13910, metadata !DIExpression()), !dbg !13939
  %24 = getelementptr inbounds i32, i32* %buffer, i64 %_33, !dbg !13940
  store i32* %24, i32** %2, align 8, !dbg !13940
  %_3.i61 = load i32*, i32** %2, align 8, !dbg !13940
  br label %bb7, !dbg !13941

panic2:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc725 to %"core::panic::location::Location"*)) #17, !dbg !13933
  unreachable, !dbg !13933

bb7:                                              ; preds = %bb6
  store i32 %_29, i32* %_3.i61, align 4, !dbg !13942
  %25 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_gesi to i32*), align 4, !dbg !13943
  %26 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 1337), !dbg !13943
  %_37.0 = extractvalue { i32, i1 } %26, 0, !dbg !13943
  %_37.1 = extractvalue { i32, i1 } %26, 1, !dbg !13943
  %27 = call i1 @llvm.expect.i1(i1 %_37.1, i1 false), !dbg !13943
  br i1 %27, label %panic3, label %bb8, !dbg !13943

bb8:                                              ; preds = %bb7
  store i32 %_37.0, i32* bitcast (<{ [4 x i8] }>* @rust_gesi to i32*), align 4, !dbg !13943
  %fresh3 = load i32, i32* %i, align 4, !dbg !13944
  store i32 %fresh3, i32* %fresh3.dbg.spill, align 4, !dbg !13944
  call void @llvm.dbg.declare(metadata i32* %fresh3.dbg.spill, metadata !13872, metadata !DIExpression()), !dbg !13945
  %_39 = load i32, i32* %i, align 4, !dbg !13946
  %28 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_39, i32 1), !dbg !13946
  %_40.0 = extractvalue { i32, i1 } %28, 0, !dbg !13946
  %_40.1 = extractvalue { i32, i1 } %28, 1, !dbg !13946
  %29 = call i1 @llvm.expect.i1(i1 %_40.1, i1 false), !dbg !13946
  br i1 %29, label %panic4, label %bb9, !dbg !13946

panic3:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc727 to %"core::panic::location::Location"*)) #17, !dbg !13943
  unreachable, !dbg !13943

bb9:                                              ; preds = %bb8
  store i32 %_40.0, i32* %i, align 4, !dbg !13947
  %_41 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_gesi to i32*), align 4, !dbg !13948
  %_45 = sext i32 %fresh3 to i64, !dbg !13949
  store i32* %buffer, i32** %self.dbg.spill.i57, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i57, metadata !13907, metadata !DIExpression()), !dbg !13950
  store i64 %_45, i64* %count.dbg.spill.i56, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i56, metadata !13910, metadata !DIExpression()), !dbg !13952
  %30 = getelementptr inbounds i32, i32* %buffer, i64 %_45, !dbg !13953
  store i32* %30, i32** %3, align 8, !dbg !13953
  %_3.i58 = load i32*, i32** %3, align 8, !dbg !13953
  br label %bb10, !dbg !13954

panic4:                                           ; preds = %bb8
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc729 to %"core::panic::location::Location"*)) #17, !dbg !13946
  unreachable, !dbg !13946

bb10:                                             ; preds = %bb9
  store i32 %_41, i32* %_3.i58, align 4, !dbg !13955
  %fresh4 = load i32, i32* %i, align 4, !dbg !13956
  store i32 %fresh4, i32* %fresh4.dbg.spill, align 4, !dbg !13956
  call void @llvm.dbg.declare(metadata i32* %fresh4.dbg.spill, metadata !13874, metadata !DIExpression()), !dbg !13957
  %_48 = load i32, i32* %i, align 4, !dbg !13958
  %31 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_48, i32 1), !dbg !13958
  %_49.0 = extractvalue { i32, i1 } %31, 0, !dbg !13958
  %_49.1 = extractvalue { i32, i1 } %31, 1, !dbg !13958
  %32 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false), !dbg !13958
  br i1 %32, label %panic5, label %bb11, !dbg !13958

bb11:                                             ; preds = %bb10
  store i32 %_49.0, i32* %i, align 4, !dbg !13959
  %_50 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals9rust_gsti17h8c6e37da93ad1f39E to i32*), align 4, !dbg !13960
  %_54 = sext i32 %fresh4 to i64, !dbg !13961
  store i32* %buffer, i32** %self.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i54, metadata !13907, metadata !DIExpression()), !dbg !13962
  store i64 %_54, i64* %count.dbg.spill.i53, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i53, metadata !13910, metadata !DIExpression()), !dbg !13964
  %33 = getelementptr inbounds i32, i32* %buffer, i64 %_54, !dbg !13965
  store i32* %33, i32** %4, align 8, !dbg !13965
  %_3.i55 = load i32*, i32** %4, align 8, !dbg !13965
  br label %bb12, !dbg !13966

panic5:                                           ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc731 to %"core::panic::location::Location"*)) #17, !dbg !13958
  unreachable, !dbg !13958

bb12:                                             ; preds = %bb11
  store i32 %_50, i32* %_3.i55, align 4, !dbg !13967
  %34 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals9rust_gsti17h8c6e37da93ad1f39E to i32*), align 4, !dbg !13968
  %35 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 1337), !dbg !13968
  %_58.0 = extractvalue { i32, i1 } %35, 0, !dbg !13968
  %_58.1 = extractvalue { i32, i1 } %35, 1, !dbg !13968
  %36 = call i1 @llvm.expect.i1(i1 %_58.1, i1 false), !dbg !13968
  br i1 %36, label %panic6, label %bb13, !dbg !13968

bb13:                                             ; preds = %bb12
  store i32 %_58.0, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals9rust_gsti17h8c6e37da93ad1f39E to i32*), align 4, !dbg !13968
  %fresh5 = load i32, i32* %i, align 4, !dbg !13969
  store i32 %fresh5, i32* %fresh5.dbg.spill, align 4, !dbg !13969
  call void @llvm.dbg.declare(metadata i32* %fresh5.dbg.spill, metadata !13876, metadata !DIExpression()), !dbg !13970
  %_60 = load i32, i32* %i, align 4, !dbg !13971
  %37 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_60, i32 1), !dbg !13971
  %_61.0 = extractvalue { i32, i1 } %37, 0, !dbg !13971
  %_61.1 = extractvalue { i32, i1 } %37, 1, !dbg !13971
  %38 = call i1 @llvm.expect.i1(i1 %_61.1, i1 false), !dbg !13971
  br i1 %38, label %panic7, label %bb14, !dbg !13971

panic6:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc733 to %"core::panic::location::Location"*)) #17, !dbg !13968
  unreachable, !dbg !13968

bb14:                                             ; preds = %bb13
  store i32 %_61.0, i32* %i, align 4, !dbg !13972
  %_62 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals9rust_gsti17h8c6e37da93ad1f39E to i32*), align 4, !dbg !13973
  %_66 = sext i32 %fresh5 to i64, !dbg !13974
  store i32* %buffer, i32** %self.dbg.spill.i51, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i51, metadata !13907, metadata !DIExpression()), !dbg !13975
  store i64 %_66, i64* %count.dbg.spill.i50, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i50, metadata !13910, metadata !DIExpression()), !dbg !13977
  %39 = getelementptr inbounds i32, i32* %buffer, i64 %_66, !dbg !13978
  store i32* %39, i32** %5, align 8, !dbg !13978
  %_3.i52 = load i32*, i32** %5, align 8, !dbg !13978
  br label %bb15, !dbg !13979

panic7:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc735 to %"core::panic::location::Location"*)) #17, !dbg !13971
  unreachable, !dbg !13971

bb15:                                             ; preds = %bb14
  store i32 %_62, i32* %_3.i52, align 4, !dbg !13980
  %fresh6 = load i32, i32* %i, align 4, !dbg !13981
  store i32 %fresh6, i32* %fresh6.dbg.spill, align 4, !dbg !13981
  call void @llvm.dbg.declare(metadata i32* %fresh6.dbg.spill, metadata !13878, metadata !DIExpression()), !dbg !13982
  %_69 = load i32, i32* %i, align 4, !dbg !13983
  %40 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_69, i32 1), !dbg !13983
  %_70.0 = extractvalue { i32, i1 } %40, 0, !dbg !13983
  %_70.1 = extractvalue { i32, i1 } %40, 1, !dbg !13983
  %41 = call i1 @llvm.expect.i1(i1 %_70.1, i1 false), !dbg !13983
  br i1 %41, label %panic8, label %bb16, !dbg !13983

bb16:                                             ; preds = %bb15
  store i32 %_70.0, i32* %i, align 4, !dbg !13984
  %_71 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_geti to i32*), align 4, !dbg !13985
  %_75 = sext i32 %fresh6 to i64, !dbg !13986
  store i32* %buffer, i32** %self.dbg.spill.i48, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i48, metadata !13907, metadata !DIExpression()), !dbg !13987
  store i64 %_75, i64* %count.dbg.spill.i47, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i47, metadata !13910, metadata !DIExpression()), !dbg !13989
  %42 = getelementptr inbounds i32, i32* %buffer, i64 %_75, !dbg !13990
  store i32* %42, i32** %6, align 8, !dbg !13990
  %_3.i49 = load i32*, i32** %6, align 8, !dbg !13990
  br label %bb17, !dbg !13991

panic8:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc737 to %"core::panic::location::Location"*)) #17, !dbg !13983
  unreachable, !dbg !13983

bb17:                                             ; preds = %bb16
  store i32 %_71, i32* %_3.i49, align 4, !dbg !13992
  %43 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_geti to i32*), align 4, !dbg !13993
  %44 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 1337), !dbg !13993
  %_79.0 = extractvalue { i32, i1 } %44, 0, !dbg !13993
  %_79.1 = extractvalue { i32, i1 } %44, 1, !dbg !13993
  %45 = call i1 @llvm.expect.i1(i1 %_79.1, i1 false), !dbg !13993
  br i1 %45, label %panic9, label %bb18, !dbg !13993

bb18:                                             ; preds = %bb17
  store i32 %_79.0, i32* bitcast (<{ [4 x i8] }>* @rust_geti to i32*), align 4, !dbg !13993
  %fresh7 = load i32, i32* %i, align 4, !dbg !13994
  store i32 %fresh7, i32* %fresh7.dbg.spill, align 4, !dbg !13994
  call void @llvm.dbg.declare(metadata i32* %fresh7.dbg.spill, metadata !13880, metadata !DIExpression()), !dbg !13995
  %_81 = load i32, i32* %i, align 4, !dbg !13996
  %46 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_81, i32 1), !dbg !13996
  %_82.0 = extractvalue { i32, i1 } %46, 0, !dbg !13996
  %_82.1 = extractvalue { i32, i1 } %46, 1, !dbg !13996
  %47 = call i1 @llvm.expect.i1(i1 %_82.1, i1 false), !dbg !13996
  br i1 %47, label %panic10, label %bb19, !dbg !13996

panic9:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc739 to %"core::panic::location::Location"*)) #17, !dbg !13993
  unreachable, !dbg !13993

bb19:                                             ; preds = %bb18
  store i32 %_82.0, i32* %i, align 4, !dbg !13997
  %_83 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_geti to i32*), align 4, !dbg !13998
  %_87 = sext i32 %fresh7 to i64, !dbg !13999
  store i32* %buffer, i32** %self.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i45, metadata !13907, metadata !DIExpression()), !dbg !14000
  store i64 %_87, i64* %count.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i44, metadata !13910, metadata !DIExpression()), !dbg !14002
  %48 = getelementptr inbounds i32, i32* %buffer, i64 %_87, !dbg !14003
  store i32* %48, i32** %7, align 8, !dbg !14003
  %_3.i46 = load i32*, i32** %7, align 8, !dbg !14003
  br label %bb20, !dbg !14004

panic10:                                          ; preds = %bb18
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc741 to %"core::panic::location::Location"*)) #17, !dbg !13996
  unreachable, !dbg !13996

bb20:                                             ; preds = %bb19
  store i32 %_83, i32* %_3.i46, align 4, !dbg !14005
  %fresh8 = load i32, i32* %i, align 4, !dbg !14006
  store i32 %fresh8, i32* %fresh8.dbg.spill, align 4, !dbg !14006
  call void @llvm.dbg.declare(metadata i32* %fresh8.dbg.spill, metadata !13882, metadata !DIExpression()), !dbg !14007
  %_90 = load i32, i32* %i, align 4, !dbg !14008
  %49 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_90, i32 1), !dbg !14008
  %_91.0 = extractvalue { i32, i1 } %49, 0, !dbg !14008
  %_91.1 = extractvalue { i32, i1 } %49, 1, !dbg !14008
  %50 = call i1 @llvm.expect.i1(i1 %_91.1, i1 false), !dbg !14008
  br i1 %50, label %panic11, label %bb21, !dbg !14008

bb21:                                             ; preds = %bb20
  store i32 %_91.0, i32* %i, align 4, !dbg !14009
  %_92 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fssi17hd080597f2f0eb4e3E to i32*), align 4, !dbg !14010
  %_96 = sext i32 %fresh8 to i64, !dbg !14011
  store i32* %buffer, i32** %self.dbg.spill.i42, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i42, metadata !13907, metadata !DIExpression()), !dbg !14012
  store i64 %_96, i64* %count.dbg.spill.i41, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i41, metadata !13910, metadata !DIExpression()), !dbg !14014
  %51 = getelementptr inbounds i32, i32* %buffer, i64 %_96, !dbg !14015
  store i32* %51, i32** %8, align 8, !dbg !14015
  %_3.i43 = load i32*, i32** %8, align 8, !dbg !14015
  br label %bb22, !dbg !14016

panic11:                                          ; preds = %bb20
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc743 to %"core::panic::location::Location"*)) #17, !dbg !14008
  unreachable, !dbg !14008

bb22:                                             ; preds = %bb21
  store i32 %_92, i32* %_3.i43, align 4, !dbg !14017
  %52 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fssi17hd080597f2f0eb4e3E to i32*), align 4, !dbg !14018
  %53 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 1337), !dbg !14018
  %_100.0 = extractvalue { i32, i1 } %53, 0, !dbg !14018
  %_100.1 = extractvalue { i32, i1 } %53, 1, !dbg !14018
  %54 = call i1 @llvm.expect.i1(i1 %_100.1, i1 false), !dbg !14018
  br i1 %54, label %panic12, label %bb23, !dbg !14018

bb23:                                             ; preds = %bb22
  store i32 %_100.0, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fssi17hd080597f2f0eb4e3E to i32*), align 4, !dbg !14018
  %fresh9 = load i32, i32* %i, align 4, !dbg !14019
  store i32 %fresh9, i32* %fresh9.dbg.spill, align 4, !dbg !14019
  call void @llvm.dbg.declare(metadata i32* %fresh9.dbg.spill, metadata !13884, metadata !DIExpression()), !dbg !14020
  %_102 = load i32, i32* %i, align 4, !dbg !14021
  %55 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_102, i32 1), !dbg !14021
  %_103.0 = extractvalue { i32, i1 } %55, 0, !dbg !14021
  %_103.1 = extractvalue { i32, i1 } %55, 1, !dbg !14021
  %56 = call i1 @llvm.expect.i1(i1 %_103.1, i1 false), !dbg !14021
  br i1 %56, label %panic13, label %bb24, !dbg !14021

panic12:                                          ; preds = %bb22
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc745 to %"core::panic::location::Location"*)) #17, !dbg !14018
  unreachable, !dbg !14018

bb24:                                             ; preds = %bb23
  store i32 %_103.0, i32* %i, align 4, !dbg !14022
  %_104 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fssi17hd080597f2f0eb4e3E to i32*), align 4, !dbg !14023
  %_108 = sext i32 %fresh9 to i64, !dbg !14024
  store i32* %buffer, i32** %self.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i39, metadata !13907, metadata !DIExpression()), !dbg !14025
  store i64 %_108, i64* %count.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i38, metadata !13910, metadata !DIExpression()), !dbg !14027
  %57 = getelementptr inbounds i32, i32* %buffer, i64 %_108, !dbg !14028
  store i32* %57, i32** %9, align 8, !dbg !14028
  %_3.i40 = load i32*, i32** %9, align 8, !dbg !14028
  br label %bb25, !dbg !14029

panic13:                                          ; preds = %bb23
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc747 to %"core::panic::location::Location"*)) #17, !dbg !14021
  unreachable, !dbg !14021

bb25:                                             ; preds = %bb24
  store i32 %_104, i32* %_3.i40, align 4, !dbg !14030
  %fresh10 = load i32, i32* %i, align 4, !dbg !14031
  store i32 %fresh10, i32* %fresh10.dbg.spill, align 4, !dbg !14031
  call void @llvm.dbg.declare(metadata i32* %fresh10.dbg.spill, metadata !13886, metadata !DIExpression()), !dbg !14032
  %_111 = load i32, i32* %i, align 4, !dbg !14033
  %58 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_111, i32 1), !dbg !14033
  %_112.0 = extractvalue { i32, i1 } %58, 0, !dbg !14033
  %_112.1 = extractvalue { i32, i1 } %58, 1, !dbg !14033
  %59 = call i1 @llvm.expect.i1(i1 %_112.1, i1 false), !dbg !14033
  br i1 %59, label %panic14, label %bb26, !dbg !14033

bb26:                                             ; preds = %bb25
  store i32 %_112.0, i32* %i, align 4, !dbg !14034
  %_113 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_fesi to i32*), align 4, !dbg !14035
  %_117 = sext i32 %fresh10 to i64, !dbg !14036
  store i32* %buffer, i32** %self.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i36, metadata !13907, metadata !DIExpression()), !dbg !14037
  store i64 %_117, i64* %count.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i35, metadata !13910, metadata !DIExpression()), !dbg !14039
  %60 = getelementptr inbounds i32, i32* %buffer, i64 %_117, !dbg !14040
  store i32* %60, i32** %10, align 8, !dbg !14040
  %_3.i37 = load i32*, i32** %10, align 8, !dbg !14040
  br label %bb27, !dbg !14041

panic14:                                          ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc749 to %"core::panic::location::Location"*)) #17, !dbg !14033
  unreachable, !dbg !14033

bb27:                                             ; preds = %bb26
  store i32 %_113, i32* %_3.i37, align 4, !dbg !14042
  %61 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_fesi to i32*), align 4, !dbg !14043
  %62 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %61, i32 1337), !dbg !14043
  %_121.0 = extractvalue { i32, i1 } %62, 0, !dbg !14043
  %_121.1 = extractvalue { i32, i1 } %62, 1, !dbg !14043
  %63 = call i1 @llvm.expect.i1(i1 %_121.1, i1 false), !dbg !14043
  br i1 %63, label %panic15, label %bb28, !dbg !14043

bb28:                                             ; preds = %bb27
  store i32 %_121.0, i32* bitcast (<{ [4 x i8] }>* @rust_fesi to i32*), align 4, !dbg !14043
  %fresh11 = load i32, i32* %i, align 4, !dbg !14044
  store i32 %fresh11, i32* %fresh11.dbg.spill, align 4, !dbg !14044
  call void @llvm.dbg.declare(metadata i32* %fresh11.dbg.spill, metadata !13888, metadata !DIExpression()), !dbg !14045
  %_123 = load i32, i32* %i, align 4, !dbg !14046
  %64 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_123, i32 1), !dbg !14046
  %_124.0 = extractvalue { i32, i1 } %64, 0, !dbg !14046
  %_124.1 = extractvalue { i32, i1 } %64, 1, !dbg !14046
  %65 = call i1 @llvm.expect.i1(i1 %_124.1, i1 false), !dbg !14046
  br i1 %65, label %panic16, label %bb29, !dbg !14046

panic15:                                          ; preds = %bb27
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc751 to %"core::panic::location::Location"*)) #17, !dbg !14043
  unreachable, !dbg !14043

bb29:                                             ; preds = %bb28
  store i32 %_124.0, i32* %i, align 4, !dbg !14047
  %_125 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_fesi to i32*), align 4, !dbg !14048
  %_129 = sext i32 %fresh11 to i64, !dbg !14049
  store i32* %buffer, i32** %self.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i33, metadata !13907, metadata !DIExpression()), !dbg !14050
  store i64 %_129, i64* %count.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i32, metadata !13910, metadata !DIExpression()), !dbg !14052
  %66 = getelementptr inbounds i32, i32* %buffer, i64 %_129, !dbg !14053
  store i32* %66, i32** %11, align 8, !dbg !14053
  %_3.i34 = load i32*, i32** %11, align 8, !dbg !14053
  br label %bb30, !dbg !14054

panic16:                                          ; preds = %bb28
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc753 to %"core::panic::location::Location"*)) #17, !dbg !14046
  unreachable, !dbg !14046

bb30:                                             ; preds = %bb29
  store i32 %_125, i32* %_3.i34, align 4, !dbg !14055
  %fresh12 = load i32, i32* %i, align 4, !dbg !14056
  store i32 %fresh12, i32* %fresh12.dbg.spill, align 4, !dbg !14056
  call void @llvm.dbg.declare(metadata i32* %fresh12.dbg.spill, metadata !13890, metadata !DIExpression()), !dbg !14057
  %_132 = load i32, i32* %i, align 4, !dbg !14058
  %67 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_132, i32 1), !dbg !14058
  %_133.0 = extractvalue { i32, i1 } %67, 0, !dbg !14058
  %_133.1 = extractvalue { i32, i1 } %67, 1, !dbg !14058
  %68 = call i1 @llvm.expect.i1(i1 %_133.1, i1 false), !dbg !14058
  br i1 %68, label %panic17, label %bb31, !dbg !14058

bb31:                                             ; preds = %bb30
  store i32 %_133.0, i32* %i, align 4, !dbg !14059
  %_134 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fsti17hfed40b6f8f57ce71E to i32*), align 4, !dbg !14060
  %_138 = sext i32 %fresh12 to i64, !dbg !14061
  store i32* %buffer, i32** %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i30, metadata !13907, metadata !DIExpression()), !dbg !14062
  store i64 %_138, i64* %count.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i29, metadata !13910, metadata !DIExpression()), !dbg !14064
  %69 = getelementptr inbounds i32, i32* %buffer, i64 %_138, !dbg !14065
  store i32* %69, i32** %12, align 8, !dbg !14065
  %_3.i31 = load i32*, i32** %12, align 8, !dbg !14065
  br label %bb32, !dbg !14066

panic17:                                          ; preds = %bb30
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc755 to %"core::panic::location::Location"*)) #17, !dbg !14058
  unreachable, !dbg !14058

bb32:                                             ; preds = %bb31
  store i32 %_134, i32* %_3.i31, align 4, !dbg !14067
  %70 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fsti17hfed40b6f8f57ce71E to i32*), align 4, !dbg !14068
  %71 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 1337), !dbg !14068
  %_142.0 = extractvalue { i32, i1 } %71, 0, !dbg !14068
  %_142.1 = extractvalue { i32, i1 } %71, 1, !dbg !14068
  %72 = call i1 @llvm.expect.i1(i1 %_142.1, i1 false), !dbg !14068
  br i1 %72, label %panic18, label %bb33, !dbg !14068

bb33:                                             ; preds = %bb32
  store i32 %_142.0, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fsti17hfed40b6f8f57ce71E to i32*), align 4, !dbg !14068
  %fresh13 = load i32, i32* %i, align 4, !dbg !14069
  store i32 %fresh13, i32* %fresh13.dbg.spill, align 4, !dbg !14069
  call void @llvm.dbg.declare(metadata i32* %fresh13.dbg.spill, metadata !13892, metadata !DIExpression()), !dbg !14070
  %_144 = load i32, i32* %i, align 4, !dbg !14071
  %73 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_144, i32 1), !dbg !14071
  %_145.0 = extractvalue { i32, i1 } %73, 0, !dbg !14071
  %_145.1 = extractvalue { i32, i1 } %73, 1, !dbg !14071
  %74 = call i1 @llvm.expect.i1(i1 %_145.1, i1 false), !dbg !14071
  br i1 %74, label %panic19, label %bb34, !dbg !14071

panic18:                                          ; preds = %bb32
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc757 to %"core::panic::location::Location"*)) #17, !dbg !14068
  unreachable, !dbg !14068

bb34:                                             ; preds = %bb33
  store i32 %_145.0, i32* %i, align 4, !dbg !14072
  %_146 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fsti17hfed40b6f8f57ce71E to i32*), align 4, !dbg !14073
  %_150 = sext i32 %fresh13 to i64, !dbg !14074
  store i32* %buffer, i32** %self.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i27, metadata !13907, metadata !DIExpression()), !dbg !14075
  store i64 %_150, i64* %count.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i26, metadata !13910, metadata !DIExpression()), !dbg !14077
  %75 = getelementptr inbounds i32, i32* %buffer, i64 %_150, !dbg !14078
  store i32* %75, i32** %13, align 8, !dbg !14078
  %_3.i28 = load i32*, i32** %13, align 8, !dbg !14078
  br label %bb35, !dbg !14079

panic19:                                          ; preds = %bb33
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc759 to %"core::panic::location::Location"*)) #17, !dbg !14071
  unreachable, !dbg !14071

bb35:                                             ; preds = %bb34
  store i32 %_146, i32* %_3.i28, align 4, !dbg !14080
  %fresh14 = load i32, i32* %i, align 4, !dbg !14081
  store i32 %fresh14, i32* %fresh14.dbg.spill, align 4, !dbg !14081
  call void @llvm.dbg.declare(metadata i32* %fresh14.dbg.spill, metadata !13894, metadata !DIExpression()), !dbg !14082
  %_153 = load i32, i32* %i, align 4, !dbg !14083
  %76 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_153, i32 1), !dbg !14083
  %_154.0 = extractvalue { i32, i1 } %76, 0, !dbg !14083
  %_154.1 = extractvalue { i32, i1 } %76, 1, !dbg !14083
  %77 = call i1 @llvm.expect.i1(i1 %_154.1, i1 false), !dbg !14083
  br i1 %77, label %panic20, label %bb36, !dbg !14083

bb36:                                             ; preds = %bb35
  store i32 %_154.0, i32* %i, align 4, !dbg !14084
  %_155 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_feti to i32*), align 4, !dbg !14085
  %_159 = sext i32 %fresh14 to i64, !dbg !14086
  store i32* %buffer, i32** %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i24, metadata !13907, metadata !DIExpression()), !dbg !14087
  store i64 %_159, i64* %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i23, metadata !13910, metadata !DIExpression()), !dbg !14089
  %78 = getelementptr inbounds i32, i32* %buffer, i64 %_159, !dbg !14090
  store i32* %78, i32** %14, align 8, !dbg !14090
  %_3.i25 = load i32*, i32** %14, align 8, !dbg !14090
  br label %bb37, !dbg !14091

panic20:                                          ; preds = %bb35
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc761 to %"core::panic::location::Location"*)) #17, !dbg !14083
  unreachable, !dbg !14083

bb37:                                             ; preds = %bb36
  store i32 %_155, i32* %_3.i25, align 4, !dbg !14092
  %79 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_feti to i32*), align 4, !dbg !14093
  %80 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %79, i32 1337), !dbg !14093
  %_163.0 = extractvalue { i32, i1 } %80, 0, !dbg !14093
  %_163.1 = extractvalue { i32, i1 } %80, 1, !dbg !14093
  %81 = call i1 @llvm.expect.i1(i1 %_163.1, i1 false), !dbg !14093
  br i1 %81, label %panic21, label %bb38, !dbg !14093

bb38:                                             ; preds = %bb37
  store i32 %_163.0, i32* bitcast (<{ [4 x i8] }>* @rust_feti to i32*), align 4, !dbg !14093
  %fresh15 = load i32, i32* %i, align 4, !dbg !14094
  store i32 %fresh15, i32* %fresh15.dbg.spill, align 4, !dbg !14094
  call void @llvm.dbg.declare(metadata i32* %fresh15.dbg.spill, metadata !13896, metadata !DIExpression()), !dbg !14095
  %_165 = load i32, i32* %i, align 4, !dbg !14096
  %82 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_165, i32 1), !dbg !14096
  %_166.0 = extractvalue { i32, i1 } %82, 0, !dbg !14096
  %_166.1 = extractvalue { i32, i1 } %82, 1, !dbg !14096
  %83 = call i1 @llvm.expect.i1(i1 %_166.1, i1 false), !dbg !14096
  br i1 %83, label %panic22, label %bb39, !dbg !14096

panic21:                                          ; preds = %bb37
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc763 to %"core::panic::location::Location"*)) #17, !dbg !14093
  unreachable, !dbg !14093

bb39:                                             ; preds = %bb38
  store i32 %_166.0, i32* %i, align 4, !dbg !14097
  %_167 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_feti to i32*), align 4, !dbg !14098
  %_171 = sext i32 %fresh15 to i64, !dbg !14099
  store i32* %buffer, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !13907, metadata !DIExpression()), !dbg !14100
  store i64 %_171, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !13910, metadata !DIExpression()), !dbg !14102
  %84 = getelementptr inbounds i32, i32* %buffer, i64 %_171, !dbg !14103
  store i32* %84, i32** %15, align 8, !dbg !14103
  %_3.i = load i32*, i32** %15, align 8, !dbg !14103
  br label %bb40, !dbg !14104

panic22:                                          ; preds = %bb38
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc765 to %"core::panic::location::Location"*)) #17, !dbg !14096
  unreachable, !dbg !14096

bb40:                                             ; preds = %bb39
  store i32 %_167, i32* %_3.i, align 4, !dbg !14105
  br label %bb41, !dbg !13916
}

; Function Attrs: nonlazybind uwtable
define dso_local i64 @rust_fn_scoped_static_init() unnamed_addr #1 !dbg !14106 {
start:
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %_4 = load i32, i32* bitcast (<{ [4 x i8] }>* @rust_section_me to i32*), align 4, !dbg !14109
  %_3 = zext i32 %_4 to i64, !dbg !14110
  %_6 = load i64, i64* bitcast (<{ [8 x i8] }>* @rust_fn_scoped_extern to i64*), align 8, !dbg !14111
  store i64 %_3, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !14112, metadata !DIExpression()), !dbg !14119
  store i64 %_6, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !14118, metadata !DIExpression()), !dbg !14121
  %0 = sub i64 %_3, %_6, !dbg !14122
  br label %bb1, !dbg !14110

bb1:                                              ; preds = %start
  %_1 = trunc i64 %0 to i32, !dbg !14110
  store i32 %_1, i32* bitcast (<{ [4 x i8] }>* @rust_section_me to i32*), align 4, !dbg !14123
  %1 = load i64, i64* bitcast (<{ [8 x i8] }>* @_ZN13statics_tests8sections26rust_sectioned_scoped_init17h8d245479008eab85E to i64*), align 8, !dbg !14124
  ret i64 %1, !dbg !14125
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_use_sectioned_array() unnamed_addr #1 !dbg !14126 {
start:
  %f.dbg.spill = alloca i64, align 8, !dbg !14130
  %f = load i64, i64* getelementptr inbounds ([1 x i64], [1 x i64]* bitcast (<{ [8 x i8] }>* @_ZN13statics_tests8sections20rust_sectioned_array17h1e43ae8f57627000E to [1 x i64]*), i64 0, i64 0), align 8, !dbg !14130
  store i64 %f, i64* %f.dbg.spill, align 8, !dbg !14130
  call void @llvm.dbg.declare(metadata i64* %f.dbg.spill, metadata !14128, metadata !DIExpression()), !dbg !14131
  ret void, !dbg !14132
}

; statics_tests::sections::run_static_initializers
; Function Attrs: nonlazybind uwtable
define internal void @_ZN13statics_tests8sections23run_static_initializers17hddfc9d13475afc0eE() unnamed_addr #1 !dbg !14133 {
start:
  %rhs.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca i64, align 8
  %rhs.dbg.spill.i9 = alloca i32, align 4
  %self.dbg.spill.i10 = alloca i32, align 4
  %rhs.dbg.spill.i7 = alloca i32, align 4
  %self.dbg.spill.i8 = alloca i32, align 4
  %rhs.dbg.spill.i5 = alloca i32, align 4
  %self.dbg.spill.i6 = alloca i32, align 4
  %rhs.dbg.spill.i3 = alloca i32, align 4
  %self.dbg.spill.i4 = alloca i32, align 4
  %rhs.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill.i = alloca i32, align 4
  %0 = alloca i64*, align 8
  %1 = alloca i64*, align 8
  %2 = alloca i64*, align 8
  %init2 = alloca %"sections::stat2", align 8
  %_44 = alloca %"sections::stat2", align 8
  %init1 = alloca %"sections::stat", align 8
  %_38 = alloca %"sections::stat", align 8
  %_32 = alloca i32, align 4
  %init = alloca %"sections::Foo", align 4
  %_20 = alloca %"sections::Foo", align 4
  call void @llvm.dbg.declare(metadata %"sections::Foo"* %init, metadata !14135, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.declare(metadata %"sections::stat"* %init1, metadata !14137, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.declare(metadata %"sections::stat2"* %init2, metadata !14139, metadata !DIExpression()), !dbg !14143
  store i64 0, i64* bitcast (<{ [8 x i8] }>* @rust_null_to_ptr_ty to i64*), align 8, !dbg !14144
  store i32 1, i32* %self.dbg.spill.i10, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i10, metadata !14145, metadata !DIExpression()), !dbg !14151
  store i32 1, i32* %rhs.dbg.spill.i9, align 4, !dbg !14153
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i9, metadata !14154, metadata !DIExpression()), !dbg !14160
  br label %bb1, !dbg !14162

bb1:                                              ; preds = %start
  store i32 -1, i32* bitcast (<{ [4 x i8] }>* @rust_section_me to i32*), align 4, !dbg !14163
  store i32 0, i32* bitcast (<{ [4 x i8] }>* @rust_section_me2 to i32*), align 4, !dbg !14164
  store i32 1, i32* %self.dbg.spill.i6, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i6, metadata !14165, metadata !DIExpression()), !dbg !14169
  store i32 2, i32* %rhs.dbg.spill.i5, align 4
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i5, metadata !14168, metadata !DIExpression()), !dbg !14171
  br label %bb2, !dbg !14172

bb2:                                              ; preds = %bb1
  store i32 3, i32* bitcast (<{ [4 x i8] }>* @rust_section_me3 to i32*), align 4, !dbg !14173
  store i32 1, i32* %self.dbg.spill.i4, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i4, metadata !14165, metadata !DIExpression()), !dbg !14174
  store i32 1, i32* %rhs.dbg.spill.i3, align 4
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i3, metadata !14168, metadata !DIExpression()), !dbg !14176
  br label %bb3, !dbg !14177

bb3:                                              ; preds = %bb2
  store i32 2, i32* bitcast (<{ [4 x i8] }>* @rust_section_me4 to i32*), align 4, !dbg !14178
  store i32 1, i32* %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i, metadata !14165, metadata !DIExpression()), !dbg !14179
  store i32 1, i32* %rhs.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i, metadata !14168, metadata !DIExpression()), !dbg !14181
  br label %bb4, !dbg !14182

bb4:                                              ; preds = %bb3
  store i32 2, i32* bitcast (<{ [4 x i8] }>* @rust_section_me5 to i32*), align 4, !dbg !14183
  store i32 1, i32* %self.dbg.spill.i8, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i8, metadata !14145, metadata !DIExpression()), !dbg !14184
  store i32 1, i32* %rhs.dbg.spill.i7, align 4, !dbg !14186
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i7, metadata !14154, metadata !DIExpression()), !dbg !14187
  br label %bb5, !dbg !14189

bb5:                                              ; preds = %bb4
  %3 = bitcast %"sections::Foo"* %init to i32*, !dbg !14190
  store i32 1, i32* %3, align 4, !dbg !14190
  %4 = getelementptr inbounds %"sections::Foo", %"sections::Foo"* %init, i32 0, i32 1, !dbg !14190
  store i32 -1, i32* %4, align 4, !dbg !14190
  %5 = getelementptr inbounds %"sections::Foo", %"sections::Foo"* %init, i32 0, i32 2, !dbg !14190
  store float 0x3FF3333340000000, float* %5, align 4, !dbg !14190
  %6 = bitcast %"sections::Foo"* %_20 to i8*, !dbg !14191
  %7 = bitcast %"sections::Foo"* %init to i8*, !dbg !14191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 12, i1 false), !dbg !14191
  %8 = bitcast %"sections::Foo"* %_20 to i8*, !dbg !14192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @rust_section_foo_b_field, i32 0, i32 0, i32 0), i8* align 4 %8, i64 12, i1 false), !dbg !14192
  br label %bb6, !dbg !14193

bb6:                                              ; preds = %bb5
  br label %bb7, !dbg !14194

bb7:                                              ; preds = %bb6
  store i64 24, i64* %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i12, metadata !14195, metadata !DIExpression()), !dbg !14199
  store i64 12, i64* %rhs.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i11, metadata !14198, metadata !DIExpression()), !dbg !14201
  %9 = call i1 @llvm.expect.i1(i1 false, i1 false), !dbg !14202
  br i1 %9, label %panic.i, label %"_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_div17hed7d80ef2c089755E.exit", !dbg !14202

panic.i:                                          ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([25 x i8]* @str.5 to [0 x i8]*), i64 25, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc659 to %"core::panic::location::Location"*)) #17, !dbg !14202
  unreachable, !dbg !14202

"_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_div17hed7d80ef2c089755E.exit": ; preds = %bb7
  br label %bb8, !dbg !14203

bb8:                                              ; preds = %"_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_div17hed7d80ef2c089755E.exit"
  %10 = trunc i64 2 to i32, !dbg !14204
  store i32 %10, i32* bitcast (<{ [4 x i8] }>* @rust_section_num_params to i32*), align 4, !dbg !14204
  br label %bb9, !dbg !14205

bb9:                                              ; preds = %bb8
  %_33 = icmp eq i64 8, 4, !dbg !14205
  br i1 %_33, label %bb10, label %bb11, !dbg !14205

bb11:                                             ; preds = %bb9
  store i32 31, i32* %_32, align 4, !dbg !14206
  br label %bb12, !dbg !14207

bb10:                                             ; preds = %bb9
  store i32 30, i32* %_32, align 4, !dbg !14208
  br label %bb12, !dbg !14207

bb12:                                             ; preds = %bb11, %bb10
  %11 = load i32, i32* %_32, align 4, !dbg !14209
  %12 = sext i32 %11 to i64, !dbg !14209
  store i64 %12, i64* bitcast (<{ [8 x i8] }>* @rust_if_expr to i64*), align 8, !dbg !14209
  %13 = bitcast %"sections::stat"* %init1 to i32***, !dbg !14210
  store i32** getelementptr inbounds (%"sections::Bar", %"sections::Bar"* bitcast (<{ [8 x i8] }>* @rust_bar to %"sections::Bar"*), i32 0, i32 0), i32*** %13, align 8, !dbg !14210
  %14 = bitcast %"sections::stat"* %_38 to i8*, !dbg !14211
  %15 = bitcast %"sections::stat"* %init1 to i8*, !dbg !14211
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 8, i1 false), !dbg !14211
  %16 = bitcast %"sections::stat"* %_38 to i8*, !dbg !14212
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @rust_s, i32 0, i32 0, i32 0), i8* align 8 %16, i64 8, i1 false), !dbg !14212
  %17 = bitcast %"sections::stat2"* %init2 to i32**, !dbg !14213
  store i32* bitcast (<{ [8 x i8] }>* @rust_bar to i32*), i32** %17, align 8, !dbg !14213
  %18 = bitcast %"sections::stat2"* %_44 to i8*, !dbg !14214
  %19 = bitcast %"sections::stat2"* %init2 to i8*, !dbg !14214
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 8, i1 false), !dbg !14214
  %20 = bitcast %"sections::stat2"* %_44 to i8*, !dbg !14215
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @rust_s2, i32 0, i32 0, i32 0), i8* align 8 %20, i64 8, i1 false), !dbg !14215
  %21 = bitcast i64** %2 to i64*, !dbg !14216
  store i64 -1, i64* %21, align 8, !dbg !14216
  %_51 = load i64*, i64** %2, align 8, !dbg !14216
  br label %bb13, !dbg !14216

bb13:                                             ; preds = %bb12
  store i64* %_51, i64** bitcast (<{ [8 x i8] }>* @rust_int_to_fn_ptr to i64**), align 8, !dbg !14217
  %22 = bitcast i64** %1 to i64*, !dbg !14218
  store i64 -1, i64* %22, align 8, !dbg !14218
  %_54 = load i64*, i64** %1, align 8, !dbg !14218
  br label %bb14, !dbg !14218

bb14:                                             ; preds = %bb13
  store i64* %_54, i64** bitcast (<{ [8 x i8] }>* @rust_int_to_fn_ptr2 to i64**), align 8, !dbg !14219
  %23 = bitcast i64** %0 to i64*, !dbg !14220
  store i64 -1, i64* %23, align 8, !dbg !14220
  %_57 = load i64*, i64** %0, align 8, !dbg !14220
  br label %bb15, !dbg !14220

bb15:                                             ; preds = %bb14
  store i64* %_57, i64** bitcast (<{ [8 x i8] }>* @rust_int_to_fn_ptr3 to i64**), align 8, !dbg !14221
  store i64 ptrtoint (<{ [4 x i8] }>* @rust_section_me to i64), i64* bitcast (<{ [8 x i8] }>* @_ZN13statics_tests8sections26rust_sectioned_scoped_init17h8d245479008eab85E to i64*), align 8, !dbg !14222
  store i64 0, i64* getelementptr inbounds ([1 x i64], [1 x i64]* bitcast (<{ [8 x i8] }>* @_ZN13statics_tests8sections20rust_sectioned_array17h1e43ae8f57627000E to [1 x i64]*), i64 0, i64 0), align 8, !dbg !14223
  ret void, !dbg !14224
}

; statics_tests::test_thread_locals::run_test
; Function Attrs: nonlazybind uwtable
define internal void @_ZN13statics_tests18test_thread_locals8run_test17h36a019e3b5b64f0dE() unnamed_addr #1 !dbg !14225 {
start:
  %right_val.dbg.spill20 = alloca i32*, align 8
  %left_val.dbg.spill18 = alloca i32*, align 8
  %right_val.dbg.spill16 = alloca i32*, align 8
  %left_val.dbg.spill14 = alloca i32*, align 8
  %right_val.dbg.spill12 = alloca i32*, align 8
  %left_val.dbg.spill10 = alloca i32*, align 8
  %right_val.dbg.spill8 = alloca i32*, align 8
  %left_val.dbg.spill6 = alloca i32*, align 8
  %right_val.dbg.spill = alloca [16 x i32]*, align 8
  %left_val.dbg.spill = alloca [16 x i32]*, align 8
  %_105 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind4 = alloca i8, align 1
  %_87 = alloca { i32*, i32* }, align 8
  %_86 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind3 = alloca i8, align 1
  %_68 = alloca { i32*, i32* }, align 8
  %_67 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind2 = alloca i8, align 1
  %_49 = alloca { i32*, i32* }, align 8
  %_48 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_30 = alloca { i32*, i32* }, align 8
  %_29 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_13 = alloca { i32*, i32* }, align 8
  %rust_buffer = alloca [16 x i32], align 4
  %buffer = alloca [16 x i32], align 4
  call void @llvm.dbg.declare(metadata [16 x i32]* %buffer, metadata !14227, metadata !DIExpression()), !dbg !14266
  call void @llvm.dbg.declare(metadata [16 x i32]* %rust_buffer, metadata !14229, metadata !DIExpression()), !dbg !14267
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !14235, metadata !DIExpression()), !dbg !14268
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !14242, metadata !DIExpression()), !dbg !14269
  call void @llvm.dbg.declare(metadata i8* %kind2, metadata !14249, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.declare(metadata i8* %kind3, metadata !14256, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.declare(metadata i8* %kind4, metadata !14263, metadata !DIExpression()), !dbg !14272
  %0 = getelementptr inbounds [16 x i32], [16 x i32]* %buffer, i64 0, i64 0, !dbg !14273
  %1 = bitcast i32* %0 to i8*, !dbg !14273
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 64, i1 false), !dbg !14273
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* %rust_buffer, i64 0, i64 0, !dbg !14274
  %3 = bitcast i32* %2 to i8*, !dbg !14274
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 64, i1 false), !dbg !14274
  %_6.0 = bitcast [16 x i32]* %buffer to [0 x i32]*, !dbg !14275
; call core::slice::<impl [T]>::as_mut_ptr
  %_5 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha608522f02daa2efE"([0 x i32]* align 4 %_6.0, i64 16), !dbg !14275
  br label %bb1, !dbg !14275

bb1:                                              ; preds = %start
  call void @thread_entry(i32 16, i32* %_5), !dbg !14276
  br label %bb2, !dbg !14276

bb2:                                              ; preds = %bb1
  %_11.0 = bitcast [16 x i32]* %rust_buffer to [0 x i32]*, !dbg !14277
; call core::slice::<impl [T]>::as_mut_ptr
  %_10 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha608522f02daa2efE"([0 x i32]* align 4 %_11.0, i64 16), !dbg !14277
  br label %bb3, !dbg !14277

bb3:                                              ; preds = %bb2
  call void @rust_thread_entry(i32 16, i32* %_10), !dbg !14278
  br label %bb4, !dbg !14278

bb4:                                              ; preds = %bb3
  %4 = bitcast { i32*, i32* }* %_13 to [16 x i32]**, !dbg !14279
  store [16 x i32]* %buffer, [16 x i32]** %4, align 8, !dbg !14279
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1, !dbg !14279
  %6 = bitcast i32** %5 to [16 x i32]**, !dbg !14279
  store [16 x i32]* %rust_buffer, [16 x i32]** %6, align 8, !dbg !14279
  %7 = bitcast { i32*, i32* }* %_13 to [16 x i32]**, !dbg !14279
  %left_val = load [16 x i32]*, [16 x i32]** %7, align 8, !dbg !14279, !nonnull !28, !align !3487, !noundef !28
  store [16 x i32]* %left_val, [16 x i32]** %left_val.dbg.spill, align 8, !dbg !14279
  call void @llvm.dbg.declare(metadata [16 x i32]** %left_val.dbg.spill, metadata !14231, metadata !DIExpression()), !dbg !14280
  %8 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1, !dbg !14279
  %9 = bitcast i32** %8 to [16 x i32]**, !dbg !14279
  %right_val = load [16 x i32]*, [16 x i32]** %9, align 8, !dbg !14279, !nonnull !28, !align !3487, !noundef !28
  store [16 x i32]* %right_val, [16 x i32]** %right_val.dbg.spill, align 8, !dbg !14279
  call void @llvm.dbg.declare(metadata [16 x i32]** %right_val.dbg.spill, metadata !14234, metadata !DIExpression()), !dbg !14280
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_19 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hef36bf5c9afa71deE"([16 x i32]* align 4 %left_val, [16 x i32]* align 4 %right_val), !dbg !14280
  br label %bb5, !dbg !14280

bb5:                                              ; preds = %bb4
  %_18 = xor i1 %_19, true, !dbg !14280
  br i1 %_18, label %bb6, label %bb7, !dbg !14280

bb7:                                              ; preds = %bb5
  %10 = bitcast { i32*, i32* }* %_30 to i32**, !dbg !14281
  store i32* bitcast (<{ [4 x i8] }>* @gesi to i32*), i32** %10, align 8, !dbg !14281
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_30, i32 0, i32 1, !dbg !14281
  store i32* bitcast (<{ [4 x i8] }>* @rust_gesi to i32*), i32** %11, align 8, !dbg !14281
  %12 = bitcast { i32*, i32* }* %_30 to i32**, !dbg !14281
  %left_val5 = load i32*, i32** %12, align 8, !dbg !14281, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val5, i32** %left_val.dbg.spill6, align 8, !dbg !14281
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill6, metadata !14238, metadata !DIExpression()), !dbg !14282
  %13 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_30, i32 0, i32 1, !dbg !14281
  %right_val7 = load i32*, i32** %13, align 8, !dbg !14281, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val7, i32** %right_val.dbg.spill8, align 8, !dbg !14281
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill8, metadata !14241, metadata !DIExpression()), !dbg !14282
  %_39 = load i32, i32* %left_val5, align 4, !dbg !14282
  %_40 = load i32, i32* %right_val7, align 4, !dbg !14282
  %_38 = icmp eq i32 %_39, %_40, !dbg !14282
  %_37 = xor i1 %_38, true, !dbg !14282
  br i1 %_37, label %bb8, label %bb9, !dbg !14282

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !14280
  %14 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_29 to {}**, !dbg !14268
  store {}* null, {}** %14, align 8, !dbg !14268
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hdc2b2d5d12368b5fE(i8 0, [16 x i32]* align 4 %left_val, [16 x i32]* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_29, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc767 to %"core::panic::location::Location"*)) #17, !dbg !14268
  unreachable, !dbg !14268

bb9:                                              ; preds = %bb7
  %15 = bitcast { i32*, i32* }* %_49 to i32**, !dbg !14283
  store i32* bitcast (<{ [4 x i8] }>* @fesi to i32*), i32** %15, align 8, !dbg !14283
  %16 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_49, i32 0, i32 1, !dbg !14283
  store i32* bitcast (<{ [4 x i8] }>* @rust_fesi to i32*), i32** %16, align 8, !dbg !14283
  %17 = bitcast { i32*, i32* }* %_49 to i32**, !dbg !14283
  %left_val9 = load i32*, i32** %17, align 8, !dbg !14283, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val9, i32** %left_val.dbg.spill10, align 8, !dbg !14283
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill10, metadata !14245, metadata !DIExpression()), !dbg !14284
  %18 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_49, i32 0, i32 1, !dbg !14283
  %right_val11 = load i32*, i32** %18, align 8, !dbg !14283, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val11, i32** %right_val.dbg.spill12, align 8, !dbg !14283
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill12, metadata !14248, metadata !DIExpression()), !dbg !14284
  %_58 = load i32, i32* %left_val9, align 4, !dbg !14284
  %_59 = load i32, i32* %right_val11, align 4, !dbg !14284
  %_57 = icmp eq i32 %_58, %_59, !dbg !14284
  %_56 = xor i1 %_57, true, !dbg !14284
  br i1 %_56, label %bb10, label %bb11, !dbg !14284

bb8:                                              ; preds = %bb7
  store i8 0, i8* %kind1, align 1, !dbg !14282
  %19 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_48 to {}**, !dbg !14269
  store {}* null, {}** %19, align 8, !dbg !14269
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val5, i32* align 4 %right_val7, %"core::option::Option<core::fmt::Arguments>"* %_48, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc769 to %"core::panic::location::Location"*)) #17, !dbg !14269
  unreachable, !dbg !14269

bb11:                                             ; preds = %bb9
  %20 = bitcast { i32*, i32* }* %_68 to i32**, !dbg !14285
  store i32* bitcast (<{ [4 x i8] }>* @geti to i32*), i32** %20, align 8, !dbg !14285
  %21 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_68, i32 0, i32 1, !dbg !14285
  store i32* bitcast (<{ [4 x i8] }>* @rust_geti to i32*), i32** %21, align 8, !dbg !14285
  %22 = bitcast { i32*, i32* }* %_68 to i32**, !dbg !14285
  %left_val13 = load i32*, i32** %22, align 8, !dbg !14285, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val13, i32** %left_val.dbg.spill14, align 8, !dbg !14285
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill14, metadata !14252, metadata !DIExpression()), !dbg !14286
  %23 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_68, i32 0, i32 1, !dbg !14285
  %right_val15 = load i32*, i32** %23, align 8, !dbg !14285, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val15, i32** %right_val.dbg.spill16, align 8, !dbg !14285
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill16, metadata !14255, metadata !DIExpression()), !dbg !14286
  %_77 = load i32, i32* %left_val13, align 4, !dbg !14286
  %_78 = load i32, i32* %right_val15, align 4, !dbg !14286
  %_76 = icmp eq i32 %_77, %_78, !dbg !14286
  %_75 = xor i1 %_76, true, !dbg !14286
  br i1 %_75, label %bb12, label %bb13, !dbg !14286

bb10:                                             ; preds = %bb9
  store i8 0, i8* %kind2, align 1, !dbg !14284
  %24 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_67 to {}**, !dbg !14270
  store {}* null, {}** %24, align 8, !dbg !14270
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val9, i32* align 4 %right_val11, %"core::option::Option<core::fmt::Arguments>"* %_67, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc771 to %"core::panic::location::Location"*)) #17, !dbg !14270
  unreachable, !dbg !14270

bb13:                                             ; preds = %bb11
  %25 = bitcast { i32*, i32* }* %_87 to i32**, !dbg !14287
  store i32* bitcast (<{ [4 x i8] }>* @feti to i32*), i32** %25, align 8, !dbg !14287
  %26 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_87, i32 0, i32 1, !dbg !14287
  store i32* bitcast (<{ [4 x i8] }>* @rust_feti to i32*), i32** %26, align 8, !dbg !14287
  %27 = bitcast { i32*, i32* }* %_87 to i32**, !dbg !14287
  %left_val17 = load i32*, i32** %27, align 8, !dbg !14287, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val17, i32** %left_val.dbg.spill18, align 8, !dbg !14287
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill18, metadata !14259, metadata !DIExpression()), !dbg !14288
  %28 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_87, i32 0, i32 1, !dbg !14287
  %right_val19 = load i32*, i32** %28, align 8, !dbg !14287, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val19, i32** %right_val.dbg.spill20, align 8, !dbg !14287
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill20, metadata !14262, metadata !DIExpression()), !dbg !14288
  %_96 = load i32, i32* %left_val17, align 4, !dbg !14288
  %_97 = load i32, i32* %right_val19, align 4, !dbg !14288
  %_95 = icmp eq i32 %_96, %_97, !dbg !14288
  %_94 = xor i1 %_95, true, !dbg !14288
  br i1 %_94, label %bb14, label %bb15, !dbg !14288

bb12:                                             ; preds = %bb11
  store i8 0, i8* %kind3, align 1, !dbg !14286
  %29 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_86 to {}**, !dbg !14271
  store {}* null, {}** %29, align 8, !dbg !14271
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val13, i32* align 4 %right_val15, %"core::option::Option<core::fmt::Arguments>"* %_86, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc773 to %"core::panic::location::Location"*)) #17, !dbg !14271
  unreachable, !dbg !14271

bb15:                                             ; preds = %bb13
  ret void, !dbg !14289

bb14:                                             ; preds = %bb13
  store i8 0, i8* %kind4, align 1, !dbg !14288
  %30 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_105 to {}**, !dbg !14272
  store {}* null, {}** %30, align 8, !dbg !14272
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val17, i32* align 4 %right_val19, %"core::option::Option<core::fmt::Arguments>"* %_105, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc775 to %"core::panic::location::Location"*)) #17, !dbg !14272
  unreachable, !dbg !14272
}

; statics_tests::attributes::run_static_initializers
; Function Attrs: nonlazybind uwtable
define internal void @_ZN13statics_tests10attributes23run_static_initializers17h2ed908014654bcc4E() unnamed_addr #1 !dbg !14290 {
start:
  %rhs.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill.i = alloca i32, align 4
  store i32 1, i32* %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i, metadata !14165, metadata !DIExpression()), !dbg !14291
  store i32 1, i32* %rhs.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i, metadata !14168, metadata !DIExpression()), !dbg !14293
  br label %bb1, !dbg !14294

bb1:                                              ; preds = %start
  store i32 2, i32* bitcast (<{ [4 x i8] }>* @rust_used_static3 to i32*), align 4, !dbg !14295
  ret void, !dbg !14296
}

; statics_tests::storage::rust_baz
; Function Attrs: nonlazybind uwtable
define internal i32 @_ZN13statics_tests7storage8rust_baz17h35e482ae63bc54bdE() unnamed_addr #1 !dbg !14297 {
start:
  %0 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests7storage12rust_counter17he98b1991b3a2a6e9E to i32*), align 4, !dbg !14300
  %1 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %0, i32 1), !dbg !14300
  %_2.0 = extractvalue { i32, i1 } %1, 0, !dbg !14300
  %_2.1 = extractvalue { i32, i1 } %1, 1, !dbg !14300
  %2 = call i1 @llvm.expect.i1(i1 %_2.1, i1 false), !dbg !14300
  br i1 %2, label %panic, label %bb1, !dbg !14300

bb1:                                              ; preds = %start
  store i32 %_2.0, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests7storage12rust_counter17he98b1991b3a2a6e9E to i32*), align 4, !dbg !14300
  %_3 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests7storage8rust_baz6rust_k17h896fedec22886b3eE to i32*), align 4, !dbg !14301
  %3 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_3, i32 1), !dbg !14301
  %_6.0 = extractvalue { i32, i1 } %3, 0, !dbg !14301
  %_6.1 = extractvalue { i32, i1 } %3, 1, !dbg !14301
  %4 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false), !dbg !14301
  br i1 %4, label %panic1, label %bb2, !dbg !14301

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc777 to %"core::panic::location::Location"*)) #17, !dbg !14300
  unreachable, !dbg !14300

bb2:                                              ; preds = %bb1
  ret i32 %_6.0, !dbg !14302

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc779 to %"core::panic::location::Location"*)) #17, !dbg !14301
  unreachable, !dbg !14301
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_entry(i32 %buffer_size, i32* %buffer) unnamed_addr #1 !dbg !14303 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %count.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca i8*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i20 = alloca i64, align 8
  %self.dbg.spill.i21 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i17 = alloca i64, align 8
  %self.dbg.spill.i18 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i14 = alloca i64, align 8
  %self.dbg.spill.i15 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i11 = alloca i64, align 8
  %self.dbg.spill.i12 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %count.dbg.spill.i8 = alloca i64, align 8
  %self.dbg.spill.i9 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %count.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %buffer_size.dbg.spill = alloca i32, align 4
  store i32 %buffer_size, i32* %buffer_size.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.dbg.spill, metadata !14305, metadata !DIExpression()), !dbg !14307
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !14306, metadata !DIExpression()), !dbg !14308
  %_3 = icmp ult i32 %buffer_size, 11, !dbg !14309
  br i1 %_3, label %bb19, label %bb1, !dbg !14309

bb1:                                              ; preds = %start
; call statics_tests::storage::rust_baz
  %_6 = call i32 @_ZN13statics_tests7storage8rust_baz17h35e482ae63bc54bdE(), !dbg !14310
  br label %bb2, !dbg !14310

bb19:                                             ; preds = %bb18, %start
  ret void, !dbg !14311

bb2:                                              ; preds = %bb1
  store i32* %buffer, i32** %self.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i21, metadata !13907, metadata !DIExpression()), !dbg !14312
  store i64 0, i64* %count.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i20, metadata !13910, metadata !DIExpression()), !dbg !14314
  store i32* %buffer, i32** %2, align 8, !dbg !14315
  %_3.i22 = load i32*, i32** %2, align 8, !dbg !14315
  br label %bb3, !dbg !14316

bb3:                                              ; preds = %bb2
  store i32 %_6, i32* %_3.i22, align 4, !dbg !14317
; call statics_tests::storage::rust_baz
  %_10 = call i32 @_ZN13statics_tests7storage8rust_baz17h35e482ae63bc54bdE(), !dbg !14318
  br label %bb4, !dbg !14318

bb4:                                              ; preds = %bb3
  store i32* %buffer, i32** %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i18, metadata !13907, metadata !DIExpression()), !dbg !14319
  store i64 1, i64* %count.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i17, metadata !13910, metadata !DIExpression()), !dbg !14321
  %10 = getelementptr inbounds i32, i32* %buffer, i64 1, !dbg !14322
  store i32* %10, i32** %3, align 8, !dbg !14322
  %_3.i19 = load i32*, i32** %3, align 8, !dbg !14322
  br label %bb5, !dbg !14323

bb5:                                              ; preds = %bb4
  store i32 %_10, i32* %_3.i19, align 4, !dbg !14324
; call statics_tests::storage::rust_baz
  %_14 = call i32 @_ZN13statics_tests7storage8rust_baz17h35e482ae63bc54bdE(), !dbg !14325
  br label %bb6, !dbg !14325

bb6:                                              ; preds = %bb5
  %11 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_14, i32 1), !dbg !14325
  %_16.0 = extractvalue { i32, i1 } %11, 0, !dbg !14325
  %_16.1 = extractvalue { i32, i1 } %11, 1, !dbg !14325
  %12 = call i1 @llvm.expect.i1(i1 %_16.1, i1 false), !dbg !14325
  br i1 %12, label %panic, label %bb7, !dbg !14325

bb7:                                              ; preds = %bb6
  store i32* %buffer, i32** %self.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i15, metadata !13907, metadata !DIExpression()), !dbg !14326
  store i64 2, i64* %count.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i14, metadata !13910, metadata !DIExpression()), !dbg !14328
  %13 = getelementptr inbounds i32, i32* %buffer, i64 2, !dbg !14329
  store i32* %13, i32** %4, align 8, !dbg !14329
  %_3.i16 = load i32*, i32** %4, align 8, !dbg !14329
  br label %bb8, !dbg !14330

panic:                                            ; preds = %bb6
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.d to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc781 to %"core::panic::location::Location"*)) #17, !dbg !14325
  unreachable, !dbg !14325

bb8:                                              ; preds = %bb7
  store i32 %_16.0, i32* %_3.i16, align 4, !dbg !14331
; call statics_tests::storage::rust_baz
  %_24 = call i32 @_ZN13statics_tests7storage8rust_baz17h35e482ae63bc54bdE(), !dbg !14332
  br label %bb9, !dbg !14332

bb9:                                              ; preds = %bb8
  %_23 = sext i32 %_24 to i64, !dbg !14332
  store i32* %buffer, i32** %self.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i12, metadata !13907, metadata !DIExpression()), !dbg !14333
  store i64 %_23, i64* %count.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i11, metadata !13910, metadata !DIExpression()), !dbg !14335
  %14 = getelementptr inbounds i32, i32* %buffer, i64 %_23, !dbg !14336
  store i32* %14, i32** %5, align 8, !dbg !14336
  %_3.i13 = load i32*, i32** %5, align 8, !dbg !14336
  br label %bb10, !dbg !14337

bb10:                                             ; preds = %bb9
  store i32 4, i32* %_3.i13, align 4, !dbg !14338
  %_25 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests7storage12rust_counter17he98b1991b3a2a6e9E to i32*), align 4, !dbg !14339
  store i32* %buffer, i32** %self.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i9, metadata !13907, metadata !DIExpression()), !dbg !14340
  store i64 7, i64* %count.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i8, metadata !13910, metadata !DIExpression()), !dbg !14342
  %15 = getelementptr inbounds i32, i32* %buffer, i64 7, !dbg !14343
  store i32* %15, i32** %6, align 8, !dbg !14343
  %_3.i10 = load i32*, i32** %6, align 8, !dbg !14343
  br label %bb11, !dbg !14344

bb11:                                             ; preds = %bb10
  store i32 %_25, i32* %_3.i10, align 4, !dbg !14345
  %16 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests7storage12rust_counter17he98b1991b3a2a6e9E to i32*), align 4, !dbg !14346
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %16, i32 1), !dbg !14346
  %_31.0 = extractvalue { i32, i1 } %17, 0, !dbg !14346
  %_31.1 = extractvalue { i32, i1 } %17, 1, !dbg !14346
  %18 = call i1 @llvm.expect.i1(i1 %_31.1, i1 false), !dbg !14346
  br i1 %18, label %panic1, label %bb12, !dbg !14346

bb12:                                             ; preds = %bb11
  store i32 %_31.0, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests7storage12rust_counter17he98b1991b3a2a6e9E to i32*), align 4, !dbg !14346
; call statics_tests::storage::rust_baz
  %_32 = call i32 @_ZN13statics_tests7storage8rust_baz17h35e482ae63bc54bdE(), !dbg !14347
  br label %bb13, !dbg !14347

panic1:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*)) #17, !dbg !14346
  unreachable, !dbg !14346

bb13:                                             ; preds = %bb12
  %_33 = load i32, i32* bitcast (<{ [4 x i8] }>* @_ZN13statics_tests7storage12rust_counter17he98b1991b3a2a6e9E to i32*), align 4, !dbg !14348
  store i32* %buffer, i32** %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i6, metadata !13907, metadata !DIExpression()), !dbg !14349
  store i64 8, i64* %count.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i5, metadata !13910, metadata !DIExpression()), !dbg !14351
  %19 = getelementptr inbounds i32, i32* %buffer, i64 8, !dbg !14352
  store i32* %19, i32** %7, align 8, !dbg !14352
  %_3.i7 = load i32*, i32** %7, align 8, !dbg !14352
  br label %bb14, !dbg !14353

bb14:                                             ; preds = %bb13
  store i32 %_33, i32* %_3.i7, align 4, !dbg !14354
  %_40 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN13statics_tests7storage10rust_hello17h3904f6f05287022dE, i32 0, i32 0), align 8, !dbg !14355
  store i8* %_40, i8** %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i26, metadata !14356, metadata !DIExpression()), !dbg !14364
  store i64 0, i64* %count.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i25, metadata !14361, metadata !DIExpression()), !dbg !14366
  store i8* %_40, i8** %0, align 8, !dbg !14367
  %20 = load i8*, i8** %0, align 8, !dbg !14367
  br label %bb15, !dbg !14355

bb15:                                             ; preds = %bb14
  %_38 = load i8, i8* %20, align 1, !dbg !14368
  store i32* %buffer, i32** %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i3, metadata !13907, metadata !DIExpression()), !dbg !14369
  store i64 9, i64* %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i2, metadata !13910, metadata !DIExpression()), !dbg !14371
  %21 = getelementptr inbounds i32, i32* %buffer, i64 9, !dbg !14372
  store i32* %21, i32** %8, align 8, !dbg !14372
  %_3.i4 = load i32*, i32** %8, align 8, !dbg !14372
  br label %bb16, !dbg !14373

bb16:                                             ; preds = %bb15
  %22 = sext i8 %_38 to i32, !dbg !14374
  store i32 %22, i32* %_3.i4, align 4, !dbg !14374
  %_48 = load i8*, i8** getelementptr inbounds (<{ i8* }>, <{ i8* }>* @_ZN13statics_tests7storage10rust_entry10rust_world17he2f89ceb8d536c35E, i32 0, i32 0), align 8, !dbg !14375
  store i8* %_48, i8** %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i24, metadata !14356, metadata !DIExpression()), !dbg !14376
  store i64 1, i64* %count.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i23, metadata !14361, metadata !DIExpression()), !dbg !14378
  %23 = getelementptr inbounds i8, i8* %_48, i64 1, !dbg !14379
  store i8* %23, i8** %1, align 8, !dbg !14379
  %24 = load i8*, i8** %1, align 8, !dbg !14379
  br label %bb17, !dbg !14375

bb17:                                             ; preds = %bb16
  %_46 = load i8, i8* %24, align 1, !dbg !14380
  store i32* %buffer, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !13907, metadata !DIExpression()), !dbg !14381
  store i64 10, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !13910, metadata !DIExpression()), !dbg !14383
  %25 = getelementptr inbounds i32, i32* %buffer, i64 10, !dbg !14384
  store i32* %25, i32** %9, align 8, !dbg !14384
  %_3.i = load i32*, i32** %9, align 8, !dbg !14384
  br label %bb18, !dbg !14385

bb18:                                             ; preds = %bb17
  %26 = sext i8 %_46 to i32, !dbg !14386
  store i32 %26, i32* %_3.i, align 4, !dbg !14386
  br label %bb19, !dbg !14311
}

; statics_tests::test_sections::test_sectioned_statics::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13statics_tests13test_sections22test_sectioned_statics28_$u7b$$u7b$closure$u7d$$u7d$17hccd241a0ef02210fE"(%"[closure@src/test_sections.rs:7:1: 29:2]"* align 1 %_1) unnamed_addr #0 !dbg !14387 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_sections.rs:7:1: 29:2]"*, align 8
  store %"[closure@src/test_sections.rs:7:1: 29:2]"* %_1, %"[closure@src/test_sections.rs:7:1: 29:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_sections.rs:7:1: 29:2]"** %_1.dbg.spill, metadata !14393, metadata !DIExpression()), !dbg !14394
  call void @test_sectioned_statics(), !dbg !14394
  br label %bb1, !dbg !14394

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17hf4996d04c85a0259E(), !dbg !14394
  br label %bb2, !dbg !14394

bb2:                                              ; preds = %bb1
  ret void, !dbg !14395
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_sectioned_statics() unnamed_addr #1 !dbg !14396 {
start:
  %right_val.dbg.spill51 = alloca i32*, align 8
  %left_val.dbg.spill49 = alloca i32*, align 8
  %right_val.dbg.spill46 = alloca i32*, align 8
  %left_val.dbg.spill44 = alloca i32*, align 8
  %right_val.dbg.spill42 = alloca i32*, align 8
  %left_val.dbg.spill40 = alloca i32*, align 8
  %right_val.dbg.spill38 = alloca float*, align 8
  %left_val.dbg.spill36 = alloca float*, align 8
  %right_val.dbg.spill34 = alloca i32*, align 8
  %left_val.dbg.spill32 = alloca i32*, align 8
  %right_val.dbg.spill30 = alloca i32*, align 8
  %left_val.dbg.spill28 = alloca i32*, align 8
  %right_val.dbg.spill26 = alloca i32*, align 8
  %left_val.dbg.spill24 = alloca i32*, align 8
  %right_val.dbg.spill22 = alloca i32*, align 8
  %left_val.dbg.spill20 = alloca i32*, align 8
  %right_val.dbg.spill18 = alloca i32*, align 8
  %left_val.dbg.spill16 = alloca i32*, align 8
  %right_val.dbg.spill14 = alloca i32*, align 8
  %left_val.dbg.spill12 = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_212 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind10 = alloca i8, align 1
  %_193 = alloca { i32*, i32* }, align 8
  %_192 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind9 = alloca i8, align 1
  %_174 = alloca { i32*, i32* }, align 8
  %ptr_deref = alloca i32, align 4
  %_164 = alloca i8, align 1
  %_162 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind8 = alloca i8, align 1
  %_145 = alloca { i32*, i32* }, align 8
  %_144 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind7 = alloca i8, align 1
  %_127 = alloca { i32*, i32* }, align 8
  %_126 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind6 = alloca i8, align 1
  %_109 = alloca { i32*, i32* }, align 8
  %_108 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind5 = alloca i8, align 1
  %_91 = alloca { i32*, i32* }, align 8
  %_90 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind4 = alloca i8, align 1
  %_73 = alloca { i32*, i32* }, align 8
  %_72 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind3 = alloca i8, align 1
  %_55 = alloca { i32*, i32* }, align 8
  %_54 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind2 = alloca i8, align 1
  %_37 = alloca { i32*, i32* }, align 8
  %_36 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_19 = alloca { i32*, i32* }, align 8
  %_18 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_1 = alloca { i32*, i32* }, align 8
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !14402, metadata !DIExpression()), !dbg !14477
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !14409, metadata !DIExpression()), !dbg !14478
  call void @llvm.dbg.declare(metadata i8* %kind2, metadata !14416, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.declare(metadata i8* %kind3, metadata !14423, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.declare(metadata i8* %kind4, metadata !14430, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.declare(metadata i8* %kind5, metadata !14437, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.declare(metadata i8* %kind6, metadata !14444, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.declare(metadata i8* %kind7, metadata !14451, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.declare(metadata i8* %kind8, metadata !14458, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.declare(metadata i32* %ptr_deref, metadata !14461, metadata !DIExpression()), !dbg !14486
  call void @llvm.dbg.declare(metadata i8* %kind9, metadata !14467, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.declare(metadata i8* %kind10, metadata !14474, metadata !DIExpression()), !dbg !14488
  %0 = bitcast { i32*, i32* }* %_1 to i32**, !dbg !14489
  store i32* bitcast (<{ [4 x i8] }>* @rust_section_me to i32*), i32** %0, align 8, !dbg !14489
  %1 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_1, i32 0, i32 1, !dbg !14489
  store i32* bitcast (<{ [4 x i8] }>* @alloc208 to i32*), i32** %1, align 8, !dbg !14489
  %2 = bitcast { i32*, i32* }* %_1 to i32**, !dbg !14489
  %left_val = load i32*, i32** %2, align 8, !dbg !14489, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !14489
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !14398, metadata !DIExpression()), !dbg !14490
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_1, i32 0, i32 1, !dbg !14489
  %right_val = load i32*, i32** %3, align 8, !dbg !14489, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !14489
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !14401, metadata !DIExpression()), !dbg !14490
  %_9 = load i32, i32* %left_val, align 4, !dbg !14490
  %_8 = icmp eq i32 %_9, -1, !dbg !14490
  %_7 = xor i1 %_8, true, !dbg !14490
  br i1 %_7, label %bb1, label %bb2, !dbg !14490

bb2:                                              ; preds = %start
  %4 = bitcast { i32*, i32* }* %_19 to i32**, !dbg !14491
  store i32* bitcast (<{ [4 x i8] }>* @rust_section_me2 to i32*), i32** %4, align 8, !dbg !14491
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_19, i32 0, i32 1, !dbg !14491
  store i32* bitcast (<{ [4 x i8] }>* @alloc178 to i32*), i32** %5, align 8, !dbg !14491
  %6 = bitcast { i32*, i32* }* %_19 to i32**, !dbg !14491
  %left_val11 = load i32*, i32** %6, align 8, !dbg !14491, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val11, i32** %left_val.dbg.spill12, align 8, !dbg !14491
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill12, metadata !14405, metadata !DIExpression()), !dbg !14492
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_19, i32 0, i32 1, !dbg !14491
  %right_val13 = load i32*, i32** %7, align 8, !dbg !14491, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val13, i32** %right_val.dbg.spill14, align 8, !dbg !14491
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill14, metadata !14408, metadata !DIExpression()), !dbg !14492
  %_27 = load i32, i32* %left_val11, align 4, !dbg !14492
  %_26 = icmp eq i32 %_27, 0, !dbg !14492
  %_25 = xor i1 %_26, true, !dbg !14492
  br i1 %_25, label %bb3, label %bb4, !dbg !14492

bb1:                                              ; preds = %start
  store i8 0, i8* %kind, align 1, !dbg !14490
  %8 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_18 to {}**, !dbg !14477
  store {}* null, {}** %8, align 8, !dbg !14477
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_18, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc785 to %"core::panic::location::Location"*)) #17, !dbg !14477
  unreachable, !dbg !14477

bb4:                                              ; preds = %bb2
  %9 = bitcast { i32*, i32* }* %_37 to i32**, !dbg !14493
  store i32* bitcast (<{ [4 x i8] }>* @rust_section_me3 to i32*), i32** %9, align 8, !dbg !14493
  %10 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_37, i32 0, i32 1, !dbg !14493
  store i32* bitcast (<{ [4 x i8] }>* @alloc184 to i32*), i32** %10, align 8, !dbg !14493
  %11 = bitcast { i32*, i32* }* %_37 to i32**, !dbg !14493
  %left_val15 = load i32*, i32** %11, align 8, !dbg !14493, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val15, i32** %left_val.dbg.spill16, align 8, !dbg !14493
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill16, metadata !14412, metadata !DIExpression()), !dbg !14494
  %12 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_37, i32 0, i32 1, !dbg !14493
  %right_val17 = load i32*, i32** %12, align 8, !dbg !14493, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val17, i32** %right_val.dbg.spill18, align 8, !dbg !14493
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill18, metadata !14415, metadata !DIExpression()), !dbg !14494
  %_45 = load i32, i32* %left_val15, align 4, !dbg !14494
  %_44 = icmp eq i32 %_45, 3, !dbg !14494
  %_43 = xor i1 %_44, true, !dbg !14494
  br i1 %_43, label %bb5, label %bb6, !dbg !14494

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind1, align 1, !dbg !14492
  %13 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_36 to {}**, !dbg !14478
  store {}* null, {}** %13, align 8, !dbg !14478
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h005ab5e528d41424E(i8 0, i32* align 4 %left_val11, i32* align 4 %right_val13, %"core::option::Option<core::fmt::Arguments>"* %_36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc787 to %"core::panic::location::Location"*)) #17, !dbg !14478
  unreachable, !dbg !14478

bb6:                                              ; preds = %bb4
  %14 = bitcast { i32*, i32* }* %_55 to i32**, !dbg !14495
  store i32* bitcast (<{ [4 x i8] }>* @rust_section_me4 to i32*), i32** %14, align 8, !dbg !14495
  %15 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_55, i32 0, i32 1, !dbg !14495
  store i32* bitcast (<{ [4 x i8] }>* @alloc220 to i32*), i32** %15, align 8, !dbg !14495
  %16 = bitcast { i32*, i32* }* %_55 to i32**, !dbg !14495
  %left_val19 = load i32*, i32** %16, align 8, !dbg !14495, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val19, i32** %left_val.dbg.spill20, align 8, !dbg !14495
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill20, metadata !14419, metadata !DIExpression()), !dbg !14496
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_55, i32 0, i32 1, !dbg !14495
  %right_val21 = load i32*, i32** %17, align 8, !dbg !14495, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val21, i32** %right_val.dbg.spill22, align 8, !dbg !14495
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill22, metadata !14422, metadata !DIExpression()), !dbg !14496
  %_63 = load i32, i32* %left_val19, align 4, !dbg !14496
  %_62 = icmp eq i32 %_63, 2, !dbg !14496
  %_61 = xor i1 %_62, true, !dbg !14496
  br i1 %_61, label %bb7, label %bb8, !dbg !14496

bb5:                                              ; preds = %bb4
  store i8 0, i8* %kind2, align 1, !dbg !14494
  %18 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_54 to {}**, !dbg !14479
  store {}* null, {}** %18, align 8, !dbg !14479
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val15, i32* align 4 %right_val17, %"core::option::Option<core::fmt::Arguments>"* %_54, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc789 to %"core::panic::location::Location"*)) #17, !dbg !14479
  unreachable, !dbg !14479

bb8:                                              ; preds = %bb6
  %19 = bitcast { i32*, i32* }* %_73 to i32**, !dbg !14497
  store i32* bitcast (<{ [4 x i8] }>* @rust_section_me5 to i32*), i32** %19, align 8, !dbg !14497
  %20 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_73, i32 0, i32 1, !dbg !14497
  store i32* bitcast (<{ [4 x i8] }>* @alloc220 to i32*), i32** %20, align 8, !dbg !14497
  %21 = bitcast { i32*, i32* }* %_73 to i32**, !dbg !14497
  %left_val23 = load i32*, i32** %21, align 8, !dbg !14497, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val23, i32** %left_val.dbg.spill24, align 8, !dbg !14497
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill24, metadata !14426, metadata !DIExpression()), !dbg !14498
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_73, i32 0, i32 1, !dbg !14497
  %right_val25 = load i32*, i32** %22, align 8, !dbg !14497, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val25, i32** %right_val.dbg.spill26, align 8, !dbg !14497
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill26, metadata !14429, metadata !DIExpression()), !dbg !14498
  %_81 = load i32, i32* %left_val23, align 4, !dbg !14498
  %_80 = icmp eq i32 %_81, 2, !dbg !14498
  %_79 = xor i1 %_80, true, !dbg !14498
  br i1 %_79, label %bb9, label %bb10, !dbg !14498

bb7:                                              ; preds = %bb6
  store i8 0, i8* %kind3, align 1, !dbg !14496
  %23 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_72 to {}**, !dbg !14480
  store {}* null, {}** %23, align 8, !dbg !14480
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val19, i32* align 4 %right_val21, %"core::option::Option<core::fmt::Arguments>"* %_72, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc791 to %"core::panic::location::Location"*)) #17, !dbg !14480
  unreachable, !dbg !14480

bb10:                                             ; preds = %bb8
  %24 = bitcast { i32*, i32* }* %_91 to i32**, !dbg !14499
  store i32* getelementptr inbounds (%"sections::Foo", %"sections::Foo"* bitcast (<{ [12 x i8] }>* @rust_section_foo_b_field to %"sections::Foo"*), i32 0, i32 0), i32** %24, align 8, !dbg !14499
  %25 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_91, i32 0, i32 1, !dbg !14499
  store i32* bitcast (<{ [4 x i8] }>* @alloc202 to i32*), i32** %25, align 8, !dbg !14499
  %26 = bitcast { i32*, i32* }* %_91 to i32**, !dbg !14499
  %left_val27 = load i32*, i32** %26, align 8, !dbg !14499, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val27, i32** %left_val.dbg.spill28, align 8, !dbg !14499
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill28, metadata !14433, metadata !DIExpression()), !dbg !14500
  %27 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_91, i32 0, i32 1, !dbg !14499
  %right_val29 = load i32*, i32** %27, align 8, !dbg !14499, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val29, i32** %right_val.dbg.spill30, align 8, !dbg !14499
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill30, metadata !14436, metadata !DIExpression()), !dbg !14500
  %_99 = load i32, i32* %left_val27, align 4, !dbg !14500
  %_98 = icmp eq i32 %_99, 1, !dbg !14500
  %_97 = xor i1 %_98, true, !dbg !14500
  br i1 %_97, label %bb11, label %bb12, !dbg !14500

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind4, align 1, !dbg !14498
  %28 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_90 to {}**, !dbg !14481
  store {}* null, {}** %28, align 8, !dbg !14481
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val23, i32* align 4 %right_val25, %"core::option::Option<core::fmt::Arguments>"* %_90, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc793 to %"core::panic::location::Location"*)) #17, !dbg !14481
  unreachable, !dbg !14481

bb12:                                             ; preds = %bb10
  %29 = bitcast { i32*, i32* }* %_109 to i32**, !dbg !14501
  store i32* getelementptr inbounds (%"sections::Foo", %"sections::Foo"* bitcast (<{ [12 x i8] }>* @rust_section_foo_b_field to %"sections::Foo"*), i32 0, i32 1), i32** %29, align 8, !dbg !14501
  %30 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_109, i32 0, i32 1, !dbg !14501
  store i32* bitcast (<{ [4 x i8] }>* @alloc208 to i32*), i32** %30, align 8, !dbg !14501
  %31 = bitcast { i32*, i32* }* %_109 to i32**, !dbg !14501
  %left_val31 = load i32*, i32** %31, align 8, !dbg !14501, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val31, i32** %left_val.dbg.spill32, align 8, !dbg !14501
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill32, metadata !14440, metadata !DIExpression()), !dbg !14502
  %32 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_109, i32 0, i32 1, !dbg !14501
  %right_val33 = load i32*, i32** %32, align 8, !dbg !14501, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val33, i32** %right_val.dbg.spill34, align 8, !dbg !14501
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill34, metadata !14443, metadata !DIExpression()), !dbg !14502
  %_117 = load i32, i32* %left_val31, align 4, !dbg !14502
  %_116 = icmp eq i32 %_117, -1, !dbg !14502
  %_115 = xor i1 %_116, true, !dbg !14502
  br i1 %_115, label %bb13, label %bb14, !dbg !14502

bb11:                                             ; preds = %bb10
  store i8 0, i8* %kind5, align 1, !dbg !14500
  %33 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_108 to {}**, !dbg !14482
  store {}* null, {}** %33, align 8, !dbg !14482
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val27, i32* align 4 %right_val29, %"core::option::Option<core::fmt::Arguments>"* %_108, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc795 to %"core::panic::location::Location"*)) #17, !dbg !14482
  unreachable, !dbg !14482

bb14:                                             ; preds = %bb12
  %34 = bitcast { i32*, i32* }* %_127 to float**, !dbg !14503
  store float* getelementptr inbounds (%"sections::Foo", %"sections::Foo"* bitcast (<{ [12 x i8] }>* @rust_section_foo_b_field to %"sections::Foo"*), i32 0, i32 2), float** %34, align 8, !dbg !14503
  %35 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_127, i32 0, i32 1, !dbg !14503
  %36 = bitcast i32** %35 to float**, !dbg !14503
  store float* bitcast (<{ [4 x i8] }>* @alloc214 to float*), float** %36, align 8, !dbg !14503
  %37 = bitcast { i32*, i32* }* %_127 to float**, !dbg !14503
  %left_val35 = load float*, float** %37, align 8, !dbg !14503, !nonnull !28, !align !3487, !noundef !28
  store float* %left_val35, float** %left_val.dbg.spill36, align 8, !dbg !14503
  call void @llvm.dbg.declare(metadata float** %left_val.dbg.spill36, metadata !14447, metadata !DIExpression()), !dbg !14504
  %38 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_127, i32 0, i32 1, !dbg !14503
  %39 = bitcast i32** %38 to float**, !dbg !14503
  %right_val37 = load float*, float** %39, align 8, !dbg !14503, !nonnull !28, !align !3487, !noundef !28
  store float* %right_val37, float** %right_val.dbg.spill38, align 8, !dbg !14503
  call void @llvm.dbg.declare(metadata float** %right_val.dbg.spill38, metadata !14450, metadata !DIExpression()), !dbg !14504
  %_135 = load float, float* %left_val35, align 4, !dbg !14504
  %_134 = fcmp oeq float %_135, 0x3FF3333340000000, !dbg !14504
  %_133 = xor i1 %_134, true, !dbg !14504
  br i1 %_133, label %bb15, label %bb16, !dbg !14504

bb13:                                             ; preds = %bb12
  store i8 0, i8* %kind6, align 1, !dbg !14502
  %40 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_126 to {}**, !dbg !14483
  store {}* null, {}** %40, align 8, !dbg !14483
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h005ab5e528d41424E(i8 0, i32* align 4 %left_val31, i32* align 4 %right_val33, %"core::option::Option<core::fmt::Arguments>"* %_126, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc797 to %"core::panic::location::Location"*)) #17, !dbg !14483
  unreachable, !dbg !14483

bb16:                                             ; preds = %bb14
  %41 = bitcast { i32*, i32* }* %_145 to i32**, !dbg !14505
  store i32* bitcast (<{ [4 x i8] }>* @rust_section_num_params to i32*), i32** %41, align 8, !dbg !14505
  %42 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_145, i32 0, i32 1, !dbg !14505
  store i32* bitcast (<{ [4 x i8] }>* @alloc220 to i32*), i32** %42, align 8, !dbg !14505
  %43 = bitcast { i32*, i32* }* %_145 to i32**, !dbg !14505
  %left_val39 = load i32*, i32** %43, align 8, !dbg !14505, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val39, i32** %left_val.dbg.spill40, align 8, !dbg !14505
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill40, metadata !14454, metadata !DIExpression()), !dbg !14506
  %44 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_145, i32 0, i32 1, !dbg !14505
  %right_val41 = load i32*, i32** %44, align 8, !dbg !14505, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val41, i32** %right_val.dbg.spill42, align 8, !dbg !14505
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill42, metadata !14457, metadata !DIExpression()), !dbg !14506
  %_153 = load i32, i32* %left_val39, align 4, !dbg !14506
  %_152 = icmp eq i32 %_153, 2, !dbg !14506
  %_151 = xor i1 %_152, true, !dbg !14506
  br i1 %_151, label %bb17, label %bb18, !dbg !14506

bb15:                                             ; preds = %bb14
  store i8 0, i8* %kind7, align 1, !dbg !14504
  %45 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_144 to {}**, !dbg !14484
  store {}* null, {}** %45, align 8, !dbg !14484
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h1f82003576a73e6dE(i8 0, float* align 4 %left_val35, float* align 4 %right_val37, %"core::option::Option<core::fmt::Arguments>"* %_144, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc799 to %"core::panic::location::Location"*)) #17, !dbg !14484
  unreachable, !dbg !14484

bb18:                                             ; preds = %bb16
  %_165 = load i64, i64* bitcast (<{ [8 x i8] }>* @rust_if_expr to i64*), align 8, !dbg !14507
  %46 = icmp eq i64 %_165, 30, !dbg !14507
  br i1 %46, label %bb19, label %bb20, !dbg !14507

bb17:                                             ; preds = %bb16
  store i8 0, i8* %kind8, align 1, !dbg !14506
  %47 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_162 to {}**, !dbg !14485
  store {}* null, {}** %47, align 8, !dbg !14485
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val39, i32* align 4 %right_val41, %"core::option::Option<core::fmt::Arguments>"* %_162, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc801 to %"core::panic::location::Location"*)) #17, !dbg !14485
  unreachable, !dbg !14485

bb19:                                             ; preds = %bb18
  store i8 1, i8* %_164, align 1, !dbg !14507
  br label %bb21, !dbg !14507

bb20:                                             ; preds = %bb18
  %_168 = load i64, i64* bitcast (<{ [8 x i8] }>* @rust_if_expr to i64*), align 8, !dbg !14508
  %_167 = icmp eq i64 %_168, 31, !dbg !14508
  %48 = zext i1 %_167 to i8, !dbg !14507
  store i8 %48, i8* %_164, align 1, !dbg !14507
  br label %bb21, !dbg !14507

bb21:                                             ; preds = %bb19, %bb20
  %49 = load i8, i8* %_164, align 1, !dbg !14509, !range !1099, !noundef !28
  %50 = trunc i8 %49 to i1, !dbg !14509
  %_163 = xor i1 %50, true, !dbg !14509
  br i1 %_163, label %bb22, label %bb23, !dbg !14509

bb23:                                             ; preds = %bb21
  %_173 = call i64 @rust_fn_scoped_static_init(), !dbg !14510
  br label %bb24, !dbg !14510

bb22:                                             ; preds = %bb21
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [58 x i8] }>* @alloc802 to [0 x i8]*), i64 58, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc804 to %"core::panic::location::Location"*)) #17, !dbg !14509
  unreachable, !dbg !14509

bb24:                                             ; preds = %bb23
  %_172 = inttoptr i64 %_173 to i32*, !dbg !14511
  %51 = load i32, i32* %_172, align 4, !dbg !14512
  store i32 %51, i32* %ptr_deref, align 4, !dbg !14512
  br label %bb25, !dbg !14513

bb25:                                             ; preds = %bb24
  %52 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 -1, i32 1), !dbg !14513
  %_178.0 = extractvalue { i32, i1 } %52, 0, !dbg !14513
  %_178.1 = extractvalue { i32, i1 } %52, 1, !dbg !14513
  %53 = call i1 @llvm.expect.i1(i1 %_178.1, i1 false), !dbg !14513
  br i1 %53, label %panic, label %bb26, !dbg !14513

bb26:                                             ; preds = %bb25
  %54 = bitcast { i32*, i32* }* %_174 to i32**, !dbg !14514
  store i32* %ptr_deref, i32** %54, align 8, !dbg !14514
  %55 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_174, i32 0, i32 1, !dbg !14514
  store i32* bitcast (<{ [4 x i8] }>* @alloc233 to i32*), i32** %55, align 8, !dbg !14514
  %56 = bitcast { i32*, i32* }* %_174 to i32**, !dbg !14514
  %left_val43 = load i32*, i32** %56, align 8, !dbg !14514, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val43, i32** %left_val.dbg.spill44, align 8, !dbg !14514
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill44, metadata !14463, metadata !DIExpression()), !dbg !14515
  %57 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_174, i32 0, i32 1, !dbg !14514
  %right_val45 = load i32*, i32** %57, align 8, !dbg !14514, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val45, i32** %right_val.dbg.spill46, align 8, !dbg !14514
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill46, metadata !14466, metadata !DIExpression()), !dbg !14515
  %_183 = load i32, i32* %left_val43, align 4, !dbg !14515
  %_182 = icmp eq i32 %_183, -2, !dbg !14515
  %_181 = xor i1 %_182, true, !dbg !14515
  br i1 %_181, label %bb27, label %bb28, !dbg !14515

panic:                                            ; preds = %bb25
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc806 to %"core::panic::location::Location"*)) #17, !dbg !14513
  unreachable, !dbg !14513

bb28:                                             ; preds = %bb26
  br label %bb29, !dbg !14516

bb27:                                             ; preds = %bb26
  store i8 0, i8* %kind9, align 1, !dbg !14515
  %58 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_192 to {}**, !dbg !14487
  store {}* null, {}** %58, align 8, !dbg !14487
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val43, i32* align 4 %right_val45, %"core::option::Option<core::fmt::Arguments>"* %_192, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc808 to %"core::panic::location::Location"*)) #17, !dbg !14487
  unreachable, !dbg !14487

bb29:                                             ; preds = %bb28
  %59 = call { i32, i1 } @llvm.usub.with.overflow.i32(i32 -1, i32 1), !dbg !14516
  %_198.0 = extractvalue { i32, i1 } %59, 0, !dbg !14516
  %_198.1 = extractvalue { i32, i1 } %59, 1, !dbg !14516
  %60 = call i1 @llvm.expect.i1(i1 %_198.1, i1 false), !dbg !14516
  br i1 %60, label %panic47, label %bb30, !dbg !14516

bb30:                                             ; preds = %bb29
  %61 = bitcast { i32*, i32* }* %_193 to i32**, !dbg !14517
  store i32* bitcast (<{ [4 x i8] }>* @rust_section_me to i32*), i32** %61, align 8, !dbg !14517
  %62 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_193, i32 0, i32 1, !dbg !14517
  store i32* bitcast (<{ [4 x i8] }>* @alloc233 to i32*), i32** %62, align 8, !dbg !14517
  %63 = bitcast { i32*, i32* }* %_193 to i32**, !dbg !14517
  %left_val48 = load i32*, i32** %63, align 8, !dbg !14517, !nonnull !28, !align !3487, !noundef !28
  store i32* %left_val48, i32** %left_val.dbg.spill49, align 8, !dbg !14517
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill49, metadata !14470, metadata !DIExpression()), !dbg !14518
  %64 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_193, i32 0, i32 1, !dbg !14517
  %right_val50 = load i32*, i32** %64, align 8, !dbg !14517, !nonnull !28, !align !3487, !noundef !28
  store i32* %right_val50, i32** %right_val.dbg.spill51, align 8, !dbg !14517
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill51, metadata !14473, metadata !DIExpression()), !dbg !14518
  %_203 = load i32, i32* %left_val48, align 4, !dbg !14518
  %_202 = icmp eq i32 %_203, -2, !dbg !14518
  %_201 = xor i1 %_202, true, !dbg !14518
  br i1 %_201, label %bb31, label %bb32, !dbg !14518

panic47:                                          ; preds = %bb29
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc810 to %"core::panic::location::Location"*)) #17, !dbg !14516
  unreachable, !dbg !14516

bb32:                                             ; preds = %bb30
  call void @rust_use_sectioned_array(), !dbg !14519
  br label %bb33, !dbg !14519

bb31:                                             ; preds = %bb30
  store i8 0, i8* %kind10, align 1, !dbg !14518
  %65 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_212 to {}**, !dbg !14488
  store {}* null, {}** %65, align 8, !dbg !14488
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E(i8 0, i32* align 4 %left_val48, i32* align 4 %right_val50, %"core::option::Option<core::fmt::Arguments>"* %_212, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc812 to %"core::panic::location::Location"*)) #17, !dbg !14488
  unreachable, !dbg !14488

bb33:                                             ; preds = %bb32
  ret void, !dbg !14520
}

; statics_tests::test_sections::test_sectioned_used_static::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13statics_tests13test_sections26test_sectioned_used_static28_$u7b$$u7b$closure$u7d$$u7d$17h497198cb98fff466E"(%"[closure@src/test_sections.rs:32:1: 55:2]"* align 1 %_1) unnamed_addr #0 !dbg !14521 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_sections.rs:32:1: 55:2]"*, align 8
  store %"[closure@src/test_sections.rs:32:1: 55:2]"* %_1, %"[closure@src/test_sections.rs:32:1: 55:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_sections.rs:32:1: 55:2]"** %_1.dbg.spill, metadata !14526, metadata !DIExpression()), !dbg !14527
  call void @test_sectioned_used_static(), !dbg !14527
  br label %bb1, !dbg !14527

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17hf4996d04c85a0259E(), !dbg !14527
  br label %bb2, !dbg !14527

bb2:                                              ; preds = %bb1
  ret void, !dbg !14528
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_sectioned_used_static() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !14529 {
start:
  %pos.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_34 = alloca i8, align 1
  %_17 = alloca i8, align 1
  %_16 = alloca i8, align 1
  %_8 = alloca { i64*, i64* }, align 8
  %_3 = alloca %"core::str::iter::Lines", align 8
  %lines = alloca %"alloc::vec::Vec<&str>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<&str>"* %lines, metadata !14533, metadata !DIExpression()), !dbg !14537
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0, !dbg !14538
  store [0 x i8]* bitcast (<{ [1368 x i8] }>* @alloc813 to [0 x i8]*), [0 x i8]** %1, align 8, !dbg !14538
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1, !dbg !14538
  store i64 1368, i64* %2, align 8, !dbg !14538
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !14531, metadata !DIExpression()), !dbg !14539
; call core::str::<impl str>::lines
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5lines17h3f81b67daf7ff0f0E"(%"core::str::iter::Lines"* sret(%"core::str::iter::Lines") %_3, [0 x i8]* align 1 bitcast (<{ [1368 x i8] }>* @alloc813 to [0 x i8]*), i64 1368), !dbg !14540
  br label %bb1, !dbg !14540

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h1cf3959126bb78f4E(%"alloc::vec::Vec<&str>"* sret(%"alloc::vec::Vec<&str>") %lines, %"core::str::iter::Lines"* %_3), !dbg !14540
  br label %bb2, !dbg !14540

bb2:                                              ; preds = %bb1
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %3 = invoke { [0 x { [0 x i8]*, i64 }]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfb4be6d7c3069c49E"(%"alloc::vec::Vec<&str>"* align 8 %lines)
          to label %bb3 unwind label %cleanup, !dbg !14541

bb37:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h93841d326ca7621aE"(%"alloc::vec::Vec<&str>"* %lines) #18
          to label %bb38 unwind label %abort, !dbg !14542

cleanup:                                          ; preds = %bb34, %bb32, %bb31, %bb29, %bb28, %bb26, %bb25, %panic3, %bb23, %bb22, %panic2, %bb17, %bb16, %panic1, %bb14, %bb13, %panic, %bb5, %bb4, %bb3, %bb2
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb37

bb3:                                              ; preds = %bb2
  %_10.0 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 0, !dbg !14541
  %_10.1 = extractvalue { [0 x { [0 x i8]*, i64 }]*, i64 } %3, 1, !dbg !14541
; invoke core::slice::<impl [T]>::iter
  %9 = invoke { i64*, i64* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3ea2a2b79a52364dE"([0 x { [0 x i8]*, i64 }]* align 8 %_10.0, i64 %_10.1)
          to label %bb4 unwind label %cleanup, !dbg !14541

bb4:                                              ; preds = %bb3
  store { i64*, i64* } %9, { i64*, i64* }* %_8, align 8, !dbg !14541
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %10 = invoke { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h57df9ce632f31387E"({ i64*, i64* }* align 8 %_8)
          to label %bb5 unwind label %cleanup, !dbg !14541

bb5:                                              ; preds = %bb4
  %_6.0 = extractvalue { i64, i64 } %10, 0, !dbg !14541
  %_6.1 = extractvalue { i64, i64 } %10, 1, !dbg !14541
; invoke core::option::Option<T>::expect
  %pos = invoke i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h205bf8966c4d5173E"(i64 %_6.0, i64 %_6.1, [0 x i8]* align 1 bitcast (<{ [45 x i8] }>* @alloc814 to [0 x i8]*), i64 45, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc816 to %"core::panic::location::Location"*))
          to label %bb6 unwind label %cleanup, !dbg !14541

bb6:                                              ; preds = %bb5
  store i64 %pos, i64* %pos.dbg.spill, align 8, !dbg !14541
  call void @llvm.dbg.declare(metadata i64* %pos.dbg.spill, metadata !14535, metadata !DIExpression()), !dbg !14543
  %11 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %pos, i64 1), !dbg !14544
  %_24.0 = extractvalue { i64, i1 } %11, 0, !dbg !14544
  %_24.1 = extractvalue { i64, i1 } %11, 1, !dbg !14544
  %12 = call i1 @llvm.expect.i1(i1 %_24.1, i1 false), !dbg !14544
  br i1 %12, label %panic, label %bb13, !dbg !14544

bb13:                                             ; preds = %bb6
; invoke <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %_20 = invoke align 8 { [0 x i8]*, i64 }* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hd6789abdb498dafcE"(%"alloc::vec::Vec<&str>"* align 8 %lines, i64 %_24.0, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc820 to %"core::panic::location::Location"*))
          to label %bb14 unwind label %cleanup, !dbg !14545

panic:                                            ; preds = %bb6
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc818 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !14544

unreachable:                                      ; preds = %bb34, %bb31, %bb28, %panic3, %panic2, %panic1, %panic
  unreachable

bb14:                                             ; preds = %bb13
; invoke core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_18 = invoke zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h688b63d4a5bbf871E"({ [0 x i8]*, i64 }* align 8 %_20, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc319 to { [0 x i8]*, i64 }*))
          to label %bb15 unwind label %cleanup, !dbg !14545

bb15:                                             ; preds = %bb14
  br i1 %_18, label %bb11, label %bb10, !dbg !14546

bb10:                                             ; preds = %bb15
  store i8 0, i8* %_17, align 1, !dbg !14546
  br label %bb12, !dbg !14546

bb11:                                             ; preds = %bb15
  %13 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %pos, i64 2), !dbg !14547
  %_32.0 = extractvalue { i64, i1 } %13, 0, !dbg !14547
  %_32.1 = extractvalue { i64, i1 } %13, 1, !dbg !14547
  %14 = call i1 @llvm.expect.i1(i1 %_32.1, i1 false), !dbg !14547
  br i1 %14, label %panic1, label %bb16, !dbg !14547

bb16:                                             ; preds = %bb11
; invoke <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %_28 = invoke align 8 { [0 x i8]*, i64 }* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hd6789abdb498dafcE"(%"alloc::vec::Vec<&str>"* align 8 %lines, i64 %_32.0, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc824 to %"core::panic::location::Location"*))
          to label %bb17 unwind label %cleanup, !dbg !14548

panic1:                                           ; preds = %bb11
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc822 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !14547

bb17:                                             ; preds = %bb16
; invoke core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_26 = invoke zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h688b63d4a5bbf871E"({ [0 x i8]*, i64 }* align 8 %_28, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc322 to { [0 x i8]*, i64 }*))
          to label %bb18 unwind label %cleanup, !dbg !14548

bb18:                                             ; preds = %bb17
  %15 = zext i1 %_26 to i8, !dbg !14546
  store i8 %15, i8* %_17, align 1, !dbg !14546
  br label %bb12, !dbg !14546

bb12:                                             ; preds = %bb10, %bb18
  %16 = load i8, i8* %_17, align 1, !dbg !14546, !range !1099, !noundef !28
  %17 = trunc i8 %16 to i1, !dbg !14546
  br i1 %17, label %bb7, label %bb8, !dbg !14546

bb8:                                              ; preds = %bb12
  %18 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %pos, i64 2), !dbg !14549
  %_41.0 = extractvalue { i64, i1 } %18, 0, !dbg !14549
  %_41.1 = extractvalue { i64, i1 } %18, 1, !dbg !14549
  %19 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !14549
  br i1 %19, label %panic2, label %bb22, !dbg !14549

bb7:                                              ; preds = %bb12
  store i8 1, i8* %_16, align 1, !dbg !14546
  br label %bb9, !dbg !14546

bb9:                                              ; preds = %bb21, %bb7
  %20 = load i8, i8* %_16, align 1, !dbg !14550, !range !1099, !noundef !28
  %21 = trunc i8 %20 to i1, !dbg !14550
  %_15 = xor i1 %21, true, !dbg !14550
  br i1 %_15, label %bb28, label %bb29, !dbg !14550

bb22:                                             ; preds = %bb8
; invoke <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %_37 = invoke align 8 { [0 x i8]*, i64 }* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hd6789abdb498dafcE"(%"alloc::vec::Vec<&str>"* align 8 %lines, i64 %_41.0, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc828 to %"core::panic::location::Location"*))
          to label %bb23 unwind label %cleanup, !dbg !14551

panic2:                                           ; preds = %bb8
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc826 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !14549

bb23:                                             ; preds = %bb22
; invoke core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_35 = invoke zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h688b63d4a5bbf871E"({ [0 x i8]*, i64 }* align 8 %_37, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc319 to { [0 x i8]*, i64 }*))
          to label %bb24 unwind label %cleanup, !dbg !14551

bb24:                                             ; preds = %bb23
  br i1 %_35, label %bb20, label %bb19, !dbg !14552

bb19:                                             ; preds = %bb24
  store i8 0, i8* %_34, align 1, !dbg !14552
  br label %bb21, !dbg !14552

bb20:                                             ; preds = %bb24
  %22 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %pos, i64 1), !dbg !14553
  %_49.0 = extractvalue { i64, i1 } %22, 0, !dbg !14553
  %_49.1 = extractvalue { i64, i1 } %22, 1, !dbg !14553
  %23 = call i1 @llvm.expect.i1(i1 %_49.1, i1 false), !dbg !14553
  br i1 %23, label %panic3, label %bb25, !dbg !14553

bb25:                                             ; preds = %bb20
; invoke <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %_45 = invoke align 8 { [0 x i8]*, i64 }* @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hd6789abdb498dafcE"(%"alloc::vec::Vec<&str>"* align 8 %lines, i64 %_49.0, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc832 to %"core::panic::location::Location"*))
          to label %bb26 unwind label %cleanup, !dbg !14554

panic3:                                           ; preds = %bb20
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.e to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc830 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !14553

bb26:                                             ; preds = %bb25
; invoke core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_43 = invoke zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h688b63d4a5bbf871E"({ [0 x i8]*, i64 }* align 8 %_45, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc322 to { [0 x i8]*, i64 }*))
          to label %bb27 unwind label %cleanup, !dbg !14554

bb27:                                             ; preds = %bb26
  %24 = zext i1 %_43 to i8, !dbg !14552
  store i8 %24, i8* %_34, align 1, !dbg !14552
  br label %bb21, !dbg !14552

bb21:                                             ; preds = %bb19, %bb27
  %25 = load i8, i8* %_34, align 1, !dbg !14546, !range !1099, !noundef !28
  %26 = trunc i8 %25 to i1, !dbg !14546
  %27 = zext i1 %26 to i8, !dbg !14546
  store i8 %27, i8* %_16, align 1, !dbg !14546
  br label %bb9, !dbg !14546

bb29:                                             ; preds = %bb9
; invoke core::str::<impl str>::contains
  %_53 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h42080b83661c834cE"([0 x i8]* align 1 bitcast (<{ [1368 x i8] }>* @alloc813 to [0 x i8]*), i64 1368, [0 x i8]* align 1 bitcast (<{ [102 x i8] }>* @alloc836 to [0 x i8]*), i64 102)
          to label %bb30 unwind label %cleanup, !dbg !14555

bb28:                                             ; preds = %bb9
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [227 x i8] }>* @alloc833 to [0 x i8]*), i64 227, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc835 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !14550

bb30:                                             ; preds = %bb29
  %_52 = xor i1 %_53, true, !dbg !14556
  br i1 %_52, label %bb31, label %bb32, !dbg !14556

bb32:                                             ; preds = %bb30
; invoke core::str::<impl str>::contains
  %_57 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h42080b83661c834cE"([0 x i8]* align 1 bitcast (<{ [1368 x i8] }>* @alloc813 to [0 x i8]*), i64 1368, [0 x i8]* align 1 bitcast (<{ [95 x i8] }>* @alloc840 to [0 x i8]*), i64 95)
          to label %bb33 unwind label %cleanup, !dbg !14557

bb31:                                             ; preds = %bb30
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [146 x i8] }>* @alloc837 to [0 x i8]*), i64 146, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc839 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !14556

bb33:                                             ; preds = %bb32
  %_56 = xor i1 %_57, true, !dbg !14558
  br i1 %_56, label %bb34, label %bb35, !dbg !14558

bb35:                                             ; preds = %bb33
; call core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  call void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h93841d326ca7621aE"(%"alloc::vec::Vec<&str>"* %lines), !dbg !14542
  br label %bb36, !dbg !14542

bb34:                                             ; preds = %bb33
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [147 x i8] }>* @alloc841 to [0 x i8]*), i64 147, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc843 to %"core::panic::location::Location"*)) #17
          to label %unreachable unwind label %cleanup, !dbg !14558

abort:                                            ; preds = %bb37
  %28 = landingpad { i8*, i32 }
          cleanup, !dbg !14559
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #19, !dbg !14559
  unreachable, !dbg !14559

bb38:                                             ; preds = %bb37
  %29 = bitcast { i8*, i32 }* %0 to i8**, !dbg !14559
  %30 = load i8*, i8** %29, align 8, !dbg !14559
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !14559
  %32 = load i32, i32* %31, align 8, !dbg !14559
  %33 = insertvalue { i8*, i32 } undef, i8* %30, 0, !dbg !14559
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1, !dbg !14559
  resume { i8*, i32 } %34, !dbg !14559

bb36:                                             ; preds = %bb35
  ret void, !dbg !14560
}

; statics_tests::test_sections::test_sectioned_used_static::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN13statics_tests13test_sections26test_sectioned_used_static28_$u7b$$u7b$closure$u7d$$u7d$17h549c4656ecb13e93E"(%"[closure@src/test_sections.rs:43:23: 43:27]"* align 1 %_1, { [0 x i8]*, i64 }* align 8 %_2) unnamed_addr #0 !dbg !14561 {
start:
  %_2.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@src/test_sections.rs:43:23: 43:27]"*, align 8
  %x = alloca { [0 x i8]*, i64 }, align 8
  store %"[closure@src/test_sections.rs:43:23: 43:27]"* %_1, %"[closure@src/test_sections.rs:43:23: 43:27]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_sections.rs:43:23: 43:27]"** %_1.dbg.spill, metadata !14568, metadata !DIExpression()), !dbg !14570
  store { [0 x i8]*, i64 }* %_2, { [0 x i8]*, i64 }** %_2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %_2.dbg.spill, metadata !14569, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x, metadata !14566, metadata !DIExpression()), !dbg !14572
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 0, !dbg !14573
  %1 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !14573, !nonnull !28, !align !1104, !noundef !28
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_2, i32 0, i32 1, !dbg !14573
  %3 = load i64, i64* %2, align 8, !dbg !14573
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 0, !dbg !14573
  store [0 x i8]* %1, [0 x i8]** %4, align 8, !dbg !14573
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x, i32 0, i32 1, !dbg !14573
  store i64 %3, i64* %5, align 8, !dbg !14573
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %6 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h688b63d4a5bbf871E"({ [0 x i8]*, i64 }* align 8 %x, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc366 to { [0 x i8]*, i64 }*)), !dbg !14574
  br label %bb1, !dbg !14574

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !14575
}

; statics_tests::test_storage::test_buffer::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13statics_tests12test_storage11test_buffer28_$u7b$$u7b$closure$u7d$$u7d$17h01ef486d412cb6dcE"(%"[closure@src/test_storage.rs:12:1: 24:2]"* align 1 %_1) unnamed_addr #0 !dbg !14576 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_storage.rs:12:1: 24:2]"*, align 8
  store %"[closure@src/test_storage.rs:12:1: 24:2]"* %_1, %"[closure@src/test_storage.rs:12:1: 24:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_storage.rs:12:1: 24:2]"** %_1.dbg.spill, metadata !14582, metadata !DIExpression()), !dbg !14583
  call void @test_buffer(), !dbg !14583
  br label %bb1, !dbg !14583

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17hf4996d04c85a0259E(), !dbg !14583
  br label %bb2, !dbg !14583

bb2:                                              ; preds = %bb1
  ret void, !dbg !14584
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_buffer() unnamed_addr #1 !dbg !14585 {
start:
  %right_val.dbg.spill5 = alloca [11 x i32]*, align 8
  %left_val.dbg.spill3 = alloca [11 x i32]*, align 8
  %right_val.dbg.spill = alloca [11 x i32]*, align 8
  %left_val.dbg.spill = alloca [11 x i32]*, align 8
  %_47 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_31 = alloca { i32*, i32* }, align 8
  %_30 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_14 = alloca { i32*, i32* }, align 8
  %expected_buffer = alloca [11 x i32], align 4
  %rust_buffer = alloca [11 x i32], align 4
  %buffer = alloca [11 x i32], align 4
  call void @llvm.dbg.declare(metadata [11 x i32]* %buffer, metadata !14587, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.declare(metadata [11 x i32]* %rust_buffer, metadata !14589, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.declare(metadata [11 x i32]* %expected_buffer, metadata !14591, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !14597, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !14604, metadata !DIExpression()), !dbg !14611
  %0 = getelementptr inbounds [11 x i32], [11 x i32]* %buffer, i64 0, i64 0, !dbg !14612
  %1 = bitcast i32* %0 to i8*, !dbg !14612
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 44, i1 false), !dbg !14612
  %2 = getelementptr inbounds [11 x i32], [11 x i32]* %rust_buffer, i64 0, i64 0, !dbg !14613
  %3 = bitcast i32* %2 to i8*, !dbg !14613
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 44, i1 false), !dbg !14613
  %4 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 0, !dbg !14614
  store i32 1, i32* %4, align 4, !dbg !14614
  %5 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 1, !dbg !14614
  store i32 4, i32* %5, align 4, !dbg !14614
  %6 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 2, !dbg !14614
  store i32 2, i32* %6, align 4, !dbg !14614
  %7 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 3, !dbg !14614
  store i32 0, i32* %7, align 4, !dbg !14614
  %8 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 4, !dbg !14614
  store i32 0, i32* %8, align 4, !dbg !14614
  %9 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 5, !dbg !14614
  store i32 0, i32* %9, align 4, !dbg !14614
  %10 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 6, !dbg !14614
  store i32 0, i32* %10, align 4, !dbg !14614
  %11 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 7, !dbg !14614
  store i32 4, i32* %11, align 4, !dbg !14614
  %12 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 8, !dbg !14614
  store i32 4, i32* %12, align 4, !dbg !14614
  %13 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 9, !dbg !14614
  store i32 104, i32* %13, align 4, !dbg !14614
  %14 = getelementptr inbounds [11 x i32], [11 x i32]* %expected_buffer, i64 0, i64 10, !dbg !14614
  store i32 111, i32* %14, align 4, !dbg !14614
  %_7.0 = bitcast [11 x i32]* %buffer to [0 x i32]*, !dbg !14615
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha608522f02daa2efE"([0 x i32]* align 4 %_7.0, i64 11), !dbg !14615
  br label %bb1, !dbg !14615

bb1:                                              ; preds = %start
  call void @entry(i32 11, i32* %_6), !dbg !14616
  br label %bb2, !dbg !14616

bb2:                                              ; preds = %bb1
  %_12.0 = bitcast [11 x i32]* %rust_buffer to [0 x i32]*, !dbg !14617
; call core::slice::<impl [T]>::as_mut_ptr
  %_11 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha608522f02daa2efE"([0 x i32]* align 4 %_12.0, i64 11), !dbg !14617
  br label %bb3, !dbg !14617

bb3:                                              ; preds = %bb2
  call void @rust_entry(i32 11, i32* %_11), !dbg !14618
  br label %bb4, !dbg !14618

bb4:                                              ; preds = %bb3
  %15 = bitcast { i32*, i32* }* %_14 to [11 x i32]**, !dbg !14619
  store [11 x i32]* %buffer, [11 x i32]** %15, align 8, !dbg !14619
  %16 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !14619
  %17 = bitcast i32** %16 to [11 x i32]**, !dbg !14619
  store [11 x i32]* %rust_buffer, [11 x i32]** %17, align 8, !dbg !14619
  %18 = bitcast { i32*, i32* }* %_14 to [11 x i32]**, !dbg !14619
  %left_val = load [11 x i32]*, [11 x i32]** %18, align 8, !dbg !14619, !nonnull !28, !align !3487, !noundef !28
  store [11 x i32]* %left_val, [11 x i32]** %left_val.dbg.spill, align 8, !dbg !14619
  call void @llvm.dbg.declare(metadata [11 x i32]** %left_val.dbg.spill, metadata !14593, metadata !DIExpression()), !dbg !14620
  %19 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !14619
  %20 = bitcast i32** %19 to [11 x i32]**, !dbg !14619
  %right_val = load [11 x i32]*, [11 x i32]** %20, align 8, !dbg !14619, !nonnull !28, !align !3487, !noundef !28
  store [11 x i32]* %right_val, [11 x i32]** %right_val.dbg.spill, align 8, !dbg !14619
  call void @llvm.dbg.declare(metadata [11 x i32]** %right_val.dbg.spill, metadata !14596, metadata !DIExpression()), !dbg !14620
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_20 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h62e75519163072eeE"([11 x i32]* align 4 %left_val, [11 x i32]* align 4 %right_val), !dbg !14620
  br label %bb5, !dbg !14620

bb5:                                              ; preds = %bb4
  %_19 = xor i1 %_20, true, !dbg !14620
  br i1 %_19, label %bb6, label %bb7, !dbg !14620

bb7:                                              ; preds = %bb5
  %21 = bitcast { i32*, i32* }* %_31 to [11 x i32]**, !dbg !14621
  store [11 x i32]* %buffer, [11 x i32]** %21, align 8, !dbg !14621
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !14621
  %23 = bitcast i32** %22 to [11 x i32]**, !dbg !14621
  store [11 x i32]* %expected_buffer, [11 x i32]** %23, align 8, !dbg !14621
  %24 = bitcast { i32*, i32* }* %_31 to [11 x i32]**, !dbg !14621
  %left_val2 = load [11 x i32]*, [11 x i32]** %24, align 8, !dbg !14621, !nonnull !28, !align !3487, !noundef !28
  store [11 x i32]* %left_val2, [11 x i32]** %left_val.dbg.spill3, align 8, !dbg !14621
  call void @llvm.dbg.declare(metadata [11 x i32]** %left_val.dbg.spill3, metadata !14600, metadata !DIExpression()), !dbg !14622
  %25 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !14621
  %26 = bitcast i32** %25 to [11 x i32]**, !dbg !14621
  %right_val4 = load [11 x i32]*, [11 x i32]** %26, align 8, !dbg !14621, !nonnull !28, !align !3487, !noundef !28
  store [11 x i32]* %right_val4, [11 x i32]** %right_val.dbg.spill5, align 8, !dbg !14621
  call void @llvm.dbg.declare(metadata [11 x i32]** %right_val.dbg.spill5, metadata !14603, metadata !DIExpression()), !dbg !14622
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_37 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h62e75519163072eeE"([11 x i32]* align 4 %left_val2, [11 x i32]* align 4 %right_val4), !dbg !14622
  br label %bb8, !dbg !14622

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !14620
  %27 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_30 to {}**, !dbg !14610
  store {}* null, {}** %27, align 8, !dbg !14610
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h27b835989c4afc14E(i8 0, [11 x i32]* align 4 %left_val, [11 x i32]* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_30, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc845 to %"core::panic::location::Location"*)) #17, !dbg !14610
  unreachable, !dbg !14610

bb8:                                              ; preds = %bb7
  %_36 = xor i1 %_37, true, !dbg !14622
  br i1 %_36, label %bb9, label %bb10, !dbg !14622

bb10:                                             ; preds = %bb8
  ret void, !dbg !14623

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind1, align 1, !dbg !14622
  %28 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_47 to {}**, !dbg !14611
  store {}* null, {}** %28, align 8, !dbg !14611
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h27b835989c4afc14E(i8 0, [11 x i32]* align 4 %left_val2, [11 x i32]* align 4 %right_val4, %"core::option::Option<core::fmt::Arguments>"* %_47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc847 to %"core::panic::location::Location"*)) #17, !dbg !14611
  unreachable, !dbg !14611
}

; statics_tests::test_thread_locals::test_thread_locals::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13statics_tests18test_thread_locals18test_thread_locals28_$u7b$$u7b$closure$u7d$$u7d$17h2c03ead6c654b3d9E"(%"[closure@src/test_thread_locals.rs:53:1: 64:2]"* align 1 %_1) unnamed_addr #0 !dbg !14624 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_thread_locals.rs:53:1: 64:2]"*, align 8
  store %"[closure@src/test_thread_locals.rs:53:1: 64:2]"* %_1, %"[closure@src/test_thread_locals.rs:53:1: 64:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_thread_locals.rs:53:1: 64:2]"** %_1.dbg.spill, metadata !14629, metadata !DIExpression()), !dbg !14630
  call void @test_thread_locals(), !dbg !14630
  br label %bb1, !dbg !14630

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17hf4996d04c85a0259E(), !dbg !14630
  br label %bb2, !dbg !14630

bb2:                                              ; preds = %bb1
  ret void, !dbg !14631
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_thread_locals() unnamed_addr #1 !dbg !14632 {
start:
  %_7 = alloca %"std::thread::JoinHandle<()>", align 8
  %t = alloca %"std::thread::JoinHandle<()>", align 8
  call void @llvm.dbg.declare(metadata %"std::thread::JoinHandle<()>"* %t, metadata !14634, metadata !DIExpression()), !dbg !14636
; call statics_tests::test_thread_locals::run_test
  call void @_ZN13statics_tests18test_thread_locals8run_test17h36a019e3b5b64f0dE(), !dbg !14637
  br label %bb1, !dbg !14637

bb1:                                              ; preds = %start
; call statics_tests::test_thread_locals::run_test
  call void @_ZN13statics_tests18test_thread_locals8run_test17h36a019e3b5b64f0dE(), !dbg !14638
  br label %bb2, !dbg !14638

bb2:                                              ; preds = %bb1
; call std::thread::spawn
  call void @_ZN3std6thread5spawn17h8f686819298d3b21E(%"std::thread::JoinHandle<()>"* sret(%"std::thread::JoinHandle<()>") %t), !dbg !14639
  br label %bb3, !dbg !14639

bb3:                                              ; preds = %bb2
  %0 = bitcast %"std::thread::JoinHandle<()>"* %_7 to i8*, !dbg !14640
  %1 = bitcast %"std::thread::JoinHandle<()>"* %t to i8*, !dbg !14640
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !14640
; call std::thread::JoinHandle<T>::join
  %2 = call { i8*, i8* } @"_ZN3std6thread19JoinHandle$LT$T$GT$4join17hbc5dd9a419e25243E"(%"std::thread::JoinHandle<()>"* %_7), !dbg !14640
  %_6.0 = extractvalue { i8*, i8* } %2, 0, !dbg !14640
  %_6.1 = extractvalue { i8*, i8* } %2, 1, !dbg !14640
  br label %bb4, !dbg !14640

bb4:                                              ; preds = %bb3
; call core::result::Result<T,E>::unwrap
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hc39259790eb82bdaE"(i8* align 1 %_6.0, i8* %_6.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc849 to %"core::panic::location::Location"*)), !dbg !14640
  br label %bb5, !dbg !14640

bb5:                                              ; preds = %bb4
; call statics_tests::test_thread_locals::run_test
  call void @_ZN13statics_tests18test_thread_locals8run_test17h36a019e3b5b64f0dE(), !dbg !14641
  br label %bb6, !dbg !14641

bb6:                                              ; preds = %bb5
; call statics_tests::test_thread_locals::run_test
  call void @_ZN13statics_tests18test_thread_locals8run_test17h36a019e3b5b64f0dE(), !dbg !14642
  br label %bb7, !dbg !14642

bb7:                                              ; preds = %bb6
  ret void, !dbg !14643
}

; statics_tests::test_thread_locals::test_thread_locals::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN13statics_tests18test_thread_locals18test_thread_locals28_$u7b$$u7b$closure$u7d$$u7d$17h1540399d328ece2dE"() unnamed_addr #0 !dbg !14644 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_thread_locals.rs:56:27: 56:29]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_thread_locals.rs:56:27: 56:29]"* %_1.dbg.spill, metadata !14646, metadata !DIExpression()), !dbg !14647
; call statics_tests::test_thread_locals::run_test
  call void @_ZN13statics_tests18test_thread_locals8run_test17h36a019e3b5b64f0dE(), !dbg !14648
  br label %bb1, !dbg !14648

bb1:                                              ; preds = %start
; call statics_tests::test_thread_locals::run_test
  call void @_ZN13statics_tests18test_thread_locals8run_test17h36a019e3b5b64f0dE(), !dbg !14649
  br label %bb2, !dbg !14649

bb2:                                              ; preds = %bb1
; call statics_tests::test_thread_locals::run_test
  call void @_ZN13statics_tests18test_thread_locals8run_test17h36a019e3b5b64f0dE(), !dbg !14650
  br label %bb3, !dbg !14650

bb3:                                              ; preds = %bb2
  ret void, !dbg !14651
}

; statics_tests::main
; Function Attrs: nonlazybind uwtable
define internal void @_ZN13statics_tests4main17h9893fa3e70e9a167E() unnamed_addr #1 !dbg !14652 {
start:
; call test::test_main_static
  call void @_ZN4test16test_main_static17h282a5eb5a10ec82dE([0 x %"test::types::TestDescAndFn"*]* align 8 bitcast (<{ i8*, i8*, i8*, i8* }>* @alloc533 to [0 x %"test::types::TestDescAndFn"*]*), i64 4), !dbg !14653
  br label %bb1, !dbg !14653

bb1:                                              ; preds = %start
  ret void, !dbg !14653
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index26slice_start_index_len_fail17hd34676e4711f38b9E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.uadd.sat.i64(i64, i64) #5

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; <std::sys::unix::stdio::Stderr as std::io::Write>::write
; Function Attrs: nonlazybind uwtable
declare void @"_ZN64_$LT$std..sys..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$5write17h1e7f1c2ebe737f6eE"(%"core::result::Result<usize, std::io::error::Error>"* sret(%"core::result::Result<usize, std::io::error::Error>"), %"std::sys::unix::stdio::Stderr"* align 1, [0 x i8]* align 1, i64) unnamed_addr #1

; core::fmt::write
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt5write17hcd15d2c673b5a9c1E({}* align 1, [3 x i64]* align 8, %"core::fmt::Arguments"*) unnamed_addr #1

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; std::sys::unix::decode_error_kind
; Function Attrs: nonlazybind uwtable
declare i8 @_ZN3std3sys4unix17decode_error_kind17hddbacf084bae3705E(i32) unnamed_addr #1

; std::rt::lang_start_internal
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1, [3 x i64]* align 8, i64, i8**) unnamed_addr #1

; std::sys::unix::thread::Thread::join
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix6thread6Thread4join17h201ff71bf1661c8eE(i64) unnamed_addr #1

; std::thread::Builder::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std6thread7Builder3new17hc4ba9c847646b468E(%"std::thread::Builder"* sret(%"std::thread::Builder")) unnamed_addr #1

; std::thread::Thread::new
; Function Attrs: nonlazybind uwtable
declare i64* @_ZN3std6thread6Thread3new17h736e5424c2b7b9c4E(i8* align 1, i64) unnamed_addr #1

; std::io::stdio::set_output_capture
; Function Attrs: nonlazybind uwtable
declare i64* @_ZN3std2io5stdio18set_output_capture17h73568703c6d7ae33E(i64*) unnamed_addr #1

; std::thread::scoped::ScopeData::increment_num_running_threads
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std6thread6scoped9ScopeData29increment_num_running_threads17ha23d07cdac801e37E(%"std::thread::scoped::ScopeData"* align 8) unnamed_addr #1

; std::sys::unix::thread::Thread::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix6thread6Thread3new17h783da4d078f543eaE(%"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>"* sret(%"core::result::Result<std::sys::unix::thread::Thread, std::io::error::Error>"), i64, {}* align 1, [3 x i64]* align 8) unnamed_addr #1

; std::thread::Thread::cname
; Function Attrs: nonlazybind uwtable
declare { i8*, i64 } @_ZN3std6thread6Thread5cname17hd2fe7e3ac07ea1a9E(i64** align 8) unnamed_addr #1

; std::sys::unix::thread::Thread::set_name
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix6thread6Thread8set_name17h571600ada67affa1E(%"core::ffi::c_str::CStr"* align 1, i64) unnamed_addr #1

; std::sys::unix::thread::guard::current
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix6thread5guard7current17h8d132d7dabbb3102E(%"core::option::Option<core::ops::range::Range<usize>>"* sret(%"core::option::Option<core::ops::range::Range<usize>>")) unnamed_addr #1

; std::sys_common::thread_info::set
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std10sys_common11thread_info3set17h3d596bd351fc73adE(%"core::option::Option<core::ops::range::Range<usize>>"*, i64*) unnamed_addr #1

; Function Attrs: nonlazybind
define internal i32 @__rust_try(void (i8*)* %0, i8* %1, void (i8*, i8*)* %2) unnamed_addr #9 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality {
entry-block:
  invoke void %0(i8* %1)
          to label %then unwind label %catch

then:                                             ; preds = %entry-block
  ret i32 0

catch:                                            ; preds = %entry-block
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  call void %2(i8* %1, i8* %4)
  ret i32 1
}

; std::panicking::try::cleanup
; Function Attrs: cold nonlazybind uwtable
declare { {}*, [3 x i64]* } @_ZN3std9panicking3try7cleanup17hc943fe53eebad02eE(i8*) unnamed_addr #4

; core::fmt::float::<impl core::fmt::Debug for f32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt5float50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$f32$GT$3fmt17h53df062cf1414aedE"(float* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::Formatter::debug_list
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter10debug_list17h2e70d1c34e8cb782E(%"core::fmt::builders::DebugList"* sret(%"core::fmt::builders::DebugList"), %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha896c0aa3642bf32E(%"core::fmt::builders::DebugList"* align 8) unnamed_addr #1

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h46ab6094afed2354E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h827553a54a7e037dE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u32$GT$3fmt17h4598978fc11d0a5fE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h518f5e83165fbe37E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; core::fmt::builders::DebugList::entry
; Function Attrs: nonlazybind uwtable
declare align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h5007920add23274dE(%"core::fmt::builders::DebugList"* align 8, {}* align 1, [3 x i64]* align 8) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #11

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; std::sys_common::thread::min_stack
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN3std10sys_common6thread9min_stack17h276a98c3e9cb8925E() unnamed_addr #1

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str16slice_error_fail17h062f63050b85fc0cE([0 x i8]* align 1, i64, i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE"(i64* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #12

; core::slice::memchr::memchr_general_case
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h8d14ec4c11d8af08E(i8, [0 x i8]* align 1, i64) unnamed_addr #1

; core::option::expect_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6option13expect_failed17hfe812f345eb8521fE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; <std::io::error::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h9412cc25832b82a2E"(i8** align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8, %"core::panic::location::Location"* align 8) unnamed_addr #6

; <alloc::ffi::c_str::NulError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN64_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Debug$GT$3fmt17ha6ddf2cfa3845ef5E"(%"alloc::ffi::c_str::NulError"* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8, {}* align 1, [3 x i64]* align 8, {}* align 1, [3 x i64]* align 8, %"core::option::Option<core::fmt::Arguments>"*, %"core::panic::location::Location"* align 8) unnamed_addr #13

; alloc::string::<impl core::convert::From<alloc::string::String> for alloc::vec::Vec<u8>>::from
; Function Attrs: nonlazybind uwtable
declare void @"_ZN5alloc6string104_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..vec..Vec$LT$u8$GT$$GT$4from17hce79d9a1e153cc22E"(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>"), %"alloc::string::String"*) unnamed_addr #1

; core::str::pattern::StrSearcher::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str7pattern11StrSearcher3new17h13dd5abbb92d502eE(%"core::str::pattern::StrSearcher"* sret(%"core::str::pattern::StrSearcher"), [0 x i8]* align 1, i64, [0 x i8]* align 1, i64) unnamed_addr #1

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64, i64) unnamed_addr #3

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #14

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #14

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #14

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() unnamed_addr #13

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #14

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #15

; alloc::ffi::c_str::CString::_from_vec_unchecked
; Function Attrs: nonlazybind uwtable
declare { i8*, i64 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17hb02fdd297b1bddd9E(%"alloc::vec::Vec<u8>"*) unnamed_addr #1

; <dyn core::any::Any+core::marker::Send as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN82_$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$u20$as$u20$core..fmt..Debug$GT$3fmt17h8280e0bd264d45c8E"({}* align 1, [3 x i64]* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; Function Attrs: nonlazybind
declare i32 @memcmp(i8*, i8*, i64) #16

; std::thread::scoped::ScopeData::decrement_num_running_threads
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std6thread6scoped9ScopeData29decrement_num_running_threads17h5fbb8ce69bc0c6f5E(%"std::thread::scoped::ScopeData"* align 8, i1 zeroext) unnamed_addr #1

; std::sys::unix::stdio::panic_output
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN3std3sys4unix5stdio12panic_output17h0e3ed00a45758d05E() unnamed_addr #1

; <core::fmt::Arguments as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h3acc6455b8791ff2E"(%"core::fmt::Arguments"* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; std::sys::unix::abort_internal
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std3sys4unix14abort_internal17hdc4a906dbfd99d12E() unnamed_addr #13

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; Function Attrs: nonlazybind uwtable
declare void @thread_entry(i32, i32*) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.usub.with.overflow.i32(i32, i32) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #5

; Function Attrs: nonlazybind uwtable
declare void @entry(i32, i32*) unnamed_addr #1

; test::test_main_static
; Function Attrs: nonlazybind uwtable
declare void @_ZN4test16test_main_static17h282a5eb5a10ec82dE([0 x %"test::types::TestDescAndFn"*]* align 8, i64) unnamed_addr #1

; Function Attrs: nonlazybind
define i32 @main(i32 %0, i8** %1) unnamed_addr #9 {
top:
  %2 = load volatile i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__rustc_debug_gdb_scripts_section__, i32 0, i32 0), align 1
  %3 = sext i32 %0 to i64
; call std::rt::lang_start
  %4 = call i64 @_ZN3std2rt10lang_start17ha4486b9f474a3cafE(void ()* @_ZN13statics_tests4main17h9893fa3e70e9a167E, i64 %3, i8** %1)
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #8 = { argmemonly nofree nounwind willreturn }
attributes #9 = { nonlazybind "target-cpu"="x86-64" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree nosync nounwind readnone willreturn }
attributes #12 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #13 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #14 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #15 = { cold noreturn nounwind }
attributes #16 = { nonlazybind }
attributes #17 = { noreturn }
attributes #18 = { noinline }
attributes #19 = { noinline noreturn nounwind }
attributes #20 = { nounwind }

!llvm.module.flags = !{!779, !780, !781, !782, !783}
!llvm.dbg.cu = !{!784}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr> as core::fmt::Write>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr> as core::fmt::Write>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !14, templateParams: !28, identifier: "39b12d778bd52a7ad80ffd39082eabff")
!4 = !{!5, !8, !10, !11, !12, !13}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!14 = !DICompositeType(tag: DW_TAG_structure_type, name: "Adapter<std::sys::unix::stdio::Stderr>", scope: !15, file: !2, size: 128, align: 64, elements: !19, templateParams: !161, identifier: "1a6cdcdd4c943ddeb72924b6cc984e2a")
!15 = !DINamespace(name: "write_fmt", scope: !16)
!16 = !DINamespace(name: "Write", scope: !17)
!17 = !DINamespace(name: "io", scope: !18)
!18 = !DINamespace(name: "std", scope: null)
!19 = !{!20, !29}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !14, file: !2, baseType: !21, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::sys::unix::stdio::Stderr", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!22 = !DICompositeType(tag: DW_TAG_structure_type, name: "Stderr", scope: !23, file: !2, align: 8, elements: !26, templateParams: !28, identifier: "643f4ead39f5538e308a9115d26120b8")
!23 = !DINamespace(name: "stdio", scope: !24)
!24 = !DINamespace(name: "unix", scope: !25)
!25 = !DINamespace(name: "sys", scope: !18)
!26 = !{!27}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !22, file: !2, baseType: !7, align: 8)
!28 = !{}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !14, file: !2, baseType: !30, size: 64, align: 64, offset: 64)
!30 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), std::io::error::Error>", scope: !31, file: !2, size: 64, align: 64, elements: !33, templateParams: !28, identifier: "c7eb0b1781b547f7e08c561bec01ff32")
!31 = !DINamespace(name: "result", scope: !32)
!32 = !DINamespace(name: "core", scope: null)
!33 = !{!34}
!34 = !DICompositeType(tag: DW_TAG_variant_part, scope: !30, file: !2, size: 64, align: 64, elements: !35, templateParams: !28, identifier: "1f891dc836e2f2e1e0bef4f104fa5614", discriminator: !159)
!35 = !{!36, !155}
!36 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !34, file: !2, baseType: !37, size: 64, align: 64, extraData: i64 0)
!37 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !30, file: !2, size: 64, align: 64, elements: !38, templateParams: !40, identifier: "a4f638f11f3ea760de81f708fc6e1fd")
!38 = !{!39}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !37, file: !2, baseType: !7, align: 8)
!40 = !{!41, !42}
!41 = !DITemplateTypeParameter(name: "T", type: !7)
!42 = !DITemplateTypeParameter(name: "E", type: !43)
!43 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !44, file: !2, size: 64, align: 64, elements: !45, templateParams: !28, identifier: "35ef22def08c837ae3878504674e366b")
!44 = !DINamespace(name: "error", scope: !17)
!45 = !{!46}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !43, file: !2, baseType: !47, size: 64, align: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "Repr", scope: !48, file: !2, size: 64, align: 64, elements: !49, templateParams: !28, identifier: "6570f3d28135329fbed4cb7a1951e32d")
!48 = !DINamespace(name: "repr_bitpacked", scope: !44)
!49 = !{!50, !57}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !47, file: !2, baseType: !51, size: 64, align: 64)
!51 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<()>", scope: !52, file: !2, size: 64, align: 64, elements: !54, templateParams: !56, identifier: "b858013ea474e1eef5ccba3870fe353d")
!52 = !DINamespace(name: "non_null", scope: !53)
!53 = !DINamespace(name: "ptr", scope: !32)
!54 = !{!55}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !51, file: !2, baseType: !6, size: 64, align: 64)
!56 = !{!41}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !47, file: !2, baseType: !58, align: 8)
!58 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !60, identifier: "1d073321bd67e7be57d2b831b78eb78b")
!59 = !DINamespace(name: "marker", scope: !32)
!60 = !{!61}
!61 = !DITemplateTypeParameter(name: "T", type: !62)
!62 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", scope: !44, file: !2, size: 128, align: 64, elements: !63, templateParams: !28, identifier: "64bf9ab43a422ff7882cc64d405e6db4")
!63 = !{!64}
!64 = !DICompositeType(tag: DW_TAG_variant_part, scope: !62, file: !2, size: 128, align: 64, elements: !65, templateParams: !28, identifier: "32d46417816a4970232155829bec3de0", discriminator: !154)
!65 = !{!66, !132, !136, !150}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "Os", scope: !64, file: !2, baseType: !67, size: 128, align: 64, extraData: i64 0)
!67 = !DICompositeType(tag: DW_TAG_structure_type, name: "Os", scope: !62, file: !2, size: 128, align: 64, elements: !68, templateParams: !71, identifier: "51312ccd08399ffb43fb895d8a6353de")
!68 = !{!69}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !67, file: !2, baseType: !70, size: 32, align: 32, offset: 32)
!70 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!71 = !{!72}
!72 = !DITemplateTypeParameter(name: "C", type: !73)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>", baseType: !74, size: 64, align: 64, dwarfAddressSpace: 0)
!74 = !DICompositeType(tag: DW_TAG_structure_type, name: "Custom", scope: !44, file: !2, size: 192, align: 64, elements: !75, templateParams: !28, identifier: "387ae58cacb5ae1d4fddf7f57315f38d")
!75 = !{!76, !121}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !74, file: !2, baseType: !77, size: 8, align: 8, offset: 128)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ErrorKind", scope: !44, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagEnumClass, elements: !79)
!78 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!79 = !{!80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120}
!80 = !DIEnumerator(name: "NotFound", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "PermissionDenied", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "ConnectionRefused", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "ConnectionReset", value: 3, isUnsigned: true)
!84 = !DIEnumerator(name: "HostUnreachable", value: 4, isUnsigned: true)
!85 = !DIEnumerator(name: "NetworkUnreachable", value: 5, isUnsigned: true)
!86 = !DIEnumerator(name: "ConnectionAborted", value: 6, isUnsigned: true)
!87 = !DIEnumerator(name: "NotConnected", value: 7, isUnsigned: true)
!88 = !DIEnumerator(name: "AddrInUse", value: 8, isUnsigned: true)
!89 = !DIEnumerator(name: "AddrNotAvailable", value: 9, isUnsigned: true)
!90 = !DIEnumerator(name: "NetworkDown", value: 10, isUnsigned: true)
!91 = !DIEnumerator(name: "BrokenPipe", value: 11, isUnsigned: true)
!92 = !DIEnumerator(name: "AlreadyExists", value: 12, isUnsigned: true)
!93 = !DIEnumerator(name: "WouldBlock", value: 13, isUnsigned: true)
!94 = !DIEnumerator(name: "NotADirectory", value: 14, isUnsigned: true)
!95 = !DIEnumerator(name: "IsADirectory", value: 15, isUnsigned: true)
!96 = !DIEnumerator(name: "DirectoryNotEmpty", value: 16, isUnsigned: true)
!97 = !DIEnumerator(name: "ReadOnlyFilesystem", value: 17, isUnsigned: true)
!98 = !DIEnumerator(name: "FilesystemLoop", value: 18, isUnsigned: true)
!99 = !DIEnumerator(name: "StaleNetworkFileHandle", value: 19, isUnsigned: true)
!100 = !DIEnumerator(name: "InvalidInput", value: 20, isUnsigned: true)
!101 = !DIEnumerator(name: "InvalidData", value: 21, isUnsigned: true)
!102 = !DIEnumerator(name: "TimedOut", value: 22, isUnsigned: true)
!103 = !DIEnumerator(name: "WriteZero", value: 23, isUnsigned: true)
!104 = !DIEnumerator(name: "StorageFull", value: 24, isUnsigned: true)
!105 = !DIEnumerator(name: "NotSeekable", value: 25, isUnsigned: true)
!106 = !DIEnumerator(name: "FilesystemQuotaExceeded", value: 26, isUnsigned: true)
!107 = !DIEnumerator(name: "FileTooLarge", value: 27, isUnsigned: true)
!108 = !DIEnumerator(name: "ResourceBusy", value: 28, isUnsigned: true)
!109 = !DIEnumerator(name: "ExecutableFileBusy", value: 29, isUnsigned: true)
!110 = !DIEnumerator(name: "Deadlock", value: 30, isUnsigned: true)
!111 = !DIEnumerator(name: "CrossesDevices", value: 31, isUnsigned: true)
!112 = !DIEnumerator(name: "TooManyLinks", value: 32, isUnsigned: true)
!113 = !DIEnumerator(name: "InvalidFilename", value: 33, isUnsigned: true)
!114 = !DIEnumerator(name: "ArgumentListTooLong", value: 34, isUnsigned: true)
!115 = !DIEnumerator(name: "Interrupted", value: 35, isUnsigned: true)
!116 = !DIEnumerator(name: "Unsupported", value: 36, isUnsigned: true)
!117 = !DIEnumerator(name: "UnexpectedEof", value: 37, isUnsigned: true)
!118 = !DIEnumerator(name: "OutOfMemory", value: 38, isUnsigned: true)
!119 = !DIEnumerator(name: "Other", value: 39, isUnsigned: true)
!120 = !DIEnumerator(name: "Uncategorized", value: 40, isUnsigned: true)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !74, file: !2, baseType: !122, size: 128, align: 64)
!122 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !123, templateParams: !28, identifier: "49e1ff5efd573d092283dcd4348771ac")
!123 = !{!124, !127}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !122, file: !2, baseType: !125, size: 64, align: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64, dwarfAddressSpace: 0)
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, align: 8, elements: !28, identifier: "d998709730b54ebefffe35f2808c071f")
!127 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !122, file: !2, baseType: !128, size: 64, align: 64, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !129, size: 64, align: 64, dwarfAddressSpace: 0)
!129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !130)
!130 = !{!131}
!131 = !DISubrange(count: 3, lowerBound: 0)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "Simple", scope: !64, file: !2, baseType: !133, size: 128, align: 64, extraData: i64 1)
!133 = !DICompositeType(tag: DW_TAG_structure_type, name: "Simple", scope: !62, file: !2, size: 128, align: 64, elements: !134, templateParams: !71, identifier: "d6fdaf6afb7f06ba830e20c3b7cdf96a")
!134 = !{!135}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !133, file: !2, baseType: !77, size: 8, align: 8, offset: 8)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "SimpleMessage", scope: !64, file: !2, baseType: !137, size: 128, align: 64, extraData: i64 2)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleMessage", scope: !62, file: !2, size: 128, align: 64, elements: !138, templateParams: !71, identifier: "6cf4fba8ceca59eba147622df4399a69")
!138 = !{!139}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !137, file: !2, baseType: !140, size: 64, align: 64, offset: 64)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::SimpleMessage", baseType: !141, size: 64, align: 64, dwarfAddressSpace: 0)
!141 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleMessage", scope: !44, file: !2, size: 192, align: 64, elements: !142, templateParams: !28, identifier: "7efc891383873a5dce28ace1bc51c9d2")
!142 = !{!143, !144}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !141, file: !2, baseType: !77, size: 8, align: 8, offset: 128)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !141, file: !2, baseType: !145, size: 128, align: 64)
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !146, templateParams: !28, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!146 = !{!147, !149}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !145, file: !2, baseType: !148, size: 64, align: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !145, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "Custom", scope: !64, file: !2, baseType: !151, size: 128, align: 64, extraData: i64 3)
!151 = !DICompositeType(tag: DW_TAG_structure_type, name: "Custom", scope: !62, file: !2, size: 128, align: 64, elements: !152, templateParams: !71, identifier: "591e506d10606579798142c7aef919f4")
!152 = !{!153}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !151, file: !2, baseType: !73, size: 64, align: 64, offset: 64)
!154 = !DIDerivedType(tag: DW_TAG_member, scope: !62, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagArtificial)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !34, file: !2, baseType: !156, size: 64, align: 64)
!156 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !30, file: !2, size: 64, align: 64, elements: !157, templateParams: !40, identifier: "9e5d2ed67b9bb407b415e43834c79d35")
!157 = !{!158}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !156, file: !2, baseType: !43, size: 64, align: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, scope: !30, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!160 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!161 = !{!162}
!162 = !DITemplateTypeParameter(name: "T", type: !22)
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable}", scope: null, file: !2, type: !165, isLocal: true, isDefinition: true)
!165 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !166, vtableHolder: !173, templateParams: !28, identifier: "dee041a15dfe076460e1ead4b963607c")
!166 = !{!167, !168, !169, !170, !171, !172}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !165, file: !2, baseType: !6, size: 64, align: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !165, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !165, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !165, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !165, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !165, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!173 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<()>", scope: !174, file: !2, size: 64, align: 64, elements: !176, templateParams: !28, identifier: "eb9421142c7534b89a47eb687fc5227b")
!174 = !DINamespace(name: "lang_start", scope: !175)
!175 = !DINamespace(name: "rt", scope: !18)
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !173, file: !2, baseType: !178, size: 64, align: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn()", baseType: !179, size: 64, align: 64, dwarfAddressSpace: 0)
!179 = !DISubroutineType(types: !180)
!180 = !{null}
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(name: "<std::thread::{impl#0}::spawn_unchecked_::{closure_env#1}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()> as core::ops::function::FnOnce<()>>::{vtable}", scope: null, file: !2, type: !183, isLocal: true, isDefinition: true)
!183 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::thread::{impl#0}::spawn_unchecked_::{closure_env#1}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()> as core::ops::function::FnOnce<()>>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !184, vtableHolder: !189, templateParams: !28, identifier: "343a19c11e7fdc8b10aa9825675bddac")
!184 = !{!185, !186, !187, !188}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !183, file: !2, baseType: !6, size: 64, align: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !183, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !183, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !183, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!189 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", scope: !190, file: !2, size: 192, align: 64, elements: !193, templateParams: !28, identifier: "96036c88ee11aaa5f762dd7f032544d7")
!190 = !DINamespace(name: "spawn_unchecked_", scope: !191)
!191 = !DINamespace(name: "{impl#0}", scope: !192)
!192 = !DINamespace(name: "thread", scope: !18)
!193 = !{!194, !286, !376, !381}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "their_thread", scope: !189, file: !2, baseType: !195, size: 64, align: 64)
!195 = !DICompositeType(tag: DW_TAG_structure_type, name: "Thread", scope: !192, file: !2, size: 64, align: 64, elements: !196, templateParams: !28, identifier: "181d11db8a84642a3d9f2fdd068530a3")
!196 = !{!197}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !195, file: !2, baseType: !198, size: 64, align: 64)
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "Pin<alloc::sync::Arc<std::thread::Inner>>", scope: !199, file: !2, size: 64, align: 64, elements: !200, templateParams: !284, identifier: "e9ad1bd6432910d9a3eb8c1441038616")
!199 = !DINamespace(name: "pin", scope: !32)
!200 = !{!201}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !198, file: !2, baseType: !202, size: 64, align: 64)
!202 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arc<std::thread::Inner>", scope: !203, file: !2, size: 64, align: 64, elements: !205, templateParams: !278, identifier: "fa53fb10d452b801a2c9df37976b7c0f")
!203 = !DINamespace(name: "sync", scope: !204)
!204 = !DINamespace(name: "alloc", scope: null)
!205 = !{!206, !282}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !202, file: !2, baseType: !207, size: 64, align: 64)
!207 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::sync::ArcInner<std::thread::Inner>>", scope: !52, file: !2, size: 64, align: 64, elements: !208, templateParams: !280, identifier: "ca467cef215b0b688cec8b37ff67e3eb")
!208 = !{!209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !207, file: !2, baseType: !210, size: 64, align: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::sync::ArcInner<std::thread::Inner>", baseType: !211, size: 64, align: 64, dwarfAddressSpace: 0)
!211 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<std::thread::Inner>", scope: !203, file: !2, size: 384, align: 64, elements: !212, templateParams: !278, identifier: "af768f86552c1580b6bad22038e52e6b")
!212 = !{!213, !225, !226}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !211, file: !2, baseType: !214, size: 64, align: 64)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "AtomicUsize", scope: !215, file: !2, size: 64, align: 64, elements: !217, templateParams: !28, identifier: "7ffec6c78d83ad83b9e8e18b9f044e78")
!215 = !DINamespace(name: "atomic", scope: !216)
!216 = !DINamespace(name: "sync", scope: !32)
!217 = !{!218}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !214, file: !2, baseType: !219, size: 64, align: 64)
!219 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<usize>", scope: !220, file: !2, size: 64, align: 64, elements: !221, templateParams: !223, identifier: "1096bf4d22c004093180ac32ada74dc8")
!220 = !DINamespace(name: "cell", scope: !32)
!221 = !{!222}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !219, file: !2, baseType: !9, size: 64, align: 64)
!223 = !{!224}
!224 = !DITemplateTypeParameter(name: "T", type: !9)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !211, file: !2, baseType: !214, size: 64, align: 64, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !211, file: !2, baseType: !227, size: 256, align: 64, offset: 128)
!227 = !DICompositeType(tag: DW_TAG_structure_type, name: "Inner", scope: !192, file: !2, size: 256, align: 64, elements: !228, templateParams: !28, identifier: "c4cf126348540eb9d47a2569a004f23c")
!228 = !{!229, !253, !262}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !227, file: !2, baseType: !230, size: 128, align: 64)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::ffi::c_str::CString>", scope: !231, file: !2, size: 128, align: 64, elements: !232, templateParams: !28, identifier: "11079736a8cf7d01b5081204844afabf")
!231 = !DINamespace(name: "option", scope: !32)
!232 = !{!233}
!233 = !DICompositeType(tag: DW_TAG_variant_part, scope: !230, file: !2, size: 128, align: 64, elements: !234, templateParams: !28, identifier: "24a4f611368b1aaecb2a2d1015a4e208", discriminator: !252)
!234 = !{!235, !248}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !233, file: !2, baseType: !236, size: 128, align: 64, extraData: i64 0)
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !230, file: !2, size: 128, align: 64, elements: !28, templateParams: !237, identifier: "a0925efc4ffffc6b6e6a847eade956da")
!237 = !{!238}
!238 = !DITemplateTypeParameter(name: "T", type: !239)
!239 = !DICompositeType(tag: DW_TAG_structure_type, name: "CString", scope: !240, file: !2, size: 128, align: 64, elements: !242, templateParams: !28, identifier: "a4dcbb113228472ac833458ca2f5ee8d")
!240 = !DINamespace(name: "c_str", scope: !241)
!241 = !DINamespace(name: "ffi", scope: !204)
!242 = !{!243}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !239, file: !2, baseType: !244, size: 128, align: 64)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u8], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !245, templateParams: !28, identifier: "e783b0825321c11fc908377d145707b4")
!245 = !{!246, !247}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !244, file: !2, baseType: !148, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !244, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !233, file: !2, baseType: !249, size: 128, align: 64)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !230, file: !2, size: 128, align: 64, elements: !250, templateParams: !237, identifier: "b95ab6a63fa54894b511858e9aa487eb")
!250 = !{!251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !249, file: !2, baseType: !239, size: 128, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, scope: !230, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !227, file: !2, baseType: !254, size: 64, align: 64, offset: 128)
!254 = !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadId", scope: !192, file: !2, size: 64, align: 64, elements: !255, templateParams: !28, identifier: "14daaba64fc0b725cea71c77b1c0dda0")
!255 = !{!256}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !254, file: !2, baseType: !257, size: 64, align: 64)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroU64", scope: !258, file: !2, size: 64, align: 64, elements: !260, templateParams: !28, identifier: "c75221714c3cb037594d5c7d9a6076e4")
!258 = !DINamespace(name: "nonzero", scope: !259)
!259 = !DINamespace(name: "num", scope: !32)
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !257, file: !2, baseType: !160, size: 64, align: 64)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "parker", scope: !227, file: !2, baseType: !263, size: 32, align: 32, offset: 192)
!263 = !DICompositeType(tag: DW_TAG_structure_type, name: "Parker", scope: !264, file: !2, size: 32, align: 32, elements: !267, templateParams: !28, identifier: "c35d3c03a2fef7c43fe89d6d5817985")
!264 = !DINamespace(name: "futex", scope: !265)
!265 = !DINamespace(name: "thread_parker", scope: !266)
!266 = !DINamespace(name: "sys_common", scope: !18)
!267 = !{!268}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !263, file: !2, baseType: !269, size: 32, align: 32)
!269 = !DICompositeType(tag: DW_TAG_structure_type, name: "AtomicU32", scope: !215, file: !2, size: 32, align: 32, elements: !270, templateParams: !28, identifier: "df28c1061f1f509fecdfe447f073fe05")
!270 = !{!271}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !269, file: !2, baseType: !272, size: 32, align: 32)
!272 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<u32>", scope: !220, file: !2, size: 32, align: 32, elements: !273, templateParams: !276, identifier: "913c5966f37dcbe528496c11edeecf37")
!273 = !{!274}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !272, file: !2, baseType: !275, size: 32, align: 32)
!275 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!276 = !{!277}
!277 = !DITemplateTypeParameter(name: "T", type: !275)
!278 = !{!279}
!279 = !DITemplateTypeParameter(name: "T", type: !227)
!280 = !{!281}
!281 = !DITemplateTypeParameter(name: "T", type: !211)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "phantom", scope: !202, file: !2, baseType: !283, align: 8)
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::sync::ArcInner<std::thread::Inner>>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !280, identifier: "d5fdc42d9e07c76ff2921be32eeec608")
!284 = !{!285}
!285 = !DITemplateTypeParameter(name: "P", type: !202)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "output_capture", scope: !189, file: !2, baseType: !287, size: 64, align: 64, offset: 64)
!287 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", scope: !231, file: !2, size: 64, align: 64, elements: !288, templateParams: !28, identifier: "63712b03c48a48b546a99b37b1795ac9")
!288 = !{!289}
!289 = !DICompositeType(tag: DW_TAG_variant_part, scope: !287, file: !2, size: 64, align: 64, elements: !290, templateParams: !28, identifier: "cea104d8888d652a5ea8270ab215780f", discriminator: !375)
!290 = !{!291, !371}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !289, file: !2, baseType: !292, size: 64, align: 64, extraData: i64 0)
!292 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !287, file: !2, size: 64, align: 64, elements: !28, templateParams: !293, identifier: "d5ea655bebdffd9d6ccc8e7b72ba2494")
!293 = !{!294}
!294 = !DITemplateTypeParameter(name: "T", type: !295)
!295 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", scope: !203, file: !2, size: 64, align: 64, elements: !296, templateParams: !365, identifier: "2460f30d6622b7eef1e579dc880d78bd")
!296 = !{!297, !369}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !295, file: !2, baseType: !298, size: 64, align: 64)
!298 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", scope: !52, file: !2, size: 64, align: 64, elements: !299, templateParams: !367, identifier: "9762843dde224ed9ee9dcfa13338b8ad")
!299 = !{!300}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !298, file: !2, baseType: !301, size: 64, align: 64)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", baseType: !302, size: 64, align: 64, dwarfAddressSpace: 0)
!302 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", scope: !203, file: !2, size: 384, align: 64, elements: !303, templateParams: !365, identifier: "80f642da82ac97e64301b741d3e0cb85")
!303 = !{!304, !305, !306}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !302, file: !2, baseType: !214, size: 64, align: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !302, file: !2, baseType: !214, size: 64, align: 64, offset: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !302, file: !2, baseType: !307, size: 256, align: 64, offset: 128)
!307 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !308, file: !2, size: 256, align: 64, elements: !310, templateParams: !363, identifier: "d24c7b343d9e4be2f0ee127389e541ea")
!308 = !DINamespace(name: "mutex", scope: !309)
!309 = !DINamespace(name: "sync", scope: !18)
!310 = !{!311, !321, !334}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !307, file: !2, baseType: !312, size: 32, align: 32)
!312 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovableMutex", scope: !313, file: !2, size: 32, align: 32, elements: !314, templateParams: !28, identifier: "1c5271880f403453e095967f67b3a99a")
!313 = !DINamespace(name: "mutex", scope: !266)
!314 = !{!315}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !312, file: !2, baseType: !316, size: 32, align: 32)
!316 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mutex", scope: !317, file: !2, size: 32, align: 32, elements: !319, templateParams: !28, identifier: "77860dc9701765ad347c5b544e453cfb")
!317 = !DINamespace(name: "futex_mutex", scope: !318)
!318 = !DINamespace(name: "locks", scope: !24)
!319 = !{!320}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !316, file: !2, baseType: !269, size: 32, align: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "poison", scope: !307, file: !2, baseType: !322, size: 8, align: 8, offset: 32)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "Flag", scope: !323, file: !2, size: 8, align: 8, elements: !324, templateParams: !28, identifier: "f0efe752869ac106b25c24d064c5feb7")
!323 = !DINamespace(name: "poison", scope: !309)
!324 = !{!325}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "failed", scope: !322, file: !2, baseType: !326, size: 8, align: 8)
!326 = !DICompositeType(tag: DW_TAG_structure_type, name: "AtomicBool", scope: !215, file: !2, size: 8, align: 8, elements: !327, templateParams: !28, identifier: "18df8ce09b617745af0df8c35407fa0c")
!327 = !{!328}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !326, file: !2, baseType: !329, size: 8, align: 8)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<u8>", scope: !220, file: !2, size: 8, align: 8, elements: !330, templateParams: !332, identifier: "b7b48363b5d13e5be0aac741c1d39baf")
!330 = !{!331}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !329, file: !2, baseType: !78, size: 8, align: 8)
!332 = !{!333}
!333 = !DITemplateTypeParameter(name: "T", type: !78)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !307, file: !2, baseType: !335, size: 192, align: 64, offset: 64)
!335 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !220, file: !2, size: 192, align: 64, elements: !336, templateParams: !363, identifier: "27f04b51a7d0a7ef411ab63b89f92cc2")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !335, file: !2, baseType: !338, size: 192, align: 64)
!338 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !339, file: !2, size: 192, align: 64, elements: !340, templateParams: !360, identifier: "f48a096c1ed19eb7ba15a7173429013")
!339 = !DINamespace(name: "vec", scope: !204)
!340 = !{!341, !362}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !338, file: !2, baseType: !342, size: 128, align: 64)
!342 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !343, file: !2, size: 128, align: 64, elements: !344, templateParams: !360, identifier: "d09dab1a097018b9dd4dad6f3ce84c27")
!343 = !DINamespace(name: "raw_vec", scope: !204)
!344 = !{!345, !356, !357}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !342, file: !2, baseType: !346, size: 64, align: 64)
!346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !347, file: !2, size: 64, align: 64, elements: !348, templateParams: !332, identifier: "7e72c5db004520f6d0779c7d4ace2142")
!347 = !DINamespace(name: "unique", scope: !53)
!348 = !{!349, !354}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !346, file: !2, baseType: !350, size: 64, align: 64)
!350 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !52, file: !2, size: 64, align: 64, elements: !351, templateParams: !332, identifier: "3160283ea80cecf6149fff38a2e996de")
!351 = !{!352}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !350, file: !2, baseType: !353, size: 64, align: 64)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !346, file: !2, baseType: !355, align: 8)
!355 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !332, identifier: "e338a8151f1037c76eadd10ab3c53972")
!356 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !342, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !342, file: !2, baseType: !358, align: 8)
!358 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !359, file: !2, align: 8, elements: !28, identifier: "3328ba4994ba07f4a4a3e83fae935932")
!359 = !DINamespace(name: "alloc", scope: !204)
!360 = !{!333, !361}
!361 = !DITemplateTypeParameter(name: "A", type: !358)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !338, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!363 = !{!364}
!364 = !DITemplateTypeParameter(name: "T", type: !338)
!365 = !{!366}
!366 = !DITemplateTypeParameter(name: "T", type: !307)
!367 = !{!368}
!368 = !DITemplateTypeParameter(name: "T", type: !302)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "phantom", scope: !295, file: !2, baseType: !370, align: 8)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !367, identifier: "73d706133e736839387d803b65b68460")
!371 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !289, file: !2, baseType: !372, size: 64, align: 64)
!372 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !287, file: !2, size: 64, align: 64, elements: !373, templateParams: !293, identifier: "7602f28f6060b5f6b8d821c8e8098170")
!373 = !{!374}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !372, file: !2, baseType: !295, size: 64, align: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, scope: !287, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !189, file: !2, baseType: !377, align: 8)
!377 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !378, file: !2, align: 8, elements: !28, identifier: "337e774c9bd960f2bdc08cbeaf16d216")
!378 = !DINamespace(name: "test_thread_locals", scope: !379)
!379 = !DINamespace(name: "test_thread_locals", scope: !380)
!380 = !DINamespace(name: "statics_tests", scope: null)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "their_packet", scope: !189, file: !2, baseType: !382, size: 64, align: 64, offset: 128)
!382 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arc<std::thread::Packet<()>>", scope: !203, file: !2, size: 64, align: 64, elements: !383, templateParams: !492, identifier: "fdd87ae4dce4c1ac57ddb61cdd37959b")
!383 = !{!384, !496}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !382, file: !2, baseType: !385, size: 64, align: 64)
!385 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::sync::ArcInner<std::thread::Packet<()>>>", scope: !52, file: !2, size: 64, align: 64, elements: !386, templateParams: !494, identifier: "a8a4fa2523ad853c9015d56e5a83588a")
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !385, file: !2, baseType: !388, size: 64, align: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::sync::ArcInner<std::thread::Packet<()>>", baseType: !389, size: 64, align: 64, dwarfAddressSpace: 0)
!389 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<std::thread::Packet<()>>", scope: !203, file: !2, size: 384, align: 64, elements: !390, templateParams: !492, identifier: "fd905c0a44a63506f7a9fef2e73fa8a3")
!390 = !{!391, !392, !393}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !389, file: !2, baseType: !214, size: 64, align: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !389, file: !2, baseType: !214, size: 64, align: 64, offset: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !389, file: !2, baseType: !394, size: 256, align: 64, offset: 128)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "Packet<()>", scope: !192, file: !2, size: 256, align: 64, elements: !395, templateParams: !56, identifier: "b0146c8076836b0ac1e0bc617b64c584")
!395 = !{!396, !434, !474}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "scope", scope: !394, file: !2, baseType: !397, size: 64, align: 64)
!397 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::sync::Arc<std::thread::scoped::ScopeData>>", scope: !231, file: !2, size: 64, align: 64, elements: !398, templateParams: !28, identifier: "2139409eff764451bb0726111ad9d39a")
!398 = !{!399}
!399 = !DICompositeType(tag: DW_TAG_variant_part, scope: !397, file: !2, size: 64, align: 64, elements: !400, templateParams: !28, identifier: "54bf56efea14fe2f7463523e5d528e1", discriminator: !433)
!400 = !{!401, !429}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !399, file: !2, baseType: !402, size: 64, align: 64, extraData: i64 0)
!402 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !397, file: !2, size: 64, align: 64, elements: !28, templateParams: !403, identifier: "e58bab26a5690860f86d543f88adea7a")
!403 = !{!404}
!404 = !DITemplateTypeParameter(name: "T", type: !405)
!405 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arc<std::thread::scoped::ScopeData>", scope: !203, file: !2, size: 64, align: 64, elements: !406, templateParams: !423, identifier: "7ed25dde1c11128688f3de0b5a70a958")
!406 = !{!407, !427}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !405, file: !2, baseType: !408, size: 64, align: 64)
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", scope: !52, file: !2, size: 64, align: 64, elements: !409, templateParams: !425, identifier: "ff76ffd683af82c79d71270e0bb91fe9")
!409 = !{!410}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !408, file: !2, baseType: !411, size: 64, align: 64)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::sync::ArcInner<std::thread::scoped::ScopeData>", baseType: !412, size: 64, align: 64, dwarfAddressSpace: 0)
!412 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<std::thread::scoped::ScopeData>", scope: !203, file: !2, size: 320, align: 64, elements: !413, templateParams: !423, identifier: "f2b0c476fed7a2f8d1903b2f6b0485e8")
!413 = !{!414, !415, !416}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !412, file: !2, baseType: !214, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !412, file: !2, baseType: !214, size: 64, align: 64, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !412, file: !2, baseType: !417, size: 192, align: 64, offset: 128)
!417 = !DICompositeType(tag: DW_TAG_structure_type, name: "ScopeData", scope: !418, file: !2, size: 192, align: 64, elements: !419, templateParams: !28, identifier: "20817ae6ef2c8174d403992a55266850")
!418 = !DINamespace(name: "scoped", scope: !192)
!419 = !{!420, !421, !422}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "num_running_threads", scope: !417, file: !2, baseType: !214, size: 64, align: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "a_thread_panicked", scope: !417, file: !2, baseType: !326, size: 8, align: 8, offset: 128)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "main_thread", scope: !417, file: !2, baseType: !195, size: 64, align: 64, offset: 64)
!423 = !{!424}
!424 = !DITemplateTypeParameter(name: "T", type: !417)
!425 = !{!426}
!426 = !DITemplateTypeParameter(name: "T", type: !412)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "phantom", scope: !405, file: !2, baseType: !428, align: 8)
!428 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !425, identifier: "becf7c1943d341c91d8397d327aff583")
!429 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !399, file: !2, baseType: !430, size: 64, align: 64)
!430 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !397, file: !2, size: 64, align: 64, elements: !431, templateParams: !403, identifier: "965bf7244209b910c04e3ac07f4912f")
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !430, file: !2, baseType: !405, size: 64, align: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, scope: !397, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !394, file: !2, baseType: !435, size: 192, align: 64, offset: 64)
!435 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", scope: !220, file: !2, size: 192, align: 64, elements: !436, templateParams: !472, identifier: "eb7bcfa5ea7b484b75a86311e0a3ebc6")
!436 = !{!437}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !435, file: !2, baseType: !438, size: 192, align: 64)
!438 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>", scope: !231, file: !2, size: 192, align: 64, elements: !439, templateParams: !28, identifier: "45598915a4947056ede1d33fc25bcd29")
!439 = !{!440}
!440 = !DICompositeType(tag: DW_TAG_variant_part, scope: !438, file: !2, size: 192, align: 64, elements: !441, templateParams: !28, identifier: "959e3ffd8c1b9a6a71ba2c40617f3c1", discriminator: !471)
!441 = !{!442, !467}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !440, file: !2, baseType: !443, size: 192, align: 64, extraData: i64 0)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !438, file: !2, size: 192, align: 64, elements: !28, templateParams: !444, identifier: "1479da203eecae8328653a2c5856a829")
!444 = !{!445}
!445 = !DITemplateTypeParameter(name: "T", type: !446)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", scope: !31, file: !2, size: 128, align: 64, elements: !447, templateParams: !28, identifier: "ff7327f4f565d57f588d410e9ddea48d")
!447 = !{!448}
!448 = !DICompositeType(tag: DW_TAG_variant_part, scope: !446, file: !2, size: 128, align: 64, elements: !449, templateParams: !28, identifier: "52bcafea47fdc093a89ce382e6a95700", discriminator: !466)
!449 = !{!450, !462}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !448, file: !2, baseType: !451, size: 128, align: 64, extraData: i64 0)
!451 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !446, file: !2, size: 128, align: 64, elements: !452, templateParams: !454, identifier: "4fc298a15573157ccb7e81565fdf9685")
!452 = !{!453}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !451, file: !2, baseType: !7, align: 8)
!454 = !{!41, !455}
!455 = !DITemplateTypeParameter(name: "E", type: !456)
!456 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !457, templateParams: !28, identifier: "f0f31b23b3f69bd76438b25fe58ed04b")
!457 = !{!458, !461}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !456, file: !2, baseType: !459, size: 64, align: 64)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64, align: 64, dwarfAddressSpace: 0)
!460 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn core::any::Any + core::marker::Send)", file: !2, align: 8, elements: !28, identifier: "eca8f7fd02b6d6b94d3c92b23b660554")
!461 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !456, file: !2, baseType: !128, size: 64, align: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !448, file: !2, baseType: !463, size: 128, align: 64)
!463 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !446, file: !2, size: 128, align: 64, elements: !464, templateParams: !454, identifier: "9346a086afab40dd9cdea7a7983c393c")
!464 = !{!465}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !463, file: !2, baseType: !456, size: 128, align: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, scope: !446, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !440, file: !2, baseType: !468, size: 192, align: 64, extraData: i64 1)
!468 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !438, file: !2, size: 192, align: 64, elements: !469, templateParams: !444, identifier: "46ac3a8135f8c8504adb7e0fa41963c3")
!469 = !{!470}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !468, file: !2, baseType: !446, size: 128, align: 64, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, scope: !438, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!472 = !{!473}
!473 = !DITemplateTypeParameter(name: "T", type: !438)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !394, file: !2, baseType: !475, align: 8)
!475 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<core::option::Option<&std::thread::scoped::ScopeData>>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !476, identifier: "12437ea3c9bcb4a1e7a9a98423ff8f55")
!476 = !{!477}
!477 = !DITemplateTypeParameter(name: "T", type: !478)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&std::thread::scoped::ScopeData>", scope: !231, file: !2, size: 64, align: 64, elements: !479, templateParams: !28, identifier: "2ee0ef21be33b12734ae04baafe5b2")
!479 = !{!480}
!480 = !DICompositeType(tag: DW_TAG_variant_part, scope: !478, file: !2, size: 64, align: 64, elements: !481, templateParams: !28, identifier: "2c9b859780c74ee98f47446212114488", discriminator: !491)
!481 = !{!482, !487}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !480, file: !2, baseType: !483, size: 64, align: 64, extraData: i64 0)
!483 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !478, file: !2, size: 64, align: 64, elements: !28, templateParams: !484, identifier: "197c888836267348d2be0b6d5f4c3de8")
!484 = !{!485}
!485 = !DITemplateTypeParameter(name: "T", type: !486)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::thread::scoped::ScopeData", baseType: !417, size: 64, align: 64, dwarfAddressSpace: 0)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !480, file: !2, baseType: !488, size: 64, align: 64)
!488 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !478, file: !2, size: 64, align: 64, elements: !489, templateParams: !484, identifier: "aa8e6829f1d653aa7f31126bfcf44711")
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !488, file: !2, baseType: !486, size: 64, align: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, scope: !478, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!492 = !{!493}
!493 = !DITemplateTypeParameter(name: "T", type: !394)
!494 = !{!495}
!495 = !DITemplateTypeParameter(name: "T", type: !389)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "phantom", scope: !382, file: !2, baseType: !497, align: 8)
!497 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::sync::ArcInner<std::thread::Packet<()>>>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !494, identifier: "ee4f7ed6b2d764b85c60519183fd7c51")
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "<&mut std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr> as core::fmt::Write>::{vtable}", scope: null, file: !2, type: !500, isLocal: true, isDefinition: true)
!500 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&mut std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr> as core::fmt::Write>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !501, vtableHolder: !508, templateParams: !28, identifier: "2debe91a3ced6dbdaf96e0d69977a443")
!501 = !{!502, !503, !504, !505, !506, !507}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !500, file: !2, baseType: !6, size: 64, align: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !500, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !500, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !500, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !500, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !500, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!509 = !DIGlobalVariableExpression(var: !510, expr: !DIExpression())
!510 = distinct !DIGlobalVariable(name: "<&i32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !511, isLocal: true, isDefinition: true)
!511 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&i32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !512, vtableHolder: !517, templateParams: !28, identifier: "e41da7ed75ed4863791811c5b4f5fafa")
!512 = !{!513, !514, !515, !516}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !511, file: !2, baseType: !6, size: 64, align: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !511, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !511, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !511, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !70, size: 64, align: 64, dwarfAddressSpace: 0)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "<std::io::error::Error as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !520, isLocal: true, isDefinition: true)
!520 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::io::error::Error as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !521, vtableHolder: !43, templateParams: !28, identifier: "5524bda69378138df0eaa44a0fa62936")
!521 = !{!522, !523, !524, !525}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !520, file: !2, baseType: !6, size: 64, align: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !520, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !520, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !520, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "<alloc::ffi::c_str::NulError as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !528, isLocal: true, isDefinition: true)
!528 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::ffi::c_str::NulError as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !529, vtableHolder: !534, templateParams: !28, identifier: "1b870bd9431ccc1d71adabe14fa4d734")
!529 = !{!530, !531, !532, !533}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !528, file: !2, baseType: !6, size: 64, align: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !528, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !528, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !528, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!534 = !DICompositeType(tag: DW_TAG_structure_type, name: "NulError", scope: !240, file: !2, size: 256, align: 64, elements: !535, templateParams: !28, identifier: "f0b155880f0e8602fd0be3023df941a4")
!535 = !{!536, !537}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !534, file: !2, baseType: !9, size: 64, align: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !534, file: !2, baseType: !338, size: 192, align: 64, offset: 64)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global> as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !540, isLocal: true, isDefinition: true)
!540 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global> as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !541, vtableHolder: !456, templateParams: !28, identifier: "2e8fbfd9211dac47eeee6b9a0e4bcd21")
!541 = !{!542, !543, !544, !545}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !540, file: !2, baseType: !6, size: 64, align: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !540, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !540, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !540, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "<&f32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !548, isLocal: true, isDefinition: true)
!548 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&f32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !549, vtableHolder: !554, templateParams: !28, identifier: "167dd032769a3561d40fd3e6fbb4e28f")
!549 = !{!550, !551, !552, !553}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !548, file: !2, baseType: !6, size: 64, align: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !548, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !548, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !548, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&f32", baseType: !555, size: 64, align: 64, dwarfAddressSpace: 0)
!555 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "<&[i32; 11] as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !558, isLocal: true, isDefinition: true)
!558 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&[i32; 11] as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !559, vtableHolder: !564, templateParams: !28, identifier: "93161247c3c0435d6a9ea9d97cf3ab43")
!559 = !{!560, !561, !562, !563}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !558, file: !2, baseType: !6, size: 64, align: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !558, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !558, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !558, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[i32; 11]", baseType: !565, size: 64, align: 64, dwarfAddressSpace: 0)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 352, align: 32, elements: !566)
!566 = !{!567}
!567 = !DISubrange(count: 11, lowerBound: 0)
!568 = !DIGlobalVariableExpression(var: !569, expr: !DIExpression())
!569 = distinct !DIGlobalVariable(name: "<&u32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !570, isLocal: true, isDefinition: true)
!570 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !571, vtableHolder: !576, templateParams: !28, identifier: "56f3ae9cd35b4a6d41c32c0359fd0048")
!571 = !{!572, !573, !574, !575}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !570, file: !2, baseType: !6, size: 64, align: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !570, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !570, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !570, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !275, size: 64, align: 64, dwarfAddressSpace: 0)
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "<&[i32; 16] as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !579, isLocal: true, isDefinition: true)
!579 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&[i32; 16] as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !580, vtableHolder: !585, templateParams: !28, identifier: "dcf34fa946d9628428fdab0b05413c16")
!580 = !{!581, !582, !583, !584}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !579, file: !2, baseType: !6, size: 64, align: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !579, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !579, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !579, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[i32; 16]", baseType: !586, size: 64, align: 64, dwarfAddressSpace: 0)
!586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 512, align: 32, elements: !587)
!587 = !{!588}
!588 = !DISubrange(count: 16, lowerBound: 0)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(name: "rust_gssi", linkageName: "_ZN13statics_tests13thread_locals9rust_gssi17ha42a983c30fd17ceE", scope: !591, file: !592, line: 16, type: !70, isLocal: true, isDefinition: true, align: 32)
!591 = !DINamespace(name: "thread_locals", scope: !380)
!592 = !DIFile(filename: "src/thread_locals.rs", directory: "/home/calvin/git/c2rust/tests/statics", checksumkind: CSK_MD5, checksum: "cd391bc1d5902258e41f853032563abd")
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "rust_gsti", linkageName: "_ZN13statics_tests13thread_locals9rust_gsti17h8c6e37da93ad1f39E", scope: !591, file: !592, line: 18, type: !70, isLocal: true, isDefinition: true, align: 32)
!595 = !DIGlobalVariableExpression(var: !596, expr: !DIExpression())
!596 = distinct !DIGlobalVariable(name: "rust_fssi", linkageName: "_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fssi17hd080597f2f0eb4e3E", scope: !597, file: !592, line: 27, type: !70, isLocal: true, isDefinition: true, align: 32)
!597 = !DINamespace(name: "rust_thread_entry", scope: !591)
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "rust_fsti", linkageName: "_ZN13statics_tests13thread_locals17rust_thread_entry9rust_fsti17hfed40b6f8f57ce71E", scope: !597, file: !592, line: 32, type: !70, isLocal: true, isDefinition: true, align: 32)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "rust_params", scope: !602, file: !603, line: 36, type: !604, isLocal: false, isDefinition: true, align: 32)
!602 = !DINamespace(name: "sections", scope: !380)
!603 = !DIFile(filename: "src/sections.rs", directory: "/home/calvin/git/c2rust/tests/statics", checksumkind: CSK_MD5, checksum: "60c06af74b7303a7a3c05de6c400bc5c")
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !605, size: 192, align: 32, elements: !610)
!605 = !DICompositeType(tag: DW_TAG_structure_type, name: "Foo", scope: !602, file: !2, size: 96, align: 32, elements: !606, templateParams: !28, identifier: "9ad07ad48b9a18964dc1cd3dd0f3e53f")
!606 = !{!607, !608, !609}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !605, file: !2, baseType: !275, size: 32, align: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !605, file: !2, baseType: !70, size: 32, align: 32, offset: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !605, file: !2, baseType: !555, size: 32, align: 32, offset: 64)
!610 = !{!611}
!611 = !DISubrange(count: 2, lowerBound: 0)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "rust_dont_section_a", scope: !602, file: !603, line: 55, type: !70, isLocal: false, isDefinition: true, align: 32)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "rust_dont_section_b", scope: !602, file: !603, line: 57, type: !70, isLocal: false, isDefinition: true, align: 32)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "rust_dont_section_c", scope: !602, file: !603, line: 59, type: !618, isLocal: false, isDefinition: true, align: 64)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i32", baseType: !70, size: 64, align: 64, dwarfAddressSpace: 0)
!619 = !DIGlobalVariableExpression(var: !620, expr: !DIExpression())
!620 = distinct !DIGlobalVariable(name: "rust_dont_section_d", scope: !602, file: !603, line: 63, type: !618, isLocal: false, isDefinition: true, align: 64)
!621 = !DIGlobalVariableExpression(var: !622, expr: !DIExpression())
!622 = distinct !DIGlobalVariable(name: "rust_dont_section_foo", scope: !602, file: !603, line: 68, type: !605, isLocal: false, isDefinition: true, align: 32)
!623 = !DIGlobalVariableExpression(var: !624, expr: !DIExpression())
!624 = distinct !DIGlobalVariable(name: "rust_dont_section_me", scope: !602, file: !603, line: 70, type: !275, isLocal: false, isDefinition: true, align: 32)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "rust_bar", scope: !602, file: !603, line: 73, type: !627, isLocal: false, isDefinition: true, align: 64)
!627 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bar", scope: !602, file: !2, size: 64, align: 64, elements: !628, templateParams: !28, identifier: "efa2886fa8785d90fe647da8d1b9c00f")
!628 = !{!629}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "bar", scope: !627, file: !2, baseType: !618, size: 64, align: 64)
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "rust_int_to_pointer", scope: !602, file: !603, line: 77, type: !632, isLocal: false, isDefinition: true, align: 64)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::ffi::c_void", baseType: !633, size: 64, align: 64, dwarfAddressSpace: 0)
!633 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_void", scope: !634, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagEnumClass, elements: !635)
!634 = !DINamespace(name: "ffi", scope: !32)
!635 = !{!636, !637}
!636 = !DIEnumerator(name: "__variant1", value: 0, isUnsigned: true)
!637 = !DIEnumerator(name: "__variant2", value: 1, isUnsigned: true)
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "rust_null_to_ptr_ty", scope: !602, file: !603, line: 81, type: !160, isLocal: false, isDefinition: true, align: 64)
!640 = !DIGlobalVariableExpression(var: !641, expr: !DIExpression())
!641 = distinct !DIGlobalVariable(name: "rust_section_me", scope: !602, file: !603, line: 83, type: !275, isLocal: false, isDefinition: true, align: 32)
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "rust_section_me2", scope: !602, file: !603, line: 85, type: !70, isLocal: false, isDefinition: true, align: 32)
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "rust_section_me3", scope: !602, file: !603, line: 87, type: !275, isLocal: false, isDefinition: true, align: 32)
!646 = !DIGlobalVariableExpression(var: !647, expr: !DIExpression())
!647 = distinct !DIGlobalVariable(name: "rust_section_me4", scope: !602, file: !603, line: 89, type: !275, isLocal: false, isDefinition: true, align: 32)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "rust_section_me5", scope: !602, file: !603, line: 91, type: !275, isLocal: false, isDefinition: true, align: 32)
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "rust_section_foo_b_field", scope: !602, file: !603, line: 93, type: !605, isLocal: false, isDefinition: true, align: 32)
!652 = !DIGlobalVariableExpression(var: !653, expr: !DIExpression())
!653 = distinct !DIGlobalVariable(name: "rust_section_num_params", scope: !602, file: !603, line: 95, type: !275, isLocal: false, isDefinition: true, align: 32)
!654 = !DIGlobalVariableExpression(var: !655, expr: !DIExpression())
!655 = distinct !DIGlobalVariable(name: "rust_if_expr", scope: !602, file: !603, line: 97, type: !160, isLocal: false, isDefinition: true, align: 64)
!656 = !DIGlobalVariableExpression(var: !657, expr: !DIExpression())
!657 = distinct !DIGlobalVariable(name: "rust_s", scope: !602, file: !603, line: 99, type: !658, isLocal: false, isDefinition: true, align: 64)
!658 = !DICompositeType(tag: DW_TAG_structure_type, name: "stat", scope: !602, file: !2, size: 64, align: 64, elements: !659, templateParams: !28, identifier: "3c664c647a4c1e91bda6cd847a2474f8")
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !658, file: !2, baseType: !661, size: 64, align: 64)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut *mut i32", baseType: !618, size: 64, align: 64, dwarfAddressSpace: 0)
!662 = !DIGlobalVariableExpression(var: !663, expr: !DIExpression())
!663 = distinct !DIGlobalVariable(name: "rust_s2", scope: !602, file: !603, line: 103, type: !664, isLocal: false, isDefinition: true, align: 64)
!664 = !DICompositeType(tag: DW_TAG_structure_type, name: "stat2", scope: !602, file: !2, size: 64, align: 64, elements: !665, templateParams: !28, identifier: "93ab5a07359007639e1810ed6b6e9a8")
!665 = !{!666}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !664, file: !2, baseType: !618, size: 64, align: 64)
!667 = !DIGlobalVariableExpression(var: !668, expr: !DIExpression())
!668 = distinct !DIGlobalVariable(name: "rust_int_to_fn_ptr", scope: !602, file: !603, line: 107, type: !669, isLocal: false, isDefinition: true, align: 64)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<unsafe extern \22C\22 fn()>", scope: !231, file: !2, size: 64, align: 64, elements: !670, templateParams: !28, identifier: "56185c42dbbd8d93ae6e42c26d54f356")
!670 = !{!671}
!671 = !DICompositeType(tag: DW_TAG_variant_part, scope: !669, file: !2, size: 64, align: 64, elements: !672, templateParams: !28, identifier: "d0de43b7bc6ed01c82a002c1a646e119", discriminator: !682)
!672 = !{!673, !678}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !671, file: !2, baseType: !674, size: 64, align: 64, extraData: i64 0)
!674 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !669, file: !2, size: 64, align: 64, elements: !28, templateParams: !675, identifier: "4e80b015fd961ee5af3a668479d55524")
!675 = !{!676}
!676 = !DITemplateTypeParameter(name: "T", type: !677)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe extern \22C\22 fn()", baseType: !179, size: 64, align: 64, dwarfAddressSpace: 0)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !671, file: !2, baseType: !679, size: 64, align: 64)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !669, file: !2, size: 64, align: 64, elements: !680, templateParams: !675, identifier: "9789a6fe10048157e51a215fa06e8d23")
!680 = !{!681}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !679, file: !2, baseType: !677, size: 64, align: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, scope: !669, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "rust_int_to_fn_ptr2", scope: !602, file: !603, line: 109, type: !685, isLocal: false, isDefinition: true, align: 64)
!685 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<unsafe extern \22C\22 fn(i32, ...)>", scope: !231, file: !2, size: 64, align: 64, elements: !686, templateParams: !28, identifier: "74473353eec75e89b8225c6ac10dde2d")
!686 = !{!687}
!687 = !DICompositeType(tag: DW_TAG_variant_part, scope: !685, file: !2, size: 64, align: 64, elements: !688, templateParams: !28, identifier: "37b8fa4fdd51250978926e663ce2207f", discriminator: !700)
!688 = !{!689, !696}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !687, file: !2, baseType: !690, size: 64, align: 64, extraData: i64 0)
!690 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !685, file: !2, size: 64, align: 64, elements: !28, templateParams: !691, identifier: "b57fb6dc6233a440d2713dc8b1170e23")
!691 = !{!692}
!692 = !DITemplateTypeParameter(name: "T", type: !693)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe extern \22C\22 fn(i32, ...)", baseType: !694, size: 64, align: 64, dwarfAddressSpace: 0)
!694 = !DISubroutineType(types: !695)
!695 = !{null, !70}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !687, file: !2, baseType: !697, size: 64, align: 64)
!697 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !685, file: !2, size: 64, align: 64, elements: !698, templateParams: !691, identifier: "9c7504d99f323bc6232704883dfa4818")
!698 = !{!699}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !697, file: !2, baseType: !693, size: 64, align: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!701 = !DIGlobalVariableExpression(var: !702, expr: !DIExpression())
!702 = distinct !DIGlobalVariable(name: "rust_int_to_fn_ptr3", scope: !602, file: !603, line: 113, type: !669, isLocal: false, isDefinition: true, align: 64)
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "rust_sectioned_scoped_init", linkageName: "_ZN13statics_tests8sections26rust_sectioned_scoped_init17h8d245479008eab85E", scope: !602, file: !603, line: 114, type: !160, isLocal: true, isDefinition: true, align: 64)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "rust_not_sectioned", linkageName: "_ZN13statics_tests8sections26rust_fn_scoped_static_init18rust_not_sectioned17hbdf5c484f106ab02E", scope: !707, file: !603, line: 121, type: !275, isLocal: true, isDefinition: true, align: 32)
!707 = !DINamespace(name: "rust_fn_scoped_static_init", scope: !602)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "rust_fn_scoped_extern", scope: !602, file: !603, line: 128, type: !160, isLocal: false, isDefinition: true, align: 64)
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "rust_sectioned_array", linkageName: "_ZN13statics_tests8sections20rust_sectioned_array17h1e43ae8f57627000E", scope: !602, file: !603, line: 129, type: !712, isLocal: true, isDefinition: true, align: 64)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 64, align: 64, elements: !713)
!713 = !{!714}
!714 = !DISubrange(count: 1, lowerBound: 0)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "INIT_ARRAY", linkageName: "_ZN13statics_tests8sections10INIT_ARRAY17h99c3ca5e85ae4ca0E", scope: !602, file: !603, line: 193, type: !717, isLocal: true, isDefinition: true, align: 64)
!717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 64, align: 64, elements: !713)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "gesi", scope: !379, file: !720, line: 13, type: !275, isLocal: false, isDefinition: true, align: 32)
!720 = !DIFile(filename: "src/test_thread_locals.rs", directory: "/home/calvin/git/c2rust/tests/statics", checksumkind: CSK_MD5, checksum: "2adc41383d45fad3662ebc1e6cb2b16d")
!721 = !DIGlobalVariableExpression(var: !722, expr: !DIExpression())
!722 = distinct !DIGlobalVariable(name: "rust_gesi", scope: !379, file: !720, line: 15, type: !275, isLocal: false, isDefinition: true, align: 32)
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "fesi", scope: !379, file: !720, line: 17, type: !275, isLocal: false, isDefinition: true, align: 32)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "rust_fesi", scope: !379, file: !720, line: 19, type: !275, isLocal: false, isDefinition: true, align: 32)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "geti", scope: !379, file: !720, line: 22, type: !275, isLocal: false, isDefinition: true, align: 32)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "rust_geti", scope: !379, file: !720, line: 25, type: !275, isLocal: false, isDefinition: true, align: 32)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "feti", scope: !379, file: !720, line: 28, type: !275, isLocal: false, isDefinition: true, align: 32)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "rust_feti", scope: !379, file: !720, line: 31, type: !275, isLocal: false, isDefinition: true, align: 32)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "rust_used_static", scope: !737, file: !738, line: 17, type: !70, isLocal: false, isDefinition: true, align: 32)
!737 = !DINamespace(name: "attributes", scope: !380)
!738 = !DIFile(filename: "src/attributes.rs", directory: "/home/calvin/git/c2rust/tests/statics", checksumkind: CSK_MD5, checksum: "483571ba4bb14af3341ea906d3627900")
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "rust_used_static2", scope: !737, file: !738, line: 21, type: !70, isLocal: false, isDefinition: true, align: 32)
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "rust_used_static4", linkageName: "_ZN13statics_tests10attributes17rust_used_static417hc073714b54728f09E", scope: !737, file: !738, line: 24, type: !70, isLocal: true, isDefinition: true, align: 32)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "rust_used_static3", scope: !737, file: !738, line: 28, type: !70, isLocal: false, isDefinition: true, align: 32)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "rust_no_attrs", scope: !737, file: !738, line: 30, type: !70, isLocal: false, isDefinition: true, align: 32)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "rust_initialized_extern", scope: !737, file: !738, line: 33, type: !70, isLocal: false, isDefinition: true, align: 32)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "INIT_ARRAY", linkageName: "_ZN13statics_tests10attributes10INIT_ARRAY17h5f9cd6bf7e743198E", scope: !737, file: !738, line: 42, type: !717, isLocal: true, isDefinition: true, align: 64)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "rust_visible_everywhere", scope: !753, file: !754, line: 22, type: !70, isLocal: false, isDefinition: true, align: 32)
!753 = !DINamespace(name: "storage", scope: !380)
!754 = !DIFile(filename: "src/storage.rs", directory: "/home/calvin/git/c2rust/tests/statics", checksumkind: CSK_MD5, checksum: "c48d7370d08d41b263ffcf475eefbe82")
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "rust_counter", linkageName: "_ZN13statics_tests7storage12rust_counter17he98b1991b3a2a6e9E", scope: !753, file: !754, line: 23, type: !70, isLocal: true, isDefinition: true, align: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "rust_k", linkageName: "_ZN13statics_tests7storage8rust_baz6rust_k17h896fedec22886b3eE", scope: !759, file: !754, line: 25, type: !70, isLocal: true, isDefinition: true, align: 32)
!759 = !DINamespace(name: "rust_baz", scope: !753)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "rust_hello", linkageName: "_ZN13statics_tests7storage10rust_hello17h3904f6f05287022dE", scope: !753, file: !754, line: 30, type: !762, isLocal: true, isDefinition: true, align: 64)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i8", baseType: !763, size: 64, align: 64, dwarfAddressSpace: 0)
!763 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "rust_world", linkageName: "_ZN13statics_tests7storage10rust_entry10rust_world17he2f89ceb8d536c35E", scope: !766, file: !754, line: 40, type: !762, isLocal: true, isDefinition: true, align: 64)
!766 = !DINamespace(name: "rust_entry", scope: !753)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "rust_Foo", linkageName: "_ZN13statics_tests7storage10rust_entry8rust_Foo17h34d66082d6db67beE", scope: !766, file: !754, line: 42, type: !769, isLocal: true, isDefinition: true, align: 8)
!769 = !DICompositeType(tag: DW_TAG_structure_type, name: "StringStruct", scope: !753, file: !2, size: 24, align: 8, elements: !770, templateParams: !28, identifier: "67dacea366ce22dd80837b7c53942b70")
!770 = !{!771}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !769, file: !2, baseType: !772, size: 24, align: 8)
!772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !763, size: 24, align: 8, elements: !130)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "rust_Bar", linkageName: "_ZN13statics_tests7storage10rust_entry8rust_Bar17h1b7bb100cb6d99cfE", scope: !766, file: !754, line: 53, type: !775, isLocal: true, isDefinition: true, align: 32)
!775 = !DICompositeType(tag: DW_TAG_union_type, name: "StringUnion", scope: !753, file: !2, size: 32, align: 32, elements: !776, templateParams: !28, identifier: "52a4ab081b8b0022f60e10cc921ff885")
!776 = !{!777, !778}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !775, file: !2, baseType: !772, size: 24, align: 8)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !775, file: !2, baseType: !70, size: 32, align: 32)
!779 = !{i32 7, !"PIC Level", i32 2}
!780 = !{i32 7, !"PIE Level", i32 2}
!781 = !{i32 2, !"RtLibUseGOT", i32 1}
!782 = !{i32 2, !"Dwarf Version", i32 4}
!783 = !{i32 2, !"Debug Info Version", i32 3}
!784 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !785, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !786, globals: !887)
!785 = !DIFile(filename: "src/lib.rs/@/zf7m485wsz09ju", directory: "/home/calvin/git/c2rust/tests/statics")
!786 = !{!787, !77, !855, !864, !870, !877, !883, !633}
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !788, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagEnumClass, elements: !790)
!788 = !DINamespace(name: "valid_align", scope: !789)
!789 = !DINamespace(name: "mem", scope: !32)
!790 = !{!791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854}
!791 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!792 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!793 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!794 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!795 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!796 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!797 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!798 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!799 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!800 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!801 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!802 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!803 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!804 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!805 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!806 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!807 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!808 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!809 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!810 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!811 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!812 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!813 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!814 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!815 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!816 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!817 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!818 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!819 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!820 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!821 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!822 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!823 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!824 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!825 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!826 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!827 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!828 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!829 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!830 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!831 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!832 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!833 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!834 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!835 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!836 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!837 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!838 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!839 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!840 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!841 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!842 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!843 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!844 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!845 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!846 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!847 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!848 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!849 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!850 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!851 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!852 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!853 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!854 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!855 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !856, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagEnumClass, elements: !859)
!856 = !DINamespace(name: "v1", scope: !857)
!857 = !DINamespace(name: "rt", scope: !858)
!858 = !DINamespace(name: "fmt", scope: !32)
!859 = !{!860, !861, !862, !863}
!860 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!861 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!862 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!863 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!864 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !865, file: !2, baseType: !763, size: 8, align: 8, flags: DIFlagEnumClass, elements: !866)
!865 = !DINamespace(name: "cmp", scope: !32)
!866 = !{!867, !868, !869}
!867 = !DIEnumerator(name: "Less", value: 255)
!868 = !DIEnumerator(name: "Equal", value: 0)
!869 = !DIEnumerator(name: "Greater", value: 1)
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !215, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagEnumClass, elements: !871)
!871 = !{!872, !873, !874, !875, !876}
!872 = !DIEnumerator(name: "Relaxed", value: 0, isUnsigned: true)
!873 = !DIEnumerator(name: "Release", value: 1, isUnsigned: true)
!874 = !DIEnumerator(name: "Acquire", value: 2, isUnsigned: true)
!875 = !DIEnumerator(name: "AcqRel", value: 3, isUnsigned: true)
!876 = !DIEnumerator(name: "SeqCst", value: 4, isUnsigned: true)
!877 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !878, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagEnumClass, elements: !879)
!878 = !DINamespace(name: "panicking", scope: !32)
!879 = !{!880, !881, !882}
!880 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!881 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!882 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!883 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !343, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagEnumClass, elements: !884)
!884 = !{!885, !886}
!885 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!886 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!887 = !{!0, !163, !181, !498, !509, !518, !526, !538, !546, !556, !568, !577, !589, !593, !595, !598, !600, !612, !614, !616, !619, !621, !623, !625, !630, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !662, !667, !683, !701, !703, !705, !708, !710, !715, !718, !721, !723, !725, !727, !729, !731, !733, !735, !739, !741, !743, !745, !747, !749, !751, !755, !757, !760, !764, !767, !773}
!888 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h5f751f0d5c54b054E", scope: !890, file: !889, line: 278, type: !893, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !907)
!889 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!890 = !DINamespace(name: "{impl#3}", scope: !891)
!891 = !DINamespace(name: "index", scope: !892)
!892 = !DINamespace(name: "slice", scope: !32)
!893 = !DISubroutineType(types: !894)
!894 = !{!895, !899, !895}
!895 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !896, templateParams: !28, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!896 = !{!897, !898}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !895, file: !2, baseType: !148, size: 64, align: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !895, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !900, file: !2, size: 128, align: 64, elements: !902, templateParams: !905, identifier: "855eb37746b15049ea4556b174e97dd7")
!900 = !DINamespace(name: "range", scope: !901)
!901 = !DINamespace(name: "ops", scope: !32)
!902 = !{!903, !904}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !899, file: !2, baseType: !9, size: 64, align: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !899, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!905 = !{!906}
!906 = !DITemplateTypeParameter(name: "Idx", type: !9)
!907 = !{!908, !909, !910}
!908 = !DILocalVariable(name: "self", arg: 1, scope: !888, file: !889, line: 278, type: !899)
!909 = !DILocalVariable(name: "slice", arg: 2, scope: !888, file: !889, line: 278, type: !895)
!910 = !DILocalVariable(name: "runtime", scope: !911, file: !889, line: 285, type: !914, align: 8)
!911 = !DILexicalBlockFile(scope: !912, file: !889, discriminator: 0)
!912 = distinct !DILexicalBlock(scope: !888, file: !913, line: 2336, column: 13)
!913 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!914 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !915, file: !2, size: 192, align: 64, elements: !916, templateParams: !28, identifier: "3899877b232b8d576af2a125fa395e55")
!915 = !DINamespace(name: "get_unchecked", scope: !890)
!916 = !{!917, !919, !920}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !914, file: !2, baseType: !918, size: 64, align: 64)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !914, file: !2, baseType: !918, size: 64, align: 64, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !914, file: !2, baseType: !921, size: 64, align: 64, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const [u8]", baseType: !895, size: 64, align: 64, dwarfAddressSpace: 0)
!922 = !DILocation(line: 278, column: 29, scope: !888)
!923 = !DILocation(line: 278, column: 35, scope: !888)
!924 = !DILocation(line: 285, column: 13, scope: !911)
!925 = !DILocation(line: 286, column: 39, scope: !888)
!926 = !DILocalVariable(name: "self", scope: !927, file: !889, line: 286, type: !895, align: 8)
!927 = !DILexicalBlockFile(scope: !928, file: !889, discriminator: 0)
!928 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1088b55685155f31E", scope: !930, file: !929, line: 1385, type: !932, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !934)
!929 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!930 = !DINamespace(name: "{impl#1}", scope: !931)
!931 = !DINamespace(name: "const_ptr", scope: !53)
!932 = !DISubroutineType(types: !933)
!933 = !{!353, !895}
!934 = !{!926}
!935 = !DILocation(line: 286, column: 39, scope: !927, inlinedAt: !925)
!936 = !DILocalVariable(name: "self", scope: !937, file: !889, line: 286, type: !353, align: 8)
!937 = !DILexicalBlockFile(scope: !938, file: !889, discriminator: 0)
!938 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h82208e5cbd5d7609E", scope: !939, file: !929, line: 871, type: !940, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !942)
!939 = !DINamespace(name: "{impl#0}", scope: !931)
!940 = !DISubroutineType(types: !941)
!941 = !{!353, !353, !9}
!942 = !{!936, !943}
!943 = !DILocalVariable(name: "count", scope: !937, file: !889, line: 286, type: !9, align: 8)
!944 = !DILocation(line: 286, column: 39, scope: !937, inlinedAt: !925)
!945 = !DILocation(line: 286, column: 58, scope: !888)
!946 = !DILocalVariable(name: "self", scope: !947, file: !889, line: 286, type: !353, align: 8)
!947 = !DILexicalBlockFile(scope: !948, file: !889, discriminator: 0)
!948 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17ha09c9658f9aa8a93E", scope: !939, file: !929, line: 453, type: !949, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !952)
!949 = !DISubroutineType(types: !950)
!950 = !{!353, !353, !951}
!951 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!952 = !{!946, !953}
!953 = !DILocalVariable(name: "count", scope: !947, file: !889, line: 286, type: !951, align: 8)
!954 = !DILocation(line: 286, column: 39, scope: !947, inlinedAt: !955)
!955 = !DILocation(line: 876, column: 18, scope: !938, inlinedAt: !925)
!956 = !DILocalVariable(name: "data", scope: !957, file: !889, line: 286, type: !353, align: 8)
!957 = !DILexicalBlockFile(scope: !958, file: !889, discriminator: 0)
!958 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h4a7908e46ff95e2bE", scope: !53, file: !959, line: 695, type: !960, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !962)
!959 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!960 = !DISubroutineType(types: !961)
!961 = !{!895, !353, !9}
!962 = !{!956, !963}
!963 = !DILocalVariable(name: "len", scope: !957, file: !889, line: 286, type: !9, align: 8)
!964 = !DILocation(line: 286, column: 13, scope: !957, inlinedAt: !965)
!965 = !DILocation(line: 286, column: 13, scope: !888)
!966 = !DILocation(line: 286, column: 71, scope: !888)
!967 = !DILocalVariable(name: "self", scope: !968, file: !889, line: 286, type: !353, align: 8)
!968 = !DILexicalBlockFile(scope: !969, file: !889, discriminator: 0)
!969 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h41c23c76c3fbf195E", scope: !939, file: !929, line: 46, type: !970, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !973, retainedNodes: !972)
!970 = !DISubroutineType(types: !971)
!971 = !{!6, !353}
!972 = !{!967}
!973 = !{!333, !974}
!974 = !DITemplateTypeParameter(name: "U", type: !7)
!975 = !DILocation(line: 286, column: 13, scope: !968, inlinedAt: !976)
!976 = !DILocation(line: 696, column: 20, scope: !958, inlinedAt: !965)
!977 = !DILocalVariable(name: "data_address", scope: !978, file: !889, line: 286, type: !6, align: 8)
!978 = !DILexicalBlockFile(scope: !979, file: !889, discriminator: 0)
!979 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h43846fe7970ea603E", scope: !981, file: !980, line: 110, type: !982, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !984)
!980 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!981 = !DINamespace(name: "metadata", scope: !53)
!982 = !DISubroutineType(types: !983)
!983 = !{!895, !6, !9}
!984 = !{!977, !985}
!985 = !DILocalVariable(name: "metadata", scope: !978, file: !889, line: 286, type: !9, align: 8)
!986 = !DILocation(line: 286, column: 13, scope: !978, inlinedAt: !987)
!987 = !DILocation(line: 696, column: 5, scope: !958, inlinedAt: !965)
!988 = !DILocation(line: 288, column: 6, scope: !888)
!989 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7652abd2900ec541E", scope: !890, file: !889, line: 291, type: !990, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !996)
!990 = !DISubroutineType(types: !991)
!991 = !{!992, !899, !992}
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !993, templateParams: !28, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !992, file: !2, baseType: !148, size: 64, align: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !992, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!996 = !{!997, !998, !999}
!997 = !DILocalVariable(name: "self", arg: 1, scope: !989, file: !889, line: 291, type: !899)
!998 = !DILocalVariable(name: "slice", arg: 2, scope: !989, file: !889, line: 291, type: !992)
!999 = !DILocalVariable(name: "runtime", scope: !1000, file: !889, line: 294, type: !1002, align: 8)
!1000 = !DILexicalBlockFile(scope: !1001, file: !889, discriminator: 0)
!1001 = distinct !DILexicalBlock(scope: !989, file: !913, line: 2336, column: 13)
!1002 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !1003, file: !2, size: 192, align: 64, elements: !1004, templateParams: !28, identifier: "28ce5b8f96862f9bf6a66e974f54fbc9")
!1003 = !DINamespace(name: "get_unchecked_mut", scope: !890)
!1004 = !{!1005, !1006, !1007}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !1002, file: !2, baseType: !918, size: 64, align: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !1002, file: !2, baseType: !918, size: 64, align: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !1002, file: !2, baseType: !1008, size: 64, align: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [u8]", baseType: !992, size: 64, align: 64, dwarfAddressSpace: 0)
!1009 = !DILocation(line: 291, column: 33, scope: !989)
!1010 = !DILocation(line: 291, column: 39, scope: !989)
!1011 = !DILocation(line: 294, column: 13, scope: !1000)
!1012 = !DILocation(line: 295, column: 43, scope: !989)
!1013 = !DILocalVariable(name: "self", scope: !1014, file: !889, line: 295, type: !992, align: 8)
!1014 = !DILexicalBlockFile(scope: !1015, file: !889, discriminator: 0)
!1015 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h88045799f044eca6E", scope: !1017, file: !1016, line: 1778, type: !1019, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1022)
!1016 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!1017 = !DINamespace(name: "{impl#1}", scope: !1018)
!1018 = !DINamespace(name: "mut_ptr", scope: !53)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!1021, !992}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!1022 = !{!1013}
!1023 = !DILocation(line: 295, column: 43, scope: !1014, inlinedAt: !1012)
!1024 = !DILocalVariable(name: "self", scope: !1025, file: !889, line: 295, type: !1021, align: 8)
!1025 = !DILexicalBlockFile(scope: !1026, file: !889, discriminator: 0)
!1026 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h24d8ee515aac51bfE", scope: !1027, file: !1016, line: 985, type: !1028, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1030)
!1027 = !DINamespace(name: "{impl#0}", scope: !1018)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!1021, !1021, !9}
!1030 = !{!1024, !1031}
!1031 = !DILocalVariable(name: "count", scope: !1025, file: !889, line: 295, type: !9, align: 8)
!1032 = !DILocation(line: 295, column: 43, scope: !1025, inlinedAt: !1012)
!1033 = !DILocation(line: 295, column: 66, scope: !989)
!1034 = !DILocalVariable(name: "self", scope: !1035, file: !889, line: 295, type: !1021, align: 8)
!1035 = !DILexicalBlockFile(scope: !1036, file: !889, discriminator: 0)
!1036 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h740b8c86c1df61cfE", scope: !1027, file: !1016, line: 465, type: !1037, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1039)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!1021, !1021, !951}
!1039 = !{!1034, !1040}
!1040 = !DILocalVariable(name: "count", scope: !1035, file: !889, line: 295, type: !951, align: 8)
!1041 = !DILocation(line: 295, column: 43, scope: !1035, inlinedAt: !1042)
!1042 = !DILocation(line: 990, column: 18, scope: !1026, inlinedAt: !1012)
!1043 = !DILocalVariable(name: "data", scope: !1044, file: !889, line: 295, type: !1021, align: 8)
!1044 = !DILexicalBlockFile(scope: !1045, file: !889, discriminator: 0)
!1045 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hbea3f0d34aed7cbeE", scope: !53, file: !959, line: 727, type: !1046, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1048)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!992, !1021, !9}
!1048 = !{!1043, !1049}
!1049 = !DILocalVariable(name: "len", scope: !1044, file: !889, line: 295, type: !9, align: 8)
!1050 = !DILocation(line: 295, column: 13, scope: !1044, inlinedAt: !1051)
!1051 = !DILocation(line: 295, column: 13, scope: !989)
!1052 = !DILocation(line: 295, column: 79, scope: !989)
!1053 = !DILocalVariable(name: "self", scope: !1054, file: !889, line: 295, type: !1021, align: 8)
!1054 = !DILexicalBlockFile(scope: !1055, file: !889, discriminator: 0)
!1055 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h91b2ca1930163954E", scope: !1027, file: !1016, line: 45, type: !1056, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !973, retainedNodes: !1059)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!1058, !1021}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1059 = !{!1053}
!1060 = !DILocation(line: 295, column: 13, scope: !1054, inlinedAt: !1061)
!1061 = !DILocation(line: 728, column: 24, scope: !1045, inlinedAt: !1051)
!1062 = !DILocalVariable(name: "data_address", scope: !1063, file: !889, line: 295, type: !1058, align: 8)
!1063 = !DILexicalBlockFile(scope: !1064, file: !889, discriminator: 0)
!1064 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h13ff56bac2312bbbE", scope: !981, file: !980, line: 127, type: !1065, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1067)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!992, !1058, !9}
!1067 = !{!1062, !1068}
!1068 = !DILocalVariable(name: "metadata", scope: !1063, file: !889, line: 295, type: !9, align: 8)
!1069 = !DILocation(line: 295, column: 13, scope: !1063, inlinedAt: !1070)
!1070 = !DILocation(line: 728, column: 5, scope: !1045, inlinedAt: !1051)
!1071 = !DILocation(line: 297, column: 6, scope: !989)
!1072 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h1044681f6d30361aE", scope: !890, file: !889, line: 258, type: !1073, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1092)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!1075, !899, !1083}
!1075 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[u8]>", scope: !231, file: !2, size: 128, align: 64, elements: !1076, templateParams: !28, identifier: "a10dd6c8cbc031c66bcb157397a8ab34")
!1076 = !{!1077}
!1077 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1075, file: !2, size: 128, align: 64, elements: !1078, templateParams: !28, identifier: "f5a6694eae942d8dfdfecb1108411145", discriminator: !1091)
!1078 = !{!1079, !1087}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1077, file: !2, baseType: !1080, size: 128, align: 64, extraData: i64 0)
!1080 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1075, file: !2, size: 128, align: 64, elements: !28, templateParams: !1081, identifier: "f917b5f3e834899fdc042dd32762d34c")
!1081 = !{!1082}
!1082 = !DITemplateTypeParameter(name: "T", type: !1083)
!1083 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !1084, templateParams: !28, identifier: "7d49e60d2ca720f66806f7375f860e2")
!1084 = !{!1085, !1086}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1083, file: !2, baseType: !148, size: 64, align: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1083, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1077, file: !2, baseType: !1088, size: 128, align: 64)
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1075, file: !2, size: 128, align: 64, elements: !1089, templateParams: !1081, identifier: "ec71ed770ec76ed84081bfa9fc187739")
!1089 = !{!1090}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1088, file: !2, baseType: !1083, size: 128, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, scope: !1075, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!1092 = !{!1093, !1094}
!1093 = !DILocalVariable(name: "self", arg: 1, scope: !1072, file: !889, line: 258, type: !899)
!1094 = !DILocalVariable(name: "slice", arg: 2, scope: !1072, file: !889, line: 258, type: !1083)
!1095 = !DILocation(line: 258, column: 12, scope: !1072)
!1096 = !DILocation(line: 258, column: 18, scope: !1072)
!1097 = !DILocation(line: 259, column: 12, scope: !1072)
!1098 = !DILocation(line: 259, column: 37, scope: !1072)
!1099 = !{i8 0, i8 2}
!1100 = !DILocation(line: 263, column: 29, scope: !1072)
!1101 = !DILocation(line: 260, column: 13, scope: !1072)
!1102 = !DILocation(line: 259, column: 9, scope: !1072)
!1103 = !DILocation(line: 265, column: 6, scope: !1072)
!1104 = !{i64 1}
!1105 = !DILocation(line: 263, column: 22, scope: !1072)
!1106 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hf4ddb75c2013ce2dE", scope: !890, file: !889, line: 300, type: !1107, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1117)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!1083, !899, !1083, !1109}
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !1110, size: 64, align: 64, dwarfAddressSpace: 0)
!1110 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !1111, file: !2, size: 192, align: 64, elements: !1113, templateParams: !28, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!1111 = !DINamespace(name: "location", scope: !1112)
!1112 = !DINamespace(name: "panic", scope: !32)
!1113 = !{!1114, !1115, !1116}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1110, file: !2, baseType: !145, size: 128, align: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1110, file: !2, baseType: !275, size: 32, align: 32, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1110, file: !2, baseType: !275, size: 32, align: 32, offset: 160)
!1117 = !{!1118, !1119}
!1118 = !DILocalVariable(name: "self", arg: 1, scope: !1106, file: !889, line: 300, type: !899)
!1119 = !DILocalVariable(name: "slice", arg: 2, scope: !1106, file: !889, line: 300, type: !1083)
!1120 = !DILocation(line: 300, column: 14, scope: !1106)
!1121 = !DILocation(line: 300, column: 20, scope: !1106)
!1122 = !DILocation(line: 301, column: 12, scope: !1106)
!1123 = !DILocation(line: 303, column: 19, scope: !1106)
!1124 = !DILocation(line: 302, column: 13, scope: !1106)
!1125 = !DILocation(line: 307, column: 20, scope: !1106)
!1126 = !DILocation(line: 304, column: 13, scope: !1106)
!1127 = !DILocation(line: 308, column: 6, scope: !1106)
!1128 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h92d2315a36a526acE", scope: !890, file: !889, line: 311, type: !1129, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1135)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!1131, !899, !1131, !1109}
!1131 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 128, align: 64, elements: !1132, templateParams: !28, identifier: "188333407bebfa65121ceca786627665")
!1132 = !{!1133, !1134}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1131, file: !2, baseType: !148, size: 64, align: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1131, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1135 = !{!1136, !1137}
!1136 = !DILocalVariable(name: "self", arg: 1, scope: !1128, file: !889, line: 311, type: !899)
!1137 = !DILocalVariable(name: "slice", arg: 2, scope: !1128, file: !889, line: 311, type: !1131)
!1138 = !DILocation(line: 311, column: 18, scope: !1128)
!1139 = !DILocation(line: 311, column: 24, scope: !1128)
!1140 = !DILocation(line: 312, column: 12, scope: !1128)
!1141 = !DILocation(line: 314, column: 19, scope: !1128)
!1142 = !DILocation(line: 313, column: 13, scope: !1128)
!1143 = !DILocation(line: 318, column: 24, scope: !1128)
!1144 = !DILocation(line: 315, column: 13, scope: !1128)
!1145 = !DILocation(line: 319, column: 6, scope: !1128)
!1146 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h33365f3c40feb0a1E", scope: !1147, file: !889, line: 388, type: !1148, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1153)
!1147 = !DINamespace(name: "{impl#5}", scope: !891)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!1083, !1150, !1083, !1109}
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !900, file: !2, size: 64, align: 64, elements: !1151, templateParams: !905, identifier: "a58758f4d6a6e1468075e24121943e64")
!1151 = !{!1152}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1150, file: !2, baseType: !9, size: 64, align: 64)
!1153 = !{!1154, !1155}
!1154 = !DILocalVariable(name: "self", arg: 1, scope: !1146, file: !889, line: 388, type: !1150)
!1155 = !DILocalVariable(name: "slice", arg: 2, scope: !1146, file: !889, line: 388, type: !1083)
!1156 = !DILocation(line: 388, column: 14, scope: !1146)
!1157 = !DILocation(line: 388, column: 20, scope: !1146)
!1158 = !DILocation(line: 389, column: 12, scope: !1146)
!1159 = !DILocation(line: 393, column: 20, scope: !1146)
!1160 = !DILocalVariable(name: "self", scope: !1161, file: !889, line: 393, type: !1150, align: 8)
!1161 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h33dcc95847dcf505E", scope: !1147, file: !889, line: 376, type: !1162, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1164)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!895, !1150, !895}
!1164 = !{!1160, !1165}
!1165 = !DILocalVariable(name: "slice", scope: !1161, file: !889, line: 393, type: !895, align: 8)
!1166 = !DILocation(line: 393, column: 20, scope: !1161, inlinedAt: !1159)
!1167 = !DILocation(line: 393, column: 39, scope: !1146)
!1168 = !DILocalVariable(name: "self", scope: !1169, file: !889, line: 393, type: !895, align: 8)
!1169 = !DILexicalBlockFile(scope: !1170, file: !889, discriminator: 0)
!1170 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h1332fb5ef023cedbE", scope: !930, file: !929, line: 1365, type: !1171, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1173)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!9, !895}
!1173 = !{!1168}
!1174 = !DILocation(line: 393, column: 20, scope: !1169, inlinedAt: !1175)
!1175 = !DILocation(line: 378, column: 31, scope: !1161, inlinedAt: !1159)
!1176 = !DILocalVariable(name: "ptr", scope: !1177, file: !889, line: 393, type: !895, align: 8)
!1177 = !DILexicalBlockFile(scope: !1178, file: !889, discriminator: 0)
!1178 = distinct !DISubprogram(name: "metadata<[u8]>", linkageName: "_ZN4core3ptr8metadata8metadata17h9abd071cc79a3f23E", scope: !981, file: !980, line: 93, type: !1171, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1179)
!1179 = !{!1176}
!1180 = !DILocation(line: 393, column: 20, scope: !1177, inlinedAt: !1181)
!1181 = !DILocation(line: 1366, column: 9, scope: !1170, inlinedAt: !1175)
!1182 = !DILocation(line: 390, column: 13, scope: !1146)
!1183 = !DILocation(line: 394, column: 6, scope: !1146)
!1184 = distinct !DISubprogram(name: "from_iter<&str, core::str::iter::Lines>", linkageName: "_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hd5b0d5e191eaad89E", scope: !1186, file: !1185, line: 20, type: !1188, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1265, retainedNodes: !1253)
!1185 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_from_iter_nested.rs", directory: "", checksumkind: CSK_MD5, checksum: "689418b9f3c3e5d8034fb053fb43f5aa")
!1186 = !DINamespace(name: "{impl#0}", scope: !1187)
!1187 = !DINamespace(name: "spec_from_iter_nested", scope: !339)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!1190, !1211}
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<&str, alloc::alloc::Global>", scope: !339, file: !2, size: 192, align: 64, elements: !1191, templateParams: !1209, identifier: "208b62509f6d044a350d68ed14e9593d")
!1191 = !{!1192, !1210}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1190, file: !2, baseType: !1193, size: 128, align: 64)
!1193 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<&str, alloc::alloc::Global>", scope: !343, file: !2, size: 128, align: 64, elements: !1194, templateParams: !1209, identifier: "58400f9bee8a8cc1d80e6c3dfe6a48fc")
!1194 = !{!1195, !1207, !1208}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1193, file: !2, baseType: !1196, size: 64, align: 64)
!1196 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<&str>", scope: !347, file: !2, size: 64, align: 64, elements: !1197, templateParams: !1203, identifier: "27b0387acb6ba1902905349a4e22378b")
!1197 = !{!1198, !1205}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1196, file: !2, baseType: !1199, size: 64, align: 64)
!1199 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<&str>", scope: !52, file: !2, size: 64, align: 64, elements: !1200, templateParams: !1203, identifier: "b12ecf0d11e002358328430721716001")
!1200 = !{!1201}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1199, file: !2, baseType: !1202, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &str", baseType: !145, size: 64, align: 64, dwarfAddressSpace: 0)
!1203 = !{!1204}
!1204 = !DITemplateTypeParameter(name: "T", type: !145)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1196, file: !2, baseType: !1206, align: 8)
!1206 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&str>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !1203, identifier: "ccce231d99099199f04f3f8f286ea9d")
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1193, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1193, file: !2, baseType: !358, align: 8)
!1209 = !{!1204, !361}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1190, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1211 = !DICompositeType(tag: DW_TAG_structure_type, name: "Lines", scope: !1212, file: !2, size: 576, align: 64, elements: !1214, templateParams: !28, identifier: "772f8c661f395a26a14df7b43e485863")
!1212 = !DINamespace(name: "iter", scope: !1213)
!1213 = !DINamespace(name: "str", scope: !32)
!1214 = !{!1215}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1211, file: !2, baseType: !1216, size: 576, align: 64)
!1216 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>", scope: !1217, file: !2, size: 576, align: 64, elements: !1220, templateParams: !1250, identifier: "faf3a45f9ab0ec7f2c2c159f1cb3dd65")
!1217 = !DINamespace(name: "map", scope: !1218)
!1218 = !DINamespace(name: "adapters", scope: !1219)
!1219 = !DINamespace(name: "iter", scope: !32)
!1220 = !{!1221, !1248}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1216, file: !2, baseType: !1222, size: 576, align: 64)
!1222 = !DICompositeType(tag: DW_TAG_structure_type, name: "SplitTerminator<char>", scope: !1212, file: !2, size: 576, align: 64, elements: !1223, templateParams: !1246, identifier: "521dc41311184b3da56cd1eb1bd13261")
!1223 = !{!1224}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1222, file: !2, baseType: !1225, size: 576, align: 64)
!1225 = !DICompositeType(tag: DW_TAG_structure_type, name: "SplitInternal<char>", scope: !1212, file: !2, size: 576, align: 64, elements: !1226, templateParams: !1246, identifier: "8adee0e2384cb8eb4d0eff7cd50558eb")
!1226 = !{!1227, !1228, !1229, !1243, !1245}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1225, file: !2, baseType: !9, size: 64, align: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1225, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "matcher", scope: !1225, file: !2, baseType: !1230, size: 384, align: 64, offset: 128)
!1230 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharSearcher", scope: !1231, file: !2, size: 384, align: 64, elements: !1232, templateParams: !28, identifier: "66a3a53d70287c37d9a0ad7f46c288ce")
!1231 = !DINamespace(name: "pattern", scope: !1213)
!1232 = !{!1233, !1234, !1235, !1236, !1238, !1239}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !1230, file: !2, baseType: !145, size: 128, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "finger", scope: !1230, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "finger_back", scope: !1230, file: !2, baseType: !9, size: 64, align: 64, offset: 192)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !1230, file: !2, baseType: !1237, size: 32, align: 32, offset: 320)
!1237 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_size", scope: !1230, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_encoded", scope: !1230, file: !2, baseType: !1240, size: 32, align: 8, offset: 352)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 32, align: 8, elements: !1241)
!1241 = !{!1242}
!1242 = !DISubrange(count: 4, lowerBound: 0)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "allow_trailing_empty", scope: !1225, file: !2, baseType: !1244, size: 8, align: 8, offset: 512)
!1244 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "finished", scope: !1225, file: !2, baseType: !1244, size: 8, align: 8, offset: 520)
!1246 = !{!1247}
!1247 = !DITemplateTypeParameter(name: "P", type: !1237)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1216, file: !2, baseType: !1249, align: 8)
!1249 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinesAnyMap", scope: !1213, file: !2, align: 8, elements: !28, identifier: "8bd41e1b479e304a1f6f069463fc6d60")
!1250 = !{!1251, !1252}
!1251 = !DITemplateTypeParameter(name: "I", type: !1222)
!1252 = !DITemplateTypeParameter(name: "F", type: !1249)
!1253 = !{!1254, !1255, !1257, !1259, !1261, !1263}
!1254 = !DILocalVariable(name: "iterator", arg: 1, scope: !1184, file: !1185, line: 20, type: !1211)
!1255 = !DILocalVariable(name: "vector", scope: !1256, file: !1185, line: 26, type: !1190, align: 8)
!1256 = distinct !DILexicalBlock(scope: !1184, file: !1185, line: 26, column: 9)
!1257 = !DILocalVariable(name: "element", scope: !1258, file: !1185, line: 28, type: !145, align: 8)
!1258 = distinct !DILexicalBlock(scope: !1184, file: !1185, line: 28, column: 13)
!1259 = !DILocalVariable(name: "lower", scope: !1260, file: !1185, line: 29, type: !9, align: 8)
!1260 = distinct !DILexicalBlock(scope: !1258, file: !1185, line: 29, column: 17)
!1261 = !DILocalVariable(name: "initial_capacity", scope: !1262, file: !1185, line: 30, type: !9, align: 8)
!1262 = distinct !DILexicalBlock(scope: !1260, file: !1185, line: 30, column: 17)
!1263 = !DILocalVariable(name: "vector", scope: !1264, file: !1185, line: 32, type: !1190, align: 8)
!1264 = distinct !DILexicalBlock(scope: !1262, file: !1185, line: 32, column: 17)
!1265 = !{!1204, !1266}
!1266 = !DITemplateTypeParameter(name: "I", type: !1211)
!1267 = !DILocation(line: 20, column: 26, scope: !1184)
!1268 = !DILocation(line: 26, column: 13, scope: !1256)
!1269 = !DILocation(line: 32, column: 21, scope: !1264)
!1270 = !DILocalVariable(name: "src", scope: !1271, file: !1185, line: 35, type: !145, align: 8)
!1271 = !DILexicalBlockFile(scope: !1272, file: !1185, discriminator: 0)
!1272 = distinct !DISubprogram(name: "write<&str>", linkageName: "_ZN4core3ptr5write17h3290f2330b897a9eE", scope: !53, file: !959, line: 1296, type: !1273, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !1276)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{null, !1275, !145}
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &str", baseType: !145, size: 64, align: 64, dwarfAddressSpace: 0)
!1276 = !{!1277, !1270}
!1277 = !DILocalVariable(name: "dst", scope: !1271, file: !1185, line: 35, type: !1275, align: 8)
!1278 = !DILocation(line: 35, column: 21, scope: !1271, inlinedAt: !1279)
!1279 = !DILocation(line: 35, column: 21, scope: !1264)
!1280 = !DILocalVariable(name: "alloc", scope: !1281, file: !1185, line: 32, type: !358, align: 1)
!1281 = !DILexicalBlockFile(scope: !1282, file: !1185, discriminator: 0)
!1282 = distinct !DISubprogram(name: "with_capacity_in<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h2b5f9bd11cb9b9a4E", scope: !1190, file: !1283, line: 640, type: !1284, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !1286)
!1283 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!1190, !9, !358}
!1286 = !{!1287, !1280}
!1287 = !DILocalVariable(name: "capacity", scope: !1281, file: !1185, line: 32, type: !9, align: 8)
!1288 = !DILocation(line: 32, column: 34, scope: !1281, inlinedAt: !1289)
!1289 = !DILocation(line: 483, column: 9, scope: !1290, inlinedAt: !1296)
!1290 = distinct !DISubprogram(name: "with_capacity<&str>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc105c30a1ee35a38E", scope: !1190, file: !1283, line: 482, type: !1291, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !1293)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!1190, !9}
!1293 = !{!1294}
!1294 = !DILocalVariable(name: "capacity", scope: !1295, file: !1185, line: 32, type: !9, align: 8)
!1295 = !DILexicalBlockFile(scope: !1290, file: !1185, discriminator: 0)
!1296 = !DILocation(line: 32, column: 34, scope: !1262)
!1297 = !DILocalVariable(name: "alloc", scope: !1298, file: !1185, line: 32, type: !358, align: 1)
!1298 = !DILexicalBlockFile(scope: !1299, file: !1185, discriminator: 0)
!1299 = distinct !DISubprogram(name: "with_capacity_in<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h6aa435fef130c768E", scope: !1193, file: !1300, line: 130, type: !1301, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !1303)
!1300 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!1193, !9, !358}
!1303 = !{!1304, !1297}
!1304 = !DILocalVariable(name: "capacity", scope: !1298, file: !1185, line: 32, type: !9, align: 8)
!1305 = !DILocation(line: 32, column: 34, scope: !1298, inlinedAt: !1306)
!1306 = !DILocation(line: 641, column: 20, scope: !1282, inlinedAt: !1289)
!1307 = !DILocation(line: 26, column: 13, scope: !1184)
!1308 = !DILocation(line: 26, column: 32, scope: !1184)
!1309 = !DILocation(line: 45, column: 5, scope: !1184)
!1310 = !DILocation(line: 26, column: 26, scope: !1184)
!1311 = !DILocation(line: 27, column: 28, scope: !1312, inlinedAt: !1316)
!1312 = !DILexicalBlockFile(scope: !1313, file: !1185, discriminator: 0)
!1313 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17hdb1d1ecb56402e65E", scope: !1190, file: !1283, line: 424, type: !1314, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !28)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!1190}
!1316 = !DILocation(line: 27, column: 28, scope: !1184)
!1317 = !DILocation(line: 28, column: 18, scope: !1184)
!1318 = !DILocation(line: 28, column: 18, scope: !1258)
!1319 = !DILocation(line: 29, column: 34, scope: !1258)
!1320 = !DILocation(line: 39, column: 13, scope: !1184)
!1321 = !DILocation(line: 29, column: 22, scope: !1258)
!1322 = !DILocation(line: 29, column: 22, scope: !1260)
!1323 = !DILocation(line: 31, column: 61, scope: !1260)
!1324 = !DILocalVariable(name: "self", scope: !1325, file: !1185, line: 31, type: !9, align: 8)
!1325 = !DILexicalBlockFile(scope: !1326, file: !1185, discriminator: 0)
!1326 = distinct !DISubprogram(name: "saturating_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_add17haf0fb58f21d60319E", scope: !1328, file: !1327, line: 1048, type: !1329, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !1331)
!1327 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!1328 = !DINamespace(name: "{impl#11}", scope: !259)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!9, !9, !9}
!1331 = !{!1324, !1332}
!1332 = !DILocalVariable(name: "rhs", scope: !1325, file: !1185, line: 31, type: !9, align: 8)
!1333 = !DILocation(line: 31, column: 61, scope: !1325, inlinedAt: !1323)
!1334 = !DILocalVariable(name: "v2", scope: !1335, file: !1185, line: 31, type: !9, align: 8)
!1335 = !DILexicalBlockFile(scope: !1336, file: !1185, discriminator: 0)
!1336 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hde53ba2d9ea02064E", scope: !865, file: !1337, line: 1278, type: !1329, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !1338)
!1337 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!1338 = !{!1339, !1334}
!1339 = !DILocalVariable(name: "v1", scope: !1335, file: !1185, line: 31, type: !9, align: 8)
!1340 = !DILocation(line: 31, column: 21, scope: !1335, inlinedAt: !1341)
!1341 = !DILocation(line: 31, column: 21, scope: !1260)
!1342 = !DILocation(line: 30, column: 21, scope: !1262)
!1343 = !DILocation(line: 32, column: 53, scope: !1262)
!1344 = !DILocation(line: 32, column: 34, scope: !1295, inlinedAt: !1296)
!1345 = !DILocation(line: 35, column: 32, scope: !1264)
!1346 = !DILocation(line: 39, column: 13, scope: !1262)
!1347 = !DILocation(line: 35, column: 53, scope: !1264)
!1348 = !DILocation(line: 36, column: 21, scope: !1264)
!1349 = !DILocalVariable(name: "self", scope: !1350, file: !1185, line: 36, type: !1354, align: 8)
!1350 = !DILexicalBlockFile(scope: !1351, file: !1185, discriminator: 0)
!1351 = distinct !DISubprogram(name: "set_len<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17he837126d982de1afE", scope: !1190, file: !1283, line: 1301, type: !1352, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !1355)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{null, !1354, !9}
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<&str, alloc::alloc::Global>", baseType: !1190, size: 64, align: 64, dwarfAddressSpace: 0)
!1355 = !{!1349, !1356}
!1356 = !DILocalVariable(name: "new_len", scope: !1350, file: !1185, line: 36, type: !9, align: 8)
!1357 = !DILocation(line: 36, column: 21, scope: !1350, inlinedAt: !1348)
!1358 = !DILocation(line: 38, column: 17, scope: !1264)
!1359 = !DILocation(line: 43, column: 64, scope: !1256)
!1360 = !DILocation(line: 43, column: 9, scope: !1256)
!1361 = !DILocation(line: 20, column: 5, scope: !1184)
!1362 = !DILocation(line: 44, column: 9, scope: !1256)
!1363 = !DILocation(line: 45, column: 6, scope: !1184)
!1364 = distinct !DISubprogram(name: "call_once<(), std::thread::{impl#6}::drop::{closure_env#0}<()>>", linkageName: "_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17h0ddc6bcc5d48a705E", scope: !1366, file: !1365, line: 270, type: !1368, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1384, retainedNodes: !1381)
!1365 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panic/unwind_safe.rs", directory: "", checksumkind: CSK_MD5, checksum: "f6e32efdfaa89203cd1fd8ae6c2473fd")
!1366 = !DINamespace(name: "{impl#23}", scope: !1367)
!1367 = !DINamespace(name: "unwind_safe", scope: !1112)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{null, !1370}
!1370 = !DICompositeType(tag: DW_TAG_structure_type, name: "AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>", scope: !1367, file: !2, size: 64, align: 64, elements: !1371, templateParams: !1379, identifier: "d4f10878d5d2529f71ebc3f8e97402fe")
!1371 = !{!1372}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1370, file: !2, baseType: !1373, size: 64, align: 64)
!1373 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<()>", scope: !1374, file: !2, size: 64, align: 64, elements: !1376, templateParams: !28, identifier: "856726c8c1e915572b3b353b95ee8575")
!1374 = !DINamespace(name: "drop", scope: !1375)
!1375 = !DINamespace(name: "{impl#6}", scope: !192)
!1376 = !{!1377}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__result", scope: !1373, file: !2, baseType: !1378, size: 64, align: 64)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", baseType: !435, size: 64, align: 64, dwarfAddressSpace: 0)
!1379 = !{!1380}
!1380 = !DITemplateTypeParameter(name: "T", type: !1373)
!1381 = !{!1382, !1383}
!1382 = !DILocalVariable(name: "self", arg: 1, scope: !1364, file: !1365, line: 270, type: !1370)
!1383 = !DILocalVariable(name: "_args", arg: 2, scope: !1364, file: !1365, line: 270, type: !7)
!1384 = !{!1385, !1386}
!1385 = !DITemplateTypeParameter(name: "R", type: !7)
!1386 = !DITemplateTypeParameter(name: "F", type: !1373)
!1387 = !DILocation(line: 270, column: 37, scope: !1364)
!1388 = !DILocation(line: 270, column: 43, scope: !1364)
!1389 = !DILocation(line: 271, column: 9, scope: !1364)
!1390 = !DILocation(line: 272, column: 6, scope: !1364)
!1391 = distinct !DISubprogram(name: "call_once<(), std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>", linkageName: "_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17ha6399e982c71960aE", scope: !1366, file: !1365, line: 270, type: !1392, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1406, retainedNodes: !1403)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{null, !1394}
!1394 = !DICompositeType(tag: DW_TAG_structure_type, name: "AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>", scope: !1367, file: !2, align: 8, elements: !1395, templateParams: !1401, identifier: "6c20b070ee75d2c2263fbc3d8a36c99e")
!1395 = !{!1396}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1394, file: !2, baseType: !1397, align: 8)
!1397 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", scope: !1398, file: !2, align: 8, elements: !1399, templateParams: !28, identifier: "671b36f7bb03d34f33c20092927b61a")
!1398 = !DINamespace(name: "{closure#1}", scope: !190)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1397, file: !2, baseType: !377, align: 8)
!1401 = !{!1402}
!1402 = !DITemplateTypeParameter(name: "T", type: !1397)
!1403 = !{!1404, !1405}
!1404 = !DILocalVariable(name: "self", arg: 1, scope: !1391, file: !1365, line: 270, type: !1394)
!1405 = !DILocalVariable(name: "_args", arg: 2, scope: !1391, file: !1365, line: 270, type: !7)
!1406 = !{!1385, !1407}
!1407 = !DITemplateTypeParameter(name: "F", type: !1397)
!1408 = !DILocation(line: 270, column: 37, scope: !1391)
!1409 = !DILocation(line: 270, column: 43, scope: !1391)
!1410 = !DILocation(line: 271, column: 9, scope: !1391)
!1411 = !DILocation(line: 272, column: 6, scope: !1391)
!1412 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h19dbefea06dd2371E", scope: !1414, file: !1413, line: 770, type: !1415, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1417)
!1413 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!1414 = !DINamespace(name: "{impl#16}", scope: !52)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!350, !346}
!1417 = !{!1418}
!1418 = !DILocalVariable(name: "unique", arg: 1, scope: !1412, file: !1413, line: 770, type: !346)
!1419 = !DILocation(line: 770, column: 13, scope: !1412)
!1420 = !DILocation(line: 773, column: 41, scope: !1412)
!1421 = !DILocalVariable(name: "self", scope: !1422, file: !1413, line: 773, type: !346, align: 8)
!1422 = !DILexicalBlockFile(scope: !1423, file: !1413, discriminator: 0)
!1423 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8bb8bd839a83b1c5E", scope: !346, file: !1424, line: 103, type: !1425, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1427)
!1424 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1021, !346}
!1427 = !{!1421}
!1428 = !DILocation(line: 773, column: 41, scope: !1422, inlinedAt: !1420)
!1429 = !DILocalVariable(name: "self", scope: !1430, file: !1413, line: 773, type: !350, align: 8)
!1430 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1433)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!1021, !350}
!1433 = !{!1429}
!1434 = !DILocation(line: 773, column: 41, scope: !1430, inlinedAt: !1435)
!1435 = !DILocation(line: 104, column: 9, scope: !1423, inlinedAt: !1420)
!1436 = !DILocalVariable(name: "ptr", scope: !1437, file: !1413, line: 773, type: !1021, align: 8)
!1437 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1440)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!350, !1021}
!1440 = !{!1436}
!1441 = !DILocation(line: 773, column: 18, scope: !1437, inlinedAt: !1442)
!1442 = !DILocation(line: 773, column: 18, scope: !1412)
!1443 = !DILocation(line: 774, column: 6, scope: !1412)
!1444 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h6e98c5d1da63f7d0E", scope: !1446, file: !1445, line: 116, type: !1448, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !1474)
!1445 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "9cfb71cd3b32f7eb830f45a756b00675")
!1446 = !DINamespace(name: "{impl#1}", scope: !1447)
!1447 = !DINamespace(name: "collections", scope: !204)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!1450, !1453}
!1450 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !1447, file: !2, size: 128, align: 64, elements: !1451, templateParams: !28, identifier: "9329beb58cfce2a468bff9d53d352901")
!1451 = !{!1452}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1450, file: !2, baseType: !1453, size: 128, align: 64)
!1453 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !1447, file: !2, size: 128, align: 64, elements: !1454, templateParams: !28, identifier: "b80f03a2018170445eea4dcb9e8ba251")
!1454 = !{!1455}
!1455 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1453, file: !2, size: 128, align: 64, elements: !1456, templateParams: !28, identifier: "dd437972ee979c0cb5a8f1e81729b7e4", discriminator: !1473)
!1456 = !{!1457, !1459}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !1455, file: !2, baseType: !1458, size: 128, align: 64, extraData: i64 0)
!1458 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !1453, file: !2, size: 128, align: 64, elements: !28, identifier: "9b997f4b8909a73a8576324b89f9b258")
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !1455, file: !2, baseType: !1460, size: 128, align: 64)
!1460 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !1453, file: !2, size: 128, align: 64, elements: !1461, templateParams: !28, identifier: "43ad075de287371ebe4e53de3e5ecf3d")
!1461 = !{!1462, !1472}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1460, file: !2, baseType: !1463, size: 128, align: 64)
!1463 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !1464, file: !2, size: 128, align: 64, elements: !1466, templateParams: !28, identifier: "6727bf1318ffccbbbfc5e6dc0dfc8722")
!1464 = !DINamespace(name: "layout", scope: !1465)
!1465 = !DINamespace(name: "alloc", scope: !32)
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1463, file: !2, baseType: !9, size: 64, align: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1463, file: !2, baseType: !1469, size: 64, align: 64, offset: 64)
!1469 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !788, file: !2, size: 64, align: 64, elements: !1470, templateParams: !28, identifier: "e392ecbcb8f7df9e6beb2b20857b4b5a")
!1470 = !{!1471}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1469, file: !2, baseType: !787, size: 64, align: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !1460, file: !2, baseType: !7, align: 8)
!1473 = !DIDerivedType(tag: DW_TAG_member, scope: !1453, file: !2, baseType: !160, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1474 = !{!1475}
!1475 = !DILocalVariable(name: "kind", arg: 1, scope: !1444, file: !1445, line: 116, type: !1453)
!1476 = !DILocation(line: 116, column: 13, scope: !1444)
!1477 = !DILocation(line: 117, column: 9, scope: !1444)
!1478 = !DILocation(line: 118, column: 6, scope: !1444)
!1479 = !{i64 0, i64 -9223372036854775807}
!1480 = distinct !DISubprogram(name: "__rust_begin_short_backtrace<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", linkageName: "_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h9075faf1f5726949E", scope: !1482, file: !1481, line: 118, type: !1483, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1489, retainedNodes: !1485)
!1481 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys_common/backtrace.rs", directory: "", checksumkind: CSK_MD5, checksum: "f7c76d4902bfcea1d96ffad8fbde919d")
!1482 = !DINamespace(name: "backtrace", scope: !266)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{null, !377}
!1485 = !{!1486, !1487}
!1486 = !DILocalVariable(name: "f", arg: 1, scope: !1480, file: !1481, line: 118, type: !377)
!1487 = !DILocalVariable(name: "result", scope: !1488, file: !1481, line: 122, type: !7, align: 1)
!1488 = distinct !DILexicalBlock(scope: !1480, file: !1481, line: 122, column: 5)
!1489 = !{!1490, !41}
!1490 = !DITemplateTypeParameter(name: "F", type: !377)
!1491 = !DILocation(line: 122, column: 9, scope: !1488)
!1492 = !DILocation(line: 118, column: 43, scope: !1480)
!1493 = !DILocalVariable(name: "dummy", scope: !1494, file: !1481, line: 125, type: !7, align: 1)
!1494 = !DILexicalBlockFile(scope: !1495, file: !1481, discriminator: 0)
!1495 = distinct !DISubprogram(name: "black_box<()>", linkageName: "_ZN4core4hint9black_box17hd7d9947707c5525dE", scope: !1497, file: !1496, line: 225, type: !1498, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !1500)
!1496 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!1497 = !DINamespace(name: "hint", scope: !32)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{null, !7}
!1500 = !{!1493}
!1501 = !DILocation(line: 125, column: 5, scope: !1494, inlinedAt: !1502)
!1502 = !DILocation(line: 125, column: 5, scope: !1488)
!1503 = !DILocation(line: 122, column: 18, scope: !1480)
!1504 = !{i32 3358831}
!1505 = !DILocation(line: 128, column: 2, scope: !1480)
!1506 = !DILocation(line: 128, column: 1, scope: !1480)
!1507 = !DILocation(line: 118, column: 1, scope: !1480)
!1508 = distinct !DISubprogram(name: "__rust_begin_short_backtrace<fn(), ()>", linkageName: "_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hd4e1b9f94012fb34E", scope: !1482, file: !1481, line: 118, type: !1509, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1515, retainedNodes: !1511)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{null, !178}
!1511 = !{!1512, !1513}
!1512 = !DILocalVariable(name: "f", arg: 1, scope: !1508, file: !1481, line: 118, type: !178)
!1513 = !DILocalVariable(name: "result", scope: !1514, file: !1481, line: 122, type: !7, align: 1)
!1514 = distinct !DILexicalBlock(scope: !1508, file: !1481, line: 122, column: 5)
!1515 = !{!1516, !41}
!1516 = !DITemplateTypeParameter(name: "F", type: !178)
!1517 = !DILocation(line: 122, column: 9, scope: !1514)
!1518 = !DILocation(line: 118, column: 43, scope: !1508)
!1519 = !DILocalVariable(name: "dummy", scope: !1520, file: !1481, line: 125, type: !7, align: 1)
!1520 = !DILexicalBlockFile(scope: !1521, file: !1481, discriminator: 0)
!1521 = distinct !DISubprogram(name: "black_box<()>", linkageName: "_ZN4core4hint9black_box17hd7d9947707c5525dE", scope: !1497, file: !1496, line: 225, type: !1498, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !1522)
!1522 = !{!1519}
!1523 = !DILocation(line: 125, column: 5, scope: !1520, inlinedAt: !1524)
!1524 = !DILocation(line: 125, column: 5, scope: !1514)
!1525 = !DILocation(line: 122, column: 18, scope: !1508)
!1526 = !DILocation(line: 128, column: 2, scope: !1508)
!1527 = !DILocation(line: 128, column: 1, scope: !1508)
!1528 = !DILocation(line: 118, column: 1, scope: !1508)
!1529 = distinct !DISubprogram(name: "write_all<std::sys::unix::stdio::Stderr>", linkageName: "_ZN3std2io5Write9write_all17h2d81f1aebf73884aE", scope: !16, file: !1530, line: 1530, type: !1531, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1545, retainedNodes: !1533)
!1530 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/io/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "d22e5347311a313aff19ae21032dcb6c")
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!30, !21, !1083}
!1533 = !{!1534, !1535, !1536, !1538, !1541, !1543}
!1534 = !DILocalVariable(name: "self", arg: 1, scope: !1529, file: !1530, line: 1530, type: !21)
!1535 = !DILocalVariable(name: "buf", arg: 2, scope: !1529, file: !1530, line: 1530, type: !1083)
!1536 = !DILocalVariable(name: "n", scope: !1537, file: !1530, line: 1539, type: !9, align: 8)
!1537 = distinct !DILexicalBlock(scope: !1529, file: !1530, line: 1539, column: 17)
!1538 = !DILocalVariable(name: "e", scope: !1539, file: !1530, line: 1540, type: !1540, align: 8)
!1539 = distinct !DILexicalBlock(scope: !1529, file: !1530, line: 1540, column: 17)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::Error", baseType: !43, size: 64, align: 64, dwarfAddressSpace: 0)
!1541 = !DILocalVariable(name: "e", scope: !1539, file: !1530, line: 1540, type: !1542, align: 8)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&std::io::error::Error", baseType: !1540, size: 64, align: 64, dwarfAddressSpace: 0)
!1543 = !DILocalVariable(name: "e", scope: !1544, file: !1530, line: 1541, type: !43, align: 8)
!1544 = distinct !DILexicalBlock(scope: !1529, file: !1530, line: 1541, column: 17)
!1545 = !{!1546}
!1546 = !DITemplateTypeParameter(name: "Self", type: !22)
!1547 = !DILocation(line: 1530, column: 18, scope: !1529)
!1548 = !DILocation(line: 1530, column: 29, scope: !1529)
!1549 = !DILocalVariable(name: "index", scope: !1550, file: !1530, line: 1539, type: !1150, align: 8)
!1550 = !DILexicalBlockFile(scope: !1551, file: !1530, discriminator: 0)
!1551 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8c1c430e70bba6d1E", scope: !1552, file: !889, line: 17, type: !1553, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1557, retainedNodes: !1555)
!1552 = !DINamespace(name: "{impl#0}", scope: !891)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!1083, !1083, !1150, !1109}
!1555 = !{!1556, !1549}
!1556 = !DILocalVariable(name: "self", scope: !1550, file: !1530, line: 1539, type: !1083, align: 8)
!1557 = !{!333, !1558}
!1558 = !DITemplateTypeParameter(name: "I", type: !1150)
!1559 = !DILocation(line: 1539, column: 33, scope: !1550, inlinedAt: !1560)
!1560 = !DILocation(line: 1539, column: 33, scope: !1537)
!1561 = !DILocation(line: 1540, column: 21, scope: !1539)
!1562 = !DILocation(line: 1531, column: 9, scope: !1529)
!1563 = !DILocation(line: 1531, column: 16, scope: !1529)
!1564 = !DILocalVariable(name: "self", scope: !1565, file: !1530, line: 1531, type: !1083, align: 8)
!1565 = !DILexicalBlockFile(scope: !1566, file: !1530, discriminator: 0)
!1566 = distinct !DISubprogram(name: "is_empty<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17he6411733e52e16abE", scope: !1568, file: !1567, line: 152, type: !1569, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1571)
!1567 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!1568 = !DINamespace(name: "{impl#0}", scope: !892)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!1244, !1083}
!1571 = !{!1564}
!1572 = !DILocation(line: 1531, column: 16, scope: !1565, inlinedAt: !1563)
!1573 = !DILocation(line: 1531, column: 15, scope: !1529)
!1574 = !DILocation(line: 1544, column: 9, scope: !1529)
!1575 = !DILocation(line: 1545, column: 6, scope: !1529)
!1576 = !DILocation(line: 1532, column: 30, scope: !1529)
!1577 = !DILocation(line: 1532, column: 19, scope: !1529)
!1578 = !{i64 0, i64 2}
!1579 = !DILocation(line: 1532, column: 13, scope: !1529)
!1580 = !DILocation(line: 1540, column: 21, scope: !1529)
!1581 = !DILocation(line: 1540, column: 31, scope: !1529)
!1582 = !{i64 8}
!1583 = !{i8 0, i8 41}
!1584 = !DILocation(line: 1543, column: 9, scope: !1529)
!1585 = !DILocalVariable(name: "self", scope: !1586, file: !1530, line: 1540, type: !1592, align: 8)
!1586 = !DILexicalBlockFile(scope: !1587, file: !1530, discriminator: 0)
!1587 = distinct !DISubprogram(name: "eq", linkageName: "_ZN66_$LT$std..io..error..ErrorKind$u20$as$u20$core..cmp..PartialEq$GT$2eq17h91ae2d30ba9c1519E", scope: !1589, file: !1588, line: 157, type: !1590, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !1593)
!1588 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/io/error.rs", directory: "", checksumkind: CSK_MD5, checksum: "2a413f123e61c3f43f130e7665419c2a")
!1589 = !DINamespace(name: "{impl#19}", scope: !44)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!1244, !1592, !1592}
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::ErrorKind", baseType: !77, size: 64, align: 64, dwarfAddressSpace: 0)
!1593 = !{!1585, !1594, !1595, !1598}
!1594 = !DILocalVariable(name: "other", scope: !1586, file: !1530, line: 1540, type: !1592, align: 8)
!1595 = !DILocalVariable(name: "__self_tag", scope: !1596, file: !1530, line: 1540, type: !951, align: 8)
!1596 = !DILexicalBlockFile(scope: !1597, file: !1530, discriminator: 0)
!1597 = distinct !DILexicalBlock(scope: !1587, file: !1588, line: 157, column: 45)
!1598 = !DILocalVariable(name: "__arg1_tag", scope: !1599, file: !1530, line: 1540, type: !951, align: 8)
!1599 = !DILexicalBlockFile(scope: !1600, file: !1530, discriminator: 0)
!1600 = distinct !DILexicalBlock(scope: !1597, file: !1588, line: 157, column: 45)
!1601 = !DILocation(line: 1540, column: 31, scope: !1586, inlinedAt: !1581)
!1602 = !DILocation(line: 1540, column: 43, scope: !1529)
!1603 = !DILocation(line: 1540, column: 31, scope: !1596, inlinedAt: !1581)
!1604 = !DILocation(line: 1540, column: 31, scope: !1599, inlinedAt: !1581)
!1605 = !DILocation(line: 1541, column: 21, scope: !1529)
!1606 = !DILocation(line: 1541, column: 21, scope: !1544)
!1607 = !DILocation(line: 1541, column: 34, scope: !1544)
!1608 = !DILocation(line: 1, column: 1, scope: !1609)
!1609 = !DILexicalBlockFile(scope: !1529, file: !1610, discriminator: 0)
!1610 = !DIFile(filename: "src/lib.rs", directory: "/home/calvin/git/c2rust/tests/statics", checksumkind: CSK_MD5, checksum: "d5f79f7057192e95e0bf9072539f19e7")
!1611 = !DILocation(line: 1540, column: 70, scope: !1529)
!1612 = !DILocation(line: 1534, column: 32, scope: !1529)
!1613 = !DILocalVariable(name: "msg", scope: !1614, file: !1530, line: 1534, type: !140, align: 8)
!1614 = !DILexicalBlockFile(scope: !1615, file: !1530, discriminator: 0)
!1615 = distinct !DISubprogram(name: "from_static_message", linkageName: "_ZN3std2io5error5Error19from_static_message17h05d2a427f8db252bE", scope: !43, file: !1588, line: 543, type: !1616, scopeLine: 543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !1618)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!43, !140}
!1618 = !{!1613}
!1619 = !DILocation(line: 1534, column: 32, scope: !1614, inlinedAt: !1620)
!1620 = !DILocation(line: 119, column: 5, scope: !1621)
!1621 = !DILexicalBlockFile(scope: !1529, file: !1588, discriminator: 0)
!1622 = !DILocalVariable(name: "m", scope: !1623, file: !1530, line: 1534, type: !140, align: 8)
!1623 = !DILexicalBlockFile(scope: !1624, file: !1530, discriminator: 0)
!1624 = distinct !DISubprogram(name: "new_simple_message", linkageName: "_ZN3std2io5error14repr_bitpacked4Repr18new_simple_message17hcae953c7bbbd9e29E", scope: !47, file: !1625, line: 204, type: !1626, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !1628)
!1625 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/io/error/repr_bitpacked.rs", directory: "", checksumkind: CSK_MD5, checksum: "e17233472f13704c087dcc380c33a3a0")
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!47, !140}
!1628 = !{!1622}
!1629 = !DILocation(line: 1534, column: 32, scope: !1623, inlinedAt: !1630)
!1630 = !DILocation(line: 544, column: 22, scope: !1615, inlinedAt: !1620)
!1631 = !DILocalVariable(name: "ptr", scope: !1632, file: !1530, line: 1534, type: !1058, align: 8)
!1632 = !DILexicalBlockFile(scope: !1633, file: !1530, discriminator: 0)
!1633 = distinct !DISubprogram(name: "new_unchecked<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h2ca8bd4c01ee90ecE", scope: !51, file: !1413, line: 196, type: !1634, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !1636)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!51, !1058}
!1636 = !{!1631}
!1637 = !DILocation(line: 1534, column: 32, scope: !1632, inlinedAt: !1638)
!1638 = !DILocation(line: 206, column: 23, scope: !1624, inlinedAt: !1630)
!1639 = !DILocation(line: 1534, column: 28, scope: !1529)
!1640 = !DILocation(line: 1539, column: 20, scope: !1529)
!1641 = !DILocation(line: 1539, column: 20, scope: !1537)
!1642 = !DILocation(line: 1539, column: 37, scope: !1537)
!1643 = !DILocation(line: 1539, column: 26, scope: !1537)
!1644 = !DILocation(line: 1539, column: 40, scope: !1529)
!1645 = !DILocation(line: 1530, column: 5, scope: !1529)
!1646 = distinct !DISubprogram(name: "write_fmt<std::sys::unix::stdio::Stderr>", linkageName: "_ZN3std2io5Write9write_fmt17hd7dc32ae724c3112E", scope: !16, file: !1530, line: 1651, type: !1647, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1545, retainedNodes: !1760)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!30, !21, !1649}
!1649 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !858, file: !2, size: 384, align: 64, elements: !1650, templateParams: !28, identifier: "7e7034295abae01651800c8eb0e9b712")
!1650 = !{!1651, !1657, !1702}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !1649, file: !2, baseType: !1652, size: 128, align: 64)
!1652 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !1653, templateParams: !28, identifier: "120d786d314e2730a5f45c5e7e56f7d")
!1653 = !{!1654, !1656}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1652, file: !2, baseType: !1655, size: 64, align: 64)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64, align: 64, dwarfAddressSpace: 0)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1652, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !1649, file: !2, baseType: !1658, size: 128, align: 64, offset: 128)
!1658 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !231, file: !2, size: 128, align: 64, elements: !1659, templateParams: !28, identifier: "bb69cbb99024f47dbb54317ba8130317")
!1659 = !{!1660}
!1660 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1658, file: !2, size: 128, align: 64, elements: !1661, templateParams: !28, identifier: "ce02297fe7dbf35f547cc88f131a39b4", discriminator: !1701)
!1661 = !{!1662, !1697}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1660, file: !2, baseType: !1663, size: 128, align: 64, extraData: i64 0)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1658, file: !2, size: 128, align: 64, elements: !28, templateParams: !1664, identifier: "742dbe7e160661d8ca36fcfff2574850")
!1664 = !{!1665}
!1665 = !DITemplateTypeParameter(name: "T", type: !1666)
!1666 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !1667, templateParams: !28, identifier: "5ac19a4b2fedc0a38075c82d3d698a2e")
!1667 = !{!1668, !1696}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1666, file: !2, baseType: !1669, size: 64, align: 64)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64, align: 64, dwarfAddressSpace: 0)
!1670 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !856, file: !2, size: 448, align: 64, elements: !1671, templateParams: !28, identifier: "fbba22b504f631aebebe5f9a731b4661")
!1671 = !{!1672, !1673}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !1670, file: !2, baseType: !9, size: 64, align: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1670, file: !2, baseType: !1674, size: 384, align: 64, offset: 64)
!1674 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !856, file: !2, size: 384, align: 64, elements: !1675, templateParams: !28, identifier: "a89ae7a13a1def66296bab98052f520a")
!1675 = !{!1676, !1677, !1678, !1679, !1695}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1674, file: !2, baseType: !1237, size: 32, align: 32, offset: 256)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1674, file: !2, baseType: !855, size: 8, align: 8, offset: 320)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1674, file: !2, baseType: !275, size: 32, align: 32, offset: 288)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1674, file: !2, baseType: !1680, size: 128, align: 64)
!1680 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !856, file: !2, size: 128, align: 64, elements: !1681, templateParams: !28, identifier: "41c6e2a1db95b605a371a090678c1fd8")
!1681 = !{!1682}
!1682 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1680, file: !2, size: 128, align: 64, elements: !1683, templateParams: !28, identifier: "eff7cdccebc4ba23639a28669cbce86", discriminator: !1694)
!1683 = !{!1684, !1688, !1692}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !1682, file: !2, baseType: !1685, size: 128, align: 64, extraData: i64 0)
!1685 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !1680, file: !2, size: 128, align: 64, elements: !1686, templateParams: !28, identifier: "927d86c22d9994b767e51a58b20493")
!1686 = !{!1687}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1685, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !1682, file: !2, baseType: !1689, size: 128, align: 64, extraData: i64 1)
!1689 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !1680, file: !2, size: 128, align: 64, elements: !1690, templateParams: !28, identifier: "ce4b8bb3a4200a86c4c06a7570d8ee71")
!1690 = !{!1691}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1689, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !1682, file: !2, baseType: !1693, size: 128, align: 64, extraData: i64 2)
!1693 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !1680, file: !2, size: 128, align: 64, elements: !28, identifier: "b155566b9bd0239ef48aa3b8bcdef75b")
!1694 = !DIDerivedType(tag: DW_TAG_member, scope: !1680, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1674, file: !2, baseType: !1680, size: 128, align: 64, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1666, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1660, file: !2, baseType: !1698, size: 128, align: 64)
!1698 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1658, file: !2, size: 128, align: 64, elements: !1699, templateParams: !1664, identifier: "17f2fc106094349c7673abca4839c97a")
!1699 = !{!1700}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1698, file: !2, baseType: !1666, size: 128, align: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, scope: !1658, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1649, file: !2, baseType: !1703, size: 128, align: 64, offset: 256)
!1703 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !1704, templateParams: !28, identifier: "c78588d5439c4eaa18fbaab99f079cbf")
!1704 = !{!1705, !1759}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1703, file: !2, baseType: !1706, size: 64, align: 64)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64, align: 64, dwarfAddressSpace: 0)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !858, file: !2, size: 128, align: 64, elements: !1708, templateParams: !28, identifier: "753c369e46bf484710f4d769a3fba395")
!1708 = !{!1709, !1713}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1707, file: !2, baseType: !1710, size: 64, align: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !1711, size: 64, align: 64, dwarfAddressSpace: 0)
!1711 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !1712, file: !2, align: 8, elements: !28, identifier: "83e8d27b51d2e55ae9422e57e00c6cd7")
!1712 = !DINamespace(name: "{extern#0}", scope: !858)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !1707, file: !2, baseType: !1714, size: 64, align: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !1715, size: 64, align: 64, dwarfAddressSpace: 0)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!1717, !1710, !1733}
!1717 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !31, file: !2, size: 8, align: 8, elements: !1718, templateParams: !28, identifier: "d239d58a8e95223cd52e3ad2c36d40d7")
!1718 = !{!1719}
!1719 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1717, file: !2, size: 8, align: 8, elements: !1720, templateParams: !28, identifier: "1fa2591b965a13cd50e38802b1727ca", discriminator: !1732)
!1720 = !{!1721, !1728}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1719, file: !2, baseType: !1722, size: 8, align: 8, extraData: i64 0)
!1722 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1717, file: !2, size: 8, align: 8, elements: !1723, templateParams: !1725, identifier: "cea751326735c343faf647063a65ad14")
!1723 = !{!1724}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1722, file: !2, baseType: !7, align: 8, offset: 8)
!1725 = !{!41, !1726}
!1726 = !DITemplateTypeParameter(name: "E", type: !1727)
!1727 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !858, file: !2, align: 8, elements: !28, identifier: "87e319c059f1d372f32b0a49f33ec3cc")
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1719, file: !2, baseType: !1729, size: 8, align: 8, extraData: i64 1)
!1729 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1717, file: !2, size: 8, align: 8, elements: !1730, templateParams: !1725, identifier: "6c6eb84ed910506586b60ba90dbaa2c")
!1730 = !{!1731}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1729, file: !2, baseType: !1727, align: 8, offset: 8)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagArtificial)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !1734, size: 64, align: 64, dwarfAddressSpace: 0)
!1734 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !858, file: !2, size: 512, align: 64, elements: !1735, templateParams: !28, identifier: "6e9ffaec9b89ebb810272bb66e7b2042")
!1735 = !{!1736, !1737, !1738, !1739, !1751, !1752}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1734, file: !2, baseType: !275, size: 32, align: 32, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1734, file: !2, baseType: !1237, size: 32, align: 32, offset: 416)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1734, file: !2, baseType: !855, size: 8, align: 8, offset: 448)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1734, file: !2, baseType: !1740, size: 128, align: 64)
!1740 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !231, file: !2, size: 128, align: 64, elements: !1741, templateParams: !28, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!1741 = !{!1742}
!1742 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1740, file: !2, size: 128, align: 64, elements: !1743, templateParams: !28, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !1750)
!1743 = !{!1744, !1746}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1742, file: !2, baseType: !1745, size: 128, align: 64, extraData: i64 0)
!1745 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1740, file: !2, size: 128, align: 64, elements: !28, templateParams: !223, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1742, file: !2, baseType: !1747, size: 128, align: 64, extraData: i64 1)
!1747 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1740, file: !2, size: 128, align: 64, elements: !1748, templateParams: !223, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!1748 = !{!1749}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1747, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, scope: !1740, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1734, file: !2, baseType: !1740, size: 128, align: 64, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1734, file: !2, baseType: !1753, size: 128, align: 64, offset: 256)
!1753 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !1754, templateParams: !28, identifier: "3d4f80cd5361aaff4f795dd09efb8db1")
!1754 = !{!1755, !1758}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1753, file: !2, baseType: !1756, size: 64, align: 64)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64, align: 64, dwarfAddressSpace: 0)
!1757 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !28, identifier: "abb712b259efc5e79bb67900edf24920")
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1753, file: !2, baseType: !128, size: 64, align: 64, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1703, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1760 = !{!1761, !1762, !1763}
!1761 = !DILocalVariable(name: "self", arg: 1, scope: !1646, file: !1530, line: 1651, type: !21)
!1762 = !DILocalVariable(name: "fmt", arg: 2, scope: !1646, file: !1530, line: 1651, type: !1649)
!1763 = !DILocalVariable(name: "output", scope: !1764, file: !1530, line: 1671, type: !14, align: 8)
!1764 = distinct !DILexicalBlock(scope: !1646, file: !1530, line: 1671, column: 9)
!1765 = !DILocation(line: 1651, column: 18, scope: !1646)
!1766 = !DILocation(line: 1651, column: 29, scope: !1646)
!1767 = !DILocation(line: 1671, column: 13, scope: !1764)
!1768 = !DILocation(line: 1671, column: 56, scope: !1646)
!1769 = !DILocation(line: 1671, column: 26, scope: !1646)
!1770 = !DILocation(line: 1672, column: 26, scope: !1764)
!1771 = !DILocation(line: 1672, column: 39, scope: !1764)
!1772 = !DILocation(line: 1672, column: 15, scope: !1764)
!1773 = !DILocation(line: 1683, column: 5, scope: !1646)
!1774 = !DILocation(line: 1672, column: 9, scope: !1764)
!1775 = !DILocation(line: 1651, column: 5, scope: !1646)
!1776 = !DILocation(line: 1673, column: 23, scope: !1764)
!1777 = !DILocation(line: 1673, column: 28, scope: !1764)
!1778 = !DILocation(line: 1676, column: 20, scope: !1764)
!1779 = !DILocalVariable(name: "self", scope: !1780, file: !1530, line: 1676, type: !1785, align: 8)
!1780 = !DILexicalBlockFile(scope: !1781, file: !1530, discriminator: 0)
!1781 = distinct !DISubprogram(name: "is_err<(), std::io::error::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h42f0f663e5a310beE", scope: !30, file: !1782, line: 586, type: !1783, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !40, retainedNodes: !1786)
!1782 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!1244, !1785}
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::result::Result<(), std::io::error::Error>", baseType: !30, size: 64, align: 64, dwarfAddressSpace: 0)
!1786 = !{!1779}
!1787 = !DILocation(line: 1676, column: 20, scope: !1780, inlinedAt: !1778)
!1788 = !DILocalVariable(name: "self", scope: !1789, file: !1530, line: 1676, type: !1785, align: 8)
!1789 = !DILexicalBlockFile(scope: !1790, file: !1530, discriminator: 0)
!1790 = distinct !DISubprogram(name: "is_ok<(), std::io::error::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17hd59064d2cf6b5b55E", scope: !30, file: !1782, line: 542, type: !1783, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !40, retainedNodes: !1791)
!1791 = !{!1788}
!1792 = !DILocation(line: 1676, column: 20, scope: !1789, inlinedAt: !1793)
!1793 = !DILocation(line: 587, column: 10, scope: !1781, inlinedAt: !1778)
!1794 = !DILocation(line: 1679, column: 25, scope: !1764)
!1795 = !DILocalVariable(name: "msg", scope: !1796, file: !1530, line: 1679, type: !140, align: 8)
!1796 = !DILexicalBlockFile(scope: !1797, file: !1530, discriminator: 0)
!1797 = distinct !DISubprogram(name: "from_static_message", linkageName: "_ZN3std2io5error5Error19from_static_message17h05d2a427f8db252bE", scope: !43, file: !1588, line: 543, type: !1616, scopeLine: 543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !1798)
!1798 = !{!1795}
!1799 = !DILocation(line: 1679, column: 25, scope: !1796, inlinedAt: !1800)
!1800 = !DILocation(line: 119, column: 5, scope: !1801)
!1801 = !DILexicalBlockFile(scope: !1764, file: !1588, discriminator: 0)
!1802 = !DILocalVariable(name: "m", scope: !1803, file: !1530, line: 1679, type: !140, align: 8)
!1803 = !DILexicalBlockFile(scope: !1804, file: !1530, discriminator: 0)
!1804 = distinct !DISubprogram(name: "new_simple_message", linkageName: "_ZN3std2io5error14repr_bitpacked4Repr18new_simple_message17hcae953c7bbbd9e29E", scope: !47, file: !1625, line: 204, type: !1626, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !1805)
!1805 = !{!1802}
!1806 = !DILocation(line: 1679, column: 25, scope: !1803, inlinedAt: !1807)
!1807 = !DILocation(line: 544, column: 22, scope: !1797, inlinedAt: !1800)
!1808 = !DILocalVariable(name: "ptr", scope: !1809, file: !1530, line: 1679, type: !1058, align: 8)
!1809 = !DILexicalBlockFile(scope: !1810, file: !1530, discriminator: 0)
!1810 = distinct !DISubprogram(name: "new_unchecked<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h2ca8bd4c01ee90ecE", scope: !51, file: !1413, line: 196, type: !1634, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !1811)
!1811 = !{!1808}
!1812 = !DILocation(line: 1679, column: 25, scope: !1809, inlinedAt: !1813)
!1813 = !DILocation(line: 206, column: 23, scope: !1804, inlinedAt: !1807)
!1814 = !DILocation(line: 1679, column: 21, scope: !1764)
!1815 = !DILocation(line: 1676, column: 17, scope: !1764)
!1816 = !DILocation(line: 1677, column: 21, scope: !1764)
!1817 = !DILocation(line: 1680, column: 17, scope: !1764)
!1818 = !DILocation(line: 1683, column: 6, scope: !1646)
!1819 = distinct !DISubprogram(name: "decode_repr<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr17h59e95b71693e0529E", scope: !48, file: !1625, line: 246, type: !1820, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1839, retainedNodes: !1825)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!62, !51, !1822}
!1822 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1823, file: !2, align: 8, elements: !28, identifier: "610ee771576d0a55639d49be016d65a1")
!1823 = !DINamespace(name: "drop", scope: !1824)
!1824 = !DINamespace(name: "{impl#3}", scope: !48)
!1825 = !{!1826, !1827, !1828, !1830, !1832, !1834, !1836}
!1826 = !DILocalVariable(name: "ptr", arg: 1, scope: !1819, file: !1625, line: 246, type: !51)
!1827 = !DILocalVariable(name: "make_custom", arg: 2, scope: !1819, file: !1625, line: 246, type: !1822)
!1828 = !DILocalVariable(name: "bits", scope: !1829, file: !1625, line: 250, type: !9, align: 8)
!1829 = distinct !DILexicalBlock(scope: !1819, file: !1625, line: 250, column: 5)
!1830 = !DILocalVariable(name: "code", scope: !1831, file: !1625, line: 253, type: !70, align: 4)
!1831 = distinct !DILexicalBlock(scope: !1829, file: !1625, line: 253, column: 13)
!1832 = !DILocalVariable(name: "kind_bits", scope: !1833, file: !1625, line: 257, type: !275, align: 4)
!1833 = distinct !DILexicalBlock(scope: !1829, file: !1625, line: 257, column: 13)
!1834 = !DILocalVariable(name: "kind", scope: !1835, file: !1625, line: 258, type: !77, align: 1)
!1835 = distinct !DILexicalBlock(scope: !1833, file: !1625, line: 258, column: 13)
!1836 = !DILocalVariable(name: "custom", scope: !1837, file: !1625, line: 275, type: !1838, align: 8)
!1837 = distinct !DILexicalBlock(scope: !1829, file: !1625, line: 275, column: 13)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::Custom", baseType: !74, size: 64, align: 64, dwarfAddressSpace: 0)
!1839 = !{!72, !1840}
!1840 = !DITemplateTypeParameter(name: "F", type: !1822)
!1841 = !DILocation(line: 246, column: 29, scope: !1819)
!1842 = !DILocation(line: 246, column: 47, scope: !1819)
!1843 = !DILocation(line: 250, column: 9, scope: !1829)
!1844 = !DILocation(line: 258, column: 17, scope: !1835)
!1845 = !DILocalVariable(name: "self", scope: !1846, file: !1625, line: 258, type: !1849, align: 1)
!1846 = !DILexicalBlockFile(scope: !1847, file: !1625, discriminator: 0)
!1847 = distinct !DISubprogram(name: "unwrap_or_else<std::io::error::ErrorKind, std::io::error::repr_bitpacked::decode_repr::{closure_env#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h366cf6655529f06bE", scope: !1849, file: !1848, line: 818, type: !1862, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1873, retainedNodes: !1868)
!1848 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!1849 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::io::error::ErrorKind>", scope: !231, file: !2, size: 8, align: 8, elements: !1850, templateParams: !28, identifier: "f008ee61be46854a7146e8cd367a9c41")
!1850 = !{!1851}
!1851 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1849, file: !2, size: 8, align: 8, elements: !1852, templateParams: !28, identifier: "57371e63685fc53e1770b74a14fa7c4e", discriminator: !1861)
!1852 = !{!1853, !1857}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1851, file: !2, baseType: !1854, size: 8, align: 8, extraData: i64 41)
!1854 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1849, file: !2, size: 8, align: 8, elements: !28, templateParams: !1855, identifier: "dc4f5ca2cdd686c78cf5aa9b6f1b5afb")
!1855 = !{!1856}
!1856 = !DITemplateTypeParameter(name: "T", type: !77)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1851, file: !2, baseType: !1858, size: 8, align: 8)
!1858 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1849, file: !2, size: 8, align: 8, elements: !1859, templateParams: !1855, identifier: "371d975942017656b9ce37c5d29bb9bc")
!1859 = !{!1860}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1858, file: !2, baseType: !77, size: 8, align: 8)
!1861 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagArtificial)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!77, !1849, !1864}
!1864 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", scope: !1865, file: !2, size: 64, align: 64, elements: !1866, templateParams: !28, identifier: "cb6fd5a9825e024949e7d472a6b7447b")
!1865 = !DINamespace(name: "decode_repr", scope: !48)
!1866 = !{!1867}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__bits", scope: !1864, file: !2, baseType: !918, size: 64, align: 64)
!1868 = !{!1845, !1869, !1870}
!1869 = !DILocalVariable(name: "f", scope: !1846, file: !1625, line: 258, type: !1864, align: 8)
!1870 = !DILocalVariable(name: "x", scope: !1871, file: !1625, line: 258, type: !77, align: 1)
!1871 = !DILexicalBlockFile(scope: !1872, file: !1625, discriminator: 0)
!1872 = distinct !DILexicalBlock(scope: !1847, file: !1848, line: 824, column: 13)
!1873 = !{!1856, !1874}
!1874 = !DITemplateTypeParameter(name: "F", type: !1864)
!1875 = !DILocation(line: 258, column: 24, scope: !1846, inlinedAt: !1876)
!1876 = !DILocation(line: 258, column: 24, scope: !1833)
!1877 = !DILocalVariable(name: "self", scope: !1878, file: !1625, line: 270, type: !1880, align: 8)
!1878 = !DILexicalBlockFile(scope: !1879, file: !1625, discriminator: 0)
!1879 = distinct !DISubprogram(name: "as_ptr<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hac5a124edf6ec694E", scope: !1880, file: !1413, line: 330, type: !1886, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1884, retainedNodes: !1889)
!1880 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<std::io::error::SimpleMessage>", scope: !52, file: !2, size: 64, align: 64, elements: !1881, templateParams: !1884, identifier: "bed3f7a42953e913be084d257c107f75")
!1881 = !{!1882}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1880, file: !2, baseType: !1883, size: 64, align: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const std::io::error::SimpleMessage", baseType: !141, size: 64, align: 64, dwarfAddressSpace: 0)
!1884 = !{!1885}
!1885 = !DITemplateTypeParameter(name: "T", type: !141)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!1888, !1880}
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::SimpleMessage", baseType: !141, size: 64, align: 64, dwarfAddressSpace: 0)
!1889 = !{!1877}
!1890 = !DILocation(line: 270, column: 58, scope: !1878, inlinedAt: !1891)
!1891 = !DILocation(line: 270, column: 58, scope: !1829)
!1892 = !DILocation(line: 250, column: 9, scope: !1819)
!1893 = !DILocation(line: 250, column: 16, scope: !1819)
!1894 = !DILocalVariable(name: "self", scope: !1895, file: !1625, line: 250, type: !51, align: 8)
!1895 = !DILexicalBlockFile(scope: !1896, file: !1625, discriminator: 0)
!1896 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h437387acc64ec663E", scope: !51, file: !1413, line: 330, type: !1897, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !1899)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!1058, !51}
!1899 = !{!1894}
!1900 = !DILocation(line: 250, column: 16, scope: !1895, inlinedAt: !1893)
!1901 = !DILocalVariable(name: "self", scope: !1902, file: !1625, line: 250, type: !1058, align: 8)
!1902 = !DILexicalBlockFile(scope: !1903, file: !1625, discriminator: 0)
!1903 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a992de1f612dd6bE", scope: !1027, file: !1016, line: 184, type: !1904, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !1906)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{!9, !1058}
!1906 = !{!1901}
!1907 = !DILocation(line: 250, column: 16, scope: !1902, inlinedAt: !1893)
!1908 = !DILocation(line: 251, column: 11, scope: !1829)
!1909 = !DILocation(line: 251, column: 5, scope: !1829)
!1910 = !DILocation(line: 280, column: 13, scope: !1829)
!1911 = !DILocation(line: 253, column: 26, scope: !1829)
!1912 = !DILocation(line: 253, column: 24, scope: !1829)
!1913 = !DILocation(line: 253, column: 17, scope: !1831)
!1914 = !DILocation(line: 254, column: 13, scope: !1831)
!1915 = !DILocation(line: 255, column: 9, scope: !1829)
!1916 = !DILocation(line: 257, column: 30, scope: !1829)
!1917 = !DILocation(line: 257, column: 29, scope: !1829)
!1918 = !DILocation(line: 257, column: 17, scope: !1833)
!1919 = !{i8 0, i8 42}
!1920 = !DILocalVariable(name: "self", scope: !1921, file: !1625, line: 270, type: !51, align: 8)
!1921 = !DILexicalBlockFile(scope: !1922, file: !1625, discriminator: 0)
!1922 = distinct !DISubprogram(name: "cast<(), std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h1b1f2e997708006eE", scope: !51, file: !1413, line: 453, type: !1923, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1926, retainedNodes: !1925)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{!1880, !51}
!1925 = !{!1920}
!1926 = !{!41, !1927}
!1927 = !DITemplateTypeParameter(name: "U", type: !141)
!1928 = !DILocation(line: 270, column: 58, scope: !1921, inlinedAt: !1891)
!1929 = !DILocalVariable(name: "self", scope: !1930, file: !1625, line: 270, type: !51, align: 8)
!1930 = !DILexicalBlockFile(scope: !1931, file: !1625, discriminator: 0)
!1931 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h437387acc64ec663E", scope: !51, file: !1413, line: 330, type: !1897, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !1932)
!1932 = !{!1929}
!1933 = !DILocation(line: 270, column: 58, scope: !1930, inlinedAt: !1934)
!1934 = !DILocation(line: 455, column: 41, scope: !1922, inlinedAt: !1891)
!1935 = !DILocalVariable(name: "ptr", scope: !1936, file: !1625, line: 270, type: !1888, align: 8)
!1936 = !DILexicalBlockFile(scope: !1937, file: !1625, discriminator: 0)
!1937 = distinct !DISubprogram(name: "new_unchecked<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h99f66df3b5134b30E", scope: !1880, file: !1413, line: 196, type: !1938, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1884, retainedNodes: !1940)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!1880, !1888}
!1940 = !{!1935}
!1941 = !DILocation(line: 270, column: 58, scope: !1936, inlinedAt: !1942)
!1942 = !DILocation(line: 455, column: 18, scope: !1922, inlinedAt: !1891)
!1943 = !DILocation(line: 270, column: 31, scope: !1829)
!1944 = !DILocation(line: 270, column: 94, scope: !1829)
!1945 = !DILocation(line: 275, column: 26, scope: !1829)
!1946 = !DILocalVariable(name: "self", scope: !1947, file: !1625, line: 275, type: !51, align: 8)
!1947 = !DILexicalBlockFile(scope: !1948, file: !1625, discriminator: 0)
!1948 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h437387acc64ec663E", scope: !51, file: !1413, line: 330, type: !1897, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !1949)
!1949 = !{!1946}
!1950 = !DILocation(line: 275, column: 26, scope: !1947, inlinedAt: !1945)
!1951 = !DILocalVariable(name: "self", scope: !1952, file: !1625, line: 275, type: !1058, align: 8)
!1952 = !DILexicalBlockFile(scope: !1953, file: !1625, discriminator: 0)
!1953 = distinct !DISubprogram(name: "cast<(), u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h28e782c2f84b7aa6E", scope: !1027, file: !1016, line: 45, type: !1954, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1957, retainedNodes: !1956)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!1021, !1058}
!1956 = !{!1951}
!1957 = !{!41, !1958}
!1958 = !DITemplateTypeParameter(name: "U", type: !78)
!1959 = !DILocation(line: 275, column: 26, scope: !1952, inlinedAt: !1945)
!1960 = !DILocalVariable(name: "self", scope: !1961, file: !1625, line: 275, type: !1021, align: 8)
!1961 = !DILexicalBlockFile(scope: !1962, file: !1625, discriminator: 0)
!1962 = distinct !DISubprogram(name: "wrapping_sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_sub17h929eb4b1645234c6E", scope: !1027, file: !1016, line: 1236, type: !1028, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1963)
!1963 = !{!1960, !1964}
!1964 = !DILocalVariable(name: "count", scope: !1961, file: !1625, line: 275, type: !9, align: 8)
!1965 = !DILocation(line: 275, column: 26, scope: !1961, inlinedAt: !1945)
!1966 = !DILocalVariable(name: "self", scope: !1967, file: !1625, line: 275, type: !1021, align: 8)
!1967 = !DILexicalBlockFile(scope: !1968, file: !1625, discriminator: 0)
!1968 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$15wrapping_offset17h893cb8a9d920a839E", scope: !1027, file: !1016, line: 549, type: !1037, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !1969)
!1969 = !{!1966, !1970}
!1970 = !DILocalVariable(name: "count", scope: !1967, file: !1625, line: 275, type: !951, align: 8)
!1971 = !DILocation(line: 275, column: 26, scope: !1967, inlinedAt: !1972)
!1972 = !DILocation(line: 1240, column: 9, scope: !1962, inlinedAt: !1945)
!1973 = !DILocation(line: 283, column: 1, scope: !1819)
!1974 = !DILocalVariable(name: "self", scope: !1975, file: !1625, line: 275, type: !1021, align: 8)
!1975 = !DILexicalBlockFile(scope: !1976, file: !1625, discriminator: 0)
!1976 = distinct !DISubprogram(name: "cast<u8, std::io::error::Custom>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h8094610612170fd9E", scope: !1027, file: !1016, line: 45, type: !1977, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1980, retainedNodes: !1979)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{!1838, !1021}
!1979 = !{!1974}
!1980 = !{!333, !1981}
!1981 = !DITemplateTypeParameter(name: "U", type: !74)
!1982 = !DILocation(line: 275, column: 26, scope: !1975, inlinedAt: !1945)
!1983 = !DILocation(line: 275, column: 17, scope: !1837)
!1984 = !DILocation(line: 276, column: 31, scope: !1837)
!1985 = !DILocation(line: 276, column: 13, scope: !1837)
!1986 = !DILocation(line: 277, column: 9, scope: !1829)
!1987 = !DILocation(line: 258, column: 65, scope: !1833)
!1988 = !DILocation(line: 258, column: 24, scope: !1871, inlinedAt: !1876)
!1989 = !DILocation(line: 268, column: 31, scope: !1835)
!1990 = !DILocation(line: 268, column: 13, scope: !1835)
!1991 = !DILocation(line: 269, column: 9, scope: !1829)
!1992 = !DILocation(line: 246, column: 1, scope: !1819)
!1993 = !DILocation(line: 283, column: 2, scope: !1819)
!1994 = distinct !DISubprogram(name: "decode_repr<&std::io::error::Custom, std::io::error::repr_bitpacked::{impl#2}::data::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr17h800f2b6fa66d9a8bE", scope: !48, file: !1625, line: 246, type: !1995, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2037, retainedNodes: !2024)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!1997, !51, !2021}
!1997 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErrorData<&std::io::error::Custom>", scope: !44, file: !2, size: 128, align: 64, elements: !1998, templateParams: !28, identifier: "1557c0e827967e856bfbf7fc35c5ceb4")
!1998 = !{!1999}
!1999 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1997, file: !2, size: 128, align: 64, elements: !2000, templateParams: !28, identifier: "5e53624efd1fa3b67f3702ce67fa75d8", discriminator: !2020)
!2000 = !{!2001, !2008, !2012, !2016}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "Os", scope: !1999, file: !2, baseType: !2002, size: 128, align: 64, extraData: i64 0)
!2002 = !DICompositeType(tag: DW_TAG_structure_type, name: "Os", scope: !1997, file: !2, size: 128, align: 64, elements: !2003, templateParams: !2005, identifier: "d1f7d5649b8dd972fe4551efa0730e15")
!2003 = !{!2004}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2002, file: !2, baseType: !70, size: 32, align: 32, offset: 32)
!2005 = !{!2006}
!2006 = !DITemplateTypeParameter(name: "C", type: !2007)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::Custom", baseType: !74, size: 64, align: 64, dwarfAddressSpace: 0)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "Simple", scope: !1999, file: !2, baseType: !2009, size: 128, align: 64, extraData: i64 1)
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "Simple", scope: !1997, file: !2, size: 128, align: 64, elements: !2010, templateParams: !2005, identifier: "2f0fe578d5bcc116bc9498e129c8ac61")
!2010 = !{!2011}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2009, file: !2, baseType: !77, size: 8, align: 8, offset: 8)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "SimpleMessage", scope: !1999, file: !2, baseType: !2013, size: 128, align: 64, extraData: i64 2)
!2013 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleMessage", scope: !1997, file: !2, size: 128, align: 64, elements: !2014, templateParams: !2005, identifier: "22a3e36f6526290d63b4ab5f2e985bff")
!2014 = !{!2015}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2013, file: !2, baseType: !140, size: 64, align: 64, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "Custom", scope: !1999, file: !2, baseType: !2017, size: 128, align: 64, extraData: i64 3)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "Custom", scope: !1997, file: !2, size: 128, align: 64, elements: !2018, templateParams: !2005, identifier: "3f63484ec79dc6a1e7624d393ed45a18")
!2018 = !{!2019}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2017, file: !2, baseType: !2007, size: 64, align: 64, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, scope: !1997, file: !2, baseType: !78, size: 8, align: 8, flags: DIFlagArtificial)
!2021 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2022, file: !2, align: 8, elements: !28, identifier: "2d48ac75ae84277374e9a6ac08dc61e6")
!2022 = !DINamespace(name: "data", scope: !2023)
!2023 = !DINamespace(name: "{impl#2}", scope: !48)
!2024 = !{!2025, !2026, !2027, !2029, !2031, !2033, !2035}
!2025 = !DILocalVariable(name: "ptr", arg: 1, scope: !1994, file: !1625, line: 246, type: !51)
!2026 = !DILocalVariable(name: "make_custom", arg: 2, scope: !1994, file: !1625, line: 246, type: !2021)
!2027 = !DILocalVariable(name: "bits", scope: !2028, file: !1625, line: 250, type: !9, align: 8)
!2028 = distinct !DILexicalBlock(scope: !1994, file: !1625, line: 250, column: 5)
!2029 = !DILocalVariable(name: "code", scope: !2030, file: !1625, line: 253, type: !70, align: 4)
!2030 = distinct !DILexicalBlock(scope: !2028, file: !1625, line: 253, column: 13)
!2031 = !DILocalVariable(name: "kind_bits", scope: !2032, file: !1625, line: 257, type: !275, align: 4)
!2032 = distinct !DILexicalBlock(scope: !2028, file: !1625, line: 257, column: 13)
!2033 = !DILocalVariable(name: "kind", scope: !2034, file: !1625, line: 258, type: !77, align: 1)
!2034 = distinct !DILexicalBlock(scope: !2032, file: !1625, line: 258, column: 13)
!2035 = !DILocalVariable(name: "custom", scope: !2036, file: !1625, line: 275, type: !1838, align: 8)
!2036 = distinct !DILexicalBlock(scope: !2028, file: !1625, line: 275, column: 13)
!2037 = !{!2006, !2038}
!2038 = !DITemplateTypeParameter(name: "F", type: !2021)
!2039 = !DILocation(line: 246, column: 29, scope: !1994)
!2040 = !DILocation(line: 246, column: 47, scope: !1994)
!2041 = !DILocation(line: 250, column: 9, scope: !2028)
!2042 = !DILocation(line: 258, column: 17, scope: !2034)
!2043 = !DILocalVariable(name: "self", scope: !2044, file: !1625, line: 258, type: !1849, align: 1)
!2044 = !DILexicalBlockFile(scope: !2045, file: !1625, discriminator: 0)
!2045 = distinct !DISubprogram(name: "unwrap_or_else<std::io::error::ErrorKind, std::io::error::repr_bitpacked::decode_repr::{closure_env#0}<&std::io::error::Custom, std::io::error::repr_bitpacked::{impl#2}::data::{closure_env#0}>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h0fc178706d6ab433E", scope: !1849, file: !1848, line: 818, type: !2046, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2056, retainedNodes: !2051)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{!77, !1849, !2048}
!2048 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&std::io::error::Custom, std::io::error::repr_bitpacked::{impl#2}::data::{closure_env#0}>", scope: !1865, file: !2, size: 64, align: 64, elements: !2049, templateParams: !28, identifier: "405a73e3826ad740c8cb72c185a5d386")
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__bits", scope: !2048, file: !2, baseType: !918, size: 64, align: 64)
!2051 = !{!2043, !2052, !2053}
!2052 = !DILocalVariable(name: "f", scope: !2044, file: !1625, line: 258, type: !2048, align: 8)
!2053 = !DILocalVariable(name: "x", scope: !2054, file: !1625, line: 258, type: !77, align: 1)
!2054 = !DILexicalBlockFile(scope: !2055, file: !1625, discriminator: 0)
!2055 = distinct !DILexicalBlock(scope: !2045, file: !1848, line: 824, column: 13)
!2056 = !{!1856, !2057}
!2057 = !DITemplateTypeParameter(name: "F", type: !2048)
!2058 = !DILocation(line: 258, column: 24, scope: !2044, inlinedAt: !2059)
!2059 = !DILocation(line: 258, column: 24, scope: !2032)
!2060 = !DILocalVariable(name: "self", scope: !2061, file: !1625, line: 270, type: !1880, align: 8)
!2061 = !DILexicalBlockFile(scope: !2062, file: !1625, discriminator: 0)
!2062 = distinct !DISubprogram(name: "as_ptr<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hac5a124edf6ec694E", scope: !1880, file: !1413, line: 330, type: !1886, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1884, retainedNodes: !2063)
!2063 = !{!2060}
!2064 = !DILocation(line: 270, column: 58, scope: !2061, inlinedAt: !2065)
!2065 = !DILocation(line: 270, column: 58, scope: !2028)
!2066 = !DILocation(line: 250, column: 9, scope: !1994)
!2067 = !DILocation(line: 250, column: 16, scope: !1994)
!2068 = !DILocalVariable(name: "self", scope: !2069, file: !1625, line: 250, type: !51, align: 8)
!2069 = !DILexicalBlockFile(scope: !2070, file: !1625, discriminator: 0)
!2070 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h437387acc64ec663E", scope: !51, file: !1413, line: 330, type: !1897, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !2071)
!2071 = !{!2068}
!2072 = !DILocation(line: 250, column: 16, scope: !2069, inlinedAt: !2067)
!2073 = !DILocalVariable(name: "self", scope: !2074, file: !1625, line: 250, type: !1058, align: 8)
!2074 = !DILexicalBlockFile(scope: !2075, file: !1625, discriminator: 0)
!2075 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a992de1f612dd6bE", scope: !1027, file: !1016, line: 184, type: !1904, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !2076)
!2076 = !{!2073}
!2077 = !DILocation(line: 250, column: 16, scope: !2074, inlinedAt: !2067)
!2078 = !DILocation(line: 251, column: 11, scope: !2028)
!2079 = !DILocation(line: 251, column: 5, scope: !2028)
!2080 = !DILocation(line: 280, column: 13, scope: !2028)
!2081 = !DILocation(line: 253, column: 26, scope: !2028)
!2082 = !DILocation(line: 253, column: 24, scope: !2028)
!2083 = !DILocation(line: 253, column: 17, scope: !2030)
!2084 = !DILocation(line: 254, column: 13, scope: !2030)
!2085 = !DILocation(line: 255, column: 9, scope: !2028)
!2086 = !DILocation(line: 257, column: 30, scope: !2028)
!2087 = !DILocation(line: 257, column: 29, scope: !2028)
!2088 = !DILocation(line: 257, column: 17, scope: !2032)
!2089 = !DILocalVariable(name: "self", scope: !2090, file: !1625, line: 270, type: !51, align: 8)
!2090 = !DILexicalBlockFile(scope: !2091, file: !1625, discriminator: 0)
!2091 = distinct !DISubprogram(name: "cast<(), std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h1b1f2e997708006eE", scope: !51, file: !1413, line: 453, type: !1923, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1926, retainedNodes: !2092)
!2092 = !{!2089}
!2093 = !DILocation(line: 270, column: 58, scope: !2090, inlinedAt: !2065)
!2094 = !DILocalVariable(name: "self", scope: !2095, file: !1625, line: 270, type: !51, align: 8)
!2095 = !DILexicalBlockFile(scope: !2096, file: !1625, discriminator: 0)
!2096 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h437387acc64ec663E", scope: !51, file: !1413, line: 330, type: !1897, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !2097)
!2097 = !{!2094}
!2098 = !DILocation(line: 270, column: 58, scope: !2095, inlinedAt: !2099)
!2099 = !DILocation(line: 455, column: 41, scope: !2091, inlinedAt: !2065)
!2100 = !DILocalVariable(name: "ptr", scope: !2101, file: !1625, line: 270, type: !1888, align: 8)
!2101 = !DILexicalBlockFile(scope: !2102, file: !1625, discriminator: 0)
!2102 = distinct !DISubprogram(name: "new_unchecked<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h99f66df3b5134b30E", scope: !1880, file: !1413, line: 196, type: !1938, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1884, retainedNodes: !2103)
!2103 = !{!2100}
!2104 = !DILocation(line: 270, column: 58, scope: !2101, inlinedAt: !2105)
!2105 = !DILocation(line: 455, column: 18, scope: !2091, inlinedAt: !2065)
!2106 = !DILocation(line: 270, column: 31, scope: !2028)
!2107 = !DILocation(line: 270, column: 94, scope: !2028)
!2108 = !DILocation(line: 275, column: 26, scope: !2028)
!2109 = !DILocalVariable(name: "self", scope: !2110, file: !1625, line: 275, type: !51, align: 8)
!2110 = !DILexicalBlockFile(scope: !2111, file: !1625, discriminator: 0)
!2111 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h437387acc64ec663E", scope: !51, file: !1413, line: 330, type: !1897, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !2112)
!2112 = !{!2109}
!2113 = !DILocation(line: 275, column: 26, scope: !2110, inlinedAt: !2108)
!2114 = !DILocalVariable(name: "self", scope: !2115, file: !1625, line: 275, type: !1058, align: 8)
!2115 = !DILexicalBlockFile(scope: !2116, file: !1625, discriminator: 0)
!2116 = distinct !DISubprogram(name: "cast<(), u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h28e782c2f84b7aa6E", scope: !1027, file: !1016, line: 45, type: !1954, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1957, retainedNodes: !2117)
!2117 = !{!2114}
!2118 = !DILocation(line: 275, column: 26, scope: !2115, inlinedAt: !2108)
!2119 = !DILocalVariable(name: "self", scope: !2120, file: !1625, line: 275, type: !1021, align: 8)
!2120 = !DILexicalBlockFile(scope: !2121, file: !1625, discriminator: 0)
!2121 = distinct !DISubprogram(name: "wrapping_sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_sub17h929eb4b1645234c6E", scope: !1027, file: !1016, line: 1236, type: !1028, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !2122)
!2122 = !{!2119, !2123}
!2123 = !DILocalVariable(name: "count", scope: !2120, file: !1625, line: 275, type: !9, align: 8)
!2124 = !DILocation(line: 275, column: 26, scope: !2120, inlinedAt: !2108)
!2125 = !DILocalVariable(name: "self", scope: !2126, file: !1625, line: 275, type: !1021, align: 8)
!2126 = !DILexicalBlockFile(scope: !2127, file: !1625, discriminator: 0)
!2127 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$15wrapping_offset17h893cb8a9d920a839E", scope: !1027, file: !1016, line: 549, type: !1037, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !2128)
!2128 = !{!2125, !2129}
!2129 = !DILocalVariable(name: "count", scope: !2126, file: !1625, line: 275, type: !951, align: 8)
!2130 = !DILocation(line: 275, column: 26, scope: !2126, inlinedAt: !2131)
!2131 = !DILocation(line: 1240, column: 9, scope: !2121, inlinedAt: !2108)
!2132 = !DILocation(line: 283, column: 1, scope: !1994)
!2133 = !DILocalVariable(name: "self", scope: !2134, file: !1625, line: 275, type: !1021, align: 8)
!2134 = !DILexicalBlockFile(scope: !2135, file: !1625, discriminator: 0)
!2135 = distinct !DISubprogram(name: "cast<u8, std::io::error::Custom>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h8094610612170fd9E", scope: !1027, file: !1016, line: 45, type: !1977, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1980, retainedNodes: !2136)
!2136 = !{!2133}
!2137 = !DILocation(line: 275, column: 26, scope: !2134, inlinedAt: !2108)
!2138 = !DILocation(line: 275, column: 17, scope: !2036)
!2139 = !DILocation(line: 276, column: 31, scope: !2036)
!2140 = !DILocation(line: 276, column: 13, scope: !2036)
!2141 = !DILocation(line: 277, column: 9, scope: !2028)
!2142 = !DILocation(line: 258, column: 65, scope: !2032)
!2143 = !DILocation(line: 258, column: 24, scope: !2054, inlinedAt: !2059)
!2144 = !DILocation(line: 268, column: 31, scope: !2034)
!2145 = !DILocation(line: 268, column: 13, scope: !2034)
!2146 = !DILocation(line: 269, column: 9, scope: !2028)
!2147 = !DILocation(line: 246, column: 1, scope: !1994)
!2148 = !DILocation(line: 283, column: 2, scope: !1994)
!2149 = distinct !DISubprogram(name: "{closure#0}<&std::io::error::Custom, std::io::error::repr_bitpacked::{impl#2}::data::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17h4f972a53dd29fa66E", scope: !1865, file: !1625, line: 258, type: !2150, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2037, retainedNodes: !2152)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{!77, !2048}
!2152 = !{!2153}
!2153 = !DILocalVariable(name: "bits", scope: !2149, file: !1625, line: 250, type: !9, align: 8)
!2154 = !DILocation(line: 250, column: 9, scope: !2149)
!2155 = !DILocalVariable(name: "_unsafe_arg", scope: !2156, file: !1625, line: 259, type: !2161, align: 1)
!2156 = !DILexicalBlockFile(scope: !2157, file: !1625, discriminator: 0)
!2157 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17hf4ad7d84c88e658aE", scope: !1649, file: !2158, line: 410, type: !2159, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !2164)
!2158 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "18dcc19de419985ae78d2bd8ed07e5dc")
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!1649, !1652, !1703, !1666, !2161}
!2161 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !858, file: !2, align: 8, elements: !2162, templateParams: !28, identifier: "5672b6012e25576f721c1f767a829851")
!2162 = !{!2163}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !2161, file: !2, baseType: !7, align: 8)
!2164 = !{!2165, !2166, !2167, !2155}
!2165 = !DILocalVariable(name: "pieces", scope: !2156, file: !1625, line: 259, type: !1652, align: 8)
!2166 = !DILocalVariable(name: "args", scope: !2156, file: !1625, line: 259, type: !1703, align: 8)
!2167 = !DILocalVariable(name: "fmt", scope: !2156, file: !1625, line: 259, type: !1666, align: 8)
!2168 = !DILocation(line: 259, column: 17, scope: !2156, inlinedAt: !2169)
!2169 = !DILocation(line: 57, column: 38, scope: !2170)
!2170 = !DILexicalBlockFile(scope: !2149, file: !2171, discriminator: 0)
!2171 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "fdc6e43203342ea3dc7947f5f0419604")
!2172 = !DILocation(line: 266, column: 17, scope: !2173, inlinedAt: !2175)
!2173 = !DILexicalBlockFile(scope: !2174, file: !1625, discriminator: 0)
!2174 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h837ae9793f44f7d6E", scope: !1497, file: !1496, line: 100, type: !179, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!2175 = !DILocation(line: 266, column: 17, scope: !2149)
!2176 = distinct !DISubprogram(name: "{closure#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17h9adb53631219a0cfE", scope: !1865, file: !1625, line: 258, type: !2177, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1839, retainedNodes: !2179)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!77, !1864}
!2179 = !{!2180}
!2180 = !DILocalVariable(name: "bits", scope: !2176, file: !1625, line: 250, type: !9, align: 8)
!2181 = !DILocation(line: 250, column: 9, scope: !2176)
!2182 = !DILocalVariable(name: "_unsafe_arg", scope: !2183, file: !1625, line: 259, type: !2161, align: 1)
!2183 = !DILexicalBlockFile(scope: !2184, file: !1625, discriminator: 0)
!2184 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17hf4ad7d84c88e658aE", scope: !1649, file: !2158, line: 410, type: !2159, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !2185)
!2185 = !{!2186, !2187, !2188, !2182}
!2186 = !DILocalVariable(name: "pieces", scope: !2183, file: !1625, line: 259, type: !1652, align: 8)
!2187 = !DILocalVariable(name: "args", scope: !2183, file: !1625, line: 259, type: !1703, align: 8)
!2188 = !DILocalVariable(name: "fmt", scope: !2183, file: !1625, line: 259, type: !1666, align: 8)
!2189 = !DILocation(line: 259, column: 17, scope: !2183, inlinedAt: !2190)
!2190 = !DILocation(line: 57, column: 38, scope: !2191)
!2191 = !DILexicalBlockFile(scope: !2176, file: !2171, discriminator: 0)
!2192 = !DILocation(line: 266, column: 17, scope: !2193, inlinedAt: !2195)
!2193 = !DILexicalBlockFile(scope: !2194, file: !1625, discriminator: 0)
!2194 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h837ae9793f44f7d6E", scope: !1497, file: !1496, line: 100, type: !179, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!2195 = !DILocation(line: 266, column: 17, scope: !2176)
!2196 = distinct !DISubprogram(name: "kind_from_prim", linkageName: "_ZN3std2io5error14repr_bitpacked14kind_from_prim17h1dd369807d8c491bE", scope: !48, file: !1625, line: 289, type: !2197, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !2199)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!1849, !275}
!2199 = !{!2200, !2201, !2203, !2204, !2206, !2207, !2209, !2210, !2212, !2213, !2215, !2216, !2218, !2219, !2221, !2222, !2224, !2225, !2227, !2228, !2230, !2231, !2233, !2234, !2236, !2237, !2239, !2240, !2242, !2243, !2245, !2246, !2248, !2249, !2251, !2252, !2254, !2255, !2257, !2258, !2260, !2261, !2263, !2264, !2266, !2267, !2269, !2270, !2272, !2273, !2275, !2276, !2278, !2279, !2281, !2282, !2284, !2285, !2287, !2288, !2290, !2291, !2293, !2294, !2296, !2297, !2299, !2300, !2302, !2303, !2305, !2306, !2308, !2309, !2311, !2312, !2314, !2315, !2317, !2318, !2320, !2321, !2323}
!2200 = !DILocalVariable(name: "ek", arg: 1, scope: !2196, file: !1625, line: 289, type: !275)
!2201 = !DILocalVariable(name: "v", scope: !2202, file: !1625, line: 302, type: !275, align: 4)
!2202 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2203 = !DILocalVariable(name: "v", scope: !2202, file: !1625, line: 302, type: !576, align: 8)
!2204 = !DILocalVariable(name: "v", scope: !2205, file: !1625, line: 302, type: !275, align: 4)
!2205 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2206 = !DILocalVariable(name: "v", scope: !2205, file: !1625, line: 302, type: !576, align: 8)
!2207 = !DILocalVariable(name: "v", scope: !2208, file: !1625, line: 302, type: !275, align: 4)
!2208 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2209 = !DILocalVariable(name: "v", scope: !2208, file: !1625, line: 302, type: !576, align: 8)
!2210 = !DILocalVariable(name: "v", scope: !2211, file: !1625, line: 302, type: !275, align: 4)
!2211 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2212 = !DILocalVariable(name: "v", scope: !2211, file: !1625, line: 302, type: !576, align: 8)
!2213 = !DILocalVariable(name: "v", scope: !2214, file: !1625, line: 302, type: !275, align: 4)
!2214 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2215 = !DILocalVariable(name: "v", scope: !2214, file: !1625, line: 302, type: !576, align: 8)
!2216 = !DILocalVariable(name: "v", scope: !2217, file: !1625, line: 302, type: !275, align: 4)
!2217 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2218 = !DILocalVariable(name: "v", scope: !2217, file: !1625, line: 302, type: !576, align: 8)
!2219 = !DILocalVariable(name: "v", scope: !2220, file: !1625, line: 302, type: !275, align: 4)
!2220 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2221 = !DILocalVariable(name: "v", scope: !2220, file: !1625, line: 302, type: !576, align: 8)
!2222 = !DILocalVariable(name: "v", scope: !2223, file: !1625, line: 302, type: !275, align: 4)
!2223 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2224 = !DILocalVariable(name: "v", scope: !2223, file: !1625, line: 302, type: !576, align: 8)
!2225 = !DILocalVariable(name: "v", scope: !2226, file: !1625, line: 302, type: !275, align: 4)
!2226 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2227 = !DILocalVariable(name: "v", scope: !2226, file: !1625, line: 302, type: !576, align: 8)
!2228 = !DILocalVariable(name: "v", scope: !2229, file: !1625, line: 302, type: !275, align: 4)
!2229 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2230 = !DILocalVariable(name: "v", scope: !2229, file: !1625, line: 302, type: !576, align: 8)
!2231 = !DILocalVariable(name: "v", scope: !2232, file: !1625, line: 302, type: !275, align: 4)
!2232 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2233 = !DILocalVariable(name: "v", scope: !2232, file: !1625, line: 302, type: !576, align: 8)
!2234 = !DILocalVariable(name: "v", scope: !2235, file: !1625, line: 302, type: !275, align: 4)
!2235 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2236 = !DILocalVariable(name: "v", scope: !2235, file: !1625, line: 302, type: !576, align: 8)
!2237 = !DILocalVariable(name: "v", scope: !2238, file: !1625, line: 302, type: !275, align: 4)
!2238 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2239 = !DILocalVariable(name: "v", scope: !2238, file: !1625, line: 302, type: !576, align: 8)
!2240 = !DILocalVariable(name: "v", scope: !2241, file: !1625, line: 302, type: !275, align: 4)
!2241 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2242 = !DILocalVariable(name: "v", scope: !2241, file: !1625, line: 302, type: !576, align: 8)
!2243 = !DILocalVariable(name: "v", scope: !2244, file: !1625, line: 302, type: !275, align: 4)
!2244 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2245 = !DILocalVariable(name: "v", scope: !2244, file: !1625, line: 302, type: !576, align: 8)
!2246 = !DILocalVariable(name: "v", scope: !2247, file: !1625, line: 302, type: !275, align: 4)
!2247 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2248 = !DILocalVariable(name: "v", scope: !2247, file: !1625, line: 302, type: !576, align: 8)
!2249 = !DILocalVariable(name: "v", scope: !2250, file: !1625, line: 302, type: !275, align: 4)
!2250 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2251 = !DILocalVariable(name: "v", scope: !2250, file: !1625, line: 302, type: !576, align: 8)
!2252 = !DILocalVariable(name: "v", scope: !2253, file: !1625, line: 302, type: !275, align: 4)
!2253 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2254 = !DILocalVariable(name: "v", scope: !2253, file: !1625, line: 302, type: !576, align: 8)
!2255 = !DILocalVariable(name: "v", scope: !2256, file: !1625, line: 302, type: !275, align: 4)
!2256 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2257 = !DILocalVariable(name: "v", scope: !2256, file: !1625, line: 302, type: !576, align: 8)
!2258 = !DILocalVariable(name: "v", scope: !2259, file: !1625, line: 302, type: !275, align: 4)
!2259 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2260 = !DILocalVariable(name: "v", scope: !2259, file: !1625, line: 302, type: !576, align: 8)
!2261 = !DILocalVariable(name: "v", scope: !2262, file: !1625, line: 302, type: !275, align: 4)
!2262 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2263 = !DILocalVariable(name: "v", scope: !2262, file: !1625, line: 302, type: !576, align: 8)
!2264 = !DILocalVariable(name: "v", scope: !2265, file: !1625, line: 302, type: !275, align: 4)
!2265 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2266 = !DILocalVariable(name: "v", scope: !2265, file: !1625, line: 302, type: !576, align: 8)
!2267 = !DILocalVariable(name: "v", scope: !2268, file: !1625, line: 302, type: !275, align: 4)
!2268 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2269 = !DILocalVariable(name: "v", scope: !2268, file: !1625, line: 302, type: !576, align: 8)
!2270 = !DILocalVariable(name: "v", scope: !2271, file: !1625, line: 302, type: !275, align: 4)
!2271 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2272 = !DILocalVariable(name: "v", scope: !2271, file: !1625, line: 302, type: !576, align: 8)
!2273 = !DILocalVariable(name: "v", scope: !2274, file: !1625, line: 302, type: !275, align: 4)
!2274 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2275 = !DILocalVariable(name: "v", scope: !2274, file: !1625, line: 302, type: !576, align: 8)
!2276 = !DILocalVariable(name: "v", scope: !2277, file: !1625, line: 302, type: !275, align: 4)
!2277 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2278 = !DILocalVariable(name: "v", scope: !2277, file: !1625, line: 302, type: !576, align: 8)
!2279 = !DILocalVariable(name: "v", scope: !2280, file: !1625, line: 302, type: !275, align: 4)
!2280 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2281 = !DILocalVariable(name: "v", scope: !2280, file: !1625, line: 302, type: !576, align: 8)
!2282 = !DILocalVariable(name: "v", scope: !2283, file: !1625, line: 302, type: !275, align: 4)
!2283 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2284 = !DILocalVariable(name: "v", scope: !2283, file: !1625, line: 302, type: !576, align: 8)
!2285 = !DILocalVariable(name: "v", scope: !2286, file: !1625, line: 302, type: !275, align: 4)
!2286 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2287 = !DILocalVariable(name: "v", scope: !2286, file: !1625, line: 302, type: !576, align: 8)
!2288 = !DILocalVariable(name: "v", scope: !2289, file: !1625, line: 302, type: !275, align: 4)
!2289 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2290 = !DILocalVariable(name: "v", scope: !2289, file: !1625, line: 302, type: !576, align: 8)
!2291 = !DILocalVariable(name: "v", scope: !2292, file: !1625, line: 302, type: !275, align: 4)
!2292 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2293 = !DILocalVariable(name: "v", scope: !2292, file: !1625, line: 302, type: !576, align: 8)
!2294 = !DILocalVariable(name: "v", scope: !2295, file: !1625, line: 302, type: !275, align: 4)
!2295 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2296 = !DILocalVariable(name: "v", scope: !2295, file: !1625, line: 302, type: !576, align: 8)
!2297 = !DILocalVariable(name: "v", scope: !2298, file: !1625, line: 302, type: !275, align: 4)
!2298 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2299 = !DILocalVariable(name: "v", scope: !2298, file: !1625, line: 302, type: !576, align: 8)
!2300 = !DILocalVariable(name: "v", scope: !2301, file: !1625, line: 302, type: !275, align: 4)
!2301 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2302 = !DILocalVariable(name: "v", scope: !2301, file: !1625, line: 302, type: !576, align: 8)
!2303 = !DILocalVariable(name: "v", scope: !2304, file: !1625, line: 302, type: !275, align: 4)
!2304 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2305 = !DILocalVariable(name: "v", scope: !2304, file: !1625, line: 302, type: !576, align: 8)
!2306 = !DILocalVariable(name: "v", scope: !2307, file: !1625, line: 302, type: !275, align: 4)
!2307 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2308 = !DILocalVariable(name: "v", scope: !2307, file: !1625, line: 302, type: !576, align: 8)
!2309 = !DILocalVariable(name: "v", scope: !2310, file: !1625, line: 302, type: !275, align: 4)
!2310 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2311 = !DILocalVariable(name: "v", scope: !2310, file: !1625, line: 302, type: !576, align: 8)
!2312 = !DILocalVariable(name: "v", scope: !2313, file: !1625, line: 302, type: !275, align: 4)
!2313 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2314 = !DILocalVariable(name: "v", scope: !2313, file: !1625, line: 302, type: !576, align: 8)
!2315 = !DILocalVariable(name: "v", scope: !2316, file: !1625, line: 302, type: !275, align: 4)
!2316 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2317 = !DILocalVariable(name: "v", scope: !2316, file: !1625, line: 302, type: !576, align: 8)
!2318 = !DILocalVariable(name: "v", scope: !2319, file: !1625, line: 302, type: !275, align: 4)
!2319 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2320 = !DILocalVariable(name: "v", scope: !2319, file: !1625, line: 302, type: !576, align: 8)
!2321 = !DILocalVariable(name: "v", scope: !2322, file: !1625, line: 302, type: !275, align: 4)
!2322 = distinct !DILexicalBlock(scope: !2196, file: !1625, line: 297, column: 19)
!2323 = !DILocalVariable(name: "v", scope: !2322, file: !1625, line: 302, type: !576, align: 8)
!2324 = !DILocation(line: 289, column: 19, scope: !2196)
!2325 = !DILocation(line: 302, column: 5, scope: !2196)
!2326 = !DILocation(line: 302, column: 5, scope: !2202)
!2327 = !DILocation(line: 302, column: 5, scope: !2205)
!2328 = !DILocation(line: 345, column: 2, scope: !2196)
!2329 = !DILocation(line: 302, column: 5, scope: !2208)
!2330 = !DILocation(line: 302, column: 5, scope: !2211)
!2331 = !DILocation(line: 302, column: 5, scope: !2214)
!2332 = !DILocation(line: 302, column: 5, scope: !2217)
!2333 = !DILocation(line: 302, column: 5, scope: !2220)
!2334 = !DILocation(line: 302, column: 5, scope: !2223)
!2335 = !DILocation(line: 302, column: 5, scope: !2226)
!2336 = !DILocation(line: 302, column: 5, scope: !2229)
!2337 = !DILocation(line: 302, column: 5, scope: !2232)
!2338 = !DILocation(line: 302, column: 5, scope: !2235)
!2339 = !DILocation(line: 302, column: 5, scope: !2238)
!2340 = !DILocation(line: 302, column: 5, scope: !2241)
!2341 = !DILocation(line: 302, column: 5, scope: !2244)
!2342 = !DILocation(line: 302, column: 5, scope: !2247)
!2343 = !DILocation(line: 302, column: 5, scope: !2250)
!2344 = !DILocation(line: 302, column: 5, scope: !2253)
!2345 = !DILocation(line: 302, column: 5, scope: !2256)
!2346 = !DILocation(line: 302, column: 5, scope: !2259)
!2347 = !DILocation(line: 302, column: 5, scope: !2262)
!2348 = !DILocation(line: 302, column: 5, scope: !2265)
!2349 = !DILocation(line: 302, column: 5, scope: !2268)
!2350 = !DILocation(line: 302, column: 5, scope: !2271)
!2351 = !DILocation(line: 302, column: 5, scope: !2274)
!2352 = !DILocation(line: 302, column: 5, scope: !2277)
!2353 = !DILocation(line: 302, column: 5, scope: !2280)
!2354 = !DILocation(line: 302, column: 5, scope: !2283)
!2355 = !DILocation(line: 302, column: 5, scope: !2286)
!2356 = !DILocation(line: 302, column: 5, scope: !2289)
!2357 = !DILocation(line: 302, column: 5, scope: !2292)
!2358 = !DILocation(line: 302, column: 5, scope: !2295)
!2359 = !DILocation(line: 302, column: 5, scope: !2298)
!2360 = !DILocation(line: 302, column: 5, scope: !2301)
!2361 = !DILocation(line: 302, column: 5, scope: !2304)
!2362 = !DILocation(line: 302, column: 5, scope: !2307)
!2363 = !DILocation(line: 302, column: 5, scope: !2310)
!2364 = !DILocation(line: 302, column: 5, scope: !2313)
!2365 = !DILocation(line: 302, column: 5, scope: !2316)
!2366 = !DILocation(line: 302, column: 5, scope: !2319)
!2367 = !DILocation(line: 302, column: 5, scope: !2322)
!2368 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN3std2io5error14repr_bitpacked4Repr4data28_$u7b$$u7b$closure$u7d$$u7d$17h84939d74855cabc5E", scope: !2022, file: !1625, line: 212, type: !2369, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !2371)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{!2007, !2021, !1838}
!2371 = !{!2372, !2373}
!2372 = !DILocalVariable(name: "c", arg: 2, scope: !2368, file: !1625, line: 212, type: !1838)
!2373 = !DILocalVariable(arg: 1, scope: !2368, file: !1625, line: 212, type: !2021)
!2374 = !DILocation(line: 212, column: 38, scope: !2368)
!2375 = !DILocation(line: 212, column: 39, scope: !2368)
!2376 = !DILocation(line: 212, column: 41, scope: !2368)
!2377 = distinct !DISubprogram(name: "kind", linkageName: "_ZN3std2io5error5Error4kind17h574b1779eeb38e5aE", scope: !43, file: !1588, line: 881, type: !2378, scopeLine: 881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !2380)
!2378 = !DISubroutineType(types: !2379)
!2379 = !{!77, !1540}
!2380 = !{!2381, !2382, !2384, !2386, !2388}
!2381 = !DILocalVariable(name: "self", arg: 1, scope: !2377, file: !1588, line: 881, type: !1540)
!2382 = !DILocalVariable(name: "code", scope: !2383, file: !1588, line: 883, type: !70, align: 4)
!2383 = distinct !DILexicalBlock(scope: !2377, file: !1588, line: 883, column: 13)
!2384 = !DILocalVariable(name: "c", scope: !2385, file: !1588, line: 884, type: !2007, align: 8)
!2385 = distinct !DILexicalBlock(scope: !2377, file: !1588, line: 884, column: 13)
!2386 = !DILocalVariable(name: "kind", scope: !2387, file: !1588, line: 885, type: !77, align: 1)
!2387 = distinct !DILexicalBlock(scope: !2377, file: !1588, line: 885, column: 13)
!2388 = !DILocalVariable(name: "m", scope: !2389, file: !1588, line: 886, type: !140, align: 8)
!2389 = distinct !DILexicalBlock(scope: !2377, file: !1588, line: 886, column: 13)
!2390 = !DILocation(line: 881, column: 17, scope: !2377)
!2391 = !DILocation(line: 882, column: 15, scope: !2377)
!2392 = !DILocalVariable(name: "self", scope: !2393, file: !1588, line: 882, type: !2397, align: 8)
!2393 = !DILexicalBlockFile(scope: !2394, file: !1588, discriminator: 0)
!2394 = distinct !DISubprogram(name: "data", linkageName: "_ZN3std2io5error14repr_bitpacked4Repr4data17hca028626d9ca7cb5E", scope: !47, file: !1625, line: 210, type: !2395, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !2398)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{!1997, !2397}
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::repr_bitpacked::Repr", baseType: !47, size: 64, align: 64, dwarfAddressSpace: 0)
!2398 = !{!2392}
!2399 = !DILocation(line: 882, column: 15, scope: !2393, inlinedAt: !2391)
!2400 = !{i8 0, i8 4}
!2401 = !DILocation(line: 882, column: 9, scope: !2377)
!2402 = !DILocation(line: 883, column: 27, scope: !2377)
!2403 = !DILocation(line: 883, column: 27, scope: !2383)
!2404 = !DILocation(line: 883, column: 36, scope: !2383)
!2405 = !DILocation(line: 885, column: 31, scope: !2377)
!2406 = !DILocation(line: 885, column: 31, scope: !2387)
!2407 = !DILocation(line: 885, column: 40, scope: !2387)
!2408 = !DILocation(line: 885, column: 43, scope: !2377)
!2409 = !DILocation(line: 886, column: 38, scope: !2377)
!2410 = !DILocation(line: 886, column: 38, scope: !2389)
!2411 = !DILocation(line: 886, column: 44, scope: !2389)
!2412 = !DILocation(line: 886, column: 49, scope: !2377)
!2413 = !DILocation(line: 884, column: 31, scope: !2377)
!2414 = !DILocation(line: 884, column: 31, scope: !2385)
!2415 = !DILocation(line: 884, column: 37, scope: !2385)
!2416 = !DILocation(line: 884, column: 42, scope: !2377)
!2417 = !DILocation(line: 888, column: 6, scope: !2377)
!2418 = !DILocation(line: 883, column: 63, scope: !2377)
!2419 = distinct !DISubprogram(name: "lang_start<()>", linkageName: "_ZN3std2rt10lang_start17ha4486b9f474a3cafE", scope: !175, file: !2420, line: 139, type: !2421, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !2424)
!2420 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "53ba40c54b421907f2e3ab22fb96d5b4")
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!951, !178, !951, !2423}
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const u8", baseType: !353, size: 64, align: 64, dwarfAddressSpace: 0)
!2424 = !{!2425, !2426, !2427, !2428}
!2425 = !DILocalVariable(name: "main", arg: 1, scope: !2419, file: !2420, line: 140, type: !178)
!2426 = !DILocalVariable(name: "argc", arg: 2, scope: !2419, file: !2420, line: 141, type: !951)
!2427 = !DILocalVariable(name: "argv", arg: 3, scope: !2419, file: !2420, line: 142, type: !2423)
!2428 = !DILocalVariable(name: "v", scope: !2429, file: !2420, line: 144, type: !951, align: 8)
!2429 = distinct !DILexicalBlock(scope: !2419, file: !2420, line: 144, column: 5)
!2430 = !DILocation(line: 140, column: 5, scope: !2419)
!2431 = !DILocation(line: 141, column: 5, scope: !2419)
!2432 = !DILocation(line: 142, column: 5, scope: !2419)
!2433 = !DILocation(line: 145, column: 10, scope: !2419)
!2434 = !DILocation(line: 145, column: 9, scope: !2419)
!2435 = !DILocation(line: 144, column: 17, scope: !2419)
!2436 = !DILocation(line: 144, column: 12, scope: !2419)
!2437 = !DILocation(line: 144, column: 12, scope: !2429)
!2438 = !DILocation(line: 150, column: 2, scope: !2419)
!2439 = distinct !DISubprogram(name: "{closure#0}<()>", linkageName: "_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h4c71719825c42f40E", scope: !174, file: !2420, line: 145, type: !2440, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !2443)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!70, !2442}
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::rt::lang_start::{closure_env#0}<()>", baseType: !173, size: 64, align: 64, dwarfAddressSpace: 0)
!2443 = !{!2444}
!2444 = !DILocalVariable(name: "main", scope: !2439, file: !2420, line: 140, type: !178, align: 8)
!2445 = !DILocation(line: 140, column: 5, scope: !2439)
!2446 = !DILocalVariable(name: "self", scope: !2447, file: !2420, line: 145, type: !2450, align: 1)
!2447 = !DILexicalBlockFile(scope: !2448, file: !2420, discriminator: 0)
!2448 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217h94e1c3c620a69e04E", scope: !2450, file: !2449, line: 1808, type: !2459, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !2461)
!2449 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/process.rs", directory: "", checksumkind: CSK_MD5, checksum: "78747cd94138b7f073ffd16b64787cb4")
!2450 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !2451, file: !2, size: 8, align: 8, elements: !2452, templateParams: !28, identifier: "65270507d071436c1dbdf6fde69e5261")
!2451 = !DINamespace(name: "process", scope: !18)
!2452 = !{!2453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2450, file: !2, baseType: !2454, size: 8, align: 8)
!2454 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !2455, file: !2, size: 8, align: 8, elements: !2457, templateParams: !28, identifier: "faca173619846f0e95e842844eb5af74")
!2455 = !DINamespace(name: "process_common", scope: !2456)
!2456 = !DINamespace(name: "process", scope: !24)
!2457 = !{!2458}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2454, file: !2, baseType: !78, size: 8, align: 8)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!70, !2450}
!2461 = !{!2446}
!2462 = !DILocation(line: 145, column: 18, scope: !2447, inlinedAt: !2463)
!2463 = !DILocation(line: 145, column: 18, scope: !2439)
!2464 = !DILocation(line: 145, column: 77, scope: !2439)
!2465 = !DILocalVariable(name: "self", scope: !2466, file: !2420, line: 145, type: !2471, align: 8)
!2466 = !DILexicalBlockFile(scope: !2467, file: !2420, discriminator: 0)
!2467 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217hdedfe88835a8ac48E", scope: !2454, file: !2468, line: 485, type: !2469, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !2472)
!2468 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys/unix/process/process_common.rs", directory: "", checksumkind: CSK_MD5, checksum: "0172c472c69d772c784713c132680582")
!2469 = !DISubroutineType(types: !2470)
!2470 = !{!70, !2471}
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::sys::unix::process::process_common::ExitCode", baseType: !2454, size: 64, align: 64, dwarfAddressSpace: 0)
!2472 = !{!2465}
!2473 = !DILocation(line: 145, column: 18, scope: !2466, inlinedAt: !2474)
!2474 = !DILocation(line: 1809, column: 9, scope: !2448, inlinedAt: !2463)
!2475 = !DILocation(line: 145, column: 17, scope: !2439)
!2476 = distinct !DISubprogram(name: "catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>, ()>", linkageName: "_ZN3std5panic12catch_unwind17h04c1075fbce9ae98E", scope: !2478, file: !2477, line: 136, type: !2479, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2483, retainedNodes: !2481)
!2477 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "443beb753a45951a5cc529fe2f22a9c0")
!2478 = !DINamespace(name: "panic", scope: !18)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!446, !1370}
!2481 = !{!2482}
!2482 = !DILocalVariable(name: "f", arg: 1, scope: !2476, file: !2477, line: 136, type: !1370)
!2483 = !{!2484, !1385}
!2484 = !DITemplateTypeParameter(name: "F", type: !1370)
!2485 = !DILocation(line: 136, column: 55, scope: !2476)
!2486 = !DILocation(line: 137, column: 14, scope: !2476)
!2487 = !DILocation(line: 138, column: 2, scope: !2476)
!2488 = distinct !DISubprogram(name: "catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>, ()>", linkageName: "_ZN3std5panic12catch_unwind17h9fda0cff44c6f11eE", scope: !2478, file: !2477, line: 136, type: !2489, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2493, retainedNodes: !2491)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!446, !1394}
!2491 = !{!2492}
!2492 = !DILocalVariable(name: "f", arg: 1, scope: !2488, file: !2477, line: 136, type: !1394)
!2493 = !{!2494, !1385}
!2494 = !DITemplateTypeParameter(name: "F", type: !1394)
!2495 = !DILocation(line: 136, column: 55, scope: !2488)
!2496 = !DILocation(line: 137, column: 14, scope: !2488)
!2497 = !DILocation(line: 138, column: 2, scope: !2488)
!2498 = distinct !DISubprogram(name: "join<()>", linkageName: "_ZN3std6thread18JoinInner$LT$T$GT$4join17hdd7cbb72e863d55eE", scope: !2500, file: !2499, line: 1356, type: !2509, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !2511)
!2499 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/thread/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "b1647442e4d8ace9ed7139fbf6dd23b4")
!2500 = !DICompositeType(tag: DW_TAG_structure_type, name: "JoinInner<()>", scope: !192, file: !2, size: 192, align: 64, elements: !2501, templateParams: !56, identifier: "e9edf0ea3ed9b7949dbf8f527b785a1f")
!2501 = !{!2502, !2507, !2508}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "native", scope: !2500, file: !2, baseType: !2503, size: 64, align: 64)
!2503 = !DICompositeType(tag: DW_TAG_structure_type, name: "Thread", scope: !2504, file: !2, size: 64, align: 64, elements: !2505, templateParams: !28, identifier: "6250958c625b040bc85eda0135f00534")
!2504 = !DINamespace(name: "thread", scope: !24)
!2505 = !{!2506}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2503, file: !2, baseType: !160, size: 64, align: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2500, file: !2, baseType: !195, size: 64, align: 64, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2500, file: !2, baseType: !382, size: 64, align: 64, offset: 128)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!446, !2500}
!2511 = !{!2512}
!2512 = !DILocalVariable(name: "self", arg: 1, scope: !2498, file: !2499, line: 1356, type: !2500)
!2513 = !DILocation(line: 1356, column: 13, scope: !2498)
!2514 = !DILocalVariable(name: "self", scope: !2515, file: !2499, line: 1358, type: !438, align: 8)
!2515 = !DILexicalBlockFile(scope: !2516, file: !2499, discriminator: 0)
!2516 = distinct !DISubprogram(name: "unwrap<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17hc7fc3265a321f994E", scope: !438, file: !1848, line: 772, type: !2517, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !444, retainedNodes: !2519)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{!446, !438, !1109}
!2519 = !{!2514, !2520}
!2520 = !DILocalVariable(name: "val", scope: !2521, file: !2499, line: 1358, type: !446, align: 8)
!2521 = !DILexicalBlockFile(scope: !2522, file: !2499, discriminator: 0)
!2522 = distinct !DILexicalBlock(scope: !2516, file: !1848, line: 774, column: 13)
!2523 = !DILocation(line: 1358, column: 9, scope: !2515, inlinedAt: !2524)
!2524 = !DILocation(line: 1358, column: 9, scope: !2498)
!2525 = !DILocalVariable(name: "self", scope: !2526, file: !2499, line: 1358, type: !2528, align: 8)
!2526 = !DILexicalBlockFile(scope: !2527, file: !2499, discriminator: 0)
!2527 = distinct !DISubprogram(name: "unwrap<&mut std::thread::Packet<()>>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h1b5188e5119410a8E", scope: !2528, file: !1848, line: 772, type: !2542, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2534, retainedNodes: !2544)
!2528 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&mut std::thread::Packet<()>>", scope: !231, file: !2, size: 64, align: 64, elements: !2529, templateParams: !28, identifier: "43b5719339a3859d9d6df82dc8b507a4")
!2529 = !{!2530}
!2530 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2528, file: !2, size: 64, align: 64, elements: !2531, templateParams: !28, identifier: "287a4c22b8e6ca5e458426853a9f10dd", discriminator: !2541)
!2531 = !{!2532, !2537}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2530, file: !2, baseType: !2533, size: 64, align: 64, extraData: i64 0)
!2533 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2528, file: !2, size: 64, align: 64, elements: !28, templateParams: !2534, identifier: "104a123b2be799992d1c02d6adba10cf")
!2534 = !{!2535}
!2535 = !DITemplateTypeParameter(name: "T", type: !2536)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::thread::Packet<()>", baseType: !394, size: 64, align: 64, dwarfAddressSpace: 0)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2530, file: !2, baseType: !2538, size: 64, align: 64)
!2538 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2528, file: !2, size: 64, align: 64, elements: !2539, templateParams: !2534, identifier: "5733c955fbd09a87dc189954bcdb298b")
!2539 = !{!2540}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2538, file: !2, baseType: !2536, size: 64, align: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, scope: !2528, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!2542 = !DISubroutineType(types: !2543)
!2543 = !{!2536, !2528, !1109}
!2544 = !{!2525, !2545}
!2545 = !DILocalVariable(name: "val", scope: !2546, file: !2499, line: 1358, type: !2536, align: 8)
!2546 = !DILexicalBlockFile(scope: !2547, file: !2499, discriminator: 0)
!2547 = distinct !DILexicalBlock(scope: !2527, file: !1848, line: 774, column: 13)
!2548 = !DILocation(line: 1358, column: 9, scope: !2526, inlinedAt: !2524)
!2549 = !DILocation(line: 1357, column: 9, scope: !2498)
!2550 = !DILocation(line: 1359, column: 5, scope: !2498)
!2551 = !DILocation(line: 1358, column: 22, scope: !2498)
!2552 = !DILocation(line: 1358, column: 9, scope: !2546, inlinedAt: !2524)
!2553 = !DILocalVariable(name: "self", scope: !2554, file: !2499, line: 1358, type: !1378, align: 8)
!2554 = !DILexicalBlockFile(scope: !2555, file: !2499, discriminator: 0)
!2555 = distinct !DISubprogram(name: "get_mut<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17hd3a273f706cb22b2E", scope: !435, file: !2556, line: 1959, type: !2557, scopeLine: 1959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !2560)
!2556 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cell.rs", directory: "", checksumkind: CSK_MD5, checksum: "81027bd0ceaa41fbc0bc4e7a3fa9f759")
!2557 = !DISubroutineType(types: !2558)
!2558 = !{!2559, !1378}
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>", baseType: !438, size: 64, align: 64, dwarfAddressSpace: 0)
!2560 = !{!2553}
!2561 = !DILocation(line: 1358, column: 9, scope: !2554, inlinedAt: !2524)
!2562 = !DILocalVariable(name: "self", scope: !2563, file: !2499, line: 1358, type: !2559, align: 8)
!2563 = !DILexicalBlockFile(scope: !2564, file: !2499, discriminator: 0)
!2564 = distinct !DISubprogram(name: "take<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h6599878a909e0bd9E", scope: !438, file: !1848, line: 1574, type: !2565, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !444, retainedNodes: !2567)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!438, !2559}
!2567 = !{!2562}
!2568 = !DILocation(line: 1358, column: 9, scope: !2563, inlinedAt: !2524)
!2569 = !DILocation(line: 1356, column: 5, scope: !2498)
!2570 = !DILocation(line: 1359, column: 6, scope: !2498)
!2571 = distinct !DISubprogram(name: "join<()>", linkageName: "_ZN3std6thread19JoinHandle$LT$T$GT$4join17hbc5dd9a419e25243E", scope: !2572, file: !2499, line: 1489, type: !2575, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !2577)
!2572 = !DICompositeType(tag: DW_TAG_structure_type, name: "JoinHandle<()>", scope: !192, file: !2, size: 192, align: 64, elements: !2573, templateParams: !56, identifier: "b43bffa30ab43e1539781588a98013a0")
!2573 = !{!2574}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2572, file: !2, baseType: !2500, size: 192, align: 64)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!446, !2572}
!2577 = !{!2578}
!2578 = !DILocalVariable(name: "self", arg: 1, scope: !2571, file: !2499, line: 1489, type: !2572)
!2579 = !DILocation(line: 1489, column: 17, scope: !2571)
!2580 = !DILocation(line: 1490, column: 9, scope: !2571)
!2581 = !DILocation(line: 1491, column: 6, scope: !2571)
!2582 = distinct !DISubprogram(name: "spawn<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", linkageName: "_ZN3std6thread5spawn17h8f686819298d3b21E", scope: !192, file: !2499, line: 650, type: !2583, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1489, retainedNodes: !2585)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!2572, !377}
!2585 = !{!2586}
!2586 = !DILocalVariable(name: "f", arg: 1, scope: !2582, file: !2499, line: 650, type: !377)
!2587 = !DILocation(line: 650, column: 20, scope: !2582)
!2588 = !DILocation(line: 656, column: 5, scope: !2582)
!2589 = !DILocation(line: 657, column: 1, scope: !2582)
!2590 = !DILocation(line: 656, column: 26, scope: !2582)
!2591 = !DILocation(line: 657, column: 2, scope: !2582)
!2592 = !DILocation(line: 650, column: 1, scope: !2582)
!2593 = distinct !DISubprogram(name: "spawn_unchecked<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", linkageName: "_ZN3std6thread7Builder15spawn_unchecked17h68509192edd45b03E", scope: !2594, file: !2499, line: 454, type: !2615, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1489, retainedNodes: !2632)
!2594 = !DICompositeType(tag: DW_TAG_structure_type, name: "Builder", scope: !192, file: !2, size: 320, align: 64, elements: !2595, templateParams: !28, identifier: "d1d56508eb176ce3c98a32b4d9c1aa8c")
!2595 = !{!2596, !2614}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2594, file: !2, baseType: !2597, size: 192, align: 64)
!2597 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::string::String>", scope: !231, file: !2, size: 192, align: 64, elements: !2598, templateParams: !28, identifier: "e57ba4b2645742ac80028345ae3e3b7e")
!2598 = !{!2599}
!2599 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2597, file: !2, size: 192, align: 64, elements: !2600, templateParams: !28, identifier: "543e21bd6ff6b14b475ba99e29f0198a", discriminator: !2613)
!2600 = !{!2601, !2609}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2599, file: !2, baseType: !2602, size: 192, align: 64, extraData: i64 0)
!2602 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2597, file: !2, size: 192, align: 64, elements: !28, templateParams: !2603, identifier: "ec22a260f66480db9e9c99b9abc35989")
!2603 = !{!2604}
!2604 = !DITemplateTypeParameter(name: "T", type: !2605)
!2605 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !2606, file: !2, size: 192, align: 64, elements: !2607, templateParams: !28, identifier: "f9be69e76fc784402e5b8eb88fb718b5")
!2606 = !DINamespace(name: "string", scope: !204)
!2607 = !{!2608}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2605, file: !2, baseType: !338, size: 192, align: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2599, file: !2, baseType: !2610, size: 192, align: 64)
!2610 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2597, file: !2, size: 192, align: 64, elements: !2611, templateParams: !2603, identifier: "10653187bab481cceda9c29be1112f74")
!2611 = !{!2612}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2610, file: !2, baseType: !2605, size: 192, align: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, scope: !2597, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "stack_size", scope: !2594, file: !2, baseType: !1740, size: 128, align: 64, offset: 192)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{!2617, !2594, !377}
!2617 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<std::thread::JoinHandle<()>, std::io::error::Error>", scope: !31, file: !2, size: 256, align: 64, elements: !2618, templateParams: !28, identifier: "26dc781c2e40a8c5e74df437c9bc50e0")
!2618 = !{!2619}
!2619 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2617, file: !2, size: 256, align: 64, elements: !2620, templateParams: !28, identifier: "be002059d77d27646d47781482ae49c7", discriminator: !2631)
!2620 = !{!2621, !2627}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2619, file: !2, baseType: !2622, size: 256, align: 64, extraData: i64 0)
!2622 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2617, file: !2, size: 256, align: 64, elements: !2623, templateParams: !2625, identifier: "dbfa9f0e6f905dc3ce4407de01d7ff8")
!2623 = !{!2624}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2622, file: !2, baseType: !2572, size: 192, align: 64, offset: 64)
!2625 = !{!2626, !42}
!2626 = !DITemplateTypeParameter(name: "T", type: !2572)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2619, file: !2, baseType: !2628, size: 256, align: 64, extraData: i64 1)
!2628 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2617, file: !2, size: 256, align: 64, elements: !2629, templateParams: !2625, identifier: "c855696216ce77add3d3a655e67b314")
!2629 = !{!2630}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2628, file: !2, baseType: !43, size: 64, align: 64, offset: 64)
!2631 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!2632 = !{!2633, !2634, !2635, !2655}
!2633 = !DILocalVariable(name: "self", arg: 1, scope: !2593, file: !2499, line: 454, type: !2594)
!2634 = !DILocalVariable(name: "f", arg: 2, scope: !2593, file: !2499, line: 454, type: !377)
!2635 = !DILocalVariable(name: "residual", scope: !2636, file: !2499, line: 460, type: !2637, align: 8)
!2636 = distinct !DILexicalBlock(scope: !2593, file: !2499, line: 460, column: 64)
!2637 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, std::io::error::Error>", scope: !31, file: !2, size: 64, align: 64, elements: !2638, templateParams: !28, identifier: "7a6e3fd170452d74b2a29f05d4dacf8")
!2638 = !{!2639}
!2639 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2637, file: !2, size: 64, align: 64, elements: !2640, templateParams: !28, identifier: "f0ffb5f0a602b15ab55355fc29f8352e")
!2640 = !{!2641, !2651}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2639, file: !2, baseType: !2642, size: 64, align: 64)
!2642 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2637, file: !2, size: 64, align: 64, elements: !2643, templateParams: !2649, identifier: "c3d708261e3498324120a0f003f2bfb5")
!2643 = !{!2644}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2642, file: !2, baseType: !2645, align: 8)
!2645 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !2646, file: !2, align: 8, elements: !2647, templateParams: !28, identifier: "54da939063c7c2baf203c9f582cd0995")
!2646 = !DINamespace(name: "convert", scope: !32)
!2647 = !{!2648}
!2648 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2645, file: !2, align: 8, elements: !28, identifier: "8a046f69014feadb4a5e941e4277afe9")
!2649 = !{!2650, !42}
!2650 = !DITemplateTypeParameter(name: "T", type: !2645)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2639, file: !2, baseType: !2652, size: 64, align: 64)
!2652 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2637, file: !2, size: 64, align: 64, elements: !2653, templateParams: !2649, identifier: "202fdc3f42b064d168b86793dba30caa")
!2653 = !{!2654}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2652, file: !2, baseType: !43, size: 64, align: 64)
!2655 = !DILocalVariable(name: "val", scope: !2656, file: !2499, line: 460, type: !2500, align: 8)
!2656 = distinct !DILexicalBlock(scope: !2593, file: !2499, line: 460, column: 23)
!2657 = !DILocation(line: 454, column: 45, scope: !2593)
!2658 = !DILocation(line: 454, column: 51, scope: !2593)
!2659 = !DILocalVariable(name: "self", scope: !2660, file: !2499, line: 460, type: !2682, align: 8)
!2660 = !DILexicalBlockFile(scope: !2661, file: !2499, discriminator: 0)
!2661 = distinct !DISubprogram(name: "branch<std::thread::JoinInner<()>, std::io::error::Error>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6db90939ad8da235E", scope: !2662, file: !1782, line: 2117, type: !2663, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2690, retainedNodes: !2697)
!2662 = !DINamespace(name: "{impl#27}", scope: !31)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!2665, !2682}
!2665 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::thread::JoinInner<()>>", scope: !2666, file: !2, size: 256, align: 64, elements: !2667, templateParams: !28, identifier: "9b91437f69f475c2fd54686550442dcc")
!2666 = !DINamespace(name: "control_flow", scope: !901)
!2667 = !{!2668}
!2668 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2665, file: !2, size: 256, align: 64, elements: !2669, templateParams: !28, identifier: "1b98d57f5f3ed8afbf8488756e40af5f", discriminator: !2681)
!2669 = !{!2670, !2677}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2668, file: !2, baseType: !2671, size: 256, align: 64, extraData: i64 0)
!2671 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2665, file: !2, size: 256, align: 64, elements: !2672, templateParams: !2674, identifier: "2090dd82d4add14bccb54c903b78d665")
!2672 = !{!2673}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2671, file: !2, baseType: !2500, size: 192, align: 64, offset: 64)
!2674 = !{!2675, !2676}
!2675 = !DITemplateTypeParameter(name: "B", type: !2637)
!2676 = !DITemplateTypeParameter(name: "C", type: !2500)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2668, file: !2, baseType: !2678, size: 256, align: 64, extraData: i64 1)
!2678 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2665, file: !2, size: 256, align: 64, elements: !2679, templateParams: !2674, identifier: "6ba08b2d827a01bb827b8ee137699aa")
!2679 = !{!2680}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2678, file: !2, baseType: !2637, size: 64, align: 64, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, scope: !2665, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!2682 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<std::thread::JoinInner<()>, std::io::error::Error>", scope: !31, file: !2, size: 256, align: 64, elements: !2683, templateParams: !28, identifier: "296958334eeb39b3c2828070275f6ef2")
!2683 = !{!2684}
!2684 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2682, file: !2, size: 256, align: 64, elements: !2685, templateParams: !28, identifier: "2f3781deea8be236166a263e59d5a5e9", discriminator: !2696)
!2685 = !{!2686, !2692}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2684, file: !2, baseType: !2687, size: 256, align: 64, extraData: i64 0)
!2687 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2682, file: !2, size: 256, align: 64, elements: !2688, templateParams: !2690, identifier: "8a2c601f380f76d9b4e9ee4ccdd5eaa4")
!2688 = !{!2689}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2687, file: !2, baseType: !2500, size: 192, align: 64, offset: 64)
!2690 = !{!2691, !42}
!2691 = !DITemplateTypeParameter(name: "T", type: !2500)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2684, file: !2, baseType: !2693, size: 256, align: 64, extraData: i64 1)
!2693 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2682, file: !2, size: 256, align: 64, elements: !2694, templateParams: !2690, identifier: "fad04c14547986543e98bd51f134588e")
!2694 = !{!2695}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2693, file: !2, baseType: !43, size: 64, align: 64, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, scope: !2682, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!2697 = !{!2659, !2698, !2701}
!2698 = !DILocalVariable(name: "v", scope: !2699, file: !2499, line: 460, type: !2500, align: 8)
!2699 = !DILexicalBlockFile(scope: !2700, file: !2499, discriminator: 0)
!2700 = distinct !DILexicalBlock(scope: !2661, file: !1782, line: 2119, column: 13)
!2701 = !DILocalVariable(name: "e", scope: !2702, file: !2499, line: 460, type: !43, align: 8)
!2702 = !DILexicalBlockFile(scope: !2703, file: !2499, discriminator: 0)
!2703 = distinct !DILexicalBlock(scope: !2661, file: !1782, line: 2120, column: 13)
!2704 = !DILocation(line: 460, column: 23, scope: !2660, inlinedAt: !2705)
!2705 = !DILocation(line: 460, column: 23, scope: !2593)
!2706 = !DILocalVariable(name: "residual", scope: !2707, file: !2499, line: 460, type: !2637, align: 8)
!2707 = !DILexicalBlockFile(scope: !2708, file: !2499, discriminator: 0)
!2708 = distinct !DISubprogram(name: "from_residual<std::thread::JoinHandle<()>, std::io::error::Error, std::io::error::Error>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h401ddf7d9af7e77cE", scope: !2709, file: !1782, line: 2132, type: !2710, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2716, retainedNodes: !2712)
!2709 = !DINamespace(name: "{impl#28}", scope: !31)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!2617, !2637, !1109}
!2712 = !{!2706, !2713}
!2713 = !DILocalVariable(name: "e", scope: !2714, file: !2499, line: 460, type: !43, align: 8)
!2714 = !DILexicalBlockFile(scope: !2715, file: !2499, discriminator: 0)
!2715 = distinct !DILexicalBlock(scope: !2708, file: !1782, line: 2134, column: 13)
!2716 = !{!2626, !42, !2717}
!2717 = !DITemplateTypeParameter(name: "F", type: !43)
!2718 = !DILocation(line: 460, column: 23, scope: !2707, inlinedAt: !2719)
!2719 = !DILocation(line: 460, column: 23, scope: !2636)
!2720 = !DILocation(line: 460, column: 23, scope: !2656)
!2721 = !DILocation(line: 460, column: 23, scope: !2699, inlinedAt: !2705)
!2722 = !DILocation(line: 460, column: 32, scope: !2593)
!2723 = !DILocation(line: 460, column: 57, scope: !2593)
!2724 = !DILocation(line: 460, column: 23, scope: !2702, inlinedAt: !2705)
!2725 = !DILocation(line: 460, column: 12, scope: !2593)
!2726 = !DILocation(line: 460, column: 9, scope: !2593)
!2727 = !DILocation(line: 461, column: 5, scope: !2593)
!2728 = !DILocation(line: 460, column: 64, scope: !2593)
!2729 = !DILocation(line: 460, column: 64, scope: !2636)
!2730 = !DILocation(line: 460, column: 23, scope: !2714, inlinedAt: !2719)
!2731 = !DILocation(line: 461, column: 6, scope: !2593)
!2732 = distinct !DISubprogram(name: "spawn_unchecked_<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", linkageName: "_ZN3std6thread7Builder16spawn_unchecked_17hab5aa20ef4d93507E", scope: !2594, file: !2499, line: 463, type: !2733, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1489, retainedNodes: !2735)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!2682, !2594, !377, !397}
!2735 = !{!2736, !2737, !2738, !2739, !2741, !2742, !2744, !2746, !2748, !2750, !2752, !2754, !2756, !2759, !2761}
!2736 = !DILocalVariable(name: "self", arg: 1, scope: !2732, file: !2499, line: 464, type: !2594)
!2737 = !DILocalVariable(name: "f", arg: 2, scope: !2732, file: !2499, line: 465, type: !377)
!2738 = !DILocalVariable(name: "scope_data", arg: 3, scope: !2732, file: !2499, line: 466, type: !397)
!2739 = !DILocalVariable(name: "name", scope: !2740, file: !2499, line: 474, type: !2597, align: 8)
!2740 = distinct !DILexicalBlock(scope: !2732, file: !2499, line: 474, column: 9)
!2741 = !DILocalVariable(name: "stack_size", scope: !2740, file: !2499, line: 474, type: !1740, align: 8)
!2742 = !DILocalVariable(name: "stack_size", scope: !2743, file: !2499, line: 476, type: !9, align: 8)
!2743 = distinct !DILexicalBlock(scope: !2740, file: !2499, line: 476, column: 9)
!2744 = !DILocalVariable(name: "my_thread", scope: !2745, file: !2499, line: 478, type: !195, align: 8)
!2745 = distinct !DILexicalBlock(scope: !2743, file: !2499, line: 478, column: 9)
!2746 = !DILocalVariable(name: "their_thread", scope: !2747, file: !2499, line: 481, type: !195, align: 8)
!2747 = distinct !DILexicalBlock(scope: !2745, file: !2499, line: 481, column: 9)
!2748 = !DILocalVariable(name: "my_packet", scope: !2749, file: !2499, line: 483, type: !382, align: 8)
!2749 = distinct !DILexicalBlock(scope: !2747, file: !2499, line: 483, column: 9)
!2750 = !DILocalVariable(name: "their_packet", scope: !2751, file: !2499, line: 488, type: !382, align: 8)
!2751 = distinct !DILexicalBlock(scope: !2749, file: !2499, line: 488, column: 9)
!2752 = !DILocalVariable(name: "output_capture", scope: !2753, file: !2499, line: 490, type: !287, align: 8)
!2753 = distinct !DILexicalBlock(scope: !2751, file: !2499, line: 490, column: 9)
!2754 = !DILocalVariable(name: "main", scope: !2755, file: !2499, line: 493, type: !189, align: 8)
!2755 = distinct !DILexicalBlock(scope: !2753, file: !2499, line: 493, column: 9)
!2756 = !DILocalVariable(name: "scope_data", scope: !2757, file: !2499, line: 514, type: !2758, align: 8)
!2757 = distinct !DILexicalBlock(scope: !2755, file: !2499, line: 514, column: 52)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::Arc<std::thread::scoped::ScopeData>", baseType: !405, size: 64, align: 64, dwarfAddressSpace: 0)
!2759 = !DILocalVariable(name: "residual", scope: !2760, file: !2499, line: 538, type: !2637, align: 8)
!2760 = distinct !DILexicalBlock(scope: !2755, file: !2499, line: 538, column: 18)
!2761 = !DILocalVariable(name: "val", scope: !2762, file: !2499, line: 533, type: !2503, align: 8)
!2762 = distinct !DILexicalBlock(scope: !2755, file: !2499, line: 533, column: 17)
!2763 = !DILocation(line: 464, column: 9, scope: !2732)
!2764 = !DILocation(line: 465, column: 9, scope: !2732)
!2765 = !DILocation(line: 466, column: 9, scope: !2732)
!2766 = !DILocation(line: 474, column: 23, scope: !2740)
!2767 = !DILocation(line: 476, column: 13, scope: !2743)
!2768 = !DILocalVariable(name: "self", scope: !2769, file: !2499, line: 476, type: !1740, align: 8)
!2769 = !DILexicalBlockFile(scope: !2770, file: !2499, discriminator: 0)
!2770 = distinct !DISubprogram(name: "unwrap_or_else<usize, fn() -> usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h325fec84bc5f2634E", scope: !1740, file: !1848, line: 818, type: !2771, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2781, retainedNodes: !2776)
!2771 = !DISubroutineType(types: !2772)
!2772 = !{!9, !1740, !2773}
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn() -> usize", baseType: !2774, size: 64, align: 64, dwarfAddressSpace: 0)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!9}
!2776 = !{!2768, !2777, !2778}
!2777 = !DILocalVariable(name: "f", scope: !2769, file: !2499, line: 476, type: !2773, align: 1)
!2778 = !DILocalVariable(name: "x", scope: !2779, file: !2499, line: 476, type: !9, align: 8)
!2779 = !DILexicalBlockFile(scope: !2780, file: !2499, discriminator: 0)
!2780 = distinct !DILexicalBlock(scope: !2770, file: !1848, line: 824, column: 13)
!2781 = !{!224, !2782}
!2782 = !DITemplateTypeParameter(name: "F", type: !2773)
!2783 = !DILocation(line: 476, column: 26, scope: !2769, inlinedAt: !2784)
!2784 = !DILocation(line: 476, column: 26, scope: !2740)
!2785 = !DILocation(line: 478, column: 13, scope: !2745)
!2786 = !DILocation(line: 481, column: 13, scope: !2747)
!2787 = !DILocation(line: 483, column: 13, scope: !2749)
!2788 = !DILocalVariable(name: "value", scope: !2789, file: !2499, line: 485, type: !438, align: 8)
!2789 = !DILexicalBlockFile(scope: !2790, file: !2499, discriminator: 0)
!2790 = distinct !DISubprogram(name: "new<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3new17hbac28eccfe81ec3eE", scope: !435, file: !2556, line: 1891, type: !2791, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !2793)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{!435, !438}
!2793 = !{!2788}
!2794 = !DILocation(line: 485, column: 21, scope: !2789, inlinedAt: !2795)
!2795 = !DILocation(line: 485, column: 21, scope: !2747)
!2796 = !DILocation(line: 488, column: 13, scope: !2751)
!2797 = !DILocation(line: 490, column: 13, scope: !2753)
!2798 = !DILocation(line: 493, column: 13, scope: !2755)
!2799 = !DILocalVariable(name: "self", scope: !2800, file: !2499, line: 533, type: !2819, align: 8)
!2800 = !DILexicalBlockFile(scope: !2801, file: !2499, discriminator: 0)
!2801 = distinct !DISubprogram(name: "branch<std::sys::unix::thread::Thread, std::io::error::Error>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h78b669e4bac11c79E", scope: !2662, file: !1782, line: 2117, type: !2802, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2827, retainedNodes: !2834)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!2804, !2819}
!2804 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, std::io::error::Error>, std::sys::unix::thread::Thread>", scope: !2666, file: !2, size: 128, align: 64, elements: !2805, templateParams: !28, identifier: "6ca8a1ab214272feefce78cca7dd5295")
!2805 = !{!2806}
!2806 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2804, file: !2, size: 128, align: 64, elements: !2807, templateParams: !28, identifier: "af6b4b557a95de68cebf37fd7c8bad82", discriminator: !2818)
!2807 = !{!2808, !2814}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2806, file: !2, baseType: !2809, size: 128, align: 64, extraData: i64 0)
!2809 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2804, file: !2, size: 128, align: 64, elements: !2810, templateParams: !2812, identifier: "2abaec61d3400437b82b78391df50bc")
!2810 = !{!2811}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2809, file: !2, baseType: !2503, size: 64, align: 64, offset: 64)
!2812 = !{!2675, !2813}
!2813 = !DITemplateTypeParameter(name: "C", type: !2503)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2806, file: !2, baseType: !2815, size: 128, align: 64, extraData: i64 1)
!2815 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2804, file: !2, size: 128, align: 64, elements: !2816, templateParams: !2812, identifier: "3d068471fdbcec899124acba8abc2a56")
!2816 = !{!2817}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2815, file: !2, baseType: !2637, size: 64, align: 64, offset: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!2819 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<std::sys::unix::thread::Thread, std::io::error::Error>", scope: !31, file: !2, size: 128, align: 64, elements: !2820, templateParams: !28, identifier: "2cb98c7460279a68d687c284ed13dbbe")
!2820 = !{!2821}
!2821 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2819, file: !2, size: 128, align: 64, elements: !2822, templateParams: !28, identifier: "425783225d07b9142534ccdedd464643", discriminator: !2833)
!2822 = !{!2823, !2829}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2821, file: !2, baseType: !2824, size: 128, align: 64, extraData: i64 0)
!2824 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2819, file: !2, size: 128, align: 64, elements: !2825, templateParams: !2827, identifier: "ff6275b0eeef22bff3b048fcdb113612")
!2825 = !{!2826}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2824, file: !2, baseType: !2503, size: 64, align: 64, offset: 64)
!2827 = !{!2828, !42}
!2828 = !DITemplateTypeParameter(name: "T", type: !2503)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2821, file: !2, baseType: !2830, size: 128, align: 64, extraData: i64 1)
!2830 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2819, file: !2, size: 128, align: 64, elements: !2831, templateParams: !2827, identifier: "f32ca07c4bc5a1134781912b7e33e024")
!2831 = !{!2832}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2830, file: !2, baseType: !43, size: 64, align: 64, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, scope: !2819, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!2834 = !{!2799, !2835, !2838}
!2835 = !DILocalVariable(name: "v", scope: !2836, file: !2499, line: 533, type: !2503, align: 8)
!2836 = !DILexicalBlockFile(scope: !2837, file: !2499, discriminator: 0)
!2837 = distinct !DILexicalBlock(scope: !2801, file: !1782, line: 2119, column: 13)
!2838 = !DILocalVariable(name: "e", scope: !2839, file: !2499, line: 533, type: !43, align: 8)
!2839 = !DILexicalBlockFile(scope: !2840, file: !2499, discriminator: 0)
!2840 = distinct !DILexicalBlock(scope: !2801, file: !1782, line: 2120, column: 13)
!2841 = !DILocation(line: 533, column: 17, scope: !2800, inlinedAt: !2842)
!2842 = !DILocation(line: 533, column: 17, scope: !2755)
!2843 = !DILocalVariable(name: "x", scope: !2844, file: !2499, line: 536, type: !189, align: 8)
!2844 = !DILexicalBlockFile(scope: !2845, file: !2499, discriminator: 0)
!2845 = distinct !DISubprogram(name: "new<std::thread::{impl#0}::spawn_unchecked_::{closure_env#1}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$3new17he83807793b5a46abE", scope: !2847, file: !2846, line: 213, type: !2849, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2853, retainedNodes: !2852)
!2846 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/boxed.rs", directory: "", checksumkind: CSK_MD5, checksum: "9efa3237c64a7f41bc63e23af752c9d3")
!2847 = !DINamespace(name: "{impl#0}", scope: !2848)
!2848 = !DINamespace(name: "boxed", scope: !204)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!2851, !189}
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<std::thread::{impl#0}::spawn_unchecked_::{closure_env#1}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>, alloc::alloc::Global>", baseType: !189, size: 64, align: 64, dwarfAddressSpace: 0)
!2852 = !{!2843}
!2853 = !{!2854}
!2854 = !DITemplateTypeParameter(name: "T", type: !189)
!2855 = !DILocation(line: 536, column: 25, scope: !2844, inlinedAt: !2856)
!2856 = !DILocation(line: 536, column: 25, scope: !2755)
!2857 = !DILocalVariable(name: "residual", scope: !2858, file: !2499, line: 533, type: !2637, align: 8)
!2858 = !DILexicalBlockFile(scope: !2859, file: !2499, discriminator: 0)
!2859 = distinct !DISubprogram(name: "from_residual<std::thread::JoinInner<()>, std::io::error::Error, std::io::error::Error>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2a028efbc600dc38E", scope: !2709, file: !1782, line: 2132, type: !2860, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2866, retainedNodes: !2862)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{!2682, !2637, !1109}
!2862 = !{!2857, !2863}
!2863 = !DILocalVariable(name: "e", scope: !2864, file: !2499, line: 533, type: !43, align: 8)
!2864 = !DILexicalBlockFile(scope: !2865, file: !2499, discriminator: 0)
!2865 = distinct !DILexicalBlock(scope: !2859, file: !1782, line: 2134, column: 13)
!2866 = !{!2691, !42, !2717}
!2867 = !DILocation(line: 533, column: 17, scope: !2858, inlinedAt: !2868)
!2868 = !DILocation(line: 533, column: 17, scope: !2760)
!2869 = !DILocation(line: 474, column: 23, scope: !2732)
!2870 = !DILocation(line: 474, column: 29, scope: !2732)
!2871 = !DILocation(line: 474, column: 29, scope: !2740)
!2872 = !DILocation(line: 476, column: 26, scope: !2779, inlinedAt: !2784)
!2873 = !DILocation(line: 478, column: 37, scope: !2743)
!2874 = !DILocation(line: 543, column: 5, scope: !2732)
!2875 = !DILocation(line: 478, column: 25, scope: !2743)
!2876 = !DILocation(line: 481, column: 28, scope: !2745)
!2877 = !DILocalVariable(name: "self", scope: !2878, file: !2499, line: 481, type: !2882, align: 8)
!2878 = distinct !DISubprogram(name: "clone", linkageName: "_ZN58_$LT$std..thread..Thread$u20$as$u20$core..clone..Clone$GT$5clone17h188a2b876f436a88E", scope: !2879, file: !2499, line: 1089, type: !2880, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !2883)
!2879 = !DINamespace(name: "{impl#23}", scope: !192)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!195, !2882}
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::thread::Thread", baseType: !195, size: 64, align: 64, dwarfAddressSpace: 0)
!2883 = !{!2877}
!2884 = !DILocation(line: 481, column: 28, scope: !2878, inlinedAt: !2876)
!2885 = !DILocalVariable(name: "self", scope: !2886, file: !2499, line: 481, type: !2892, align: 8)
!2886 = !DILexicalBlockFile(scope: !2887, file: !2499, discriminator: 0)
!2887 = distinct !DISubprogram(name: "clone<alloc::sync::Arc<std::thread::Inner>>", linkageName: "_ZN62_$LT$core..pin..Pin$LT$P$GT$$u20$as$u20$core..clone..Clone$GT$5clone17he2374c0acf0a7c3aE", scope: !2889, file: !2888, line: 407, type: !2890, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !284, retainedNodes: !2893)
!2888 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/pin.rs", directory: "", checksumkind: CSK_MD5, checksum: "3e2e786761e9f63496f85fe5f62c573c")
!2889 = !DINamespace(name: "{impl#22}", scope: !199)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!198, !2892}
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::pin::Pin<alloc::sync::Arc<std::thread::Inner>>", baseType: !198, size: 64, align: 64, dwarfAddressSpace: 0)
!2893 = !{!2885}
!2894 = !DILocation(line: 481, column: 28, scope: !2886, inlinedAt: !2895)
!2895 = !DILocation(line: 1110, column: 5, scope: !2878, inlinedAt: !2876)
!2896 = !DILocation(line: 543, column: 5, scope: !2743)
!2897 = !DILocation(line: 481, column: 44, scope: !2745)
!2898 = !DILocation(line: 484, column: 20, scope: !2747)
!2899 = !DILocation(line: 485, column: 37, scope: !2747)
!2900 = !DILocation(line: 483, column: 58, scope: !2747)
!2901 = !DILocation(line: 483, column: 49, scope: !2747)
!2902 = !DILocation(line: 543, column: 5, scope: !2745)
!2903 = !DILocation(line: 488, column: 28, scope: !2749)
!2904 = !DILocation(line: 543, column: 5, scope: !2747)
!2905 = !DILocation(line: 488, column: 44, scope: !2749)
!2906 = !DILocation(line: 490, column: 60, scope: !2751)
!2907 = !DILocation(line: 490, column: 30, scope: !2751)
!2908 = !DILocation(line: 543, column: 5, scope: !2749)
!2909 = !DILocation(line: 490, column: 64, scope: !2751)
!2910 = !DILocation(line: 491, column: 39, scope: !2753)
!2911 = !DILocalVariable(name: "self", scope: !2912, file: !2499, line: 491, type: !2917, align: 8)
!2912 = !DILexicalBlockFile(scope: !2913, file: !2499, discriminator: 0)
!2913 = distinct !DISubprogram(name: "clone<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN68_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha9a1b79e5cfad2afE", scope: !2914, file: !1848, line: 1888, type: !2915, scopeLine: 1888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !293, retainedNodes: !2918)
!2914 = !DINamespace(name: "{impl#5}", scope: !231)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!287, !2917}
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", baseType: !287, size: 64, align: 64, dwarfAddressSpace: 0)
!2918 = !{!2911, !2919}
!2919 = !DILocalVariable(name: "x", scope: !2920, file: !2499, line: 491, type: !2922, align: 8)
!2920 = !DILexicalBlockFile(scope: !2921, file: !2499, discriminator: 0)
!2921 = distinct !DILexicalBlock(scope: !2913, file: !1848, line: 1890, column: 13)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", baseType: !295, size: 64, align: 64, dwarfAddressSpace: 0)
!2923 = !DILocation(line: 491, column: 39, scope: !2912, inlinedAt: !2910)
!2924 = !DILocation(line: 491, column: 39, scope: !2920, inlinedAt: !2910)
!2925 = !DILocation(line: 543, column: 5, scope: !2751)
!2926 = !DILocation(line: 491, column: 9, scope: !2753)
!2927 = !DILocation(line: 491, column: 62, scope: !2753)
!2928 = !DILocation(line: 493, column: 20, scope: !2753)
!2929 = !DILocation(line: 514, column: 36, scope: !2757)
!2930 = !DILocalVariable(name: "self", scope: !2931, file: !2499, line: 514, type: !2938, align: 8)
!2931 = !DILexicalBlockFile(scope: !2932, file: !2499, discriminator: 0)
!2932 = distinct !DISubprogram(name: "deref<std::thread::Packet<()>>", linkageName: "_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h27aaae995b72a46cE", scope: !2934, file: !2933, line: 1380, type: !2935, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !2939)
!2933 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/sync.rs", directory: "", checksumkind: CSK_MD5, checksum: "bc58256669a203e2e3b0ae6e10cf330c")
!2934 = !DINamespace(name: "{impl#23}", scope: !203)
!2935 = !DISubroutineType(types: !2936)
!2936 = !{!2937, !2938}
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::thread::Packet<()>", baseType: !394, size: 64, align: 64, dwarfAddressSpace: 0)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::Arc<std::thread::Packet<()>>", baseType: !382, size: 64, align: 64, dwarfAddressSpace: 0)
!2939 = !{!2930}
!2940 = !DILocation(line: 514, column: 36, scope: !2931, inlinedAt: !2929)
!2941 = !DILocalVariable(name: "self", scope: !2942, file: !2499, line: 514, type: !2938, align: 8)
!2942 = !DILexicalBlockFile(scope: !2943, file: !2499, discriminator: 0)
!2943 = distinct !DISubprogram(name: "inner<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h2c9584fbefbd9d49E", scope: !382, file: !2933, line: 1091, type: !2944, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !2947)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{!2946, !2938}
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::ArcInner<std::thread::Packet<()>>", baseType: !389, size: 64, align: 64, dwarfAddressSpace: 0)
!2947 = !{!2941}
!2948 = !DILocation(line: 514, column: 36, scope: !2942, inlinedAt: !2949)
!2949 = !DILocation(line: 1381, column: 10, scope: !2932, inlinedAt: !2929)
!2950 = !DILocalVariable(name: "self", scope: !2951, file: !2499, line: 514, type: !2955, align: 8)
!2951 = !DILexicalBlockFile(scope: !2952, file: !2499, discriminator: 0)
!2952 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hee047371338adbdcE", scope: !385, file: !1413, line: 378, type: !2953, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !2956)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!2946, !2955}
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<alloc::sync::ArcInner<std::thread::Packet<()>>>", baseType: !385, size: 64, align: 64, dwarfAddressSpace: 0)
!2956 = !{!2950}
!2957 = !DILocation(line: 514, column: 36, scope: !2951, inlinedAt: !2958)
!2958 = !DILocation(line: 1097, column: 18, scope: !2943, inlinedAt: !2949)
!2959 = !DILocalVariable(name: "self", scope: !2960, file: !2499, line: 514, type: !385, align: 8)
!2960 = !DILexicalBlockFile(scope: !2961, file: !2499, discriminator: 0)
!2961 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !2965)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!2964, !385}
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::ArcInner<std::thread::Packet<()>>", baseType: !389, size: 64, align: 64, dwarfAddressSpace: 0)
!2965 = !{!2959}
!2966 = !DILocation(line: 514, column: 36, scope: !2960, inlinedAt: !2967)
!2967 = !DILocation(line: 381, column: 20, scope: !2952, inlinedAt: !2958)
!2968 = !DILocation(line: 514, column: 35, scope: !2757)
!2969 = !DILocation(line: 514, column: 16, scope: !2757)
!2970 = !DILocation(line: 514, column: 21, scope: !2757)
!2971 = !DILocation(line: 515, column: 13, scope: !2757)
!2972 = !DILocalVariable(name: "self", scope: !2973, file: !2499, line: 515, type: !2758, align: 8)
!2973 = !DILexicalBlockFile(scope: !2974, file: !2499, discriminator: 0)
!2974 = distinct !DISubprogram(name: "deref<std::thread::scoped::ScopeData>", linkageName: "_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6a4049607f87aa22E", scope: !2934, file: !2933, line: 1380, type: !2975, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !2977)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!486, !2758}
!2977 = !{!2972}
!2978 = !DILocation(line: 515, column: 13, scope: !2973, inlinedAt: !2971)
!2979 = !DILocalVariable(name: "self", scope: !2980, file: !2499, line: 515, type: !2758, align: 8)
!2980 = !DILexicalBlockFile(scope: !2981, file: !2499, discriminator: 0)
!2981 = distinct !DISubprogram(name: "inner<std::thread::scoped::ScopeData>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h4adc7ecfdfdf4cc7E", scope: !405, file: !2933, line: 1091, type: !2982, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !2985)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!2984, !2758}
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::ArcInner<std::thread::scoped::ScopeData>", baseType: !412, size: 64, align: 64, dwarfAddressSpace: 0)
!2985 = !{!2979}
!2986 = !DILocation(line: 515, column: 13, scope: !2980, inlinedAt: !2987)
!2987 = !DILocation(line: 1381, column: 10, scope: !2974, inlinedAt: !2971)
!2988 = !DILocalVariable(name: "self", scope: !2989, file: !2499, line: 515, type: !2993, align: 8)
!2989 = !DILexicalBlockFile(scope: !2990, file: !2499, discriminator: 0)
!2990 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hf2c6e78f21739783E", scope: !408, file: !1413, line: 378, type: !2991, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !2994)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!2984, !2993}
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", baseType: !408, size: 64, align: 64, dwarfAddressSpace: 0)
!2994 = !{!2988}
!2995 = !DILocation(line: 515, column: 13, scope: !2989, inlinedAt: !2996)
!2996 = !DILocation(line: 1097, column: 18, scope: !2981, inlinedAt: !2987)
!2997 = !DILocalVariable(name: "self", scope: !2998, file: !2499, line: 515, type: !408, align: 8)
!2998 = !DILexicalBlockFile(scope: !2999, file: !2499, discriminator: 0)
!2999 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34c1f75750307eb0E", scope: !408, file: !1413, line: 330, type: !3000, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !3003)
!3000 = !DISubroutineType(types: !3001)
!3001 = !{!3002, !408}
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::ArcInner<std::thread::scoped::ScopeData>", baseType: !412, size: 64, align: 64, dwarfAddressSpace: 0)
!3003 = !{!2997}
!3004 = !DILocation(line: 515, column: 13, scope: !2998, inlinedAt: !3005)
!3005 = !DILocation(line: 381, column: 20, scope: !2990, inlinedAt: !2996)
!3006 = !DILocation(line: 534, column: 21, scope: !2755)
!3007 = !DILocation(line: 536, column: 34, scope: !2755)
!3008 = !DILocation(line: 543, column: 5, scope: !2753)
!3009 = !DILocation(line: 514, column: 9, scope: !2755)
!3010 = !DILocation(line: 535, column: 21, scope: !2755)
!3011 = !DILocation(line: 463, column: 5, scope: !2732)
!3012 = !DILocation(line: 533, column: 17, scope: !2836, inlinedAt: !2842)
!3013 = !DILocation(line: 533, column: 17, scope: !2839, inlinedAt: !2842)
!3014 = !DILocation(line: 533, column: 17, scope: !2762)
!3015 = !DILocation(line: 540, column: 21, scope: !2755)
!3016 = !DILocation(line: 541, column: 21, scope: !2755)
!3017 = !DILocation(line: 518, column: 12, scope: !2755)
!3018 = !DILocation(line: 518, column: 9, scope: !2755)
!3019 = !DILocation(line: 538, column: 18, scope: !2755)
!3020 = !DILocation(line: 538, column: 18, scope: !2760)
!3021 = !DILocation(line: 533, column: 17, scope: !2864, inlinedAt: !2868)
!3022 = !DILocation(line: 543, column: 6, scope: !2732)
!3023 = distinct !DISubprogram(name: "{closure#1}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", linkageName: "_ZN3std6thread7Builder16spawn_unchecked_28_$u7b$$u7b$closure$u7d$$u7d$17h54dd61d1ecb7169fE", scope: !190, file: !2499, line: 493, type: !3024, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1489, retainedNodes: !3026)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{null, !189}
!3026 = !{!3027, !3028, !3029, !3030, !3031, !3042}
!3027 = !DILocalVariable(name: "their_thread", scope: !3023, file: !2499, line: 481, type: !195, align: 8)
!3028 = !DILocalVariable(name: "output_capture", scope: !3023, file: !2499, line: 490, type: !287, align: 8)
!3029 = !DILocalVariable(name: "f", scope: !3023, file: !2499, line: 465, type: !377, align: 1)
!3030 = !DILocalVariable(name: "their_packet", scope: !3023, file: !2499, line: 488, type: !382, align: 8)
!3031 = !DILocalVariable(name: "name", scope: !3032, file: !2499, line: 494, type: !3033, align: 8)
!3032 = distinct !DILexicalBlock(scope: !3023, file: !2499, line: 494, column: 54)
!3033 = !DICompositeType(tag: DW_TAG_structure_type, name: "&core::ffi::c_str::CStr", file: !2, size: 128, align: 64, elements: !3034, templateParams: !28, identifier: "9a691f075a9e4b9c7e7049abca5ed1fb")
!3034 = !{!3035, !3041}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3033, file: !2, baseType: !3036, size: 64, align: 64)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64, align: 64, dwarfAddressSpace: 0)
!3037 = !DICompositeType(tag: DW_TAG_structure_type, name: "CStr", scope: !3038, file: !2, align: 8, elements: !3039, templateParams: !28, identifier: "2da013c6b133655882cf6258a2093276")
!3038 = !DINamespace(name: "c_str", scope: !634)
!3039 = !{!3040}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !3037, file: !2, baseType: !763, align: 8)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3033, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3042 = !DILocalVariable(name: "try_result", scope: !3043, file: !2499, line: 504, type: !446, align: 8)
!3043 = distinct !DILexicalBlock(scope: !3023, file: !2499, line: 504, column: 13)
!3044 = !DILocation(line: 481, column: 13, scope: !3023)
!3045 = !DILocation(line: 490, column: 13, scope: !3023)
!3046 = !DILocation(line: 465, column: 9, scope: !3023)
!3047 = !DILocation(line: 488, column: 13, scope: !3023)
!3048 = !DILocation(line: 494, column: 13, scope: !3023)
!3049 = !DILocation(line: 494, column: 33, scope: !3032)
!3050 = !DILocation(line: 512, column: 9, scope: !3023)
!3051 = !DILocation(line: 494, column: 20, scope: !3032)
!3052 = !DILocation(line: 494, column: 25, scope: !3032)
!3053 = !DILocation(line: 495, column: 17, scope: !3032)
!3054 = !DILocation(line: 498, column: 43, scope: !3023)
!3055 = !DILocation(line: 498, column: 13, scope: !3023)
!3056 = !DILocation(line: 498, column: 58, scope: !3023)
!3057 = !DILocation(line: 503, column: 39, scope: !3023)
!3058 = !DILocation(line: 503, column: 64, scope: !3023)
!3059 = !DILocation(line: 503, column: 13, scope: !3023)
!3060 = !DILocation(line: 504, column: 74, scope: !3023)
!3061 = !DILocation(line: 504, column: 50, scope: !3023)
!3062 = !DILocation(line: 504, column: 30, scope: !3023)
!3063 = !DILocation(line: 504, column: 17, scope: !3043)
!3064 = !DILocation(line: 511, column: 51, scope: !3043)
!3065 = !DILocation(line: 511, column: 23, scope: !3043)
!3066 = !DILocalVariable(name: "self", scope: !3067, file: !2499, line: 511, type: !2938, align: 8)
!3067 = !DILexicalBlockFile(scope: !3068, file: !2499, discriminator: 0)
!3068 = distinct !DISubprogram(name: "deref<std::thread::Packet<()>>", linkageName: "_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h27aaae995b72a46cE", scope: !2934, file: !2933, line: 1380, type: !2935, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !3069)
!3069 = !{!3066}
!3070 = !DILocation(line: 511, column: 23, scope: !3067, inlinedAt: !3065)
!3071 = !DILocalVariable(name: "self", scope: !3072, file: !2499, line: 511, type: !2938, align: 8)
!3072 = !DILexicalBlockFile(scope: !3073, file: !2499, discriminator: 0)
!3073 = distinct !DISubprogram(name: "inner<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h2c9584fbefbd9d49E", scope: !382, file: !2933, line: 1091, type: !2944, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !3074)
!3074 = !{!3071}
!3075 = !DILocation(line: 511, column: 23, scope: !3072, inlinedAt: !3076)
!3076 = !DILocation(line: 1381, column: 10, scope: !3068, inlinedAt: !3065)
!3077 = !DILocalVariable(name: "self", scope: !3078, file: !2499, line: 511, type: !2955, align: 8)
!3078 = !DILexicalBlockFile(scope: !3079, file: !2499, discriminator: 0)
!3079 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hee047371338adbdcE", scope: !385, file: !1413, line: 378, type: !2953, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !3080)
!3080 = !{!3077}
!3081 = !DILocation(line: 511, column: 23, scope: !3078, inlinedAt: !3082)
!3082 = !DILocation(line: 1097, column: 18, scope: !3073, inlinedAt: !3076)
!3083 = !DILocalVariable(name: "self", scope: !3084, file: !2499, line: 511, type: !385, align: 8)
!3084 = !DILexicalBlockFile(scope: !3085, file: !2499, discriminator: 0)
!3085 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !3086)
!3086 = !{!3083}
!3087 = !DILocation(line: 511, column: 23, scope: !3084, inlinedAt: !3088)
!3088 = !DILocation(line: 381, column: 20, scope: !3079, inlinedAt: !3082)
!3089 = !DILocalVariable(name: "self", scope: !3090, file: !2499, line: 511, type: !3095, align: 8)
!3090 = !DILexicalBlockFile(scope: !3091, file: !2499, discriminator: 0)
!3091 = distinct !DISubprogram(name: "get<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h718a0d249e58c283E", scope: !435, file: !2556, line: 1934, type: !3092, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !3096)
!3092 = !DISubroutineType(types: !3093)
!3093 = !{!3094, !3095}
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>", baseType: !438, size: 64, align: 64, dwarfAddressSpace: 0)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", baseType: !435, size: 64, align: 64, dwarfAddressSpace: 0)
!3096 = !{!3089}
!3097 = !DILocation(line: 511, column: 23, scope: !3090, inlinedAt: !3065)
!3098 = !DILocation(line: 511, column: 22, scope: !3043)
!3099 = !DILocation(line: 511, column: 66, scope: !3043)
!3100 = !DILocation(line: 493, column: 20, scope: !3023)
!3101 = !DILocation(line: 493, column: 27, scope: !3023)
!3102 = distinct !DISubprogram(name: "{closure#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", linkageName: "_ZN3std6thread7Builder16spawn_unchecked_28_$u7b$$u7b$closure$u7d$$u7d$17h89120b0fe05e725dE", scope: !190, file: !2499, line: 478, type: !3103, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1489, retainedNodes: !3106)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!239, !3105, !2605}
!3105 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", scope: !190, file: !2, align: 8, elements: !28, identifier: "84d7e4a4cb56d6e7ffe2a1ead287f849")
!3106 = !{!3107, !3108}
!3107 = !DILocalVariable(name: "name", arg: 2, scope: !3102, file: !2499, line: 478, type: !2605)
!3108 = !DILocalVariable(arg: 1, scope: !3102, file: !2499, line: 478, type: !3105)
!3109 = !DILocation(line: 478, column: 46, scope: !3102)
!3110 = !DILocation(line: 478, column: 47, scope: !3102)
!3111 = !DILocation(line: 479, column: 26, scope: !3102)
!3112 = !DILocation(line: 479, column: 13, scope: !3102)
!3113 = !DILocation(line: 478, column: 52, scope: !3102)
!3114 = distinct !DISubprogram(name: "{closure#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", linkageName: "_ZN3std6thread7Builder16spawn_unchecked_28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hf6b952cc563ccbeeE", scope: !1398, file: !2499, line: 504, type: !3115, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1489, retainedNodes: !3117)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{null, !1397}
!3117 = !{!3118}
!3118 = !DILocalVariable(name: "f", scope: !3114, file: !2499, line: 465, type: !377, align: 1)
!3119 = !DILocation(line: 465, column: 9, scope: !3114)
!3120 = !DILocation(line: 505, column: 17, scope: !3114)
!3121 = !DILocation(line: 504, column: 76, scope: !3114)
!3122 = distinct !DISubprogram(name: "spawn<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", linkageName: "_ZN3std6thread7Builder5spawn17hb090a562fb64540fE", scope: !2594, file: !2499, line: 386, type: !2615, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1489, retainedNodes: !3123)
!3123 = !{!3124, !3125}
!3124 = !DILocalVariable(name: "self", arg: 1, scope: !3122, file: !2499, line: 386, type: !2594)
!3125 = !DILocalVariable(name: "f", arg: 2, scope: !3122, file: !2499, line: 386, type: !377)
!3126 = !DILocation(line: 386, column: 24, scope: !3122)
!3127 = !DILocation(line: 386, column: 30, scope: !3122)
!3128 = !DILocation(line: 392, column: 18, scope: !3122)
!3129 = !DILocation(line: 393, column: 6, scope: !3122)
!3130 = distinct !DISubprogram(name: "try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", linkageName: "_ZN3std9panicking3try17h9e0c96685ebd620cE", scope: !3132, file: !3131, line: 412, type: !2489, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3159, retainedNodes: !3133)
!3131 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "458921563954eb00514d12aed6f47a06")
!3132 = !DINamespace(name: "panicking", scope: !18)
!3133 = !{!3134, !3135, !3157}
!3134 = !DILocalVariable(name: "f", arg: 1, scope: !3130, file: !3131, line: 412, type: !1394)
!3135 = !DILocalVariable(name: "data", scope: !3136, file: !3131, line: 443, type: !3137, align: 8)
!3136 = distinct !DILexicalBlock(scope: !3130, file: !3131, line: 443, column: 5)
!3137 = !DICompositeType(tag: DW_TAG_union_type, name: "Data<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>, ()>", scope: !3138, file: !2, size: 128, align: 64, elements: !3139, templateParams: !2493, identifier: "17f21ef128d7b6c469ccf3eabf23d38f")
!3138 = !DINamespace(name: "try", scope: !3132)
!3139 = !{!3140, !3147, !3151}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3137, file: !2, baseType: !3141, align: 8)
!3141 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", scope: !3142, file: !2, align: 8, elements: !3143, templateParams: !3145, identifier: "669617a1634aa005e22e4eac8dd33405")
!3142 = !DINamespace(name: "manually_drop", scope: !789)
!3143 = !{!3144}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3141, file: !2, baseType: !1394, align: 8)
!3145 = !{!3146}
!3146 = !DITemplateTypeParameter(name: "T", type: !1394)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3137, file: !2, baseType: !3148, align: 8)
!3148 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<()>", scope: !3142, file: !2, align: 8, elements: !3149, templateParams: !56, identifier: "2332d344a4f847ff5ab962c871b62adc")
!3149 = !{!3150}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3148, file: !2, baseType: !7, align: 8)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3137, file: !2, baseType: !3152, size: 128, align: 64)
!3152 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", scope: !3142, file: !2, size: 128, align: 64, elements: !3153, templateParams: !3155, identifier: "f9931835db7a14cbc337c31c6ef49cd3")
!3153 = !{!3154}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3152, file: !2, baseType: !456, size: 128, align: 64)
!3155 = !{!3156}
!3156 = !DITemplateTypeParameter(name: "T", type: !456)
!3157 = !DILocalVariable(name: "data_ptr", scope: !3158, file: !3131, line: 445, type: !1021, align: 8)
!3158 = distinct !DILexicalBlock(scope: !3136, file: !3131, line: 445, column: 5)
!3159 = !{!1385, !2494}
!3160 = !DILocation(line: 412, column: 42, scope: !3130)
!3161 = !DILocation(line: 443, column: 9, scope: !3136)
!3162 = !DILocalVariable(name: "value", scope: !3163, file: !3131, line: 443, type: !1394, align: 1)
!3163 = !DILexicalBlockFile(scope: !3164, file: !3131, discriminator: 0)
!3164 = distinct !DISubprogram(name: "new<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hdb0586d737ae2d7fE", scope: !3141, file: !3165, line: 70, type: !1392, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3145, retainedNodes: !3166)
!3165 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!3166 = !{!3162}
!3167 = !DILocation(line: 443, column: 30, scope: !3163, inlinedAt: !3168)
!3168 = !DILocation(line: 443, column: 30, scope: !3130)
!3169 = !DILocalVariable(name: "slot", scope: !3170, file: !3131, line: 457, type: !3148, align: 1)
!3170 = !DILexicalBlockFile(scope: !3171, file: !3131, discriminator: 0)
!3171 = distinct !DISubprogram(name: "into_inner<()>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h37f477e833b4308bE", scope: !3148, file: !3165, line: 88, type: !3172, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !3174)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{null, !3148}
!3174 = !{!3169}
!3175 = !DILocation(line: 457, column: 16, scope: !3170, inlinedAt: !3176)
!3176 = !DILocation(line: 457, column: 16, scope: !3158)
!3177 = !DILocation(line: 443, column: 20, scope: !3130)
!3178 = !DILocation(line: 445, column: 20, scope: !3136)
!3179 = !DILocation(line: 445, column: 9, scope: !3158)
!3180 = !DILocation(line: 456, column: 19, scope: !3158)
!3181 = !DILocation(line: 457, column: 13, scope: !3158)
!3182 = !DILocation(line: 456, column: 16, scope: !3158)
!3183 = !DILocation(line: 459, column: 42, scope: !3158)
!3184 = !DILocalVariable(name: "slot", scope: !3185, file: !3131, line: 459, type: !3152, align: 8)
!3185 = !DILexicalBlockFile(scope: !3186, file: !3131, discriminator: 0)
!3186 = distinct !DISubprogram(name: "into_inner<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h0deabc72ce1d655eE", scope: !3152, file: !3165, line: 88, type: !3187, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3155, retainedNodes: !3189)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{!456, !3152}
!3189 = !{!3184}
!3190 = !DILocation(line: 459, column: 17, scope: !3185, inlinedAt: !3191)
!3191 = !DILocation(line: 459, column: 17, scope: !3158)
!3192 = !DILocation(line: 459, column: 13, scope: !3158)
!3193 = !DILocation(line: 521, column: 2, scope: !3130)
!3194 = distinct !DISubprogram(name: "try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", linkageName: "_ZN3std9panicking3try17hb75f4d75ddcf1d32E", scope: !3132, file: !3131, line: 412, type: !2479, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3211, retainedNodes: !3195)
!3195 = !{!3196, !3197, !3209}
!3196 = !DILocalVariable(name: "f", arg: 1, scope: !3194, file: !3131, line: 412, type: !1370)
!3197 = !DILocalVariable(name: "data", scope: !3198, file: !3131, line: 443, type: !3199, align: 8)
!3198 = distinct !DILexicalBlock(scope: !3194, file: !3131, line: 443, column: 5)
!3199 = !DICompositeType(tag: DW_TAG_union_type, name: "Data<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>, ()>", scope: !3138, file: !2, size: 128, align: 64, elements: !3200, templateParams: !2483, identifier: "73ca3c6fe933b38efac0ef730327d1b8")
!3200 = !{!3201, !3207, !3208}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3199, file: !2, baseType: !3202, size: 64, align: 64)
!3202 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", scope: !3142, file: !2, size: 64, align: 64, elements: !3203, templateParams: !3205, identifier: "679198ef2d7a288076352797ee8b514d")
!3203 = !{!3204}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3202, file: !2, baseType: !1370, size: 64, align: 64)
!3205 = !{!3206}
!3206 = !DITemplateTypeParameter(name: "T", type: !1370)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3199, file: !2, baseType: !3148, align: 8)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3199, file: !2, baseType: !3152, size: 128, align: 64)
!3209 = !DILocalVariable(name: "data_ptr", scope: !3210, file: !3131, line: 445, type: !1021, align: 8)
!3210 = distinct !DILexicalBlock(scope: !3198, file: !3131, line: 445, column: 5)
!3211 = !{!1385, !2484}
!3212 = !DILocation(line: 412, column: 42, scope: !3194)
!3213 = !DILocation(line: 443, column: 9, scope: !3198)
!3214 = !DILocalVariable(name: "slot", scope: !3215, file: !3131, line: 457, type: !3148, align: 1)
!3215 = !DILexicalBlockFile(scope: !3216, file: !3131, discriminator: 0)
!3216 = distinct !DISubprogram(name: "into_inner<()>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h37f477e833b4308bE", scope: !3148, file: !3165, line: 88, type: !3172, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !3217)
!3217 = !{!3214}
!3218 = !DILocation(line: 457, column: 16, scope: !3215, inlinedAt: !3219)
!3219 = !DILocation(line: 457, column: 16, scope: !3210)
!3220 = !DILocation(line: 443, column: 48, scope: !3194)
!3221 = !DILocalVariable(name: "value", scope: !3222, file: !3131, line: 443, type: !1370, align: 8)
!3222 = !DILexicalBlockFile(scope: !3223, file: !3131, discriminator: 0)
!3223 = distinct !DISubprogram(name: "new<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf68eb03a09937fd1E", scope: !3202, file: !3165, line: 70, type: !3224, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3205, retainedNodes: !3226)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{!3202, !1370}
!3226 = !{!3221}
!3227 = !DILocation(line: 443, column: 30, scope: !3222, inlinedAt: !3228)
!3228 = !DILocation(line: 443, column: 30, scope: !3194)
!3229 = !DILocation(line: 443, column: 20, scope: !3194)
!3230 = !DILocation(line: 445, column: 20, scope: !3198)
!3231 = !DILocation(line: 445, column: 9, scope: !3210)
!3232 = !DILocation(line: 456, column: 19, scope: !3210)
!3233 = !DILocation(line: 457, column: 13, scope: !3210)
!3234 = !DILocation(line: 456, column: 16, scope: !3210)
!3235 = !DILocation(line: 459, column: 42, scope: !3210)
!3236 = !DILocalVariable(name: "slot", scope: !3237, file: !3131, line: 459, type: !3152, align: 8)
!3237 = !DILexicalBlockFile(scope: !3238, file: !3131, discriminator: 0)
!3238 = distinct !DISubprogram(name: "into_inner<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h0deabc72ce1d655eE", scope: !3152, file: !3165, line: 88, type: !3187, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3155, retainedNodes: !3239)
!3239 = !{!3236}
!3240 = !DILocation(line: 459, column: 17, scope: !3237, inlinedAt: !3241)
!3241 = !DILocation(line: 459, column: 17, scope: !3210)
!3242 = !DILocation(line: 459, column: 13, scope: !3210)
!3243 = !DILocation(line: 521, column: 2, scope: !3194)
!3244 = distinct !DISubprogram(name: "do_call<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>, ()>", linkageName: "_ZN3std9panicking3try7do_call17hb7ad3ef0ce12fefdE", scope: !3138, file: !3131, line: 486, type: !3245, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2493, retainedNodes: !3247)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{null, !1021}
!3247 = !{!3248, !3249, !3252, !3255}
!3248 = !DILocalVariable(name: "data", arg: 1, scope: !3244, file: !3131, line: 486, type: !1021)
!3249 = !DILocalVariable(name: "data", scope: !3250, file: !3131, line: 489, type: !3251, align: 8)
!3250 = distinct !DILexicalBlock(scope: !3244, file: !3131, line: 489, column: 13)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>, ()>", baseType: !3137, size: 64, align: 64, dwarfAddressSpace: 0)
!3252 = !DILocalVariable(name: "data", scope: !3253, file: !3131, line: 490, type: !3254, align: 8)
!3253 = distinct !DILexicalBlock(scope: !3250, file: !3131, line: 490, column: 13)
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>, ()>", baseType: !3137, size: 64, align: 64, dwarfAddressSpace: 0)
!3255 = !DILocalVariable(name: "f", scope: !3256, file: !3131, line: 491, type: !1394, align: 1)
!3256 = distinct !DILexicalBlock(scope: !3253, file: !3131, line: 491, column: 13)
!3257 = !DILocation(line: 486, column: 37, scope: !3244)
!3258 = !DILocation(line: 491, column: 17, scope: !3256)
!3259 = !DILocalVariable(name: "value", scope: !3260, file: !3131, line: 492, type: !7, align: 1)
!3260 = !DILexicalBlockFile(scope: !3261, file: !3131, discriminator: 0)
!3261 = distinct !DISubprogram(name: "new<()>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h48563e339f6d2287E", scope: !3148, file: !3165, line: 70, type: !1498, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !3262)
!3262 = !{!3259}
!3263 = !DILocation(line: 492, column: 22, scope: !3260, inlinedAt: !3264)
!3264 = !DILocation(line: 492, column: 22, scope: !3256)
!3265 = !DILocalVariable(name: "tmp", scope: !3266, file: !3131, line: 491, type: !3275, align: 1)
!3266 = !DILexicalBlockFile(scope: !3267, file: !3131, discriminator: 0)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !959, line: 1107, column: 5)
!3268 = distinct !DISubprogram(name: "read<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", linkageName: "_ZN4core3ptr4read17haed5832bf709c1bdE", scope: !53, file: !959, line: 1099, type: !3269, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3145, retainedNodes: !3272)
!3269 = !DISubroutineType(types: !3270)
!3270 = !{null, !3271}
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>", baseType: !1394, size: 64, align: 64, dwarfAddressSpace: 0)
!3272 = !{!3273, !3265}
!3273 = !DILocalVariable(name: "src", scope: !3274, file: !3131, line: 491, type: !3271, align: 8)
!3274 = !DILexicalBlockFile(scope: !3268, file: !3131, discriminator: 0)
!3275 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", scope: !3276, file: !2, align: 8, elements: !3277, templateParams: !3145, identifier: "c58e97b2d840793f30b341ac323b6c5a")
!3276 = !DINamespace(name: "maybe_uninit", scope: !789)
!3277 = !{!3278, !3279}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3275, file: !2, baseType: !7, align: 8)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3275, file: !2, baseType: !3141, align: 8)
!3280 = !DILocation(line: 491, column: 21, scope: !3266, inlinedAt: !3281)
!3281 = !DILocation(line: 113, column: 18, scope: !3282, inlinedAt: !3289)
!3282 = distinct !DISubprogram(name: "take<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$4take17h045fb350111792f5E", scope: !3141, file: !3165, line: 110, type: !3283, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3145, retainedNodes: !3286)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{null, !3285}
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", baseType: !3141, size: 64, align: 64, dwarfAddressSpace: 0)
!3286 = !{!3287}
!3287 = !DILocalVariable(name: "slot", scope: !3288, file: !3131, line: 491, type: !3285, align: 8)
!3288 = !DILexicalBlockFile(scope: !3282, file: !3131, discriminator: 0)
!3289 = !DILocation(line: 491, column: 21, scope: !3253)
!3290 = !DILocalVariable(name: "self", scope: !3291, file: !3131, line: 491, type: !3275, align: 1)
!3291 = !DILexicalBlockFile(scope: !3292, file: !3131, discriminator: 0)
!3292 = distinct !DISubprogram(name: "assume_init<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17he6ea96fd1b41265dE", scope: !3275, file: !3293, line: 629, type: !3294, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3145, retainedNodes: !3296)
!3293 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d75c93d9a93fe65ef19edc0e8e272278")
!3294 = !DISubroutineType(types: !3295)
!3295 = !{null, !3275, !1109}
!3296 = !{!3290}
!3297 = !DILocation(line: 491, column: 21, scope: !3291, inlinedAt: !3298)
!3298 = !DILocation(line: 1116, column: 9, scope: !3267, inlinedAt: !3281)
!3299 = !DILocalVariable(name: "slot", scope: !3300, file: !3131, line: 491, type: !3141, align: 1)
!3300 = !DILexicalBlockFile(scope: !3301, file: !3131, discriminator: 0)
!3301 = distinct !DISubprogram(name: "into_inner<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h7b62c10d95abbdf7E", scope: !3141, file: !3165, line: 88, type: !3302, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3145, retainedNodes: !3304)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{null, !3141}
!3304 = !{!3299}
!3305 = !DILocation(line: 491, column: 21, scope: !3300, inlinedAt: !3306)
!3306 = !DILocation(line: 634, column: 13, scope: !3292, inlinedAt: !3298)
!3307 = !DILocation(line: 489, column: 24, scope: !3244)
!3308 = !DILocation(line: 489, column: 17, scope: !3250)
!3309 = !DILocation(line: 490, column: 24, scope: !3250)
!3310 = !DILocation(line: 490, column: 17, scope: !3253)
!3311 = !DILocation(line: 491, column: 40, scope: !3253)
!3312 = !DILocation(line: 491, column: 21, scope: !3288, inlinedAt: !3289)
!3313 = !DILocation(line: 491, column: 21, scope: !3274, inlinedAt: !3281)
!3314 = !DILocation(line: 491, column: 21, scope: !3315, inlinedAt: !3317)
!3315 = !DILexicalBlockFile(scope: !3316, file: !3131, discriminator: 0)
!3316 = distinct !DISubprogram(name: "uninit<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4a4d14a8f8609fdaE", scope: !3275, file: !3293, line: 320, type: !179, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3145, retainedNodes: !28)
!3317 = !DILocation(line: 1107, column: 19, scope: !3268, inlinedAt: !3281)
!3318 = !DILocalVariable(name: "self", scope: !3319, file: !3131, line: 491, type: !3324, align: 8)
!3319 = !DILexicalBlockFile(scope: !3320, file: !3131, discriminator: 0)
!3320 = distinct !DISubprogram(name: "as_mut_ptr<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h9ee1f5f2743b9cdaE", scope: !3275, file: !3293, line: 574, type: !3321, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3145, retainedNodes: !3325)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!3323, !3324}
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>", baseType: !1394, size: 64, align: 64, dwarfAddressSpace: 0)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>>", baseType: !3275, size: 64, align: 64, dwarfAddressSpace: 0)
!3325 = !{!3318}
!3326 = !DILocation(line: 491, column: 21, scope: !3319, inlinedAt: !3327)
!3327 = !DILocation(line: 1115, column: 34, scope: !3267, inlinedAt: !3281)
!3328 = !DILocation(line: 492, column: 40, scope: !3256)
!3329 = !DILocation(line: 492, column: 13, scope: !3256)
!3330 = !DILocation(line: 494, column: 6, scope: !3244)
!3331 = distinct !DISubprogram(name: "do_call<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>, ()>", linkageName: "_ZN3std9panicking3try7do_call17hfb3ba7a4ccb97de2E", scope: !3138, file: !3131, line: 486, type: !3245, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2483, retainedNodes: !3332)
!3332 = !{!3333, !3334, !3337, !3340}
!3333 = !DILocalVariable(name: "data", arg: 1, scope: !3331, file: !3131, line: 486, type: !1021)
!3334 = !DILocalVariable(name: "data", scope: !3335, file: !3131, line: 489, type: !3336, align: 8)
!3335 = distinct !DILexicalBlock(scope: !3331, file: !3131, line: 489, column: 13)
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>, ()>", baseType: !3199, size: 64, align: 64, dwarfAddressSpace: 0)
!3337 = !DILocalVariable(name: "data", scope: !3338, file: !3131, line: 490, type: !3339, align: 8)
!3338 = distinct !DILexicalBlock(scope: !3335, file: !3131, line: 490, column: 13)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>, ()>", baseType: !3199, size: 64, align: 64, dwarfAddressSpace: 0)
!3340 = !DILocalVariable(name: "f", scope: !3341, file: !3131, line: 491, type: !1370, align: 8)
!3341 = distinct !DILexicalBlock(scope: !3338, file: !3131, line: 491, column: 13)
!3342 = !DILocation(line: 486, column: 37, scope: !3331)
!3343 = !DILocalVariable(name: "value", scope: !3344, file: !3131, line: 492, type: !7, align: 1)
!3344 = !DILexicalBlockFile(scope: !3345, file: !3131, discriminator: 0)
!3345 = distinct !DISubprogram(name: "new<()>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h48563e339f6d2287E", scope: !3148, file: !3165, line: 70, type: !1498, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !3346)
!3346 = !{!3343}
!3347 = !DILocation(line: 492, column: 22, scope: !3344, inlinedAt: !3348)
!3348 = !DILocation(line: 492, column: 22, scope: !3341)
!3349 = !DILocalVariable(name: "tmp", scope: !3350, file: !3131, line: 491, type: !3359, align: 8)
!3350 = !DILexicalBlockFile(scope: !3351, file: !3131, discriminator: 0)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !959, line: 1107, column: 5)
!3352 = distinct !DISubprogram(name: "read<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", linkageName: "_ZN4core3ptr4read17h999b94cddec71390E", scope: !53, file: !959, line: 1099, type: !3353, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3205, retainedNodes: !3356)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!1370, !3355}
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>", baseType: !1370, size: 64, align: 64, dwarfAddressSpace: 0)
!3356 = !{!3357, !3349}
!3357 = !DILocalVariable(name: "src", scope: !3358, file: !3131, line: 491, type: !3355, align: 8)
!3358 = !DILexicalBlockFile(scope: !3352, file: !3131, discriminator: 0)
!3359 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", scope: !3276, file: !2, size: 64, align: 64, elements: !3360, templateParams: !3205, identifier: "ec422eecdecff3f1c50b8fdfd2ec0f2")
!3360 = !{!3361, !3362}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3359, file: !2, baseType: !7, align: 8)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3359, file: !2, baseType: !3202, size: 64, align: 64)
!3363 = !DILocation(line: 491, column: 21, scope: !3350, inlinedAt: !3364)
!3364 = !DILocation(line: 113, column: 18, scope: !3365, inlinedAt: !3372)
!3365 = distinct !DISubprogram(name: "take<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$4take17hb2a34a2e702de485E", scope: !3202, file: !3165, line: 110, type: !3366, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3205, retainedNodes: !3369)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!1370, !3368}
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", baseType: !3202, size: 64, align: 64, dwarfAddressSpace: 0)
!3369 = !{!3370}
!3370 = !DILocalVariable(name: "slot", scope: !3371, file: !3131, line: 491, type: !3368, align: 8)
!3371 = !DILexicalBlockFile(scope: !3365, file: !3131, discriminator: 0)
!3372 = !DILocation(line: 491, column: 21, scope: !3338)
!3373 = !DILocation(line: 489, column: 24, scope: !3331)
!3374 = !DILocation(line: 489, column: 17, scope: !3335)
!3375 = !DILocation(line: 490, column: 24, scope: !3335)
!3376 = !DILocation(line: 490, column: 17, scope: !3338)
!3377 = !DILocation(line: 491, column: 40, scope: !3338)
!3378 = !DILocation(line: 491, column: 21, scope: !3371, inlinedAt: !3372)
!3379 = !DILocation(line: 491, column: 21, scope: !3358, inlinedAt: !3364)
!3380 = !DILocation(line: 491, column: 21, scope: !3381, inlinedAt: !3385)
!3381 = !DILexicalBlockFile(scope: !3382, file: !3131, discriminator: 0)
!3382 = distinct !DISubprogram(name: "uninit<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hcb9674ee9ce41447E", scope: !3359, file: !3293, line: 320, type: !3383, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3205, retainedNodes: !28)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{!3359}
!3385 = !DILocation(line: 1107, column: 19, scope: !3352, inlinedAt: !3364)
!3386 = !DILocalVariable(name: "self", scope: !3387, file: !3131, line: 491, type: !3392, align: 8)
!3387 = !DILexicalBlockFile(scope: !3388, file: !3131, discriminator: 0)
!3388 = distinct !DISubprogram(name: "as_mut_ptr<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17ha584f62f722a1471E", scope: !3359, file: !3293, line: 574, type: !3389, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3205, retainedNodes: !3393)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!3391, !3392}
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>", baseType: !1370, size: 64, align: 64, dwarfAddressSpace: 0)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", baseType: !3359, size: 64, align: 64, dwarfAddressSpace: 0)
!3393 = !{!3386}
!3394 = !DILocation(line: 491, column: 21, scope: !3387, inlinedAt: !3395)
!3395 = !DILocation(line: 1115, column: 34, scope: !3351, inlinedAt: !3364)
!3396 = !DILocalVariable(name: "self", scope: !3397, file: !3131, line: 491, type: !3359, align: 8)
!3397 = !DILexicalBlockFile(scope: !3398, file: !3131, discriminator: 0)
!3398 = distinct !DISubprogram(name: "assume_init<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h63bf245961d2aae9E", scope: !3359, file: !3293, line: 629, type: !3399, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3205, retainedNodes: !3401)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!1370, !3359, !1109}
!3401 = !{!3396}
!3402 = !DILocation(line: 491, column: 21, scope: !3397, inlinedAt: !3403)
!3403 = !DILocation(line: 1116, column: 9, scope: !3351, inlinedAt: !3364)
!3404 = !DILocalVariable(name: "slot", scope: !3405, file: !3131, line: 491, type: !3202, align: 8)
!3405 = !DILexicalBlockFile(scope: !3406, file: !3131, discriminator: 0)
!3406 = distinct !DISubprogram(name: "into_inner<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb904ef983a80c045E", scope: !3202, file: !3165, line: 88, type: !3407, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3205, retainedNodes: !3409)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!1370, !3202}
!3409 = !{!3404}
!3410 = !DILocation(line: 491, column: 21, scope: !3405, inlinedAt: !3411)
!3411 = !DILocation(line: 634, column: 13, scope: !3398, inlinedAt: !3403)
!3412 = !DILocation(line: 491, column: 17, scope: !3341)
!3413 = !DILocation(line: 492, column: 40, scope: !3341)
!3414 = !DILocation(line: 492, column: 13, scope: !3341)
!3415 = !DILocation(line: 494, column: 6, scope: !3331)
!3416 = distinct !DISubprogram(name: "do_catch<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>, ()>", linkageName: "_ZN3std9panicking3try8do_catch17h4a756b03f9a54b02E", scope: !3138, file: !3131, line: 508, type: !3417, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2493, retainedNodes: !3419)
!3417 = !DISubroutineType(types: !3418)
!3418 = !{null, !1021, !1021}
!3419 = !{!3420, !3421, !3422, !3424, !3426}
!3420 = !DILocalVariable(name: "data", arg: 1, scope: !3416, file: !3131, line: 508, type: !1021)
!3421 = !DILocalVariable(name: "payload", arg: 2, scope: !3416, file: !3131, line: 508, type: !1021)
!3422 = !DILocalVariable(name: "data", scope: !3423, file: !3131, line: 515, type: !3251, align: 8)
!3423 = distinct !DILexicalBlock(scope: !3416, file: !3131, line: 515, column: 13)
!3424 = !DILocalVariable(name: "data", scope: !3425, file: !3131, line: 516, type: !3254, align: 8)
!3425 = distinct !DILexicalBlock(scope: !3423, file: !3131, line: 516, column: 13)
!3426 = !DILocalVariable(name: "obj", scope: !3427, file: !3131, line: 517, type: !456, align: 8)
!3427 = distinct !DILexicalBlock(scope: !3425, file: !3131, line: 517, column: 13)
!3428 = !DILocation(line: 508, column: 38, scope: !3416)
!3429 = !DILocation(line: 508, column: 53, scope: !3416)
!3430 = !DILocation(line: 515, column: 24, scope: !3416)
!3431 = !DILocation(line: 515, column: 17, scope: !3423)
!3432 = !DILocation(line: 516, column: 24, scope: !3423)
!3433 = !DILocation(line: 516, column: 17, scope: !3425)
!3434 = !DILocation(line: 517, column: 23, scope: !3425)
!3435 = !DILocation(line: 517, column: 17, scope: !3427)
!3436 = !DILocation(line: 518, column: 40, scope: !3427)
!3437 = !DILocalVariable(name: "value", scope: !3438, file: !3131, line: 518, type: !456, align: 8)
!3438 = !DILexicalBlockFile(scope: !3439, file: !3131, discriminator: 0)
!3439 = distinct !DISubprogram(name: "new<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h01997d816e907be8E", scope: !3152, file: !3165, line: 70, type: !3440, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3155, retainedNodes: !3442)
!3440 = !DISubroutineType(types: !3441)
!3441 = !{!3152, !456}
!3442 = !{!3437}
!3443 = !DILocation(line: 518, column: 22, scope: !3438, inlinedAt: !3444)
!3444 = !DILocation(line: 518, column: 22, scope: !3427)
!3445 = !DILocation(line: 518, column: 13, scope: !3427)
!3446 = !DILocation(line: 520, column: 6, scope: !3416)
!3447 = distinct !DISubprogram(name: "do_catch<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#6}::drop::{closure_env#0}<()>>, ()>", linkageName: "_ZN3std9panicking3try8do_catch17hbecaaaf0250073caE", scope: !3138, file: !3131, line: 508, type: !3417, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2483, retainedNodes: !3448)
!3448 = !{!3449, !3450, !3451, !3453, !3455}
!3449 = !DILocalVariable(name: "data", arg: 1, scope: !3447, file: !3131, line: 508, type: !1021)
!3450 = !DILocalVariable(name: "payload", arg: 2, scope: !3447, file: !3131, line: 508, type: !1021)
!3451 = !DILocalVariable(name: "data", scope: !3452, file: !3131, line: 515, type: !3336, align: 8)
!3452 = distinct !DILexicalBlock(scope: !3447, file: !3131, line: 515, column: 13)
!3453 = !DILocalVariable(name: "data", scope: !3454, file: !3131, line: 516, type: !3339, align: 8)
!3454 = distinct !DILexicalBlock(scope: !3452, file: !3131, line: 516, column: 13)
!3455 = !DILocalVariable(name: "obj", scope: !3456, file: !3131, line: 517, type: !456, align: 8)
!3456 = distinct !DILexicalBlock(scope: !3454, file: !3131, line: 517, column: 13)
!3457 = !DILocation(line: 508, column: 38, scope: !3447)
!3458 = !DILocation(line: 508, column: 53, scope: !3447)
!3459 = !DILocation(line: 515, column: 24, scope: !3447)
!3460 = !DILocation(line: 515, column: 17, scope: !3452)
!3461 = !DILocation(line: 516, column: 24, scope: !3452)
!3462 = !DILocation(line: 516, column: 17, scope: !3454)
!3463 = !DILocation(line: 517, column: 23, scope: !3454)
!3464 = !DILocation(line: 517, column: 17, scope: !3456)
!3465 = !DILocation(line: 518, column: 40, scope: !3456)
!3466 = !DILocalVariable(name: "value", scope: !3467, file: !3131, line: 518, type: !456, align: 8)
!3467 = !DILexicalBlockFile(scope: !3468, file: !3131, discriminator: 0)
!3468 = distinct !DISubprogram(name: "new<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h01997d816e907be8E", scope: !3152, file: !3165, line: 70, type: !3440, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3155, retainedNodes: !3469)
!3469 = !{!3466}
!3470 = !DILocation(line: 518, column: 22, scope: !3467, inlinedAt: !3471)
!3471 = !DILocation(line: 518, column: 22, scope: !3456)
!3472 = !DILocation(line: 518, column: 13, scope: !3456)
!3473 = !DILocation(line: 520, column: 6, scope: !3447)
!3474 = distinct !DISubprogram(name: "fmt<[i32; 16]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0f7c9127e552ad1eE", scope: !3475, file: !2158, line: 2361, type: !3476, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3482, retainedNodes: !3479)
!3475 = !DINamespace(name: "{impl#59}", scope: !858)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{!1717, !3478, !1733}
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32; 16]", baseType: !585, size: 64, align: 64, dwarfAddressSpace: 0)
!3479 = !{!3480, !3481}
!3480 = !DILocalVariable(name: "self", arg: 1, scope: !3474, file: !2158, line: 2361, type: !3478)
!3481 = !DILocalVariable(name: "f", arg: 2, scope: !3474, file: !2158, line: 2361, type: !1733)
!3482 = !{!3483}
!3483 = !DITemplateTypeParameter(name: "T", type: !586)
!3484 = !DILocation(line: 2361, column: 20, scope: !3474)
!3485 = !DILocation(line: 2361, column: 27, scope: !3474)
!3486 = !DILocation(line: 2361, column: 71, scope: !3474)
!3487 = !{i64 4}
!3488 = !DILocation(line: 2361, column: 62, scope: !3474)
!3489 = !DILocation(line: 2361, column: 84, scope: !3474)
!3490 = distinct !DISubprogram(name: "fmt<u32>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h13b9f53be999e7a3E", scope: !3475, file: !2158, line: 2361, type: !3491, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !276, retainedNodes: !3494)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!1717, !3493, !1733}
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&u32", baseType: !576, size: 64, align: 64, dwarfAddressSpace: 0)
!3494 = !{!3495, !3496}
!3495 = !DILocalVariable(name: "self", arg: 1, scope: !3490, file: !2158, line: 2361, type: !3493)
!3496 = !DILocalVariable(name: "f", arg: 2, scope: !3490, file: !2158, line: 2361, type: !1733)
!3497 = !DILocation(line: 2361, column: 20, scope: !3490)
!3498 = !DILocation(line: 2361, column: 27, scope: !3490)
!3499 = !DILocation(line: 2361, column: 71, scope: !3490)
!3500 = !DILocation(line: 2361, column: 62, scope: !3490)
!3501 = !DILocation(line: 2361, column: 84, scope: !3490)
!3502 = distinct !DISubprogram(name: "fmt<[i32]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h388f944a0ba5fb00E", scope: !3475, file: !2158, line: 2361, type: !3503, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !3511)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!1717, !3505, !1733}
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32]", baseType: !3506, size: 64, align: 64, dwarfAddressSpace: 0)
!3506 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[i32]", file: !2, size: 128, align: 64, elements: !3507, templateParams: !28, identifier: "8022034f3dbe6b09f9f0a7f6cd6bb480")
!3507 = !{!3508, !3510}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3506, file: !2, baseType: !3509, size: 64, align: 64)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64, align: 64, dwarfAddressSpace: 0)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3506, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3511 = !{!3512, !3513}
!3512 = !DILocalVariable(name: "self", arg: 1, scope: !3502, file: !2158, line: 2361, type: !3505)
!3513 = !DILocalVariable(name: "f", arg: 2, scope: !3502, file: !2158, line: 2361, type: !1733)
!3514 = !{!3515}
!3515 = !DITemplateTypeParameter(name: "T", type: !70)
!3516 = !DILocation(line: 2361, column: 20, scope: !3502)
!3517 = !DILocation(line: 2361, column: 27, scope: !3502)
!3518 = !DILocation(line: 2361, column: 71, scope: !3502)
!3519 = !DILocation(line: 2361, column: 62, scope: !3502)
!3520 = !DILocation(line: 2361, column: 84, scope: !3502)
!3521 = distinct !DISubprogram(name: "fmt<f32>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h620069b5c990afe8E", scope: !3475, file: !2158, line: 2361, type: !3522, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3528, retainedNodes: !3525)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!1717, !3524, !1733}
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&f32", baseType: !554, size: 64, align: 64, dwarfAddressSpace: 0)
!3525 = !{!3526, !3527}
!3526 = !DILocalVariable(name: "self", arg: 1, scope: !3521, file: !2158, line: 2361, type: !3524)
!3527 = !DILocalVariable(name: "f", arg: 2, scope: !3521, file: !2158, line: 2361, type: !1733)
!3528 = !{!3529}
!3529 = !DITemplateTypeParameter(name: "T", type: !555)
!3530 = !DILocation(line: 2361, column: 20, scope: !3521)
!3531 = !DILocation(line: 2361, column: 27, scope: !3521)
!3532 = !DILocation(line: 2361, column: 71, scope: !3521)
!3533 = !DILocation(line: 2361, column: 62, scope: !3521)
!3534 = !DILocation(line: 2361, column: 84, scope: !3521)
!3535 = distinct !DISubprogram(name: "fmt<[i32; 11]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17he83ea735d7c4d560E", scope: !3475, file: !2158, line: 2361, type: !3536, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3542, retainedNodes: !3539)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!1717, !3538, !1733}
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32; 11]", baseType: !564, size: 64, align: 64, dwarfAddressSpace: 0)
!3539 = !{!3540, !3541}
!3540 = !DILocalVariable(name: "self", arg: 1, scope: !3535, file: !2158, line: 2361, type: !3538)
!3541 = !DILocalVariable(name: "f", arg: 2, scope: !3535, file: !2158, line: 2361, type: !1733)
!3542 = !{!3543}
!3543 = !DITemplateTypeParameter(name: "T", type: !565)
!3544 = !DILocation(line: 2361, column: 20, scope: !3535)
!3545 = !DILocation(line: 2361, column: 27, scope: !3535)
!3546 = !DILocation(line: 2361, column: 71, scope: !3535)
!3547 = !DILocation(line: 2361, column: 62, scope: !3535)
!3548 = !DILocation(line: 2361, column: 84, scope: !3535)
!3549 = distinct !DISubprogram(name: "fmt<i32>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf2e76c0a5a5bc719E", scope: !3475, file: !2158, line: 2361, type: !3550, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !3553)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!1717, !3552, !1733}
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&i32", baseType: !517, size: 64, align: 64, dwarfAddressSpace: 0)
!3553 = !{!3554, !3555}
!3554 = !DILocalVariable(name: "self", arg: 1, scope: !3549, file: !2158, line: 2361, type: !3552)
!3555 = !DILocalVariable(name: "f", arg: 2, scope: !3549, file: !2158, line: 2361, type: !1733)
!3556 = !DILocation(line: 2361, column: 20, scope: !3549)
!3557 = !DILocation(line: 2361, column: 27, scope: !3549)
!3558 = !DILocation(line: 2361, column: 71, scope: !3549)
!3559 = !DILocation(line: 2361, column: 62, scope: !3549)
!3560 = !DILocation(line: 2361, column: 84, scope: !3549)
!3561 = distinct !DISubprogram(name: "fmt<i32>", linkageName: "_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h8732322f7f05646fE", scope: !3562, file: !2158, line: 2586, type: !3563, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !3565)
!3562 = !DINamespace(name: "{impl#26}", scope: !858)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!1717, !3506, !1733}
!3565 = !{!3566, !3567}
!3566 = !DILocalVariable(name: "self", arg: 1, scope: !3561, file: !2158, line: 2586, type: !3506)
!3567 = !DILocalVariable(name: "f", arg: 2, scope: !3561, file: !2158, line: 2586, type: !1733)
!3568 = !DILocation(line: 2586, column: 12, scope: !3561)
!3569 = !DILocation(line: 2586, column: 19, scope: !3561)
!3570 = !DILocation(line: 2587, column: 9, scope: !3561)
!3571 = !DILocation(line: 2587, column: 32, scope: !3561)
!3572 = !DILocalVariable(name: "self", scope: !3573, file: !2158, line: 2587, type: !3506, align: 8)
!3573 = !DILexicalBlockFile(scope: !3574, file: !2158, discriminator: 0)
!3574 = distinct !DISubprogram(name: "iter<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h067ca9b2163f4364E", scope: !1568, file: !1567, line: 734, type: !3575, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !3590)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!3577, !3506}
!3577 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<i32>", scope: !3578, file: !2, size: 128, align: 64, elements: !3579, templateParams: !3514, identifier: "96f846a3802ea0a0ed3707bd3e3e325d")
!3578 = !DINamespace(name: "iter", scope: !892)
!3579 = !{!3580, !3585, !3586}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3577, file: !2, baseType: !3581, size: 64, align: 64)
!3581 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<i32>", scope: !52, file: !2, size: 64, align: 64, elements: !3582, templateParams: !3514, identifier: "aa602cb571ba548f8a76bb877f42f41a")
!3582 = !{!3583}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3581, file: !2, baseType: !3584, size: 64, align: 64)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i32", baseType: !70, size: 64, align: 64, dwarfAddressSpace: 0)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3577, file: !2, baseType: !3584, size: 64, align: 64, offset: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3577, file: !2, baseType: !3587, align: 8)
!3587 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&i32>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !3588, identifier: "9ba0fcf44e40729d0e472435eb55ec0")
!3588 = !{!3589}
!3589 = !DITemplateTypeParameter(name: "T", type: !517)
!3590 = !{!3572}
!3591 = !DILocation(line: 2587, column: 32, scope: !3573, inlinedAt: !3571)
!3592 = !DILocation(line: 2588, column: 6, scope: !3561)
!3593 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h4f08995ab98d8c7cE", scope: !3595, file: !3594, line: 189, type: !1329, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3597)
!3594 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "a5e6372fb466d62a237d46ecffb4676a")
!3595 = !DINamespace(name: "{impl#37}", scope: !3596)
!3596 = !DINamespace(name: "range", scope: !1219)
!3597 = !{!3598, !3599}
!3598 = !DILocalVariable(name: "start", arg: 1, scope: !3593, file: !3594, line: 189, type: !9)
!3599 = !DILocalVariable(name: "n", arg: 2, scope: !3593, file: !3594, line: 189, type: !9)
!3600 = !DILocation(line: 189, column: 37, scope: !3593)
!3601 = !DILocation(line: 189, column: 50, scope: !3593)
!3602 = !DILocation(line: 191, column: 22, scope: !3593)
!3603 = !DILocalVariable(name: "self", scope: !3604, file: !3594, line: 191, type: !9, align: 8)
!3604 = !DILexicalBlockFile(scope: !3605, file: !3594, discriminator: 0)
!3605 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h248c853f68583999E", scope: !1328, file: !1327, line: 463, type: !1329, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3606)
!3606 = !{!3603, !3607}
!3607 = !DILocalVariable(name: "rhs", scope: !3604, file: !3594, line: 191, type: !9, align: 8)
!3608 = !DILocation(line: 191, column: 22, scope: !3604, inlinedAt: !3602)
!3609 = !DILocation(line: 191, column: 42, scope: !3593)
!3610 = !DILocation(line: 192, column: 10, scope: !3593)
!3611 = distinct !DISubprogram(name: "backward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17h7ca4e02a87554400E", scope: !3595, file: !3594, line: 195, type: !1329, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3612)
!3612 = !{!3613, !3614}
!3613 = !DILocalVariable(name: "start", arg: 1, scope: !3611, file: !3594, line: 195, type: !9)
!3614 = !DILocalVariable(name: "n", arg: 2, scope: !3611, file: !3594, line: 195, type: !9)
!3615 = !DILocation(line: 195, column: 38, scope: !3611)
!3616 = !DILocation(line: 195, column: 51, scope: !3611)
!3617 = !DILocation(line: 197, column: 22, scope: !3611)
!3618 = !DILocalVariable(name: "self", scope: !3619, file: !3594, line: 197, type: !9, align: 8)
!3619 = !DILexicalBlockFile(scope: !3620, file: !3594, discriminator: 0)
!3620 = distinct !DISubprogram(name: "unchecked_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_sub17hb344cc35ba2c7b8eE", scope: !1328, file: !1327, line: 533, type: !1329, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3621)
!3621 = !{!3618, !3622}
!3622 = !DILocalVariable(name: "rhs", scope: !3619, file: !3594, line: 197, type: !9, align: 8)
!3623 = !DILocation(line: 197, column: 22, scope: !3619, inlinedAt: !3617)
!3624 = !DILocation(line: 197, column: 42, scope: !3611)
!3625 = !DILocation(line: 198, column: 10, scope: !3611)
!3626 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17h87e416972f67cf67E", scope: !3627, file: !1337, line: 800, type: !1329, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3631, retainedNodes: !3628)
!3627 = !DINamespace(name: "Ord", scope: !865)
!3628 = !{!3629, !3630}
!3629 = !DILocalVariable(name: "self", arg: 1, scope: !3626, file: !1337, line: 800, type: !9)
!3630 = !DILocalVariable(name: "other", arg: 2, scope: !3626, file: !1337, line: 800, type: !9)
!3631 = !{!3632}
!3632 = !DITemplateTypeParameter(name: "Self", type: !9)
!3633 = !DILocation(line: 800, column: 12, scope: !3626)
!3634 = !DILocation(line: 800, column: 18, scope: !3626)
!3635 = !DILocation(line: 808, column: 15, scope: !3626)
!3636 = !{i8 -1, i8 2}
!3637 = !DILocation(line: 812, column: 5, scope: !3626)
!3638 = !DILocation(line: 808, column: 9, scope: !3626)
!3639 = !DILocation(line: 809, column: 49, scope: !3626)
!3640 = !DILocation(line: 810, column: 34, scope: !3626)
!3641 = !DILocation(line: 800, column: 5, scope: !3626)
!3642 = !DILocation(line: 812, column: 6, scope: !3626)
!3643 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h6ac6a57f4367ed8fE", scope: !3644, file: !1337, line: 1436, type: !3646, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3648)
!3644 = !DINamespace(name: "{impl#55}", scope: !3645)
!3645 = !DINamespace(name: "impls", scope: !865)
!3646 = !DISubroutineType(types: !3647)
!3647 = !{!864, !918, !918}
!3648 = !{!3649, !3650}
!3649 = !DILocalVariable(name: "self", arg: 1, scope: !3643, file: !1337, line: 1436, type: !918)
!3650 = !DILocalVariable(name: "other", arg: 2, scope: !3643, file: !1337, line: 1436, type: !918)
!3651 = !DILocation(line: 1436, column: 24, scope: !3643)
!3652 = !DILocation(line: 1436, column: 31, scope: !3643)
!3653 = !DILocation(line: 1439, column: 24, scope: !3643)
!3654 = !DILocation(line: 1439, column: 32, scope: !3643)
!3655 = !DILocation(line: 1440, column: 29, scope: !3643)
!3656 = !DILocation(line: 1440, column: 38, scope: !3643)
!3657 = !DILocation(line: 1439, column: 41, scope: !3643)
!3658 = !DILocation(line: 1439, column: 21, scope: !3643)
!3659 = !DILocation(line: 1442, column: 18, scope: !3643)
!3660 = !DILocation(line: 1441, column: 28, scope: !3643)
!3661 = !DILocation(line: 1440, column: 26, scope: !3643)
!3662 = !DILocation(line: 1440, column: 47, scope: !3643)
!3663 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17ha506a09541c0c86bE", scope: !3664, file: !1337, line: 1423, type: !3665, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3667)
!3664 = !DINamespace(name: "{impl#54}", scope: !3645)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{!1244, !918, !918}
!3667 = !{!3668, !3669}
!3668 = !DILocalVariable(name: "self", arg: 1, scope: !3663, file: !1337, line: 1423, type: !918)
!3669 = !DILocalVariable(name: "other", arg: 2, scope: !3663, file: !1337, line: 1423, type: !918)
!3670 = !DILocation(line: 1423, column: 23, scope: !3663)
!3671 = !DILocation(line: 1423, column: 30, scope: !3663)
!3672 = !DILocation(line: 1423, column: 52, scope: !3663)
!3673 = !DILocation(line: 1423, column: 62, scope: !3663)
!3674 = !DILocation(line: 1423, column: 72, scope: !3663)
!3675 = distinct !DISubprogram(name: "eq<str, str>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h688b63d4a5bbf871E", scope: !3676, file: !1337, line: 1512, type: !3677, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3683, retainedNodes: !3680)
!3676 = !DINamespace(name: "{impl#9}", scope: !3645)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!1244, !3679, !3679}
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !145, size: 64, align: 64, dwarfAddressSpace: 0)
!3680 = !{!3681, !3682}
!3681 = !DILocalVariable(name: "self", arg: 1, scope: !3675, file: !1337, line: 1512, type: !3679)
!3682 = !DILocalVariable(name: "other", arg: 2, scope: !3675, file: !1337, line: 1512, type: !3679)
!3683 = !{!3684, !3685}
!3684 = !DITemplateTypeParameter(name: "A", type: !78)
!3685 = !DITemplateTypeParameter(name: "B", type: !78)
!3686 = !DILocation(line: 1512, column: 15, scope: !3675)
!3687 = !DILocation(line: 1512, column: 22, scope: !3675)
!3688 = !DILocation(line: 1513, column: 27, scope: !3675)
!3689 = !DILocation(line: 1513, column: 34, scope: !3675)
!3690 = !DILocation(line: 1513, column: 13, scope: !3675)
!3691 = !DILocation(line: 1514, column: 10, scope: !3675)
!3692 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17h534bd972dbb8de8dE", scope: !3694, file: !3693, line: 185, type: !3696, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3698)
!3693 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "6661e46781fcd4293e0f5caf32f3d8ca")
!3694 = !DINamespace(name: "{impl#80}", scope: !3695)
!3695 = !DINamespace(name: "num", scope: !858)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!1717, !517, !1733}
!3698 = !{!3699, !3700}
!3699 = !DILocalVariable(name: "self", arg: 1, scope: !3692, file: !3693, line: 185, type: !517)
!3700 = !DILocalVariable(name: "f", arg: 2, scope: !3692, file: !3693, line: 185, type: !1733)
!3701 = !DILocation(line: 185, column: 20, scope: !3692)
!3702 = !DILocation(line: 185, column: 27, scope: !3692)
!3703 = !DILocation(line: 186, column: 20, scope: !3692)
!3704 = !DILocation(line: 188, column: 27, scope: !3692)
!3705 = !DILocation(line: 187, column: 21, scope: !3692)
!3706 = !DILocation(line: 186, column: 17, scope: !3692)
!3707 = !DILocation(line: 193, column: 14, scope: !3692)
!3708 = !DILocation(line: 191, column: 21, scope: !3692)
!3709 = !DILocation(line: 189, column: 21, scope: !3692)
!3710 = !DILocation(line: 188, column: 24, scope: !3692)
!3711 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u32$GT$3fmt17h05c10c58cf65fe63E", scope: !3712, file: !3693, line: 185, type: !3713, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3715)
!3712 = !DINamespace(name: "{impl#86}", scope: !3695)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!1717, !576, !1733}
!3715 = !{!3716, !3717}
!3716 = !DILocalVariable(name: "self", arg: 1, scope: !3711, file: !3693, line: 185, type: !576)
!3717 = !DILocalVariable(name: "f", arg: 2, scope: !3711, file: !3693, line: 185, type: !1733)
!3718 = !DILocation(line: 185, column: 20, scope: !3711)
!3719 = !DILocation(line: 185, column: 27, scope: !3711)
!3720 = !DILocation(line: 186, column: 20, scope: !3711)
!3721 = !DILocation(line: 188, column: 27, scope: !3711)
!3722 = !DILocation(line: 187, column: 21, scope: !3711)
!3723 = !DILocation(line: 186, column: 17, scope: !3711)
!3724 = !DILocation(line: 193, column: 14, scope: !3711)
!3725 = !DILocation(line: 191, column: 21, scope: !3711)
!3726 = !DILocation(line: 189, column: 21, scope: !3711)
!3727 = !DILocation(line: 188, column: 24, scope: !3711)
!3728 = distinct !DISubprogram(name: "write_char<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>", linkageName: "_ZN4core3fmt5Write10write_char17hb30bfcbec4888ae5E", scope: !3729, file: !2158, line: 164, type: !3730, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3735, retainedNodes: !3732)
!3729 = !DINamespace(name: "Write", scope: !858)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!1717, !508, !1237}
!3732 = !{!3733, !3734}
!3733 = !DILocalVariable(name: "self", arg: 1, scope: !3728, file: !2158, line: 164, type: !508)
!3734 = !DILocalVariable(name: "c", arg: 2, scope: !3728, file: !2158, line: 164, type: !1237)
!3735 = !{!3736}
!3736 = !DITemplateTypeParameter(name: "Self", type: !14)
!3737 = !DILocation(line: 164, column: 19, scope: !3728)
!3738 = !DILocation(line: 164, column: 30, scope: !3728)
!3739 = !DILocation(line: 165, column: 24, scope: !3728)
!3740 = !DILocalVariable(name: "self", scope: !3741, file: !2158, line: 165, type: !1237, align: 4)
!3741 = !DILexicalBlockFile(scope: !3742, file: !2158, discriminator: 0)
!3742 = distinct !DISubprogram(name: "encode_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817he89c5597eef75106E", scope: !3744, file: !3743, line: 656, type: !3747, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3753)
!3743 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "f022f296c6d29fd4ac1963268a3eecbc")
!3744 = !DINamespace(name: "{impl#0}", scope: !3745)
!3745 = !DINamespace(name: "methods", scope: !3746)
!3746 = !DINamespace(name: "char", scope: !32)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!3749, !1237, !1131}
!3749 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut str", file: !2, size: 128, align: 64, elements: !3750, templateParams: !28, identifier: "444dcbb816eb7ea8fc9a04d7bc4f81ac")
!3750 = !{!3751, !3752}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3749, file: !2, baseType: !148, size: 64, align: 64)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3749, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3753 = !{!3740, !3754}
!3754 = !DILocalVariable(name: "dst", scope: !3741, file: !2158, line: 165, type: !1131, align: 8)
!3755 = !DILocation(line: 165, column: 24, scope: !3741, inlinedAt: !3739)
!3756 = !DILocation(line: 165, column: 43, scope: !3728)
!3757 = !DILocation(line: 165, column: 38, scope: !3728)
!3758 = !DILocalVariable(name: "v", scope: !3759, file: !2158, line: 165, type: !1131, align: 8)
!3759 = !DILexicalBlockFile(scope: !3760, file: !2158, discriminator: 0)
!3760 = distinct !DISubprogram(name: "from_utf8_unchecked_mut", linkageName: "_ZN4core3str8converts23from_utf8_unchecked_mut17h85174b051c597563E", scope: !3762, file: !3761, line: 197, type: !3763, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3765)
!3761 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "459d256946ab11c35b95264d728167a0")
!3762 = !DINamespace(name: "converts", scope: !1213)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!3749, !1131}
!3765 = !{!3758}
!3766 = !DILocation(line: 165, column: 24, scope: !3759, inlinedAt: !3767)
!3767 = !DILocation(line: 658, column: 18, scope: !3742, inlinedAt: !3739)
!3768 = !DILocation(line: 165, column: 9, scope: !3728)
!3769 = !DILocation(line: 166, column: 6, scope: !3728)
!3770 = distinct !DISubprogram(name: "write_fmt<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>", linkageName: "_ZN4core3fmt5Write9write_fmt17h5097526a53e38c49E", scope: !3729, file: !2158, line: 187, type: !3771, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3735, retainedNodes: !3773)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{!1717, !508, !1649}
!3773 = !{!3774, !3775}
!3774 = !DILocalVariable(name: "self", arg: 1, scope: !3770, file: !2158, line: 187, type: !508)
!3775 = !DILocalVariable(name: "args", arg: 2, scope: !3770, file: !2158, line: 187, type: !1649)
!3776 = !DILocation(line: 187, column: 18, scope: !3770)
!3777 = !DILocation(line: 187, column: 39, scope: !3770)
!3778 = !DILocation(line: 188, column: 15, scope: !3770)
!3779 = !DILocation(line: 188, column: 26, scope: !3770)
!3780 = !DILocation(line: 188, column: 9, scope: !3770)
!3781 = !DILocation(line: 189, column: 6, scope: !3770)
!3782 = distinct !DISubprogram(name: "entries<&i32, core::slice::iter::Iter<i32>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17h99f8e3dbcd7a54dcE", scope: !3784, file: !3783, line: 637, type: !3793, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3803, retainedNodes: !3796)
!3783 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "e84d8f928a38ea86b324aa7d6aa80df8")
!3784 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !3785, file: !2, size: 128, align: 64, elements: !3786, templateParams: !28, identifier: "ae111038d86e71a88d7f5c91efdbb7c8")
!3785 = !DINamespace(name: "builders", scope: !858)
!3786 = !{!3787}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !3784, file: !2, baseType: !3788, size: 128, align: 64)
!3788 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !3785, file: !2, size: 128, align: 64, elements: !3789, templateParams: !28, identifier: "a1aef014c36393c5f380a5492df722f1")
!3789 = !{!3790, !3791, !3792}
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3788, file: !2, baseType: !1733, size: 64, align: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3788, file: !2, baseType: !1717, size: 8, align: 8, offset: 64)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !3788, file: !2, baseType: !1244, size: 8, align: 8, offset: 72)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!3795, !3795, !3577}
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !3784, size: 64, align: 64, dwarfAddressSpace: 0)
!3796 = !{!3797, !3798, !3799, !3801}
!3797 = !DILocalVariable(name: "self", arg: 1, scope: !3782, file: !3783, line: 637, type: !3795)
!3798 = !DILocalVariable(name: "entries", arg: 2, scope: !3782, file: !3783, line: 637, type: !3577)
!3799 = !DILocalVariable(name: "iter", scope: !3800, file: !3783, line: 642, type: !3577, align: 8)
!3800 = distinct !DILexicalBlock(scope: !3782, file: !3783, line: 642, column: 9)
!3801 = !DILocalVariable(name: "entry", scope: !3802, file: !3783, line: 642, type: !517, align: 8)
!3802 = distinct !DILexicalBlock(scope: !3800, file: !3783, line: 642, column: 30)
!3803 = !{!3804, !3805}
!3804 = !DITemplateTypeParameter(name: "D", type: !517)
!3805 = !DITemplateTypeParameter(name: "I", type: !3577)
!3806 = !DILocation(line: 637, column: 26, scope: !3782)
!3807 = !DILocation(line: 637, column: 37, scope: !3782)
!3808 = !DILocation(line: 642, column: 22, scope: !3800)
!3809 = !DILocation(line: 642, column: 13, scope: !3802)
!3810 = !DILocation(line: 642, column: 22, scope: !3782)
!3811 = !DILocation(line: 642, column: 9, scope: !3800)
!3812 = !DILocation(line: 642, column: 9, scope: !3782)
!3813 = !DILocation(line: 642, column: 13, scope: !3800)
!3814 = !DILocation(line: 643, column: 24, scope: !3802)
!3815 = !DILocation(line: 643, column: 13, scope: !3802)
!3816 = !DILocation(line: 644, column: 9, scope: !3800)
!3817 = !DILocation(line: 637, column: 5, scope: !3782)
!3818 = !DILocation(line: 646, column: 6, scope: !3782)
!3819 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h3e32ba2630489d88E", scope: !1649, file: !2158, line: 390, type: !3820, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3822)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!1649, !1652, !1703}
!3822 = !{!3823, !3824}
!3823 = !DILocalVariable(name: "pieces", arg: 1, scope: !3819, file: !2158, line: 390, type: !1652)
!3824 = !DILocalVariable(name: "args", arg: 2, scope: !3819, file: !2158, line: 390, type: !1703)
!3825 = !DILocation(line: 390, column: 25, scope: !3819)
!3826 = !DILocation(line: 390, column: 53, scope: !3819)
!3827 = !DILocation(line: 391, column: 12, scope: !3819)
!3828 = !DILocation(line: 391, column: 56, scope: !3819)
!3829 = !DILocation(line: 391, column: 41, scope: !3819)
!3830 = !DILocation(line: 394, column: 34, scope: !3819)
!3831 = !DILocation(line: 394, column: 9, scope: !3819)
!3832 = !DILocation(line: 395, column: 6, scope: !3819)
!3833 = !DILocation(line: 392, column: 13, scope: !3819)
!3834 = distinct !DISubprogram(name: "replace<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core3mem7replace17h14699bb539fb6811E", scope: !789, file: !3835, line: 913, type: !3836, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !3838)
!3835 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!3836 = !DISubroutineType(types: !3837)
!3837 = !{!438, !2559, !438}
!3838 = !{!3839, !3840, !3841}
!3839 = !DILocalVariable(name: "dest", arg: 1, scope: !3834, file: !3835, line: 913, type: !2559)
!3840 = !DILocalVariable(name: "src", arg: 2, scope: !3834, file: !3835, line: 913, type: !438)
!3841 = !DILocalVariable(name: "result", scope: !3842, file: !3835, line: 918, type: !438, align: 8)
!3842 = distinct !DILexicalBlock(scope: !3834, file: !3835, line: 918, column: 9)
!3843 = !DILocation(line: 918, column: 13, scope: !3842)
!3844 = !DILocation(line: 913, column: 25, scope: !3834)
!3845 = !DILocation(line: 913, column: 39, scope: !3834)
!3846 = !DILocalVariable(name: "src", scope: !3847, file: !3835, line: 919, type: !438, align: 8)
!3847 = !DILexicalBlockFile(scope: !3848, file: !3835, discriminator: 0)
!3848 = distinct !DISubprogram(name: "write<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr5write17hf96667e7170ea01bE", scope: !53, file: !959, line: 1296, type: !3849, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !3851)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{null, !3094, !438}
!3851 = !{!3852, !3846}
!3852 = !DILocalVariable(name: "dst", scope: !3847, file: !3835, line: 919, type: !3094, align: 8)
!3853 = !DILocation(line: 919, column: 9, scope: !3847, inlinedAt: !3854)
!3854 = !DILocation(line: 919, column: 9, scope: !3842)
!3855 = !DILocalVariable(name: "tmp", scope: !3856, file: !3835, line: 918, type: !3865, align: 8)
!3856 = !DILexicalBlockFile(scope: !3857, file: !3835, discriminator: 0)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !959, line: 1107, column: 5)
!3858 = distinct !DISubprogram(name: "read<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr4read17ha1b384561caf2ce8E", scope: !53, file: !959, line: 1099, type: !3859, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !3862)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!438, !3861}
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>", baseType: !438, size: 64, align: 64, dwarfAddressSpace: 0)
!3862 = !{!3863, !3855}
!3863 = !DILocalVariable(name: "src", scope: !3864, file: !3835, line: 918, type: !3861, align: 8)
!3864 = !DILexicalBlockFile(scope: !3858, file: !3835, discriminator: 0)
!3865 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", scope: !3276, file: !2, size: 192, align: 64, elements: !3866, templateParams: !472, identifier: "3d28f75623de792ae2495515e24eef11")
!3866 = !{!3867, !3868}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3865, file: !2, baseType: !7, align: 8)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3865, file: !2, baseType: !3869, size: 192, align: 64)
!3869 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", scope: !3142, file: !2, size: 192, align: 64, elements: !3870, templateParams: !472, identifier: "c072196b470873cbd5ef73e33b538aa4")
!3870 = !{!3871}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3869, file: !2, baseType: !438, size: 192, align: 64)
!3872 = !DILocation(line: 918, column: 22, scope: !3856, inlinedAt: !3873)
!3873 = !DILocation(line: 918, column: 22, scope: !3834)
!3874 = !DILocalVariable(name: "self", scope: !3875, file: !3835, line: 918, type: !3865, align: 8)
!3875 = !DILexicalBlockFile(scope: !3876, file: !3835, discriminator: 0)
!3876 = distinct !DISubprogram(name: "assume_init<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h7fe02b363a2b69d8E", scope: !3865, file: !3293, line: 629, type: !3877, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !3879)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!438, !3865, !1109}
!3879 = !{!3874}
!3880 = !DILocation(line: 918, column: 22, scope: !3875, inlinedAt: !3881)
!3881 = !DILocation(line: 1116, column: 9, scope: !3857, inlinedAt: !3873)
!3882 = !DILocalVariable(name: "slot", scope: !3883, file: !3835, line: 918, type: !3869, align: 8)
!3883 = !DILexicalBlockFile(scope: !3884, file: !3835, discriminator: 0)
!3884 = distinct !DISubprogram(name: "into_inner<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h4259d5830b6c5aeeE", scope: !3869, file: !3165, line: 88, type: !3885, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !3887)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!438, !3869}
!3887 = !{!3882}
!3888 = !DILocation(line: 918, column: 22, scope: !3883, inlinedAt: !3889)
!3889 = !DILocation(line: 634, column: 13, scope: !3876, inlinedAt: !3881)
!3890 = !DILocation(line: 918, column: 32, scope: !3834)
!3891 = !DILocation(line: 918, column: 22, scope: !3864, inlinedAt: !3873)
!3892 = !DILocation(line: 918, column: 22, scope: !3893, inlinedAt: !3897)
!3893 = !DILexicalBlockFile(scope: !3894, file: !3835, discriminator: 0)
!3894 = distinct !DISubprogram(name: "uninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4c2be0810330461dE", scope: !3865, file: !3293, line: 320, type: !3895, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !28)
!3895 = !DISubroutineType(types: !3896)
!3896 = !{!3865}
!3897 = !DILocation(line: 1107, column: 19, scope: !3858, inlinedAt: !3873)
!3898 = !DILocalVariable(name: "self", scope: !3899, file: !3835, line: 918, type: !3903, align: 8)
!3899 = !DILexicalBlockFile(scope: !3900, file: !3835, discriminator: 0)
!3900 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h5de00580825bb173E", scope: !3865, file: !3293, line: 574, type: !3901, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !3904)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!3094, !3903}
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", baseType: !3865, size: 64, align: 64, dwarfAddressSpace: 0)
!3904 = !{!3898}
!3905 = !DILocation(line: 918, column: 22, scope: !3899, inlinedAt: !3906)
!3906 = !DILocation(line: 1115, column: 34, scope: !3857, inlinedAt: !3873)
!3907 = !DILocation(line: 919, column: 20, scope: !3842)
!3908 = !DILocation(line: 919, column: 26, scope: !3842)
!3909 = !DILocation(line: 922, column: 2, scope: !3834)
!3910 = !DILocation(line: 922, column: 1, scope: !3834)
!3911 = !DILocation(line: 913, column: 1, scope: !3834)
!3912 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17haa87c38c4eb0b131E", scope: !789, file: !3835, line: 913, type: !3913, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !3916)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!9, !3915, !9}
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3916 = !{!3917, !3918, !3919}
!3917 = !DILocalVariable(name: "dest", arg: 1, scope: !3912, file: !3835, line: 913, type: !3915)
!3918 = !DILocalVariable(name: "src", arg: 2, scope: !3912, file: !3835, line: 913, type: !9)
!3919 = !DILocalVariable(name: "result", scope: !3920, file: !3835, line: 918, type: !9, align: 8)
!3920 = distinct !DILexicalBlock(scope: !3912, file: !3835, line: 918, column: 9)
!3921 = !DILocation(line: 913, column: 25, scope: !3912)
!3922 = !DILocation(line: 913, column: 39, scope: !3912)
!3923 = !DILocalVariable(name: "src", scope: !3924, file: !3835, line: 919, type: !9, align: 8)
!3924 = !DILexicalBlockFile(scope: !3925, file: !3835, discriminator: 0)
!3925 = distinct !DISubprogram(name: "write<usize>", linkageName: "_ZN4core3ptr5write17h500b3116a6badbecE", scope: !53, file: !959, line: 1296, type: !3926, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !3929)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{null, !3928, !9}
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3929 = !{!3930, !3923}
!3930 = !DILocalVariable(name: "dst", scope: !3924, file: !3835, line: 919, type: !3928, align: 8)
!3931 = !DILocation(line: 919, column: 9, scope: !3924, inlinedAt: !3932)
!3932 = !DILocation(line: 919, column: 9, scope: !3920)
!3933 = !DILocalVariable(name: "tmp", scope: !3934, file: !3835, line: 918, type: !3943, align: 8)
!3934 = !DILexicalBlockFile(scope: !3935, file: !3835, discriminator: 0)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !959, line: 1107, column: 5)
!3936 = distinct !DISubprogram(name: "read<usize>", linkageName: "_ZN4core3ptr4read17h74bb3591f58e14d7E", scope: !53, file: !959, line: 1099, type: !3937, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !3940)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{!9, !3939}
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3940 = !{!3941, !3933}
!3941 = !DILocalVariable(name: "src", scope: !3942, file: !3835, line: 918, type: !3939, align: 8)
!3942 = !DILexicalBlockFile(scope: !3936, file: !3835, discriminator: 0)
!3943 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !3276, file: !2, size: 64, align: 64, elements: !3944, templateParams: !223, identifier: "d5eca075936c223cc2b20ecedd1e4e46")
!3944 = !{!3945, !3946}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3943, file: !2, baseType: !7, align: 8)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3943, file: !2, baseType: !3947, size: 64, align: 64)
!3947 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !3142, file: !2, size: 64, align: 64, elements: !3948, templateParams: !223, identifier: "446cb116741bbe0e5138064f6b058dad")
!3948 = !{!3949}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3947, file: !2, baseType: !9, size: 64, align: 64)
!3950 = !DILocation(line: 918, column: 22, scope: !3934, inlinedAt: !3951)
!3951 = !DILocation(line: 918, column: 22, scope: !3912)
!3952 = !DILocation(line: 918, column: 32, scope: !3912)
!3953 = !DILocation(line: 918, column: 22, scope: !3942, inlinedAt: !3951)
!3954 = !DILocation(line: 918, column: 22, scope: !3955, inlinedAt: !3959)
!3955 = !DILexicalBlockFile(scope: !3956, file: !3835, discriminator: 0)
!3956 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h2a035b1ea20f60dbE", scope: !3943, file: !3293, line: 320, type: !3957, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !28)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!3943}
!3959 = !DILocation(line: 1107, column: 19, scope: !3936, inlinedAt: !3951)
!3960 = !DILocalVariable(name: "self", scope: !3961, file: !3835, line: 918, type: !3965, align: 8)
!3961 = !DILexicalBlockFile(scope: !3962, file: !3835, discriminator: 0)
!3962 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h3b60ecfbb28f4683E", scope: !3943, file: !3293, line: 574, type: !3963, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !3966)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!3928, !3965}
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !3943, size: 64, align: 64, dwarfAddressSpace: 0)
!3966 = !{!3960}
!3967 = !DILocation(line: 918, column: 22, scope: !3961, inlinedAt: !3968)
!3968 = !DILocation(line: 1115, column: 34, scope: !3935, inlinedAt: !3951)
!3969 = !DILocalVariable(name: "self", scope: !3970, file: !3835, line: 918, type: !3943, align: 8)
!3970 = !DILexicalBlockFile(scope: !3971, file: !3835, discriminator: 0)
!3971 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h9fea5e0ae3a51903E", scope: !3943, file: !3293, line: 629, type: !3972, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !3974)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{!9, !3943, !1109}
!3974 = !{!3969}
!3975 = !DILocation(line: 918, column: 22, scope: !3970, inlinedAt: !3976)
!3976 = !DILocation(line: 1116, column: 9, scope: !3935, inlinedAt: !3951)
!3977 = !DILocalVariable(name: "slot", scope: !3978, file: !3835, line: 918, type: !3947, align: 8)
!3978 = !DILexicalBlockFile(scope: !3979, file: !3835, discriminator: 0)
!3979 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h570b0f3aac572679E", scope: !3947, file: !3165, line: 88, type: !3980, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !3982)
!3980 = !DISubroutineType(types: !3981)
!3981 = !{!9, !3947}
!3982 = !{!3977}
!3983 = !DILocation(line: 918, column: 22, scope: !3978, inlinedAt: !3984)
!3984 = !DILocation(line: 634, column: 13, scope: !3971, inlinedAt: !3976)
!3985 = !DILocation(line: 918, column: 13, scope: !3920)
!3986 = !DILocation(line: 919, column: 20, scope: !3920)
!3987 = !DILocation(line: 919, column: 26, scope: !3920)
!3988 = !DILocation(line: 922, column: 2, scope: !3912)
!3989 = !DILocation(line: 922, column: 1, scope: !3912)
!3990 = !DILocation(line: 913, column: 1, scope: !3912)
!3991 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17hef81380ba2856b32E", scope: !1328, file: !1327, line: 438, type: !3992, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !3994)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!1740, !9, !9}
!3994 = !{!3995, !3996, !3997, !3999}
!3995 = !DILocalVariable(name: "self", arg: 1, scope: !3991, file: !1327, line: 438, type: !9)
!3996 = !DILocalVariable(name: "rhs", arg: 2, scope: !3991, file: !1327, line: 438, type: !9)
!3997 = !DILocalVariable(name: "a", scope: !3998, file: !1327, line: 439, type: !9, align: 8)
!3998 = distinct !DILexicalBlock(scope: !3991, file: !1327, line: 439, column: 13)
!3999 = !DILocalVariable(name: "b", scope: !3998, file: !1327, line: 439, type: !1244, align: 1)
!4000 = !DILocation(line: 438, column: 34, scope: !3991)
!4001 = !DILocation(line: 438, column: 40, scope: !3991)
!4002 = !DILocation(line: 439, column: 26, scope: !3991)
!4003 = !DILocalVariable(name: "self", scope: !4004, file: !1327, line: 439, type: !9, align: 8)
!4004 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17he3f36ecce9400a82E", scope: !1328, file: !1327, line: 1506, type: !4005, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4011)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!4007, !9, !9}
!4007 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !4008, templateParams: !28, identifier: "23309350ccb628a7900e37caa17b1249")
!4008 = !{!4009, !4010}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4007, file: !2, baseType: !9, size: 64, align: 64)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4007, file: !2, baseType: !1244, size: 8, align: 8, offset: 64)
!4011 = !{!4003, !4012, !4013, !4015}
!4012 = !DILocalVariable(name: "rhs", scope: !4004, file: !1327, line: 439, type: !9, align: 8)
!4013 = !DILocalVariable(name: "a", scope: !4014, file: !1327, line: 439, type: !160, align: 8)
!4014 = distinct !DILexicalBlock(scope: !4004, file: !1327, line: 1507, column: 13)
!4015 = !DILocalVariable(name: "b", scope: !4014, file: !1327, line: 439, type: !1244, align: 1)
!4016 = !DILocation(line: 439, column: 26, scope: !4004, inlinedAt: !4002)
!4017 = !DILocation(line: 439, column: 47, scope: !3991)
!4018 = !DILocation(line: 439, column: 26, scope: !4014, inlinedAt: !4002)
!4019 = !DILocation(line: 439, column: 18, scope: !3991)
!4020 = !DILocation(line: 439, column: 18, scope: !3998)
!4021 = !DILocation(line: 439, column: 21, scope: !3991)
!4022 = !DILocation(line: 439, column: 21, scope: !3998)
!4023 = !DILocation(line: 440, column: 16, scope: !3998)
!4024 = !DILocation(line: 440, column: 42, scope: !3998)
!4025 = !DILocation(line: 440, column: 13, scope: !3998)
!4026 = !DILocation(line: 440, column: 30, scope: !3998)
!4027 = !DILocation(line: 441, column: 10, scope: !3991)
!4028 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h46bb431c73bc0d4cE", scope: !1328, file: !1327, line: 555, type: !3992, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4029)
!4029 = !{!4030, !4031, !4032, !4034}
!4030 = !DILocalVariable(name: "self", arg: 1, scope: !4028, file: !1327, line: 555, type: !9)
!4031 = !DILocalVariable(name: "rhs", arg: 2, scope: !4028, file: !1327, line: 555, type: !9)
!4032 = !DILocalVariable(name: "a", scope: !4033, file: !1327, line: 556, type: !9, align: 8)
!4033 = distinct !DILexicalBlock(scope: !4028, file: !1327, line: 556, column: 13)
!4034 = !DILocalVariable(name: "b", scope: !4033, file: !1327, line: 556, type: !1244, align: 1)
!4035 = !DILocation(line: 555, column: 34, scope: !4028)
!4036 = !DILocation(line: 555, column: 40, scope: !4028)
!4037 = !DILocation(line: 556, column: 26, scope: !4028)
!4038 = !DILocalVariable(name: "self", scope: !4039, file: !1327, line: 556, type: !9, align: 8)
!4039 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hce0beb250bffdecdE", scope: !1328, file: !1327, line: 1688, type: !4005, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4040)
!4040 = !{!4038, !4041, !4042, !4044}
!4041 = !DILocalVariable(name: "rhs", scope: !4039, file: !1327, line: 556, type: !9, align: 8)
!4042 = !DILocalVariable(name: "a", scope: !4043, file: !1327, line: 556, type: !160, align: 8)
!4043 = distinct !DILexicalBlock(scope: !4039, file: !1327, line: 1689, column: 13)
!4044 = !DILocalVariable(name: "b", scope: !4043, file: !1327, line: 556, type: !1244, align: 1)
!4045 = !DILocation(line: 556, column: 26, scope: !4039, inlinedAt: !4037)
!4046 = !DILocation(line: 556, column: 47, scope: !4028)
!4047 = !DILocation(line: 556, column: 26, scope: !4043, inlinedAt: !4037)
!4048 = !DILocation(line: 556, column: 18, scope: !4028)
!4049 = !DILocation(line: 556, column: 18, scope: !4033)
!4050 = !DILocation(line: 556, column: 21, scope: !4028)
!4051 = !DILocation(line: 556, column: 21, scope: !4033)
!4052 = !DILocation(line: 557, column: 16, scope: !4033)
!4053 = !DILocation(line: 557, column: 42, scope: !4033)
!4054 = !DILocation(line: 557, column: 13, scope: !4033)
!4055 = !DILocation(line: 557, column: 30, scope: !4033)
!4056 = !DILocation(line: 558, column: 10, scope: !4028)
!4057 = distinct !DISubprogram(name: "call_once<(&str), core::str::LinesAnyMap>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h364ab54f0e25d23aE", scope: !4059, file: !4058, line: 300, type: !4062, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4071, retainedNodes: !4065)
!4058 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "3100065230267ed2a3b8753c70d752a6")
!4059 = !DINamespace(name: "{impl#4}", scope: !4060)
!4060 = !DINamespace(name: "impls", scope: !4061)
!4061 = !DINamespace(name: "function", scope: !901)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!145, !4064, !145}
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::LinesAnyMap", baseType: !1249, size: 64, align: 64, dwarfAddressSpace: 0)
!4065 = !{!4066, !4067}
!4066 = !DILocalVariable(name: "self", arg: 1, scope: !4057, file: !4058, line: 300, type: !4064)
!4067 = !DILocalVariable(name: "args", arg: 2, scope: !4057, file: !4058, line: 300, type: !4068)
!4068 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&str)", file: !2, size: 128, align: 64, elements: !4069, templateParams: !28, identifier: "e1090039062c1871dd001bf2d88c0044")
!4069 = !{!4070}
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4068, file: !2, baseType: !145, size: 128, align: 64)
!4071 = !{!4072, !1252}
!4072 = !DITemplateTypeParameter(name: "A", type: !4068)
!4073 = !DILocation(line: 300, column: 41, scope: !4057)
!4074 = !DILocation(line: 300, column: 47, scope: !4057)
!4075 = !DILocation(line: 301, column: 30, scope: !4057)
!4076 = !DILocation(line: 301, column: 13, scope: !4057)
!4077 = !DILocation(line: 302, column: 10, scope: !4057)
!4078 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h042ae277a417f464E", scope: !4079, file: !4058, line: 248, type: !4080, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4086, retainedNodes: !4083)
!4079 = !DINamespace(name: "FnOnce", scope: !4061)
!4080 = !DISubroutineType(types: !4081)
!4081 = !{!70, !4082}
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::rt::lang_start::{closure_env#0}<()>", baseType: !173, size: 64, align: 64, dwarfAddressSpace: 0)
!4083 = !{!4084, !4085}
!4084 = !DILocalVariable(arg: 1, scope: !4078, file: !4058, line: 248, type: !4082)
!4085 = !DILocalVariable(arg: 2, scope: !4078, file: !4058, line: 248, type: !7)
!4086 = !{!4087, !4088}
!4087 = !DITemplateTypeParameter(name: "Self", type: !173)
!4088 = !DITemplateTypeParameter(name: "Args", type: !7)
!4089 = !DILocation(line: 248, column: 5, scope: !4078)
!4090 = distinct !DISubprogram(name: "call_once<std::thread::{impl#0}::spawn_unchecked_::{closure_env#1}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17ha10b08c66f375c68E", scope: !4079, file: !4058, line: 248, type: !4091, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4097, retainedNodes: !4094)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{null, !4093}
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::thread::{impl#0}::spawn_unchecked_::{closure_env#1}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", baseType: !189, size: 64, align: 64, dwarfAddressSpace: 0)
!4094 = !{!4095, !4096}
!4095 = !DILocalVariable(arg: 1, scope: !4090, file: !4058, line: 248, type: !4093)
!4096 = !DILocalVariable(arg: 2, scope: !4090, file: !4058, line: 248, type: !7)
!4097 = !{!4098, !4088}
!4098 = !DITemplateTypeParameter(name: "Self", type: !189)
!4099 = !DILocation(line: 248, column: 5, scope: !4090)
!4100 = distinct !DISubprogram(name: "call_once<statics_tests::test_sections::test_sectioned_statics::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h1cd12005797dbabbE", scope: !4079, file: !4058, line: 248, type: !4101, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4109, retainedNodes: !4106)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{null, !4103}
!4103 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !4104, file: !2, align: 8, elements: !28, identifier: "69d3e7c59572b239a76ee105cedb6af0")
!4104 = !DINamespace(name: "test_sectioned_statics", scope: !4105)
!4105 = !DINamespace(name: "test_sections", scope: !380)
!4106 = !{!4107, !4108}
!4107 = !DILocalVariable(arg: 1, scope: !4100, file: !4058, line: 248, type: !4103)
!4108 = !DILocalVariable(arg: 2, scope: !4100, file: !4058, line: 248, type: !7)
!4109 = !{!4110, !4088}
!4110 = !DITemplateTypeParameter(name: "Self", type: !4103)
!4111 = !DILocation(line: 248, column: 5, scope: !4100)
!4112 = distinct !DISubprogram(name: "call_once<std::thread::{impl#6}::drop::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h6e3cb6373f53440dE", scope: !4079, file: !4058, line: 248, type: !4113, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4118, retainedNodes: !4115)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{null, !1373}
!4115 = !{!4116, !4117}
!4116 = !DILocalVariable(arg: 1, scope: !4112, file: !4058, line: 248, type: !1373)
!4117 = !DILocalVariable(arg: 2, scope: !4112, file: !4058, line: 248, type: !7)
!4118 = !{!4119, !4088}
!4119 = !DITemplateTypeParameter(name: "Self", type: !1373)
!4120 = !DILocation(line: 248, column: 5, scope: !4112)
!4121 = distinct !DISubprogram(name: "call_once<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h76db4904c424c19eE", scope: !4079, file: !4058, line: 248, type: !4122, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4128, retainedNodes: !4125)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{null, !4124}
!4124 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !378, file: !2, align: 8, elements: !28, identifier: "43159020c597cba367f6b3de74212fc")
!4125 = !{!4126, !4127}
!4126 = !DILocalVariable(arg: 1, scope: !4121, file: !4058, line: 248, type: !4124)
!4127 = !DILocalVariable(arg: 2, scope: !4121, file: !4058, line: 248, type: !7)
!4128 = !{!4129, !4088}
!4129 = !DITemplateTypeParameter(name: "Self", type: !4124)
!4130 = !DILocation(line: 248, column: 5, scope: !4121)
!4131 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h79ef125d51d73356E", scope: !4079, file: !4058, line: 248, type: !4132, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4086, retainedNodes: !4134)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{!70, !173}
!4134 = !{!4135, !4136}
!4135 = !DILocalVariable(arg: 1, scope: !4131, file: !4058, line: 248, type: !173)
!4136 = !DILocalVariable(arg: 2, scope: !4131, file: !4058, line: 248, type: !7)
!4137 = !DILocation(line: 248, column: 5, scope: !4131)
!4138 = distinct !DISubprogram(name: "call_once<fn(), ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h927891fa9cfdefd4E", scope: !4079, file: !4058, line: 248, type: !1509, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4142, retainedNodes: !4139)
!4139 = !{!4140, !4141}
!4140 = !DILocalVariable(arg: 1, scope: !4138, file: !4058, line: 248, type: !178)
!4141 = !DILocalVariable(arg: 2, scope: !4138, file: !4058, line: 248, type: !7)
!4142 = !{!4143, !4088}
!4143 = !DITemplateTypeParameter(name: "Self", type: !178)
!4144 = !DILocation(line: 248, column: 5, scope: !4138)
!4145 = distinct !DISubprogram(name: "call_once<statics_tests::test_storage::test_buffer::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17ha38857fdf9210d78E", scope: !4079, file: !4058, line: 248, type: !4146, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4154, retainedNodes: !4151)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{null, !4148}
!4148 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !4149, file: !2, align: 8, elements: !28, identifier: "2eaff083cb6fb7c16ab990268b890016")
!4149 = !DINamespace(name: "test_buffer", scope: !4150)
!4150 = !DINamespace(name: "test_storage", scope: !380)
!4151 = !{!4152, !4153}
!4152 = !DILocalVariable(arg: 1, scope: !4145, file: !4058, line: 248, type: !4148)
!4153 = !DILocalVariable(arg: 2, scope: !4145, file: !4058, line: 248, type: !7)
!4154 = !{!4155, !4088}
!4155 = !DITemplateTypeParameter(name: "Self", type: !4148)
!4156 = !DILocation(line: 248, column: 5, scope: !4145)
!4157 = distinct !DISubprogram(name: "call_once<statics_tests::test_sections::test_sectioned_used_static::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hb7ff2ba48361f4faE", scope: !4079, file: !4058, line: 248, type: !4158, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4165, retainedNodes: !4162)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{null, !4160}
!4160 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !4161, file: !2, align: 8, elements: !28, identifier: "c6db4bd3b4f1452048e76f1fa4093f6d")
!4161 = !DINamespace(name: "test_sectioned_used_static", scope: !4105)
!4162 = !{!4163, !4164}
!4163 = !DILocalVariable(arg: 1, scope: !4157, file: !4058, line: 248, type: !4160)
!4164 = !DILocalVariable(arg: 2, scope: !4157, file: !4058, line: 248, type: !7)
!4165 = !{!4166, !4088}
!4166 = !DITemplateTypeParameter(name: "Self", type: !4160)
!4167 = !DILocation(line: 248, column: 5, scope: !4157)
!4168 = distinct !DISubprogram(name: "call_once<fn() -> usize, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hee10dcbdde35a177E", scope: !4079, file: !4058, line: 248, type: !4169, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4174, retainedNodes: !4171)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!9, !2773}
!4171 = !{!4172, !4173}
!4172 = !DILocalVariable(arg: 1, scope: !4168, file: !4058, line: 248, type: !2773)
!4173 = !DILocalVariable(arg: 2, scope: !4168, file: !4058, line: 248, type: !7)
!4174 = !{!4175, !4088}
!4175 = !DITemplateTypeParameter(name: "Self", type: !2773)
!4176 = !DILocation(line: 248, column: 5, scope: !4168)
!4177 = distinct !DISubprogram(name: "drop_in_place<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr101drop_in_place$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$17h503eb33f74c58727E", scope: !53, file: !959, line: 487, type: !4178, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !293, retainedNodes: !4181)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{null, !4180}
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", baseType: !295, size: 64, align: 64, dwarfAddressSpace: 0)
!4181 = !{!4182}
!4182 = !DILocalVariable(arg: 1, scope: !4177, file: !959, line: 487, type: !4180)
!4183 = !DILocation(line: 487, column: 1, scope: !4177)
!4184 = distinct !DISubprogram(name: "drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17h3ea16d77aacac4f1E", scope: !53, file: !959, line: 487, type: !4185, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !60, retainedNodes: !4188)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{null, !4187}
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", baseType: !62, size: 64, align: 64, dwarfAddressSpace: 0)
!4188 = !{!4189}
!4189 = !DILocalVariable(arg: 1, scope: !4184, file: !959, line: 487, type: !4187)
!4190 = !DILocation(line: 487, column: 1, scope: !4184)
!4191 = distinct !DISubprogram(name: "drop_in_place<alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr102drop_in_place$LT$alloc..sync..Weak$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$17h40aacf4efd7e3b7eE", scope: !53, file: !959, line: 487, type: !4192, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4200, retainedNodes: !4198)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{null, !4194}
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", baseType: !4195, size: 64, align: 64, dwarfAddressSpace: 0)
!4195 = !DICompositeType(tag: DW_TAG_structure_type, name: "Weak<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", scope: !203, file: !2, size: 64, align: 64, elements: !4196, templateParams: !365, identifier: "3d2dda74c25a8c1a125c84a102c48a50")
!4196 = !{!4197}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4195, file: !2, baseType: !298, size: 64, align: 64)
!4198 = !{!4199}
!4199 = !DILocalVariable(arg: 1, scope: !4191, file: !959, line: 487, type: !4194)
!4200 = !{!4201}
!4201 = !DITemplateTypeParameter(name: "T", type: !4195)
!4202 = !DILocation(line: 487, column: 1, scope: !4191)
!4203 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::sync::Arc<std::thread::scoped::ScopeData>>>", linkageName: "_ZN4core3ptr103drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..thread..scoped..ScopeData$GT$$GT$$GT$17hbfb71188870deae6E", scope: !53, file: !959, line: 487, type: !4204, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4209, retainedNodes: !4207)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{null, !4206}
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::sync::Arc<std::thread::scoped::ScopeData>>", baseType: !397, size: 64, align: 64, dwarfAddressSpace: 0)
!4207 = !{!4208}
!4208 = !DILocalVariable(arg: 1, scope: !4203, file: !959, line: 487, type: !4206)
!4209 = !{!4210}
!4210 = !DITemplateTypeParameter(name: "T", type: !397)
!4211 = !DILocation(line: 487, column: 1, scope: !4203)
!4212 = distinct !DISubprogram(name: "drop_in_place<&mut std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>", linkageName: "_ZN4core3ptr104drop_in_place$LT$$RF$mut$u20$std..io..Write..write_fmt..Adapter$LT$std..sys..unix..stdio..Stderr$GT$$GT$17hb013d39e8cf08beeE", scope: !53, file: !959, line: 487, type: !4213, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4218, retainedNodes: !4216)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{null, !4215}
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &mut std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>", baseType: !508, size: 64, align: 64, dwarfAddressSpace: 0)
!4216 = !{!4217}
!4217 = !DILocalVariable(arg: 1, scope: !4212, file: !959, line: 487, type: !4215)
!4218 = !{!4219}
!4219 = !DITemplateTypeParameter(name: "T", type: !508)
!4220 = !DILocation(line: 487, column: 1, scope: !4212)
!4221 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h648121baf6eb2b6cE", scope: !53, file: !959, line: 487, type: !4222, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4227, retainedNodes: !4225)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{null, !4224}
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", baseType: !122, size: 64, align: 64, dwarfAddressSpace: 0)
!4225 = !{!4226}
!4226 = !DILocalVariable(arg: 1, scope: !4221, file: !959, line: 487, type: !4224)
!4227 = !{!4228}
!4228 = !DITemplateTypeParameter(name: "T", type: !122)
!4229 = !DILocation(line: 487, column: 1, scope: !4221)
!4230 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>>", linkageName: "_ZN4core3ptr129drop_in_place$LT$core..option..Option$LT$alloc..sync..Arc$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$$GT$$GT$17hfb9eaa80c8c143b3E", scope: !53, file: !959, line: 487, type: !4231, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4236, retainedNodes: !4234)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{null, !4233}
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", baseType: !287, size: 64, align: 64, dwarfAddressSpace: 0)
!4234 = !{!4235}
!4235 = !DILocalVariable(arg: 1, scope: !4230, file: !959, line: 487, type: !4233)
!4236 = !{!4237}
!4237 = !DITemplateTypeParameter(name: "T", type: !287)
!4238 = !DILocation(line: 487, column: 1, scope: !4230)
!4239 = distinct !DISubprogram(name: "drop_in_place<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr130drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$17ha5dc4a097ef368c1E", scope: !53, file: !959, line: 487, type: !4240, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !444, retainedNodes: !4243)
!4240 = !DISubroutineType(types: !4241)
!4241 = !{null, !4242}
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", baseType: !446, size: 64, align: 64, dwarfAddressSpace: 0)
!4243 = !{!4244}
!4244 = !DILocalVariable(arg: 1, scope: !4239, file: !959, line: 487, type: !4242)
!4245 = !DILocation(line: 487, column: 1, scope: !4239)
!4246 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr158drop_in_place$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$17hec04110808742394E", scope: !53, file: !959, line: 487, type: !4247, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !4249)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{null, !3094}
!4249 = !{!4250}
!4250 = !DILocalVariable(arg: 1, scope: !4246, file: !959, line: 487, type: !3094)
!4251 = !DILocation(line: 487, column: 1, scope: !4246)
!4252 = distinct !DISubprogram(name: "drop_in_place<core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>>", linkageName: "_ZN4core3ptr188drop_in_place$LT$core..cell..UnsafeCell$LT$core..option..Option$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$$GT$$GT$17hc78d76de909ca9f3E", scope: !53, file: !959, line: 487, type: !4253, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4258, retainedNodes: !4256)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{null, !4255}
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::cell::UnsafeCell<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", baseType: !435, size: 64, align: 64, dwarfAddressSpace: 0)
!4256 = !{!4257}
!4257 = !DILocalVariable(arg: 1, scope: !4252, file: !959, line: 487, type: !4255)
!4258 = !{!4259}
!4259 = !DITemplateTypeParameter(name: "T", type: !435)
!4260 = !DILocation(line: 487, column: 1, scope: !4252)
!4261 = distinct !DISubprogram(name: "drop_in_place<std::thread::{impl#0}::spawn_unchecked_::{closure_env#1}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>", linkageName: "_ZN4core3ptr189drop_in_place$LT$std..thread..Builder..spawn_unchecked_$LT$statics_tests..test_thread_locals..test_thread_locals..$u7b$$u7b$closure$u7d$$u7d$$C$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h9da1102cf83aa5bfE", scope: !53, file: !959, line: 487, type: !4091, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2853, retainedNodes: !4262)
!4262 = !{!4263}
!4263 = !DILocalVariable(arg: 1, scope: !4261, file: !959, line: 487, type: !4093)
!4264 = !DILocation(line: 487, column: 1, scope: !4261)
!4265 = distinct !DISubprogram(name: "drop_in_place<&f32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$f32$GT$17hbab995f8061b2f16E", scope: !53, file: !959, line: 487, type: !4266, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4271, retainedNodes: !4269)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{null, !4268}
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &f32", baseType: !554, size: 64, align: 64, dwarfAddressSpace: 0)
!4269 = !{!4270}
!4270 = !DILocalVariable(arg: 1, scope: !4265, file: !959, line: 487, type: !4268)
!4271 = !{!4272}
!4272 = !DITemplateTypeParameter(name: "T", type: !554)
!4273 = !DILocation(line: 487, column: 1, scope: !4265)
!4274 = distinct !DISubprogram(name: "drop_in_place<&i32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h7747b4580dc61fe5E", scope: !53, file: !959, line: 487, type: !4275, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3588, retainedNodes: !4278)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{null, !4277}
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &i32", baseType: !517, size: 64, align: 64, dwarfAddressSpace: 0)
!4278 = !{!4279}
!4279 = !DILocalVariable(arg: 1, scope: !4274, file: !959, line: 487, type: !4277)
!4280 = !DILocation(line: 487, column: 1, scope: !4274)
!4281 = distinct !DISubprogram(name: "drop_in_place<&u32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u32$GT$17h3e7df7f56c928aaaE", scope: !53, file: !959, line: 487, type: !4282, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4287, retainedNodes: !4285)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{null, !4284}
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u32", baseType: !576, size: 64, align: 64, dwarfAddressSpace: 0)
!4285 = !{!4286}
!4286 = !DILocalVariable(arg: 1, scope: !4281, file: !959, line: 487, type: !4284)
!4287 = !{!4288}
!4288 = !DITemplateTypeParameter(name: "T", type: !576)
!4289 = !DILocation(line: 487, column: 1, scope: !4281)
!4290 = distinct !DISubprogram(name: "drop_in_place<std::thread::Inner>", linkageName: "_ZN4core3ptr39drop_in_place$LT$std..thread..Inner$GT$17h7658d240831fd067E", scope: !53, file: !959, line: 487, type: !4291, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !4294)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{null, !4293}
!4293 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::thread::Inner", baseType: !227, size: 64, align: 64, dwarfAddressSpace: 0)
!4294 = !{!4295}
!4295 = !DILocalVariable(arg: 1, scope: !4290, file: !959, line: 487, type: !4293)
!4296 = !DILocation(line: 487, column: 1, scope: !4290)
!4297 = distinct !DISubprogram(name: "drop_in_place<std::thread::Thread>", linkageName: "_ZN4core3ptr40drop_in_place$LT$std..thread..Thread$GT$17hcdbd1ced91711365E", scope: !53, file: !959, line: 487, type: !4298, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4303, retainedNodes: !4301)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{null, !4300}
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::thread::Thread", baseType: !195, size: 64, align: 64, dwarfAddressSpace: 0)
!4301 = !{!4302}
!4302 = !DILocalVariable(arg: 1, scope: !4297, file: !959, line: 487, type: !4300)
!4303 = !{!4304}
!4304 = !DITemplateTypeParameter(name: "T", type: !195)
!4305 = !DILocation(line: 487, column: 1, scope: !4297)
!4306 = distinct !DISubprogram(name: "drop_in_place<alloc::string::String>", linkageName: "_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h51ef8ea552bdd591E", scope: !53, file: !959, line: 487, type: !4307, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2603, retainedNodes: !4310)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{null, !4309}
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::String", baseType: !2605, size: 64, align: 64, dwarfAddressSpace: 0)
!4310 = !{!4311}
!4311 = !DILocalVariable(arg: 1, scope: !4306, file: !959, line: 487, type: !4309)
!4312 = !DILocation(line: 487, column: 1, scope: !4306)
!4313 = distinct !DISubprogram(name: "drop_in_place<std::io::error::Error>", linkageName: "_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h95925069f7247ee8E", scope: !53, file: !959, line: 487, type: !4314, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4319, retainedNodes: !4317)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{null, !4316}
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::Error", baseType: !43, size: 64, align: 64, dwarfAddressSpace: 0)
!4317 = !{!4318}
!4318 = !DILocalVariable(arg: 1, scope: !4313, file: !959, line: 487, type: !4316)
!4319 = !{!4320}
!4320 = !DITemplateTypeParameter(name: "T", type: !43)
!4321 = !DILocation(line: 487, column: 1, scope: !4313)
!4322 = distinct !DISubprogram(name: "drop_in_place<std::io::error::Custom>", linkageName: "_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h646f367055c54bd9E", scope: !53, file: !959, line: 487, type: !4323, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !4325)
!4323 = !DISubroutineType(types: !4324)
!4324 = !{null, !1838}
!4325 = !{!4326}
!4326 = !DILocalVariable(arg: 1, scope: !4322, file: !959, line: 487, type: !1838)
!4327 = !{!4328}
!4328 = !DITemplateTypeParameter(name: "T", type: !74)
!4329 = !DILocation(line: 487, column: 1, scope: !4322)
!4330 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17hbabdf85196cda4deE", scope: !53, file: !959, line: 487, type: !4331, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !363, retainedNodes: !4334)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{null, !4333}
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !338, size: 64, align: 64, dwarfAddressSpace: 0)
!4334 = !{!4335}
!4335 = !DILocalVariable(arg: 1, scope: !4330, file: !959, line: 487, type: !4333)
!4336 = !DILocation(line: 487, column: 1, scope: !4330)
!4337 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17haac439215efbdba1E", scope: !53, file: !959, line: 487, type: !4338, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !237, retainedNodes: !4341)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{null, !4340}
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::CString", baseType: !239, size: 64, align: 64, dwarfAddressSpace: 0)
!4341 = !{!4342}
!4342 = !DILocalVariable(arg: 1, scope: !4337, file: !959, line: 487, type: !4340)
!4343 = !DILocation(line: 487, column: 1, scope: !4337)
!4344 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::NulError>", linkageName: "_ZN4core3ptr48drop_in_place$LT$alloc..ffi..c_str..NulError$GT$17h7d207ed4df96150bE", scope: !53, file: !959, line: 487, type: !4345, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4350, retainedNodes: !4348)
!4345 = !DISubroutineType(types: !4346)
!4346 = !{null, !4347}
!4347 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::NulError", baseType: !534, size: 64, align: 64, dwarfAddressSpace: 0)
!4348 = !{!4349}
!4349 = !DILocalVariable(arg: 1, scope: !4344, file: !959, line: 487, type: !4347)
!4350 = !{!4351}
!4351 = !DITemplateTypeParameter(name: "T", type: !534)
!4352 = !DILocation(line: 487, column: 1, scope: !4344)
!4353 = distinct !DISubprogram(name: "drop_in_place<&[i32; 11]>", linkageName: "_ZN4core3ptr50drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$11$u5d$$GT$17hafe119a0b0b27325E", scope: !53, file: !959, line: 487, type: !4354, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4359, retainedNodes: !4357)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{null, !4356}
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &[i32; 11]", baseType: !564, size: 64, align: 64, dwarfAddressSpace: 0)
!4357 = !{!4358}
!4358 = !DILocalVariable(arg: 1, scope: !4353, file: !959, line: 487, type: !4356)
!4359 = !{!4360}
!4360 = !DITemplateTypeParameter(name: "T", type: !564)
!4361 = !DILocation(line: 487, column: 1, scope: !4353)
!4362 = distinct !DISubprogram(name: "drop_in_place<&[i32; 16]>", linkageName: "_ZN4core3ptr50drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$16$u5d$$GT$17h96a7017c5f71b0d5E", scope: !53, file: !959, line: 487, type: !4363, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4368, retainedNodes: !4366)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{null, !4365}
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &[i32; 16]", baseType: !585, size: 64, align: 64, dwarfAddressSpace: 0)
!4366 = !{!4367}
!4367 = !DILocalVariable(arg: 1, scope: !4362, file: !959, line: 487, type: !4365)
!4368 = !{!4369}
!4369 = !DITemplateTypeParameter(name: "T", type: !585)
!4370 = !DILocation(line: 487, column: 1, scope: !4362)
!4371 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<&str, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h93841d326ca7621aE", scope: !53, file: !959, line: 487, type: !4372, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4377, retainedNodes: !4375)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{null, !4374}
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<&str, alloc::alloc::Global>", baseType: !1190, size: 64, align: 64, dwarfAddressSpace: 0)
!4375 = !{!4376}
!4376 = !DILocalVariable(arg: 1, scope: !4371, file: !959, line: 487, type: !4374)
!4377 = !{!4378}
!4378 = !DITemplateTypeParameter(name: "T", type: !1190)
!4379 = !DILocation(line: 487, column: 1, scope: !4371)
!4380 = distinct !DISubprogram(name: "drop_in_place<std::thread::scoped::ScopeData>", linkageName: "_ZN4core3ptr51drop_in_place$LT$std..thread..scoped..ScopeData$GT$17h26f8f5924a34f6feE", scope: !53, file: !959, line: 487, type: !4381, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !4384)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{null, !4383}
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::thread::scoped::ScopeData", baseType: !417, size: 64, align: 64, dwarfAddressSpace: 0)
!4384 = !{!4385}
!4385 = !DILocalVariable(arg: 1, scope: !4380, file: !959, line: 487, type: !4383)
!4386 = !DILocation(line: 487, column: 1, scope: !4380)
!4387 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hb8150e1137fc4c65E", scope: !53, file: !959, line: 487, type: !4388, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4393, retainedNodes: !4391)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{null, !4390}
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !342, size: 64, align: 64, dwarfAddressSpace: 0)
!4391 = !{!4392}
!4392 = !DILocalVariable(arg: 1, scope: !4387, file: !959, line: 487, type: !4390)
!4393 = !{!4394}
!4394 = !DITemplateTypeParameter(name: "T", type: !342)
!4395 = !DILocation(line: 487, column: 1, scope: !4387)
!4396 = distinct !DISubprogram(name: "drop_in_place<std::thread::Packet<()>>", linkageName: "_ZN4core3ptr56drop_in_place$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$17h3c8e128dc6e8014eE", scope: !53, file: !959, line: 487, type: !4397, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !4400)
!4397 = !DISubroutineType(types: !4398)
!4398 = !{null, !4399}
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::thread::Packet<()>", baseType: !394, size: 64, align: 64, dwarfAddressSpace: 0)
!4400 = !{!4401}
!4401 = !DILocalVariable(arg: 1, scope: !4396, file: !959, line: 487, type: !4399)
!4402 = !DILocation(line: 487, column: 1, scope: !4396)
!4403 = distinct !DISubprogram(name: "drop_in_place<std::io::error::repr_bitpacked::Repr>", linkageName: "_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17h445945d9cf05a5b5E", scope: !53, file: !959, line: 487, type: !4404, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4409, retainedNodes: !4407)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{null, !4406}
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::repr_bitpacked::Repr", baseType: !47, size: 64, align: 64, dwarfAddressSpace: 0)
!4407 = !{!4408}
!4408 = !DILocalVariable(arg: 1, scope: !4403, file: !959, line: 487, type: !4406)
!4409 = !{!4410}
!4410 = !DITemplateTypeParameter(name: "T", type: !47)
!4411 = !DILocation(line: 487, column: 1, scope: !4403)
!4412 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h2b0d866b28456dfcE", scope: !53, file: !959, line: 487, type: !4413, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4418, retainedNodes: !4416)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{null, !4415}
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !244, size: 64, align: 64, dwarfAddressSpace: 0)
!4416 = !{!4417}
!4417 = !DILocalVariable(arg: 1, scope: !4412, file: !959, line: 487, type: !4415)
!4418 = !{!4419}
!4419 = !DITemplateTypeParameter(name: "T", type: !244)
!4420 = !DILocation(line: 487, column: 1, scope: !4412)
!4421 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<&str, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h91748d5b3bafe347E", scope: !53, file: !959, line: 487, type: !4422, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4427, retainedNodes: !4425)
!4422 = !DISubroutineType(types: !4423)
!4423 = !{null, !4424}
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<&str, alloc::alloc::Global>", baseType: !1193, size: 64, align: 64, dwarfAddressSpace: 0)
!4425 = !{!4426}
!4426 = !DILocalVariable(arg: 1, scope: !4421, file: !959, line: 487, type: !4424)
!4427 = !{!4428}
!4428 = !DITemplateTypeParameter(name: "T", type: !1193)
!4429 = !DILocation(line: 487, column: 1, scope: !4421)
!4430 = distinct !DISubprogram(name: "drop_in_place<alloc::sync::Arc<std::thread::Inner>>", linkageName: "_ZN4core3ptr63drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Inner$GT$$GT$17h5eef1ee04e5a2846E", scope: !53, file: !959, line: 487, type: !4431, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4436, retainedNodes: !4434)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{null, !4433}
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::Arc<std::thread::Inner>", baseType: !202, size: 64, align: 64, dwarfAddressSpace: 0)
!4434 = !{!4435}
!4435 = !DILocalVariable(arg: 1, scope: !4430, file: !959, line: 487, type: !4433)
!4436 = !{!4437}
!4437 = !DITemplateTypeParameter(name: "T", type: !202)
!4438 = !DILocation(line: 487, column: 1, scope: !4430)
!4439 = distinct !DISubprogram(name: "drop_in_place<alloc::sync::Weak<std::thread::Inner>>", linkageName: "_ZN4core3ptr64drop_in_place$LT$alloc..sync..Weak$LT$std..thread..Inner$GT$$GT$17h9c237f6c4bc17438E", scope: !53, file: !959, line: 487, type: !4440, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4448, retainedNodes: !4446)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{null, !4442}
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::Weak<std::thread::Inner>", baseType: !4443, size: 64, align: 64, dwarfAddressSpace: 0)
!4443 = !DICompositeType(tag: DW_TAG_structure_type, name: "Weak<std::thread::Inner>", scope: !203, file: !2, size: 64, align: 64, elements: !4444, templateParams: !278, identifier: "2df9cd6f47299f346d53e0914e39f784")
!4444 = !{!4445}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4443, file: !2, baseType: !207, size: 64, align: 64)
!4446 = !{!4447}
!4447 = !DILocalVariable(arg: 1, scope: !4439, file: !959, line: 487, type: !4442)
!4448 = !{!4449}
!4449 = !DITemplateTypeParameter(name: "T", type: !4443)
!4450 = !DILocation(line: 487, column: 1, scope: !4439)
!4451 = distinct !DISubprogram(name: "drop_in_place<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17h0c36ec7cf8f2655bE", scope: !53, file: !959, line: 487, type: !4452, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4460, retainedNodes: !4458)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{null, !4454}
!4454 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut (dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !4455, templateParams: !28, identifier: "1a17a9ff407bf60ef76f10cb3f5d05bd")
!4455 = !{!4456, !4457}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4454, file: !2, baseType: !459, size: 64, align: 64)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4454, file: !2, baseType: !128, size: 64, align: 64, offset: 64)
!4458 = !{!4459}
!4459 = !DILocalVariable(arg: 1, scope: !4451, file: !959, line: 487, type: !4454)
!4460 = !{!4461}
!4461 = !DITemplateTypeParameter(name: "T", type: !460)
!4462 = !DILocation(line: 487, column: 1, scope: !4451)
!4463 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hd47ed77b6af049f5E", scope: !53, file: !959, line: 487, type: !4464, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4469, retainedNodes: !4467)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{null, !4466}
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>", baseType: !73, size: 64, align: 64, dwarfAddressSpace: 0)
!4467 = !{!4468}
!4468 = !DILocalVariable(arg: 1, scope: !4463, file: !959, line: 487, type: !4466)
!4469 = !{!4470}
!4470 = !DITemplateTypeParameter(name: "T", type: !73)
!4471 = !DILocation(line: 487, column: 1, scope: !4463)
!4472 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::string::String>>", linkageName: "_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h56656916cbe5ba34E", scope: !53, file: !959, line: 487, type: !4473, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4478, retainedNodes: !4476)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{null, !4475}
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::string::String>", baseType: !2597, size: 64, align: 64, dwarfAddressSpace: 0)
!4476 = !{!4477}
!4477 = !DILocalVariable(arg: 1, scope: !4472, file: !959, line: 487, type: !4475)
!4478 = !{!4479}
!4479 = !DITemplateTypeParameter(name: "T", type: !2597)
!4480 = !DILocation(line: 487, column: 1, scope: !4472)
!4481 = distinct !DISubprogram(name: "drop_in_place<alloc::sync::Arc<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr75drop_in_place$LT$alloc..sync..Arc$LT$std..thread..scoped..ScopeData$GT$$GT$17h9396d4991e98c8f7E", scope: !53, file: !959, line: 487, type: !4482, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !403, retainedNodes: !4485)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{null, !4484}
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::Arc<std::thread::scoped::ScopeData>", baseType: !405, size: 64, align: 64, dwarfAddressSpace: 0)
!4485 = !{!4486}
!4486 = !DILocalVariable(arg: 1, scope: !4481, file: !959, line: 487, type: !4484)
!4487 = !DILocation(line: 487, column: 1, scope: !4481)
!4488 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>", linkageName: "_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17h689b97fbeeaf5d5aE", scope: !53, file: !959, line: 487, type: !4489, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4494, retainedNodes: !4492)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{null, !4491}
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::ffi::c_str::CString>", baseType: !230, size: 64, align: 64, dwarfAddressSpace: 0)
!4492 = !{!4493}
!4493 = !DILocalVariable(arg: 1, scope: !4488, file: !959, line: 487, type: !4491)
!4494 = !{!4495}
!4495 = !DITemplateTypeParameter(name: "T", type: !230)
!4496 = !DILocation(line: 487, column: 1, scope: !4488)
!4497 = distinct !DISubprogram(name: "drop_in_place<alloc::sync::Weak<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr76drop_in_place$LT$alloc..sync..Weak$LT$std..thread..scoped..ScopeData$GT$$GT$17h8b96fa35114eb1c4E", scope: !53, file: !959, line: 487, type: !4498, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4506, retainedNodes: !4504)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{null, !4500}
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::Weak<std::thread::scoped::ScopeData>", baseType: !4501, size: 64, align: 64, dwarfAddressSpace: 0)
!4501 = !DICompositeType(tag: DW_TAG_structure_type, name: "Weak<std::thread::scoped::ScopeData>", scope: !203, file: !2, size: 64, align: 64, elements: !4502, templateParams: !423, identifier: "c6ac1aa1efe4e2d86c54a9f89db1f1a7")
!4502 = !{!4503}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4501, file: !2, baseType: !408, size: 64, align: 64)
!4504 = !{!4505}
!4505 = !DILocalVariable(arg: 1, scope: !4497, file: !959, line: 487, type: !4500)
!4506 = !{!4507}
!4507 = !DITemplateTypeParameter(name: "T", type: !4501)
!4508 = !DILocation(line: 487, column: 1, scope: !4497)
!4509 = distinct !DISubprogram(name: "drop_in_place<core::cell::UnsafeCell<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr76drop_in_place$LT$core..cell..UnsafeCell$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17h629af5f9a30b8379E", scope: !53, file: !959, line: 487, type: !4510, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4515, retainedNodes: !4513)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{null, !4512}
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::cell::UnsafeCell<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !335, size: 64, align: 64, dwarfAddressSpace: 0)
!4513 = !{!4514}
!4514 = !DILocalVariable(arg: 1, scope: !4509, file: !959, line: 487, type: !4512)
!4515 = !{!4516}
!4516 = !DITemplateTypeParameter(name: "T", type: !335)
!4517 = !DILocation(line: 487, column: 1, scope: !4509)
!4518 = distinct !DISubprogram(name: "drop_in_place<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr77drop_in_place$LT$std..sync..mutex..Mutex$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$17hdaff1c604a5024deE", scope: !53, file: !959, line: 487, type: !4519, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !4522)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{null, !4521}
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !307, size: 64, align: 64, dwarfAddressSpace: 0)
!4522 = !{!4523}
!4523 = !DILocalVariable(arg: 1, scope: !4518, file: !959, line: 487, type: !4521)
!4524 = !DILocation(line: 487, column: 1, scope: !4518)
!4525 = distinct !DISubprogram(name: "drop_in_place<alloc::sync::Arc<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr80drop_in_place$LT$alloc..sync..Arc$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17h17f22b0de9d218d1E", scope: !53, file: !959, line: 487, type: !4526, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4531, retainedNodes: !4529)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{null, !4528}
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::Arc<std::thread::Packet<()>>", baseType: !382, size: 64, align: 64, dwarfAddressSpace: 0)
!4529 = !{!4530}
!4530 = !DILocalVariable(arg: 1, scope: !4525, file: !959, line: 487, type: !4528)
!4531 = !{!4532}
!4532 = !DITemplateTypeParameter(name: "T", type: !382)
!4533 = !DILocation(line: 487, column: 1, scope: !4525)
!4534 = distinct !DISubprogram(name: "drop_in_place<alloc::sync::Weak<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr81drop_in_place$LT$alloc..sync..Weak$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17ha5187d1350988a8cE", scope: !53, file: !959, line: 487, type: !4535, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4543, retainedNodes: !4541)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{null, !4537}
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::Weak<std::thread::Packet<()>>", baseType: !4538, size: 64, align: 64, dwarfAddressSpace: 0)
!4538 = !DICompositeType(tag: DW_TAG_structure_type, name: "Weak<std::thread::Packet<()>>", scope: !203, file: !2, size: 64, align: 64, elements: !4539, templateParams: !492, identifier: "a3d7d6b5bf0d3efcf9a703770d5fab89")
!4539 = !{!4540}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4538, file: !2, baseType: !385, size: 64, align: 64)
!4541 = !{!4542}
!4542 = !DILocalVariable(arg: 1, scope: !4534, file: !959, line: 487, type: !4537)
!4543 = !{!4544}
!4544 = !DITemplateTypeParameter(name: "T", type: !4538)
!4545 = !DILocation(line: 487, column: 1, scope: !4534)
!4546 = distinct !DISubprogram(name: "drop_in_place<core::result::Result<(), std::io::error::Error>>", linkageName: "_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h38ccdb4d7617198cE", scope: !53, file: !959, line: 487, type: !4547, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4552, retainedNodes: !4550)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{null, !4549}
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::result::Result<(), std::io::error::Error>", baseType: !30, size: 64, align: 64, dwarfAddressSpace: 0)
!4550 = !{!4551}
!4551 = !DILocalVariable(arg: 1, scope: !4546, file: !959, line: 487, type: !4549)
!4552 = !{!4553}
!4553 = !DITemplateTypeParameter(name: "T", type: !30)
!4554 = !DILocation(line: 487, column: 1, scope: !4546)
!4555 = distinct !DISubprogram(name: "drop_in_place<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr85drop_in_place$LT$alloc..sync..ArcInner$LT$std..thread..Packet$LT$$LP$$RP$$GT$$GT$$GT$17hb9aea8892d5e48f5E", scope: !53, file: !959, line: 487, type: !4556, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !4558)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{null, !2964}
!4558 = !{!4559}
!4559 = !DILocalVariable(arg: 1, scope: !4555, file: !959, line: 487, type: !2964)
!4560 = !DILocation(line: 487, column: 1, scope: !4555)
!4561 = distinct !DISubprogram(name: "drop_in_place<core::pin::Pin<alloc::sync::Arc<std::thread::Inner>>>", linkageName: "_ZN4core3ptr85drop_in_place$LT$core..pin..Pin$LT$alloc..sync..Arc$LT$std..thread..Inner$GT$$GT$$GT$17h82d80a8a0c1e25faE", scope: !53, file: !959, line: 487, type: !4562, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4567, retainedNodes: !4565)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{null, !4564}
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::pin::Pin<alloc::sync::Arc<std::thread::Inner>>", baseType: !198, size: 64, align: 64, dwarfAddressSpace: 0)
!4565 = !{!4566}
!4566 = !DILocalVariable(arg: 1, scope: !4561, file: !959, line: 487, type: !4564)
!4567 = !{!4568}
!4568 = !DITemplateTypeParameter(name: "T", type: !198)
!4569 = !DILocation(line: 487, column: 1, scope: !4561)
!4570 = distinct !DISubprogram(name: "drop_in_place<std::rt::lang_start::{closure_env#0}<()>>", linkageName: "_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hd98d205bccc6afd4E", scope: !53, file: !959, line: 487, type: !4571, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4575, retainedNodes: !4573)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{null, !4082}
!4573 = !{!4574}
!4574 = !DILocalVariable(arg: 1, scope: !4570, file: !959, line: 487, type: !4082)
!4575 = !{!4576}
!4576 = !DITemplateTypeParameter(name: "T", type: !173)
!4577 = !DILocation(line: 487, column: 1, scope: !4570)
!4578 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h6ac0428d28465f0cE", scope: !350, file: !1413, line: 218, type: !4579, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !4594)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!4581, !1021}
!4581 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !231, file: !2, size: 64, align: 64, elements: !4582, templateParams: !28, identifier: "73e5c906163f964bd09052518b6d2dc5")
!4582 = !{!4583}
!4583 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4581, file: !2, size: 64, align: 64, elements: !4584, templateParams: !28, identifier: "60204c6c6496841dbff7e7ec5dea5282", discriminator: !4593)
!4584 = !{!4585, !4589}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4583, file: !2, baseType: !4586, size: 64, align: 64, extraData: i64 0)
!4586 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4581, file: !2, size: 64, align: 64, elements: !28, templateParams: !4587, identifier: "b393050474aeb0631755d975367153e1")
!4587 = !{!4588}
!4588 = !DITemplateTypeParameter(name: "T", type: !350)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4583, file: !2, baseType: !4590, size: 64, align: 64)
!4590 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4581, file: !2, size: 64, align: 64, elements: !4591, templateParams: !4587, identifier: "a01a0b695bfd5d94759ea5c77533b9ea")
!4591 = !{!4592}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4590, file: !2, baseType: !350, size: 64, align: 64)
!4593 = !DIDerivedType(tag: DW_TAG_member, scope: !4581, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!4594 = !{!4595}
!4595 = !DILocalVariable(name: "ptr", arg: 1, scope: !4578, file: !1413, line: 218, type: !1021)
!4596 = !DILocation(line: 218, column: 22, scope: !4578)
!4597 = !DILocalVariable(name: "metadata", scope: !4598, file: !1413, line: 219, type: !7, align: 1)
!4598 = !DILexicalBlockFile(scope: !4599, file: !1413, discriminator: 0)
!4599 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbf7d9dcb8aabe9a0E", scope: !981, file: !980, line: 127, type: !4600, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !4602)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{!1021, !1058, !7}
!4602 = !{!4603, !4597}
!4603 = !DILocalVariable(name: "data_address", scope: !4598, file: !1413, line: 219, type: !1058, align: 8)
!4604 = !DILocation(line: 219, column: 13, scope: !4598, inlinedAt: !4605)
!4605 = !DILocation(line: 668, column: 5, scope: !4606, inlinedAt: !4609)
!4606 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hcabc03503d7a71dfE", scope: !53, file: !959, line: 667, type: !4607, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!1021}
!4609 = !DILocation(line: 38, column: 41, scope: !4610, inlinedAt: !4616)
!4610 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h930795340a28cb00E", scope: !1027, file: !1016, line: 35, type: !4611, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !4613)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{!1244, !1021}
!4613 = !{!4614}
!4614 = !DILocalVariable(name: "self", scope: !4615, file: !1413, line: 219, type: !1021, align: 8)
!4615 = !DILexicalBlockFile(scope: !4610, file: !1413, discriminator: 0)
!4616 = !DILocation(line: 219, column: 13, scope: !4578)
!4617 = !DILocation(line: 219, column: 13, scope: !4615, inlinedAt: !4616)
!4618 = !DILocalVariable(name: "self", scope: !4619, file: !1413, line: 219, type: !1021, align: 8)
!4619 = !DILexicalBlockFile(scope: !4620, file: !1413, discriminator: 0)
!4620 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h09a8727df387d3f4E", scope: !1027, file: !1016, line: 707, type: !4621, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!1244, !1021, !1021}
!4623 = !{!4618, !4624}
!4624 = !DILocalVariable(name: "other", scope: !4619, file: !1413, line: 219, type: !1021, align: 8)
!4625 = !DILocation(line: 219, column: 13, scope: !4619, inlinedAt: !4626)
!4626 = !DILocation(line: 38, column: 9, scope: !4610, inlinedAt: !4616)
!4627 = !DILocation(line: 219, column: 13, scope: !4628, inlinedAt: !4634)
!4628 = !DILexicalBlockFile(scope: !4629, file: !1413, discriminator: 0)
!4629 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h8bd9c196eb7a9556E", scope: !53, file: !959, line: 569, type: !4630, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !4632)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!1058, !9}
!4632 = !{!4633}
!4633 = !DILocalVariable(name: "addr", scope: !4628, file: !1413, line: 219, type: !9, align: 8)
!4634 = !DILocation(line: 668, column: 24, scope: !4606, inlinedAt: !4609)
!4635 = !DILocation(line: 219, column: 12, scope: !4578)
!4636 = !DILocation(line: 223, column: 13, scope: !4578)
!4637 = !DILocation(line: 219, column: 9, scope: !4578)
!4638 = !DILocation(line: 221, column: 47, scope: !4578)
!4639 = !DILocalVariable(name: "ptr", scope: !4640, file: !1413, line: 221, type: !1021, align: 8)
!4640 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !4641)
!4641 = !{!4639}
!4642 = !DILocation(line: 221, column: 27, scope: !4640, inlinedAt: !4643)
!4643 = !DILocation(line: 221, column: 27, scope: !4578)
!4644 = !DILocation(line: 221, column: 13, scope: !4578)
!4645 = !DILocation(line: 225, column: 6, scope: !4578)
!4646 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h8e564f303293f592E", scope: !53, file: !959, line: 487, type: !4647, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3155, retainedNodes: !4650)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{null, !4649}
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", baseType: !456, size: 64, align: 64, dwarfAddressSpace: 0)
!4650 = !{!4651}
!4651 = !DILocalVariable(arg: 1, scope: !4646, file: !959, line: 487, type: !4649)
!4652 = !DILocation(line: 487, column: 1, scope: !4646)
!4653 = distinct !DISubprogram(name: "drop_in_place<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h38c8e5b9365ee0caE", scope: !53, file: !959, line: 487, type: !4654, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4662, retainedNodes: !4660)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{null, !4656}
!4656 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut (dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !4657, templateParams: !28, identifier: "aa2475956521b5aed2a4396f47ad888b")
!4657 = !{!4658, !4659}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4656, file: !2, baseType: !125, size: 64, align: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4656, file: !2, baseType: !128, size: 64, align: 64, offset: 64)
!4660 = !{!4661}
!4661 = !DILocalVariable(arg: 1, scope: !4653, file: !959, line: 487, type: !4656)
!4662 = !{!4663}
!4663 = !DITemplateTypeParameter(name: "T", type: !126)
!4664 = !DILocation(line: 487, column: 1, scope: !4653)
!4665 = distinct !DISubprogram(name: "drop_in_place<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>", linkageName: "_ZN4core3ptr92drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..sys..unix..stdio..Stderr$GT$$GT$17h3dab90b2d47f43a0E", scope: !53, file: !959, line: 487, type: !4666, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4671, retainedNodes: !4669)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{null, !4668}
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!4669 = !{!4670}
!4670 = !DILocalVariable(arg: 1, scope: !4665, file: !959, line: 487, type: !4668)
!4671 = !{!4672}
!4672 = !DITemplateTypeParameter(name: "T", type: !14)
!4673 = !DILocation(line: 487, column: 1, scope: !4665)
!4674 = distinct !DISubprogram(name: "next_code_point<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations15next_code_point17h4a2ce66f7591b49eE", scope: !4676, file: !4675, line: 36, type: !4677, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4731, retainedNodes: !4700)
!4675 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/validations.rs", directory: "", checksumkind: CSK_MD5, checksum: "013ffea566228bd192f2b387ca5fa2c0")
!4676 = !DINamespace(name: "validations", scope: !1213)
!4677 = !DISubroutineType(types: !4678)
!4678 = !{!4679, !4690}
!4679 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !231, file: !2, size: 64, align: 32, elements: !4680, templateParams: !28, identifier: "433c36b652ea33482ffe8be57ab7893")
!4680 = !{!4681}
!4681 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4679, file: !2, size: 64, align: 32, elements: !4682, templateParams: !28, identifier: "e01b299968261779c422a7e1febecddf", discriminator: !4689)
!4682 = !{!4683, !4685}
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4681, file: !2, baseType: !4684, size: 64, align: 32, extraData: i64 0)
!4684 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4679, file: !2, size: 64, align: 32, elements: !28, templateParams: !276, identifier: "8b9fb7e5d8df9aebeeccf870281c03a8")
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4681, file: !2, baseType: !4686, size: 64, align: 32, extraData: i64 1)
!4686 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4679, file: !2, size: 64, align: 32, elements: !4687, templateParams: !276, identifier: "4b24779e750ae7c21f70b77320a16b9")
!4687 = !{!4688}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4686, file: !2, baseType: !275, size: 32, align: 32, offset: 32)
!4689 = !DIDerivedType(tag: DW_TAG_member, scope: !4679, file: !2, baseType: !275, size: 32, align: 32, flags: DIFlagArtificial)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !4691, size: 64, align: 64, dwarfAddressSpace: 0)
!4691 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !3578, file: !2, size: 128, align: 64, elements: !4692, templateParams: !332, identifier: "604c1441eac6ad793aa852936f7a8030")
!4692 = !{!4693, !4694, !4695}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4691, file: !2, baseType: !350, size: 64, align: 64)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4691, file: !2, baseType: !353, size: 64, align: 64, offset: 64)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !4691, file: !2, baseType: !4696, align: 8)
!4696 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !4697, identifier: "4e2102ee614de7ec94ba265c486b9c89")
!4697 = !{!4698}
!4698 = !DITemplateTypeParameter(name: "T", type: !4699)
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!4700 = !{!4701, !4702, !4704, !4717, !4719, !4721, !4723, !4725, !4727, !4729}
!4701 = !DILocalVariable(name: "bytes", arg: 1, scope: !4674, file: !4675, line: 36, type: !4690)
!4702 = !DILocalVariable(name: "x", scope: !4703, file: !4675, line: 38, type: !78, align: 1)
!4703 = distinct !DILexicalBlock(scope: !4674, file: !4675, line: 38, column: 5)
!4704 = !DILocalVariable(name: "residual", scope: !4705, file: !4675, line: 38, type: !4706, align: 1)
!4705 = distinct !DILexicalBlock(scope: !4674, file: !4675, line: 38, column: 26)
!4706 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !231, file: !2, align: 8, elements: !4707, templateParams: !28, identifier: "d8a1490c995f47139381e35a5e6e5cdb")
!4707 = !{!4708}
!4708 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4706, file: !2, align: 8, elements: !4709, templateParams: !28, identifier: "9b62236bada376e41df23b6f70477fcc")
!4709 = !{!4710, !4713}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4708, file: !2, baseType: !4711, align: 8)
!4711 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4706, file: !2, align: 8, elements: !28, templateParams: !4712, identifier: "6887a830e9518178209fc3c61f1ca37d")
!4712 = !{!2650}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4708, file: !2, baseType: !4714, align: 8)
!4714 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4706, file: !2, align: 8, elements: !4715, templateParams: !4712, identifier: "57c813c1928930715dbbb4312e4c0fa4")
!4715 = !{!4716}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4714, file: !2, baseType: !2645, align: 8)
!4717 = !DILocalVariable(name: "val", scope: !4718, file: !4675, line: 38, type: !4699, align: 8)
!4718 = distinct !DILexicalBlock(scope: !4674, file: !4675, line: 38, column: 14)
!4719 = !DILocalVariable(name: "init", scope: !4720, file: !4675, line: 46, type: !275, align: 4)
!4720 = distinct !DILexicalBlock(scope: !4703, file: !4675, line: 46, column: 5)
!4721 = !DILocalVariable(name: "y", scope: !4722, file: !4675, line: 49, type: !78, align: 1)
!4722 = distinct !DILexicalBlock(scope: !4720, file: !4675, line: 49, column: 5)
!4723 = !DILocalVariable(name: "ch", scope: !4724, file: !4675, line: 50, type: !275, align: 4)
!4724 = distinct !DILexicalBlock(scope: !4722, file: !4675, line: 50, column: 5)
!4725 = !DILocalVariable(name: "z", scope: !4726, file: !4675, line: 56, type: !78, align: 1)
!4726 = distinct !DILexicalBlock(scope: !4724, file: !4675, line: 56, column: 9)
!4727 = !DILocalVariable(name: "y_z", scope: !4728, file: !4675, line: 57, type: !275, align: 4)
!4728 = distinct !DILexicalBlock(scope: !4726, file: !4675, line: 57, column: 9)
!4729 = !DILocalVariable(name: "w", scope: !4730, file: !4675, line: 64, type: !78, align: 1)
!4730 = distinct !DILexicalBlock(scope: !4728, file: !4675, line: 64, column: 13)
!4731 = !{!4732}
!4732 = !DITemplateTypeParameter(name: "I", type: !4691)
!4733 = !DILocation(line: 36, column: 63, scope: !4674)
!4734 = !DILocalVariable(name: "self", scope: !4735, file: !4675, line: 38, type: !4756, align: 8)
!4735 = !DILexicalBlockFile(scope: !4736, file: !4675, discriminator: 0)
!4736 = distinct !DISubprogram(name: "branch<&u8>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he5bf9770a015e181E", scope: !4737, file: !1848, line: 2290, type: !4738, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4697, retainedNodes: !4767)
!4737 = !DINamespace(name: "{impl#35}", scope: !231)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!4740, !4756}
!4740 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &u8>", scope: !2666, file: !2, size: 64, align: 64, elements: !4741, templateParams: !28, identifier: "513888bfaba291a24cedecefd1c8f3cf")
!4741 = !{!4742}
!4742 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4740, file: !2, size: 64, align: 64, elements: !4743, templateParams: !28, identifier: "19071d1d694b54b173e59457b654fa28", discriminator: !4755)
!4743 = !{!4744, !4751}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4742, file: !2, baseType: !4745, size: 64, align: 64)
!4745 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4740, file: !2, size: 64, align: 64, elements: !4746, templateParams: !4748, identifier: "ce047414cf5b82ac3c74a44d9cbde4e7")
!4746 = !{!4747}
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4745, file: !2, baseType: !4699, size: 64, align: 64)
!4748 = !{!4749, !4750}
!4749 = !DITemplateTypeParameter(name: "B", type: !4706)
!4750 = !DITemplateTypeParameter(name: "C", type: !4699)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4742, file: !2, baseType: !4752, size: 64, align: 64, extraData: i64 0)
!4752 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4740, file: !2, size: 64, align: 64, elements: !4753, templateParams: !4748, identifier: "4460a790e4a683cf8d29a30157ff54e5")
!4753 = !{!4754}
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4752, file: !2, baseType: !4706, align: 8)
!4755 = !DIDerivedType(tag: DW_TAG_member, scope: !4740, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!4756 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u8>", scope: !231, file: !2, size: 64, align: 64, elements: !4757, templateParams: !28, identifier: "bbf278434900ebc767cf4d1ba91a7023")
!4757 = !{!4758}
!4758 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4756, file: !2, size: 64, align: 64, elements: !4759, templateParams: !28, identifier: "101fb69dcd65b49303b4d10b55dcffb", discriminator: !4766)
!4759 = !{!4760, !4762}
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4758, file: !2, baseType: !4761, size: 64, align: 64, extraData: i64 0)
!4761 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4756, file: !2, size: 64, align: 64, elements: !28, templateParams: !4697, identifier: "bd32561e41222bd8701ecbec194b1aa7")
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4758, file: !2, baseType: !4763, size: 64, align: 64)
!4763 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4756, file: !2, size: 64, align: 64, elements: !4764, templateParams: !4697, identifier: "728806a049c182f2a5c33d7fd0303de1")
!4764 = !{!4765}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4763, file: !2, baseType: !4699, size: 64, align: 64)
!4766 = !DIDerivedType(tag: DW_TAG_member, scope: !4756, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!4767 = !{!4734, !4768}
!4768 = !DILocalVariable(name: "v", scope: !4769, file: !4675, line: 38, type: !4699, align: 8)
!4769 = !DILexicalBlockFile(scope: !4770, file: !4675, discriminator: 0)
!4770 = distinct !DILexicalBlock(scope: !4736, file: !1848, line: 2292, column: 13)
!4771 = !DILocation(line: 38, column: 14, scope: !4735, inlinedAt: !4772)
!4772 = !DILocation(line: 38, column: 14, scope: !4674)
!4773 = !DILocation(line: 38, column: 26, scope: !4705)
!4774 = !DILocalVariable(name: "residual", scope: !4775, file: !4675, line: 38, type: !4706, align: 1)
!4775 = !DILexicalBlockFile(scope: !4776, file: !4675, discriminator: 0)
!4776 = distinct !DISubprogram(name: "from_residual<u32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7ce92d2fda13f1a3E", scope: !4777, file: !1848, line: 2302, type: !4778, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !276, retainedNodes: !4780)
!4777 = !DINamespace(name: "{impl#36}", scope: !231)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!4679, !4706}
!4780 = !{!4774}
!4781 = !DILocation(line: 38, column: 14, scope: !4775, inlinedAt: !4782)
!4782 = !DILocation(line: 38, column: 14, scope: !4705)
!4783 = !DILocalVariable(name: "self", scope: !4784, file: !4675, line: 49, type: !4756, align: 8)
!4784 = !DILexicalBlockFile(scope: !4785, file: !4675, discriminator: 0)
!4785 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h252cbeb21d2e2d7aE", scope: !4756, file: !1848, line: 892, type: !4786, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4697, retainedNodes: !4788)
!4786 = !DISubroutineType(types: !4787)
!4787 = !{!4699, !4756, !1109}
!4788 = !{!4783, !4789}
!4789 = !DILocalVariable(name: "val", scope: !4790, file: !4675, line: 49, type: !4699, align: 8)
!4790 = !DILexicalBlockFile(scope: !4791, file: !4675, discriminator: 0)
!4791 = distinct !DILexicalBlock(scope: !4785, file: !1848, line: 895, column: 13)
!4792 = !DILocation(line: 49, column: 23, scope: !4784, inlinedAt: !4793)
!4793 = !DILocation(line: 49, column: 23, scope: !4720)
!4794 = !DILocation(line: 50, column: 9, scope: !4724)
!4795 = !DILocalVariable(name: "self", scope: !4796, file: !4675, line: 56, type: !4756, align: 8)
!4796 = !DILexicalBlockFile(scope: !4797, file: !4675, discriminator: 0)
!4797 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h252cbeb21d2e2d7aE", scope: !4756, file: !1848, line: 892, type: !4786, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4697, retainedNodes: !4798)
!4798 = !{!4795, !4799}
!4799 = !DILocalVariable(name: "val", scope: !4800, file: !4675, line: 56, type: !4699, align: 8)
!4800 = !DILexicalBlockFile(scope: !4801, file: !4675, discriminator: 0)
!4801 = distinct !DILexicalBlock(scope: !4797, file: !1848, line: 895, column: 13)
!4802 = !DILocation(line: 56, column: 27, scope: !4796, inlinedAt: !4803)
!4803 = !DILocation(line: 56, column: 27, scope: !4724)
!4804 = !DILocalVariable(name: "self", scope: !4805, file: !4675, line: 64, type: !4756, align: 8)
!4805 = !DILexicalBlockFile(scope: !4806, file: !4675, discriminator: 0)
!4806 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h252cbeb21d2e2d7aE", scope: !4756, file: !1848, line: 892, type: !4786, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4697, retainedNodes: !4807)
!4807 = !{!4804, !4808}
!4808 = !DILocalVariable(name: "val", scope: !4809, file: !4675, line: 64, type: !4699, align: 8)
!4809 = !DILexicalBlockFile(scope: !4810, file: !4675, discriminator: 0)
!4810 = distinct !DILexicalBlock(scope: !4806, file: !1848, line: 895, column: 13)
!4811 = !DILocation(line: 64, column: 31, scope: !4805, inlinedAt: !4812)
!4812 = !DILocation(line: 64, column: 31, scope: !4728)
!4813 = !DILocation(line: 38, column: 14, scope: !4769, inlinedAt: !4772)
!4814 = !DILocation(line: 38, column: 14, scope: !4718)
!4815 = !DILocation(line: 38, column: 13, scope: !4674)
!4816 = !DILocation(line: 38, column: 9, scope: !4703)
!4817 = !DILocation(line: 39, column: 8, scope: !4703)
!4818 = !DILocation(line: 1, column: 1, scope: !4819)
!4819 = !DILexicalBlockFile(scope: !4674, file: !1610, discriminator: 0)
!4820 = !DILocation(line: 70, column: 2, scope: !4674)
!4821 = !DILocation(line: 46, column: 32, scope: !4703)
!4822 = !DILocalVariable(name: "byte", scope: !4823, file: !4675, line: 46, type: !78, align: 1)
!4823 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17hbd519efc704c430cE", scope: !4676, file: !4675, line: 11, type: !4824, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4826)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!275, !78, !275}
!4826 = !{!4822, !4827}
!4827 = !DILocalVariable(name: "width", scope: !4823, file: !4675, line: 46, type: !275, align: 4)
!4828 = !DILocation(line: 46, column: 16, scope: !4823, inlinedAt: !4829)
!4829 = !DILocation(line: 46, column: 16, scope: !4703)
!4830 = !DILocation(line: 46, column: 9, scope: !4720)
!4831 = !DILocation(line: 40, column: 21, scope: !4703)
!4832 = !DILocation(line: 40, column: 16, scope: !4703)
!4833 = !DILocation(line: 1, column: 1, scope: !4834)
!4834 = !DILexicalBlockFile(scope: !4703, file: !1610, discriminator: 0)
!4835 = !{i32 0, i32 2}
!4836 = !DILocation(line: 49, column: 23, scope: !4837, inlinedAt: !4839)
!4837 = !DILexicalBlockFile(scope: !4838, file: !4675, discriminator: 0)
!4838 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h837ae9793f44f7d6E", scope: !1497, file: !1496, line: 100, type: !179, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!4839 = !DILocation(line: 897, column: 30, scope: !4785, inlinedAt: !4793)
!4840 = !DILocation(line: 49, column: 23, scope: !4790, inlinedAt: !4793)
!4841 = !DILocation(line: 49, column: 22, scope: !4720)
!4842 = !DILocation(line: 49, column: 9, scope: !4722)
!4843 = !DILocation(line: 50, column: 37, scope: !4722)
!4844 = !DILocalVariable(name: "ch", scope: !4845, file: !4675, line: 50, type: !275, align: 4)
!4845 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17ha93168c1bfed1854E", scope: !4676, file: !4675, line: 17, type: !4846, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4848)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!275, !275, !78}
!4848 = !{!4844, !4849}
!4849 = !DILocalVariable(name: "byte", scope: !4845, file: !4675, line: 50, type: !78, align: 1)
!4850 = !DILocation(line: 50, column: 18, scope: !4845, inlinedAt: !4851)
!4851 = !DILocation(line: 50, column: 18, scope: !4722)
!4852 = !DILocation(line: 50, column: 43, scope: !4722)
!4853 = !DILocation(line: 51, column: 8, scope: !4724)
!4854 = !DILocation(line: 69, column: 10, scope: !4724)
!4855 = !DILocation(line: 69, column: 5, scope: !4724)
!4856 = !DILocation(line: 56, column: 27, scope: !4857, inlinedAt: !4859)
!4857 = !DILexicalBlockFile(scope: !4858, file: !4675, discriminator: 0)
!4858 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h837ae9793f44f7d6E", scope: !1497, file: !1496, line: 100, type: !179, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!4859 = !DILocation(line: 897, column: 30, scope: !4797, inlinedAt: !4803)
!4860 = !DILocation(line: 56, column: 27, scope: !4800, inlinedAt: !4803)
!4861 = !DILocation(line: 56, column: 26, scope: !4724)
!4862 = !DILocation(line: 56, column: 13, scope: !4726)
!4863 = !DILocation(line: 57, column: 38, scope: !4726)
!4864 = !DILocalVariable(name: "ch", scope: !4865, file: !4675, line: 57, type: !275, align: 4)
!4865 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17ha93168c1bfed1854E", scope: !4676, file: !4675, line: 17, type: !4846, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4866)
!4866 = !{!4864, !4867}
!4867 = !DILocalVariable(name: "byte", scope: !4865, file: !4675, line: 57, type: !78, align: 1)
!4868 = !DILocation(line: 57, column: 19, scope: !4865, inlinedAt: !4869)
!4869 = !DILocation(line: 57, column: 19, scope: !4726)
!4870 = !DILocation(line: 57, column: 62, scope: !4726)
!4871 = !DILocation(line: 57, column: 13, scope: !4728)
!4872 = !DILocation(line: 58, column: 14, scope: !4728)
!4873 = !DILocation(line: 58, column: 9, scope: !4728)
!4874 = !DILocation(line: 59, column: 12, scope: !4728)
!4875 = !DILocation(line: 51, column: 5, scope: !4724)
!4876 = !DILocation(line: 64, column: 31, scope: !4877, inlinedAt: !4879)
!4877 = !DILexicalBlockFile(scope: !4878, file: !4675, discriminator: 0)
!4878 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h837ae9793f44f7d6E", scope: !1497, file: !1496, line: 100, type: !179, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!4879 = !DILocation(line: 897, column: 30, scope: !4806, inlinedAt: !4812)
!4880 = !DILocation(line: 64, column: 31, scope: !4809, inlinedAt: !4812)
!4881 = !DILocation(line: 64, column: 30, scope: !4728)
!4882 = !DILocation(line: 64, column: 17, scope: !4730)
!4883 = !DILocation(line: 65, column: 18, scope: !4730)
!4884 = !DILocation(line: 65, column: 56, scope: !4730)
!4885 = !DILocalVariable(name: "ch", scope: !4886, file: !4675, line: 65, type: !275, align: 4)
!4886 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17ha93168c1bfed1854E", scope: !4676, file: !4675, line: 17, type: !4846, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4887)
!4887 = !{!4885, !4888}
!4888 = !DILocalVariable(name: "byte", scope: !4886, file: !4675, line: 65, type: !78, align: 1)
!4889 = !DILocation(line: 65, column: 37, scope: !4886, inlinedAt: !4890)
!4890 = !DILocation(line: 65, column: 37, scope: !4730)
!4891 = !DILocation(line: 65, column: 61, scope: !4730)
!4892 = !DILocation(line: 65, column: 13, scope: !4730)
!4893 = !DILocation(line: 59, column: 9, scope: !4728)
!4894 = distinct !DISubprogram(name: "is_char_boundary", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hea636987af350794E", scope: !4896, file: !4895, line: 209, type: !4897, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4899)
!4895 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd49fcee40af5f348df1f9868b20cc92")
!4896 = !DINamespace(name: "{impl#0}", scope: !1213)
!4897 = !DISubroutineType(types: !4898)
!4898 = !{!1244, !145, !9}
!4899 = !{!4900, !4901, !4902}
!4900 = !DILocalVariable(name: "self", arg: 1, scope: !4894, file: !4895, line: 209, type: !145)
!4901 = !DILocalVariable(name: "index", arg: 2, scope: !4894, file: !4895, line: 209, type: !9)
!4902 = !DILocalVariable(name: "b", scope: !4903, file: !4895, line: 230, type: !78, align: 1)
!4903 = distinct !DILexicalBlock(scope: !4894, file: !4895, line: 230, column: 13)
!4904 = !DILocation(line: 209, column: 35, scope: !4894)
!4905 = !DILocation(line: 209, column: 42, scope: !4894)
!4906 = !DILocation(line: 214, column: 12, scope: !4894)
!4907 = !DILocation(line: 215, column: 20, scope: !4894)
!4908 = !DILocation(line: 232, column: 6, scope: !4894)
!4909 = !DILocation(line: 218, column: 15, scope: !4894)
!4910 = !DILocalVariable(name: "self", scope: !4911, file: !4895, line: 218, type: !145, align: 8)
!4911 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4914)
!4912 = !DISubroutineType(types: !4913)
!4913 = !{!1083, !145}
!4914 = !{!4910}
!4915 = !DILocation(line: 218, column: 15, scope: !4911, inlinedAt: !4909)
!4916 = !DILocalVariable(name: "self", scope: !4917, file: !4895, line: 218, type: !1083, align: 8)
!4917 = !DILexicalBlockFile(scope: !4918, file: !4895, discriminator: 0)
!4918 = distinct !DISubprogram(name: "get<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hc2c9f23bed09e227E", scope: !1568, file: !1567, line: 339, type: !4919, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4923, retainedNodes: !4921)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{!4756, !1083, !9}
!4921 = !{!4916, !4922}
!4922 = !DILocalVariable(name: "index", scope: !4917, file: !4895, line: 218, type: !9, align: 8)
!4923 = !{!333, !4924}
!4924 = !DITemplateTypeParameter(name: "I", type: !9)
!4925 = !DILocation(line: 218, column: 15, scope: !4917, inlinedAt: !4909)
!4926 = !DILocation(line: 218, column: 35, scope: !4894)
!4927 = !DILocation(line: 218, column: 9, scope: !4894)
!4928 = !DILocation(line: 228, column: 30, scope: !4894)
!4929 = !DILocalVariable(name: "self", scope: !4930, file: !4895, line: 228, type: !145, align: 8)
!4930 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hed2dfa42a5f15112E", scope: !4896, file: !4895, line: 157, type: !4931, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4933)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{!9, !145}
!4933 = !{!4929}
!4934 = !DILocation(line: 228, column: 30, scope: !4930, inlinedAt: !4928)
!4935 = !DILocalVariable(name: "self", scope: !4936, file: !4895, line: 228, type: !145, align: 8)
!4936 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4937)
!4937 = !{!4935}
!4938 = !DILocation(line: 228, column: 30, scope: !4936, inlinedAt: !4939)
!4939 = !DILocation(line: 158, column: 9, scope: !4930, inlinedAt: !4928)
!4940 = !DILocation(line: 230, column: 19, scope: !4894)
!4941 = !DILocation(line: 230, column: 19, scope: !4903)
!4942 = !DILocation(line: 230, column: 25, scope: !4903)
!4943 = !DILocalVariable(name: "self", scope: !4944, file: !4895, line: 230, type: !78, align: 1)
!4944 = !DILexicalBlockFile(scope: !4945, file: !4895, discriminator: 0)
!4945 = distinct !DISubprogram(name: "is_utf8_char_boundary", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17hfda9c9fd5a0f5c8aE", scope: !4947, file: !4946, line: 808, type: !4948, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4950)
!4946 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "47905c39e2d032306951817cfe39b065")
!4947 = !DINamespace(name: "{impl#6}", scope: !259)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{!1244, !78}
!4950 = !{!4943}
!4951 = !DILocation(line: 230, column: 25, scope: !4944, inlinedAt: !4942)
!4952 = !DILocation(line: 230, column: 49, scope: !4894)
!4953 = !DILocation(line: 228, column: 21, scope: !4894)
!4954 = !DILocation(line: 228, column: 39, scope: !4894)
!4955 = distinct !DISubprogram(name: "lines", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5lines17h3f81b67daf7ff0f0E", scope: !4896, file: !4895, line: 997, type: !4956, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !4958)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!1211, !145}
!4958 = !{!4959}
!4959 = !DILocalVariable(name: "self", arg: 1, scope: !4955, file: !4895, line: 997, type: !145)
!4960 = !DILocation(line: 997, column: 18, scope: !4955)
!4961 = !DILocalVariable(name: "self", scope: !4962, file: !4895, line: 998, type: !1222, align: 8)
!4962 = !DILexicalBlockFile(scope: !4963, file: !4895, discriminator: 0)
!4963 = distinct !DISubprogram(name: "map<core::str::iter::SplitTerminator<char>, &str, core::str::LinesAnyMap>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17hdee8de71f95a3cc8E", scope: !4965, file: !4964, line: 776, type: !4968, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4972, retainedNodes: !4970)
!4964 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "a0295b930225b37fba81d1ded0ab2716")
!4965 = !DINamespace(name: "Iterator", scope: !4966)
!4966 = !DINamespace(name: "iterator", scope: !4967)
!4967 = !DINamespace(name: "traits", scope: !1219)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{!1216, !1222, !1249}
!4970 = !{!4961, !4971}
!4971 = !DILocalVariable(name: "f", scope: !4962, file: !4895, line: 998, type: !1249, align: 1)
!4972 = !{!4973, !4974, !1252}
!4973 = !DITemplateTypeParameter(name: "Self", type: !1222)
!4974 = !DITemplateTypeParameter(name: "B", type: !145)
!4975 = !DILocation(line: 998, column: 15, scope: !4962, inlinedAt: !4976)
!4976 = !DILocation(line: 998, column: 15, scope: !4955)
!4977 = !DILocalVariable(name: "self", scope: !4978, file: !4895, line: 998, type: !145, align: 8)
!4978 = distinct !DISubprogram(name: "split_terminator<char>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$16split_terminator17h69f7deaa7f47eccaE", scope: !4896, file: !4895, line: 1471, type: !4979, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1246, retainedNodes: !4981)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!1222, !145, !1237}
!4981 = !{!4977, !4982}
!4982 = !DILocalVariable(name: "pat", scope: !4978, file: !4895, line: 998, type: !1237, align: 4)
!4983 = !DILocation(line: 998, column: 15, scope: !4978, inlinedAt: !4976)
!4984 = !DILocation(line: 998, column: 9, scope: !4955)
!4985 = !DILocation(line: 999, column: 6, scope: !4955)
!4986 = distinct !DISubprogram(name: "split<char>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5split17h1a606a17e223c88aE", scope: !4896, file: !4895, line: 1325, type: !4987, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1246, retainedNodes: !4992)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!4989, !145, !1237}
!4989 = !DICompositeType(tag: DW_TAG_structure_type, name: "Split<char>", scope: !1212, file: !2, size: 576, align: 64, elements: !4990, templateParams: !1246, identifier: "c3e0030e22b2009cad602cec1746455a")
!4990 = !{!4991}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4989, file: !2, baseType: !1225, size: 576, align: 64)
!4992 = !{!4993, !4994}
!4993 = !DILocalVariable(name: "self", arg: 1, scope: !4986, file: !4895, line: 1325, type: !145)
!4994 = !DILocalVariable(name: "pat", arg: 2, scope: !4986, file: !4895, line: 1325, type: !1237)
!4995 = !DILocation(line: 1325, column: 38, scope: !4986)
!4996 = !DILocation(line: 1325, column: 48, scope: !4986)
!4997 = !DILocation(line: 1326, column: 15, scope: !4986)
!4998 = !DILocation(line: 1328, column: 18, scope: !4986)
!4999 = !DILocalVariable(name: "self", scope: !5000, file: !4895, line: 1328, type: !145, align: 8)
!5000 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hed2dfa42a5f15112E", scope: !4896, file: !4895, line: 157, type: !4931, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5001)
!5001 = !{!4999}
!5002 = !DILocation(line: 1328, column: 18, scope: !5000, inlinedAt: !4998)
!5003 = !DILocalVariable(name: "self", scope: !5004, file: !4895, line: 1328, type: !145, align: 8)
!5004 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5005)
!5005 = !{!5003}
!5006 = !DILocation(line: 1328, column: 18, scope: !5004, inlinedAt: !5007)
!5007 = !DILocation(line: 158, column: 9, scope: !5000, inlinedAt: !4998)
!5008 = !DILocation(line: 1329, column: 22, scope: !4986)
!5009 = !DILocation(line: 1333, column: 5, scope: !4986)
!5010 = !DILocation(line: 1326, column: 9, scope: !4986)
!5011 = !DILocation(line: 1333, column: 6, scope: !4986)
!5012 = !DILocation(line: 1325, column: 5, scope: !4986)
!5013 = distinct !DISubprogram(name: "contains<&str>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h42080b83661c834cE", scope: !4896, file: !4895, line: 1054, type: !5014, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5019, retainedNodes: !5016)
!5014 = !DISubroutineType(types: !5015)
!5015 = !{!1244, !145, !145}
!5016 = !{!5017, !5018}
!5017 = !DILocalVariable(name: "self", arg: 1, scope: !5013, file: !4895, line: 1054, type: !145)
!5018 = !DILocalVariable(name: "pat", arg: 2, scope: !5013, file: !4895, line: 1054, type: !145)
!5019 = !{!5020}
!5020 = !DITemplateTypeParameter(name: "P", type: !145)
!5021 = !DILocation(line: 1054, column: 41, scope: !5013)
!5022 = !DILocation(line: 1054, column: 51, scope: !5013)
!5023 = !DILocation(line: 1055, column: 9, scope: !5013)
!5024 = !DILocation(line: 1056, column: 6, scope: !5013)
!5025 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h836d2853c71d789aE", scope: !1225, file: !5026, line: 601, type: !5027, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1246, retainedNodes: !5041)
!5026 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "94cf8b13d76879430c291e9ed66f42eb")
!5027 = !DISubroutineType(types: !5028)
!5028 = !{!5029, !5040}
!5029 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !231, file: !2, size: 128, align: 64, elements: !5030, templateParams: !28, identifier: "f0dceda904e27e7388d0262de24b6976")
!5030 = !{!5031}
!5031 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5029, file: !2, size: 128, align: 64, elements: !5032, templateParams: !28, identifier: "d9a20f3bc7236076b658193a0ee41dce", discriminator: !5039)
!5032 = !{!5033, !5035}
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5031, file: !2, baseType: !5034, size: 128, align: 64, extraData: i64 0)
!5034 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5029, file: !2, size: 128, align: 64, elements: !28, templateParams: !1203, identifier: "8b8f8f73f03135e6d73de6ca26c771a5")
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5031, file: !2, baseType: !5036, size: 128, align: 64)
!5036 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5029, file: !2, size: 128, align: 64, elements: !5037, templateParams: !1203, identifier: "5f24cd570c5cc19be11f0051a0b188da")
!5037 = !{!5038}
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5036, file: !2, baseType: !145, size: 128, align: 64)
!5039 = !DIDerivedType(tag: DW_TAG_member, scope: !5029, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!5040 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::SplitInternal<char>", baseType: !1225, size: 64, align: 64, dwarfAddressSpace: 0)
!5041 = !{!5042, !5043, !5045, !5047, !5048}
!5042 = !DILocalVariable(name: "self", arg: 1, scope: !5025, file: !5026, line: 601, type: !5040)
!5043 = !DILocalVariable(name: "haystack", scope: !5044, file: !5026, line: 606, type: !145, align: 8)
!5044 = distinct !DILexicalBlock(scope: !5025, file: !5026, line: 606, column: 9)
!5045 = !DILocalVariable(name: "a", scope: !5046, file: !5026, line: 609, type: !9, align: 8)
!5046 = distinct !DILexicalBlock(scope: !5044, file: !5026, line: 609, column: 13)
!5047 = !DILocalVariable(name: "b", scope: !5046, file: !5026, line: 609, type: !9, align: 8)
!5048 = !DILocalVariable(name: "elt", scope: !5049, file: !5026, line: 610, type: !145, align: 8)
!5049 = distinct !DILexicalBlock(scope: !5046, file: !5026, line: 610, column: 17)
!5050 = !DILocation(line: 601, column: 13, scope: !5025)
!5051 = !DILocalVariable(name: "i", scope: !5052, file: !5026, line: 610, type: !899, align: 8)
!5052 = !DILexicalBlockFile(scope: !5053, file: !5026, discriminator: 0)
!5053 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h072ef501e6c56826E", scope: !4896, file: !4895, line: 505, type: !5054, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5058, retainedNodes: !5056)
!5054 = !DISubroutineType(types: !5055)
!5055 = !{!145, !145, !899}
!5056 = !{!5057, !5051}
!5057 = !DILocalVariable(name: "self", scope: !5052, file: !5026, line: 610, type: !145, align: 8)
!5058 = !{!5059}
!5059 = !DITemplateTypeParameter(name: "I", type: !899)
!5060 = !DILocation(line: 610, column: 27, scope: !5052, inlinedAt: !5061)
!5061 = !DILocation(line: 610, column: 27, scope: !5046)
!5062 = !DILocation(line: 602, column: 12, scope: !5025)
!5063 = !DILocation(line: 606, column: 24, scope: !5025)
!5064 = !DILocation(line: 606, column: 13, scope: !5044)
!5065 = !DILocation(line: 603, column: 20, scope: !5025)
!5066 = !DILocation(line: 616, column: 6, scope: !5025)
!5067 = !DILocation(line: 607, column: 15, scope: !5044)
!5068 = !DILocation(line: 607, column: 9, scope: !5044)
!5069 = !DILocation(line: 614, column: 21, scope: !5044)
!5070 = !DILocation(line: 609, column: 19, scope: !5044)
!5071 = !DILocation(line: 609, column: 19, scope: !5046)
!5072 = !DILocation(line: 609, column: 22, scope: !5044)
!5073 = !DILocation(line: 609, column: 22, scope: !5046)
!5074 = !DILocation(line: 610, column: 50, scope: !5046)
!5075 = !DILocation(line: 610, column: 21, scope: !5049)
!5076 = !DILocation(line: 611, column: 17, scope: !5049)
!5077 = !DILocation(line: 612, column: 17, scope: !5049)
!5078 = !DILocation(line: 613, column: 13, scope: !5044)
!5079 = !DILocation(line: 614, column: 34, scope: !5044)
!5080 = distinct !DISubprogram(name: "get_end<char>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hbf1d029af409cd1fE", scope: !1225, file: !5026, line: 587, type: !5027, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1246, retainedNodes: !5081)
!5081 = !{!5082, !5083}
!5082 = !DILocalVariable(name: "self", arg: 1, scope: !5080, file: !5026, line: 587, type: !5040)
!5083 = !DILocalVariable(name: "string", scope: !5084, file: !5026, line: 592, type: !145, align: 8)
!5084 = distinct !DILexicalBlock(scope: !5080, file: !5026, line: 592, column: 17)
!5085 = !DILocation(line: 587, column: 16, scope: !5080)
!5086 = !DILocalVariable(name: "i", scope: !5087, file: !5026, line: 592, type: !899, align: 8)
!5087 = !DILexicalBlockFile(scope: !5088, file: !5026, discriminator: 0)
!5088 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h072ef501e6c56826E", scope: !4896, file: !4895, line: 505, type: !5054, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5058, retainedNodes: !5089)
!5089 = !{!5090, !5086}
!5090 = !DILocalVariable(name: "self", scope: !5087, file: !5026, line: 592, type: !145, align: 8)
!5091 = !DILocation(line: 592, column: 30, scope: !5087, inlinedAt: !5092)
!5092 = !DILocation(line: 592, column: 30, scope: !5080)
!5093 = !DILocation(line: 588, column: 13, scope: !5080)
!5094 = !DILocation(line: 588, column: 12, scope: !5080)
!5095 = !DILocation(line: 588, column: 31, scope: !5080)
!5096 = !DILocation(line: 588, column: 30, scope: !5080)
!5097 = !DILocation(line: 588, column: 60, scope: !5080)
!5098 = !DILocation(line: 588, column: 71, scope: !5080)
!5099 = !DILocation(line: 596, column: 13, scope: !5080)
!5100 = !DILocation(line: 588, column: 9, scope: !5080)
!5101 = !DILocation(line: 589, column: 13, scope: !5080)
!5102 = !DILocation(line: 592, column: 68, scope: !5080)
!5103 = !DILocation(line: 592, column: 80, scope: !5080)
!5104 = !DILocation(line: 592, column: 21, scope: !5084)
!5105 = !DILocation(line: 593, column: 17, scope: !5084)
!5106 = !DILocation(line: 598, column: 6, scope: !5080)
!5107 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h38f7c22bd8eff0bbE", scope: !5109, file: !5108, line: 197, type: !5111, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5117)
!5108 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "fe011983167a64afa5cd9b7538fc9cef")
!5109 = !DINamespace(name: "{impl#7}", scope: !5110)
!5110 = !DINamespace(name: "traits", scope: !1213)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!5113, !899, !5113}
!5113 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 128, align: 64, elements: !5114, templateParams: !28, identifier: "c0e5994a8e99afccd68a87827900070")
!5114 = !{!5115, !5116}
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5113, file: !2, baseType: !148, size: 64, align: 64)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5113, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5117 = !{!5118, !5119, !5120, !5122, !5124}
!5118 = !DILocalVariable(name: "self", arg: 1, scope: !5107, file: !5108, line: 197, type: !899)
!5119 = !DILocalVariable(name: "slice", arg: 2, scope: !5107, file: !5108, line: 197, type: !5113)
!5120 = !DILocalVariable(name: "slice", scope: !5121, file: !5108, line: 198, type: !895, align: 8)
!5121 = distinct !DILexicalBlock(scope: !5107, file: !5108, line: 198, column: 9)
!5122 = !DILocalVariable(name: "ptr", scope: !5123, file: !5108, line: 201, type: !353, align: 8)
!5123 = distinct !DILexicalBlock(scope: !5121, file: !5108, line: 201, column: 9)
!5124 = !DILocalVariable(name: "len", scope: !5125, file: !5108, line: 202, type: !9, align: 8)
!5125 = distinct !DILexicalBlock(scope: !5123, file: !5108, line: 202, column: 9)
!5126 = !DILocation(line: 197, column: 29, scope: !5107)
!5127 = !DILocation(line: 197, column: 35, scope: !5107)
!5128 = !DILocation(line: 198, column: 21, scope: !5107)
!5129 = !DILocation(line: 198, column: 13, scope: !5121)
!5130 = !DILocation(line: 201, column: 28, scope: !5121)
!5131 = !DILocalVariable(name: "self", scope: !5132, file: !5108, line: 201, type: !895, align: 8)
!5132 = !DILexicalBlockFile(scope: !5133, file: !5108, discriminator: 0)
!5133 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1088b55685155f31E", scope: !930, file: !929, line: 1385, type: !932, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5134)
!5134 = !{!5131}
!5135 = !DILocation(line: 201, column: 28, scope: !5132, inlinedAt: !5130)
!5136 = !DILocalVariable(name: "self", scope: !5137, file: !5108, line: 201, type: !353, align: 8)
!5137 = !DILexicalBlockFile(scope: !5138, file: !5108, discriminator: 0)
!5138 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h82208e5cbd5d7609E", scope: !939, file: !929, line: 871, type: !940, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5139)
!5139 = !{!5136, !5140}
!5140 = !DILocalVariable(name: "count", scope: !5137, file: !5108, line: 201, type: !9, align: 8)
!5141 = !DILocation(line: 201, column: 28, scope: !5137, inlinedAt: !5130)
!5142 = !DILocation(line: 201, column: 47, scope: !5121)
!5143 = !DILocalVariable(name: "self", scope: !5144, file: !5108, line: 201, type: !353, align: 8)
!5144 = !DILexicalBlockFile(scope: !5145, file: !5108, discriminator: 0)
!5145 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17ha09c9658f9aa8a93E", scope: !939, file: !929, line: 453, type: !949, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5146)
!5146 = !{!5143, !5147}
!5147 = !DILocalVariable(name: "count", scope: !5144, file: !5108, line: 201, type: !951, align: 8)
!5148 = !DILocation(line: 201, column: 28, scope: !5144, inlinedAt: !5149)
!5149 = !DILocation(line: 876, column: 18, scope: !5138, inlinedAt: !5130)
!5150 = !DILocation(line: 201, column: 13, scope: !5123)
!5151 = !DILocation(line: 202, column: 19, scope: !5123)
!5152 = !DILocation(line: 202, column: 13, scope: !5125)
!5153 = !DILocation(line: 203, column: 35, scope: !5125)
!5154 = !DILocalVariable(name: "data", scope: !5155, file: !5108, line: 203, type: !353, align: 8)
!5155 = !DILexicalBlockFile(scope: !5156, file: !5108, discriminator: 0)
!5156 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h4a7908e46ff95e2bE", scope: !53, file: !959, line: 695, type: !960, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5157)
!5157 = !{!5154, !5158}
!5158 = !DILocalVariable(name: "len", scope: !5155, file: !5108, line: 203, type: !9, align: 8)
!5159 = !DILocation(line: 203, column: 9, scope: !5155, inlinedAt: !5160)
!5160 = !DILocation(line: 203, column: 9, scope: !5125)
!5161 = !DILocation(line: 203, column: 40, scope: !5125)
!5162 = !DILocalVariable(name: "self", scope: !5163, file: !5108, line: 203, type: !353, align: 8)
!5163 = !DILexicalBlockFile(scope: !5164, file: !5108, discriminator: 0)
!5164 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h41c23c76c3fbf195E", scope: !939, file: !929, line: 46, type: !970, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !973, retainedNodes: !5165)
!5165 = !{!5162}
!5166 = !DILocation(line: 203, column: 9, scope: !5163, inlinedAt: !5167)
!5167 = !DILocation(line: 696, column: 20, scope: !5156, inlinedAt: !5160)
!5168 = !DILocalVariable(name: "data_address", scope: !5169, file: !5108, line: 203, type: !6, align: 8)
!5169 = !DILexicalBlockFile(scope: !5170, file: !5108, discriminator: 0)
!5170 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h43846fe7970ea603E", scope: !981, file: !980, line: 110, type: !982, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5171)
!5171 = !{!5168, !5172}
!5172 = !DILocalVariable(name: "metadata", scope: !5169, file: !5108, line: 203, type: !9, align: 8)
!5173 = !DILocation(line: 203, column: 9, scope: !5169, inlinedAt: !5174)
!5174 = !DILocation(line: 696, column: 5, scope: !5156, inlinedAt: !5160)
!5175 = !DILocation(line: 204, column: 6, scope: !5107)
!5176 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17h9d15bfca41519251E", scope: !5109, file: !5108, line: 170, type: !5177, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5179)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!5029, !899, !145}
!5179 = !{!5180, !5181}
!5180 = !DILocalVariable(name: "self", arg: 1, scope: !5176, file: !5108, line: 170, type: !899)
!5181 = !DILocalVariable(name: "slice", arg: 2, scope: !5176, file: !5108, line: 170, type: !145)
!5182 = !DILocation(line: 170, column: 12, scope: !5176)
!5183 = !DILocation(line: 170, column: 18, scope: !5176)
!5184 = !DILocation(line: 171, column: 12, scope: !5176)
!5185 = !DILocation(line: 172, column: 16, scope: !5176)
!5186 = !DILocation(line: 173, column: 16, scope: !5176)
!5187 = !DILocation(line: 180, column: 13, scope: !5176)
!5188 = !DILocation(line: 171, column: 9, scope: !5176)
!5189 = !DILocation(line: 178, column: 29, scope: !5176)
!5190 = !DILocation(line: 178, column: 13, scope: !5176)
!5191 = !DILocation(line: 182, column: 6, scope: !5176)
!5192 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h83c6f72f7e717f46E", scope: !5109, file: !5108, line: 214, type: !5193, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5195)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{!145, !899, !145, !1109}
!5195 = !{!5196, !5197, !5198, !5200, !5201}
!5196 = !DILocalVariable(name: "self", arg: 1, scope: !5192, file: !5108, line: 214, type: !899)
!5197 = !DILocalVariable(name: "slice", arg: 2, scope: !5192, file: !5108, line: 214, type: !145)
!5198 = !DILocalVariable(name: "start", scope: !5199, file: !5108, line: 215, type: !9, align: 8)
!5199 = distinct !DILexicalBlock(scope: !5192, file: !5108, line: 215, column: 9)
!5200 = !DILocalVariable(name: "end", scope: !5199, file: !5108, line: 215, type: !9, align: 8)
!5201 = !DILocalVariable(name: "s", scope: !5202, file: !5108, line: 217, type: !145, align: 8)
!5202 = distinct !DILexicalBlock(scope: !5199, file: !5108, line: 217, column: 13)
!5203 = !DILocation(line: 214, column: 14, scope: !5192)
!5204 = !DILocation(line: 214, column: 20, scope: !5192)
!5205 = !DILocation(line: 215, column: 28, scope: !5192)
!5206 = !DILocation(line: 215, column: 14, scope: !5192)
!5207 = !DILocation(line: 215, column: 14, scope: !5199)
!5208 = !DILocation(line: 215, column: 21, scope: !5192)
!5209 = !DILocation(line: 215, column: 21, scope: !5199)
!5210 = !DILocation(line: 216, column: 15, scope: !5199)
!5211 = !DILocation(line: 216, column: 9, scope: !5199)
!5212 = !DILocation(line: 218, column: 21, scope: !5199)
!5213 = !DILocation(line: 217, column: 18, scope: !5199)
!5214 = !DILocation(line: 217, column: 18, scope: !5202)
!5215 = !DILocation(line: 220, column: 6, scope: !5192)
!5216 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h60f48c329bedbb5bE", scope: !5217, file: !5108, line: 349, type: !5218, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5220)
!5217 = !DINamespace(name: "{impl#9}", scope: !5110)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{!5113, !1150, !5113}
!5220 = !{!5221, !5222, !5223, !5225, !5227}
!5221 = !DILocalVariable(name: "self", arg: 1, scope: !5216, file: !5108, line: 349, type: !1150)
!5222 = !DILocalVariable(name: "slice", arg: 2, scope: !5216, file: !5108, line: 349, type: !5113)
!5223 = !DILocalVariable(name: "slice", scope: !5224, file: !5108, line: 350, type: !895, align: 8)
!5224 = distinct !DILexicalBlock(scope: !5216, file: !5108, line: 350, column: 9)
!5225 = !DILocalVariable(name: "ptr", scope: !5226, file: !5108, line: 353, type: !353, align: 8)
!5226 = distinct !DILexicalBlock(scope: !5224, file: !5108, line: 353, column: 9)
!5227 = !DILocalVariable(name: "len", scope: !5228, file: !5108, line: 354, type: !9, align: 8)
!5228 = distinct !DILexicalBlock(scope: !5226, file: !5108, line: 354, column: 9)
!5229 = !DILocation(line: 349, column: 29, scope: !5216)
!5230 = !DILocation(line: 349, column: 35, scope: !5216)
!5231 = !DILocation(line: 350, column: 21, scope: !5216)
!5232 = !DILocation(line: 350, column: 13, scope: !5224)
!5233 = !DILocation(line: 353, column: 28, scope: !5224)
!5234 = !DILocalVariable(name: "self", scope: !5235, file: !5108, line: 353, type: !895, align: 8)
!5235 = !DILexicalBlockFile(scope: !5236, file: !5108, discriminator: 0)
!5236 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1088b55685155f31E", scope: !930, file: !929, line: 1385, type: !932, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5237)
!5237 = !{!5234}
!5238 = !DILocation(line: 353, column: 28, scope: !5235, inlinedAt: !5233)
!5239 = !DILocalVariable(name: "self", scope: !5240, file: !5108, line: 353, type: !353, align: 8)
!5240 = !DILexicalBlockFile(scope: !5241, file: !5108, discriminator: 0)
!5241 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h82208e5cbd5d7609E", scope: !939, file: !929, line: 871, type: !940, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5242)
!5242 = !{!5239, !5243}
!5243 = !DILocalVariable(name: "count", scope: !5240, file: !5108, line: 353, type: !9, align: 8)
!5244 = !DILocation(line: 353, column: 28, scope: !5240, inlinedAt: !5233)
!5245 = !DILocation(line: 353, column: 47, scope: !5224)
!5246 = !DILocalVariable(name: "self", scope: !5247, file: !5108, line: 353, type: !353, align: 8)
!5247 = !DILexicalBlockFile(scope: !5248, file: !5108, discriminator: 0)
!5248 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17ha09c9658f9aa8a93E", scope: !939, file: !929, line: 453, type: !949, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5249)
!5249 = !{!5246, !5250}
!5250 = !DILocalVariable(name: "count", scope: !5247, file: !5108, line: 353, type: !951, align: 8)
!5251 = !DILocation(line: 353, column: 28, scope: !5247, inlinedAt: !5252)
!5252 = !DILocation(line: 876, column: 18, scope: !5241, inlinedAt: !5233)
!5253 = !DILocation(line: 353, column: 13, scope: !5226)
!5254 = !DILocation(line: 354, column: 19, scope: !5226)
!5255 = !DILocalVariable(name: "self", scope: !5256, file: !5108, line: 354, type: !895, align: 8)
!5256 = !DILexicalBlockFile(scope: !5257, file: !5108, discriminator: 0)
!5257 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h1332fb5ef023cedbE", scope: !930, file: !929, line: 1365, type: !1171, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5258)
!5258 = !{!5255}
!5259 = !DILocation(line: 354, column: 19, scope: !5256, inlinedAt: !5254)
!5260 = !DILocalVariable(name: "ptr", scope: !5261, file: !5108, line: 354, type: !895, align: 8)
!5261 = !DILexicalBlockFile(scope: !5262, file: !5108, discriminator: 0)
!5262 = distinct !DISubprogram(name: "metadata<[u8]>", linkageName: "_ZN4core3ptr8metadata8metadata17h9abd071cc79a3f23E", scope: !981, file: !980, line: 93, type: !1171, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5263)
!5263 = !{!5260}
!5264 = !DILocation(line: 354, column: 19, scope: !5261, inlinedAt: !5265)
!5265 = !DILocation(line: 1366, column: 9, scope: !5257, inlinedAt: !5254)
!5266 = !DILocation(line: 354, column: 13, scope: !5228)
!5267 = !DILocation(line: 355, column: 35, scope: !5228)
!5268 = !DILocalVariable(name: "data", scope: !5269, file: !5108, line: 355, type: !353, align: 8)
!5269 = !DILexicalBlockFile(scope: !5270, file: !5108, discriminator: 0)
!5270 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h4a7908e46ff95e2bE", scope: !53, file: !959, line: 695, type: !960, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5271)
!5271 = !{!5268, !5272}
!5272 = !DILocalVariable(name: "len", scope: !5269, file: !5108, line: 355, type: !9, align: 8)
!5273 = !DILocation(line: 355, column: 9, scope: !5269, inlinedAt: !5274)
!5274 = !DILocation(line: 355, column: 9, scope: !5228)
!5275 = !DILocation(line: 355, column: 40, scope: !5228)
!5276 = !DILocalVariable(name: "self", scope: !5277, file: !5108, line: 355, type: !353, align: 8)
!5277 = !DILexicalBlockFile(scope: !5278, file: !5108, discriminator: 0)
!5278 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h41c23c76c3fbf195E", scope: !939, file: !929, line: 46, type: !970, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !973, retainedNodes: !5279)
!5279 = !{!5276}
!5280 = !DILocation(line: 355, column: 9, scope: !5277, inlinedAt: !5281)
!5281 = !DILocation(line: 696, column: 20, scope: !5270, inlinedAt: !5274)
!5282 = !DILocalVariable(name: "data_address", scope: !5283, file: !5108, line: 355, type: !6, align: 8)
!5283 = !DILexicalBlockFile(scope: !5284, file: !5108, discriminator: 0)
!5284 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h43846fe7970ea603E", scope: !981, file: !980, line: 110, type: !982, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5285)
!5285 = !{!5282, !5286}
!5286 = !DILocalVariable(name: "metadata", scope: !5283, file: !5108, line: 355, type: !9, align: 8)
!5287 = !DILocation(line: 355, column: 9, scope: !5283, inlinedAt: !5288)
!5288 = !DILocation(line: 696, column: 5, scope: !5270, inlinedAt: !5274)
!5289 = !DILocation(line: 356, column: 6, scope: !5216)
!5290 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17hc4cf81ab9ad37592E", scope: !5217, file: !5108, line: 329, type: !5291, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5293)
!5291 = !DISubroutineType(types: !5292)
!5292 = !{!5029, !1150, !145}
!5293 = !{!5294, !5295}
!5294 = !DILocalVariable(name: "self", arg: 1, scope: !5290, file: !5108, line: 329, type: !1150)
!5295 = !DILocalVariable(name: "slice", arg: 2, scope: !5290, file: !5108, line: 329, type: !145)
!5296 = !DILocation(line: 329, column: 12, scope: !5290)
!5297 = !DILocation(line: 329, column: 18, scope: !5290)
!5298 = !DILocation(line: 330, column: 12, scope: !5290)
!5299 = !DILocation(line: 335, column: 13, scope: !5290)
!5300 = !DILocation(line: 330, column: 9, scope: !5290)
!5301 = !DILocation(line: 333, column: 29, scope: !5290)
!5302 = !DILocation(line: 333, column: 13, scope: !5290)
!5303 = !DILocation(line: 337, column: 6, scope: !5290)
!5304 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17h308added6b9a2813E", scope: !5217, file: !5108, line: 366, type: !5305, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5307)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!145, !1150, !145, !1109}
!5307 = !{!5308, !5309, !5310, !5312, !5313}
!5308 = !DILocalVariable(name: "self", arg: 1, scope: !5304, file: !5108, line: 366, type: !1150)
!5309 = !DILocalVariable(name: "slice", arg: 2, scope: !5304, file: !5108, line: 366, type: !145)
!5310 = !DILocalVariable(name: "start", scope: !5311, file: !5108, line: 367, type: !9, align: 8)
!5311 = distinct !DILexicalBlock(scope: !5304, file: !5108, line: 367, column: 9)
!5312 = !DILocalVariable(name: "end", scope: !5311, file: !5108, line: 367, type: !9, align: 8)
!5313 = !DILocalVariable(name: "s", scope: !5314, file: !5108, line: 369, type: !145, align: 8)
!5314 = distinct !DILexicalBlock(scope: !5311, file: !5108, line: 369, column: 13)
!5315 = !DILocation(line: 366, column: 14, scope: !5304)
!5316 = !DILocation(line: 366, column: 20, scope: !5304)
!5317 = !DILocation(line: 367, column: 41, scope: !5304)
!5318 = !DILocalVariable(name: "self", scope: !5319, file: !5108, line: 367, type: !145, align: 8)
!5319 = !DILexicalBlockFile(scope: !5320, file: !5108, discriminator: 0)
!5320 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hed2dfa42a5f15112E", scope: !4896, file: !4895, line: 157, type: !4931, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5321)
!5321 = !{!5318}
!5322 = !DILocation(line: 367, column: 41, scope: !5319, inlinedAt: !5317)
!5323 = !DILocalVariable(name: "self", scope: !5324, file: !5108, line: 367, type: !145, align: 8)
!5324 = !DILexicalBlockFile(scope: !5325, file: !5108, discriminator: 0)
!5325 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5326)
!5326 = !{!5323}
!5327 = !DILocation(line: 367, column: 41, scope: !5324, inlinedAt: !5328)
!5328 = !DILocation(line: 158, column: 9, scope: !5320, inlinedAt: !5317)
!5329 = !DILocation(line: 367, column: 28, scope: !5304)
!5330 = !DILocation(line: 367, column: 14, scope: !5304)
!5331 = !DILocation(line: 367, column: 14, scope: !5311)
!5332 = !DILocation(line: 367, column: 21, scope: !5304)
!5333 = !DILocation(line: 367, column: 21, scope: !5311)
!5334 = !DILocation(line: 368, column: 15, scope: !5311)
!5335 = !DILocation(line: 368, column: 9, scope: !5311)
!5336 = !DILocation(line: 370, column: 21, scope: !5311)
!5337 = !DILocation(line: 369, column: 18, scope: !5311)
!5338 = !DILocation(line: 369, column: 18, scope: !5314)
!5339 = !DILocation(line: 372, column: 6, scope: !5304)
!5340 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hd9eae665082e865cE", scope: !5341, file: !5108, line: 28, type: !5014, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5342)
!5341 = !DINamespace(name: "{impl#1}", scope: !5110)
!5342 = !{!5343, !5344}
!5343 = !DILocalVariable(name: "self", arg: 1, scope: !5340, file: !5108, line: 28, type: !145)
!5344 = !DILocalVariable(name: "other", arg: 2, scope: !5340, file: !5108, line: 28, type: !145)
!5345 = !DILocation(line: 28, column: 11, scope: !5340)
!5346 = !DILocation(line: 28, column: 18, scope: !5340)
!5347 = !DILocation(line: 29, column: 9, scope: !5340)
!5348 = !DILocalVariable(name: "self", scope: !5349, file: !5108, line: 29, type: !145, align: 8)
!5349 = !DILexicalBlockFile(scope: !5350, file: !5108, discriminator: 0)
!5350 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5351)
!5351 = !{!5348}
!5352 = !DILocation(line: 29, column: 9, scope: !5349, inlinedAt: !5347)
!5353 = !DILocalVariable(name: "self", scope: !5354, file: !5108, line: 29, type: !5358, align: 8)
!5354 = !DILexicalBlockFile(scope: !5355, file: !5108, discriminator: 0)
!5355 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h19e69c64e5c95079E", scope: !3676, file: !1337, line: 1512, type: !5356, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3683, retainedNodes: !5359)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{!1244, !5358, !5358}
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[u8]", baseType: !1083, size: 64, align: 64, dwarfAddressSpace: 0)
!5359 = !{!5353, !5360}
!5360 = !DILocalVariable(name: "other", scope: !5354, file: !5108, line: 29, type: !5358, align: 8)
!5361 = !DILocation(line: 29, column: 9, scope: !5354, inlinedAt: !5347)
!5362 = !DILocation(line: 29, column: 28, scope: !5340)
!5363 = !DILocalVariable(name: "self", scope: !5364, file: !5108, line: 29, type: !145, align: 8)
!5364 = !DILexicalBlockFile(scope: !5365, file: !5108, discriminator: 0)
!5365 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5366)
!5366 = !{!5363}
!5367 = !DILocation(line: 29, column: 28, scope: !5364, inlinedAt: !5362)
!5368 = !DILocation(line: 30, column: 6, scope: !5340)
!5369 = distinct !DISubprogram(name: "next<core::str::pattern::MatchOnly>", linkageName: "_ZN4core3str7pattern14TwoWaySearcher4next17h50a3afca2d487e74E", scope: !5371, file: !5370, line: 1384, type: !5381, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5434, retainedNodes: !5401)
!5370 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/pattern.rs", directory: "", checksumkind: CSK_MD5, checksum: "4413c12c327e63807a1a57fa4d03df68")
!5371 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWaySearcher", scope: !1231, file: !2, size: 512, align: 64, elements: !5372, templateParams: !28, identifier: "4b50bca5bf9b33e8385f1026830431b5")
!5372 = !{!5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380}
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos", scope: !5371, file: !2, baseType: !9, size: 64, align: 64)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos_back", scope: !5371, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5371, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "byteset", scope: !5371, file: !2, baseType: !160, size: 64, align: 64, offset: 192)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !5371, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5371, file: !2, baseType: !9, size: 64, align: 64, offset: 320)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !5371, file: !2, baseType: !9, size: 64, align: 64, offset: 384)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "memory_back", scope: !5371, file: !2, baseType: !9, size: 64, align: 64, offset: 448)
!5381 = !DISubroutineType(types: !5382)
!5382 = !{!5383, !5400, !1083, !1083, !1244}
!5383 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, usize)>", scope: !231, file: !2, size: 192, align: 64, elements: !5384, templateParams: !28, identifier: "990abf00db42140b4c63b9dd480f48ae")
!5384 = !{!5385}
!5385 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5383, file: !2, size: 192, align: 64, elements: !5386, templateParams: !28, identifier: "ca2e0d050d24abac5af96d6fe9066cdf", discriminator: !5399)
!5386 = !{!5387, !5395}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5385, file: !2, baseType: !5388, size: 192, align: 64, extraData: i64 0)
!5388 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5383, file: !2, size: 192, align: 64, elements: !28, templateParams: !5389, identifier: "1e0ff27580c54e441adf9fae1bbc4c81")
!5389 = !{!5390}
!5390 = !DITemplateTypeParameter(name: "T", type: !5391)
!5391 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !5392, templateParams: !28, identifier: "105266767139aa3a5d0ea4c0b52d55d0")
!5392 = !{!5393, !5394}
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5391, file: !2, baseType: !9, size: 64, align: 64)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !5391, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5385, file: !2, baseType: !5396, size: 192, align: 64, extraData: i64 1)
!5396 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5383, file: !2, size: 192, align: 64, elements: !5397, templateParams: !5389, identifier: "e19a3496fbff9c108ae2a0b8a3495600")
!5397 = !{!5398}
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5396, file: !2, baseType: !5391, size: 128, align: 64, offset: 64)
!5399 = !DIDerivedType(tag: DW_TAG_member, scope: !5383, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::TwoWaySearcher", baseType: !5371, size: 64, align: 64, dwarfAddressSpace: 0)
!5401 = !{!5402, !5403, !5404, !5405, !5406, !5408, !5410, !5412, !5414, !5416, !5418, !5420, !5422, !5430, !5432}
!5402 = !DILocalVariable(name: "self", arg: 1, scope: !5369, file: !5370, line: 1384, type: !5400)
!5403 = !DILocalVariable(name: "haystack", arg: 2, scope: !5369, file: !5370, line: 1384, type: !1083)
!5404 = !DILocalVariable(name: "needle", arg: 3, scope: !5369, file: !5370, line: 1384, type: !1083)
!5405 = !DILocalVariable(name: "long_period", arg: 4, scope: !5369, file: !5370, line: 1384, type: !1244)
!5406 = !DILocalVariable(name: "old_pos", scope: !5407, file: !5370, line: 1389, type: !9, align: 8)
!5407 = distinct !DILexicalBlock(scope: !5369, file: !5370, line: 1389, column: 9)
!5408 = !DILocalVariable(name: "needle_last", scope: !5409, file: !5370, line: 1390, type: !9, align: 8)
!5409 = distinct !DILexicalBlock(scope: !5407, file: !5370, line: 1390, column: 9)
!5410 = !DILocalVariable(name: "tail_byte", scope: !5411, file: !5370, line: 1395, type: !78, align: 1)
!5411 = distinct !DILexicalBlock(scope: !5409, file: !5370, line: 1395, column: 13)
!5412 = !DILocalVariable(name: "b", scope: !5413, file: !5370, line: 1396, type: !78, align: 1)
!5413 = distinct !DILexicalBlock(scope: !5409, file: !5370, line: 1396, column: 17)
!5414 = !DILocalVariable(name: "start", scope: !5415, file: !5370, line: 1417, type: !9, align: 8)
!5415 = distinct !DILexicalBlock(scope: !5411, file: !5370, line: 1417, column: 13)
!5416 = !DILocalVariable(name: "iter", scope: !5417, file: !5370, line: 1419, type: !899, align: 8)
!5417 = distinct !DILexicalBlock(scope: !5415, file: !5370, line: 1419, column: 13)
!5418 = !DILocalVariable(name: "i", scope: !5419, file: !5370, line: 1419, type: !9, align: 8)
!5419 = distinct !DILexicalBlock(scope: !5417, file: !5370, line: 1419, column: 42)
!5420 = !DILocalVariable(name: "start", scope: !5421, file: !5370, line: 1430, type: !9, align: 8)
!5421 = distinct !DILexicalBlock(scope: !5415, file: !5370, line: 1430, column: 13)
!5422 = !DILocalVariable(name: "iter", scope: !5423, file: !5370, line: 1431, type: !5424, align: 8)
!5423 = distinct !DILexicalBlock(scope: !5421, file: !5370, line: 1431, column: 13)
!5424 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !5425, file: !2, size: 128, align: 64, elements: !5426, templateParams: !5428, identifier: "7b1141d59523877979180cab23f08957")
!5425 = !DINamespace(name: "rev", scope: !1218)
!5426 = !{!5427}
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !5424, file: !2, baseType: !899, size: 128, align: 64)
!5428 = !{!5429}
!5429 = !DITemplateTypeParameter(name: "T", type: !899)
!5430 = !DILocalVariable(name: "i", scope: !5431, file: !5370, line: 1431, type: !9, align: 8)
!5431 = distinct !DILexicalBlock(scope: !5423, file: !5370, line: 1431, column: 51)
!5432 = !DILocalVariable(name: "match_pos", scope: !5433, file: !5370, line: 1442, type: !9, align: 8)
!5433 = distinct !DILexicalBlock(scope: !5421, file: !5370, line: 1442, column: 13)
!5434 = !{!5435}
!5435 = !DITemplateTypeParameter(name: "S", type: !5436)
!5436 = !DICompositeType(tag: DW_TAG_structure_type, name: "MatchOnly", scope: !1231, file: !2, align: 8, elements: !5437, templateParams: !28, identifier: "dfa07b7e51d07068d87f5c730661e904")
!5437 = !{!5438}
!5438 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5436, file: !2, align: 8, elements: !28, identifier: "311763662f4476cef18f22f79601d9ab")
!5439 = !DILocation(line: 1384, column: 16, scope: !5369)
!5440 = !DILocation(line: 1384, column: 27, scope: !5369)
!5441 = !DILocation(line: 1384, column: 44, scope: !5369)
!5442 = !DILocation(line: 1384, column: 59, scope: !5369)
!5443 = !DILocation(line: 1417, column: 17, scope: !5415)
!5444 = !DILocalVariable(name: "self", scope: !5445, file: !5370, line: 1419, type: !899, align: 8)
!5445 = !DILexicalBlockFile(scope: !5446, file: !5370, discriminator: 0)
!5446 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8f762c7645b21b78E", scope: !5448, file: !5447, line: 271, type: !5450, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5058, retainedNodes: !5452)
!5447 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!5448 = !DINamespace(name: "{impl#0}", scope: !5449)
!5449 = !DINamespace(name: "collect", scope: !4967)
!5450 = !DISubroutineType(types: !5451)
!5451 = !{!899, !899}
!5452 = !{!5444}
!5453 = !DILocation(line: 1419, column: 22, scope: !5445, inlinedAt: !5454)
!5454 = !DILocation(line: 1419, column: 22, scope: !5415)
!5455 = !DILocation(line: 1419, column: 22, scope: !5417)
!5456 = !DILocation(line: 1430, column: 17, scope: !5421)
!5457 = !DILocalVariable(name: "self", scope: !5458, file: !5370, line: 1431, type: !899, align: 8)
!5458 = !DILexicalBlockFile(scope: !5459, file: !5370, discriminator: 0)
!5459 = distinct !DISubprogram(name: "rev<core::ops::range::Range<usize>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3rev17ha99006ebe221fe88E", scope: !4965, file: !4964, line: 3161, type: !5460, scopeLine: 3161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5463, retainedNodes: !5462)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{!5424, !899}
!5462 = !{!5457}
!5463 = !{!5464}
!5464 = !DITemplateTypeParameter(name: "Self", type: !899)
!5465 = !DILocation(line: 1431, column: 22, scope: !5458, inlinedAt: !5466)
!5466 = !DILocation(line: 1431, column: 22, scope: !5421)
!5467 = !DILocation(line: 1431, column: 22, scope: !5423)
!5468 = !DILocation(line: 1389, column: 23, scope: !5369)
!5469 = !DILocation(line: 1389, column: 13, scope: !5407)
!5470 = !DILocation(line: 1390, column: 27, scope: !5407)
!5471 = !DILocation(line: 1390, column: 13, scope: !5409)
!5472 = !DILocation(line: 1391, column: 9, scope: !5409)
!5473 = !DILocation(line: 1395, column: 35, scope: !5409)
!5474 = !DILocalVariable(name: "self", scope: !5475, file: !5370, line: 1395, type: !1083, align: 8)
!5475 = !DILexicalBlockFile(scope: !5476, file: !5370, discriminator: 0)
!5476 = distinct !DISubprogram(name: "get<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hc2c9f23bed09e227E", scope: !1568, file: !1567, line: 339, type: !4919, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4923, retainedNodes: !5477)
!5477 = !{!5474, !5478}
!5478 = !DILocalVariable(name: "index", scope: !5475, file: !5370, line: 1395, type: !9, align: 8)
!5479 = !DILocation(line: 1395, column: 35, scope: !5475, inlinedAt: !5473)
!5480 = !DILocation(line: 1395, column: 48, scope: !5409)
!5481 = !DILocation(line: 1395, column: 29, scope: !5409)
!5482 = !DILocation(line: 1398, column: 21, scope: !5409)
!5483 = !DILocation(line: 1399, column: 50, scope: !5409)
!5484 = !DILocation(line: 1399, column: 28, scope: !5409)
!5485 = !DILocation(line: 1396, column: 23, scope: !5409)
!5486 = !DILocation(line: 1396, column: 23, scope: !5413)
!5487 = !DILocation(line: 1396, column: 29, scope: !5413)
!5488 = !DILocation(line: 1395, column: 17, scope: !5411)
!5489 = !DILocation(line: 1403, column: 16, scope: !5411)
!5490 = !DILocation(line: 1403, column: 52, scope: !5411)
!5491 = !DILocation(line: 1403, column: 41, scope: !5411)
!5492 = !DILocation(line: 1408, column: 17, scope: !5411)
!5493 = !DILocalVariable(name: "self", scope: !5494, file: !5370, line: 1408, type: !5497, align: 8)
!5494 = distinct !DISubprogram(name: "byteset_contains", linkageName: "_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h82b77ca134cfd3a4E", scope: !5371, file: !5370, line: 1374, type: !5495, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5498)
!5495 = !DISubroutineType(types: !5496)
!5496 = !{!1244, !5497, !78}
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::TwoWaySearcher", baseType: !5371, size: 64, align: 64, dwarfAddressSpace: 0)
!5498 = !{!5493, !5499}
!5499 = !DILocalVariable(name: "byte", scope: !5494, file: !5370, line: 1408, type: !78, align: 1)
!5500 = !DILocation(line: 1408, column: 17, scope: !5494, inlinedAt: !5492)
!5501 = !DILocation(line: 1408, column: 39, scope: !5411)
!5502 = !DILocation(line: 1408, column: 16, scope: !5411)
!5503 = !DILocation(line: 1404, column: 46, scope: !5411)
!5504 = !DILocation(line: 1404, column: 24, scope: !5411)
!5505 = !DILocation(line: 1, column: 1, scope: !5506)
!5506 = !DILexicalBlockFile(scope: !5411, file: !1610, discriminator: 0)
!5507 = !DILocation(line: 1452, column: 6, scope: !5369)
!5508 = !DILocation(line: 1418, column: 20, scope: !5411)
!5509 = !DILocation(line: 1409, column: 17, scope: !5411)
!5510 = !DILocation(line: 1410, column: 20, scope: !5411)
!5511 = !DILocation(line: 1411, column: 21, scope: !5411)
!5512 = !DILocation(line: 1410, column: 17, scope: !5411)
!5513 = !DILocation(line: 1, column: 1, scope: !5514)
!5514 = !DILexicalBlockFile(scope: !5409, file: !1610, discriminator: 0)
!5515 = !DILocation(line: 1418, column: 66, scope: !5411)
!5516 = !DILocalVariable(name: "v1", scope: !5517, file: !5370, line: 1418, type: !9, align: 8)
!5517 = !DILexicalBlockFile(scope: !5518, file: !5370, discriminator: 0)
!5518 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hde53ba2d9ea02064E", scope: !865, file: !1337, line: 1278, type: !1329, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !5519)
!5519 = !{!5516, !5520}
!5520 = !DILocalVariable(name: "v2", scope: !5517, file: !5370, line: 1418, type: !9, align: 8)
!5521 = !DILocation(line: 1418, column: 57, scope: !5517, inlinedAt: !5522)
!5522 = !DILocation(line: 1418, column: 57, scope: !5411)
!5523 = !DILocation(line: 1418, column: 81, scope: !5411)
!5524 = !DILocation(line: 1418, column: 34, scope: !5411)
!5525 = !DILocation(line: 1418, column: 17, scope: !5411)
!5526 = !DILocation(line: 1419, column: 13, scope: !5417)
!5527 = !DILocalVariable(name: "self", scope: !5528, file: !5370, line: 1419, type: !5533, align: 8)
!5528 = !DILexicalBlockFile(scope: !5529, file: !5370, discriminator: 0)
!5529 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3a580a3bc9e59043E", scope: !5530, file: !3594, line: 710, type: !5531, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5535, retainedNodes: !5534)
!5530 = !DINamespace(name: "{impl#3}", scope: !3596)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{!1740, !5533}
!5533 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<usize>", baseType: !899, size: 64, align: 64, dwarfAddressSpace: 0)
!5534 = !{!5527}
!5535 = !{!5536}
!5536 = !DITemplateTypeParameter(name: "A", type: !9)
!5537 = !DILocation(line: 1419, column: 22, scope: !5528, inlinedAt: !5455)
!5538 = !DILocation(line: 1430, column: 28, scope: !5415)
!5539 = !DILocation(line: 1419, column: 17, scope: !5417)
!5540 = !DILocation(line: 1419, column: 17, scope: !5419)
!5541 = !DILocation(line: 1420, column: 20, scope: !5419)
!5542 = !DILocation(line: 1420, column: 42, scope: !5419)
!5543 = !DILocation(line: 1420, column: 33, scope: !5419)
!5544 = !DILocation(line: 1421, column: 42, scope: !5419)
!5545 = !DILocation(line: 1421, column: 38, scope: !5419)
!5546 = !DILocation(line: 1421, column: 21, scope: !5419)
!5547 = !DILocation(line: 1422, column: 24, scope: !5419)
!5548 = !DILocation(line: 1, column: 1, scope: !5549)
!5549 = !DILexicalBlockFile(scope: !5415, file: !1610, discriminator: 0)
!5550 = !DILocation(line: 1423, column: 25, scope: !5419)
!5551 = !DILocation(line: 1422, column: 21, scope: !5419)
!5552 = !DILocation(line: 1430, column: 53, scope: !5415)
!5553 = !DILocation(line: 1430, column: 25, scope: !5415)
!5554 = !DILocation(line: 1430, column: 42, scope: !5415)
!5555 = !DILocation(line: 1431, column: 23, scope: !5421)
!5556 = !DILocation(line: 1431, column: 30, scope: !5421)
!5557 = !DILocalVariable(name: "self", scope: !5558, file: !5370, line: 1431, type: !5424, align: 8)
!5558 = !DILexicalBlockFile(scope: !5559, file: !5370, discriminator: 0)
!5559 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hddb43f71cec2130fE", scope: !5448, file: !5447, line: 271, type: !5560, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5563, retainedNodes: !5562)
!5560 = !DISubroutineType(types: !5561)
!5561 = !{!5424, !5424}
!5562 = !{!5557}
!5563 = !{!5564}
!5564 = !DITemplateTypeParameter(name: "I", type: !5424)
!5565 = !DILocation(line: 1431, column: 22, scope: !5558, inlinedAt: !5466)
!5566 = !DILocation(line: 1431, column: 13, scope: !5423)
!5567 = !DILocalVariable(name: "self", scope: !5568, file: !5370, line: 1431, type: !5574, align: 8)
!5568 = !DILexicalBlockFile(scope: !5569, file: !5370, discriminator: 0)
!5569 = distinct !DISubprogram(name: "next<core::ops::range::Range<usize>>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha1e884acc866e263E", scope: !5571, file: !5570, line: 32, type: !5572, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5058, retainedNodes: !5575)
!5570 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/adapters/rev.rs", directory: "", checksumkind: CSK_MD5, checksum: "e12e05d45ec334260b2bf4e457d8cd45")
!5571 = !DINamespace(name: "{impl#1}", scope: !5425)
!5572 = !DISubroutineType(types: !5573)
!5573 = !{!1740, !5574}
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>", baseType: !5424, size: 64, align: 64, dwarfAddressSpace: 0)
!5575 = !{!5567}
!5576 = !DILocation(line: 1431, column: 22, scope: !5568, inlinedAt: !5467)
!5577 = !DILocalVariable(name: "self", scope: !5578, file: !5370, line: 1431, type: !5533, align: 8)
!5578 = !DILexicalBlockFile(scope: !5579, file: !5370, discriminator: 0)
!5579 = distinct !DISubprogram(name: "next_back<usize>", linkageName: "_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h7764dd90f5ccf93fE", scope: !5580, file: !3594, line: 818, type: !5531, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5535, retainedNodes: !5581)
!5580 = !DINamespace(name: "{impl#4}", scope: !3596)
!5581 = !{!5577}
!5582 = !DILocation(line: 1431, column: 22, scope: !5578, inlinedAt: !5583)
!5583 = !DILocation(line: 33, column: 9, scope: !5569, inlinedAt: !5467)
!5584 = !DILocation(line: 1442, column: 29, scope: !5421)
!5585 = !DILocation(line: 1442, column: 17, scope: !5433)
!5586 = !DILocation(line: 1445, column: 13, scope: !5433)
!5587 = !DILocation(line: 1446, column: 16, scope: !5433)
!5588 = !DILocation(line: 1431, column: 17, scope: !5423)
!5589 = !DILocation(line: 1431, column: 17, scope: !5431)
!5590 = !DILocation(line: 1432, column: 20, scope: !5431)
!5591 = !DILocation(line: 1432, column: 42, scope: !5431)
!5592 = !DILocation(line: 1432, column: 33, scope: !5431)
!5593 = !DILocation(line: 1433, column: 38, scope: !5431)
!5594 = !DILocation(line: 1433, column: 21, scope: !5431)
!5595 = !DILocation(line: 1434, column: 24, scope: !5431)
!5596 = !DILocation(line: 1435, column: 54, scope: !5431)
!5597 = !DILocation(line: 1435, column: 25, scope: !5431)
!5598 = !DILocation(line: 1434, column: 21, scope: !5431)
!5599 = !DILocation(line: 1450, column: 43, scope: !5433)
!5600 = !DILocation(line: 1450, column: 20, scope: !5433)
!5601 = !DILocation(line: 1447, column: 17, scope: !5433)
!5602 = !DILocation(line: 1446, column: 13, scope: !5433)
!5603 = distinct !DISubprogram(name: "next<core::str::pattern::RejectAndMatch>", linkageName: "_ZN4core3str7pattern14TwoWaySearcher4next17he070564a8339565aE", scope: !5371, file: !5370, line: 1384, type: !5604, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5650, retainedNodes: !5623)
!5604 = !DISubroutineType(types: !5605)
!5605 = !{!5606, !5400, !1083, !1083, !1244}
!5606 = !DICompositeType(tag: DW_TAG_structure_type, name: "SearchStep", scope: !1231, file: !2, size: 192, align: 64, elements: !5607, templateParams: !28, identifier: "d9fee1572ca7c936e6009a15a28d330e")
!5607 = !{!5608}
!5608 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5606, file: !2, size: 192, align: 64, elements: !5609, templateParams: !28, identifier: "3a9f12419d689b49d54f2dcbe93f0b73", discriminator: !5622)
!5609 = !{!5610, !5615, !5620}
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "Match", scope: !5608, file: !2, baseType: !5611, size: 192, align: 64, extraData: i64 0)
!5611 = !DICompositeType(tag: DW_TAG_structure_type, name: "Match", scope: !5606, file: !2, size: 192, align: 64, elements: !5612, templateParams: !28, identifier: "31212d05181959c84b28f896d93e293d")
!5612 = !{!5613, !5614}
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5611, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !5611, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "Reject", scope: !5608, file: !2, baseType: !5616, size: 192, align: 64, extraData: i64 1)
!5616 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reject", scope: !5606, file: !2, size: 192, align: 64, elements: !5617, templateParams: !28, identifier: "d9794c47eeca6169d7dd2f18ab47bce6")
!5617 = !{!5618, !5619}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5616, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !5616, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "Done", scope: !5608, file: !2, baseType: !5621, size: 192, align: 64, extraData: i64 2)
!5621 = !DICompositeType(tag: DW_TAG_structure_type, name: "Done", scope: !5606, file: !2, size: 192, align: 64, elements: !28, identifier: "e9478815bdfcd63a57de269e3216947")
!5622 = !DIDerivedType(tag: DW_TAG_member, scope: !5606, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!5623 = !{!5624, !5625, !5626, !5627, !5628, !5630, !5632, !5634, !5636, !5638, !5640, !5642, !5644, !5646, !5648}
!5624 = !DILocalVariable(name: "self", arg: 1, scope: !5603, file: !5370, line: 1384, type: !5400)
!5625 = !DILocalVariable(name: "haystack", arg: 2, scope: !5603, file: !5370, line: 1384, type: !1083)
!5626 = !DILocalVariable(name: "needle", arg: 3, scope: !5603, file: !5370, line: 1384, type: !1083)
!5627 = !DILocalVariable(name: "long_period", arg: 4, scope: !5603, file: !5370, line: 1384, type: !1244)
!5628 = !DILocalVariable(name: "old_pos", scope: !5629, file: !5370, line: 1389, type: !9, align: 8)
!5629 = distinct !DILexicalBlock(scope: !5603, file: !5370, line: 1389, column: 9)
!5630 = !DILocalVariable(name: "needle_last", scope: !5631, file: !5370, line: 1390, type: !9, align: 8)
!5631 = distinct !DILexicalBlock(scope: !5629, file: !5370, line: 1390, column: 9)
!5632 = !DILocalVariable(name: "tail_byte", scope: !5633, file: !5370, line: 1395, type: !78, align: 1)
!5633 = distinct !DILexicalBlock(scope: !5631, file: !5370, line: 1395, column: 13)
!5634 = !DILocalVariable(name: "b", scope: !5635, file: !5370, line: 1396, type: !78, align: 1)
!5635 = distinct !DILexicalBlock(scope: !5631, file: !5370, line: 1396, column: 17)
!5636 = !DILocalVariable(name: "start", scope: !5637, file: !5370, line: 1417, type: !9, align: 8)
!5637 = distinct !DILexicalBlock(scope: !5633, file: !5370, line: 1417, column: 13)
!5638 = !DILocalVariable(name: "iter", scope: !5639, file: !5370, line: 1419, type: !899, align: 8)
!5639 = distinct !DILexicalBlock(scope: !5637, file: !5370, line: 1419, column: 13)
!5640 = !DILocalVariable(name: "i", scope: !5641, file: !5370, line: 1419, type: !9, align: 8)
!5641 = distinct !DILexicalBlock(scope: !5639, file: !5370, line: 1419, column: 42)
!5642 = !DILocalVariable(name: "start", scope: !5643, file: !5370, line: 1430, type: !9, align: 8)
!5643 = distinct !DILexicalBlock(scope: !5637, file: !5370, line: 1430, column: 13)
!5644 = !DILocalVariable(name: "iter", scope: !5645, file: !5370, line: 1431, type: !5424, align: 8)
!5645 = distinct !DILexicalBlock(scope: !5643, file: !5370, line: 1431, column: 13)
!5646 = !DILocalVariable(name: "i", scope: !5647, file: !5370, line: 1431, type: !9, align: 8)
!5647 = distinct !DILexicalBlock(scope: !5645, file: !5370, line: 1431, column: 51)
!5648 = !DILocalVariable(name: "match_pos", scope: !5649, file: !5370, line: 1442, type: !9, align: 8)
!5649 = distinct !DILexicalBlock(scope: !5643, file: !5370, line: 1442, column: 13)
!5650 = !{!5651}
!5651 = !DITemplateTypeParameter(name: "S", type: !5652)
!5652 = !DICompositeType(tag: DW_TAG_structure_type, name: "RejectAndMatch", scope: !1231, file: !2, align: 8, elements: !5653, templateParams: !28, identifier: "2fb956ce7af5db5ca1c7382b2e98b309")
!5653 = !{!5654}
!5654 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5652, file: !2, align: 8, elements: !28, identifier: "500a5dc57c233c2c69dd548e739d3988")
!5655 = !DILocation(line: 1384, column: 16, scope: !5603)
!5656 = !DILocation(line: 1384, column: 27, scope: !5603)
!5657 = !DILocation(line: 1384, column: 44, scope: !5603)
!5658 = !DILocation(line: 1384, column: 59, scope: !5603)
!5659 = !DILocation(line: 1417, column: 17, scope: !5637)
!5660 = !DILocalVariable(name: "self", scope: !5661, file: !5370, line: 1419, type: !899, align: 8)
!5661 = !DILexicalBlockFile(scope: !5662, file: !5370, discriminator: 0)
!5662 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h8f762c7645b21b78E", scope: !5448, file: !5447, line: 271, type: !5450, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5058, retainedNodes: !5663)
!5663 = !{!5660}
!5664 = !DILocation(line: 1419, column: 22, scope: !5661, inlinedAt: !5665)
!5665 = !DILocation(line: 1419, column: 22, scope: !5637)
!5666 = !DILocation(line: 1419, column: 22, scope: !5639)
!5667 = !DILocation(line: 1430, column: 17, scope: !5643)
!5668 = !DILocalVariable(name: "self", scope: !5669, file: !5370, line: 1431, type: !899, align: 8)
!5669 = !DILexicalBlockFile(scope: !5670, file: !5370, discriminator: 0)
!5670 = distinct !DISubprogram(name: "rev<core::ops::range::Range<usize>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3rev17ha99006ebe221fe88E", scope: !4965, file: !4964, line: 3161, type: !5460, scopeLine: 3161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5463, retainedNodes: !5671)
!5671 = !{!5668}
!5672 = !DILocation(line: 1431, column: 22, scope: !5669, inlinedAt: !5673)
!5673 = !DILocation(line: 1431, column: 22, scope: !5643)
!5674 = !DILocation(line: 1431, column: 22, scope: !5645)
!5675 = !DILocation(line: 1389, column: 23, scope: !5603)
!5676 = !DILocation(line: 1389, column: 13, scope: !5629)
!5677 = !DILocation(line: 1390, column: 27, scope: !5629)
!5678 = !DILocation(line: 1390, column: 13, scope: !5631)
!5679 = !DILocation(line: 1391, column: 9, scope: !5631)
!5680 = !DILocation(line: 1395, column: 35, scope: !5631)
!5681 = !DILocalVariable(name: "self", scope: !5682, file: !5370, line: 1395, type: !1083, align: 8)
!5682 = !DILexicalBlockFile(scope: !5683, file: !5370, discriminator: 0)
!5683 = distinct !DISubprogram(name: "get<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hc2c9f23bed09e227E", scope: !1568, file: !1567, line: 339, type: !4919, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4923, retainedNodes: !5684)
!5684 = !{!5681, !5685}
!5685 = !DILocalVariable(name: "index", scope: !5682, file: !5370, line: 1395, type: !9, align: 8)
!5686 = !DILocation(line: 1395, column: 35, scope: !5682, inlinedAt: !5680)
!5687 = !DILocation(line: 1395, column: 48, scope: !5631)
!5688 = !DILocation(line: 1395, column: 29, scope: !5631)
!5689 = !DILocation(line: 1398, column: 21, scope: !5631)
!5690 = !DILocation(line: 1399, column: 50, scope: !5631)
!5691 = !DILocation(line: 1399, column: 28, scope: !5631)
!5692 = !DILocation(line: 1396, column: 23, scope: !5631)
!5693 = !DILocation(line: 1396, column: 23, scope: !5635)
!5694 = !DILocation(line: 1396, column: 29, scope: !5635)
!5695 = !DILocation(line: 1395, column: 17, scope: !5633)
!5696 = !DILocation(line: 1403, column: 16, scope: !5633)
!5697 = !DILocation(line: 1403, column: 52, scope: !5633)
!5698 = !DILocation(line: 1403, column: 41, scope: !5633)
!5699 = !DILocation(line: 1408, column: 17, scope: !5633)
!5700 = !DILocalVariable(name: "self", scope: !5701, file: !5370, line: 1408, type: !5497, align: 8)
!5701 = distinct !DISubprogram(name: "byteset_contains", linkageName: "_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17h82b77ca134cfd3a4E", scope: !5371, file: !5370, line: 1374, type: !5495, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5702)
!5702 = !{!5700, !5703}
!5703 = !DILocalVariable(name: "byte", scope: !5701, file: !5370, line: 1408, type: !78, align: 1)
!5704 = !DILocation(line: 1408, column: 17, scope: !5701, inlinedAt: !5699)
!5705 = !DILocation(line: 1408, column: 39, scope: !5633)
!5706 = !DILocation(line: 1408, column: 16, scope: !5633)
!5707 = !DILocation(line: 1404, column: 46, scope: !5633)
!5708 = !DILocation(line: 1404, column: 24, scope: !5633)
!5709 = !DILocation(line: 1, column: 1, scope: !5710)
!5710 = !DILexicalBlockFile(scope: !5633, file: !1610, discriminator: 0)
!5711 = !DILocation(line: 1452, column: 6, scope: !5603)
!5712 = !DILocation(line: 1418, column: 20, scope: !5633)
!5713 = !DILocation(line: 1409, column: 17, scope: !5633)
!5714 = !DILocation(line: 1410, column: 20, scope: !5633)
!5715 = !DILocation(line: 1411, column: 21, scope: !5633)
!5716 = !DILocation(line: 1410, column: 17, scope: !5633)
!5717 = !DILocation(line: 1, column: 1, scope: !5718)
!5718 = !DILexicalBlockFile(scope: !5631, file: !1610, discriminator: 0)
!5719 = !DILocation(line: 1418, column: 66, scope: !5633)
!5720 = !DILocalVariable(name: "v1", scope: !5721, file: !5370, line: 1418, type: !9, align: 8)
!5721 = !DILexicalBlockFile(scope: !5722, file: !5370, discriminator: 0)
!5722 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hde53ba2d9ea02064E", scope: !865, file: !1337, line: 1278, type: !1329, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !5723)
!5723 = !{!5720, !5724}
!5724 = !DILocalVariable(name: "v2", scope: !5721, file: !5370, line: 1418, type: !9, align: 8)
!5725 = !DILocation(line: 1418, column: 57, scope: !5721, inlinedAt: !5726)
!5726 = !DILocation(line: 1418, column: 57, scope: !5633)
!5727 = !DILocation(line: 1418, column: 81, scope: !5633)
!5728 = !DILocation(line: 1418, column: 34, scope: !5633)
!5729 = !DILocation(line: 1418, column: 17, scope: !5633)
!5730 = !DILocation(line: 1419, column: 13, scope: !5639)
!5731 = !DILocalVariable(name: "self", scope: !5732, file: !5370, line: 1419, type: !5533, align: 8)
!5732 = !DILexicalBlockFile(scope: !5733, file: !5370, discriminator: 0)
!5733 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h3a580a3bc9e59043E", scope: !5530, file: !3594, line: 710, type: !5531, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5535, retainedNodes: !5734)
!5734 = !{!5731}
!5735 = !DILocation(line: 1419, column: 22, scope: !5732, inlinedAt: !5666)
!5736 = !DILocation(line: 1430, column: 28, scope: !5637)
!5737 = !DILocation(line: 1419, column: 17, scope: !5639)
!5738 = !DILocation(line: 1419, column: 17, scope: !5641)
!5739 = !DILocation(line: 1420, column: 20, scope: !5641)
!5740 = !DILocation(line: 1420, column: 42, scope: !5641)
!5741 = !DILocation(line: 1420, column: 33, scope: !5641)
!5742 = !DILocation(line: 1421, column: 42, scope: !5641)
!5743 = !DILocation(line: 1421, column: 38, scope: !5641)
!5744 = !DILocation(line: 1421, column: 21, scope: !5641)
!5745 = !DILocation(line: 1422, column: 24, scope: !5641)
!5746 = !DILocation(line: 1, column: 1, scope: !5747)
!5747 = !DILexicalBlockFile(scope: !5637, file: !1610, discriminator: 0)
!5748 = !DILocation(line: 1423, column: 25, scope: !5641)
!5749 = !DILocation(line: 1422, column: 21, scope: !5641)
!5750 = !DILocation(line: 1430, column: 53, scope: !5637)
!5751 = !DILocation(line: 1430, column: 25, scope: !5637)
!5752 = !DILocation(line: 1430, column: 42, scope: !5637)
!5753 = !DILocation(line: 1431, column: 23, scope: !5643)
!5754 = !DILocation(line: 1431, column: 30, scope: !5643)
!5755 = !DILocalVariable(name: "self", scope: !5756, file: !5370, line: 1431, type: !5424, align: 8)
!5756 = !DILexicalBlockFile(scope: !5757, file: !5370, discriminator: 0)
!5757 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hddb43f71cec2130fE", scope: !5448, file: !5447, line: 271, type: !5560, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5563, retainedNodes: !5758)
!5758 = !{!5755}
!5759 = !DILocation(line: 1431, column: 22, scope: !5756, inlinedAt: !5673)
!5760 = !DILocation(line: 1431, column: 13, scope: !5645)
!5761 = !DILocalVariable(name: "self", scope: !5762, file: !5370, line: 1431, type: !5574, align: 8)
!5762 = !DILexicalBlockFile(scope: !5763, file: !5370, discriminator: 0)
!5763 = distinct !DISubprogram(name: "next<core::ops::range::Range<usize>>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha1e884acc866e263E", scope: !5571, file: !5570, line: 32, type: !5572, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5058, retainedNodes: !5764)
!5764 = !{!5761}
!5765 = !DILocation(line: 1431, column: 22, scope: !5762, inlinedAt: !5674)
!5766 = !DILocalVariable(name: "self", scope: !5767, file: !5370, line: 1431, type: !5533, align: 8)
!5767 = !DILexicalBlockFile(scope: !5768, file: !5370, discriminator: 0)
!5768 = distinct !DISubprogram(name: "next_back<usize>", linkageName: "_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h7764dd90f5ccf93fE", scope: !5580, file: !3594, line: 818, type: !5531, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5535, retainedNodes: !5769)
!5769 = !{!5766}
!5770 = !DILocation(line: 1431, column: 22, scope: !5767, inlinedAt: !5771)
!5771 = !DILocation(line: 33, column: 9, scope: !5763, inlinedAt: !5674)
!5772 = !DILocation(line: 1442, column: 29, scope: !5643)
!5773 = !DILocation(line: 1442, column: 17, scope: !5649)
!5774 = !DILocation(line: 1445, column: 13, scope: !5649)
!5775 = !DILocation(line: 1446, column: 16, scope: !5649)
!5776 = !DILocation(line: 1431, column: 17, scope: !5645)
!5777 = !DILocation(line: 1431, column: 17, scope: !5647)
!5778 = !DILocation(line: 1432, column: 20, scope: !5647)
!5779 = !DILocation(line: 1432, column: 42, scope: !5647)
!5780 = !DILocation(line: 1432, column: 33, scope: !5647)
!5781 = !DILocation(line: 1433, column: 38, scope: !5647)
!5782 = !DILocation(line: 1433, column: 21, scope: !5647)
!5783 = !DILocation(line: 1434, column: 24, scope: !5647)
!5784 = !DILocation(line: 1435, column: 54, scope: !5647)
!5785 = !DILocation(line: 1435, column: 25, scope: !5647)
!5786 = !DILocation(line: 1434, column: 21, scope: !5647)
!5787 = !DILocation(line: 1450, column: 43, scope: !5649)
!5788 = !DILocation(line: 1450, column: 20, scope: !5649)
!5789 = !DILocation(line: 1447, column: 17, scope: !5649)
!5790 = !DILocation(line: 1446, column: 13, scope: !5649)
!5791 = distinct !DISubprogram(name: "is_contained_in<&str>", linkageName: "_ZN4core3str7pattern7Pattern15is_contained_in17hbf42f533dd02bce9E", scope: !5792, file: !5370, line: 108, type: !5014, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5796, retainedNodes: !5793)
!5792 = !DINamespace(name: "Pattern", scope: !1231)
!5793 = !{!5794, !5795}
!5794 = !DILocalVariable(name: "self", arg: 1, scope: !5791, file: !5370, line: 108, type: !145)
!5795 = !DILocalVariable(name: "haystack", arg: 2, scope: !5791, file: !5370, line: 108, type: !145)
!5796 = !{!5797}
!5797 = !DITemplateTypeParameter(name: "Self", type: !145)
!5798 = !DILocation(line: 108, column: 24, scope: !5791)
!5799 = !DILocation(line: 108, column: 30, scope: !5791)
!5800 = !DILocation(line: 109, column: 9, scope: !5791)
!5801 = !DILocation(line: 110, column: 5, scope: !5791)
!5802 = !DILocalVariable(name: "self", scope: !5803, file: !5370, line: 109, type: !5807, align: 8)
!5803 = !DILexicalBlockFile(scope: !5804, file: !5370, discriminator: 0)
!5804 = distinct !DISubprogram(name: "is_some<(usize, usize)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17h698ff44cf4f0a310E", scope: !5383, file: !1848, line: 553, type: !5805, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5389, retainedNodes: !5808)
!5805 = !DISubroutineType(types: !5806)
!5806 = !{!1244, !5807}
!5807 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<(usize, usize)>", baseType: !5383, size: 64, align: 64, dwarfAddressSpace: 0)
!5808 = !{!5802}
!5809 = !DILocation(line: 109, column: 9, scope: !5803, inlinedAt: !5800)
!5810 = !DILocation(line: 108, column: 5, scope: !5791)
!5811 = !DILocation(line: 110, column: 6, scope: !5791)
!5812 = distinct !DISubprogram(name: "encode_utf8_raw", linkageName: "_ZN4core4char7methods15encode_utf8_raw17h27513490047024c0E", scope: !3745, file: !3743, line: 1675, type: !5813, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !5815)
!5813 = !DISubroutineType(types: !5814)
!5814 = !{!1131, !275, !1131}
!5815 = !{!5816, !5817, !5818, !5820, !5823, !5825, !5826, !5828, !5829, !5830, !5832, !5833, !5834}
!5816 = !DILocalVariable(name: "code", arg: 1, scope: !5812, file: !3743, line: 1675, type: !275)
!5817 = !DILocalVariable(name: "dst", arg: 2, scope: !5812, file: !3743, line: 1675, type: !1131)
!5818 = !DILocalVariable(name: "len", scope: !5819, file: !3743, line: 1676, type: !9, align: 8)
!5819 = distinct !DILexicalBlock(scope: !5812, file: !3743, line: 1676, column: 5)
!5820 = !DILocalVariable(name: "a", scope: !5821, file: !3743, line: 1678, type: !5822, align: 8)
!5821 = distinct !DILexicalBlock(scope: !5819, file: !3743, line: 1678, column: 9)
!5822 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !78, size: 64, align: 64, dwarfAddressSpace: 0)
!5823 = !DILocalVariable(name: "a", scope: !5824, file: !3743, line: 1681, type: !5822, align: 8)
!5824 = distinct !DILexicalBlock(scope: !5819, file: !3743, line: 1681, column: 9)
!5825 = !DILocalVariable(name: "b", scope: !5824, file: !3743, line: 1681, type: !5822, align: 8)
!5826 = !DILocalVariable(name: "a", scope: !5827, file: !3743, line: 1685, type: !5822, align: 8)
!5827 = distinct !DILexicalBlock(scope: !5819, file: !3743, line: 1685, column: 9)
!5828 = !DILocalVariable(name: "b", scope: !5827, file: !3743, line: 1685, type: !5822, align: 8)
!5829 = !DILocalVariable(name: "c", scope: !5827, file: !3743, line: 1685, type: !5822, align: 8)
!5830 = !DILocalVariable(name: "a", scope: !5831, file: !3743, line: 1690, type: !5822, align: 8)
!5831 = distinct !DILexicalBlock(scope: !5819, file: !3743, line: 1690, column: 9)
!5832 = !DILocalVariable(name: "b", scope: !5831, file: !3743, line: 1690, type: !5822, align: 8)
!5833 = !DILocalVariable(name: "c", scope: !5831, file: !3743, line: 1690, type: !5822, align: 8)
!5834 = !DILocalVariable(name: "d", scope: !5831, file: !3743, line: 1690, type: !5822, align: 8)
!5835 = !DILocation(line: 1675, column: 24, scope: !5812)
!5836 = !DILocation(line: 1675, column: 35, scope: !5812)
!5837 = !DILocation(line: 1676, column: 9, scope: !5819)
!5838 = !DILocalVariable(name: "index", scope: !5839, file: !3743, line: 1677, type: !5844, align: 1)
!5839 = !DILexicalBlockFile(scope: !5840, file: !3743, discriminator: 0)
!5840 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h6bf38a238689ec45E", scope: !5841, file: !889, line: 29, type: !5842, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5847, retainedNodes: !5845)
!5841 = !DINamespace(name: "{impl#1}", scope: !891)
!5842 = !DISubroutineType(types: !5843)
!5843 = !{!1131, !1131, !5844, !1109}
!5844 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !900, file: !2, align: 8, elements: !28, identifier: "63a67109926f3a3dc00488fbc228c0f9")
!5845 = !{!5846, !5838}
!5846 = !DILocalVariable(name: "self", scope: !5839, file: !3743, line: 1677, type: !1131, align: 8)
!5847 = !{!333, !5848}
!5848 = !DITemplateTypeParameter(name: "I", type: !5844)
!5849 = !DILocation(line: 1677, column: 22, scope: !5839, inlinedAt: !5850)
!5850 = !DILocation(line: 1677, column: 22, scope: !5819)
!5851 = !DILocalVariable(name: "index", scope: !5852, file: !3743, line: 1703, type: !5856, align: 8)
!5852 = !DILexicalBlockFile(scope: !5853, file: !3743, discriminator: 0)
!5853 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hd88fe65b2a28af8aE", scope: !5841, file: !889, line: 29, type: !5854, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5861, retainedNodes: !5859)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{!1131, !1131, !5856, !1109}
!5856 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !900, file: !2, size: 64, align: 64, elements: !5857, templateParams: !905, identifier: "e254bd9803ca1fe3c70093646958bde2")
!5857 = !{!5858}
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5856, file: !2, baseType: !9, size: 64, align: 64)
!5859 = !{!5860, !5851}
!5860 = !DILocalVariable(name: "self", scope: !5852, file: !3743, line: 1703, type: !1131, align: 8)
!5861 = !{!333, !5862}
!5862 = !DITemplateTypeParameter(name: "I", type: !5856)
!5863 = !DILocation(line: 1703, column: 10, scope: !5852, inlinedAt: !5864)
!5864 = !DILocation(line: 1703, column: 10, scope: !5819)
!5865 = !DILocalVariable(name: "self", scope: !5866, file: !3743, line: 1677, type: !5844, align: 1)
!5866 = !DILexicalBlockFile(scope: !5867, file: !3743, discriminator: 0)
!5867 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h526ca2bff07be67dE", scope: !5868, file: !889, line: 437, type: !5869, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5871)
!5868 = !DINamespace(name: "{impl#6}", scope: !891)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{!1131, !5844, !1131, !1109}
!5871 = !{!5865, !5872}
!5872 = !DILocalVariable(name: "slice", scope: !5866, file: !3743, line: 1677, type: !1131, align: 8)
!5873 = !DILocation(line: 1677, column: 22, scope: !5866, inlinedAt: !5874)
!5874 = !DILocation(line: 30, column: 9, scope: !5840, inlinedAt: !5850)
!5875 = !DILocation(line: 1676, column: 24, scope: !5812)
!5876 = !DILocation(line: 1676, column: 15, scope: !5812)
!5877 = !DILocation(line: 1677, column: 12, scope: !5819)
!5878 = !DILocation(line: 1677, column: 11, scope: !5819)
!5879 = !DILocation(line: 1677, column: 5, scope: !5819)
!5880 = !DILocation(line: 1696, column: 14, scope: !5819)
!5881 = !DILocalVariable(name: "x", scope: !5882, file: !3743, line: 1696, type: !918, align: 8)
!5882 = !DILexicalBlockFile(scope: !5883, file: !3743, discriminator: 0)
!5883 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hd10fe4bfc804b605E", scope: !1707, file: !2158, line: 318, type: !5884, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !5886)
!5884 = !DISubroutineType(types: !5885)
!5885 = !{!1707, !918}
!5886 = !{!5881}
!5887 = !DILocation(line: 1696, column: 14, scope: !5882, inlinedAt: !5888)
!5888 = !DILocation(line: 1698, column: 13, scope: !5819)
!5889 = !DILocalVariable(name: "x", scope: !5890, file: !3743, line: 1696, type: !918, align: 8)
!5890 = !DILexicalBlockFile(scope: !5891, file: !3743, discriminator: 0)
!5891 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17hd96f3ff4011a1b3cE", scope: !1707, file: !2158, line: 329, type: !5892, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !5897)
!5892 = !DISubroutineType(types: !5893)
!5893 = !{!1707, !918, !5894}
!5894 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !5895, size: 64, align: 64, dwarfAddressSpace: 0)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{!1717, !918, !1733}
!5897 = !{!5889, !5898}
!5898 = !DILocalVariable(name: "f", scope: !5890, file: !3743, line: 1696, type: !5894, align: 8)
!5899 = !DILocation(line: 1696, column: 14, scope: !5890, inlinedAt: !5900)
!5900 = !DILocation(line: 319, column: 13, scope: !5883, inlinedAt: !5888)
!5901 = !DILocation(line: 1678, column: 13, scope: !5819)
!5902 = !DILocation(line: 1681, column: 13, scope: !5819)
!5903 = !DILocation(line: 1685, column: 13, scope: !5819)
!5904 = !DILocation(line: 1690, column: 13, scope: !5819)
!5905 = !DILocation(line: 1690, column: 14, scope: !5819)
!5906 = !DILocation(line: 1690, column: 14, scope: !5831)
!5907 = !DILocation(line: 1690, column: 17, scope: !5819)
!5908 = !DILocation(line: 1690, column: 17, scope: !5831)
!5909 = !DILocation(line: 1690, column: 20, scope: !5819)
!5910 = !DILocation(line: 1690, column: 20, scope: !5831)
!5911 = !DILocation(line: 1690, column: 23, scope: !5819)
!5912 = !DILocation(line: 1690, column: 23, scope: !5831)
!5913 = !DILocation(line: 1691, column: 19, scope: !5831)
!5914 = !DILocation(line: 1691, column: 18, scope: !5831)
!5915 = !DILocation(line: 1691, column: 13, scope: !5831)
!5916 = !DILocation(line: 1692, column: 19, scope: !5831)
!5917 = !DILocation(line: 1692, column: 18, scope: !5831)
!5918 = !DILocation(line: 1692, column: 13, scope: !5831)
!5919 = !DILocation(line: 1693, column: 19, scope: !5831)
!5920 = !DILocation(line: 1693, column: 18, scope: !5831)
!5921 = !DILocation(line: 1693, column: 13, scope: !5831)
!5922 = !DILocation(line: 1694, column: 19, scope: !5831)
!5923 = !DILocation(line: 1694, column: 18, scope: !5831)
!5924 = !DILocation(line: 1694, column: 13, scope: !5831)
!5925 = !DILocation(line: 1695, column: 9, scope: !5819)
!5926 = !DILocation(line: 1703, column: 16, scope: !5819)
!5927 = !DILocation(line: 1703, column: 14, scope: !5819)
!5928 = !DILocalVariable(name: "self", scope: !5929, file: !3743, line: 1703, type: !5856, align: 8)
!5929 = !DILexicalBlockFile(scope: !5930, file: !3743, discriminator: 0)
!5930 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h5d26a8ddd29a032eE", scope: !5931, file: !889, line: 355, type: !5932, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !5934)
!5931 = !DINamespace(name: "{impl#4}", scope: !891)
!5932 = !DISubroutineType(types: !5933)
!5933 = !{!1131, !5856, !1131, !1109}
!5934 = !{!5928, !5935}
!5935 = !DILocalVariable(name: "slice", scope: !5929, file: !3743, line: 1703, type: !1131, align: 8)
!5936 = !DILocation(line: 1703, column: 10, scope: !5929, inlinedAt: !5937)
!5937 = !DILocation(line: 30, column: 9, scope: !5853, inlinedAt: !5864)
!5938 = !DILocation(line: 1685, column: 14, scope: !5819)
!5939 = !DILocation(line: 1685, column: 14, scope: !5827)
!5940 = !DILocation(line: 1685, column: 17, scope: !5819)
!5941 = !DILocation(line: 1685, column: 17, scope: !5827)
!5942 = !DILocation(line: 1685, column: 20, scope: !5819)
!5943 = !DILocation(line: 1685, column: 20, scope: !5827)
!5944 = !DILocation(line: 1686, column: 19, scope: !5827)
!5945 = !DILocation(line: 1686, column: 18, scope: !5827)
!5946 = !DILocation(line: 1686, column: 13, scope: !5827)
!5947 = !DILocation(line: 1687, column: 19, scope: !5827)
!5948 = !DILocation(line: 1687, column: 18, scope: !5827)
!5949 = !DILocation(line: 1687, column: 13, scope: !5827)
!5950 = !DILocation(line: 1688, column: 19, scope: !5827)
!5951 = !DILocation(line: 1688, column: 18, scope: !5827)
!5952 = !DILocation(line: 1688, column: 13, scope: !5827)
!5953 = !DILocation(line: 1689, column: 9, scope: !5819)
!5954 = !DILocation(line: 1681, column: 14, scope: !5819)
!5955 = !DILocation(line: 1681, column: 14, scope: !5824)
!5956 = !DILocation(line: 1681, column: 17, scope: !5819)
!5957 = !DILocation(line: 1681, column: 17, scope: !5824)
!5958 = !DILocation(line: 1682, column: 19, scope: !5824)
!5959 = !DILocation(line: 1682, column: 18, scope: !5824)
!5960 = !DILocation(line: 1682, column: 13, scope: !5824)
!5961 = !DILocation(line: 1683, column: 19, scope: !5824)
!5962 = !DILocation(line: 1683, column: 18, scope: !5824)
!5963 = !DILocation(line: 1683, column: 13, scope: !5824)
!5964 = !DILocation(line: 1684, column: 9, scope: !5819)
!5965 = !DILocation(line: 1678, column: 14, scope: !5819)
!5966 = !DILocation(line: 1678, column: 14, scope: !5821)
!5967 = !DILocation(line: 1679, column: 18, scope: !5821)
!5968 = !DILocation(line: 1679, column: 13, scope: !5821)
!5969 = !DILocation(line: 1680, column: 9, scope: !5819)
!5970 = !DILocation(line: 1704, column: 2, scope: !5812)
!5971 = !DILocalVariable(name: "x", scope: !5972, file: !3743, line: 1696, type: !576, align: 8)
!5972 = !DILexicalBlockFile(scope: !5973, file: !3743, discriminator: 0)
!5973 = distinct !DISubprogram(name: "new_upper_hex<u32>", linkageName: "_ZN4core3fmt10ArgumentV113new_upper_hex17he06ad3cbaa7a215bE", scope: !1707, file: !2158, line: 318, type: !5974, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !276, retainedNodes: !5976)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!1707, !576}
!5976 = !{!5971}
!5977 = !DILocation(line: 1696, column: 14, scope: !5972, inlinedAt: !5978)
!5978 = !DILocation(line: 1699, column: 13, scope: !5819)
!5979 = !DILocalVariable(name: "x", scope: !5980, file: !3743, line: 1696, type: !576, align: 8)
!5980 = !DILexicalBlockFile(scope: !5981, file: !3743, discriminator: 0)
!5981 = distinct !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt10ArgumentV13new17hc4525c75802e2c16E", scope: !1707, file: !2158, line: 329, type: !5982, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !276, retainedNodes: !5985)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!1707, !576, !5984}
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !3713, size: 64, align: 64, dwarfAddressSpace: 0)
!5985 = !{!5979, !5986}
!5986 = !DILocalVariable(name: "f", scope: !5980, file: !3743, line: 1696, type: !5984, align: 8)
!5987 = !DILocation(line: 1696, column: 14, scope: !5980, inlinedAt: !5988)
!5988 = !DILocation(line: 319, column: 13, scope: !5973, inlinedAt: !5978)
!5989 = !DILocation(line: 1700, column: 13, scope: !5819)
!5990 = !DILocalVariable(name: "x", scope: !5991, file: !3743, line: 1696, type: !918, align: 8)
!5991 = !DILexicalBlockFile(scope: !5992, file: !3743, discriminator: 0)
!5992 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hd10fe4bfc804b605E", scope: !1707, file: !2158, line: 318, type: !5884, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !5993)
!5993 = !{!5990}
!5994 = !DILocation(line: 1696, column: 14, scope: !5991, inlinedAt: !5989)
!5995 = !DILocalVariable(name: "x", scope: !5996, file: !3743, line: 1696, type: !918, align: 8)
!5996 = !DILexicalBlockFile(scope: !5997, file: !3743, discriminator: 0)
!5997 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17hd96f3ff4011a1b3cE", scope: !1707, file: !2158, line: 329, type: !5892, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !5998)
!5998 = !{!5995, !5999}
!5999 = !DILocalVariable(name: "f", scope: !5996, file: !3743, line: 1696, type: !5894, align: 8)
!6000 = !DILocation(line: 1696, column: 14, scope: !5996, inlinedAt: !6001)
!6001 = !DILocation(line: 319, column: 13, scope: !5992, inlinedAt: !5989)
!6002 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods8len_utf817hf0e1d35775b96dcfE", scope: !3745, file: !3743, line: 1647, type: !6003, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6005)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!9, !275}
!6005 = !{!6006}
!6006 = !DILocalVariable(name: "code", arg: 1, scope: !6002, file: !3743, line: 1647, type: !275)
!6007 = !DILocation(line: 1647, column: 19, scope: !6002)
!6008 = !DILocation(line: 1648, column: 8, scope: !6002)
!6009 = !DILocation(line: 1650, column: 15, scope: !6002)
!6010 = !DILocation(line: 1649, column: 9, scope: !6002)
!6011 = !DILocation(line: 1648, column: 5, scope: !6002)
!6012 = !DILocation(line: 1657, column: 2, scope: !6002)
!6013 = !DILocation(line: 1652, column: 15, scope: !6002)
!6014 = !DILocation(line: 1651, column: 9, scope: !6002)
!6015 = !DILocation(line: 1650, column: 12, scope: !6002)
!6016 = !DILocation(line: 1655, column: 9, scope: !6002)
!6017 = !DILocation(line: 1652, column: 12, scope: !6002)
!6018 = !DILocation(line: 1653, column: 9, scope: !6002)
!6019 = distinct !DISubprogram(name: "collect<core::str::iter::Lines, alloc::vec::Vec<&str, alloc::alloc::Global>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h1cf3959126bb78f4E", scope: !4965, file: !4964, line: 1832, type: !1188, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6022, retainedNodes: !6020)
!6020 = !{!6021}
!6021 = !DILocalVariable(name: "self", arg: 1, scope: !6019, file: !4964, line: 1832, type: !1211)
!6022 = !{!6023, !6024}
!6023 = !DITemplateTypeParameter(name: "Self", type: !1211)
!6024 = !DITemplateTypeParameter(name: "B", type: !1190)
!6025 = !DILocation(line: 1832, column: 45, scope: !6019)
!6026 = !DILocation(line: 1836, column: 33, scope: !6019)
!6027 = !DILocation(line: 1836, column: 9, scope: !6019)
!6028 = !DILocation(line: 1837, column: 6, scope: !6019)
!6029 = distinct !DISubprogram(name: "new<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hcc892045d5f8932cE", scope: !1216, file: !6030, line: 68, type: !4968, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1250, retainedNodes: !6031)
!6030 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/adapters/map.rs", directory: "", checksumkind: CSK_MD5, checksum: "26d2695af1ed5a432620c89623758817")
!6031 = !{!6032, !6033}
!6032 = !DILocalVariable(name: "iter", arg: 1, scope: !6029, file: !6030, line: 68, type: !1222)
!6033 = !DILocalVariable(name: "f", arg: 2, scope: !6029, file: !6030, line: 68, type: !1249)
!6034 = !DILocation(line: 68, column: 32, scope: !6029)
!6035 = !DILocation(line: 68, column: 41, scope: !6029)
!6036 = !DILocation(line: 69, column: 15, scope: !6029)
!6037 = !DILocation(line: 69, column: 9, scope: !6029)
!6038 = !DILocation(line: 70, column: 6, scope: !6029)
!6039 = distinct !DISubprogram(name: "new<core::ops::range::Range<usize>>", linkageName: "_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17h9a3ddd86c8a670d3E", scope: !5424, file: !5570, line: 19, type: !5460, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5428, retainedNodes: !6040)
!6040 = !{!6041}
!6041 = !DILocalVariable(name: "iter", arg: 1, scope: !6039, file: !5570, line: 19, type: !899)
!6042 = !DILocation(line: 19, column: 32, scope: !6039)
!6043 = !DILocation(line: 20, column: 9, scope: !6039)
!6044 = !DILocation(line: 21, column: 6, scope: !6039)
!6045 = distinct !DISubprogram(name: "atomic_add<usize>", linkageName: "_ZN4core4sync6atomic10atomic_add17h1664563a3ca77b86E", scope: !215, file: !6046, line: 3032, type: !6047, scopeLine: 3032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !6049)
!6046 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/sync/atomic.rs", directory: "", checksumkind: CSK_MD5, checksum: "33f2452070e846308c0aa49b39c50bc5")
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!9, !3928, !9, !870}
!6049 = !{!6050, !6051, !6052}
!6050 = !DILocalVariable(name: "dst", arg: 1, scope: !6045, file: !6046, line: 3032, type: !3928)
!6051 = !DILocalVariable(name: "val", arg: 2, scope: !6045, file: !6046, line: 3032, type: !9)
!6052 = !DILocalVariable(name: "order", arg: 3, scope: !6045, file: !6046, line: 3032, type: !870)
!6053 = !DILocation(line: 3032, column: 31, scope: !6045)
!6054 = !DILocation(line: 3032, column: 44, scope: !6045)
!6055 = !DILocation(line: 3032, column: 52, scope: !6045)
!6056 = !DILocation(line: 3035, column: 15, scope: !6045)
!6057 = !{i8 0, i8 5}
!6058 = !DILocation(line: 3035, column: 9, scope: !6045)
!6059 = !DILocation(line: 3036, column: 24, scope: !6045)
!6060 = !DILocation(line: 3038, column: 24, scope: !6045)
!6061 = !DILocation(line: 3037, column: 24, scope: !6045)
!6062 = !DILocation(line: 3039, column: 23, scope: !6045)
!6063 = !DILocation(line: 3040, column: 23, scope: !6045)
!6064 = !DILocation(line: 3040, column: 62, scope: !6045)
!6065 = !DILocation(line: 3043, column: 2, scope: !6045)
!6066 = !DILocation(line: 3039, column: 62, scope: !6045)
!6067 = !DILocation(line: 3037, column: 64, scope: !6045)
!6068 = !DILocation(line: 3038, column: 64, scope: !6045)
!6069 = !DILocation(line: 3036, column: 64, scope: !6045)
!6070 = distinct !DISubprogram(name: "atomic_sub<usize>", linkageName: "_ZN4core4sync6atomic10atomic_sub17h129e2a10c30884a7E", scope: !215, file: !6046, line: 3049, type: !6047, scopeLine: 3049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !6071)
!6071 = !{!6072, !6073, !6074}
!6072 = !DILocalVariable(name: "dst", arg: 1, scope: !6070, file: !6046, line: 3049, type: !3928)
!6073 = !DILocalVariable(name: "val", arg: 2, scope: !6070, file: !6046, line: 3049, type: !9)
!6074 = !DILocalVariable(name: "order", arg: 3, scope: !6070, file: !6046, line: 3049, type: !870)
!6075 = !DILocation(line: 3049, column: 31, scope: !6070)
!6076 = !DILocation(line: 3049, column: 44, scope: !6070)
!6077 = !DILocation(line: 3049, column: 52, scope: !6070)
!6078 = !DILocation(line: 3052, column: 15, scope: !6070)
!6079 = !DILocation(line: 3052, column: 9, scope: !6070)
!6080 = !DILocation(line: 3053, column: 24, scope: !6070)
!6081 = !DILocation(line: 3055, column: 24, scope: !6070)
!6082 = !DILocation(line: 3054, column: 24, scope: !6070)
!6083 = !DILocation(line: 3056, column: 23, scope: !6070)
!6084 = !DILocation(line: 3057, column: 23, scope: !6070)
!6085 = !DILocation(line: 3057, column: 62, scope: !6070)
!6086 = !DILocation(line: 3060, column: 2, scope: !6070)
!6087 = !DILocation(line: 3056, column: 62, scope: !6070)
!6088 = !DILocation(line: 3054, column: 64, scope: !6070)
!6089 = !DILocation(line: 3055, column: 64, scope: !6070)
!6090 = !DILocation(line: 3053, column: 64, scope: !6070)
!6091 = distinct !DISubprogram(name: "atomic_load<usize>", linkageName: "_ZN4core4sync6atomic11atomic_load17h59d687c8d66b8239E", scope: !215, file: !6046, line: 2999, type: !6092, scopeLine: 2999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !6094)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!9, !3939, !870}
!6094 = !{!6095, !6096}
!6095 = !DILocalVariable(name: "dst", arg: 1, scope: !6091, file: !6046, line: 2999, type: !3939)
!6096 = !DILocalVariable(name: "order", arg: 2, scope: !6091, file: !6046, line: 2999, type: !870)
!6097 = !DILocation(line: 2999, column: 32, scope: !6091)
!6098 = !DILocation(line: 2999, column: 47, scope: !6091)
!6099 = !DILocation(line: 3002, column: 15, scope: !6091)
!6100 = !DILocation(line: 3002, column: 9, scope: !6091)
!6101 = !DILocation(line: 3003, column: 24, scope: !6091)
!6102 = !DILocation(line: 3006, column: 24, scope: !6091)
!6103 = !DILocation(line: 3004, column: 24, scope: !6091)
!6104 = !DILocation(line: 3007, column: 23, scope: !6091)
!6105 = !DILocation(line: 3005, column: 23, scope: !6091)
!6106 = !DILocation(line: 3005, column: 57, scope: !6091)
!6107 = !DILocation(line: 3010, column: 2, scope: !6091)
!6108 = !DILocation(line: 3004, column: 59, scope: !6091)
!6109 = !DILocation(line: 3003, column: 59, scope: !6091)
!6110 = distinct !DISubprogram(name: "atomic_store<usize>", linkageName: "_ZN4core4sync6atomic12atomic_store17hbca3b501a55c8f51E", scope: !215, file: !6046, line: 2984, type: !6111, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !6113)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{null, !3928, !9, !870}
!6113 = !{!6114, !6115, !6116}
!6114 = !DILocalVariable(name: "dst", arg: 1, scope: !6110, file: !6046, line: 2984, type: !3928)
!6115 = !DILocalVariable(name: "val", arg: 2, scope: !6110, file: !6046, line: 2984, type: !9)
!6116 = !DILocalVariable(name: "order", arg: 3, scope: !6110, file: !6046, line: 2984, type: !870)
!6117 = !DILocation(line: 2984, column: 33, scope: !6110)
!6118 = !DILocation(line: 2984, column: 46, scope: !6110)
!6119 = !DILocation(line: 2984, column: 54, scope: !6110)
!6120 = !DILocation(line: 2987, column: 15, scope: !6110)
!6121 = !DILocation(line: 2987, column: 9, scope: !6110)
!6122 = !DILocation(line: 2988, column: 24, scope: !6110)
!6123 = !DILocation(line: 2989, column: 24, scope: !6110)
!6124 = !DILocation(line: 2991, column: 24, scope: !6110)
!6125 = !DILocation(line: 2992, column: 23, scope: !6110)
!6126 = !DILocation(line: 2990, column: 23, scope: !6110)
!6127 = !DILocation(line: 2990, column: 63, scope: !6110)
!6128 = !DILocation(line: 2995, column: 2, scope: !6110)
!6129 = !DILocation(line: 2989, column: 65, scope: !6110)
!6130 = !DILocation(line: 2988, column: 65, scope: !6110)
!6131 = distinct !DISubprogram(name: "atomic_compare_exchange<usize>", linkageName: "_ZN4core4sync6atomic23atomic_compare_exchange17h57ca4702d7acaf8aE", scope: !215, file: !6046, line: 3065, type: !6132, scopeLine: 3065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !6149)
!6132 = !DISubroutineType(types: !6133)
!6133 = !{!6134, !3928, !9, !9, !870, !870}
!6134 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, usize>", scope: !31, file: !2, size: 128, align: 64, elements: !6135, templateParams: !28, identifier: "b0459e0d42e9882a970d1b83eff19131")
!6135 = !{!6136}
!6136 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6134, file: !2, size: 128, align: 64, elements: !6137, templateParams: !28, identifier: "8024fbf34d5a081d9cea6037c6211c4b", discriminator: !6148)
!6137 = !{!6138, !6144}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6136, file: !2, baseType: !6139, size: 128, align: 64, extraData: i64 0)
!6139 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6134, file: !2, size: 128, align: 64, elements: !6140, templateParams: !6142, identifier: "cc92820e8ffe526eea5785462ab2485")
!6140 = !{!6141}
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6139, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6142 = !{!224, !6143}
!6143 = !DITemplateTypeParameter(name: "E", type: !9)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6136, file: !2, baseType: !6145, size: 128, align: 64, extraData: i64 1)
!6145 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6134, file: !2, size: 128, align: 64, elements: !6146, templateParams: !6142, identifier: "ff8c80609aba615eae19b6edc71ce396")
!6146 = !{!6147}
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6145, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6148 = !DIDerivedType(tag: DW_TAG_member, scope: !6134, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!6149 = !{!6150, !6151, !6152, !6153, !6154, !6155, !6157}
!6150 = !DILocalVariable(name: "dst", arg: 1, scope: !6131, file: !6046, line: 3066, type: !3928)
!6151 = !DILocalVariable(name: "old", arg: 2, scope: !6131, file: !6046, line: 3067, type: !9)
!6152 = !DILocalVariable(name: "new", arg: 3, scope: !6131, file: !6046, line: 3068, type: !9)
!6153 = !DILocalVariable(name: "success", arg: 4, scope: !6131, file: !6046, line: 3069, type: !870)
!6154 = !DILocalVariable(name: "failure", arg: 5, scope: !6131, file: !6046, line: 3070, type: !870)
!6155 = !DILocalVariable(name: "val", scope: !6156, file: !6046, line: 3073, type: !9, align: 8)
!6156 = distinct !DILexicalBlock(scope: !6131, file: !6046, line: 3073, column: 5)
!6157 = !DILocalVariable(name: "ok", scope: !6156, file: !6046, line: 3073, type: !1244, align: 1)
!6158 = !DILocation(line: 3066, column: 5, scope: !6131)
!6159 = !DILocation(line: 3067, column: 5, scope: !6131)
!6160 = !DILocation(line: 3068, column: 5, scope: !6131)
!6161 = !DILocation(line: 3069, column: 5, scope: !6131)
!6162 = !DILocation(line: 3070, column: 5, scope: !6131)
!6163 = !DILocation(line: 3074, column: 15, scope: !6131)
!6164 = !DILocation(line: 3074, column: 9, scope: !6131)
!6165 = !DILocation(line: 3093, column: 34, scope: !6131)
!6166 = !DILocation(line: 3094, column: 34, scope: !6131)
!6167 = !DILocation(line: 3095, column: 33, scope: !6131)
!6168 = !DILocation(line: 3095, column: 85, scope: !6131)
!6169 = !DILocation(line: 3073, column: 10, scope: !6131)
!6170 = !DILocation(line: 3073, column: 10, scope: !6156)
!6171 = !DILocation(line: 3073, column: 15, scope: !6131)
!6172 = !DILocation(line: 3073, column: 15, scope: !6156)
!6173 = !DILocation(line: 3102, column: 8, scope: !6156)
!6174 = !DILocation(line: 3094, column: 87, scope: !6131)
!6175 = !DILocation(line: 3093, column: 87, scope: !6131)
!6176 = !DILocation(line: 3089, column: 34, scope: !6131)
!6177 = !DILocation(line: 3090, column: 34, scope: !6131)
!6178 = !DILocation(line: 3092, column: 33, scope: !6131)
!6179 = !DILocation(line: 3092, column: 85, scope: !6131)
!6180 = !DILocation(line: 3090, column: 87, scope: !6131)
!6181 = !DILocation(line: 3089, column: 87, scope: !6131)
!6182 = !DILocation(line: 3080, column: 35, scope: !6131)
!6183 = !DILocation(line: 3081, column: 35, scope: !6131)
!6184 = !DILocation(line: 3083, column: 34, scope: !6131)
!6185 = !DILocation(line: 3083, column: 87, scope: !6131)
!6186 = !DILocation(line: 3081, column: 89, scope: !6131)
!6187 = !DILocation(line: 3080, column: 89, scope: !6131)
!6188 = !DILocation(line: 3084, column: 35, scope: !6131)
!6189 = !DILocation(line: 3086, column: 35, scope: !6131)
!6190 = !DILocation(line: 3088, column: 34, scope: !6131)
!6191 = !DILocation(line: 3088, column: 87, scope: !6131)
!6192 = !DILocation(line: 3086, column: 89, scope: !6131)
!6193 = !DILocation(line: 3084, column: 89, scope: !6131)
!6194 = !DILocation(line: 3075, column: 35, scope: !6131)
!6195 = !DILocation(line: 3077, column: 35, scope: !6131)
!6196 = !DILocation(line: 3079, column: 34, scope: !6131)
!6197 = !DILocation(line: 3097, column: 29, scope: !6131)
!6198 = !DILocation(line: 3096, column: 28, scope: !6131)
!6199 = !DILocation(line: 3079, column: 87, scope: !6131)
!6200 = !DILocation(line: 3077, column: 89, scope: !6131)
!6201 = !DILocation(line: 3075, column: 89, scope: !6131)
!6202 = !DILocation(line: 3102, column: 30, scope: !6156)
!6203 = !DILocation(line: 3102, column: 5, scope: !6156)
!6204 = !DILocation(line: 3102, column: 13, scope: !6156)
!6205 = !DILocation(line: 3103, column: 2, scope: !6131)
!6206 = distinct !DISubprogram(name: "fence", linkageName: "_ZN4core4sync6atomic5fence17h15f3db8a753d287dE", scope: !215, file: !6046, line: 3358, type: !6207, scopeLine: 3358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6209)
!6207 = !DISubroutineType(types: !6208)
!6208 = !{null, !870}
!6209 = !{!6210}
!6210 = !DILocalVariable(name: "order", arg: 1, scope: !6206, file: !6046, line: 3358, type: !870)
!6211 = !DILocation(line: 3358, column: 14, scope: !6206)
!6212 = !DILocation(line: 3361, column: 15, scope: !6206)
!6213 = !DILocation(line: 3361, column: 9, scope: !6206)
!6214 = !DILocation(line: 3366, column: 24, scope: !6206)
!6215 = !DILocation(line: 3363, column: 24, scope: !6206)
!6216 = !DILocation(line: 3362, column: 24, scope: !6206)
!6217 = !DILocation(line: 3364, column: 23, scope: !6206)
!6218 = !DILocation(line: 3365, column: 23, scope: !6206)
!6219 = !DILocation(line: 3369, column: 2, scope: !6206)
!6220 = distinct !DISubprogram(name: "for_value_raw<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h1a76ce0b01bf9f63E", scope: !1463, file: !6221, line: 186, type: !6222, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !6224)
!6221 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d0ac208ee70c69b94b07d38255a5525")
!6222 = !DISubroutineType(types: !6223)
!6223 = !{!1463, !411}
!6224 = !{!6225, !6226, !6228}
!6225 = !DILocalVariable(name: "t", arg: 1, scope: !6220, file: !6221, line: 186, type: !411)
!6226 = !DILocalVariable(name: "size", scope: !6227, file: !6221, line: 188, type: !9, align: 8)
!6227 = distinct !DILexicalBlock(scope: !6220, file: !6221, line: 188, column: 9)
!6228 = !DILocalVariable(name: "align", scope: !6227, file: !6221, line: 188, type: !9, align: 8)
!6229 = !DILocation(line: 186, column: 44, scope: !6220)
!6230 = !DILocation(line: 188, column: 60, scope: !6220)
!6231 = !DILocalVariable(name: "val", scope: !6232, file: !6221, line: 188, type: !411, align: 8)
!6232 = !DILexicalBlockFile(scope: !6233, file: !6221, discriminator: 0)
!6233 = distinct !DISubprogram(name: "size_of_val_raw<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3mem15size_of_val_raw17he90f9aec0f37715fE", scope: !789, file: !3835, line: 391, type: !6234, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !6236)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!9, !411}
!6236 = !{!6231}
!6237 = !DILocation(line: 188, column: 39, scope: !6232, inlinedAt: !6238)
!6238 = !DILocation(line: 188, column: 39, scope: !6220)
!6239 = !DILocation(line: 188, column: 86, scope: !6220)
!6240 = !DILocalVariable(name: "val", scope: !6241, file: !6221, line: 188, type: !411, align: 8)
!6241 = !DILexicalBlockFile(scope: !6242, file: !6221, discriminator: 0)
!6242 = distinct !DISubprogram(name: "align_of_val_raw<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3mem16align_of_val_raw17h599dbfa360b84762E", scope: !789, file: !3835, line: 533, type: !6234, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !6243)
!6243 = !{!6240}
!6244 = !DILocation(line: 188, column: 64, scope: !6241, inlinedAt: !6245)
!6245 = !DILocation(line: 188, column: 64, scope: !6220)
!6246 = !DILocation(line: 188, column: 38, scope: !6220)
!6247 = !DILocation(line: 188, column: 14, scope: !6220)
!6248 = !DILocation(line: 188, column: 14, scope: !6227)
!6249 = !DILocation(line: 188, column: 20, scope: !6220)
!6250 = !DILocation(line: 188, column: 20, scope: !6227)
!6251 = !DILocation(line: 190, column: 52, scope: !6227)
!6252 = !DILocalVariable(name: "size", scope: !6253, file: !6221, line: 190, type: !9, align: 8)
!6253 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hd0530bfa33ab0837E", scope: !1463, file: !6221, line: 110, type: !6254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6256)
!6254 = !DISubroutineType(types: !6255)
!6255 = !{!1463, !9, !9}
!6256 = !{!6252, !6257}
!6257 = !DILocalVariable(name: "align", scope: !6253, file: !6221, line: 190, type: !9, align: 8)
!6258 = !DILocation(line: 190, column: 18, scope: !6253, inlinedAt: !6259)
!6259 = !DILocation(line: 190, column: 18, scope: !6227)
!6260 = !DILocation(line: 190, column: 58, scope: !6227)
!6261 = !DILocalVariable(name: "align", scope: !6262, file: !6221, line: 190, type: !9, align: 8)
!6262 = !DILexicalBlockFile(scope: !6263, file: !6221, discriminator: 0)
!6263 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6267)
!6264 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "681d44917f5a26aec3d3954431def51e")
!6265 = !DISubroutineType(types: !6266)
!6266 = !{!1469, !9}
!6267 = !{!6261, !6268}
!6268 = !DILocalVariable(name: "runtime", scope: !6269, file: !6221, line: 190, type: !6271, align: 8)
!6269 = !DILexicalBlockFile(scope: !6270, file: !6221, discriminator: 0)
!6270 = distinct !DILexicalBlock(scope: !6263, file: !913, line: 2336, column: 13)
!6271 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6272, file: !2, size: 64, align: 64, elements: !6274, templateParams: !28, identifier: "a24236e50785a0359acaebf14a869a84")
!6272 = !DINamespace(name: "new_unchecked", scope: !6273)
!6273 = !DINamespace(name: "{impl#0}", scope: !788)
!6274 = !{!6275}
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__align", scope: !6271, file: !2, baseType: !918, size: 64, align: 64)
!6276 = !DILocation(line: 190, column: 18, scope: !6262, inlinedAt: !6277)
!6277 = !DILocation(line: 112, column: 40, scope: !6253, inlinedAt: !6259)
!6278 = !{i64 1, i64 -9223372036854775807}
!6279 = !DILocation(line: 191, column: 6, scope: !6220)
!6280 = distinct !DISubprogram(name: "for_value_raw<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h1ce445a8822533ceE", scope: !1463, file: !6221, line: 186, type: !6281, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !6283)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!1463, !210}
!6283 = !{!6284, !6285, !6287}
!6284 = !DILocalVariable(name: "t", arg: 1, scope: !6280, file: !6221, line: 186, type: !210)
!6285 = !DILocalVariable(name: "size", scope: !6286, file: !6221, line: 188, type: !9, align: 8)
!6286 = distinct !DILexicalBlock(scope: !6280, file: !6221, line: 188, column: 9)
!6287 = !DILocalVariable(name: "align", scope: !6286, file: !6221, line: 188, type: !9, align: 8)
!6288 = !DILocation(line: 186, column: 44, scope: !6280)
!6289 = !DILocation(line: 188, column: 60, scope: !6280)
!6290 = !DILocalVariable(name: "val", scope: !6291, file: !6221, line: 188, type: !210, align: 8)
!6291 = !DILexicalBlockFile(scope: !6292, file: !6221, discriminator: 0)
!6292 = distinct !DISubprogram(name: "size_of_val_raw<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3mem15size_of_val_raw17h1dd0e1c97ee98470E", scope: !789, file: !3835, line: 391, type: !6293, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !6295)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{!9, !210}
!6295 = !{!6290}
!6296 = !DILocation(line: 188, column: 39, scope: !6291, inlinedAt: !6297)
!6297 = !DILocation(line: 188, column: 39, scope: !6280)
!6298 = !DILocation(line: 188, column: 86, scope: !6280)
!6299 = !DILocalVariable(name: "val", scope: !6300, file: !6221, line: 188, type: !210, align: 8)
!6300 = !DILexicalBlockFile(scope: !6301, file: !6221, discriminator: 0)
!6301 = distinct !DISubprogram(name: "align_of_val_raw<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3mem16align_of_val_raw17h158e345fa536e471E", scope: !789, file: !3835, line: 533, type: !6293, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !6302)
!6302 = !{!6299}
!6303 = !DILocation(line: 188, column: 64, scope: !6300, inlinedAt: !6304)
!6304 = !DILocation(line: 188, column: 64, scope: !6280)
!6305 = !DILocation(line: 188, column: 38, scope: !6280)
!6306 = !DILocation(line: 188, column: 14, scope: !6280)
!6307 = !DILocation(line: 188, column: 14, scope: !6286)
!6308 = !DILocation(line: 188, column: 20, scope: !6280)
!6309 = !DILocation(line: 188, column: 20, scope: !6286)
!6310 = !DILocation(line: 190, column: 52, scope: !6286)
!6311 = !DILocalVariable(name: "size", scope: !6312, file: !6221, line: 190, type: !9, align: 8)
!6312 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hd0530bfa33ab0837E", scope: !1463, file: !6221, line: 110, type: !6254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6313)
!6313 = !{!6311, !6314}
!6314 = !DILocalVariable(name: "align", scope: !6312, file: !6221, line: 190, type: !9, align: 8)
!6315 = !DILocation(line: 190, column: 18, scope: !6312, inlinedAt: !6316)
!6316 = !DILocation(line: 190, column: 18, scope: !6286)
!6317 = !DILocation(line: 190, column: 58, scope: !6286)
!6318 = !DILocalVariable(name: "align", scope: !6319, file: !6221, line: 190, type: !9, align: 8)
!6319 = !DILexicalBlockFile(scope: !6320, file: !6221, discriminator: 0)
!6320 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6321)
!6321 = !{!6318, !6322}
!6322 = !DILocalVariable(name: "runtime", scope: !6323, file: !6221, line: 190, type: !6271, align: 8)
!6323 = !DILexicalBlockFile(scope: !6324, file: !6221, discriminator: 0)
!6324 = distinct !DILexicalBlock(scope: !6320, file: !913, line: 2336, column: 13)
!6325 = !DILocation(line: 190, column: 18, scope: !6319, inlinedAt: !6326)
!6326 = !DILocation(line: 112, column: 40, scope: !6312, inlinedAt: !6316)
!6327 = !DILocation(line: 191, column: 6, scope: !6280)
!6328 = distinct !DISubprogram(name: "for_value_raw<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h733a0486ea5e593dE", scope: !1463, file: !6221, line: 186, type: !6329, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !6331)
!6329 = !DISubroutineType(types: !6330)
!6330 = !{!1463, !388}
!6331 = !{!6332, !6333, !6335}
!6332 = !DILocalVariable(name: "t", arg: 1, scope: !6328, file: !6221, line: 186, type: !388)
!6333 = !DILocalVariable(name: "size", scope: !6334, file: !6221, line: 188, type: !9, align: 8)
!6334 = distinct !DILexicalBlock(scope: !6328, file: !6221, line: 188, column: 9)
!6335 = !DILocalVariable(name: "align", scope: !6334, file: !6221, line: 188, type: !9, align: 8)
!6336 = !DILocation(line: 186, column: 44, scope: !6328)
!6337 = !DILocation(line: 188, column: 60, scope: !6328)
!6338 = !DILocalVariable(name: "val", scope: !6339, file: !6221, line: 188, type: !388, align: 8)
!6339 = !DILexicalBlockFile(scope: !6340, file: !6221, discriminator: 0)
!6340 = distinct !DISubprogram(name: "size_of_val_raw<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3mem15size_of_val_raw17h343868f7af60aecaE", scope: !789, file: !3835, line: 391, type: !6341, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !6343)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!9, !388}
!6343 = !{!6338}
!6344 = !DILocation(line: 188, column: 39, scope: !6339, inlinedAt: !6345)
!6345 = !DILocation(line: 188, column: 39, scope: !6328)
!6346 = !DILocation(line: 188, column: 86, scope: !6328)
!6347 = !DILocalVariable(name: "val", scope: !6348, file: !6221, line: 188, type: !388, align: 8)
!6348 = !DILexicalBlockFile(scope: !6349, file: !6221, discriminator: 0)
!6349 = distinct !DISubprogram(name: "align_of_val_raw<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3mem16align_of_val_raw17h0a25f0a1ceed3271E", scope: !789, file: !3835, line: 533, type: !6341, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !6350)
!6350 = !{!6347}
!6351 = !DILocation(line: 188, column: 64, scope: !6348, inlinedAt: !6352)
!6352 = !DILocation(line: 188, column: 64, scope: !6328)
!6353 = !DILocation(line: 188, column: 38, scope: !6328)
!6354 = !DILocation(line: 188, column: 14, scope: !6328)
!6355 = !DILocation(line: 188, column: 14, scope: !6334)
!6356 = !DILocation(line: 188, column: 20, scope: !6328)
!6357 = !DILocation(line: 188, column: 20, scope: !6334)
!6358 = !DILocation(line: 190, column: 52, scope: !6334)
!6359 = !DILocalVariable(name: "size", scope: !6360, file: !6221, line: 190, type: !9, align: 8)
!6360 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hd0530bfa33ab0837E", scope: !1463, file: !6221, line: 110, type: !6254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6361)
!6361 = !{!6359, !6362}
!6362 = !DILocalVariable(name: "align", scope: !6360, file: !6221, line: 190, type: !9, align: 8)
!6363 = !DILocation(line: 190, column: 18, scope: !6360, inlinedAt: !6364)
!6364 = !DILocation(line: 190, column: 18, scope: !6334)
!6365 = !DILocation(line: 190, column: 58, scope: !6334)
!6366 = !DILocalVariable(name: "align", scope: !6367, file: !6221, line: 190, type: !9, align: 8)
!6367 = !DILexicalBlockFile(scope: !6368, file: !6221, discriminator: 0)
!6368 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6369)
!6369 = !{!6366, !6370}
!6370 = !DILocalVariable(name: "runtime", scope: !6371, file: !6221, line: 190, type: !6271, align: 8)
!6371 = !DILexicalBlockFile(scope: !6372, file: !6221, discriminator: 0)
!6372 = distinct !DILexicalBlock(scope: !6368, file: !913, line: 2336, column: 13)
!6373 = !DILocation(line: 190, column: 18, scope: !6367, inlinedAt: !6374)
!6374 = !DILocation(line: 112, column: 40, scope: !6360, inlinedAt: !6364)
!6375 = !DILocation(line: 191, column: 6, scope: !6328)
!6376 = distinct !DISubprogram(name: "for_value_raw<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17haffdeafed5addff5E", scope: !1463, file: !6221, line: 186, type: !6377, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !6379)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!1463, !301}
!6379 = !{!6380, !6381, !6383}
!6380 = !DILocalVariable(name: "t", arg: 1, scope: !6376, file: !6221, line: 186, type: !301)
!6381 = !DILocalVariable(name: "size", scope: !6382, file: !6221, line: 188, type: !9, align: 8)
!6382 = distinct !DILexicalBlock(scope: !6376, file: !6221, line: 188, column: 9)
!6383 = !DILocalVariable(name: "align", scope: !6382, file: !6221, line: 188, type: !9, align: 8)
!6384 = !DILocation(line: 186, column: 44, scope: !6376)
!6385 = !DILocation(line: 188, column: 60, scope: !6376)
!6386 = !DILocalVariable(name: "val", scope: !6387, file: !6221, line: 188, type: !301, align: 8)
!6387 = !DILexicalBlockFile(scope: !6388, file: !6221, discriminator: 0)
!6388 = distinct !DISubprogram(name: "size_of_val_raw<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3mem15size_of_val_raw17hb1a01caf473b8ddfE", scope: !789, file: !3835, line: 391, type: !6389, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !6391)
!6389 = !DISubroutineType(types: !6390)
!6390 = !{!9, !301}
!6391 = !{!6386}
!6392 = !DILocation(line: 188, column: 39, scope: !6387, inlinedAt: !6393)
!6393 = !DILocation(line: 188, column: 39, scope: !6376)
!6394 = !DILocation(line: 188, column: 86, scope: !6376)
!6395 = !DILocalVariable(name: "val", scope: !6396, file: !6221, line: 188, type: !301, align: 8)
!6396 = !DILexicalBlockFile(scope: !6397, file: !6221, discriminator: 0)
!6397 = distinct !DISubprogram(name: "align_of_val_raw<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3mem16align_of_val_raw17h3bb44b85c2215ef9E", scope: !789, file: !3835, line: 533, type: !6389, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !6398)
!6398 = !{!6395}
!6399 = !DILocation(line: 188, column: 64, scope: !6396, inlinedAt: !6400)
!6400 = !DILocation(line: 188, column: 64, scope: !6376)
!6401 = !DILocation(line: 188, column: 38, scope: !6376)
!6402 = !DILocation(line: 188, column: 14, scope: !6376)
!6403 = !DILocation(line: 188, column: 14, scope: !6382)
!6404 = !DILocation(line: 188, column: 20, scope: !6376)
!6405 = !DILocation(line: 188, column: 20, scope: !6382)
!6406 = !DILocation(line: 190, column: 52, scope: !6382)
!6407 = !DILocalVariable(name: "size", scope: !6408, file: !6221, line: 190, type: !9, align: 8)
!6408 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hd0530bfa33ab0837E", scope: !1463, file: !6221, line: 110, type: !6254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6409)
!6409 = !{!6407, !6410}
!6410 = !DILocalVariable(name: "align", scope: !6408, file: !6221, line: 190, type: !9, align: 8)
!6411 = !DILocation(line: 190, column: 18, scope: !6408, inlinedAt: !6412)
!6412 = !DILocation(line: 190, column: 18, scope: !6382)
!6413 = !DILocation(line: 190, column: 58, scope: !6382)
!6414 = !DILocalVariable(name: "align", scope: !6415, file: !6221, line: 190, type: !9, align: 8)
!6415 = !DILexicalBlockFile(scope: !6416, file: !6221, discriminator: 0)
!6416 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6417)
!6417 = !{!6414, !6418}
!6418 = !DILocalVariable(name: "runtime", scope: !6419, file: !6221, line: 190, type: !6271, align: 8)
!6419 = !DILexicalBlockFile(scope: !6420, file: !6221, discriminator: 0)
!6420 = distinct !DILexicalBlock(scope: !6416, file: !913, line: 2336, column: 13)
!6421 = !DILocation(line: 190, column: 18, scope: !6415, inlinedAt: !6422)
!6422 = !DILocation(line: 112, column: 40, scope: !6408, inlinedAt: !6412)
!6423 = !DILocation(line: 191, column: 6, scope: !6376)
!6424 = distinct !DISubprogram(name: "from_size_valid_align", linkageName: "_ZN4core5alloc6layout6Layout21from_size_valid_align17h3818e18b3b0c1f08E", scope: !1463, file: !6221, line: 77, type: !6425, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6444)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{!6427, !9, !1469}
!6427 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !31, file: !2, size: 128, align: 64, elements: !6428, templateParams: !28, identifier: "61ed90a3a60bf5c9da25fda9753d7b5")
!6428 = !{!6429}
!6429 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6427, file: !2, size: 128, align: 64, elements: !6430, templateParams: !28, identifier: "e7bb3560bfa0d3445ee2359cfbf9e5fe", discriminator: !6443)
!6430 = !{!6431, !6439}
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6429, file: !2, baseType: !6432, size: 128, align: 64)
!6432 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6427, file: !2, size: 128, align: 64, elements: !6433, templateParams: !6435, identifier: "1efd2a987c8fa52528b02bba0275d8c7")
!6433 = !{!6434}
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6432, file: !2, baseType: !1463, size: 128, align: 64)
!6435 = !{!6436, !6437}
!6436 = !DITemplateTypeParameter(name: "T", type: !1463)
!6437 = !DITemplateTypeParameter(name: "E", type: !6438)
!6438 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !1464, file: !2, align: 8, elements: !28, identifier: "6e89e1d1b17d37435f7b87cb1d5cb26d")
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6429, file: !2, baseType: !6440, size: 128, align: 64, extraData: i64 0)
!6440 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6427, file: !2, size: 128, align: 64, elements: !6441, templateParams: !6435, identifier: "9488fb9df60d2b7e722ab2cffead9e28")
!6441 = !{!6442}
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6440, file: !2, baseType: !6438, align: 8)
!6443 = !DIDerivedType(tag: DW_TAG_member, scope: !6427, file: !2, baseType: !160, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!6444 = !{!6445, !6446}
!6445 = !DILocalVariable(name: "size", arg: 1, scope: !6424, file: !6221, line: 77, type: !9)
!6446 = !DILocalVariable(name: "align", arg: 2, scope: !6424, file: !6221, line: 77, type: !1469)
!6447 = !DILocation(line: 77, column: 36, scope: !6424)
!6448 = !DILocation(line: 77, column: 49, scope: !6424)
!6449 = !DILocalVariable(name: "self", scope: !6450, file: !6221, line: 92, type: !6453, align: 8)
!6450 = !DILexicalBlockFile(scope: !6451, file: !6221, discriminator: 0)
!6451 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6458)
!6452 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "f51cb88dd069db0b7fcd2123d03b69c9")
!6453 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !258, file: !2, size: 64, align: 64, elements: !6454, templateParams: !28, identifier: "c6c54dffb7a9517405cc55666c804e7")
!6454 = !{!6455}
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6453, file: !2, baseType: !9, size: 64, align: 64)
!6456 = !DISubroutineType(types: !6457)
!6457 = !{!9, !6453}
!6458 = !{!6449}
!6459 = !DILocation(line: 92, column: 42, scope: !6450, inlinedAt: !6460)
!6460 = !DILocation(line: 92, column: 42, scope: !6424)
!6461 = !DILocalVariable(name: "self", scope: !6462, file: !6221, line: 92, type: !1469, align: 8)
!6462 = !DILexicalBlockFile(scope: !6463, file: !6221, discriminator: 0)
!6463 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6466)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{!6453, !1469}
!6466 = !{!6461}
!6467 = !DILocation(line: 92, column: 42, scope: !6462, inlinedAt: !6460)
!6468 = !DILocalVariable(name: "n", scope: !6469, file: !6221, line: 92, type: !9, align: 8)
!6469 = !DILexicalBlockFile(scope: !6470, file: !6221, discriminator: 0)
!6470 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6473)
!6471 = !DISubroutineType(types: !6472)
!6472 = !{!6453, !9}
!6473 = !{!6468, !6474}
!6474 = !DILocalVariable(name: "runtime", scope: !6475, file: !6221, line: 92, type: !6477, align: 8)
!6475 = !DILexicalBlockFile(scope: !6476, file: !6221, discriminator: 0)
!6476 = distinct !DILexicalBlock(scope: !6470, file: !913, line: 2336, column: 13)
!6477 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6478, file: !2, size: 64, align: 64, elements: !6480, templateParams: !28, identifier: "cbed2d88a1ec7b20c4ad53e8c9863d89")
!6478 = !DINamespace(name: "new_unchecked", scope: !6479)
!6479 = !DINamespace(name: "{impl#35}", scope: !258)
!6480 = !{!6481}
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !6477, file: !2, baseType: !918, size: 64, align: 64)
!6482 = !DILocation(line: 92, column: 42, scope: !6469, inlinedAt: !6483)
!6483 = !DILocation(line: 41, column: 18, scope: !6463, inlinedAt: !6460)
!6484 = !DILocation(line: 92, column: 41, scope: !6424)
!6485 = !DILocation(line: 92, column: 19, scope: !6424)
!6486 = !DILocation(line: 92, column: 12, scope: !6424)
!6487 = !DILocation(line: 97, column: 12, scope: !6424)
!6488 = !DILocation(line: 97, column: 9, scope: !6424)
!6489 = !DILocation(line: 98, column: 6, scope: !6424)
!6490 = !DILocation(line: 93, column: 20, scope: !6424)
!6491 = distinct !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17h19e26fcbb5fdf4b7E", scope: !1463, file: !6221, line: 416, type: !6492, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6494)
!6492 = !DISubroutineType(types: !6493)
!6493 = !{!6427, !9}
!6494 = !{!6495, !6496, !6498, !6513}
!6495 = !DILocalVariable(name: "n", arg: 1, scope: !6491, file: !6221, line: 416, type: !9)
!6496 = !DILocalVariable(name: "array_size", scope: !6497, file: !6221, line: 417, type: !9, align: 8)
!6497 = distinct !DILexicalBlock(scope: !6491, file: !6221, line: 417, column: 9)
!6498 = !DILocalVariable(name: "residual", scope: !6499, file: !6221, line: 417, type: !6500, align: 1)
!6499 = distinct !DILexicalBlock(scope: !6491, file: !6221, line: 417, column: 79)
!6500 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !31, file: !2, align: 8, elements: !6501, templateParams: !28, identifier: "2408e7ead4450472646681a937f2eed")
!6501 = !{!6502}
!6502 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6500, file: !2, align: 8, elements: !6503, templateParams: !28, identifier: "6cbcec323d74ab47f813265a09655e1e")
!6503 = !{!6504, !6509}
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6502, file: !2, baseType: !6505, align: 8)
!6505 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6500, file: !2, align: 8, elements: !6506, templateParams: !6508, identifier: "40ec0a271e0cb2d34d257ba58fdead82")
!6506 = !{!6507}
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6505, file: !2, baseType: !2645, align: 8)
!6508 = !{!2650, !6437}
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6502, file: !2, baseType: !6510, align: 8)
!6510 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6500, file: !2, align: 8, elements: !6511, templateParams: !6508, identifier: "72611e72c15211a4d55dae520b84155f")
!6511 = !{!6512}
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6510, file: !2, baseType: !6438, align: 8)
!6513 = !DILocalVariable(name: "val", scope: !6514, file: !6221, line: 417, type: !9, align: 8)
!6514 = distinct !DILexicalBlock(scope: !6491, file: !6221, line: 417, column: 26)
!6515 = !DILocation(line: 416, column: 21, scope: !6491)
!6516 = !DILocalVariable(name: "self", scope: !6517, file: !6221, line: 417, type: !6537, align: 8)
!6517 = !DILexicalBlockFile(scope: !6518, file: !6221, discriminator: 0)
!6518 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h795025f6cdd351c5E", scope: !2662, file: !1782, line: 2117, type: !6519, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6545, retainedNodes: !6551)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{!6521, !6537}
!6521 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !2666, file: !2, size: 128, align: 64, elements: !6522, templateParams: !28, identifier: "ce5c98f9de0798e97388caf7b24b4edc")
!6522 = !{!6523}
!6523 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6521, file: !2, size: 128, align: 64, elements: !6524, templateParams: !28, identifier: "6bdd8e43359c9849ce58ffeff4bb9b82", discriminator: !6536)
!6524 = !{!6525, !6532}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6523, file: !2, baseType: !6526, size: 128, align: 64, extraData: i64 0)
!6526 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6521, file: !2, size: 128, align: 64, elements: !6527, templateParams: !6529, identifier: "b6fdadee5e49b7207145efbc9b42a94a")
!6527 = !{!6528}
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6526, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6529 = !{!6530, !6531}
!6530 = !DITemplateTypeParameter(name: "B", type: !6500)
!6531 = !DITemplateTypeParameter(name: "C", type: !9)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6523, file: !2, baseType: !6533, size: 128, align: 64, extraData: i64 1)
!6533 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6521, file: !2, size: 128, align: 64, elements: !6534, templateParams: !6529, identifier: "b5889c00b354165f6e6f55dba1990157")
!6534 = !{!6535}
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6533, file: !2, baseType: !6500, align: 8, offset: 64)
!6536 = !DIDerivedType(tag: DW_TAG_member, scope: !6521, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!6537 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !31, file: !2, size: 128, align: 64, elements: !6538, templateParams: !28, identifier: "c2a525df37a04684d727d3bb68e24786")
!6538 = !{!6539}
!6539 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6537, file: !2, size: 128, align: 64, elements: !6540, templateParams: !28, identifier: "59922648ff1b36fe1aa289683c505c74", discriminator: !6550)
!6540 = !{!6541, !6546}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6539, file: !2, baseType: !6542, size: 128, align: 64, extraData: i64 0)
!6542 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6537, file: !2, size: 128, align: 64, elements: !6543, templateParams: !6545, identifier: "98a9acae3d260aa3de9b86f4a7044881")
!6543 = !{!6544}
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6542, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6545 = !{!224, !6437}
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6539, file: !2, baseType: !6547, size: 128, align: 64, extraData: i64 1)
!6547 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6537, file: !2, size: 128, align: 64, elements: !6548, templateParams: !6545, identifier: "3430eaa712a080f75cd3b02585f182")
!6548 = !{!6549}
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6547, file: !2, baseType: !6438, align: 8, offset: 64)
!6550 = !DIDerivedType(tag: DW_TAG_member, scope: !6537, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!6551 = !{!6516, !6552, !6555}
!6552 = !DILocalVariable(name: "v", scope: !6553, file: !6221, line: 417, type: !9, align: 8)
!6553 = !DILexicalBlockFile(scope: !6554, file: !6221, discriminator: 0)
!6554 = distinct !DILexicalBlock(scope: !6518, file: !1782, line: 2119, column: 13)
!6555 = !DILocalVariable(name: "e", scope: !6556, file: !6221, line: 417, type: !6438, align: 1)
!6556 = !DILexicalBlockFile(scope: !6557, file: !6221, discriminator: 0)
!6557 = distinct !DILexicalBlock(scope: !6518, file: !1782, line: 2120, column: 13)
!6558 = !DILocation(line: 417, column: 26, scope: !6517, inlinedAt: !6559)
!6559 = !DILocation(line: 417, column: 26, scope: !6491)
!6560 = !DILocalVariable(name: "self", scope: !6561, file: !6221, line: 417, type: !1740, align: 8)
!6561 = !DILexicalBlockFile(scope: !6562, file: !6221, discriminator: 0)
!6562 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hcf4f4695421db280E", scope: !1740, file: !1848, line: 1051, type: !6563, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6545, retainedNodes: !6565)
!6563 = !DISubroutineType(types: !6564)
!6564 = !{!6537, !1740, !6438}
!6565 = !{!6560, !6566, !6567}
!6566 = !DILocalVariable(name: "err", scope: !6561, file: !6221, line: 417, type: !6438, align: 1)
!6567 = !DILocalVariable(name: "v", scope: !6568, file: !6221, line: 417, type: !9, align: 8)
!6568 = !DILexicalBlockFile(scope: !6569, file: !6221, discriminator: 0)
!6569 = distinct !DILexicalBlock(scope: !6562, file: !1848, line: 1056, column: 13)
!6570 = !DILocation(line: 417, column: 26, scope: !6561, inlinedAt: !6559)
!6571 = !DILocation(line: 417, column: 79, scope: !6499)
!6572 = !DILocalVariable(name: "residual", scope: !6573, file: !6221, line: 417, type: !6500, align: 1)
!6573 = !DILexicalBlockFile(scope: !6574, file: !6221, discriminator: 0)
!6574 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h096f495749181026E", scope: !2709, file: !1782, line: 2132, type: !6575, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6581, retainedNodes: !6577)
!6575 = !DISubroutineType(types: !6576)
!6576 = !{!6427, !6500, !1109}
!6577 = !{!6572, !6578}
!6578 = !DILocalVariable(name: "e", scope: !6579, file: !6221, line: 417, type: !6438, align: 1)
!6579 = !DILexicalBlockFile(scope: !6580, file: !6221, discriminator: 0)
!6580 = distinct !DILexicalBlock(scope: !6574, file: !1782, line: 2134, column: 13)
!6581 = !{!6436, !6437, !6582}
!6582 = !DITemplateTypeParameter(name: "F", type: !6438)
!6583 = !DILocation(line: 417, column: 26, scope: !6573, inlinedAt: !6584)
!6584 = !DILocation(line: 417, column: 26, scope: !6499)
!6585 = !DILocation(line: 417, column: 26, scope: !6556, inlinedAt: !6559)
!6586 = !DILocation(line: 417, column: 26, scope: !6579, inlinedAt: !6584)
!6587 = !DILocation(line: 417, column: 26, scope: !6568, inlinedAt: !6559)
!6588 = !DILocation(line: 417, column: 26, scope: !6553, inlinedAt: !6559)
!6589 = !DILocation(line: 417, column: 26, scope: !6514)
!6590 = !DILocation(line: 417, column: 13, scope: !6497)
!6591 = !DILocation(line: 419, column: 51, scope: !6592, inlinedAt: !6594)
!6592 = !DILexicalBlockFile(scope: !6593, file: !6221, discriminator: 0)
!6593 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17h35574d20de4dd1feE", scope: !789, file: !3835, line: 464, type: !2774, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!6594 = !DILocation(line: 56, column: 44, scope: !6595, inlinedAt: !6598)
!6595 = distinct !DISubprogram(name: "of<u8>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h51e525680bef0cd0E", scope: !1469, file: !6264, line: 54, type: !6596, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!6596 = !DISubroutineType(types: !6597)
!6597 = !{!1469}
!6598 = !DILocation(line: 419, column: 51, scope: !6497)
!6599 = !DILocalVariable(name: "align", scope: !6600, file: !6221, line: 419, type: !9, align: 8)
!6600 = !DILexicalBlockFile(scope: !6601, file: !6221, discriminator: 0)
!6601 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6602)
!6602 = !{!6599, !6603}
!6603 = !DILocalVariable(name: "runtime", scope: !6604, file: !6221, line: 419, type: !6271, align: 8)
!6604 = !DILexicalBlockFile(scope: !6605, file: !6221, discriminator: 0)
!6605 = distinct !DILexicalBlock(scope: !6601, file: !913, line: 2336, column: 13)
!6606 = !DILocation(line: 419, column: 51, scope: !6600, inlinedAt: !6607)
!6607 = !DILocation(line: 56, column: 18, scope: !6595, inlinedAt: !6598)
!6608 = !DILocation(line: 420, column: 6, scope: !6491)
!6609 = !DILocation(line: 419, column: 9, scope: !6497)
!6610 = distinct !DISubprogram(name: "array<&str>", linkageName: "_ZN4core5alloc6layout6Layout5array17h9459a5cb1ebe3a3fE", scope: !1463, file: !6221, line: 416, type: !6492, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !6611)
!6611 = !{!6612, !6613, !6615, !6617}
!6612 = !DILocalVariable(name: "n", arg: 1, scope: !6610, file: !6221, line: 416, type: !9)
!6613 = !DILocalVariable(name: "array_size", scope: !6614, file: !6221, line: 417, type: !9, align: 8)
!6614 = distinct !DILexicalBlock(scope: !6610, file: !6221, line: 417, column: 9)
!6615 = !DILocalVariable(name: "residual", scope: !6616, file: !6221, line: 417, type: !6500, align: 1)
!6616 = distinct !DILexicalBlock(scope: !6610, file: !6221, line: 417, column: 79)
!6617 = !DILocalVariable(name: "val", scope: !6618, file: !6221, line: 417, type: !9, align: 8)
!6618 = distinct !DILexicalBlock(scope: !6610, file: !6221, line: 417, column: 26)
!6619 = !DILocation(line: 416, column: 21, scope: !6610)
!6620 = !DILocalVariable(name: "self", scope: !6621, file: !6221, line: 417, type: !6537, align: 8)
!6621 = !DILexicalBlockFile(scope: !6622, file: !6221, discriminator: 0)
!6622 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h795025f6cdd351c5E", scope: !2662, file: !1782, line: 2117, type: !6519, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6545, retainedNodes: !6623)
!6623 = !{!6620, !6624, !6627}
!6624 = !DILocalVariable(name: "v", scope: !6625, file: !6221, line: 417, type: !9, align: 8)
!6625 = !DILexicalBlockFile(scope: !6626, file: !6221, discriminator: 0)
!6626 = distinct !DILexicalBlock(scope: !6622, file: !1782, line: 2119, column: 13)
!6627 = !DILocalVariable(name: "e", scope: !6628, file: !6221, line: 417, type: !6438, align: 1)
!6628 = !DILexicalBlockFile(scope: !6629, file: !6221, discriminator: 0)
!6629 = distinct !DILexicalBlock(scope: !6622, file: !1782, line: 2120, column: 13)
!6630 = !DILocation(line: 417, column: 26, scope: !6621, inlinedAt: !6631)
!6631 = !DILocation(line: 417, column: 26, scope: !6610)
!6632 = !DILocalVariable(name: "self", scope: !6633, file: !6221, line: 417, type: !1740, align: 8)
!6633 = !DILexicalBlockFile(scope: !6634, file: !6221, discriminator: 0)
!6634 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hcf4f4695421db280E", scope: !1740, file: !1848, line: 1051, type: !6563, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6545, retainedNodes: !6635)
!6635 = !{!6632, !6636, !6637}
!6636 = !DILocalVariable(name: "err", scope: !6633, file: !6221, line: 417, type: !6438, align: 1)
!6637 = !DILocalVariable(name: "v", scope: !6638, file: !6221, line: 417, type: !9, align: 8)
!6638 = !DILexicalBlockFile(scope: !6639, file: !6221, discriminator: 0)
!6639 = distinct !DILexicalBlock(scope: !6634, file: !1848, line: 1056, column: 13)
!6640 = !DILocation(line: 417, column: 26, scope: !6633, inlinedAt: !6631)
!6641 = !DILocation(line: 417, column: 79, scope: !6616)
!6642 = !DILocalVariable(name: "residual", scope: !6643, file: !6221, line: 417, type: !6500, align: 1)
!6643 = !DILexicalBlockFile(scope: !6644, file: !6221, discriminator: 0)
!6644 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h096f495749181026E", scope: !2709, file: !1782, line: 2132, type: !6575, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6581, retainedNodes: !6645)
!6645 = !{!6642, !6646}
!6646 = !DILocalVariable(name: "e", scope: !6647, file: !6221, line: 417, type: !6438, align: 1)
!6647 = !DILexicalBlockFile(scope: !6648, file: !6221, discriminator: 0)
!6648 = distinct !DILexicalBlock(scope: !6644, file: !1782, line: 2134, column: 13)
!6649 = !DILocation(line: 417, column: 26, scope: !6643, inlinedAt: !6650)
!6650 = !DILocation(line: 417, column: 26, scope: !6616)
!6651 = !DILocation(line: 417, column: 26, scope: !6628, inlinedAt: !6631)
!6652 = !DILocation(line: 417, column: 26, scope: !6647, inlinedAt: !6650)
!6653 = !DILocation(line: 417, column: 26, scope: !6638, inlinedAt: !6631)
!6654 = !DILocation(line: 417, column: 26, scope: !6625, inlinedAt: !6631)
!6655 = !DILocation(line: 417, column: 26, scope: !6618)
!6656 = !DILocation(line: 417, column: 13, scope: !6614)
!6657 = !DILocation(line: 419, column: 51, scope: !6658, inlinedAt: !6660)
!6658 = !DILexicalBlockFile(scope: !6659, file: !6221, discriminator: 0)
!6659 = distinct !DISubprogram(name: "align_of<&str>", linkageName: "_ZN4core3mem8align_of17h20f544c066bc4021E", scope: !789, file: !3835, line: 464, type: !2774, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !28)
!6660 = !DILocation(line: 56, column: 44, scope: !6661, inlinedAt: !6662)
!6661 = distinct !DISubprogram(name: "of<&str>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h95b8fa23cd4b78caE", scope: !1469, file: !6264, line: 54, type: !6596, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !28)
!6662 = !DILocation(line: 419, column: 51, scope: !6614)
!6663 = !DILocalVariable(name: "align", scope: !6664, file: !6221, line: 419, type: !9, align: 8)
!6664 = !DILexicalBlockFile(scope: !6665, file: !6221, discriminator: 0)
!6665 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6666)
!6666 = !{!6663, !6667}
!6667 = !DILocalVariable(name: "runtime", scope: !6668, file: !6221, line: 419, type: !6271, align: 8)
!6668 = !DILexicalBlockFile(scope: !6669, file: !6221, discriminator: 0)
!6669 = distinct !DILexicalBlock(scope: !6665, file: !913, line: 2336, column: 13)
!6670 = !DILocation(line: 419, column: 51, scope: !6664, inlinedAt: !6671)
!6671 = !DILocation(line: 56, column: 18, scope: !6661, inlinedAt: !6662)
!6672 = !DILocation(line: 420, column: 6, scope: !6610)
!6673 = !DILocation(line: 419, column: 9, scope: !6614)
!6674 = distinct !DISubprogram(name: "fmt<i32, 16>", linkageName: "_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h65117bdedec693f7E", scope: !6676, file: !6675, line: 251, type: !6678, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !6680)
!6675 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e237aff39bff30ac55984ee183267020")
!6676 = !DINamespace(name: "{impl#12}", scope: !6677)
!6677 = !DINamespace(name: "array", scope: !32)
!6678 = !DISubroutineType(types: !6679)
!6679 = !{!1717, !585, !1733}
!6680 = !{!6681, !6682}
!6681 = !DILocalVariable(name: "self", arg: 1, scope: !6674, file: !6675, line: 251, type: !585)
!6682 = !DILocalVariable(name: "f", arg: 2, scope: !6674, file: !6675, line: 251, type: !1733)
!6683 = !DILocation(line: 251, column: 12, scope: !6674)
!6684 = !DILocation(line: 251, column: 19, scope: !6674)
!6685 = !DILocalVariable(name: "index", scope: !6686, file: !6675, line: 252, type: !5844, align: 1)
!6686 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull, 16>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h07bd2c8b36e9aaf6E", scope: !6687, file: !6675, line: 285, type: !6688, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6692, retainedNodes: !6690)
!6687 = !DINamespace(name: "{impl#15}", scope: !6677)
!6688 = !DISubroutineType(types: !6689)
!6689 = !{!3506, !585, !5844, !1109}
!6690 = !{!6691, !6685}
!6691 = !DILocalVariable(name: "self", scope: !6686, file: !6675, line: 252, type: !585, align: 8)
!6692 = !{!3515, !5848}
!6693 = !DILocation(line: 252, column: 27, scope: !6686, inlinedAt: !6694)
!6694 = !DILocation(line: 252, column: 27, scope: !6674)
!6695 = !DILocalVariable(name: "index", scope: !6696, file: !6675, line: 252, type: !5844, align: 1)
!6696 = !DILexicalBlockFile(scope: !6697, file: !6675, discriminator: 0)
!6697 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h160dea6e8b9e9a87E", scope: !1552, file: !889, line: 17, type: !6698, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6692, retainedNodes: !6700)
!6698 = !DISubroutineType(types: !6699)
!6699 = !{!3506, !3506, !5844, !1109}
!6700 = !{!6701, !6695}
!6701 = !DILocalVariable(name: "self", scope: !6696, file: !6675, line: 252, type: !3506, align: 8)
!6702 = !DILocation(line: 252, column: 27, scope: !6696, inlinedAt: !6703)
!6703 = !DILocation(line: 286, column: 9, scope: !6686, inlinedAt: !6694)
!6704 = !DILocalVariable(name: "self", scope: !6705, file: !6675, line: 252, type: !5844, align: 1)
!6705 = !DILexicalBlockFile(scope: !6706, file: !6675, discriminator: 0)
!6706 = distinct !DISubprogram(name: "index<i32>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hd14942db56d24d8cE", scope: !5868, file: !889, line: 432, type: !6707, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !6709)
!6707 = !DISubroutineType(types: !6708)
!6708 = !{!3506, !5844, !3506, !1109}
!6709 = !{!6704, !6710}
!6710 = !DILocalVariable(name: "slice", scope: !6705, file: !6675, line: 252, type: !3506, align: 8)
!6711 = !DILocation(line: 252, column: 27, scope: !6705, inlinedAt: !6712)
!6712 = !DILocation(line: 18, column: 9, scope: !6697, inlinedAt: !6703)
!6713 = !DILocation(line: 252, column: 26, scope: !6674)
!6714 = !DILocation(line: 252, column: 9, scope: !6674)
!6715 = !DILocation(line: 253, column: 6, scope: !6674)
!6716 = distinct !DISubprogram(name: "fmt<i32, 11>", linkageName: "_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hcbcabcbc5690b5d9E", scope: !6676, file: !6675, line: 251, type: !6717, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !6719)
!6717 = !DISubroutineType(types: !6718)
!6718 = !{!1717, !564, !1733}
!6719 = !{!6720, !6721}
!6720 = !DILocalVariable(name: "self", arg: 1, scope: !6716, file: !6675, line: 251, type: !564)
!6721 = !DILocalVariable(name: "f", arg: 2, scope: !6716, file: !6675, line: 251, type: !1733)
!6722 = !DILocation(line: 251, column: 12, scope: !6716)
!6723 = !DILocation(line: 251, column: 19, scope: !6716)
!6724 = !DILocalVariable(name: "index", scope: !6725, file: !6675, line: 252, type: !5844, align: 1)
!6725 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull, 11>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h6ae2d0d371b2d4cfE", scope: !6687, file: !6675, line: 285, type: !6726, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6692, retainedNodes: !6728)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!3506, !564, !5844, !1109}
!6728 = !{!6729, !6724}
!6729 = !DILocalVariable(name: "self", scope: !6725, file: !6675, line: 252, type: !564, align: 8)
!6730 = !DILocation(line: 252, column: 27, scope: !6725, inlinedAt: !6731)
!6731 = !DILocation(line: 252, column: 27, scope: !6716)
!6732 = !DILocalVariable(name: "index", scope: !6733, file: !6675, line: 252, type: !5844, align: 1)
!6733 = !DILexicalBlockFile(scope: !6734, file: !6675, discriminator: 0)
!6734 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h160dea6e8b9e9a87E", scope: !1552, file: !889, line: 17, type: !6698, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6692, retainedNodes: !6735)
!6735 = !{!6736, !6732}
!6736 = !DILocalVariable(name: "self", scope: !6733, file: !6675, line: 252, type: !3506, align: 8)
!6737 = !DILocation(line: 252, column: 27, scope: !6733, inlinedAt: !6738)
!6738 = !DILocation(line: 286, column: 9, scope: !6725, inlinedAt: !6731)
!6739 = !DILocalVariable(name: "self", scope: !6740, file: !6675, line: 252, type: !5844, align: 1)
!6740 = !DILexicalBlockFile(scope: !6741, file: !6675, discriminator: 0)
!6741 = distinct !DISubprogram(name: "index<i32>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hd14942db56d24d8cE", scope: !5868, file: !889, line: 432, type: !6707, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !6742)
!6742 = !{!6739, !6743}
!6743 = !DILocalVariable(name: "slice", scope: !6740, file: !6675, line: 252, type: !3506, align: 8)
!6744 = !DILocation(line: 252, column: 27, scope: !6740, inlinedAt: !6745)
!6745 = !DILocation(line: 18, column: 9, scope: !6734, inlinedAt: !6738)
!6746 = !DILocation(line: 252, column: 26, scope: !6716)
!6747 = !DILocation(line: 252, column: 9, scope: !6716)
!6748 = !DILocation(line: 253, column: 6, scope: !6716)
!6749 = distinct !DISubprogram(name: "eq<i32, i32, 11>", linkageName: "_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h62e75519163072eeE", scope: !6751, file: !6750, line: 11, type: !6753, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6758, retainedNodes: !6755)
!6750 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/equality.rs", directory: "", checksumkind: CSK_MD5, checksum: "0b2a6ef978d2ec8f60a33a03ff9f5cb8")
!6751 = !DINamespace(name: "{impl#0}", scope: !6752)
!6752 = !DINamespace(name: "equality", scope: !6677)
!6753 = !DISubroutineType(types: !6754)
!6754 = !{!1244, !564, !564}
!6755 = !{!6756, !6757}
!6756 = !DILocalVariable(name: "self", arg: 1, scope: !6749, file: !6750, line: 11, type: !564)
!6757 = !DILocalVariable(name: "other", arg: 2, scope: !6749, file: !6750, line: 11, type: !564)
!6758 = !{!6759, !6760}
!6759 = !DITemplateTypeParameter(name: "A", type: !70)
!6760 = !DITemplateTypeParameter(name: "B", type: !70)
!6761 = !DILocation(line: 11, column: 11, scope: !6749)
!6762 = !DILocation(line: 11, column: 18, scope: !6749)
!6763 = !DILocation(line: 12, column: 9, scope: !6749)
!6764 = !DILocation(line: 13, column: 6, scope: !6749)
!6765 = distinct !DISubprogram(name: "eq<i32, i32, 16>", linkageName: "_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hef36bf5c9afa71deE", scope: !6751, file: !6750, line: 11, type: !6766, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6758, retainedNodes: !6768)
!6766 = !DISubroutineType(types: !6767)
!6767 = !{!1244, !585, !585}
!6768 = !{!6769, !6770}
!6769 = !DILocalVariable(name: "self", arg: 1, scope: !6765, file: !6750, line: 11, type: !585)
!6770 = !DILocalVariable(name: "other", arg: 2, scope: !6765, file: !6750, line: 11, type: !585)
!6771 = !DILocation(line: 11, column: 11, scope: !6765)
!6772 = !DILocation(line: 11, column: 18, scope: !6765)
!6773 = !DILocation(line: 12, column: 9, scope: !6765)
!6774 = !DILocation(line: 13, column: 6, scope: !6765)
!6775 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h0239486d9a4ab0b9E", scope: !6777, file: !6776, line: 189, type: !6780, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !6782)
!6776 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "3792fef4e5cf0c1ef2457d8c192d163d")
!6777 = !DINamespace(name: "{impl#5}", scope: !6778)
!6778 = !DINamespace(name: "impls", scope: !6779)
!6779 = !DINamespace(name: "clone", scope: !32)
!6780 = !DISubroutineType(types: !6781)
!6781 = !{!9, !918}
!6782 = !{!6783}
!6783 = !DILocalVariable(name: "self", arg: 1, scope: !6775, file: !6776, line: 189, type: !918)
!6784 = !DILocation(line: 189, column: 30, scope: !6775)
!6785 = !DILocation(line: 190, column: 25, scope: !6775)
!6786 = !DILocation(line: 191, column: 22, scope: !6775)
!6787 = distinct !DISubprogram(name: "as_mut_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha608522f02daa2efE", scope: !1568, file: !1567, line: 506, type: !6788, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !6794)
!6788 = !DISubroutineType(types: !6789)
!6789 = !{!618, !6790}
!6790 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [i32]", file: !2, size: 128, align: 64, elements: !6791, templateParams: !28, identifier: "e558f8cebf02444c46b3d01510c8747d")
!6791 = !{!6792, !6793}
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6790, file: !2, baseType: !3509, size: 64, align: 64)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6790, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6794 = !{!6795}
!6795 = !DILocalVariable(name: "self", arg: 1, scope: !6787, file: !1567, line: 506, type: !6790)
!6796 = !DILocation(line: 506, column: 29, scope: !6787)
!6797 = !DILocation(line: 507, column: 9, scope: !6787)
!6798 = !DILocation(line: 508, column: 6, scope: !6787)
!6799 = distinct !DISubprogram(name: "iter<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h3ea2a2b79a52364dE", scope: !1568, file: !1567, line: 734, type: !6800, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !6810)
!6800 = !DISubroutineType(types: !6801)
!6801 = !{!6802, !1652}
!6802 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<&str>", scope: !3578, file: !2, size: 128, align: 64, elements: !6803, templateParams: !1203, identifier: "d709ed799b8392719bcce153b50f3828")
!6803 = !{!6804, !6805, !6806}
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6802, file: !2, baseType: !1199, size: 64, align: 64)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6802, file: !2, baseType: !1202, size: 64, align: 64, offset: 64)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6802, file: !2, baseType: !6807, align: 8)
!6807 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&&str>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !6808, identifier: "66ab2fe081febe38e272fa037dd7b798")
!6808 = !{!6809}
!6809 = !DITemplateTypeParameter(name: "T", type: !3679)
!6810 = !{!6811}
!6811 = !DILocalVariable(name: "self", arg: 1, scope: !6799, file: !1567, line: 734, type: !1652)
!6812 = !DILocation(line: 734, column: 17, scope: !6799)
!6813 = !DILocation(line: 735, column: 9, scope: !6799)
!6814 = !DILocation(line: 736, column: 6, scope: !6799)
!6815 = distinct !DISubprogram(name: "eq<u8, u8>", linkageName: "_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h8417e7e68e2e7c02E", scope: !6817, file: !6816, line: 25, type: !6819, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3683, retainedNodes: !6821)
!6816 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "d8ffa992b82fe6d1648610bb489e30e6")
!6817 = !DINamespace(name: "{impl#0}", scope: !6818)
!6818 = !DINamespace(name: "cmp", scope: !892)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!1244, !1083, !1083}
!6821 = !{!6822, !6823}
!6822 = !DILocalVariable(name: "self", arg: 1, scope: !6815, file: !6816, line: 25, type: !1083)
!6823 = !DILocalVariable(name: "other", arg: 2, scope: !6815, file: !6816, line: 25, type: !1083)
!6824 = !DILocation(line: 25, column: 11, scope: !6815)
!6825 = !DILocation(line: 25, column: 18, scope: !6815)
!6826 = !DILocation(line: 26, column: 9, scope: !6815)
!6827 = !DILocation(line: 27, column: 6, scope: !6815)
!6828 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h89eec0c95a4a6cfeE", scope: !4691, file: !6829, line: 88, type: !6830, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6832)
!6829 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "36678af40fdc22d7150f6f91e11271b3")
!6830 = !DISubroutineType(types: !6831)
!6831 = !{!4691, !1083}
!6832 = !{!6833, !6834, !6836}
!6833 = !DILocalVariable(name: "slice", arg: 1, scope: !6828, file: !6829, line: 88, type: !1083)
!6834 = !DILocalVariable(name: "ptr", scope: !6835, file: !6829, line: 89, type: !353, align: 8)
!6835 = distinct !DILexicalBlock(scope: !6828, file: !6829, line: 89, column: 9)
!6836 = !DILocalVariable(name: "end", scope: !6837, file: !6829, line: 94, type: !353, align: 8)
!6837 = distinct !DILexicalBlock(scope: !6835, file: !6829, line: 94, column: 13)
!6838 = !DILocation(line: 88, column: 23, scope: !6828)
!6839 = !DILocation(line: 94, column: 17, scope: !6837)
!6840 = !DILocalVariable(name: "metadata", scope: !6841, file: !6829, line: 92, type: !7, align: 1)
!6841 = !DILexicalBlockFile(scope: !6842, file: !6829, discriminator: 0)
!6842 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h4aa80bedb05af437E", scope: !981, file: !980, line: 110, type: !6843, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6845)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{!353, !6, !7}
!6845 = !{!6846, !6840}
!6846 = !DILocalVariable(name: "data_address", scope: !6841, file: !6829, line: 92, type: !6, align: 8)
!6847 = !DILocation(line: 92, column: 21, scope: !6841, inlinedAt: !6848)
!6848 = !DILocation(line: 513, column: 5, scope: !6849, inlinedAt: !6852)
!6849 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17hc3ad23a4f877b6c9E", scope: !53, file: !959, line: 512, type: !6850, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!6850 = !DISubroutineType(types: !6851)
!6851 = !{!353}
!6852 = !DILocation(line: 39, column: 43, scope: !6853, inlinedAt: !6859)
!6853 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf6dd7547acd73011E", scope: !939, file: !929, line: 36, type: !6854, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6856)
!6854 = !DISubroutineType(types: !6855)
!6855 = !{!1244, !353}
!6856 = !{!6857}
!6857 = !DILocalVariable(name: "self", scope: !6858, file: !6829, line: 92, type: !353, align: 8)
!6858 = !DILexicalBlockFile(scope: !6853, file: !6829, discriminator: 0)
!6859 = !DILocation(line: 92, column: 21, scope: !6835)
!6860 = !DILocation(line: 89, column: 19, scope: !6828)
!6861 = !DILocalVariable(name: "self", scope: !6862, file: !6829, line: 89, type: !1083, align: 8)
!6862 = !DILexicalBlockFile(scope: !6863, file: !6829, discriminator: 0)
!6863 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h24914325a8ead00fE", scope: !1568, file: !1567, line: 476, type: !6864, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6866)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!353, !1083}
!6866 = !{!6861}
!6867 = !DILocation(line: 89, column: 19, scope: !6862, inlinedAt: !6860)
!6868 = !DILocation(line: 89, column: 13, scope: !6835)
!6869 = !DILocation(line: 92, column: 21, scope: !6858, inlinedAt: !6859)
!6870 = !DILocalVariable(name: "self", scope: !6871, file: !6829, line: 92, type: !353, align: 8)
!6871 = !DILexicalBlockFile(scope: !6872, file: !6829, discriminator: 0)
!6872 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hdac652941147f64aE", scope: !939, file: !929, line: 777, type: !6873, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6875)
!6873 = !DISubroutineType(types: !6874)
!6874 = !{!1244, !353, !353}
!6875 = !{!6870, !6876}
!6876 = !DILocalVariable(name: "other", scope: !6871, file: !6829, line: 92, type: !353, align: 8)
!6877 = !DILocation(line: 92, column: 21, scope: !6871, inlinedAt: !6878)
!6878 = !DILocation(line: 39, column: 9, scope: !6853, inlinedAt: !6859)
!6879 = !DILocation(line: 92, column: 21, scope: !6880, inlinedAt: !6886)
!6880 = !DILexicalBlockFile(scope: !6881, file: !6829, discriminator: 0)
!6881 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17hea3faf84fa625420E", scope: !53, file: !959, line: 538, type: !6882, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !6884)
!6882 = !DISubroutineType(types: !6883)
!6883 = !{!6, !9}
!6884 = !{!6885}
!6885 = !DILocalVariable(name: "addr", scope: !6880, file: !6829, line: 92, type: !9, align: 8)
!6886 = !DILocation(line: 513, column: 20, scope: !6849, inlinedAt: !6852)
!6887 = !DILocation(line: 92, column: 20, scope: !6835)
!6888 = !DILocation(line: 92, column: 13, scope: !6835)
!6889 = !DILocation(line: 94, column: 26, scope: !6835)
!6890 = !DILocation(line: 95, column: 17, scope: !6835)
!6891 = !DILocalVariable(name: "self", scope: !6892, file: !6829, line: 95, type: !353, align: 8)
!6892 = !DILexicalBlockFile(scope: !6893, file: !6829, discriminator: 0)
!6893 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17he7760b673e9f4e17E", scope: !939, file: !929, line: 1042, type: !940, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6894)
!6894 = !{!6891, !6895}
!6895 = !DILocalVariable(name: "count", scope: !6892, file: !6829, line: 95, type: !9, align: 8)
!6896 = !DILocation(line: 95, column: 17, scope: !6892, inlinedAt: !6890)
!6897 = !DILocation(line: 95, column: 49, scope: !6835)
!6898 = !DILocalVariable(name: "self", scope: !6899, file: !6829, line: 95, type: !353, align: 8)
!6899 = !DILexicalBlockFile(scope: !6900, file: !6829, discriminator: 0)
!6900 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hf7b7beef1ec4ebb3E", scope: !939, file: !929, line: 536, type: !949, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6901)
!6901 = !{!6898, !6902}
!6902 = !DILocalVariable(name: "count", scope: !6899, file: !6829, line: 95, type: !951, align: 8)
!6903 = !DILocation(line: 95, column: 17, scope: !6899, inlinedAt: !6904)
!6904 = !DILocation(line: 1046, column: 9, scope: !6893, inlinedAt: !6890)
!6905 = !DILocation(line: 97, column: 17, scope: !6835)
!6906 = !DILocalVariable(name: "self", scope: !6907, file: !6829, line: 97, type: !353, align: 8)
!6907 = !DILexicalBlockFile(scope: !6908, file: !6829, discriminator: 0)
!6908 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h82208e5cbd5d7609E", scope: !939, file: !929, line: 871, type: !940, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6909)
!6909 = !{!6906, !6910}
!6910 = !DILocalVariable(name: "count", scope: !6907, file: !6829, line: 97, type: !9, align: 8)
!6911 = !DILocation(line: 97, column: 17, scope: !6907, inlinedAt: !6905)
!6912 = !DILocation(line: 97, column: 25, scope: !6835)
!6913 = !DILocalVariable(name: "self", scope: !6914, file: !6829, line: 97, type: !353, align: 8)
!6914 = !DILexicalBlockFile(scope: !6915, file: !6829, discriminator: 0)
!6915 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17ha09c9658f9aa8a93E", scope: !939, file: !929, line: 453, type: !949, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6916)
!6916 = !{!6913, !6917}
!6917 = !DILocalVariable(name: "count", scope: !6914, file: !6829, line: 97, type: !951, align: 8)
!6918 = !DILocation(line: 97, column: 17, scope: !6914, inlinedAt: !6919)
!6919 = !DILocation(line: 876, column: 18, scope: !6908, inlinedAt: !6905)
!6920 = !DILocation(line: 94, column: 23, scope: !6835)
!6921 = !DILocation(line: 100, column: 48, scope: !6837)
!6922 = !DILocalVariable(name: "ptr", scope: !6923, file: !6829, line: 100, type: !1021, align: 8)
!6923 = !DILexicalBlockFile(scope: !6924, file: !6829, discriminator: 0)
!6924 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6925)
!6925 = !{!6922}
!6926 = !DILocation(line: 100, column: 25, scope: !6923, inlinedAt: !6927)
!6927 = !DILocation(line: 100, column: 25, scope: !6837)
!6928 = !DILocation(line: 100, column: 64, scope: !6837)
!6929 = !DILocation(line: 100, column: 13, scope: !6837)
!6930 = !DILocation(line: 102, column: 6, scope: !6828)
!6931 = distinct !DISubprogram(name: "new<i32>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17hb99186a617c39175E", scope: !3577, file: !6829, line: 88, type: !3575, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !6932)
!6932 = !{!6933, !6934, !6936}
!6933 = !DILocalVariable(name: "slice", arg: 1, scope: !6931, file: !6829, line: 88, type: !3506)
!6934 = !DILocalVariable(name: "ptr", scope: !6935, file: !6829, line: 89, type: !3584, align: 8)
!6935 = distinct !DILexicalBlock(scope: !6931, file: !6829, line: 89, column: 9)
!6936 = !DILocalVariable(name: "end", scope: !6937, file: !6829, line: 94, type: !3584, align: 8)
!6937 = distinct !DILexicalBlock(scope: !6935, file: !6829, line: 94, column: 13)
!6938 = !DILocation(line: 88, column: 23, scope: !6931)
!6939 = !DILocation(line: 94, column: 17, scope: !6937)
!6940 = !DILocalVariable(name: "metadata", scope: !6941, file: !6829, line: 92, type: !7, align: 1)
!6941 = !DILexicalBlockFile(scope: !6942, file: !6829, discriminator: 0)
!6942 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h4aa80bedb05af437E", scope: !981, file: !980, line: 110, type: !6843, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6943)
!6943 = !{!6944, !6940}
!6944 = !DILocalVariable(name: "data_address", scope: !6941, file: !6829, line: 92, type: !6, align: 8)
!6945 = !DILocation(line: 92, column: 21, scope: !6941, inlinedAt: !6946)
!6946 = !DILocation(line: 513, column: 5, scope: !6947, inlinedAt: !6948)
!6947 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17hc3ad23a4f877b6c9E", scope: !53, file: !959, line: 512, type: !6850, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!6948 = !DILocation(line: 39, column: 43, scope: !6949, inlinedAt: !6955)
!6949 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hc7a6af7c4b3f29cbE", scope: !939, file: !929, line: 36, type: !6950, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !6952)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!1244, !3584}
!6952 = !{!6953}
!6953 = !DILocalVariable(name: "self", scope: !6954, file: !6829, line: 92, type: !3584, align: 8)
!6954 = !DILexicalBlockFile(scope: !6949, file: !6829, discriminator: 0)
!6955 = !DILocation(line: 92, column: 21, scope: !6935)
!6956 = !DILocation(line: 89, column: 19, scope: !6931)
!6957 = !DILocalVariable(name: "self", scope: !6958, file: !6829, line: 89, type: !3506, align: 8)
!6958 = !DILexicalBlockFile(scope: !6959, file: !6829, discriminator: 0)
!6959 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf393e69a7151c5d7E", scope: !1568, file: !1567, line: 476, type: !6960, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !6962)
!6960 = !DISubroutineType(types: !6961)
!6961 = !{!3584, !3506}
!6962 = !{!6957}
!6963 = !DILocation(line: 89, column: 19, scope: !6958, inlinedAt: !6956)
!6964 = !DILocation(line: 89, column: 13, scope: !6935)
!6965 = !DILocation(line: 92, column: 21, scope: !6954, inlinedAt: !6955)
!6966 = !DILocalVariable(name: "self", scope: !6967, file: !6829, line: 92, type: !353, align: 8)
!6967 = !DILexicalBlockFile(scope: !6968, file: !6829, discriminator: 0)
!6968 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hdac652941147f64aE", scope: !939, file: !929, line: 777, type: !6873, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6969)
!6969 = !{!6966, !6970}
!6970 = !DILocalVariable(name: "other", scope: !6967, file: !6829, line: 92, type: !353, align: 8)
!6971 = !DILocation(line: 92, column: 21, scope: !6967, inlinedAt: !6972)
!6972 = !DILocation(line: 39, column: 9, scope: !6949, inlinedAt: !6955)
!6973 = !DILocation(line: 92, column: 21, scope: !6974, inlinedAt: !6978)
!6974 = !DILexicalBlockFile(scope: !6975, file: !6829, discriminator: 0)
!6975 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17hea3faf84fa625420E", scope: !53, file: !959, line: 538, type: !6882, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !6976)
!6976 = !{!6977}
!6977 = !DILocalVariable(name: "addr", scope: !6974, file: !6829, line: 92, type: !9, align: 8)
!6978 = !DILocation(line: 513, column: 20, scope: !6947, inlinedAt: !6948)
!6979 = !DILocation(line: 92, column: 20, scope: !6935)
!6980 = !DILocation(line: 92, column: 13, scope: !6935)
!6981 = !DILocation(line: 94, column: 26, scope: !6935)
!6982 = !DILocation(line: 95, column: 17, scope: !6935)
!6983 = !DILocalVariable(name: "self", scope: !6984, file: !6829, line: 95, type: !353, align: 8)
!6984 = !DILexicalBlockFile(scope: !6985, file: !6829, discriminator: 0)
!6985 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17he7760b673e9f4e17E", scope: !939, file: !929, line: 1042, type: !940, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6986)
!6986 = !{!6983, !6987}
!6987 = !DILocalVariable(name: "count", scope: !6984, file: !6829, line: 95, type: !9, align: 8)
!6988 = !DILocation(line: 95, column: 17, scope: !6984, inlinedAt: !6982)
!6989 = !DILocation(line: 95, column: 49, scope: !6935)
!6990 = !DILocalVariable(name: "self", scope: !6991, file: !6829, line: 95, type: !353, align: 8)
!6991 = !DILexicalBlockFile(scope: !6992, file: !6829, discriminator: 0)
!6992 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hf7b7beef1ec4ebb3E", scope: !939, file: !929, line: 536, type: !949, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !6993)
!6993 = !{!6990, !6994}
!6994 = !DILocalVariable(name: "count", scope: !6991, file: !6829, line: 95, type: !951, align: 8)
!6995 = !DILocation(line: 95, column: 17, scope: !6991, inlinedAt: !6996)
!6996 = !DILocation(line: 1046, column: 9, scope: !6985, inlinedAt: !6982)
!6997 = !DILocation(line: 97, column: 17, scope: !6935)
!6998 = !DILocalVariable(name: "self", scope: !6999, file: !6829, line: 97, type: !3584, align: 8)
!6999 = !DILexicalBlockFile(scope: !7000, file: !6829, discriminator: 0)
!7000 = distinct !DISubprogram(name: "add<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h79ae9a6a5022ca7fE", scope: !939, file: !929, line: 871, type: !7001, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !7003)
!7001 = !DISubroutineType(types: !7002)
!7002 = !{!3584, !3584, !9}
!7003 = !{!6998, !7004}
!7004 = !DILocalVariable(name: "count", scope: !6999, file: !6829, line: 97, type: !9, align: 8)
!7005 = !DILocation(line: 97, column: 17, scope: !6999, inlinedAt: !6997)
!7006 = !DILocation(line: 97, column: 25, scope: !6935)
!7007 = !DILocalVariable(name: "self", scope: !7008, file: !6829, line: 97, type: !3584, align: 8)
!7008 = !DILexicalBlockFile(scope: !7009, file: !6829, discriminator: 0)
!7009 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hba410f808f3a7634E", scope: !939, file: !929, line: 453, type: !7010, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !7012)
!7010 = !DISubroutineType(types: !7011)
!7011 = !{!3584, !3584, !951}
!7012 = !{!7007, !7013}
!7013 = !DILocalVariable(name: "count", scope: !7008, file: !6829, line: 97, type: !951, align: 8)
!7014 = !DILocation(line: 97, column: 17, scope: !7008, inlinedAt: !7015)
!7015 = !DILocation(line: 876, column: 18, scope: !7000, inlinedAt: !6997)
!7016 = !DILocation(line: 94, column: 23, scope: !6935)
!7017 = !DILocation(line: 100, column: 48, scope: !6937)
!7018 = !DILocalVariable(name: "ptr", scope: !7019, file: !6829, line: 100, type: !618, align: 8)
!7019 = !DILexicalBlockFile(scope: !7020, file: !6829, discriminator: 0)
!7020 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h717af366b262a267E", scope: !3581, file: !1413, line: 196, type: !7021, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !7023)
!7021 = !DISubroutineType(types: !7022)
!7022 = !{!3581, !618}
!7023 = !{!7018}
!7024 = !DILocation(line: 100, column: 25, scope: !7019, inlinedAt: !7025)
!7025 = !DILocation(line: 100, column: 25, scope: !6937)
!7026 = !DILocation(line: 100, column: 64, scope: !6937)
!7027 = !DILocation(line: 100, column: 13, scope: !6937)
!7028 = !DILocation(line: 102, column: 6, scope: !6931)
!7029 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17hd1c0efa1a39c6a6dE", scope: !6802, file: !6829, line: 88, type: !6800, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !7030)
!7030 = !{!7031, !7032, !7034}
!7031 = !DILocalVariable(name: "slice", arg: 1, scope: !7029, file: !6829, line: 88, type: !1652)
!7032 = !DILocalVariable(name: "ptr", scope: !7033, file: !6829, line: 89, type: !1202, align: 8)
!7033 = distinct !DILexicalBlock(scope: !7029, file: !6829, line: 89, column: 9)
!7034 = !DILocalVariable(name: "end", scope: !7035, file: !6829, line: 94, type: !1202, align: 8)
!7035 = distinct !DILexicalBlock(scope: !7033, file: !6829, line: 94, column: 13)
!7036 = !DILocation(line: 88, column: 23, scope: !7029)
!7037 = !DILocation(line: 94, column: 17, scope: !7035)
!7038 = !DILocalVariable(name: "metadata", scope: !7039, file: !6829, line: 92, type: !7, align: 1)
!7039 = !DILexicalBlockFile(scope: !7040, file: !6829, discriminator: 0)
!7040 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h4aa80bedb05af437E", scope: !981, file: !980, line: 110, type: !6843, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7041)
!7041 = !{!7042, !7038}
!7042 = !DILocalVariable(name: "data_address", scope: !7039, file: !6829, line: 92, type: !6, align: 8)
!7043 = !DILocation(line: 92, column: 21, scope: !7039, inlinedAt: !7044)
!7044 = !DILocation(line: 513, column: 5, scope: !7045, inlinedAt: !7046)
!7045 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17hc3ad23a4f877b6c9E", scope: !53, file: !959, line: 512, type: !6850, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!7046 = !DILocation(line: 39, column: 43, scope: !7047, inlinedAt: !7053)
!7047 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hcd4837e5ebfa11aeE", scope: !939, file: !929, line: 36, type: !7048, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !7050)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!1244, !1202}
!7050 = !{!7051}
!7051 = !DILocalVariable(name: "self", scope: !7052, file: !6829, line: 92, type: !1202, align: 8)
!7052 = !DILexicalBlockFile(scope: !7047, file: !6829, discriminator: 0)
!7053 = !DILocation(line: 92, column: 21, scope: !7033)
!7054 = !DILocation(line: 89, column: 19, scope: !7029)
!7055 = !DILocalVariable(name: "self", scope: !7056, file: !6829, line: 89, type: !1652, align: 8)
!7056 = !DILexicalBlockFile(scope: !7057, file: !6829, discriminator: 0)
!7057 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc9ba50503f3396b6E", scope: !1568, file: !1567, line: 476, type: !7058, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !7060)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{!1202, !1652}
!7060 = !{!7055}
!7061 = !DILocation(line: 89, column: 19, scope: !7056, inlinedAt: !7054)
!7062 = !DILocation(line: 89, column: 13, scope: !7033)
!7063 = !DILocation(line: 92, column: 21, scope: !7052, inlinedAt: !7053)
!7064 = !DILocalVariable(name: "self", scope: !7065, file: !6829, line: 92, type: !353, align: 8)
!7065 = !DILexicalBlockFile(scope: !7066, file: !6829, discriminator: 0)
!7066 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hdac652941147f64aE", scope: !939, file: !929, line: 777, type: !6873, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7067)
!7067 = !{!7064, !7068}
!7068 = !DILocalVariable(name: "other", scope: !7065, file: !6829, line: 92, type: !353, align: 8)
!7069 = !DILocation(line: 92, column: 21, scope: !7065, inlinedAt: !7070)
!7070 = !DILocation(line: 39, column: 9, scope: !7047, inlinedAt: !7053)
!7071 = !DILocation(line: 92, column: 21, scope: !7072, inlinedAt: !7076)
!7072 = !DILexicalBlockFile(scope: !7073, file: !6829, discriminator: 0)
!7073 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17hea3faf84fa625420E", scope: !53, file: !959, line: 538, type: !6882, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !7074)
!7074 = !{!7075}
!7075 = !DILocalVariable(name: "addr", scope: !7072, file: !6829, line: 92, type: !9, align: 8)
!7076 = !DILocation(line: 513, column: 20, scope: !7045, inlinedAt: !7046)
!7077 = !DILocation(line: 92, column: 20, scope: !7033)
!7078 = !DILocation(line: 92, column: 13, scope: !7033)
!7079 = !DILocation(line: 94, column: 26, scope: !7033)
!7080 = !DILocation(line: 95, column: 17, scope: !7033)
!7081 = !DILocalVariable(name: "self", scope: !7082, file: !6829, line: 95, type: !353, align: 8)
!7082 = !DILexicalBlockFile(scope: !7083, file: !6829, discriminator: 0)
!7083 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17he7760b673e9f4e17E", scope: !939, file: !929, line: 1042, type: !940, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7084)
!7084 = !{!7081, !7085}
!7085 = !DILocalVariable(name: "count", scope: !7082, file: !6829, line: 95, type: !9, align: 8)
!7086 = !DILocation(line: 95, column: 17, scope: !7082, inlinedAt: !7080)
!7087 = !DILocation(line: 95, column: 49, scope: !7033)
!7088 = !DILocalVariable(name: "self", scope: !7089, file: !6829, line: 95, type: !353, align: 8)
!7089 = !DILexicalBlockFile(scope: !7090, file: !6829, discriminator: 0)
!7090 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hf7b7beef1ec4ebb3E", scope: !939, file: !929, line: 536, type: !949, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7091)
!7091 = !{!7088, !7092}
!7092 = !DILocalVariable(name: "count", scope: !7089, file: !6829, line: 95, type: !951, align: 8)
!7093 = !DILocation(line: 95, column: 17, scope: !7089, inlinedAt: !7094)
!7094 = !DILocation(line: 1046, column: 9, scope: !7083, inlinedAt: !7080)
!7095 = !DILocation(line: 97, column: 17, scope: !7033)
!7096 = !DILocalVariable(name: "self", scope: !7097, file: !6829, line: 97, type: !1202, align: 8)
!7097 = !DILexicalBlockFile(scope: !7098, file: !6829, discriminator: 0)
!7098 = distinct !DISubprogram(name: "add<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h870f2ea2bb9e3611E", scope: !939, file: !929, line: 871, type: !7099, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !7101)
!7099 = !DISubroutineType(types: !7100)
!7100 = !{!1202, !1202, !9}
!7101 = !{!7096, !7102}
!7102 = !DILocalVariable(name: "count", scope: !7097, file: !6829, line: 97, type: !9, align: 8)
!7103 = !DILocation(line: 97, column: 17, scope: !7097, inlinedAt: !7095)
!7104 = !DILocation(line: 97, column: 25, scope: !7033)
!7105 = !DILocalVariable(name: "self", scope: !7106, file: !6829, line: 97, type: !1202, align: 8)
!7106 = !DILexicalBlockFile(scope: !7107, file: !6829, discriminator: 0)
!7107 = distinct !DISubprogram(name: "offset<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h75706f634d286687E", scope: !939, file: !929, line: 453, type: !7108, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !7110)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{!1202, !1202, !951}
!7110 = !{!7105, !7111}
!7111 = !DILocalVariable(name: "count", scope: !7106, file: !6829, line: 97, type: !951, align: 8)
!7112 = !DILocation(line: 97, column: 17, scope: !7106, inlinedAt: !7113)
!7113 = !DILocation(line: 876, column: 18, scope: !7098, inlinedAt: !7095)
!7114 = !DILocation(line: 94, column: 23, scope: !7033)
!7115 = !DILocation(line: 100, column: 48, scope: !7035)
!7116 = !DILocalVariable(name: "ptr", scope: !7117, file: !6829, line: 100, type: !1275, align: 8)
!7117 = !DILexicalBlockFile(scope: !7118, file: !6829, discriminator: 0)
!7118 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9a2436cafa99480dE", scope: !1199, file: !1413, line: 196, type: !7119, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !7121)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{!1199, !1275}
!7121 = !{!7116}
!7122 = !DILocation(line: 100, column: 25, scope: !7117, inlinedAt: !7123)
!7123 = !DILocation(line: 100, column: 25, scope: !7035)
!7124 = !DILocation(line: 100, column: 64, scope: !7035)
!7125 = !DILocation(line: 100, column: 13, scope: !7035)
!7126 = !DILocation(line: 102, column: 6, scope: !7029)
!7127 = distinct !DISubprogram(name: "memchr", linkageName: "_ZN4core5slice6memchr6memchr17h89ad2c6d6bd525ccE", scope: !7129, file: !7128, line: 38, type: !7130, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7132)
!7128 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/memchr.rs", directory: "", checksumkind: CSK_MD5, checksum: "065f1e34afe7661a69ed38e528fd9ddb")
!7129 = !DINamespace(name: "memchr", scope: !892)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!1740, !78, !1083}
!7132 = !{!7133, !7134}
!7133 = !DILocalVariable(name: "x", arg: 1, scope: !7127, file: !7128, line: 38, type: !78)
!7134 = !DILocalVariable(name: "text", arg: 2, scope: !7127, file: !7128, line: 38, type: !1083)
!7135 = !DILocation(line: 38, column: 15, scope: !7127)
!7136 = !DILocation(line: 38, column: 22, scope: !7127)
!7137 = !DILocation(line: 40, column: 8, scope: !7127)
!7138 = !DILocation(line: 44, column: 25, scope: !7127)
!7139 = !DILocation(line: 44, column: 5, scope: !7127)
!7140 = !DILocation(line: 41, column: 16, scope: !7127)
!7141 = !DILocalVariable(name: "self", scope: !7142, file: !7128, line: 41, type: !1083, align: 8)
!7142 = !DILexicalBlockFile(scope: !7143, file: !7128, discriminator: 0)
!7143 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hdc50fe5668675ee7E", scope: !1568, file: !1567, line: 734, type: !6830, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7144)
!7144 = !{!7141}
!7145 = !DILocation(line: 41, column: 16, scope: !7142, inlinedAt: !7140)
!7146 = !DILocation(line: 41, column: 37, scope: !7127)
!7147 = !DILocation(line: 45, column: 2, scope: !7127)
!7148 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h28055ad8613f3affE", scope: !7149, file: !7128, line: 41, type: !7150, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7156)
!7149 = !DINamespace(name: "memchr", scope: !7129)
!7150 = !DISubroutineType(types: !7151)
!7151 = !{!1244, !7152, !4699}
!7152 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::memchr::memchr::{closure_env#0}", baseType: !7153, size: 64, align: 64, dwarfAddressSpace: 0)
!7153 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7149, file: !2, size: 64, align: 64, elements: !7154, templateParams: !28, identifier: "b00955afa1c965f699a759ca804d52c1")
!7154 = !{!7155}
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__x", scope: !7153, file: !2, baseType: !4699, size: 64, align: 64)
!7156 = !{!7157, !7158}
!7157 = !DILocalVariable(name: "elt", arg: 2, scope: !7148, file: !7128, line: 41, type: !4699)
!7158 = !DILocalVariable(name: "x", scope: !7148, file: !7128, line: 38, type: !78, align: 1)
!7159 = !DILocation(line: 38, column: 15, scope: !7148)
!7160 = !DILocation(line: 41, column: 38, scope: !7148)
!7161 = !DILocation(line: 41, column: 43, scope: !7148)
!7162 = !DILocation(line: 41, column: 51, scope: !7148)
!7163 = !DILocation(line: 41, column: 42, scope: !7148)
!7164 = distinct !DISubprogram(name: "map<alloc::string::String, alloc::ffi::c_str::CString, std::thread::{impl#0}::spawn_unchecked_::{closure_env#0}<statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}, ()>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h403aacee59a265c5E", scope: !2597, file: !1848, line: 923, type: !7165, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7172, retainedNodes: !7167)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{!230, !2597, !3105}
!7167 = !{!7168, !7169, !7170}
!7168 = !DILocalVariable(name: "self", arg: 1, scope: !7164, file: !1848, line: 923, type: !2597)
!7169 = !DILocalVariable(name: "f", arg: 2, scope: !7164, file: !1848, line: 923, type: !3105)
!7170 = !DILocalVariable(name: "x", scope: !7171, file: !1848, line: 929, type: !2605, align: 8)
!7171 = distinct !DILexicalBlock(scope: !7164, file: !1848, line: 929, column: 13)
!7172 = !{!2604, !7173, !7174}
!7173 = !DITemplateTypeParameter(name: "U", type: !239)
!7174 = !DITemplateTypeParameter(name: "F", type: !3105)
!7175 = !DILocation(line: 923, column: 28, scope: !7164)
!7176 = !DILocation(line: 923, column: 34, scope: !7164)
!7177 = !DILocation(line: 929, column: 18, scope: !7171)
!7178 = !DILocation(line: 928, column: 15, scope: !7164)
!7179 = !DILocation(line: 928, column: 9, scope: !7164)
!7180 = !DILocation(line: 930, column: 21, scope: !7164)
!7181 = !DILocation(line: 929, column: 18, scope: !7164)
!7182 = !DILocation(line: 929, column: 29, scope: !7171)
!7183 = !DILocation(line: 929, column: 31, scope: !7171)
!7184 = !DILocation(line: 929, column: 24, scope: !7171)
!7185 = !DILocation(line: 929, column: 33, scope: !7164)
!7186 = !DILocation(line: 932, column: 5, scope: !7164)
!7187 = !DILocation(line: 932, column: 6, scope: !7164)
!7188 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#0}::next::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17he15e4dede6ede8eeE", scope: !4679, file: !1848, line: 923, type: !7189, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7212, retainedNodes: !7207)
!7189 = !DISubroutineType(types: !7190)
!7190 = !{!7191, !4679, !7204}
!7191 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !231, file: !2, size: 32, align: 32, elements: !7192, templateParams: !28, identifier: "182842703d13227530d78ce56a0c403e")
!7192 = !{!7193}
!7193 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7191, file: !2, size: 32, align: 32, elements: !7194, templateParams: !28, identifier: "a003d793d4429b686ac87860dc5c04de", discriminator: !7203)
!7194 = !{!7195, !7199}
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7193, file: !2, baseType: !7196, size: 32, align: 32, extraData: i64 1114112)
!7196 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7191, file: !2, size: 32, align: 32, elements: !28, templateParams: !7197, identifier: "3f6dc1f1907f9d5961a7508f51084ff9")
!7197 = !{!7198}
!7198 = !DITemplateTypeParameter(name: "T", type: !1237)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7193, file: !2, baseType: !7200, size: 32, align: 32)
!7200 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7191, file: !2, size: 32, align: 32, elements: !7201, templateParams: !7197, identifier: "8e96e38967905576ed8699e66885c8c4")
!7201 = !{!7202}
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7200, file: !2, baseType: !1237, size: 32, align: 32)
!7203 = !DIDerivedType(tag: DW_TAG_member, scope: !7191, file: !2, baseType: !275, size: 32, align: 32, flags: DIFlagArtificial)
!7204 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7205, file: !2, align: 8, elements: !28, identifier: "4cf36c936363045ec43ec5a0e97329aa")
!7205 = !DINamespace(name: "next", scope: !7206)
!7206 = !DINamespace(name: "{impl#0}", scope: !1212)
!7207 = !{!7208, !7209, !7210}
!7208 = !DILocalVariable(name: "self", arg: 1, scope: !7188, file: !1848, line: 923, type: !4679)
!7209 = !DILocalVariable(name: "f", arg: 2, scope: !7188, file: !1848, line: 923, type: !7204)
!7210 = !DILocalVariable(name: "x", scope: !7211, file: !1848, line: 929, type: !275, align: 4)
!7211 = distinct !DILexicalBlock(scope: !7188, file: !1848, line: 929, column: 13)
!7212 = !{!277, !7213, !7214}
!7213 = !DITemplateTypeParameter(name: "U", type: !1237)
!7214 = !DITemplateTypeParameter(name: "F", type: !7204)
!7215 = !DILocation(line: 923, column: 28, scope: !7188)
!7216 = !DILocation(line: 923, column: 34, scope: !7188)
!7217 = !DILocation(line: 928, column: 15, scope: !7188)
!7218 = !DILocation(line: 928, column: 9, scope: !7188)
!7219 = !DILocation(line: 930, column: 21, scope: !7188)
!7220 = !DILocation(line: 929, column: 18, scope: !7188)
!7221 = !DILocation(line: 929, column: 18, scope: !7211)
!7222 = !DILocation(line: 929, column: 29, scope: !7211)
!7223 = !{i32 0, i32 1114112}
!7224 = !DILocation(line: 929, column: 24, scope: !7211)
!7225 = !DILocation(line: 929, column: 33, scope: !7188)
!7226 = !DILocation(line: 932, column: 5, scope: !7188)
!7227 = !DILocation(line: 932, column: 6, scope: !7188)
!7228 = !{i32 0, i32 1114113}
!7229 = distinct !DISubprogram(name: "map<&str, &str, &mut core::str::LinesAnyMap>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hf5becb50fc7a807aE", scope: !5029, file: !1848, line: 923, type: !7230, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7237, retainedNodes: !7232)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!5029, !5029, !4064}
!7232 = !{!7233, !7234, !7235}
!7233 = !DILocalVariable(name: "self", arg: 1, scope: !7229, file: !1848, line: 923, type: !5029)
!7234 = !DILocalVariable(name: "f", arg: 2, scope: !7229, file: !1848, line: 923, type: !4064)
!7235 = !DILocalVariable(name: "x", scope: !7236, file: !1848, line: 929, type: !145, align: 8)
!7236 = distinct !DILexicalBlock(scope: !7229, file: !1848, line: 929, column: 13)
!7237 = !{!1204, !7238, !7239}
!7238 = !DITemplateTypeParameter(name: "U", type: !145)
!7239 = !DITemplateTypeParameter(name: "F", type: !4064)
!7240 = !DILocation(line: 923, column: 28, scope: !7229)
!7241 = !DILocation(line: 923, column: 34, scope: !7229)
!7242 = !DILocation(line: 928, column: 15, scope: !7229)
!7243 = !DILocation(line: 928, column: 9, scope: !7229)
!7244 = !DILocation(line: 930, column: 21, scope: !7229)
!7245 = !DILocation(line: 929, column: 18, scope: !7229)
!7246 = !DILocation(line: 929, column: 18, scope: !7236)
!7247 = !DILocation(line: 929, column: 29, scope: !7236)
!7248 = !DILocation(line: 929, column: 24, scope: !7236)
!7249 = !DILocation(line: 929, column: 33, scope: !7229)
!7250 = !DILocation(line: 932, column: 5, scope: !7229)
!7251 = !DILocation(line: 932, column: 6, scope: !7229)
!7252 = distinct !DISubprogram(name: "expect<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6expect17h205bf8966c4d5173E", scope: !1740, file: !1848, line: 735, type: !7253, scopeLine: 735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !7255)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{!9, !1740, !145, !1109}
!7255 = !{!7256, !7257, !7258}
!7256 = !DILocalVariable(name: "self", arg: 1, scope: !7252, file: !1848, line: 735, type: !1740)
!7257 = !DILocalVariable(name: "msg", arg: 2, scope: !7252, file: !1848, line: 735, type: !145)
!7258 = !DILocalVariable(name: "val", scope: !7259, file: !1848, line: 737, type: !9, align: 8)
!7259 = distinct !DILexicalBlock(scope: !7252, file: !1848, line: 737, column: 13)
!7260 = !DILocation(line: 735, column: 25, scope: !7252)
!7261 = !DILocation(line: 735, column: 31, scope: !7252)
!7262 = !DILocation(line: 736, column: 15, scope: !7252)
!7263 = !DILocation(line: 736, column: 9, scope: !7252)
!7264 = !DILocation(line: 738, column: 21, scope: !7252)
!7265 = !DILocation(line: 737, column: 18, scope: !7252)
!7266 = !DILocation(line: 737, column: 18, scope: !7259)
!7267 = !DILocation(line: 740, column: 6, scope: !7252)
!7268 = distinct !DISubprogram(name: "expect<std::thread::JoinHandle<()>, std::io::error::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h10badbd86b4aadf6E", scope: !2617, file: !1782, line: 1058, type: !7269, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2625, retainedNodes: !7271)
!7269 = !DISubroutineType(types: !7270)
!7270 = !{!2572, !2617, !145, !1109}
!7271 = !{!7272, !7273, !7274, !7276}
!7272 = !DILocalVariable(name: "self", arg: 1, scope: !7268, file: !1782, line: 1058, type: !2617)
!7273 = !DILocalVariable(name: "msg", arg: 2, scope: !7268, file: !1782, line: 1058, type: !145)
!7274 = !DILocalVariable(name: "t", scope: !7275, file: !1782, line: 1063, type: !2572, align: 8)
!7275 = distinct !DILexicalBlock(scope: !7268, file: !1782, line: 1063, column: 13)
!7276 = !DILocalVariable(name: "e", scope: !7277, file: !1782, line: 1064, type: !43, align: 8)
!7277 = distinct !DILexicalBlock(scope: !7268, file: !1782, line: 1064, column: 13)
!7278 = !DILocation(line: 1063, column: 16, scope: !7275)
!7279 = !DILocation(line: 1058, column: 19, scope: !7268)
!7280 = !DILocation(line: 1058, column: 25, scope: !7268)
!7281 = !DILocation(line: 1064, column: 17, scope: !7277)
!7282 = !DILocation(line: 1062, column: 15, scope: !7268)
!7283 = !DILocation(line: 1062, column: 9, scope: !7268)
!7284 = !DILocation(line: 1063, column: 16, scope: !7268)
!7285 = !DILocation(line: 1066, column: 6, scope: !7268)
!7286 = !DILocation(line: 1064, column: 17, scope: !7268)
!7287 = !DILocation(line: 1064, column: 42, scope: !7277)
!7288 = !DILocation(line: 1064, column: 23, scope: !7277)
!7289 = !DILocation(line: 1064, column: 44, scope: !7268)
!7290 = !DILocation(line: 1058, column: 5, scope: !7268)
!7291 = distinct !DISubprogram(name: "expect<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17haf67b9a71d3b11d7E", scope: !7292, file: !1782, line: 1058, type: !7307, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7300, retainedNodes: !7309)
!7292 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", scope: !31, file: !2, size: 320, align: 64, elements: !7293, templateParams: !28, identifier: "753e653043b02265f9cae25fde5c2e00")
!7293 = !{!7294}
!7294 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7292, file: !2, size: 320, align: 64, elements: !7295, templateParams: !28, identifier: "ce51dc77616053af4739a8709a00c48c", discriminator: !7306)
!7295 = !{!7296, !7302}
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7294, file: !2, baseType: !7297, size: 320, align: 64, extraData: i64 0)
!7297 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7292, file: !2, size: 320, align: 64, elements: !7298, templateParams: !7300, identifier: "36459d4bd7f16063ceede974e05b63bf")
!7298 = !{!7299}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7297, file: !2, baseType: !239, size: 128, align: 64, offset: 64)
!7300 = !{!238, !7301}
!7301 = !DITemplateTypeParameter(name: "E", type: !534)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7294, file: !2, baseType: !7303, size: 320, align: 64, extraData: i64 1)
!7303 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7292, file: !2, size: 320, align: 64, elements: !7304, templateParams: !7300, identifier: "d1044761f4770ef356b5dbe359d460f0")
!7304 = !{!7305}
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7303, file: !2, baseType: !534, size: 256, align: 64, offset: 64)
!7306 = !DIDerivedType(tag: DW_TAG_member, scope: !7292, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!7307 = !DISubroutineType(types: !7308)
!7308 = !{!239, !7292, !145, !1109}
!7309 = !{!7310, !7311, !7312, !7314}
!7310 = !DILocalVariable(name: "self", arg: 1, scope: !7291, file: !1782, line: 1058, type: !7292)
!7311 = !DILocalVariable(name: "msg", arg: 2, scope: !7291, file: !1782, line: 1058, type: !145)
!7312 = !DILocalVariable(name: "t", scope: !7313, file: !1782, line: 1063, type: !239, align: 8)
!7313 = distinct !DILexicalBlock(scope: !7291, file: !1782, line: 1063, column: 13)
!7314 = !DILocalVariable(name: "e", scope: !7315, file: !1782, line: 1064, type: !534, align: 8)
!7315 = distinct !DILexicalBlock(scope: !7291, file: !1782, line: 1064, column: 13)
!7316 = !DILocation(line: 1058, column: 19, scope: !7291)
!7317 = !DILocation(line: 1058, column: 25, scope: !7291)
!7318 = !DILocation(line: 1064, column: 17, scope: !7315)
!7319 = !DILocation(line: 1062, column: 15, scope: !7291)
!7320 = !DILocation(line: 1062, column: 9, scope: !7291)
!7321 = !DILocation(line: 1063, column: 16, scope: !7291)
!7322 = !DILocation(line: 1063, column: 16, scope: !7313)
!7323 = !DILocation(line: 1066, column: 6, scope: !7291)
!7324 = !DILocation(line: 1064, column: 17, scope: !7291)
!7325 = !DILocation(line: 1064, column: 42, scope: !7315)
!7326 = !DILocation(line: 1064, column: 23, scope: !7315)
!7327 = !DILocation(line: 1064, column: 44, scope: !7291)
!7328 = !DILocation(line: 1058, column: 5, scope: !7291)
!7329 = distinct !DISubprogram(name: "unwrap<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hc39259790eb82bdaE", scope: !446, file: !1782, line: 1101, type: !7330, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !454, retainedNodes: !7332)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{null, !446, !1109}
!7332 = !{!7333, !7334, !7336}
!7333 = !DILocalVariable(name: "self", arg: 1, scope: !7329, file: !1782, line: 1101, type: !446)
!7334 = !DILocalVariable(name: "t", scope: !7335, file: !1782, line: 1106, type: !7, align: 1)
!7335 = distinct !DILexicalBlock(scope: !7329, file: !1782, line: 1106, column: 13)
!7336 = !DILocalVariable(name: "e", scope: !7337, file: !1782, line: 1107, type: !456, align: 8)
!7337 = distinct !DILexicalBlock(scope: !7329, file: !1782, line: 1107, column: 13)
!7338 = !DILocation(line: 1106, column: 16, scope: !7335)
!7339 = !DILocation(line: 1101, column: 19, scope: !7329)
!7340 = !DILocation(line: 1107, column: 17, scope: !7337)
!7341 = !DILocation(line: 1105, column: 15, scope: !7329)
!7342 = !DILocation(line: 1105, column: 9, scope: !7329)
!7343 = !DILocation(line: 1109, column: 6, scope: !7329)
!7344 = !DILocation(line: 1107, column: 17, scope: !7329)
!7345 = !DILocation(line: 1107, column: 84, scope: !7337)
!7346 = !DILocation(line: 1107, column: 23, scope: !7337)
!7347 = !DILocation(line: 1107, column: 86, scope: !7329)
!7348 = !DILocation(line: 1101, column: 5, scope: !7329)
!7349 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc2067a3f66512852E", scope: !7350, file: !1782, line: 852, type: !7370, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7399, retainedNodes: !7392)
!7350 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !31, file: !2, size: 128, align: 64, elements: !7351, templateParams: !28, identifier: "326c2eceea8ace7e7c754e4033de99df")
!7351 = !{!7352}
!7352 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7350, file: !2, size: 128, align: 64, elements: !7353, templateParams: !28, identifier: "55535437789a1bb6b6e72f8531454ed7", discriminator: !7369)
!7353 = !{!7354, !7365}
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7352, file: !2, baseType: !7355, size: 128, align: 64)
!7355 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7350, file: !2, size: 128, align: 64, elements: !7356, templateParams: !7361, identifier: "ba797c89d5b07ad053fbf7cf4701a55")
!7356 = !{!7357}
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7355, file: !2, baseType: !7358, size: 128, align: 64)
!7358 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !52, file: !2, size: 128, align: 64, elements: !7359, templateParams: !332, identifier: "5fc58ef498feac33c505ded838596228")
!7359 = !{!7360}
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7358, file: !2, baseType: !895, size: 128, align: 64)
!7361 = !{!7362, !7363}
!7362 = !DITemplateTypeParameter(name: "T", type: !7358)
!7363 = !DITemplateTypeParameter(name: "E", type: !7364)
!7364 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !1465, file: !2, align: 8, elements: !28, identifier: "34d6c5a45c099706becbbcb30500973a")
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7352, file: !2, baseType: !7366, size: 128, align: 64, extraData: i64 0)
!7366 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7350, file: !2, size: 128, align: 64, elements: !7367, templateParams: !7361, identifier: "136305b53d5a9b78b331b3b0fa91ec26")
!7367 = !{!7368}
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7366, file: !2, baseType: !7364, align: 8)
!7369 = !DIDerivedType(tag: DW_TAG_member, scope: !7350, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!7370 = !DISubroutineType(types: !7371)
!7371 = !{!7372, !7350, !7387}
!7372 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !31, file: !2, size: 192, align: 64, elements: !7373, templateParams: !28, identifier: "601fd7588d09095b28b20a9eb093c288")
!7373 = !{!7374}
!7374 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7372, file: !2, size: 192, align: 64, elements: !7375, templateParams: !28, identifier: "3025750a6e319fc619c06f01e4832005", discriminator: !7386)
!7375 = !{!7376, !7382}
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7374, file: !2, baseType: !7377, size: 192, align: 64, extraData: i64 0)
!7377 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7372, file: !2, size: 192, align: 64, elements: !7378, templateParams: !7380, identifier: "c3a563ea9d0ebe44c356aab410dc20ec")
!7378 = !{!7379}
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7377, file: !2, baseType: !7358, size: 128, align: 64, offset: 64)
!7380 = !{!7362, !7381}
!7381 = !DITemplateTypeParameter(name: "E", type: !1450)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7374, file: !2, baseType: !7383, size: 192, align: 64, extraData: i64 1)
!7383 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7372, file: !2, size: 192, align: 64, elements: !7384, templateParams: !7380, identifier: "b98766a8ef41cfa7c1a20700f8c2ac67")
!7384 = !{!7385}
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7383, file: !2, baseType: !1450, size: 128, align: 64, offset: 64)
!7386 = !DIDerivedType(tag: DW_TAG_member, scope: !7372, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!7387 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<alloc::alloc::Global>", scope: !7388, file: !2, size: 64, align: 64, elements: !7389, templateParams: !28, identifier: "d5ca5ecf61bc300819ddcb9ae83470a1")
!7388 = !DINamespace(name: "finish_grow", scope: !343)
!7389 = !{!7390}
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !7387, file: !2, baseType: !7391, size: 64, align: 64)
!7391 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !1463, size: 64, align: 64, dwarfAddressSpace: 0)
!7392 = !{!7393, !7394, !7395, !7397}
!7393 = !DILocalVariable(name: "self", arg: 1, scope: !7349, file: !1782, line: 852, type: !7350)
!7394 = !DILocalVariable(name: "op", arg: 2, scope: !7349, file: !1782, line: 852, type: !7387)
!7395 = !DILocalVariable(name: "t", scope: !7396, file: !1782, line: 854, type: !7358, align: 8)
!7396 = distinct !DILexicalBlock(scope: !7349, file: !1782, line: 854, column: 13)
!7397 = !DILocalVariable(name: "e", scope: !7398, file: !1782, line: 855, type: !7364, align: 1)
!7398 = distinct !DILexicalBlock(scope: !7349, file: !1782, line: 855, column: 13)
!7399 = !{!7362, !7363, !7400, !7401}
!7400 = !DITemplateTypeParameter(name: "F", type: !1450)
!7401 = !DITemplateTypeParameter(name: "O", type: !7387)
!7402 = !DILocation(line: 852, column: 42, scope: !7349)
!7403 = !DILocation(line: 852, column: 48, scope: !7349)
!7404 = !DILocation(line: 855, column: 17, scope: !7398)
!7405 = !DILocation(line: 853, column: 15, scope: !7349)
!7406 = !DILocation(line: 853, column: 9, scope: !7349)
!7407 = !DILocation(line: 854, column: 16, scope: !7349)
!7408 = !DILocation(line: 854, column: 16, scope: !7396)
!7409 = !DILocation(line: 854, column: 22, scope: !7396)
!7410 = !DILocation(line: 854, column: 26, scope: !7349)
!7411 = !DILocation(line: 855, column: 27, scope: !7398)
!7412 = !DILocation(line: 855, column: 23, scope: !7398)
!7413 = !DILocation(line: 855, column: 32, scope: !7349)
!7414 = !DILocation(line: 857, column: 5, scope: !7349)
!7415 = !DILocation(line: 857, column: 6, scope: !7349)
!7416 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hc957735d7d5d8d2bE", scope: !7417, file: !1782, line: 852, type: !7431, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7457, retainedNodes: !7450)
!7417 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !31, file: !2, size: 128, align: 64, elements: !7418, templateParams: !28, identifier: "4b89620c7f2c166f553026a950f3f2d2")
!7418 = !{!7419}
!7419 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7417, file: !2, size: 128, align: 64, elements: !7420, templateParams: !28, identifier: "7cb265f2a07c8821328b46cc3c388b7f", discriminator: !7430)
!7420 = !{!7421, !7426}
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7419, file: !2, baseType: !7422, size: 128, align: 64, extraData: i64 -9223372036854775807)
!7422 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7417, file: !2, size: 128, align: 64, elements: !7423, templateParams: !7425, identifier: "fdce6ff40bcf3f7ab3b51ba04b7afc44")
!7423 = !{!7424}
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7422, file: !2, baseType: !7, align: 8)
!7425 = !{!41, !7381}
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7419, file: !2, baseType: !7427, size: 128, align: 64)
!7427 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7417, file: !2, size: 128, align: 64, elements: !7428, templateParams: !7425, identifier: "d84ca0f977a325112ceaab4e30797620")
!7428 = !{!7429}
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7427, file: !2, baseType: !1450, size: 128, align: 64)
!7430 = !DIDerivedType(tag: DW_TAG_member, scope: !7417, file: !2, baseType: !160, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!7431 = !DISubroutineType(types: !7432)
!7432 = !{!7433, !7417, !7448}
!7433 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !31, file: !2, size: 128, align: 64, elements: !7434, templateParams: !28, identifier: "cdc62e1ada228a0a3eeb1363cc168dd1")
!7434 = !{!7435}
!7435 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7433, file: !2, size: 128, align: 64, elements: !7436, templateParams: !28, identifier: "c07cde87a483df02fa92a38d58df4905", discriminator: !7447)
!7436 = !{!7437, !7443}
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7435, file: !2, baseType: !7438, size: 128, align: 64, extraData: i64 -9223372036854775807)
!7438 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7433, file: !2, size: 128, align: 64, elements: !7439, templateParams: !7441, identifier: "ef69269b9f8a8dcfd892b17f0cd69f3b")
!7439 = !{!7440}
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7438, file: !2, baseType: !7, align: 8)
!7441 = !{!41, !7442}
!7442 = !DITemplateTypeParameter(name: "E", type: !1453)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7435, file: !2, baseType: !7444, size: 128, align: 64)
!7444 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7433, file: !2, size: 128, align: 64, elements: !7445, templateParams: !7441, identifier: "d1e764ecae8c88012ac4b46bb3413624")
!7445 = !{!7446}
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7444, file: !2, baseType: !1453, size: 128, align: 64)
!7447 = !DIDerivedType(tag: DW_TAG_member, scope: !7433, file: !2, baseType: !160, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!7448 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7449, file: !2, align: 8, elements: !28, identifier: "38662dde61d7b1e78dacba2cb2773d17")
!7449 = !DINamespace(name: "handle_reserve", scope: !343)
!7450 = !{!7451, !7452, !7453, !7455}
!7451 = !DILocalVariable(name: "self", arg: 1, scope: !7416, file: !1782, line: 852, type: !7417)
!7452 = !DILocalVariable(name: "op", arg: 2, scope: !7416, file: !1782, line: 852, type: !7448)
!7453 = !DILocalVariable(name: "t", scope: !7454, file: !1782, line: 854, type: !7, align: 1)
!7454 = distinct !DILexicalBlock(scope: !7416, file: !1782, line: 854, column: 13)
!7455 = !DILocalVariable(name: "e", scope: !7456, file: !1782, line: 855, type: !1450, align: 8)
!7456 = distinct !DILexicalBlock(scope: !7416, file: !1782, line: 855, column: 13)
!7457 = !{!41, !7381, !7458, !7459}
!7458 = !DITemplateTypeParameter(name: "F", type: !1453)
!7459 = !DITemplateTypeParameter(name: "O", type: !7448)
!7460 = !DILocation(line: 852, column: 42, scope: !7416)
!7461 = !DILocation(line: 852, column: 48, scope: !7416)
!7462 = !DILocation(line: 854, column: 16, scope: !7454)
!7463 = !DILocation(line: 853, column: 15, scope: !7416)
!7464 = !{i64 0, i64 -9223372036854775806}
!7465 = !DILocation(line: 853, column: 9, scope: !7416)
!7466 = !DILocation(line: 854, column: 22, scope: !7454)
!7467 = !DILocation(line: 854, column: 26, scope: !7416)
!7468 = !DILocation(line: 855, column: 17, scope: !7416)
!7469 = !DILocation(line: 855, column: 17, scope: !7456)
!7470 = !DILocation(line: 855, column: 27, scope: !7456)
!7471 = !DILocation(line: 855, column: 23, scope: !7456)
!7472 = !DILocation(line: 855, column: 32, scope: !7416)
!7473 = !DILocation(line: 857, column: 5, scope: !7416)
!7474 = !DILocation(line: 857, column: 6, scope: !7416)
!7475 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hee905a535b73bc12E", scope: !6427, file: !1782, line: 852, type: !7476, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7500, retainedNodes: !7493)
!7476 = !DISubroutineType(types: !7477)
!7477 = !{!7478, !6427, !7492}
!7478 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !31, file: !2, size: 192, align: 64, elements: !7479, templateParams: !28, identifier: "b9de8b8c009cd0becb59806c6ce8cc5f")
!7479 = !{!7480}
!7480 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7478, file: !2, size: 192, align: 64, elements: !7481, templateParams: !28, identifier: "2c02efbe3ea4d75026f025a2705c6c96", discriminator: !7491)
!7481 = !{!7482, !7487}
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7480, file: !2, baseType: !7483, size: 192, align: 64, extraData: i64 0)
!7483 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7478, file: !2, size: 192, align: 64, elements: !7484, templateParams: !7486, identifier: "d52268884abf5d8c9a943cd013eaf021")
!7484 = !{!7485}
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7483, file: !2, baseType: !1463, size: 128, align: 64, offset: 64)
!7486 = !{!6436, !7442}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7480, file: !2, baseType: !7488, size: 192, align: 64, extraData: i64 1)
!7488 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7478, file: !2, size: 192, align: 64, elements: !7489, templateParams: !7486, identifier: "8793f3a2507382c45ebef37ef1c4bc40")
!7489 = !{!7490}
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7488, file: !2, baseType: !1453, size: 128, align: 64, offset: 64)
!7491 = !DIDerivedType(tag: DW_TAG_member, scope: !7478, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!7492 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !7388, file: !2, align: 8, elements: !28, identifier: "f2bae2d168b0d8fd3c59ff569110796d")
!7493 = !{!7494, !7495, !7496, !7498}
!7494 = !DILocalVariable(name: "self", arg: 1, scope: !7475, file: !1782, line: 852, type: !6427)
!7495 = !DILocalVariable(name: "op", arg: 2, scope: !7475, file: !1782, line: 852, type: !7492)
!7496 = !DILocalVariable(name: "t", scope: !7497, file: !1782, line: 854, type: !1463, align: 8)
!7497 = distinct !DILexicalBlock(scope: !7475, file: !1782, line: 854, column: 13)
!7498 = !DILocalVariable(name: "e", scope: !7499, file: !1782, line: 855, type: !6438, align: 1)
!7499 = distinct !DILexicalBlock(scope: !7475, file: !1782, line: 855, column: 13)
!7500 = !{!6436, !6437, !7458, !7501}
!7501 = !DITemplateTypeParameter(name: "O", type: !7492)
!7502 = !DILocation(line: 852, column: 42, scope: !7475)
!7503 = !DILocation(line: 852, column: 48, scope: !7475)
!7504 = !DILocation(line: 855, column: 17, scope: !7499)
!7505 = !DILocation(line: 853, column: 15, scope: !7475)
!7506 = !DILocation(line: 853, column: 9, scope: !7475)
!7507 = !DILocation(line: 854, column: 16, scope: !7475)
!7508 = !DILocation(line: 854, column: 16, scope: !7497)
!7509 = !DILocation(line: 854, column: 22, scope: !7497)
!7510 = !DILocation(line: 854, column: 26, scope: !7475)
!7511 = !DILocation(line: 855, column: 27, scope: !7499)
!7512 = !DILocation(line: 855, column: 23, scope: !7499)
!7513 = !DILocation(line: 855, column: 32, scope: !7475)
!7514 = !DILocation(line: 857, column: 5, scope: !7475)
!7515 = !DILocation(line: 857, column: 6, scope: !7475)
!7516 = distinct !DISubprogram(name: "assert_failed<i32, i32>", linkageName: "_ZN4core9panicking13assert_failed17h005ab5e528d41424E", scope: !878, file: !7517, line: 171, type: !7518, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7538, retainedNodes: !7533)
!7517 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "89dbfc153a7177bd0202715dd5809289")
!7518 = !DISubroutineType(types: !7519)
!7519 = !{null, !877, !517, !517, !7520, !1109}
!7520 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Arguments>", scope: !231, file: !2, size: 384, align: 64, elements: !7521, templateParams: !28, identifier: "91782c25c0cb4075178b67ca76527846")
!7521 = !{!7522}
!7522 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7520, file: !2, size: 384, align: 64, elements: !7523, templateParams: !28, identifier: "d3d8c93b36d851336035bb39c7913979", discriminator: !7532)
!7523 = !{!7524, !7528}
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7522, file: !2, baseType: !7525, size: 384, align: 64, extraData: i64 0)
!7525 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7520, file: !2, size: 384, align: 64, elements: !28, templateParams: !7526, identifier: "94094742b636673213b46bf0a5389cae")
!7526 = !{!7527}
!7527 = !DITemplateTypeParameter(name: "T", type: !1649)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7522, file: !2, baseType: !7529, size: 384, align: 64)
!7529 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7520, file: !2, size: 384, align: 64, elements: !7530, templateParams: !7526, identifier: "424137f74f76139e10918065dfb817dc")
!7530 = !{!7531}
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7529, file: !2, baseType: !1649, size: 384, align: 64)
!7532 = !DIDerivedType(tag: DW_TAG_member, scope: !7520, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!7533 = !{!7534, !7535, !7536, !7537}
!7534 = !DILocalVariable(name: "kind", arg: 1, scope: !7516, file: !7517, line: 172, type: !877)
!7535 = !DILocalVariable(name: "left", arg: 2, scope: !7516, file: !7517, line: 173, type: !517)
!7536 = !DILocalVariable(name: "right", arg: 3, scope: !7516, file: !7517, line: 174, type: !517)
!7537 = !DILocalVariable(name: "args", arg: 4, scope: !7516, file: !7517, line: 175, type: !7520)
!7538 = !{!3515, !7539}
!7539 = !DITemplateTypeParameter(name: "U", type: !70)
!7540 = !DILocation(line: 172, column: 5, scope: !7516)
!7541 = !DILocation(line: 173, column: 5, scope: !7516)
!7542 = !DILocation(line: 174, column: 5, scope: !7516)
!7543 = !DILocation(line: 175, column: 5, scope: !7516)
!7544 = !DILocation(line: 181, column: 31, scope: !7516)
!7545 = !DILocation(line: 181, column: 38, scope: !7516)
!7546 = !DILocation(line: 181, column: 46, scope: !7516)
!7547 = !DILocation(line: 181, column: 5, scope: !7516)
!7548 = distinct !DISubprogram(name: "assert_failed<f32, f32>", linkageName: "_ZN4core9panicking13assert_failed17h1f82003576a73e6dE", scope: !878, file: !7517, line: 171, type: !7549, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7556, retainedNodes: !7551)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{null, !877, !554, !554, !7520, !1109}
!7551 = !{!7552, !7553, !7554, !7555}
!7552 = !DILocalVariable(name: "kind", arg: 1, scope: !7548, file: !7517, line: 172, type: !877)
!7553 = !DILocalVariable(name: "left", arg: 2, scope: !7548, file: !7517, line: 173, type: !554)
!7554 = !DILocalVariable(name: "right", arg: 3, scope: !7548, file: !7517, line: 174, type: !554)
!7555 = !DILocalVariable(name: "args", arg: 4, scope: !7548, file: !7517, line: 175, type: !7520)
!7556 = !{!3529, !7557}
!7557 = !DITemplateTypeParameter(name: "U", type: !555)
!7558 = !DILocation(line: 172, column: 5, scope: !7548)
!7559 = !DILocation(line: 173, column: 5, scope: !7548)
!7560 = !DILocation(line: 174, column: 5, scope: !7548)
!7561 = !DILocation(line: 175, column: 5, scope: !7548)
!7562 = !DILocation(line: 181, column: 31, scope: !7548)
!7563 = !DILocation(line: 181, column: 38, scope: !7548)
!7564 = !DILocation(line: 181, column: 46, scope: !7548)
!7565 = !DILocation(line: 181, column: 5, scope: !7548)
!7566 = distinct !DISubprogram(name: "assert_failed<[i32; 11], [i32; 11]>", linkageName: "_ZN4core9panicking13assert_failed17h27b835989c4afc14E", scope: !878, file: !7517, line: 171, type: !7567, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7574, retainedNodes: !7569)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{null, !877, !564, !564, !7520, !1109}
!7569 = !{!7570, !7571, !7572, !7573}
!7570 = !DILocalVariable(name: "kind", arg: 1, scope: !7566, file: !7517, line: 172, type: !877)
!7571 = !DILocalVariable(name: "left", arg: 2, scope: !7566, file: !7517, line: 173, type: !564)
!7572 = !DILocalVariable(name: "right", arg: 3, scope: !7566, file: !7517, line: 174, type: !564)
!7573 = !DILocalVariable(name: "args", arg: 4, scope: !7566, file: !7517, line: 175, type: !7520)
!7574 = !{!3543, !7575}
!7575 = !DITemplateTypeParameter(name: "U", type: !565)
!7576 = !DILocation(line: 172, column: 5, scope: !7566)
!7577 = !DILocation(line: 173, column: 5, scope: !7566)
!7578 = !DILocation(line: 174, column: 5, scope: !7566)
!7579 = !DILocation(line: 175, column: 5, scope: !7566)
!7580 = !DILocation(line: 181, column: 31, scope: !7566)
!7581 = !DILocation(line: 181, column: 38, scope: !7566)
!7582 = !DILocation(line: 181, column: 46, scope: !7566)
!7583 = !DILocation(line: 181, column: 5, scope: !7566)
!7584 = distinct !DISubprogram(name: "assert_failed<u32, u32>", linkageName: "_ZN4core9panicking13assert_failed17h75f8b39542f0f9b4E", scope: !878, file: !7517, line: 171, type: !7585, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7592, retainedNodes: !7587)
!7585 = !DISubroutineType(types: !7586)
!7586 = !{null, !877, !576, !576, !7520, !1109}
!7587 = !{!7588, !7589, !7590, !7591}
!7588 = !DILocalVariable(name: "kind", arg: 1, scope: !7584, file: !7517, line: 172, type: !877)
!7589 = !DILocalVariable(name: "left", arg: 2, scope: !7584, file: !7517, line: 173, type: !576)
!7590 = !DILocalVariable(name: "right", arg: 3, scope: !7584, file: !7517, line: 174, type: !576)
!7591 = !DILocalVariable(name: "args", arg: 4, scope: !7584, file: !7517, line: 175, type: !7520)
!7592 = !{!277, !7593}
!7593 = !DITemplateTypeParameter(name: "U", type: !275)
!7594 = !DILocation(line: 172, column: 5, scope: !7584)
!7595 = !DILocation(line: 173, column: 5, scope: !7584)
!7596 = !DILocation(line: 174, column: 5, scope: !7584)
!7597 = !DILocation(line: 175, column: 5, scope: !7584)
!7598 = !DILocation(line: 181, column: 31, scope: !7584)
!7599 = !DILocation(line: 181, column: 38, scope: !7584)
!7600 = !DILocation(line: 181, column: 46, scope: !7584)
!7601 = !DILocation(line: 181, column: 5, scope: !7584)
!7602 = distinct !DISubprogram(name: "assert_failed<[i32; 16], [i32; 16]>", linkageName: "_ZN4core9panicking13assert_failed17hdc2b2d5d12368b5fE", scope: !878, file: !7517, line: 171, type: !7603, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7610, retainedNodes: !7605)
!7603 = !DISubroutineType(types: !7604)
!7604 = !{null, !877, !585, !585, !7520, !1109}
!7605 = !{!7606, !7607, !7608, !7609}
!7606 = !DILocalVariable(name: "kind", arg: 1, scope: !7602, file: !7517, line: 172, type: !877)
!7607 = !DILocalVariable(name: "left", arg: 2, scope: !7602, file: !7517, line: 173, type: !585)
!7608 = !DILocalVariable(name: "right", arg: 3, scope: !7602, file: !7517, line: 174, type: !585)
!7609 = !DILocalVariable(name: "args", arg: 4, scope: !7602, file: !7517, line: 175, type: !7520)
!7610 = !{!3483, !7611}
!7611 = !DITemplateTypeParameter(name: "U", type: !586)
!7612 = !DILocation(line: 172, column: 5, scope: !7602)
!7613 = !DILocation(line: 173, column: 5, scope: !7602)
!7614 = !DILocation(line: 174, column: 5, scope: !7602)
!7615 = !DILocation(line: 175, column: 5, scope: !7602)
!7616 = !DILocation(line: 181, column: 31, scope: !7602)
!7617 = !DILocation(line: 181, column: 38, scope: !7602)
!7618 = !DILocation(line: 181, column: 46, scope: !7602)
!7619 = !DILocation(line: 181, column: 5, scope: !7602)
!7620 = distinct !DISubprogram(name: "assert_test_result<()>", linkageName: "_ZN4test18assert_test_result17hf4996d04c85a0259E", scope: !7622, file: !7621, line: 182, type: !1498, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !7623)
!7621 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/test/src/lib.rs", directory: "", checksumkind: CSK_MD5, checksum: "762a73d08c70c6e433bc6b670465b31f")
!7622 = !DINamespace(name: "test", scope: null)
!7623 = !{!7624, !7625, !7627, !7631, !7632}
!7624 = !DILocalVariable(name: "result", arg: 1, scope: !7620, file: !7621, line: 182, type: !7)
!7625 = !DILocalVariable(name: "code", scope: !7626, file: !7621, line: 183, type: !70, align: 4)
!7626 = distinct !DILexicalBlock(scope: !7620, file: !7621, line: 183, column: 5)
!7627 = !DILocalVariable(name: "left_val", scope: !7628, file: !7621, line: 184, type: !517, align: 8)
!7628 = !DILexicalBlockFile(scope: !7629, file: !7621, discriminator: 0)
!7629 = distinct !DILexicalBlock(scope: !7626, file: !7630, line: 52, column: 13)
!7630 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "92818cc67b0fce20f16574f7676a5426")
!7631 = !DILocalVariable(name: "right_val", scope: !7628, file: !7621, line: 184, type: !517, align: 8)
!7632 = !DILocalVariable(name: "kind", scope: !7633, file: !7621, line: 184, type: !877, align: 1)
!7633 = !DILexicalBlockFile(scope: !7634, file: !7621, discriminator: 0)
!7634 = distinct !DILexicalBlock(scope: !7629, file: !7630, line: 54, column: 21)
!7635 = !DILocation(line: 182, column: 43, scope: !7620)
!7636 = !DILocation(line: 183, column: 9, scope: !7626)
!7637 = !DILocalVariable(name: "self", scope: !7638, file: !7621, line: 183, type: !2450, align: 1)
!7638 = !DILexicalBlockFile(scope: !7639, file: !7621, discriminator: 0)
!7639 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217h94e1c3c620a69e04E", scope: !2450, file: !2449, line: 1808, type: !2459, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7640)
!7640 = !{!7637}
!7641 = !DILocation(line: 183, column: 16, scope: !7638, inlinedAt: !7642)
!7642 = !DILocation(line: 183, column: 16, scope: !7620)
!7643 = !DILocalVariable(name: "self", scope: !7644, file: !7621, line: 183, type: !2471, align: 8)
!7644 = !DILexicalBlockFile(scope: !7645, file: !7621, discriminator: 0)
!7645 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217hdedfe88835a8ac48E", scope: !2454, file: !2468, line: 485, type: !2469, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7646)
!7646 = !{!7643}
!7647 = !DILocation(line: 183, column: 16, scope: !7644, inlinedAt: !7648)
!7648 = !DILocation(line: 1809, column: 9, scope: !7639, inlinedAt: !7642)
!7649 = !DILocation(line: 184, column: 5, scope: !7626)
!7650 = !DILocation(line: 184, column: 5, scope: !7628)
!7651 = !DILocation(line: 190, column: 2, scope: !7620)
!7652 = !DILocation(line: 184, column: 5, scope: !7633)
!7653 = !DILocalVariable(name: "x", scope: !7654, file: !7621, line: 184, type: !517, align: 8)
!7654 = !DILexicalBlockFile(scope: !7655, file: !7621, discriminator: 0)
!7655 = distinct !DISubprogram(name: "new_display<i32>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h7d82eb48f6d57583E", scope: !1707, file: !2158, line: 318, type: !7656, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !7658)
!7656 = !DISubroutineType(types: !7657)
!7657 = !{!1707, !517}
!7658 = !{!7653}
!7659 = !DILocation(line: 184, column: 5, scope: !7654, inlinedAt: !7660)
!7660 = !DILocation(line: 188, column: 9, scope: !7633)
!7661 = !DILocalVariable(name: "x", scope: !7662, file: !7621, line: 184, type: !517, align: 8)
!7662 = !DILexicalBlockFile(scope: !7663, file: !7621, discriminator: 0)
!7663 = distinct !DISubprogram(name: "new<i32>", linkageName: "_ZN4core3fmt10ArgumentV13new17hf9f3b1630e6dab5aE", scope: !1707, file: !2158, line: 329, type: !7664, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !7667)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{!1707, !517, !7666}
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&i32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !3696, size: 64, align: 64, dwarfAddressSpace: 0)
!7667 = !{!7661, !7668}
!7668 = !DILocalVariable(name: "f", scope: !7662, file: !7621, line: 184, type: !7666, align: 8)
!7669 = !DILocation(line: 184, column: 5, scope: !7662, inlinedAt: !7670)
!7670 = !DILocation(line: 319, column: 13, scope: !7655, inlinedAt: !7660)
!7671 = distinct !DISubprogram(name: "write_char<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>", linkageName: "_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17ha752ff0d563c2184E", scope: !7672, file: !2158, line: 198, type: !7673, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7679, retainedNodes: !7676)
!7672 = !DINamespace(name: "{impl#0}", scope: !858)
!7673 = !DISubroutineType(types: !7674)
!7674 = !{!1717, !7675, !1237}
!7675 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>", baseType: !508, size: 64, align: 64, dwarfAddressSpace: 0)
!7676 = !{!7677, !7678}
!7677 = !DILocalVariable(name: "self", arg: 1, scope: !7671, file: !2158, line: 198, type: !7675)
!7678 = !DILocalVariable(name: "c", arg: 2, scope: !7671, file: !2158, line: 198, type: !1237)
!7679 = !{!7680}
!7680 = !DITemplateTypeParameter(name: "W", type: !14)
!7681 = !DILocation(line: 198, column: 19, scope: !7671)
!7682 = !DILocation(line: 198, column: 30, scope: !7671)
!7683 = !DILocation(line: 199, column: 9, scope: !7671)
!7684 = !DILocation(line: 200, column: 6, scope: !7671)
!7685 = distinct !DISubprogram(name: "write_fmt<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>", linkageName: "_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h50b512549461be97E", scope: !7672, file: !2158, line: 202, type: !7686, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7679, retainedNodes: !7688)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!1717, !7675, !1649}
!7688 = !{!7689, !7690}
!7689 = !DILocalVariable(name: "self", arg: 1, scope: !7685, file: !2158, line: 202, type: !7675)
!7690 = !DILocalVariable(name: "args", arg: 2, scope: !7685, file: !2158, line: 202, type: !1649)
!7691 = !DILocation(line: 202, column: 18, scope: !7685)
!7692 = !DILocation(line: 202, column: 29, scope: !7685)
!7693 = !DILocation(line: 203, column: 9, scope: !7685)
!7694 = !DILocation(line: 203, column: 28, scope: !7685)
!7695 = !DILocation(line: 204, column: 6, scope: !7685)
!7696 = distinct !DISubprogram(name: "write_str<std::io::Write::write_fmt::Adapter<std::sys::unix::stdio::Stderr>>", linkageName: "_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h11b873e44897a10fE", scope: !7672, file: !2158, line: 194, type: !7697, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7679, retainedNodes: !7699)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!1717, !7675, !145}
!7699 = !{!7700, !7701}
!7700 = !DILocalVariable(name: "self", arg: 1, scope: !7696, file: !2158, line: 194, type: !7675)
!7701 = !DILocalVariable(name: "s", arg: 2, scope: !7696, file: !2158, line: 194, type: !145)
!7702 = !DILocation(line: 194, column: 18, scope: !7696)
!7703 = !DILocation(line: 194, column: 29, scope: !7696)
!7704 = !DILocation(line: 195, column: 9, scope: !7696)
!7705 = !DILocation(line: 196, column: 6, scope: !7696)
!7706 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h5f7fe61e0968c338E", scope: !7708, file: !7707, line: 559, type: !7709, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7713, retainedNodes: !7711)
!7707 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!7708 = !DINamespace(name: "{impl#4}", scope: !2646)
!7709 = !DISubroutineType(types: !7710)
!7710 = !{!1450, !1450}
!7711 = !{!7712}
!7712 = !DILocalVariable(name: "t", arg: 1, scope: !7706, file: !7707, line: 559, type: !1450)
!7713 = !{!7714}
!7714 = !DITemplateTypeParameter(name: "T", type: !1450)
!7715 = !DILocation(line: 559, column: 13, scope: !7706)
!7716 = !DILocation(line: 561, column: 6, scope: !7706)
!7717 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h83b52891866b685fE", scope: !7708, file: !7707, line: 559, type: !7718, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7722, retainedNodes: !7720)
!7718 = !DISubroutineType(types: !7719)
!7719 = !{null, !7364}
!7720 = !{!7721}
!7721 = !DILocalVariable(name: "t", arg: 1, scope: !7717, file: !7707, line: 559, type: !7364)
!7722 = !{!7723}
!7723 = !DITemplateTypeParameter(name: "T", type: !7364)
!7724 = !DILocation(line: 559, column: 13, scope: !7717)
!7725 = !DILocation(line: 561, column: 6, scope: !7717)
!7726 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb133b7b8ca8fd9dfE", scope: !7708, file: !7707, line: 559, type: !7727, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7731, retainedNodes: !7729)
!7727 = !DISubroutineType(types: !7728)
!7728 = !{null, !6438}
!7729 = !{!7730}
!7730 = !DILocalVariable(name: "t", arg: 1, scope: !7726, file: !7707, line: 559, type: !6438)
!7731 = !{!7732}
!7732 = !DITemplateTypeParameter(name: "T", type: !6438)
!7733 = !DILocation(line: 559, column: 13, scope: !7726)
!7734 = !DILocation(line: 561, column: 6, scope: !7726)
!7735 = distinct !DISubprogram(name: "from<std::io::error::Error>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hc0915e6582d29decE", scope: !7708, file: !7707, line: 559, type: !7736, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4319, retainedNodes: !7738)
!7736 = !DISubroutineType(types: !7737)
!7737 = !{!43, !43}
!7738 = !{!7739}
!7739 = !DILocalVariable(name: "t", arg: 1, scope: !7735, file: !7707, line: 559, type: !43)
!7740 = !DILocation(line: 559, column: 13, scope: !7735)
!7741 = !DILocation(line: 561, column: 6, scope: !7735)
!7742 = distinct !DISubprogram(name: "into<&mut alloc::sync::ArcInner<std::thread::Packet<()>>, core::ptr::non_null::NonNull<alloc::sync::ArcInner<std::thread::Packet<()>>>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h463e69f068e26b95E", scope: !7743, file: !7707, line: 549, type: !7744, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7749, retainedNodes: !7747)
!7743 = !DINamespace(name: "{impl#3}", scope: !2646)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{!385, !7746}
!7746 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::sync::ArcInner<std::thread::Packet<()>>", baseType: !389, size: 64, align: 64, dwarfAddressSpace: 0)
!7747 = !{!7748}
!7748 = !DILocalVariable(name: "self", arg: 1, scope: !7742, file: !7707, line: 549, type: !7746)
!7749 = !{!7750, !7751}
!7750 = !DITemplateTypeParameter(name: "T", type: !7746)
!7751 = !DITemplateTypeParameter(name: "U", type: !385)
!7752 = !DILocation(line: 549, column: 13, scope: !7742)
!7753 = !DILocation(line: 550, column: 9, scope: !7742)
!7754 = !DILocation(line: 551, column: 6, scope: !7742)
!7755 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h968d041dad957f97E", scope: !7743, file: !7707, line: 549, type: !1415, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7758, retainedNodes: !7756)
!7756 = !{!7757}
!7757 = !DILocalVariable(name: "self", arg: 1, scope: !7755, file: !7707, line: 549, type: !346)
!7758 = !{!7759, !7760}
!7759 = !DITemplateTypeParameter(name: "T", type: !346)
!7760 = !DITemplateTypeParameter(name: "U", type: !350)
!7761 = !DILocation(line: 549, column: 13, scope: !7755)
!7762 = !DILocation(line: 550, column: 9, scope: !7755)
!7763 = !DILocation(line: 551, column: 6, scope: !7755)
!7764 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb06c121365edc62aE", scope: !7743, file: !7707, line: 549, type: !1448, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7767, retainedNodes: !7765)
!7765 = !{!7766}
!7766 = !DILocalVariable(name: "self", arg: 1, scope: !7764, file: !7707, line: 549, type: !1453)
!7767 = !{!7768, !7769}
!7768 = !DITemplateTypeParameter(name: "T", type: !1453)
!7769 = !DITemplateTypeParameter(name: "U", type: !1450)
!7770 = !DILocation(line: 549, column: 13, scope: !7764)
!7771 = !DILocation(line: 550, column: 9, scope: !7764)
!7772 = !DILocation(line: 551, column: 6, scope: !7764)
!7773 = distinct !DISubprogram(name: "into<alloc::string::String, alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hc0985960b0716d81E", scope: !7743, file: !7707, line: 549, type: !7774, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7778, retainedNodes: !7776)
!7774 = !DISubroutineType(types: !7775)
!7775 = !{!338, !2605}
!7776 = !{!7777}
!7777 = !DILocalVariable(name: "self", arg: 1, scope: !7773, file: !7707, line: 549, type: !2605)
!7778 = !{!2604, !7779}
!7779 = !DITemplateTypeParameter(name: "U", type: !338)
!7780 = !DILocation(line: 549, column: 13, scope: !7773)
!7781 = !DILocation(line: 550, column: 17, scope: !7773)
!7782 = !DILocation(line: 550, column: 9, scope: !7773)
!7783 = !DILocation(line: 551, column: 6, scope: !7773)
!7784 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h3ef22cee8b6768e4E", scope: !7785, file: !5370, line: 542, type: !7786, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7788)
!7785 = !DINamespace(name: "{impl#3}", scope: !1231)
!7786 = !DISubroutineType(types: !7787)
!7787 = !{!1230, !1237, !145}
!7788 = !{!7789, !7790, !7791, !7793}
!7789 = !DILocalVariable(name: "self", arg: 1, scope: !7784, file: !5370, line: 542, type: !1237)
!7790 = !DILocalVariable(name: "haystack", arg: 2, scope: !7784, file: !5370, line: 542, type: !145)
!7791 = !DILocalVariable(name: "utf8_encoded", scope: !7792, file: !5370, line: 543, type: !1240, align: 1)
!7792 = distinct !DILexicalBlock(scope: !7784, file: !5370, line: 543, column: 9)
!7793 = !DILocalVariable(name: "utf8_size", scope: !7794, file: !5370, line: 544, type: !9, align: 8)
!7794 = distinct !DILexicalBlock(scope: !7792, file: !5370, line: 544, column: 9)
!7795 = !DILocation(line: 542, column: 22, scope: !7784)
!7796 = !DILocation(line: 542, column: 28, scope: !7784)
!7797 = !DILocation(line: 543, column: 13, scope: !7792)
!7798 = !DILocation(line: 543, column: 32, scope: !7784)
!7799 = !DILocation(line: 544, column: 25, scope: !7792)
!7800 = !DILocalVariable(name: "self", scope: !7801, file: !5370, line: 544, type: !1237, align: 4)
!7801 = !DILexicalBlockFile(scope: !7802, file: !5370, discriminator: 0)
!7802 = distinct !DISubprogram(name: "encode_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817he89c5597eef75106E", scope: !3744, file: !3743, line: 656, type: !3747, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7803)
!7803 = !{!7800, !7804}
!7804 = !DILocalVariable(name: "dst", scope: !7801, file: !5370, line: 544, type: !1131, align: 8)
!7805 = !DILocation(line: 544, column: 25, scope: !7801, inlinedAt: !7799)
!7806 = !DILocation(line: 544, column: 42, scope: !7792)
!7807 = !DILocalVariable(name: "v", scope: !7808, file: !5370, line: 544, type: !1131, align: 8)
!7808 = !DILexicalBlockFile(scope: !7809, file: !5370, discriminator: 0)
!7809 = distinct !DISubprogram(name: "from_utf8_unchecked_mut", linkageName: "_ZN4core3str8converts23from_utf8_unchecked_mut17h85174b051c597563E", scope: !3762, file: !3761, line: 197, type: !3763, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7810)
!7810 = !{!7807}
!7811 = !DILocation(line: 544, column: 25, scope: !7808, inlinedAt: !7812)
!7812 = !DILocation(line: 658, column: 18, scope: !7802, inlinedAt: !7799)
!7813 = !DILocalVariable(name: "self", scope: !7814, file: !5370, line: 544, type: !145, align: 8)
!7814 = !DILexicalBlockFile(scope: !7815, file: !5370, discriminator: 0)
!7815 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hed2dfa42a5f15112E", scope: !4896, file: !4895, line: 157, type: !4931, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7816)
!7816 = !{!7813}
!7817 = !DILocation(line: 544, column: 25, scope: !7814, inlinedAt: !7799)
!7818 = !DILocalVariable(name: "self", scope: !7819, file: !5370, line: 544, type: !145, align: 8)
!7819 = !DILexicalBlockFile(scope: !7820, file: !5370, discriminator: 0)
!7820 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7821)
!7821 = !{!7818}
!7822 = !DILocation(line: 544, column: 25, scope: !7819, inlinedAt: !7823)
!7823 = !DILocation(line: 158, column: 9, scope: !7815, inlinedAt: !7799)
!7824 = !DILocation(line: 544, column: 13, scope: !7794)
!7825 = !DILocation(line: 548, column: 26, scope: !7794)
!7826 = !DILocalVariable(name: "self", scope: !7827, file: !5370, line: 548, type: !145, align: 8)
!7827 = !DILexicalBlockFile(scope: !7828, file: !5370, discriminator: 0)
!7828 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hed2dfa42a5f15112E", scope: !4896, file: !4895, line: 157, type: !4931, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7829)
!7829 = !{!7826}
!7830 = !DILocation(line: 548, column: 26, scope: !7827, inlinedAt: !7825)
!7831 = !DILocalVariable(name: "self", scope: !7832, file: !5370, line: 548, type: !145, align: 8)
!7832 = !DILexicalBlockFile(scope: !7833, file: !5370, discriminator: 0)
!7833 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7834)
!7834 = !{!7831}
!7835 = !DILocation(line: 548, column: 26, scope: !7832, inlinedAt: !7836)
!7836 = !DILocation(line: 158, column: 9, scope: !7828, inlinedAt: !7825)
!7837 = !DILocation(line: 551, column: 13, scope: !7794)
!7838 = !DILocation(line: 545, column: 9, scope: !7794)
!7839 = !DILocation(line: 553, column: 6, scope: !7784)
!7840 = distinct !DISubprogram(name: "report", linkageName: "_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h72a4f00e2834b23cE", scope: !7841, file: !2449, line: 2170, type: !7842, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7844)
!7841 = !DINamespace(name: "{impl#53}", scope: !2451)
!7842 = !DISubroutineType(types: !7843)
!7843 = !{!2450, !7}
!7844 = !{!7845}
!7845 = !DILocalVariable(name: "self", arg: 1, scope: !7840, file: !2449, line: 2170, type: !7)
!7846 = !DILocation(line: 2170, column: 15, scope: !7840)
!7847 = !DILocation(line: 2172, column: 6, scope: !7840)
!7848 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hc766bacf7d102e30E", scope: !7849, file: !5370, line: 939, type: !7850, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !7877)
!7849 = !DINamespace(name: "{impl#28}", scope: !1231)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{!7852, !145, !145}
!7852 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcher", scope: !1231, file: !2, size: 832, align: 64, elements: !7853, templateParams: !28, identifier: "c59e1ee6e28d4721f919e4909846b9ee")
!7853 = !{!7854, !7855, !7856}
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !7852, file: !2, baseType: !145, size: 128, align: 64)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !7852, file: !2, baseType: !145, size: 128, align: 64, offset: 128)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "searcher", scope: !7852, file: !2, baseType: !7857, size: 576, align: 64, offset: 256)
!7857 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcherImpl", scope: !1231, file: !2, size: 576, align: 64, elements: !7858, templateParams: !28, identifier: "3f469a8d4e90a0a187cf76fe9d4ca5a")
!7858 = !{!7859}
!7859 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7857, file: !2, size: 576, align: 64, elements: !7860, templateParams: !28, identifier: "8ad619abf266fbb4ddce6536f3f85f04", discriminator: !7876)
!7860 = !{!7861, !7872}
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "Empty", scope: !7859, file: !2, baseType: !7862, size: 576, align: 64, extraData: i64 0)
!7862 = !DICompositeType(tag: DW_TAG_structure_type, name: "Empty", scope: !7857, file: !2, size: 576, align: 64, elements: !7863, templateParams: !28, identifier: "efe3e3ddcdc06086d71489841919ae03")
!7863 = !{!7864}
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7862, file: !2, baseType: !7865, size: 192, align: 64, offset: 64)
!7865 = !DICompositeType(tag: DW_TAG_structure_type, name: "EmptyNeedle", scope: !1231, file: !2, size: 192, align: 64, elements: !7866, templateParams: !28, identifier: "24f17b1ce38f7d7819918bfaca3d322e")
!7866 = !{!7867, !7868, !7869, !7870, !7871}
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !7865, file: !2, baseType: !9, size: 64, align: 64)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7865, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_fw", scope: !7865, file: !2, baseType: !1244, size: 8, align: 8, offset: 128)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_bw", scope: !7865, file: !2, baseType: !1244, size: 8, align: 8, offset: 136)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "is_finished", scope: !7865, file: !2, baseType: !1244, size: 8, align: 8, offset: 144)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "TwoWay", scope: !7859, file: !2, baseType: !7873, size: 576, align: 64, extraData: i64 1)
!7873 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWay", scope: !7857, file: !2, size: 576, align: 64, elements: !7874, templateParams: !28, identifier: "f935b167f69cf7b1cbfb7879bb81123")
!7874 = !{!7875}
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7873, file: !2, baseType: !5371, size: 512, align: 64, offset: 64)
!7876 = !DIDerivedType(tag: DW_TAG_member, scope: !7857, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!7877 = !{!7878, !7879}
!7878 = !DILocalVariable(name: "self", arg: 1, scope: !7848, file: !5370, line: 939, type: !145)
!7879 = !DILocalVariable(name: "haystack", arg: 2, scope: !7848, file: !5370, line: 939, type: !145)
!7880 = !DILocation(line: 939, column: 22, scope: !7848)
!7881 = !DILocation(line: 939, column: 28, scope: !7848)
!7882 = !DILocation(line: 940, column: 9, scope: !7848)
!7883 = !DILocation(line: 941, column: 6, scope: !7848)
!7884 = distinct !DISubprogram(name: "is_dangling<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN5alloc2rc11is_dangling17h3eedc86df22cea98E", scope: !7886, file: !7885, line: 2189, type: !7887, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !7890)
!7885 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/rc.rs", directory: "", checksumkind: CSK_MD5, checksum: "eb53e03dc11097e1f82a9f978f775d1b")
!7886 = !DINamespace(name: "rc", scope: !204)
!7887 = !DISubroutineType(types: !7888)
!7888 = !{!1244, !7889}
!7889 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::ArcInner<std::thread::Inner>", baseType: !211, size: 64, align: 64, dwarfAddressSpace: 0)
!7890 = !{!7891}
!7891 = !DILocalVariable(name: "ptr", arg: 1, scope: !7884, file: !7885, line: 2189, type: !7889)
!7892 = !DILocation(line: 2189, column: 38, scope: !7884)
!7893 = !DILocation(line: 2190, column: 5, scope: !7884)
!7894 = !DILocalVariable(name: "self", scope: !7895, file: !7885, line: 2190, type: !1058, align: 8)
!7895 = !DILexicalBlockFile(scope: !7896, file: !7885, discriminator: 0)
!7896 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a992de1f612dd6bE", scope: !1027, file: !1016, line: 184, type: !1904, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !7897)
!7897 = !{!7894}
!7898 = !DILocation(line: 2190, column: 5, scope: !7895, inlinedAt: !7893)
!7899 = !DILocation(line: 2191, column: 2, scope: !7884)
!7900 = distinct !DISubprogram(name: "is_dangling<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN5alloc2rc11is_dangling17h58cbd800988c2e0aE", scope: !7886, file: !7885, line: 2189, type: !7901, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !7904)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{!1244, !7903}
!7903 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", baseType: !302, size: 64, align: 64, dwarfAddressSpace: 0)
!7904 = !{!7905}
!7905 = !DILocalVariable(name: "ptr", arg: 1, scope: !7900, file: !7885, line: 2189, type: !7903)
!7906 = !DILocation(line: 2189, column: 38, scope: !7900)
!7907 = !DILocation(line: 2190, column: 5, scope: !7900)
!7908 = !DILocalVariable(name: "self", scope: !7909, file: !7885, line: 2190, type: !1058, align: 8)
!7909 = !DILexicalBlockFile(scope: !7910, file: !7885, discriminator: 0)
!7910 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a992de1f612dd6bE", scope: !1027, file: !1016, line: 184, type: !1904, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !7911)
!7911 = !{!7908}
!7912 = !DILocation(line: 2190, column: 5, scope: !7909, inlinedAt: !7907)
!7913 = !DILocation(line: 2191, column: 2, scope: !7900)
!7914 = distinct !DISubprogram(name: "is_dangling<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN5alloc2rc11is_dangling17ha6c882c5aacd3354E", scope: !7886, file: !7885, line: 2189, type: !7915, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !7917)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!1244, !3002}
!7917 = !{!7918}
!7918 = !DILocalVariable(name: "ptr", arg: 1, scope: !7914, file: !7885, line: 2189, type: !3002)
!7919 = !DILocation(line: 2189, column: 38, scope: !7914)
!7920 = !DILocation(line: 2190, column: 5, scope: !7914)
!7921 = !DILocalVariable(name: "self", scope: !7922, file: !7885, line: 2190, type: !1058, align: 8)
!7922 = !DILexicalBlockFile(scope: !7923, file: !7885, discriminator: 0)
!7923 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a992de1f612dd6bE", scope: !1027, file: !1016, line: 184, type: !1904, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !7924)
!7924 = !{!7921}
!7925 = !DILocation(line: 2190, column: 5, scope: !7922, inlinedAt: !7920)
!7926 = !DILocation(line: 2191, column: 2, scope: !7914)
!7927 = distinct !DISubprogram(name: "is_dangling<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN5alloc2rc11is_dangling17hc2b6067f1af68b06E", scope: !7886, file: !7885, line: 2189, type: !7928, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !7930)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!1244, !2964}
!7930 = !{!7931}
!7931 = !DILocalVariable(name: "ptr", arg: 1, scope: !7927, file: !7885, line: 2189, type: !2964)
!7932 = !DILocation(line: 2189, column: 38, scope: !7927)
!7933 = !DILocation(line: 2190, column: 5, scope: !7927)
!7934 = !DILocalVariable(name: "self", scope: !7935, file: !7885, line: 2190, type: !1058, align: 8)
!7935 = !DILexicalBlockFile(scope: !7936, file: !7885, discriminator: 0)
!7936 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a992de1f612dd6bE", scope: !1027, file: !1016, line: 184, type: !1904, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !7937)
!7937 = !{!7934}
!7938 = !DILocation(line: 2190, column: 5, scope: !7935, inlinedAt: !7933)
!7939 = !DILocation(line: 2191, column: 2, scope: !7927)
!7940 = distinct !DISubprogram(name: "new<alloc::string::String>", linkageName: "_ZN5alloc3ffi5c_str7CString3new17h64fc04278fe91747E", scope: !239, file: !7941, line: 261, type: !7942, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2603, retainedNodes: !7944)
!7941 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "6e5500bcb59fd49c7b9dab08f5bff02d")
!7942 = !DISubroutineType(types: !7943)
!7943 = !{!7292, !2605}
!7944 = !{!7945}
!7945 = !DILocalVariable(name: "t", arg: 1, scope: !7940, file: !7941, line: 261, type: !2605)
!7946 = !DILocation(line: 261, column: 34, scope: !7940)
!7947 = !DILocation(line: 316, column: 9, scope: !7940)
!7948 = !DILocation(line: 317, column: 6, scope: !7940)
!7949 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h2234ff1fdc1120aeE", scope: !338, file: !1283, line: 1204, type: !7950, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !360, retainedNodes: !7953)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!1021, !7952}
!7952 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !338, size: 64, align: 64, dwarfAddressSpace: 0)
!7953 = !{!7954, !7955}
!7954 = !DILocalVariable(name: "self", arg: 1, scope: !7949, file: !1283, line: 1204, type: !7952)
!7955 = !DILocalVariable(name: "ptr", scope: !7956, file: !1283, line: 1207, type: !1021, align: 8)
!7956 = distinct !DILexicalBlock(scope: !7949, file: !1283, line: 1207, column: 9)
!7957 = !DILocation(line: 1204, column: 23, scope: !7949)
!7958 = !DILocalVariable(name: "metadata", scope: !7959, file: !1283, line: 1209, type: !7, align: 1)
!7959 = !DILexicalBlockFile(scope: !7960, file: !1283, discriminator: 0)
!7960 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbf7d9dcb8aabe9a0E", scope: !981, file: !980, line: 127, type: !4600, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7961)
!7961 = !{!7962, !7958}
!7962 = !DILocalVariable(name: "data_address", scope: !7959, file: !1283, line: 1209, type: !1058, align: 8)
!7963 = !DILocation(line: 1209, column: 21, scope: !7959, inlinedAt: !7964)
!7964 = !DILocation(line: 668, column: 5, scope: !7965, inlinedAt: !7966)
!7965 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hcabc03503d7a71dfE", scope: !53, file: !959, line: 667, type: !4607, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!7966 = !DILocation(line: 38, column: 41, scope: !7967, inlinedAt: !7971)
!7967 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h930795340a28cb00E", scope: !1027, file: !1016, line: 35, type: !4611, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7968)
!7968 = !{!7969}
!7969 = !DILocalVariable(name: "self", scope: !7970, file: !1283, line: 1209, type: !1021, align: 8)
!7970 = !DILexicalBlockFile(scope: !7967, file: !1283, discriminator: 0)
!7971 = !DILocation(line: 1209, column: 21, scope: !7956)
!7972 = !DILocation(line: 1207, column: 19, scope: !7949)
!7973 = !DILocalVariable(name: "self", scope: !7974, file: !1283, line: 1207, type: !7978, align: 8)
!7974 = !DILexicalBlockFile(scope: !7975, file: !1283, discriminator: 0)
!7975 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf35cfb04fc2149a6E", scope: !342, file: !1300, line: 223, type: !7976, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !360, retainedNodes: !7979)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{!1021, !7978}
!7978 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !342, size: 64, align: 64, dwarfAddressSpace: 0)
!7979 = !{!7973}
!7980 = !DILocation(line: 1207, column: 19, scope: !7974, inlinedAt: !7972)
!7981 = !DILocalVariable(name: "self", scope: !7982, file: !1283, line: 1207, type: !346, align: 8)
!7982 = !DILexicalBlockFile(scope: !7983, file: !1283, discriminator: 0)
!7983 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8bb8bd839a83b1c5E", scope: !346, file: !1424, line: 103, type: !1425, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7984)
!7984 = !{!7981}
!7985 = !DILocation(line: 1207, column: 19, scope: !7982, inlinedAt: !7986)
!7986 = !DILocation(line: 224, column: 9, scope: !7975, inlinedAt: !7972)
!7987 = !DILocalVariable(name: "self", scope: !7988, file: !1283, line: 1207, type: !350, align: 8)
!7988 = !DILexicalBlockFile(scope: !7989, file: !1283, discriminator: 0)
!7989 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7990)
!7990 = !{!7987}
!7991 = !DILocation(line: 1207, column: 19, scope: !7988, inlinedAt: !7992)
!7992 = !DILocation(line: 104, column: 9, scope: !7983, inlinedAt: !7986)
!7993 = !DILocation(line: 1207, column: 13, scope: !7956)
!7994 = !DILocation(line: 1209, column: 21, scope: !7970, inlinedAt: !7971)
!7995 = !DILocalVariable(name: "self", scope: !7996, file: !1283, line: 1209, type: !1021, align: 8)
!7996 = !DILexicalBlockFile(scope: !7997, file: !1283, discriminator: 0)
!7997 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h09a8727df387d3f4E", scope: !1027, file: !1016, line: 707, type: !4621, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !7998)
!7998 = !{!7995, !7999}
!7999 = !DILocalVariable(name: "other", scope: !7996, file: !1283, line: 1209, type: !1021, align: 8)
!8000 = !DILocation(line: 1209, column: 21, scope: !7996, inlinedAt: !8001)
!8001 = !DILocation(line: 38, column: 9, scope: !7967, inlinedAt: !7971)
!8002 = !DILocation(line: 1209, column: 21, scope: !8003, inlinedAt: !8007)
!8003 = !DILexicalBlockFile(scope: !8004, file: !1283, discriminator: 0)
!8004 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h8bd9c196eb7a9556E", scope: !53, file: !959, line: 569, type: !4630, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !8005)
!8005 = !{!8006}
!8006 = !DILocalVariable(name: "addr", scope: !8003, file: !1283, line: 1209, type: !9, align: 8)
!8007 = !DILocation(line: 668, column: 24, scope: !7965, inlinedAt: !7966)
!8008 = !DILocation(line: 1209, column: 20, scope: !7956)
!8009 = !DILocation(line: 1209, column: 13, scope: !7956)
!8010 = !DILocation(line: 1212, column: 6, scope: !7949)
!8011 = distinct !DISubprogram(name: "as_mut_ptr<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h86cddd9b1ca10b26E", scope: !1190, file: !1283, line: 1204, type: !8012, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !8014)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{!1275, !1354}
!8014 = !{!8015, !8016}
!8015 = !DILocalVariable(name: "self", arg: 1, scope: !8011, file: !1283, line: 1204, type: !1354)
!8016 = !DILocalVariable(name: "ptr", scope: !8017, file: !1283, line: 1207, type: !1275, align: 8)
!8017 = distinct !DILexicalBlock(scope: !8011, file: !1283, line: 1207, column: 9)
!8018 = !DILocation(line: 1204, column: 23, scope: !8011)
!8019 = !DILocalVariable(name: "metadata", scope: !8020, file: !1283, line: 1209, type: !7, align: 1)
!8020 = !DILexicalBlockFile(scope: !8021, file: !1283, discriminator: 0)
!8021 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbf7d9dcb8aabe9a0E", scope: !981, file: !980, line: 127, type: !4600, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8022)
!8022 = !{!8023, !8019}
!8023 = !DILocalVariable(name: "data_address", scope: !8020, file: !1283, line: 1209, type: !1058, align: 8)
!8024 = !DILocation(line: 1209, column: 21, scope: !8020, inlinedAt: !8025)
!8025 = !DILocation(line: 668, column: 5, scope: !8026, inlinedAt: !8027)
!8026 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hcabc03503d7a71dfE", scope: !53, file: !959, line: 667, type: !4607, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!8027 = !DILocation(line: 38, column: 41, scope: !8028, inlinedAt: !8034)
!8028 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7c2f0240cba050e0E", scope: !1027, file: !1016, line: 35, type: !8029, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !8031)
!8029 = !DISubroutineType(types: !8030)
!8030 = !{!1244, !1275}
!8031 = !{!8032}
!8032 = !DILocalVariable(name: "self", scope: !8033, file: !1283, line: 1209, type: !1275, align: 8)
!8033 = !DILexicalBlockFile(scope: !8028, file: !1283, discriminator: 0)
!8034 = !DILocation(line: 1209, column: 21, scope: !8017)
!8035 = !DILocation(line: 1207, column: 19, scope: !8011)
!8036 = !DILocalVariable(name: "self", scope: !8037, file: !1283, line: 1207, type: !8041, align: 8)
!8037 = !DILexicalBlockFile(scope: !8038, file: !1283, discriminator: 0)
!8038 = distinct !DISubprogram(name: "ptr<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h33ebf3d317d3abadE", scope: !1193, file: !1300, line: 223, type: !8039, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !8042)
!8039 = !DISubroutineType(types: !8040)
!8040 = !{!1275, !8041}
!8041 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<&str, alloc::alloc::Global>", baseType: !1193, size: 64, align: 64, dwarfAddressSpace: 0)
!8042 = !{!8036}
!8043 = !DILocation(line: 1207, column: 19, scope: !8037, inlinedAt: !8035)
!8044 = !DILocalVariable(name: "self", scope: !8045, file: !1283, line: 1207, type: !1196, align: 8)
!8045 = !DILexicalBlockFile(scope: !8046, file: !1283, discriminator: 0)
!8046 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hea9622b15ce533f5E", scope: !1196, file: !1424, line: 103, type: !8047, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !8049)
!8047 = !DISubroutineType(types: !8048)
!8048 = !{!1275, !1196}
!8049 = !{!8044}
!8050 = !DILocation(line: 1207, column: 19, scope: !8045, inlinedAt: !8051)
!8051 = !DILocation(line: 224, column: 9, scope: !8038, inlinedAt: !8035)
!8052 = !DILocalVariable(name: "self", scope: !8053, file: !1283, line: 1207, type: !1199, align: 8)
!8053 = !DILexicalBlockFile(scope: !8054, file: !1283, discriminator: 0)
!8054 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !8057)
!8055 = !DISubroutineType(types: !8056)
!8056 = !{!1275, !1199}
!8057 = !{!8052}
!8058 = !DILocation(line: 1207, column: 19, scope: !8053, inlinedAt: !8059)
!8059 = !DILocation(line: 104, column: 9, scope: !8046, inlinedAt: !8051)
!8060 = !DILocation(line: 1207, column: 13, scope: !8017)
!8061 = !DILocation(line: 1209, column: 21, scope: !8033, inlinedAt: !8034)
!8062 = !DILocalVariable(name: "self", scope: !8063, file: !1283, line: 1209, type: !1021, align: 8)
!8063 = !DILexicalBlockFile(scope: !8064, file: !1283, discriminator: 0)
!8064 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h09a8727df387d3f4E", scope: !1027, file: !1016, line: 707, type: !4621, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8065)
!8065 = !{!8062, !8066}
!8066 = !DILocalVariable(name: "other", scope: !8063, file: !1283, line: 1209, type: !1021, align: 8)
!8067 = !DILocation(line: 1209, column: 21, scope: !8063, inlinedAt: !8068)
!8068 = !DILocation(line: 38, column: 9, scope: !8028, inlinedAt: !8034)
!8069 = !DILocation(line: 1209, column: 21, scope: !8070, inlinedAt: !8074)
!8070 = !DILexicalBlockFile(scope: !8071, file: !1283, discriminator: 0)
!8071 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h8bd9c196eb7a9556E", scope: !53, file: !959, line: 569, type: !4630, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !8072)
!8072 = !{!8073}
!8073 = !DILocalVariable(name: "addr", scope: !8070, file: !1283, line: 1209, type: !9, align: 8)
!8074 = !DILocation(line: 668, column: 24, scope: !8026, inlinedAt: !8027)
!8075 = !DILocation(line: 1209, column: 20, scope: !8017)
!8076 = !DILocation(line: 1209, column: 13, scope: !8017)
!8077 = !DILocation(line: 1212, column: 6, scope: !8011)
!8078 = distinct !DISubprogram(name: "extend_desugared<&str, alloc::alloc::Global, core::str::iter::Lines>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17h00641bf6da95e416E", scope: !1190, file: !1283, line: 2740, type: !8079, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !8090, retainedNodes: !8081)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{null, !1354, !1211}
!8081 = !{!8082, !8083, !8084, !8086, !8088}
!8082 = !DILocalVariable(name: "self", arg: 1, scope: !8078, file: !1283, line: 2740, type: !1354)
!8083 = !DILocalVariable(name: "iterator", arg: 2, scope: !8078, file: !1283, line: 2740, type: !1211)
!8084 = !DILocalVariable(name: "element", scope: !8085, file: !1283, line: 2748, type: !145, align: 8)
!8085 = distinct !DILexicalBlock(scope: !8078, file: !1283, line: 2748, column: 51)
!8086 = !DILocalVariable(name: "len", scope: !8087, file: !1283, line: 2749, type: !9, align: 8)
!8087 = distinct !DILexicalBlock(scope: !8085, file: !1283, line: 2749, column: 13)
!8088 = !DILocalVariable(name: "lower", scope: !8089, file: !1283, line: 2751, type: !9, align: 8)
!8089 = distinct !DILexicalBlock(scope: !8087, file: !1283, line: 2751, column: 17)
!8090 = !{!1204, !361, !1266}
!8091 = !DILocation(line: 2740, column: 48, scope: !8078)
!8092 = !DILocation(line: 2740, column: 59, scope: !8078)
!8093 = !DILocalVariable(name: "src", scope: !8094, file: !1283, line: 2755, type: !145, align: 8)
!8094 = !DILexicalBlockFile(scope: !8095, file: !1283, discriminator: 0)
!8095 = distinct !DISubprogram(name: "write<&str>", linkageName: "_ZN4core3ptr5write17h3290f2330b897a9eE", scope: !53, file: !959, line: 1296, type: !1273, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !8096)
!8096 = !{!8097, !8093}
!8097 = !DILocalVariable(name: "dst", scope: !8094, file: !1283, line: 2755, type: !1275, align: 8)
!8098 = !DILocation(line: 2755, column: 17, scope: !8094, inlinedAt: !8099)
!8099 = !DILocation(line: 2755, column: 17, scope: !8087)
!8100 = !DILocation(line: 2748, column: 9, scope: !8078)
!8101 = !DILocation(line: 2748, column: 35, scope: !8085)
!8102 = !DILocation(line: 2762, column: 5, scope: !8078)
!8103 = !DILocation(line: 2748, column: 19, scope: !8085)
!8104 = !DILocation(line: 2748, column: 24, scope: !8085)
!8105 = !DILocation(line: 2749, column: 23, scope: !8085)
!8106 = !DILocalVariable(name: "self", scope: !8107, file: !1283, line: 2749, type: !8110, align: 8)
!8107 = distinct !DISubprogram(name: "len<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h59d94fbbbdd3af77E", scope: !1190, file: !1283, line: 1945, type: !8108, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !8111)
!8108 = !DISubroutineType(types: !8109)
!8109 = !{!9, !8110}
!8110 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<&str, alloc::alloc::Global>", baseType: !1190, size: 64, align: 64, dwarfAddressSpace: 0)
!8111 = !{!8106}
!8112 = !DILocation(line: 2749, column: 23, scope: !8107, inlinedAt: !8105)
!8113 = !DILocation(line: 2749, column: 17, scope: !8087)
!8114 = !DILocation(line: 2750, column: 23, scope: !8087)
!8115 = !DILocalVariable(name: "self", scope: !8116, file: !1283, line: 2750, type: !8110, align: 8)
!8116 = distinct !DISubprogram(name: "capacity<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17h13b955da352b29b1E", scope: !1190, file: !1283, line: 817, type: !8108, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !8117)
!8117 = !{!8115}
!8118 = !DILocation(line: 2750, column: 23, scope: !8116, inlinedAt: !8114)
!8119 = !DILocalVariable(name: "self", scope: !8120, file: !1283, line: 2750, type: !8041, align: 8)
!8120 = !DILexicalBlockFile(scope: !8121, file: !1283, discriminator: 0)
!8121 = distinct !DISubprogram(name: "capacity<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h60f53e490217d474E", scope: !1193, file: !1300, line: 231, type: !8122, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !8124)
!8122 = !DISubroutineType(types: !8123)
!8123 = !{!9, !8041}
!8124 = !{!8119}
!8125 = !DILocation(line: 2750, column: 23, scope: !8120, inlinedAt: !8126)
!8126 = !DILocation(line: 818, column: 9, scope: !8116, inlinedAt: !8114)
!8127 = !DILocation(line: 2762, column: 6, scope: !8078)
!8128 = !DILocation(line: 2750, column: 16, scope: !8087)
!8129 = !DILocation(line: 2755, column: 28, scope: !8087)
!8130 = !DILocation(line: 2751, column: 34, scope: !8087)
!8131 = !DILocation(line: 2761, column: 9, scope: !8078)
!8132 = !DILocation(line: 2751, column: 22, scope: !8087)
!8133 = !DILocation(line: 2751, column: 22, scope: !8089)
!8134 = !DILocation(line: 2752, column: 30, scope: !8089)
!8135 = !DILocalVariable(name: "self", scope: !8136, file: !1283, line: 2752, type: !9, align: 8)
!8136 = !DILexicalBlockFile(scope: !8137, file: !1283, discriminator: 0)
!8137 = distinct !DISubprogram(name: "saturating_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_add17haf0fb58f21d60319E", scope: !1328, file: !1327, line: 1048, type: !1329, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8138)
!8138 = !{!8135, !8139}
!8139 = !DILocalVariable(name: "rhs", scope: !8136, file: !1283, line: 2752, type: !9, align: 8)
!8140 = !DILocation(line: 2752, column: 30, scope: !8136, inlinedAt: !8134)
!8141 = !DILocation(line: 2752, column: 17, scope: !8089)
!8142 = !DILocation(line: 2750, column: 13, scope: !8087)
!8143 = !DILocalVariable(name: "self", scope: !8144, file: !1283, line: 2755, type: !1275, align: 8)
!8144 = !DILexicalBlockFile(scope: !8145, file: !1283, discriminator: 0)
!8145 = distinct !DISubprogram(name: "add<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h6126177f80803ad4E", scope: !1027, file: !1016, line: 985, type: !8146, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !8148)
!8146 = !DISubroutineType(types: !8147)
!8147 = !{!1275, !1275, !9}
!8148 = !{!8143, !8149}
!8149 = !DILocalVariable(name: "count", scope: !8144, file: !1283, line: 2755, type: !9, align: 8)
!8150 = !DILocation(line: 2755, column: 28, scope: !8144, inlinedAt: !8129)
!8151 = !DILocation(line: 2755, column: 50, scope: !8087)
!8152 = !DILocalVariable(name: "self", scope: !8153, file: !1283, line: 2755, type: !1275, align: 8)
!8153 = !DILexicalBlockFile(scope: !8154, file: !1283, discriminator: 0)
!8154 = distinct !DISubprogram(name: "offset<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8d09da632cacb9b6E", scope: !1027, file: !1016, line: 465, type: !8155, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !8157)
!8155 = !DISubroutineType(types: !8156)
!8156 = !{!1275, !1275, !951}
!8157 = !{!8152, !8158}
!8158 = !DILocalVariable(name: "count", scope: !8153, file: !1283, line: 2755, type: !951, align: 8)
!8159 = !DILocation(line: 2755, column: 28, scope: !8153, inlinedAt: !8160)
!8160 = !DILocation(line: 990, column: 18, scope: !8145, inlinedAt: !8129)
!8161 = !DILocation(line: 2755, column: 56, scope: !8087)
!8162 = !DILocation(line: 2759, column: 17, scope: !8087)
!8163 = !DILocalVariable(name: "self", scope: !8164, file: !1283, line: 2759, type: !1354, align: 8)
!8164 = distinct !DISubprogram(name: "set_len<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17he837126d982de1afE", scope: !1190, file: !1283, line: 1301, type: !1352, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !8165)
!8165 = !{!8163, !8166}
!8166 = !DILocalVariable(name: "new_len", scope: !8164, file: !1283, line: 2759, type: !9, align: 8)
!8167 = !DILocation(line: 2759, column: 17, scope: !8164, inlinedAt: !8162)
!8168 = !DILocation(line: 2759, column: 30, scope: !8087)
!8169 = !DILocation(line: 2740, column: 5, scope: !8078)
!8170 = distinct !DISubprogram(name: "as_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h953c86afc66fb6fdE", scope: !338, file: !1283, line: 1167, type: !8171, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !360, retainedNodes: !8174)
!8171 = !DISubroutineType(types: !8172)
!8172 = !{!353, !8173}
!8173 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !338, size: 64, align: 64, dwarfAddressSpace: 0)
!8174 = !{!8175, !8176}
!8175 = !DILocalVariable(name: "self", arg: 1, scope: !8170, file: !1283, line: 1167, type: !8173)
!8176 = !DILocalVariable(name: "ptr", scope: !8177, file: !1283, line: 1170, type: !1021, align: 8)
!8177 = distinct !DILexicalBlock(scope: !8170, file: !1283, line: 1170, column: 9)
!8178 = !DILocation(line: 1167, column: 19, scope: !8170)
!8179 = !DILocalVariable(name: "metadata", scope: !8180, file: !1283, line: 1172, type: !7, align: 1)
!8180 = !DILexicalBlockFile(scope: !8181, file: !1283, discriminator: 0)
!8181 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbf7d9dcb8aabe9a0E", scope: !981, file: !980, line: 127, type: !4600, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8182)
!8182 = !{!8183, !8179}
!8183 = !DILocalVariable(name: "data_address", scope: !8180, file: !1283, line: 1172, type: !1058, align: 8)
!8184 = !DILocation(line: 1172, column: 21, scope: !8180, inlinedAt: !8185)
!8185 = !DILocation(line: 668, column: 5, scope: !8186, inlinedAt: !8187)
!8186 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hcabc03503d7a71dfE", scope: !53, file: !959, line: 667, type: !4607, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!8187 = !DILocation(line: 38, column: 41, scope: !8188, inlinedAt: !8192)
!8188 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h930795340a28cb00E", scope: !1027, file: !1016, line: 35, type: !4611, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8189)
!8189 = !{!8190}
!8190 = !DILocalVariable(name: "self", scope: !8191, file: !1283, line: 1172, type: !1021, align: 8)
!8191 = !DILexicalBlockFile(scope: !8188, file: !1283, discriminator: 0)
!8192 = !DILocation(line: 1172, column: 21, scope: !8177)
!8193 = !DILocation(line: 1170, column: 19, scope: !8170)
!8194 = !DILocalVariable(name: "self", scope: !8195, file: !1283, line: 1170, type: !7978, align: 8)
!8195 = !DILexicalBlockFile(scope: !8196, file: !1283, discriminator: 0)
!8196 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hf35cfb04fc2149a6E", scope: !342, file: !1300, line: 223, type: !7976, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !360, retainedNodes: !8197)
!8197 = !{!8194}
!8198 = !DILocation(line: 1170, column: 19, scope: !8195, inlinedAt: !8193)
!8199 = !DILocalVariable(name: "self", scope: !8200, file: !1283, line: 1170, type: !346, align: 8)
!8200 = !DILexicalBlockFile(scope: !8201, file: !1283, discriminator: 0)
!8201 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8bb8bd839a83b1c5E", scope: !346, file: !1424, line: 103, type: !1425, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8202)
!8202 = !{!8199}
!8203 = !DILocation(line: 1170, column: 19, scope: !8200, inlinedAt: !8204)
!8204 = !DILocation(line: 224, column: 9, scope: !8196, inlinedAt: !8193)
!8205 = !DILocalVariable(name: "self", scope: !8206, file: !1283, line: 1170, type: !350, align: 8)
!8206 = !DILexicalBlockFile(scope: !8207, file: !1283, discriminator: 0)
!8207 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8208)
!8208 = !{!8205}
!8209 = !DILocation(line: 1170, column: 19, scope: !8206, inlinedAt: !8210)
!8210 = !DILocation(line: 104, column: 9, scope: !8201, inlinedAt: !8204)
!8211 = !DILocation(line: 1170, column: 13, scope: !8177)
!8212 = !DILocation(line: 1172, column: 21, scope: !8191, inlinedAt: !8192)
!8213 = !DILocalVariable(name: "self", scope: !8214, file: !1283, line: 1172, type: !1021, align: 8)
!8214 = !DILexicalBlockFile(scope: !8215, file: !1283, discriminator: 0)
!8215 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h09a8727df387d3f4E", scope: !1027, file: !1016, line: 707, type: !4621, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8216)
!8216 = !{!8213, !8217}
!8217 = !DILocalVariable(name: "other", scope: !8214, file: !1283, line: 1172, type: !1021, align: 8)
!8218 = !DILocation(line: 1172, column: 21, scope: !8214, inlinedAt: !8219)
!8219 = !DILocation(line: 38, column: 9, scope: !8188, inlinedAt: !8192)
!8220 = !DILocation(line: 1172, column: 21, scope: !8221, inlinedAt: !8225)
!8221 = !DILexicalBlockFile(scope: !8222, file: !1283, discriminator: 0)
!8222 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h8bd9c196eb7a9556E", scope: !53, file: !959, line: 569, type: !4630, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !8223)
!8223 = !{!8224}
!8224 = !DILocalVariable(name: "addr", scope: !8221, file: !1283, line: 1172, type: !9, align: 8)
!8225 = !DILocation(line: 668, column: 24, scope: !8186, inlinedAt: !8187)
!8226 = !DILocation(line: 1172, column: 20, scope: !8177)
!8227 = !DILocation(line: 1172, column: 13, scope: !8177)
!8228 = !DILocation(line: 1175, column: 6, scope: !8170)
!8229 = distinct !DISubprogram(name: "as_ptr<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hc3c39fd5d04ba6beE", scope: !1190, file: !1283, line: 1167, type: !8230, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !8232)
!8230 = !DISubroutineType(types: !8231)
!8231 = !{!1202, !8110}
!8232 = !{!8233, !8234}
!8233 = !DILocalVariable(name: "self", arg: 1, scope: !8229, file: !1283, line: 1167, type: !8110)
!8234 = !DILocalVariable(name: "ptr", scope: !8235, file: !1283, line: 1170, type: !1275, align: 8)
!8235 = distinct !DILexicalBlock(scope: !8229, file: !1283, line: 1170, column: 9)
!8236 = !DILocation(line: 1167, column: 19, scope: !8229)
!8237 = !DILocalVariable(name: "metadata", scope: !8238, file: !1283, line: 1172, type: !7, align: 1)
!8238 = !DILexicalBlockFile(scope: !8239, file: !1283, discriminator: 0)
!8239 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbf7d9dcb8aabe9a0E", scope: !981, file: !980, line: 127, type: !4600, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8240)
!8240 = !{!8241, !8237}
!8241 = !DILocalVariable(name: "data_address", scope: !8238, file: !1283, line: 1172, type: !1058, align: 8)
!8242 = !DILocation(line: 1172, column: 21, scope: !8238, inlinedAt: !8243)
!8243 = !DILocation(line: 668, column: 5, scope: !8244, inlinedAt: !8245)
!8244 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hcabc03503d7a71dfE", scope: !53, file: !959, line: 667, type: !4607, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!8245 = !DILocation(line: 38, column: 41, scope: !8246, inlinedAt: !8250)
!8246 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7c2f0240cba050e0E", scope: !1027, file: !1016, line: 35, type: !8029, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !8247)
!8247 = !{!8248}
!8248 = !DILocalVariable(name: "self", scope: !8249, file: !1283, line: 1172, type: !1275, align: 8)
!8249 = !DILexicalBlockFile(scope: !8246, file: !1283, discriminator: 0)
!8250 = !DILocation(line: 1172, column: 21, scope: !8235)
!8251 = !DILocation(line: 1170, column: 19, scope: !8229)
!8252 = !DILocalVariable(name: "self", scope: !8253, file: !1283, line: 1170, type: !8041, align: 8)
!8253 = !DILexicalBlockFile(scope: !8254, file: !1283, discriminator: 0)
!8254 = distinct !DISubprogram(name: "ptr<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h33ebf3d317d3abadE", scope: !1193, file: !1300, line: 223, type: !8039, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !8255)
!8255 = !{!8252}
!8256 = !DILocation(line: 1170, column: 19, scope: !8253, inlinedAt: !8251)
!8257 = !DILocalVariable(name: "self", scope: !8258, file: !1283, line: 1170, type: !1196, align: 8)
!8258 = !DILexicalBlockFile(scope: !8259, file: !1283, discriminator: 0)
!8259 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hea9622b15ce533f5E", scope: !1196, file: !1424, line: 103, type: !8047, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !8260)
!8260 = !{!8257}
!8261 = !DILocation(line: 1170, column: 19, scope: !8258, inlinedAt: !8262)
!8262 = !DILocation(line: 224, column: 9, scope: !8254, inlinedAt: !8251)
!8263 = !DILocalVariable(name: "self", scope: !8264, file: !1283, line: 1170, type: !1199, align: 8)
!8264 = !DILexicalBlockFile(scope: !8265, file: !1283, discriminator: 0)
!8265 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !8266)
!8266 = !{!8263}
!8267 = !DILocation(line: 1170, column: 19, scope: !8264, inlinedAt: !8268)
!8268 = !DILocation(line: 104, column: 9, scope: !8259, inlinedAt: !8262)
!8269 = !DILocation(line: 1170, column: 13, scope: !8235)
!8270 = !DILocation(line: 1172, column: 21, scope: !8249, inlinedAt: !8250)
!8271 = !DILocalVariable(name: "self", scope: !8272, file: !1283, line: 1172, type: !1021, align: 8)
!8272 = !DILexicalBlockFile(scope: !8273, file: !1283, discriminator: 0)
!8273 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h09a8727df387d3f4E", scope: !1027, file: !1016, line: 707, type: !4621, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8274)
!8274 = !{!8271, !8275}
!8275 = !DILocalVariable(name: "other", scope: !8272, file: !1283, line: 1172, type: !1021, align: 8)
!8276 = !DILocation(line: 1172, column: 21, scope: !8272, inlinedAt: !8277)
!8277 = !DILocation(line: 38, column: 9, scope: !8246, inlinedAt: !8250)
!8278 = !DILocation(line: 1172, column: 21, scope: !8279, inlinedAt: !8283)
!8279 = !DILexicalBlockFile(scope: !8280, file: !1283, discriminator: 0)
!8280 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h8bd9c196eb7a9556E", scope: !53, file: !959, line: 569, type: !4630, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !8281)
!8281 = !{!8282}
!8282 = !DILocalVariable(name: "addr", scope: !8279, file: !1283, line: 1172, type: !9, align: 8)
!8283 = !DILocation(line: 668, column: 24, scope: !8244, inlinedAt: !8245)
!8284 = !DILocation(line: 1172, column: 20, scope: !8235)
!8285 = !DILocation(line: 1172, column: 13, scope: !8235)
!8286 = !DILocation(line: 1175, column: 6, scope: !8229)
!8287 = distinct !DISubprogram(name: "reserve<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h3a797139cac231edE", scope: !1190, file: !1283, line: 840, type: !1352, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !8288)
!8288 = !{!8289, !8290}
!8289 = !DILocalVariable(name: "self", arg: 1, scope: !8287, file: !1283, line: 840, type: !1354)
!8290 = !DILocalVariable(name: "additional", arg: 2, scope: !8287, file: !1283, line: 840, type: !9)
!8291 = !DILocation(line: 840, column: 20, scope: !8287)
!8292 = !DILocation(line: 840, column: 31, scope: !8287)
!8293 = !DILocation(line: 841, column: 9, scope: !8287)
!8294 = !DILocation(line: 841, column: 26, scope: !8287)
!8295 = !DILocation(line: 842, column: 6, scope: !8287)
!8296 = distinct !DISubprogram(name: "from_inner<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h4f05692ff44a0bfbE", scope: !382, file: !2933, line: 255, type: !8297, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8299)
!8297 = !DISubroutineType(types: !8298)
!8298 = !{!382, !385}
!8299 = !{!8300}
!8300 = !DILocalVariable(name: "ptr", arg: 1, scope: !8296, file: !2933, line: 255, type: !385)
!8301 = !DILocation(line: 255, column: 26, scope: !8296)
!8302 = !DILocation(line: 256, column: 9, scope: !8296)
!8303 = !DILocation(line: 257, column: 6, scope: !8296)
!8304 = distinct !DISubprogram(name: "from_inner<std::thread::Inner>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17h5ca78c3165444956E", scope: !202, file: !2933, line: 255, type: !8305, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !8307)
!8305 = !DISubroutineType(types: !8306)
!8306 = !{!202, !207}
!8307 = !{!8308}
!8308 = !DILocalVariable(name: "ptr", arg: 1, scope: !8304, file: !2933, line: 255, type: !207)
!8309 = !DILocation(line: 255, column: 26, scope: !8304)
!8310 = !DILocation(line: 256, column: 9, scope: !8304)
!8311 = !DILocation(line: 257, column: 6, scope: !8304)
!8312 = distinct !DISubprogram(name: "from_inner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$10from_inner17hbdeb4c2f03f74c32E", scope: !295, file: !2933, line: 255, type: !8313, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !8315)
!8313 = !DISubroutineType(types: !8314)
!8314 = !{!295, !298}
!8315 = !{!8316}
!8316 = !DILocalVariable(name: "ptr", arg: 1, scope: !8312, file: !2933, line: 255, type: !298)
!8317 = !DILocation(line: 255, column: 26, scope: !8312)
!8318 = !DILocation(line: 256, column: 9, scope: !8312)
!8319 = !DILocation(line: 257, column: 6, scope: !8312)
!8320 = distinct !DISubprogram(name: "new<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$3new17h5bc0904c657e3af2E", scope: !382, file: !2933, line: 343, type: !8321, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8323)
!8321 = !DISubroutineType(types: !8322)
!8322 = !{!382, !394}
!8323 = !{!8324, !8325}
!8324 = !DILocalVariable(name: "data", arg: 1, scope: !8320, file: !2933, line: 343, type: !394)
!8325 = !DILocalVariable(name: "x", scope: !8326, file: !2933, line: 346, type: !8327, align: 8)
!8326 = distinct !DILexicalBlock(scope: !8320, file: !2933, line: 346, column: 9)
!8327 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<alloc::sync::ArcInner<std::thread::Packet<()>>, alloc::alloc::Global>", baseType: !389, size: 64, align: 64, dwarfAddressSpace: 0)
!8328 = !DILocation(line: 343, column: 16, scope: !8320)
!8329 = !DILocalVariable(name: "x", scope: !8330, file: !2933, line: 346, type: !389, align: 8)
!8330 = !DILexicalBlockFile(scope: !8331, file: !2933, discriminator: 0)
!8331 = distinct !DISubprogram(name: "new<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$3new17h02f70a26964eb5c7E", scope: !2847, file: !2846, line: 213, type: !8332, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8334)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!8327, !389}
!8334 = !{!8329}
!8335 = !DILocation(line: 346, column: 25, scope: !8330, inlinedAt: !8336)
!8336 = !DILocation(line: 346, column: 25, scope: !8320)
!8337 = !DILocation(line: 347, column: 21, scope: !8338, inlinedAt: !8344)
!8338 = !DILexicalBlockFile(scope: !8339, file: !2933, discriminator: 0)
!8339 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core4sync6atomic11AtomicUsize3new17h759b1851270899e7E", scope: !214, file: !6046, line: 1946, type: !8340, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8342)
!8340 = !DISubroutineType(types: !8341)
!8341 = !{!214, !9}
!8342 = !{!8343}
!8343 = !DILocalVariable(name: "v", scope: !8338, file: !2933, line: 347, type: !9, align: 8)
!8344 = !DILocation(line: 347, column: 21, scope: !8320)
!8345 = !DILocation(line: 348, column: 19, scope: !8346, inlinedAt: !8350)
!8346 = !DILexicalBlockFile(scope: !8347, file: !2933, discriminator: 0)
!8347 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core4sync6atomic11AtomicUsize3new17h759b1851270899e7E", scope: !214, file: !6046, line: 1946, type: !8340, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8348)
!8348 = !{!8349}
!8349 = !DILocalVariable(name: "v", scope: !8346, file: !2933, line: 348, type: !9, align: 8)
!8350 = !DILocation(line: 348, column: 19, scope: !8320)
!8351 = !DILocation(line: 349, column: 13, scope: !8320)
!8352 = !DILocation(line: 346, column: 34, scope: !8320)
!8353 = !DILocation(line: 346, column: 13, scope: !8326)
!8354 = !DILocation(line: 351, column: 45, scope: !8326)
!8355 = !DILocalVariable(name: "b", scope: !8356, file: !2933, line: 351, type: !8327, align: 8)
!8356 = !DILexicalBlockFile(scope: !8357, file: !2933, discriminator: 0)
!8357 = distinct !DISubprogram(name: "leak<alloc::sync::ArcInner<std::thread::Packet<()>>, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$4leak17he4ef68b0fa79a1d1E", scope: !8358, file: !2846, line: 1180, type: !8359, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !8362, retainedNodes: !8361)
!8358 = !DINamespace(name: "{impl#7}", scope: !2848)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{!7746, !8327}
!8361 = !{!8355}
!8362 = !{!495, !361}
!8363 = !DILocation(line: 351, column: 35, scope: !8356, inlinedAt: !8364)
!8364 = !DILocation(line: 351, column: 35, scope: !8326)
!8365 = !DILocalVariable(name: "value", scope: !8366, file: !2933, line: 351, type: !8327, align: 8)
!8366 = !DILexicalBlockFile(scope: !8367, file: !2933, discriminator: 0)
!8367 = distinct !DISubprogram(name: "new<alloc::boxed::Box<alloc::sync::ArcInner<std::thread::Packet<()>>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h077222d27af62d3aE", scope: !8368, file: !3165, line: 70, type: !8373, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !8371, retainedNodes: !8375)
!8368 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<alloc::sync::ArcInner<std::thread::Packet<()>>, alloc::alloc::Global>>", scope: !3142, file: !2, size: 64, align: 64, elements: !8369, templateParams: !8371, identifier: "8cedc86a5602c61248c352738898378")
!8369 = !{!8370}
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8368, file: !2, baseType: !8327, size: 64, align: 64)
!8371 = !{!8372}
!8372 = !DITemplateTypeParameter(name: "T", type: !8327)
!8373 = !DISubroutineType(types: !8374)
!8374 = !{!8368, !8327}
!8375 = !{!8365}
!8376 = !DILocation(line: 351, column: 35, scope: !8366, inlinedAt: !8377)
!8377 = !DILocation(line: 1184, column: 24, scope: !8357, inlinedAt: !8364)
!8378 = !DILocalVariable(name: "self", scope: !8379, file: !2933, line: 351, type: !8385, align: 8)
!8379 = !DILexicalBlockFile(scope: !8380, file: !2933, discriminator: 0)
!8380 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<alloc::sync::ArcInner<std::thread::Packet<()>>, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h39b462ca94e4aec2E", scope: !8381, file: !3165, line: 153, type: !8382, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !8371, retainedNodes: !8386)
!8381 = !DINamespace(name: "{impl#2}", scope: !3142)
!8382 = !DISubroutineType(types: !8383)
!8383 = !{!8384, !8385}
!8384 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<alloc::sync::ArcInner<std::thread::Packet<()>>, alloc::alloc::Global>", baseType: !8327, size: 64, align: 64, dwarfAddressSpace: 0)
!8385 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<alloc::sync::ArcInner<std::thread::Packet<()>>, alloc::alloc::Global>>", baseType: !8368, size: 64, align: 64, dwarfAddressSpace: 0)
!8386 = !{!8378}
!8387 = !DILocation(line: 351, column: 35, scope: !8379, inlinedAt: !8377)
!8388 = !DILocalVariable(name: "self", scope: !8389, file: !2933, line: 351, type: !8391, align: 8)
!8389 = !DILexicalBlockFile(scope: !8390, file: !2933, discriminator: 0)
!8390 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8b4af9a7444478abE", scope: !8391, file: !1424, line: 103, type: !8395, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8397)
!8391 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<alloc::sync::ArcInner<std::thread::Packet<()>>>", scope: !347, file: !2, size: 64, align: 64, elements: !8392, templateParams: !494, identifier: "7544fe9e54aa7278ff2d1b1f598c88ec")
!8392 = !{!8393, !8394}
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8391, file: !2, baseType: !385, size: 64, align: 64)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !8391, file: !2, baseType: !497, align: 8)
!8395 = !DISubroutineType(types: !8396)
!8396 = !{!2964, !8391}
!8397 = !{!8388}
!8398 = !DILocation(line: 351, column: 35, scope: !8389, inlinedAt: !8377)
!8399 = !DILocalVariable(name: "self", scope: !8400, file: !2933, line: 351, type: !385, align: 8)
!8400 = !DILexicalBlockFile(scope: !8401, file: !2933, discriminator: 0)
!8401 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8402)
!8402 = !{!8399}
!8403 = !DILocation(line: 351, column: 35, scope: !8400, inlinedAt: !8404)
!8404 = !DILocation(line: 104, column: 9, scope: !8390, inlinedAt: !8377)
!8405 = !DILocation(line: 343, column: 5, scope: !8320)
!8406 = !DILocation(line: 352, column: 5, scope: !8320)
!8407 = !DILocation(line: 351, column: 18, scope: !8326)
!8408 = !DILocation(line: 352, column: 6, scope: !8320)
!8409 = distinct !DISubprogram(name: "get_mut<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$7get_mut17hdc8e2746c50a8bf4E", scope: !382, file: !2933, line: 1558, type: !8410, scopeLine: 1558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8413)
!8410 = !DISubroutineType(types: !8411)
!8411 = !{!2528, !8412}
!8412 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::sync::Arc<std::thread::Packet<()>>", baseType: !382, size: 64, align: 64, dwarfAddressSpace: 0)
!8413 = !{!8414}
!8414 = !DILocalVariable(name: "this", arg: 1, scope: !8409, file: !2933, line: 1558, type: !8412)
!8415 = !DILocation(line: 1558, column: 20, scope: !8409)
!8416 = !DILocation(line: 1559, column: 12, scope: !8409)
!8417 = !DILocation(line: 1567, column: 13, scope: !8409)
!8418 = !DILocation(line: 1559, column: 9, scope: !8409)
!8419 = !DILocation(line: 1565, column: 50, scope: !8409)
!8420 = !DILocalVariable(name: "this", scope: !8421, file: !2933, line: 1565, type: !8412, align: 8)
!8421 = distinct !DISubprogram(name: "get_mut_unchecked<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h31efc3fbf769befbE", scope: !382, file: !2933, line: 1600, type: !8422, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8424)
!8422 = !DISubroutineType(types: !8423)
!8423 = !{!2536, !8412}
!8424 = !{!8420}
!8425 = !DILocation(line: 1565, column: 27, scope: !8421, inlinedAt: !8426)
!8426 = !DILocation(line: 1565, column: 27, scope: !8409)
!8427 = !DILocalVariable(name: "self", scope: !8428, file: !2933, line: 1565, type: !385, align: 8)
!8428 = !DILexicalBlockFile(scope: !8429, file: !2933, discriminator: 0)
!8429 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8430)
!8430 = !{!8427}
!8431 = !DILocation(line: 1565, column: 27, scope: !8428, inlinedAt: !8432)
!8432 = !DILocation(line: 1603, column: 25, scope: !8421, inlinedAt: !8426)
!8433 = !DILocation(line: 1565, column: 22, scope: !8409)
!8434 = !DILocation(line: 1569, column: 6, scope: !8409)
!8435 = distinct !DISubprogram(name: "drop_slow<std::thread::Inner>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h32b6f12d9fa8a34aE", scope: !202, file: !2933, line: 1102, type: !8436, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !8439)
!8436 = !DISubroutineType(types: !8437)
!8437 = !{null, !8438}
!8438 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::sync::Arc<std::thread::Inner>", baseType: !202, size: 64, align: 64, dwarfAddressSpace: 0)
!8439 = !{!8440}
!8440 = !DILocalVariable(name: "self", arg: 1, scope: !8435, file: !2933, line: 1102, type: !8438)
!8441 = !DILocation(line: 1102, column: 25, scope: !8435)
!8442 = !DILocalVariable(name: "_x", scope: !8443, file: !2933, line: 1108, type: !4443, align: 8)
!8443 = !DILexicalBlockFile(scope: !8444, file: !2933, discriminator: 0)
!8444 = distinct !DISubprogram(name: "drop<alloc::sync::Weak<std::thread::Inner>>", linkageName: "_ZN4core3mem4drop17h556250282ee64ad0E", scope: !789, file: !3835, line: 988, type: !8445, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4448, retainedNodes: !8447)
!8445 = !DISubroutineType(types: !8446)
!8446 = !{null, !4443}
!8447 = !{!8442}
!8448 = !DILocation(line: 1108, column: 9, scope: !8443, inlinedAt: !8449)
!8449 = !DILocation(line: 1108, column: 9, scope: !8435)
!8450 = !DILocation(line: 1105, column: 61, scope: !8435)
!8451 = !DILocalVariable(name: "this", scope: !8452, file: !2933, line: 1105, type: !8438, align: 8)
!8452 = distinct !DISubprogram(name: "get_mut_unchecked<std::thread::Inner>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h3a6500616e6258f3E", scope: !202, file: !2933, line: 1600, type: !8453, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !8456)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!8455, !8438}
!8455 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::thread::Inner", baseType: !227, size: 64, align: 64, dwarfAddressSpace: 0)
!8456 = !{!8451}
!8457 = !DILocation(line: 1105, column: 37, scope: !8452, inlinedAt: !8458)
!8458 = !DILocation(line: 1105, column: 37, scope: !8435)
!8459 = !DILocalVariable(name: "self", scope: !8460, file: !2933, line: 1105, type: !207, align: 8)
!8460 = !DILexicalBlockFile(scope: !8461, file: !2933, discriminator: 0)
!8461 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf5dc9bbda4fbb836E", scope: !207, file: !1413, line: 330, type: !8462, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !8464)
!8462 = !DISubroutineType(types: !8463)
!8463 = !{!7889, !207}
!8464 = !{!8459}
!8465 = !DILocation(line: 1105, column: 37, scope: !8460, inlinedAt: !8466)
!8466 = !DILocation(line: 1603, column: 25, scope: !8452, inlinedAt: !8458)
!8467 = !DILocation(line: 1105, column: 18, scope: !8435)
!8468 = !DILocation(line: 1108, column: 26, scope: !8435)
!8469 = !DILocation(line: 1108, column: 14, scope: !8435)
!8470 = !DILocation(line: 1109, column: 6, scope: !8435)
!8471 = distinct !DISubprogram(name: "drop_slow<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17h7cada30ff35c6670E", scope: !295, file: !2933, line: 1102, type: !8472, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !8475)
!8472 = !DISubroutineType(types: !8473)
!8473 = !{null, !8474}
!8474 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::sync::Arc<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", baseType: !295, size: 64, align: 64, dwarfAddressSpace: 0)
!8475 = !{!8476}
!8476 = !DILocalVariable(name: "self", arg: 1, scope: !8471, file: !2933, line: 1102, type: !8474)
!8477 = !DILocation(line: 1102, column: 25, scope: !8471)
!8478 = !DILocalVariable(name: "_x", scope: !8479, file: !2933, line: 1108, type: !4195, align: 8)
!8479 = !DILexicalBlockFile(scope: !8480, file: !2933, discriminator: 0)
!8480 = distinct !DISubprogram(name: "drop<alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3mem4drop17h96edf6c40218ee74E", scope: !789, file: !3835, line: 988, type: !8481, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4200, retainedNodes: !8483)
!8481 = !DISubroutineType(types: !8482)
!8482 = !{null, !4195}
!8483 = !{!8478}
!8484 = !DILocation(line: 1108, column: 9, scope: !8479, inlinedAt: !8485)
!8485 = !DILocation(line: 1108, column: 9, scope: !8471)
!8486 = !DILocation(line: 1105, column: 61, scope: !8471)
!8487 = !DILocalVariable(name: "this", scope: !8488, file: !2933, line: 1105, type: !8474, align: 8)
!8488 = distinct !DISubprogram(name: "get_mut_unchecked<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17hff1a8e06c29ba7e7E", scope: !295, file: !2933, line: 1600, type: !8489, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !8492)
!8489 = !DISubroutineType(types: !8490)
!8490 = !{!8491, !8474}
!8491 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !307, size: 64, align: 64, dwarfAddressSpace: 0)
!8492 = !{!8487}
!8493 = !DILocation(line: 1105, column: 37, scope: !8488, inlinedAt: !8494)
!8494 = !DILocation(line: 1105, column: 37, scope: !8471)
!8495 = !DILocalVariable(name: "self", scope: !8496, file: !2933, line: 1105, type: !298, align: 8)
!8496 = !DILexicalBlockFile(scope: !8497, file: !2933, discriminator: 0)
!8497 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h252ca02f60dbca02E", scope: !298, file: !1413, line: 330, type: !8498, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !8500)
!8498 = !DISubroutineType(types: !8499)
!8499 = !{!7903, !298}
!8500 = !{!8495}
!8501 = !DILocation(line: 1105, column: 37, scope: !8496, inlinedAt: !8502)
!8502 = !DILocation(line: 1603, column: 25, scope: !8488, inlinedAt: !8494)
!8503 = !DILocation(line: 1105, column: 18, scope: !8471)
!8504 = !DILocation(line: 1108, column: 26, scope: !8471)
!8505 = !DILocation(line: 1108, column: 14, scope: !8471)
!8506 = !DILocation(line: 1109, column: 6, scope: !8471)
!8507 = distinct !DISubprogram(name: "drop_slow<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hb3651e22e411dae6E", scope: !382, file: !2933, line: 1102, type: !8508, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8510)
!8508 = !DISubroutineType(types: !8509)
!8509 = !{null, !8412}
!8510 = !{!8511}
!8511 = !DILocalVariable(name: "self", arg: 1, scope: !8507, file: !2933, line: 1102, type: !8412)
!8512 = !DILocation(line: 1102, column: 25, scope: !8507)
!8513 = !DILocalVariable(name: "_x", scope: !8514, file: !2933, line: 1108, type: !4538, align: 8)
!8514 = !DILexicalBlockFile(scope: !8515, file: !2933, discriminator: 0)
!8515 = distinct !DISubprogram(name: "drop<alloc::sync::Weak<std::thread::Packet<()>>>", linkageName: "_ZN4core3mem4drop17he6ce6de750f72b01E", scope: !789, file: !3835, line: 988, type: !8516, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4543, retainedNodes: !8518)
!8516 = !DISubroutineType(types: !8517)
!8517 = !{null, !4538}
!8518 = !{!8513}
!8519 = !DILocation(line: 1108, column: 9, scope: !8514, inlinedAt: !8520)
!8520 = !DILocation(line: 1108, column: 9, scope: !8507)
!8521 = !DILocation(line: 1105, column: 61, scope: !8507)
!8522 = !DILocalVariable(name: "this", scope: !8523, file: !2933, line: 1105, type: !8412, align: 8)
!8523 = distinct !DISubprogram(name: "get_mut_unchecked<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h31efc3fbf769befbE", scope: !382, file: !2933, line: 1600, type: !8422, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8524)
!8524 = !{!8522}
!8525 = !DILocation(line: 1105, column: 37, scope: !8523, inlinedAt: !8526)
!8526 = !DILocation(line: 1105, column: 37, scope: !8507)
!8527 = !DILocalVariable(name: "self", scope: !8528, file: !2933, line: 1105, type: !385, align: 8)
!8528 = !DILexicalBlockFile(scope: !8529, file: !2933, discriminator: 0)
!8529 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8530)
!8530 = !{!8527}
!8531 = !DILocation(line: 1105, column: 37, scope: !8528, inlinedAt: !8532)
!8532 = !DILocation(line: 1603, column: 25, scope: !8523, inlinedAt: !8526)
!8533 = !DILocation(line: 1105, column: 18, scope: !8507)
!8534 = !DILocation(line: 1108, column: 26, scope: !8507)
!8535 = !DILocation(line: 1108, column: 14, scope: !8507)
!8536 = !DILocation(line: 1109, column: 6, scope: !8507)
!8537 = distinct !DISubprogram(name: "drop_slow<std::thread::scoped::ScopeData>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$9drop_slow17hfa94940a74c27332E", scope: !405, file: !2933, line: 1102, type: !8538, scopeLine: 1102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !8541)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{null, !8540}
!8540 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::sync::Arc<std::thread::scoped::ScopeData>", baseType: !405, size: 64, align: 64, dwarfAddressSpace: 0)
!8541 = !{!8542}
!8542 = !DILocalVariable(name: "self", arg: 1, scope: !8537, file: !2933, line: 1102, type: !8540)
!8543 = !DILocation(line: 1102, column: 25, scope: !8537)
!8544 = !DILocalVariable(name: "_x", scope: !8545, file: !2933, line: 1108, type: !4501, align: 8)
!8545 = !DILexicalBlockFile(scope: !8546, file: !2933, discriminator: 0)
!8546 = distinct !DISubprogram(name: "drop<alloc::sync::Weak<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3mem4drop17hcc782aa27bf6278bE", scope: !789, file: !3835, line: 988, type: !8547, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4506, retainedNodes: !8549)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{null, !4501}
!8549 = !{!8544}
!8550 = !DILocation(line: 1108, column: 9, scope: !8545, inlinedAt: !8551)
!8551 = !DILocation(line: 1108, column: 9, scope: !8537)
!8552 = !DILocation(line: 1105, column: 61, scope: !8537)
!8553 = !DILocalVariable(name: "this", scope: !8554, file: !2933, line: 1105, type: !8540, align: 8)
!8554 = distinct !DISubprogram(name: "get_mut_unchecked<std::thread::scoped::ScopeData>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$17get_mut_unchecked17h002deead98a4bb47E", scope: !405, file: !2933, line: 1600, type: !8555, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !8558)
!8555 = !DISubroutineType(types: !8556)
!8556 = !{!8557, !8540}
!8557 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::thread::scoped::ScopeData", baseType: !417, size: 64, align: 64, dwarfAddressSpace: 0)
!8558 = !{!8553}
!8559 = !DILocation(line: 1105, column: 37, scope: !8554, inlinedAt: !8560)
!8560 = !DILocation(line: 1105, column: 37, scope: !8537)
!8561 = !DILocalVariable(name: "self", scope: !8562, file: !2933, line: 1105, type: !408, align: 8)
!8562 = !DILexicalBlockFile(scope: !8563, file: !2933, discriminator: 0)
!8563 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34c1f75750307eb0E", scope: !408, file: !1413, line: 330, type: !3000, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !8564)
!8564 = !{!8561}
!8565 = !DILocation(line: 1105, column: 37, scope: !8562, inlinedAt: !8566)
!8566 = !DILocation(line: 1603, column: 25, scope: !8554, inlinedAt: !8560)
!8567 = !DILocation(line: 1105, column: 18, scope: !8537)
!8568 = !DILocation(line: 1108, column: 26, scope: !8537)
!8569 = !DILocation(line: 1108, column: 14, scope: !8537)
!8570 = !DILocation(line: 1109, column: 6, scope: !8537)
!8571 = distinct !DISubprogram(name: "is_unique<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$9is_unique17hcbd9e074c49c5d84E", scope: !382, file: !2933, line: 1610, type: !8572, scopeLine: 1610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8574)
!8572 = !DISubroutineType(types: !8573)
!8573 = !{!1244, !8412}
!8574 = !{!8575, !8576}
!8575 = !DILocalVariable(name: "self", arg: 1, scope: !8571, file: !2933, line: 1610, type: !8412)
!8576 = !DILocalVariable(name: "unique", scope: !8577, file: !2933, line: 1622, type: !1244, align: 1)
!8577 = distinct !DILexicalBlock(scope: !8571, file: !2933, line: 1622, column: 13)
!8578 = !DILocation(line: 1610, column: 18, scope: !8571)
!8579 = !DILocation(line: 1618, column: 12, scope: !8571)
!8580 = !DILocalVariable(name: "self", scope: !8581, file: !2933, line: 1618, type: !2938, align: 8)
!8581 = distinct !DISubprogram(name: "inner<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h2c9584fbefbd9d49E", scope: !382, file: !2933, line: 1091, type: !2944, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8582)
!8582 = !{!8580}
!8583 = !DILocation(line: 1618, column: 12, scope: !8581, inlinedAt: !8579)
!8584 = !DILocalVariable(name: "self", scope: !8585, file: !2933, line: 1618, type: !2955, align: 8)
!8585 = !DILexicalBlockFile(scope: !8586, file: !2933, discriminator: 0)
!8586 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hee047371338adbdcE", scope: !385, file: !1413, line: 378, type: !2953, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8587)
!8587 = !{!8584}
!8588 = !DILocation(line: 1618, column: 12, scope: !8585, inlinedAt: !8589)
!8589 = !DILocation(line: 1097, column: 18, scope: !8581, inlinedAt: !8579)
!8590 = !DILocalVariable(name: "self", scope: !8591, file: !2933, line: 1618, type: !385, align: 8)
!8591 = !DILexicalBlockFile(scope: !8592, file: !2933, discriminator: 0)
!8592 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8593)
!8593 = !{!8590}
!8594 = !DILocation(line: 1618, column: 12, scope: !8591, inlinedAt: !8595)
!8595 = !DILocation(line: 381, column: 20, scope: !8586, inlinedAt: !8589)
!8596 = !DILocalVariable(name: "self", scope: !8597, file: !2933, line: 1618, type: !8601, align: 8)
!8597 = !DILexicalBlockFile(scope: !8598, file: !2933, discriminator: 0)
!8598 = distinct !DISubprogram(name: "compare_exchange", linkageName: "_ZN4core4sync6atomic11AtomicUsize16compare_exchange17h3b7b3b2006fc0465E", scope: !214, file: !6046, line: 2282, type: !8599, scopeLine: 2282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8602)
!8599 = !DISubroutineType(types: !8600)
!8600 = !{!6134, !8601, !9, !9, !870, !870}
!8601 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::sync::atomic::AtomicUsize", baseType: !214, size: 64, align: 64, dwarfAddressSpace: 0)
!8602 = !{!8596, !8603, !8604, !8605, !8606}
!8603 = !DILocalVariable(name: "current", scope: !8597, file: !2933, line: 1618, type: !9, align: 8)
!8604 = !DILocalVariable(name: "new", scope: !8597, file: !2933, line: 1618, type: !9, align: 8)
!8605 = !DILocalVariable(name: "success", scope: !8597, file: !2933, line: 1618, type: !870, align: 1)
!8606 = !DILocalVariable(name: "failure", scope: !8597, file: !2933, line: 1618, type: !870, align: 1)
!8607 = !DILocation(line: 1618, column: 12, scope: !8597, inlinedAt: !8579)
!8608 = !DILocalVariable(name: "self", scope: !8609, file: !2933, line: 1618, type: !8613, align: 8)
!8609 = !DILexicalBlockFile(scope: !8610, file: !2933, discriminator: 0)
!8610 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !8614)
!8611 = !DISubroutineType(types: !8612)
!8612 = !{!3928, !8613}
!8613 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cell::UnsafeCell<usize>", baseType: !219, size: 64, align: 64, dwarfAddressSpace: 0)
!8614 = !{!8608}
!8615 = !DILocation(line: 1618, column: 12, scope: !8609, inlinedAt: !8616)
!8616 = !DILocation(line: 2288, column: 50, scope: !8598, inlinedAt: !8579)
!8617 = !DILocalVariable(name: "self", scope: !8618, file: !2933, line: 1618, type: !8622, align: 8)
!8618 = !DILexicalBlockFile(scope: !8619, file: !2933, discriminator: 0)
!8619 = distinct !DISubprogram(name: "is_ok<usize, usize>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h6c01494dc6029a48E", scope: !6134, file: !1782, line: 542, type: !8620, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6142, retainedNodes: !8623)
!8620 = !DISubroutineType(types: !8621)
!8621 = !{!1244, !8622}
!8622 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::result::Result<usize, usize>", baseType: !6134, size: 64, align: 64, dwarfAddressSpace: 0)
!8623 = !{!8617}
!8624 = !DILocation(line: 1618, column: 12, scope: !8618, inlinedAt: !8579)
!8625 = !DILocation(line: 1630, column: 13, scope: !8571)
!8626 = !DILocation(line: 1618, column: 9, scope: !8571)
!8627 = !DILocation(line: 1622, column: 26, scope: !8571)
!8628 = !DILocalVariable(name: "self", scope: !8629, file: !2933, line: 1622, type: !2938, align: 8)
!8629 = distinct !DISubprogram(name: "inner<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h2c9584fbefbd9d49E", scope: !382, file: !2933, line: 1091, type: !2944, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8630)
!8630 = !{!8628}
!8631 = !DILocation(line: 1622, column: 26, scope: !8629, inlinedAt: !8627)
!8632 = !DILocalVariable(name: "self", scope: !8633, file: !2933, line: 1622, type: !2955, align: 8)
!8633 = !DILexicalBlockFile(scope: !8634, file: !2933, discriminator: 0)
!8634 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hee047371338adbdcE", scope: !385, file: !1413, line: 378, type: !2953, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8635)
!8635 = !{!8632}
!8636 = !DILocation(line: 1622, column: 26, scope: !8633, inlinedAt: !8637)
!8637 = !DILocation(line: 1097, column: 18, scope: !8629, inlinedAt: !8627)
!8638 = !DILocalVariable(name: "self", scope: !8639, file: !2933, line: 1622, type: !385, align: 8)
!8639 = !DILexicalBlockFile(scope: !8640, file: !2933, discriminator: 0)
!8640 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8641)
!8641 = !{!8638}
!8642 = !DILocation(line: 1622, column: 26, scope: !8639, inlinedAt: !8643)
!8643 = !DILocation(line: 381, column: 20, scope: !8634, inlinedAt: !8637)
!8644 = !DILocalVariable(name: "self", scope: !8645, file: !2933, line: 1622, type: !8601, align: 8)
!8645 = !DILexicalBlockFile(scope: !8646, file: !2933, discriminator: 0)
!8646 = distinct !DISubprogram(name: "load", linkageName: "_ZN4core4sync6atomic11AtomicUsize4load17hf6357a6e14ef5628E", scope: !214, file: !6046, line: 2115, type: !8647, scopeLine: 2115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8649)
!8647 = !DISubroutineType(types: !8648)
!8648 = !{!9, !8601, !870}
!8649 = !{!8644, !8650}
!8650 = !DILocalVariable(name: "order", scope: !8645, file: !2933, line: 1622, type: !870, align: 1)
!8651 = !DILocation(line: 1622, column: 26, scope: !8645, inlinedAt: !8627)
!8652 = !DILocalVariable(name: "self", scope: !8653, file: !2933, line: 1622, type: !8613, align: 8)
!8653 = !DILexicalBlockFile(scope: !8654, file: !2933, discriminator: 0)
!8654 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !8655)
!8655 = !{!8652}
!8656 = !DILocation(line: 1622, column: 26, scope: !8653, inlinedAt: !8657)
!8657 = !DILocation(line: 2117, column: 38, scope: !8646, inlinedAt: !8627)
!8658 = !DILocation(line: 1622, column: 17, scope: !8577)
!8659 = !DILocation(line: 1627, column: 13, scope: !8577)
!8660 = !DILocalVariable(name: "self", scope: !8661, file: !2933, line: 1627, type: !2938, align: 8)
!8661 = distinct !DISubprogram(name: "inner<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h2c9584fbefbd9d49E", scope: !382, file: !2933, line: 1091, type: !2944, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8662)
!8662 = !{!8660}
!8663 = !DILocation(line: 1627, column: 13, scope: !8661, inlinedAt: !8659)
!8664 = !DILocalVariable(name: "self", scope: !8665, file: !2933, line: 1627, type: !2955, align: 8)
!8665 = !DILexicalBlockFile(scope: !8666, file: !2933, discriminator: 0)
!8666 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hee047371338adbdcE", scope: !385, file: !1413, line: 378, type: !2953, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8667)
!8667 = !{!8664}
!8668 = !DILocation(line: 1627, column: 13, scope: !8665, inlinedAt: !8669)
!8669 = !DILocation(line: 1097, column: 18, scope: !8661, inlinedAt: !8659)
!8670 = !DILocalVariable(name: "self", scope: !8671, file: !2933, line: 1627, type: !385, align: 8)
!8671 = !DILexicalBlockFile(scope: !8672, file: !2933, discriminator: 0)
!8672 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8673)
!8673 = !{!8670}
!8674 = !DILocation(line: 1627, column: 13, scope: !8671, inlinedAt: !8675)
!8675 = !DILocation(line: 381, column: 20, scope: !8666, inlinedAt: !8669)
!8676 = !DILocalVariable(name: "self", scope: !8677, file: !2933, line: 1627, type: !8601, align: 8)
!8677 = !DILexicalBlockFile(scope: !8678, file: !2933, discriminator: 0)
!8678 = distinct !DISubprogram(name: "store", linkageName: "_ZN4core4sync6atomic11AtomicUsize5store17h44688cf4bb10e283E", scope: !214, file: !6046, line: 2142, type: !8679, scopeLine: 2142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8681)
!8679 = !DISubroutineType(types: !8680)
!8680 = !{null, !8601, !9, !870}
!8681 = !{!8676, !8682, !8683}
!8682 = !DILocalVariable(name: "val", scope: !8677, file: !2933, line: 1627, type: !9, align: 8)
!8683 = !DILocalVariable(name: "order", scope: !8677, file: !2933, line: 1627, type: !870, align: 1)
!8684 = !DILocation(line: 1627, column: 13, scope: !8677, inlinedAt: !8659)
!8685 = !DILocalVariable(name: "self", scope: !8686, file: !2933, line: 1627, type: !8613, align: 8)
!8686 = !DILexicalBlockFile(scope: !8687, file: !2933, discriminator: 0)
!8687 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !8688)
!8688 = !{!8685}
!8689 = !DILocation(line: 1627, column: 13, scope: !8686, inlinedAt: !8690)
!8690 = !DILocation(line: 2144, column: 39, scope: !8678, inlinedAt: !8659)
!8691 = !DILocation(line: 1628, column: 13, scope: !8577)
!8692 = !DILocation(line: 1632, column: 6, scope: !8571)
!8693 = distinct !DISubprogram(name: "inner<std::thread::Inner>", linkageName: "_ZN5alloc4sync13Weak$LT$T$GT$5inner17h1637794c46f734c6E", scope: !4443, file: !2933, line: 2056, type: !8694, scopeLine: 2056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !8714)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{!8696, !8713}
!8696 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::sync::WeakInner>", scope: !231, file: !2, size: 128, align: 64, elements: !8697, templateParams: !28, identifier: "5a556d3591b038ad4efedfb4e0fbc944")
!8697 = !{!8698}
!8698 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8696, file: !2, size: 128, align: 64, elements: !8699, templateParams: !28, identifier: "fa27f7a02fc2b4b296b9ea277710b2ea", discriminator: !8712)
!8699 = !{!8700, !8708}
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !8698, file: !2, baseType: !8701, size: 128, align: 64, extraData: i64 0)
!8701 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !8696, file: !2, size: 128, align: 64, elements: !28, templateParams: !8702, identifier: "2d35ed0a0a44029dc30e45743da35e60")
!8702 = !{!8703}
!8703 = !DITemplateTypeParameter(name: "T", type: !8704)
!8704 = !DICompositeType(tag: DW_TAG_structure_type, name: "WeakInner", scope: !203, file: !2, size: 128, align: 64, elements: !8705, templateParams: !28, identifier: "1d9873b6ac0312934cc695268e128d53")
!8705 = !{!8706, !8707}
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !8704, file: !2, baseType: !8601, size: 64, align: 64)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !8704, file: !2, baseType: !8601, size: 64, align: 64, offset: 64)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !8698, file: !2, baseType: !8709, size: 128, align: 64)
!8709 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !8696, file: !2, size: 128, align: 64, elements: !8710, templateParams: !8702, identifier: "24ea0fa2b59463193e74b8b3529f5489")
!8710 = !{!8711}
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8709, file: !2, baseType: !8704, size: 128, align: 64)
!8712 = !DIDerivedType(tag: DW_TAG_member, scope: !8696, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!8713 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::Weak<std::thread::Inner>", baseType: !4443, size: 64, align: 64, dwarfAddressSpace: 0)
!8714 = !{!8715, !8716}
!8715 = !DILocalVariable(name: "self", arg: 1, scope: !8693, file: !2933, line: 2056, type: !8713)
!8716 = !DILocalVariable(name: "ptr", scope: !8717, file: !2933, line: 2064, type: !7889, align: 8)
!8717 = distinct !DILexicalBlock(scope: !8693, file: !2933, line: 2064, column: 17)
!8718 = !DILocation(line: 2056, column: 14, scope: !8693)
!8719 = !DILocation(line: 2057, column: 24, scope: !8693)
!8720 = !DILocalVariable(name: "self", scope: !8721, file: !2933, line: 2057, type: !207, align: 8)
!8721 = !DILexicalBlockFile(scope: !8722, file: !2933, discriminator: 0)
!8722 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf5dc9bbda4fbb836E", scope: !207, file: !1413, line: 330, type: !8462, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !8723)
!8723 = !{!8720}
!8724 = !DILocation(line: 2057, column: 24, scope: !8721, inlinedAt: !8719)
!8725 = !DILocation(line: 2057, column: 12, scope: !8693)
!8726 = !DILocation(line: 2064, column: 27, scope: !8693)
!8727 = !DILocalVariable(name: "self", scope: !8728, file: !2933, line: 2064, type: !207, align: 8)
!8728 = !DILexicalBlockFile(scope: !8729, file: !2933, discriminator: 0)
!8729 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf5dc9bbda4fbb836E", scope: !207, file: !1413, line: 330, type: !8462, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !8730)
!8730 = !{!8727}
!8731 = !DILocation(line: 2064, column: 27, scope: !8728, inlinedAt: !8726)
!8732 = !DILocation(line: 2064, column: 21, scope: !8717)
!8733 = !DILocation(line: 2065, column: 37, scope: !8717)
!8734 = !DILocation(line: 2065, column: 59, scope: !8717)
!8735 = !DILocation(line: 2065, column: 17, scope: !8717)
!8736 = !DILocation(line: 2063, column: 13, scope: !8693)
!8737 = !DILocation(line: 2057, column: 9, scope: !8693)
!8738 = !DILocation(line: 2058, column: 13, scope: !8693)
!8739 = !DILocation(line: 2068, column: 6, scope: !8693)
!8740 = distinct !DISubprogram(name: "inner<std::thread::scoped::ScopeData>", linkageName: "_ZN5alloc4sync13Weak$LT$T$GT$5inner17h186709c82b4962d4E", scope: !4501, file: !2933, line: 2056, type: !8741, scopeLine: 2056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !8744)
!8741 = !DISubroutineType(types: !8742)
!8742 = !{!8696, !8743}
!8743 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::Weak<std::thread::scoped::ScopeData>", baseType: !4501, size: 64, align: 64, dwarfAddressSpace: 0)
!8744 = !{!8745, !8746}
!8745 = !DILocalVariable(name: "self", arg: 1, scope: !8740, file: !2933, line: 2056, type: !8743)
!8746 = !DILocalVariable(name: "ptr", scope: !8747, file: !2933, line: 2064, type: !3002, align: 8)
!8747 = distinct !DILexicalBlock(scope: !8740, file: !2933, line: 2064, column: 17)
!8748 = !DILocation(line: 2056, column: 14, scope: !8740)
!8749 = !DILocation(line: 2057, column: 24, scope: !8740)
!8750 = !DILocalVariable(name: "self", scope: !8751, file: !2933, line: 2057, type: !408, align: 8)
!8751 = !DILexicalBlockFile(scope: !8752, file: !2933, discriminator: 0)
!8752 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34c1f75750307eb0E", scope: !408, file: !1413, line: 330, type: !3000, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !8753)
!8753 = !{!8750}
!8754 = !DILocation(line: 2057, column: 24, scope: !8751, inlinedAt: !8749)
!8755 = !DILocation(line: 2057, column: 12, scope: !8740)
!8756 = !DILocation(line: 2064, column: 27, scope: !8740)
!8757 = !DILocalVariable(name: "self", scope: !8758, file: !2933, line: 2064, type: !408, align: 8)
!8758 = !DILexicalBlockFile(scope: !8759, file: !2933, discriminator: 0)
!8759 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34c1f75750307eb0E", scope: !408, file: !1413, line: 330, type: !3000, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !8760)
!8760 = !{!8757}
!8761 = !DILocation(line: 2064, column: 27, scope: !8758, inlinedAt: !8756)
!8762 = !DILocation(line: 2064, column: 21, scope: !8747)
!8763 = !DILocation(line: 2065, column: 37, scope: !8747)
!8764 = !DILocation(line: 2065, column: 59, scope: !8747)
!8765 = !DILocation(line: 2065, column: 17, scope: !8747)
!8766 = !DILocation(line: 2063, column: 13, scope: !8740)
!8767 = !DILocation(line: 2057, column: 9, scope: !8740)
!8768 = !DILocation(line: 2058, column: 13, scope: !8740)
!8769 = !DILocation(line: 2068, column: 6, scope: !8740)
!8770 = distinct !DISubprogram(name: "inner<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync13Weak$LT$T$GT$5inner17h34a5dc89203c17e7E", scope: !4538, file: !2933, line: 2056, type: !8771, scopeLine: 2056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !8774)
!8771 = !DISubroutineType(types: !8772)
!8772 = !{!8696, !8773}
!8773 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::Weak<std::thread::Packet<()>>", baseType: !4538, size: 64, align: 64, dwarfAddressSpace: 0)
!8774 = !{!8775, !8776}
!8775 = !DILocalVariable(name: "self", arg: 1, scope: !8770, file: !2933, line: 2056, type: !8773)
!8776 = !DILocalVariable(name: "ptr", scope: !8777, file: !2933, line: 2064, type: !2964, align: 8)
!8777 = distinct !DILexicalBlock(scope: !8770, file: !2933, line: 2064, column: 17)
!8778 = !DILocation(line: 2056, column: 14, scope: !8770)
!8779 = !DILocation(line: 2057, column: 24, scope: !8770)
!8780 = !DILocalVariable(name: "self", scope: !8781, file: !2933, line: 2057, type: !385, align: 8)
!8781 = !DILexicalBlockFile(scope: !8782, file: !2933, discriminator: 0)
!8782 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8783)
!8783 = !{!8780}
!8784 = !DILocation(line: 2057, column: 24, scope: !8781, inlinedAt: !8779)
!8785 = !DILocation(line: 2057, column: 12, scope: !8770)
!8786 = !DILocation(line: 2064, column: 27, scope: !8770)
!8787 = !DILocalVariable(name: "self", scope: !8788, file: !2933, line: 2064, type: !385, align: 8)
!8788 = !DILexicalBlockFile(scope: !8789, file: !2933, discriminator: 0)
!8789 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !8790)
!8790 = !{!8787}
!8791 = !DILocation(line: 2064, column: 27, scope: !8788, inlinedAt: !8786)
!8792 = !DILocation(line: 2064, column: 21, scope: !8777)
!8793 = !DILocation(line: 2065, column: 37, scope: !8777)
!8794 = !DILocation(line: 2065, column: 59, scope: !8777)
!8795 = !DILocation(line: 2065, column: 17, scope: !8777)
!8796 = !DILocation(line: 2063, column: 13, scope: !8770)
!8797 = !DILocation(line: 2057, column: 9, scope: !8770)
!8798 = !DILocation(line: 2058, column: 13, scope: !8770)
!8799 = !DILocation(line: 2068, column: 6, scope: !8770)
!8800 = distinct !DISubprogram(name: "inner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN5alloc4sync13Weak$LT$T$GT$5inner17h9c4dd7cdbacb2b24E", scope: !4195, file: !2933, line: 2056, type: !8801, scopeLine: 2056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !8804)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{!8696, !8803}
!8803 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", baseType: !4195, size: 64, align: 64, dwarfAddressSpace: 0)
!8804 = !{!8805, !8806}
!8805 = !DILocalVariable(name: "self", arg: 1, scope: !8800, file: !2933, line: 2056, type: !8803)
!8806 = !DILocalVariable(name: "ptr", scope: !8807, file: !2933, line: 2064, type: !7903, align: 8)
!8807 = distinct !DILexicalBlock(scope: !8800, file: !2933, line: 2064, column: 17)
!8808 = !DILocation(line: 2056, column: 14, scope: !8800)
!8809 = !DILocation(line: 2057, column: 24, scope: !8800)
!8810 = !DILocalVariable(name: "self", scope: !8811, file: !2933, line: 2057, type: !298, align: 8)
!8811 = !DILexicalBlockFile(scope: !8812, file: !2933, discriminator: 0)
!8812 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h252ca02f60dbca02E", scope: !298, file: !1413, line: 330, type: !8498, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !8813)
!8813 = !{!8810}
!8814 = !DILocation(line: 2057, column: 24, scope: !8811, inlinedAt: !8809)
!8815 = !DILocation(line: 2057, column: 12, scope: !8800)
!8816 = !DILocation(line: 2064, column: 27, scope: !8800)
!8817 = !DILocalVariable(name: "self", scope: !8818, file: !2933, line: 2064, type: !298, align: 8)
!8818 = !DILexicalBlockFile(scope: !8819, file: !2933, discriminator: 0)
!8819 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h252ca02f60dbca02E", scope: !298, file: !1413, line: 330, type: !8498, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !8820)
!8820 = !{!8817}
!8821 = !DILocation(line: 2064, column: 27, scope: !8818, inlinedAt: !8816)
!8822 = !DILocation(line: 2064, column: 21, scope: !8807)
!8823 = !DILocation(line: 2065, column: 37, scope: !8807)
!8824 = !DILocation(line: 2065, column: 59, scope: !8807)
!8825 = !DILocation(line: 2065, column: 17, scope: !8807)
!8826 = !DILocation(line: 2063, column: 13, scope: !8800)
!8827 = !DILocation(line: 2057, column: 9, scope: !8800)
!8828 = !DILocation(line: 2058, column: 13, scope: !8800)
!8829 = !DILocation(line: 2068, column: 6, scope: !8800)
!8830 = distinct !DISubprogram(name: "exchange_malloc", linkageName: "_ZN5alloc5alloc15exchange_malloc17hcbc5eeb785b10e95E", scope: !359, file: !8831, line: 324, type: !8832, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8834)
!8831 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6c7758b12bd6b7f0705d9bc90e671ea")
!8832 = !DISubroutineType(types: !8833)
!8833 = !{!1021, !9, !9}
!8834 = !{!8835, !8836, !8837, !8839}
!8835 = !DILocalVariable(name: "size", arg: 1, scope: !8830, file: !8831, line: 324, type: !9)
!8836 = !DILocalVariable(name: "align", arg: 2, scope: !8830, file: !8831, line: 324, type: !9)
!8837 = !DILocalVariable(name: "layout", scope: !8838, file: !8831, line: 325, type: !1463, align: 8)
!8838 = distinct !DILexicalBlock(scope: !8830, file: !8831, line: 325, column: 5)
!8839 = !DILocalVariable(name: "ptr", scope: !8840, file: !8831, line: 327, type: !7358, align: 8)
!8840 = distinct !DILexicalBlock(scope: !8838, file: !8831, line: 327, column: 9)
!8841 = !DILocation(line: 324, column: 27, scope: !8830)
!8842 = !DILocation(line: 324, column: 40, scope: !8830)
!8843 = !DILocation(line: 325, column: 9, scope: !8838)
!8844 = !DILocalVariable(name: "self", scope: !8845, file: !8831, line: 327, type: !350, align: 8)
!8845 = !DILexicalBlockFile(scope: !8846, file: !8831, discriminator: 0)
!8846 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8847)
!8847 = !{!8844}
!8848 = !DILocation(line: 327, column: 20, scope: !8845, inlinedAt: !8849)
!8849 = !DILocation(line: 553, column: 9, scope: !8850, inlinedAt: !8856)
!8850 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h79a9b38acdab3809E", scope: !7358, file: !1413, line: 552, type: !8851, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8853)
!8851 = !DISubroutineType(types: !8852)
!8852 = !{!1021, !7358}
!8853 = !{!8854}
!8854 = !DILocalVariable(name: "self", scope: !8855, file: !8831, line: 327, type: !7358, align: 8)
!8855 = !DILexicalBlockFile(scope: !8850, file: !8831, discriminator: 0)
!8856 = !DILocation(line: 327, column: 20, scope: !8840)
!8857 = !DILocation(line: 325, column: 61, scope: !8830)
!8858 = !DILocalVariable(name: "size", scope: !8859, file: !8831, line: 325, type: !9, align: 8)
!8859 = !DILexicalBlockFile(scope: !8860, file: !8831, discriminator: 0)
!8860 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hd0530bfa33ab0837E", scope: !1463, file: !6221, line: 110, type: !6254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8861)
!8861 = !{!8858, !8862}
!8862 = !DILocalVariable(name: "align", scope: !8859, file: !8831, line: 325, type: !9, align: 8)
!8863 = !DILocation(line: 325, column: 27, scope: !8859, inlinedAt: !8864)
!8864 = !DILocation(line: 325, column: 27, scope: !8830)
!8865 = !DILocation(line: 325, column: 67, scope: !8830)
!8866 = !DILocalVariable(name: "align", scope: !8867, file: !8831, line: 325, type: !9, align: 8)
!8867 = !DILexicalBlockFile(scope: !8868, file: !8831, discriminator: 0)
!8868 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8869)
!8869 = !{!8866, !8870}
!8870 = !DILocalVariable(name: "runtime", scope: !8871, file: !8831, line: 325, type: !6271, align: 8)
!8871 = !DILexicalBlockFile(scope: !8872, file: !8831, discriminator: 0)
!8872 = distinct !DILexicalBlock(scope: !8868, file: !913, line: 2336, column: 13)
!8873 = !DILocation(line: 325, column: 27, scope: !8867, inlinedAt: !8874)
!8874 = !DILocation(line: 112, column: 40, scope: !8860, inlinedAt: !8864)
!8875 = !DILocation(line: 326, column: 11, scope: !8838)
!8876 = !DILocalVariable(name: "self", scope: !8877, file: !8831, line: 326, type: !8881, align: 8)
!8877 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h760fa60d0593f80cE", scope: !8878, file: !8831, line: 236, type: !8879, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8882)
!8878 = !DINamespace(name: "{impl#1}", scope: !359)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{!7350, !8881, !1463}
!8881 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !358, size: 64, align: 64, dwarfAddressSpace: 0)
!8882 = !{!8876, !8883}
!8883 = !DILocalVariable(name: "layout", scope: !8877, file: !8831, line: 326, type: !1463, align: 8)
!8884 = !DILocation(line: 326, column: 11, scope: !8877, inlinedAt: !8875)
!8885 = !DILocation(line: 326, column: 27, scope: !8838)
!8886 = !DILocation(line: 326, column: 5, scope: !8838)
!8887 = !DILocation(line: 327, column: 12, scope: !8838)
!8888 = !DILocation(line: 327, column: 12, scope: !8840)
!8889 = !DILocation(line: 327, column: 20, scope: !8855, inlinedAt: !8856)
!8890 = !DILocalVariable(name: "self", scope: !8891, file: !8831, line: 327, type: !7358, align: 8)
!8891 = !DILexicalBlockFile(scope: !8892, file: !8831, discriminator: 0)
!8892 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h006553e9d87f9a0dE", scope: !7358, file: !1413, line: 532, type: !8893, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8895)
!8893 = !DISubroutineType(types: !8894)
!8894 = !{!350, !7358}
!8895 = !{!8890}
!8896 = !DILocation(line: 327, column: 20, scope: !8891, inlinedAt: !8849)
!8897 = !DILocalVariable(name: "self", scope: !8898, file: !8831, line: 327, type: !7358, align: 8)
!8898 = !DILexicalBlockFile(scope: !8899, file: !8831, discriminator: 0)
!8899 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc08d8add39eb4c7E", scope: !7358, file: !1413, line: 330, type: !8900, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8902)
!8900 = !DISubroutineType(types: !8901)
!8901 = !{!992, !7358}
!8902 = !{!8897}
!8903 = !DILocation(line: 327, column: 20, scope: !8898, inlinedAt: !8904)
!8904 = !DILocation(line: 534, column: 41, scope: !8892, inlinedAt: !8849)
!8905 = !DILocalVariable(name: "self", scope: !8906, file: !8831, line: 327, type: !992, align: 8)
!8906 = !DILexicalBlockFile(scope: !8907, file: !8831, discriminator: 0)
!8907 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h88045799f044eca6E", scope: !1017, file: !1016, line: 1778, type: !1019, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8908)
!8908 = !{!8905}
!8909 = !DILocation(line: 327, column: 20, scope: !8906, inlinedAt: !8904)
!8910 = !DILocalVariable(name: "ptr", scope: !8911, file: !8831, line: 327, type: !1021, align: 8)
!8911 = !DILexicalBlockFile(scope: !8912, file: !8831, discriminator: 0)
!8912 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8913)
!8913 = !{!8910}
!8914 = !DILocation(line: 327, column: 20, scope: !8911, inlinedAt: !8915)
!8915 = !DILocation(line: 534, column: 18, scope: !8892, inlinedAt: !8849)
!8916 = !DILocation(line: 330, column: 2, scope: !8830)
!8917 = !DILocation(line: 328, column: 38, scope: !8838)
!8918 = !DILocation(line: 328, column: 19, scope: !8838)
!8919 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17h3279d76f6ee45f52E", scope: !358, file: !8831, line: 172, type: !8920, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8922)
!8920 = !DISubroutineType(types: !8921)
!8921 = !{!7350, !8881, !1463, !1244}
!8922 = !{!8923, !8924, !8925, !8926, !8928, !8930, !8932, !8947}
!8923 = !DILocalVariable(name: "self", arg: 1, scope: !8919, file: !8831, line: 172, type: !8881)
!8924 = !DILocalVariable(name: "layout", arg: 2, scope: !8919, file: !8831, line: 172, type: !1463)
!8925 = !DILocalVariable(name: "zeroed", arg: 3, scope: !8919, file: !8831, line: 172, type: !1244)
!8926 = !DILocalVariable(name: "size", scope: !8927, file: !8831, line: 176, type: !9, align: 8)
!8927 = distinct !DILexicalBlock(scope: !8919, file: !8831, line: 176, column: 13)
!8928 = !DILocalVariable(name: "raw_ptr", scope: !8929, file: !8831, line: 177, type: !1021, align: 8)
!8929 = distinct !DILexicalBlock(scope: !8927, file: !8831, line: 177, column: 17)
!8930 = !DILocalVariable(name: "ptr", scope: !8931, file: !8831, line: 178, type: !350, align: 8)
!8931 = distinct !DILexicalBlock(scope: !8929, file: !8831, line: 178, column: 17)
!8932 = !DILocalVariable(name: "residual", scope: !8933, file: !8831, line: 178, type: !8934, align: 1)
!8933 = distinct !DILexicalBlock(scope: !8929, file: !8831, line: 178, column: 66)
!8934 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !31, file: !2, align: 8, elements: !8935, templateParams: !28, identifier: "572d358f2a12b97961cfb71e38e53f04")
!8935 = !{!8936}
!8936 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8934, file: !2, align: 8, elements: !8937, templateParams: !28, identifier: "88663002e18d2fe1148d606c86c1d5ff")
!8937 = !{!8938, !8943}
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8936, file: !2, baseType: !8939, align: 8)
!8939 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8934, file: !2, align: 8, elements: !8940, templateParams: !8942, identifier: "be577e6defde51b29863ecc8d4e2e22a")
!8940 = !{!8941}
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8939, file: !2, baseType: !2645, align: 8)
!8942 = !{!2650, !7363}
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8936, file: !2, baseType: !8944, align: 8)
!8944 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8934, file: !2, align: 8, elements: !8945, templateParams: !8942, identifier: "1bce49b0456cc0581bfad8a74808f72")
!8945 = !{!8946}
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8944, file: !2, baseType: !7364, align: 8)
!8947 = !DILocalVariable(name: "val", scope: !8948, file: !8831, line: 178, type: !350, align: 8)
!8948 = distinct !DILexicalBlock(scope: !8929, file: !8831, line: 178, column: 27)
!8949 = !DILocation(line: 172, column: 19, scope: !8919)
!8950 = !DILocation(line: 172, column: 26, scope: !8919)
!8951 = !DILocation(line: 172, column: 42, scope: !8919)
!8952 = !DILocalVariable(name: "data", scope: !8953, file: !8831, line: 174, type: !350, align: 8)
!8953 = !DILexicalBlockFile(scope: !8954, file: !8831, discriminator: 0)
!8954 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0ce810460b964034E", scope: !7358, file: !1413, line: 487, type: !8955, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !8957)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!7358, !350, !9}
!8957 = !{!8952, !8958}
!8958 = !DILocalVariable(name: "len", scope: !8953, file: !8831, line: 174, type: !9, align: 8)
!8959 = !DILocation(line: 174, column: 21, scope: !8953, inlinedAt: !8960)
!8960 = !DILocation(line: 174, column: 21, scope: !8919)
!8961 = !DILocation(line: 177, column: 21, scope: !8929)
!8962 = !DILocalVariable(name: "layout", scope: !8963, file: !8831, line: 177, type: !1463, align: 8)
!8963 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17hdcc454be33393ae8E", scope: !359, file: !8831, line: 165, type: !8964, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8966)
!8964 = !DISubroutineType(types: !8965)
!8965 = !{!1021, !1463}
!8966 = !{!8962}
!8967 = !DILocation(line: 177, column: 43, scope: !8963, inlinedAt: !8968)
!8968 = !DILocation(line: 177, column: 43, scope: !8927)
!8969 = !DILocalVariable(name: "layout", scope: !8970, file: !8831, line: 177, type: !1463, align: 8)
!8970 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h12c9104be507b2c5E", scope: !359, file: !8831, line: 94, type: !8964, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !8971)
!8971 = !{!8969}
!8972 = !DILocation(line: 177, column: 73, scope: !8970, inlinedAt: !8973)
!8973 = !DILocation(line: 177, column: 73, scope: !8927)
!8974 = !DILocalVariable(name: "self", scope: !8975, file: !8831, line: 178, type: !8995, align: 8)
!8975 = !DILexicalBlockFile(scope: !8976, file: !8831, discriminator: 0)
!8976 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb0a1684c64984dfcE", scope: !2662, file: !1782, line: 2117, type: !8977, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9003, retainedNodes: !9009)
!8977 = !DISubroutineType(types: !8978)
!8978 = !{!8979, !8995}
!8979 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !2666, file: !2, size: 64, align: 64, elements: !8980, templateParams: !28, identifier: "7f8c65b25026163a60482c903b940372")
!8980 = !{!8981}
!8981 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8979, file: !2, size: 64, align: 64, elements: !8982, templateParams: !28, identifier: "a5a8c50ac5e6502472acbdda15ae7613", discriminator: !8994)
!8982 = !{!8983, !8990}
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !8981, file: !2, baseType: !8984, size: 64, align: 64)
!8984 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !8979, file: !2, size: 64, align: 64, elements: !8985, templateParams: !8987, identifier: "d2ac067f6845ce1e8a08fbb330350406")
!8985 = !{!8986}
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8984, file: !2, baseType: !350, size: 64, align: 64)
!8987 = !{!8988, !8989}
!8988 = !DITemplateTypeParameter(name: "B", type: !8934)
!8989 = !DITemplateTypeParameter(name: "C", type: !350)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !8981, file: !2, baseType: !8991, size: 64, align: 64, extraData: i64 0)
!8991 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !8979, file: !2, size: 64, align: 64, elements: !8992, templateParams: !8987, identifier: "81bddfbc89a9f0c5cc1c72e49b9ff534")
!8992 = !{!8993}
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8991, file: !2, baseType: !8934, align: 8)
!8994 = !DIDerivedType(tag: DW_TAG_member, scope: !8979, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!8995 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !31, file: !2, size: 64, align: 64, elements: !8996, templateParams: !28, identifier: "e71566aa277061ca8abc5a83ae5b9729")
!8996 = !{!8997}
!8997 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8995, file: !2, size: 64, align: 64, elements: !8998, templateParams: !28, identifier: "4a74327c407a883ea599f67b3290ba83", discriminator: !9008)
!8998 = !{!8999, !9004}
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8997, file: !2, baseType: !9000, size: 64, align: 64)
!9000 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8995, file: !2, size: 64, align: 64, elements: !9001, templateParams: !9003, identifier: "71a196ee6c186d8bac41245f54989593")
!9001 = !{!9002}
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9000, file: !2, baseType: !350, size: 64, align: 64)
!9003 = !{!4588, !7363}
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8997, file: !2, baseType: !9005, size: 64, align: 64, extraData: i64 0)
!9005 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8995, file: !2, size: 64, align: 64, elements: !9006, templateParams: !9003, identifier: "fc861602d066f2f1f51a40a0537349e6")
!9006 = !{!9007}
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9005, file: !2, baseType: !7364, align: 8)
!9008 = !DIDerivedType(tag: DW_TAG_member, scope: !8995, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!9009 = !{!8974, !9010, !9013}
!9010 = !DILocalVariable(name: "v", scope: !9011, file: !8831, line: 178, type: !350, align: 8)
!9011 = !DILexicalBlockFile(scope: !9012, file: !8831, discriminator: 0)
!9012 = distinct !DILexicalBlock(scope: !8976, file: !1782, line: 2119, column: 13)
!9013 = !DILocalVariable(name: "e", scope: !9014, file: !8831, line: 178, type: !7364, align: 1)
!9014 = !DILexicalBlockFile(scope: !9015, file: !8831, discriminator: 0)
!9015 = distinct !DILexicalBlock(scope: !8976, file: !1782, line: 2120, column: 13)
!9016 = !DILocation(line: 178, column: 27, scope: !8975, inlinedAt: !9017)
!9017 = !DILocation(line: 178, column: 27, scope: !8929)
!9018 = !DILocalVariable(name: "self", scope: !9019, file: !8831, line: 178, type: !4581, align: 8)
!9019 = !DILexicalBlockFile(scope: !9020, file: !8831, discriminator: 0)
!9020 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h1a209b2c25906e93E", scope: !4581, file: !1848, line: 1051, type: !9021, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9003, retainedNodes: !9023)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{!8995, !4581, !7364}
!9023 = !{!9018, !9024, !9025}
!9024 = !DILocalVariable(name: "err", scope: !9019, file: !8831, line: 178, type: !7364, align: 1)
!9025 = !DILocalVariable(name: "v", scope: !9026, file: !8831, line: 178, type: !350, align: 8)
!9026 = !DILexicalBlockFile(scope: !9027, file: !8831, discriminator: 0)
!9027 = distinct !DILexicalBlock(scope: !9020, file: !1848, line: 1056, column: 13)
!9028 = !DILocation(line: 178, column: 27, scope: !9019, inlinedAt: !9017)
!9029 = !DILocation(line: 178, column: 66, scope: !8933)
!9030 = !DILocalVariable(name: "residual", scope: !9031, file: !8831, line: 178, type: !8934, align: 1)
!9031 = !DILexicalBlockFile(scope: !9032, file: !8831, discriminator: 0)
!9032 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h70f8ddb153501273E", scope: !2709, file: !1782, line: 2132, type: !9033, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9039, retainedNodes: !9035)
!9033 = !DISubroutineType(types: !9034)
!9034 = !{!7350, !8934, !1109}
!9035 = !{!9030, !9036}
!9036 = !DILocalVariable(name: "e", scope: !9037, file: !8831, line: 178, type: !7364, align: 1)
!9037 = !DILexicalBlockFile(scope: !9038, file: !8831, discriminator: 0)
!9038 = distinct !DILexicalBlock(scope: !9032, file: !1782, line: 2134, column: 13)
!9039 = !{!7362, !7363, !9040}
!9040 = !DITemplateTypeParameter(name: "F", type: !7364)
!9041 = !DILocation(line: 178, column: 27, scope: !9031, inlinedAt: !9042)
!9042 = !DILocation(line: 178, column: 27, scope: !8933)
!9043 = !DILocalVariable(name: "self", scope: !9044, file: !8831, line: 174, type: !6453, align: 8)
!9044 = !DILexicalBlockFile(scope: !9045, file: !8831, discriminator: 0)
!9045 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9046)
!9046 = !{!9043}
!9047 = !DILocation(line: 174, column: 51, scope: !9044, inlinedAt: !9048)
!9048 = !DILocation(line: 131, column: 9, scope: !9049, inlinedAt: !9055)
!9049 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc873a2004b83507E", scope: !1463, file: !6221, line: 130, type: !9050, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9052)
!9050 = !DISubroutineType(types: !9051)
!9051 = !{!9, !7391}
!9052 = !{!9053}
!9053 = !DILocalVariable(name: "self", scope: !9054, file: !8831, line: 174, type: !7391, align: 8)
!9054 = !DILexicalBlockFile(scope: !9049, file: !8831, discriminator: 0)
!9055 = !DILocation(line: 205, column: 71, scope: !9056, inlinedAt: !9062)
!9056 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h01f6f56aa2eb88ffE", scope: !1463, file: !6221, line: 203, type: !9057, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9059)
!9057 = !DISubroutineType(types: !9058)
!9058 = !{!350, !7391}
!9059 = !{!9060}
!9060 = !DILocalVariable(name: "self", scope: !9061, file: !8831, line: 174, type: !7391, align: 8)
!9061 = !DILexicalBlockFile(scope: !9056, file: !8831, discriminator: 0)
!9062 = !DILocation(line: 174, column: 51, scope: !8919)
!9063 = !DILocalVariable(name: "self", scope: !9064, file: !8831, line: 174, type: !1469, align: 8)
!9064 = !DILexicalBlockFile(scope: !9065, file: !8831, discriminator: 0)
!9065 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9066)
!9066 = !{!9063}
!9067 = !DILocation(line: 174, column: 51, scope: !9064, inlinedAt: !9048)
!9068 = !DILocalVariable(name: "self", scope: !9069, file: !8831, line: 177, type: !6453, align: 8)
!9069 = !DILexicalBlockFile(scope: !9070, file: !8831, discriminator: 0)
!9070 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9071)
!9071 = !{!9068}
!9072 = !DILocation(line: 177, column: 43, scope: !9069, inlinedAt: !9073)
!9073 = !DILocation(line: 131, column: 9, scope: !9074, inlinedAt: !9078)
!9074 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc873a2004b83507E", scope: !1463, file: !6221, line: 130, type: !9050, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9075)
!9075 = !{!9076}
!9076 = !DILocalVariable(name: "self", scope: !9077, file: !8831, line: 177, type: !7391, align: 8)
!9077 = !DILexicalBlockFile(scope: !9074, file: !8831, discriminator: 0)
!9078 = !DILocation(line: 166, column: 49, scope: !8963, inlinedAt: !8968)
!9079 = !DILocalVariable(name: "self", scope: !9080, file: !8831, line: 177, type: !1469, align: 8)
!9080 = !DILexicalBlockFile(scope: !9081, file: !8831, discriminator: 0)
!9081 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9082)
!9082 = !{!9079}
!9083 = !DILocation(line: 177, column: 43, scope: !9080, inlinedAt: !9073)
!9084 = !DILocalVariable(name: "self", scope: !9085, file: !8831, line: 177, type: !6453, align: 8)
!9085 = !DILexicalBlockFile(scope: !9086, file: !8831, discriminator: 0)
!9086 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9087)
!9087 = !{!9084}
!9088 = !DILocation(line: 177, column: 73, scope: !9085, inlinedAt: !9089)
!9089 = !DILocation(line: 131, column: 9, scope: !9090, inlinedAt: !9094)
!9090 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc873a2004b83507E", scope: !1463, file: !6221, line: 130, type: !9050, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9091)
!9091 = !{!9092}
!9092 = !DILocalVariable(name: "self", scope: !9093, file: !8831, line: 177, type: !7391, align: 8)
!9093 = !DILexicalBlockFile(scope: !9090, file: !8831, discriminator: 0)
!9094 = !DILocation(line: 95, column: 42, scope: !8970, inlinedAt: !8973)
!9095 = !DILocalVariable(name: "self", scope: !9096, file: !8831, line: 177, type: !1469, align: 8)
!9096 = !DILexicalBlockFile(scope: !9097, file: !8831, discriminator: 0)
!9097 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9098)
!9098 = !{!9095}
!9099 = !DILocation(line: 177, column: 73, scope: !9096, inlinedAt: !9089)
!9100 = !DILocation(line: 178, column: 27, scope: !9014, inlinedAt: !9017)
!9101 = !DILocation(line: 178, column: 27, scope: !9037, inlinedAt: !9042)
!9102 = !DILocation(line: 173, column: 15, scope: !8919)
!9103 = !DILocalVariable(name: "self", scope: !9104, file: !8831, line: 173, type: !7391, align: 8)
!9104 = !DILexicalBlockFile(scope: !9105, file: !8831, discriminator: 0)
!9105 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9fadd9fb1273c9d1E", scope: !1463, file: !6221, line: 120, type: !9050, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9106)
!9106 = !{!9103}
!9107 = !DILocation(line: 173, column: 15, scope: !9104, inlinedAt: !9102)
!9108 = !DILocation(line: 173, column: 9, scope: !8919)
!9109 = !DILocation(line: 174, column: 51, scope: !9061, inlinedAt: !9062)
!9110 = !DILocation(line: 174, column: 51, scope: !9054, inlinedAt: !9055)
!9111 = !DILocalVariable(name: "n", scope: !9112, file: !8831, line: 174, type: !9, align: 8)
!9112 = !DILexicalBlockFile(scope: !9113, file: !8831, discriminator: 0)
!9113 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9114)
!9114 = !{!9111, !9115}
!9115 = !DILocalVariable(name: "runtime", scope: !9116, file: !8831, line: 174, type: !6477, align: 8)
!9116 = !DILexicalBlockFile(scope: !9117, file: !8831, discriminator: 0)
!9117 = distinct !DILexicalBlock(scope: !9113, file: !913, line: 2336, column: 13)
!9118 = !DILocation(line: 174, column: 51, scope: !9112, inlinedAt: !9119)
!9119 = !DILocation(line: 41, column: 18, scope: !9065, inlinedAt: !9048)
!9120 = !DILocalVariable(name: "addr", scope: !9121, file: !8831, line: 174, type: !9, align: 8)
!9121 = !DILexicalBlockFile(scope: !9122, file: !8831, discriminator: 0)
!9122 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h5059f06a7e3ae9ddE", scope: !53, file: !959, line: 569, type: !9123, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9125)
!9123 = !DISubroutineType(types: !9124)
!9124 = !{!1021, !9}
!9125 = !{!9120}
!9126 = !DILocation(line: 174, column: 51, scope: !9121, inlinedAt: !9127)
!9127 = !DILocation(line: 205, column: 41, scope: !9056, inlinedAt: !9062)
!9128 = !DILocalVariable(name: "ptr", scope: !9129, file: !8831, line: 174, type: !1021, align: 8)
!9129 = !DILexicalBlockFile(scope: !9130, file: !8831, discriminator: 0)
!9130 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9131)
!9131 = !{!9128}
!9132 = !DILocation(line: 174, column: 51, scope: !9129, inlinedAt: !9133)
!9133 = !DILocation(line: 205, column: 18, scope: !9056, inlinedAt: !9062)
!9134 = !DILocation(line: 176, column: 13, scope: !8919)
!9135 = !DILocation(line: 176, column: 13, scope: !8927)
!9136 = !DILocation(line: 177, column: 34, scope: !8927)
!9137 = !DILocation(line: 177, column: 79, scope: !8927)
!9138 = !DILocalVariable(name: "self", scope: !9139, file: !8831, line: 177, type: !7391, align: 8)
!9139 = !DILexicalBlockFile(scope: !9140, file: !8831, discriminator: 0)
!9140 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9fadd9fb1273c9d1E", scope: !1463, file: !6221, line: 120, type: !9050, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9141)
!9141 = !{!9138}
!9142 = !DILocation(line: 177, column: 73, scope: !9139, inlinedAt: !9143)
!9143 = !DILocation(line: 95, column: 27, scope: !8970, inlinedAt: !8973)
!9144 = !DILocation(line: 177, column: 73, scope: !9093, inlinedAt: !9094)
!9145 = !DILocalVariable(name: "n", scope: !9146, file: !8831, line: 177, type: !9, align: 8)
!9146 = !DILexicalBlockFile(scope: !9147, file: !8831, discriminator: 0)
!9147 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9148)
!9148 = !{!9145, !9149}
!9149 = !DILocalVariable(name: "runtime", scope: !9150, file: !8831, line: 177, type: !6477, align: 8)
!9150 = !DILexicalBlockFile(scope: !9151, file: !8831, discriminator: 0)
!9151 = distinct !DILexicalBlock(scope: !9147, file: !913, line: 2336, column: 13)
!9152 = !DILocation(line: 177, column: 73, scope: !9146, inlinedAt: !9153)
!9153 = !DILocation(line: 41, column: 18, scope: !9097, inlinedAt: !9089)
!9154 = !DILocation(line: 177, column: 56, scope: !8927)
!9155 = !DILocalVariable(name: "self", scope: !9156, file: !8831, line: 177, type: !7391, align: 8)
!9156 = !DILexicalBlockFile(scope: !9157, file: !8831, discriminator: 0)
!9157 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9fadd9fb1273c9d1E", scope: !1463, file: !6221, line: 120, type: !9050, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9158)
!9158 = !{!9155}
!9159 = !DILocation(line: 177, column: 43, scope: !9156, inlinedAt: !9160)
!9160 = !DILocation(line: 166, column: 34, scope: !8963, inlinedAt: !8968)
!9161 = !DILocation(line: 177, column: 43, scope: !9077, inlinedAt: !9078)
!9162 = !DILocalVariable(name: "n", scope: !9163, file: !8831, line: 177, type: !9, align: 8)
!9163 = !DILexicalBlockFile(scope: !9164, file: !8831, discriminator: 0)
!9164 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9165)
!9165 = !{!9162, !9166}
!9166 = !DILocalVariable(name: "runtime", scope: !9167, file: !8831, line: 177, type: !6477, align: 8)
!9167 = !DILexicalBlockFile(scope: !9168, file: !8831, discriminator: 0)
!9168 = distinct !DILexicalBlock(scope: !9164, file: !913, line: 2336, column: 13)
!9169 = !DILocation(line: 177, column: 43, scope: !9163, inlinedAt: !9170)
!9170 = !DILocation(line: 41, column: 18, scope: !9081, inlinedAt: !9073)
!9171 = !DILocation(line: 177, column: 31, scope: !8927)
!9172 = !DILocation(line: 178, column: 40, scope: !8929)
!9173 = !DILocation(line: 178, column: 27, scope: !9026, inlinedAt: !9017)
!9174 = !DILocation(line: 178, column: 27, scope: !9011, inlinedAt: !9017)
!9175 = !DILocation(line: 178, column: 27, scope: !8948)
!9176 = !DILocation(line: 178, column: 21, scope: !8931)
!9177 = !DILocation(line: 179, column: 50, scope: !8931)
!9178 = !DILocalVariable(name: "data", scope: !9179, file: !8831, line: 179, type: !350, align: 8)
!9179 = !DILexicalBlockFile(scope: !9180, file: !8831, discriminator: 0)
!9180 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0ce810460b964034E", scope: !7358, file: !1413, line: 487, type: !8955, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9181)
!9181 = !{!9178, !9182}
!9182 = !DILocalVariable(name: "len", scope: !9179, file: !8831, line: 179, type: !9, align: 8)
!9183 = !DILocation(line: 179, column: 20, scope: !9179, inlinedAt: !9184)
!9184 = !DILocation(line: 179, column: 20, scope: !8931)
!9185 = !DILocation(line: 179, column: 55, scope: !8931)
!9186 = !DILocalVariable(name: "self", scope: !9187, file: !8831, line: 179, type: !350, align: 8)
!9187 = !DILexicalBlockFile(scope: !9188, file: !8831, discriminator: 0)
!9188 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9189)
!9189 = !{!9186}
!9190 = !DILocation(line: 179, column: 20, scope: !9187, inlinedAt: !9191)
!9191 = !DILocation(line: 489, column: 70, scope: !9180, inlinedAt: !9184)
!9192 = !DILocalVariable(name: "data", scope: !9193, file: !8831, line: 179, type: !1021, align: 8)
!9193 = !DILexicalBlockFile(scope: !9194, file: !8831, discriminator: 0)
!9194 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hbea3f0d34aed7cbeE", scope: !53, file: !959, line: 727, type: !1046, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9195)
!9195 = !{!9192, !9196}
!9196 = !DILocalVariable(name: "len", scope: !9193, file: !8831, line: 179, type: !9, align: 8)
!9197 = !DILocation(line: 179, column: 20, scope: !9193, inlinedAt: !9198)
!9198 = !DILocation(line: 489, column: 38, scope: !9180, inlinedAt: !9184)
!9199 = !DILocalVariable(name: "self", scope: !9200, file: !8831, line: 179, type: !1021, align: 8)
!9200 = !DILexicalBlockFile(scope: !9201, file: !8831, discriminator: 0)
!9201 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h91b2ca1930163954E", scope: !1027, file: !1016, line: 45, type: !1056, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !973, retainedNodes: !9202)
!9202 = !{!9199}
!9203 = !DILocation(line: 179, column: 20, scope: !9200, inlinedAt: !9204)
!9204 = !DILocation(line: 728, column: 24, scope: !9194, inlinedAt: !9198)
!9205 = !DILocalVariable(name: "data_address", scope: !9206, file: !8831, line: 179, type: !1058, align: 8)
!9206 = !DILexicalBlockFile(scope: !9207, file: !8831, discriminator: 0)
!9207 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h13ff56bac2312bbbE", scope: !981, file: !980, line: 127, type: !1065, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9208)
!9208 = !{!9205, !9209}
!9209 = !DILocalVariable(name: "metadata", scope: !9206, file: !8831, line: 179, type: !9, align: 8)
!9210 = !DILocation(line: 179, column: 20, scope: !9206, inlinedAt: !9211)
!9211 = !DILocation(line: 728, column: 5, scope: !9194, inlinedAt: !9198)
!9212 = !DILocalVariable(name: "ptr", scope: !9213, file: !8831, line: 179, type: !992, align: 8)
!9213 = !DILexicalBlockFile(scope: !9214, file: !8831, discriminator: 0)
!9214 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6b23342f6cbcc2a3E", scope: !7358, file: !1413, line: 196, type: !9215, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9217)
!9215 = !DISubroutineType(types: !9216)
!9216 = !{!7358, !992}
!9217 = !{!9212}
!9218 = !DILocation(line: 179, column: 20, scope: !9213, inlinedAt: !9219)
!9219 = !DILocation(line: 489, column: 18, scope: !9180, inlinedAt: !9184)
!9220 = !DILocation(line: 179, column: 17, scope: !8931)
!9221 = !DILocation(line: 180, column: 13, scope: !8919)
!9222 = !DILocation(line: 182, column: 6, scope: !8919)
!9223 = !DILocalVariable(name: "self", scope: !9224, file: !8831, line: 174, type: !350, align: 8)
!9224 = !DILexicalBlockFile(scope: !9225, file: !8831, discriminator: 0)
!9225 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9226)
!9226 = !{!9223}
!9227 = !DILocation(line: 174, column: 21, scope: !9224, inlinedAt: !9228)
!9228 = !DILocation(line: 489, column: 70, scope: !8954, inlinedAt: !8960)
!9229 = !DILocalVariable(name: "data", scope: !9230, file: !8831, line: 174, type: !1021, align: 8)
!9230 = !DILexicalBlockFile(scope: !9231, file: !8831, discriminator: 0)
!9231 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hbea3f0d34aed7cbeE", scope: !53, file: !959, line: 727, type: !1046, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9232)
!9232 = !{!9229, !9233}
!9233 = !DILocalVariable(name: "len", scope: !9230, file: !8831, line: 174, type: !9, align: 8)
!9234 = !DILocation(line: 174, column: 21, scope: !9230, inlinedAt: !9235)
!9235 = !DILocation(line: 489, column: 38, scope: !8954, inlinedAt: !8960)
!9236 = !DILocalVariable(name: "self", scope: !9237, file: !8831, line: 174, type: !1021, align: 8)
!9237 = !DILexicalBlockFile(scope: !9238, file: !8831, discriminator: 0)
!9238 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h91b2ca1930163954E", scope: !1027, file: !1016, line: 45, type: !1056, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !973, retainedNodes: !9239)
!9239 = !{!9236}
!9240 = !DILocation(line: 174, column: 21, scope: !9237, inlinedAt: !9241)
!9241 = !DILocation(line: 728, column: 24, scope: !9231, inlinedAt: !9235)
!9242 = !DILocalVariable(name: "data_address", scope: !9243, file: !8831, line: 174, type: !1058, align: 8)
!9243 = !DILexicalBlockFile(scope: !9244, file: !8831, discriminator: 0)
!9244 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h13ff56bac2312bbbE", scope: !981, file: !980, line: 127, type: !1065, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9245)
!9245 = !{!9242, !9246}
!9246 = !DILocalVariable(name: "metadata", scope: !9243, file: !8831, line: 174, type: !9, align: 8)
!9247 = !DILocation(line: 174, column: 21, scope: !9243, inlinedAt: !9248)
!9248 = !DILocation(line: 728, column: 5, scope: !9231, inlinedAt: !9235)
!9249 = !DILocalVariable(name: "ptr", scope: !9250, file: !8831, line: 174, type: !992, align: 8)
!9250 = !DILexicalBlockFile(scope: !9251, file: !8831, discriminator: 0)
!9251 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6b23342f6cbcc2a3E", scope: !7358, file: !1413, line: 196, type: !9215, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9252)
!9252 = !{!9249}
!9253 = !DILocation(line: 174, column: 21, scope: !9250, inlinedAt: !9254)
!9254 = !DILocation(line: 489, column: 18, scope: !8954, inlinedAt: !8960)
!9255 = !DILocation(line: 174, column: 18, scope: !8919)
!9256 = !DILocation(line: 174, column: 72, scope: !8919)
!9257 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h3923d4caf9789d9bE", scope: !358, file: !8831, line: 186, type: !9258, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9260)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!7350, !8881, !350, !1463, !1463, !1244}
!9260 = !{!9261, !9262, !9263, !9264, !9265, !9266, !9268, !9269, !9271, !9273, !9275, !9277, !9279, !9281, !9283, !9285}
!9261 = !DILocalVariable(name: "self", arg: 1, scope: !9257, file: !8831, line: 187, type: !8881)
!9262 = !DILocalVariable(name: "ptr", arg: 2, scope: !9257, file: !8831, line: 188, type: !350)
!9263 = !DILocalVariable(name: "old_layout", arg: 3, scope: !9257, file: !8831, line: 189, type: !1463)
!9264 = !DILocalVariable(name: "new_layout", arg: 4, scope: !9257, file: !8831, line: 190, type: !1463)
!9265 = !DILocalVariable(name: "zeroed", arg: 5, scope: !9257, file: !8831, line: 191, type: !1244)
!9266 = !DILocalVariable(name: "old_size", scope: !9267, file: !8831, line: 203, type: !9, align: 8)
!9267 = distinct !DILexicalBlock(scope: !9257, file: !8831, line: 203, column: 13)
!9268 = !DILocalVariable(name: "old_size", scope: !9267, file: !8831, line: 203, type: !918, align: 8)
!9269 = !DILocalVariable(name: "new_size", scope: !9270, file: !8831, line: 204, type: !9, align: 8)
!9270 = distinct !DILexicalBlock(scope: !9267, file: !8831, line: 204, column: 17)
!9271 = !DILocalVariable(name: "raw_ptr", scope: !9272, file: !8831, line: 209, type: !1021, align: 8)
!9272 = distinct !DILexicalBlock(scope: !9270, file: !8831, line: 209, column: 17)
!9273 = !DILocalVariable(name: "ptr", scope: !9274, file: !8831, line: 210, type: !350, align: 8)
!9274 = distinct !DILexicalBlock(scope: !9272, file: !8831, line: 210, column: 17)
!9275 = !DILocalVariable(name: "residual", scope: !9276, file: !8831, line: 210, type: !8934, align: 1)
!9276 = distinct !DILexicalBlock(scope: !9272, file: !8831, line: 210, column: 66)
!9277 = !DILocalVariable(name: "val", scope: !9278, file: !8831, line: 210, type: !350, align: 8)
!9278 = distinct !DILexicalBlock(scope: !9272, file: !8831, line: 210, column: 27)
!9279 = !DILocalVariable(name: "old_size", scope: !9280, file: !8831, line: 222, type: !9, align: 8)
!9280 = distinct !DILexicalBlock(scope: !9257, file: !8831, line: 222, column: 13)
!9281 = !DILocalVariable(name: "new_ptr", scope: !9282, file: !8831, line: 223, type: !7358, align: 8)
!9282 = distinct !DILexicalBlock(scope: !9280, file: !8831, line: 223, column: 17)
!9283 = !DILocalVariable(name: "residual", scope: !9284, file: !8831, line: 223, type: !8934, align: 1)
!9284 = distinct !DILexicalBlock(scope: !9280, file: !8831, line: 223, column: 66)
!9285 = !DILocalVariable(name: "val", scope: !9286, file: !8831, line: 223, type: !7358, align: 8)
!9286 = distinct !DILexicalBlock(scope: !9280, file: !8831, line: 223, column: 31)
!9287 = !DILocation(line: 187, column: 9, scope: !9257)
!9288 = !DILocation(line: 188, column: 9, scope: !9257)
!9289 = !DILocation(line: 189, column: 9, scope: !9257)
!9290 = !DILocation(line: 190, column: 9, scope: !9257)
!9291 = !DILocation(line: 191, column: 9, scope: !9257)
!9292 = !DILocalVariable(name: "layout", scope: !9293, file: !8831, line: 209, type: !1463, align: 8)
!9293 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17h34e2e9a385eff7bcE", scope: !359, file: !8831, line: 131, type: !9294, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9296)
!9294 = !DISubroutineType(types: !9295)
!9295 = !{!1021, !1021, !1463, !9}
!9296 = !{!9297, !9292, !9298}
!9297 = !DILocalVariable(name: "ptr", scope: !9293, file: !8831, line: 209, type: !1021, align: 8)
!9298 = !DILocalVariable(name: "new_size", scope: !9293, file: !8831, line: 209, type: !9, align: 8)
!9299 = !DILocation(line: 209, column: 31, scope: !9293, inlinedAt: !9300)
!9300 = !DILocation(line: 209, column: 31, scope: !9270)
!9301 = !DILocalVariable(name: "self", scope: !9302, file: !8831, line: 210, type: !8995, align: 8)
!9302 = !DILexicalBlockFile(scope: !9303, file: !8831, discriminator: 0)
!9303 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb0a1684c64984dfcE", scope: !2662, file: !1782, line: 2117, type: !8977, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9003, retainedNodes: !9304)
!9304 = !{!9301, !9305, !9308}
!9305 = !DILocalVariable(name: "v", scope: !9306, file: !8831, line: 210, type: !350, align: 8)
!9306 = !DILexicalBlockFile(scope: !9307, file: !8831, discriminator: 0)
!9307 = distinct !DILexicalBlock(scope: !9303, file: !1782, line: 2119, column: 13)
!9308 = !DILocalVariable(name: "e", scope: !9309, file: !8831, line: 210, type: !7364, align: 1)
!9309 = !DILexicalBlockFile(scope: !9310, file: !8831, discriminator: 0)
!9310 = distinct !DILexicalBlock(scope: !9303, file: !1782, line: 2120, column: 13)
!9311 = !DILocation(line: 210, column: 27, scope: !9302, inlinedAt: !9312)
!9312 = !DILocation(line: 210, column: 27, scope: !9272)
!9313 = !DILocalVariable(name: "self", scope: !9314, file: !8831, line: 210, type: !4581, align: 8)
!9314 = !DILexicalBlockFile(scope: !9315, file: !8831, discriminator: 0)
!9315 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h1a209b2c25906e93E", scope: !4581, file: !1848, line: 1051, type: !9021, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9003, retainedNodes: !9316)
!9316 = !{!9313, !9317, !9318}
!9317 = !DILocalVariable(name: "err", scope: !9314, file: !8831, line: 210, type: !7364, align: 1)
!9318 = !DILocalVariable(name: "v", scope: !9319, file: !8831, line: 210, type: !350, align: 8)
!9319 = !DILexicalBlockFile(scope: !9320, file: !8831, discriminator: 0)
!9320 = distinct !DILexicalBlock(scope: !9315, file: !1848, line: 1056, column: 13)
!9321 = !DILocation(line: 210, column: 27, scope: !9314, inlinedAt: !9312)
!9322 = !DILocation(line: 210, column: 66, scope: !9276)
!9323 = !DILocalVariable(name: "residual", scope: !9324, file: !8831, line: 210, type: !8934, align: 1)
!9324 = !DILexicalBlockFile(scope: !9325, file: !8831, discriminator: 0)
!9325 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h70f8ddb153501273E", scope: !2709, file: !1782, line: 2132, type: !9033, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9039, retainedNodes: !9326)
!9326 = !{!9323, !9327}
!9327 = !DILocalVariable(name: "e", scope: !9328, file: !8831, line: 210, type: !7364, align: 1)
!9328 = !DILexicalBlockFile(scope: !9329, file: !8831, discriminator: 0)
!9329 = distinct !DILexicalBlock(scope: !9325, file: !1782, line: 2134, column: 13)
!9330 = !DILocation(line: 210, column: 27, scope: !9324, inlinedAt: !9331)
!9331 = !DILocation(line: 210, column: 27, scope: !9276)
!9332 = !DILocalVariable(name: "self", scope: !9333, file: !8831, line: 223, type: !7350, align: 8)
!9333 = !DILexicalBlockFile(scope: !9334, file: !8831, discriminator: 0)
!9334 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5b7cd3d4222e40e9E", scope: !2662, file: !1782, line: 2117, type: !9335, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7361, retainedNodes: !9352)
!9335 = !DISubroutineType(types: !9336)
!9336 = !{!9337, !7350}
!9337 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !2666, file: !2, size: 128, align: 64, elements: !9338, templateParams: !28, identifier: "742106b60153cc66c591376c04358a32")
!9338 = !{!9339}
!9339 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9337, file: !2, size: 128, align: 64, elements: !9340, templateParams: !28, identifier: "51e560db12d8945267902f7758889ab2", discriminator: !9351)
!9340 = !{!9341, !9347}
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !9339, file: !2, baseType: !9342, size: 128, align: 64)
!9342 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !9337, file: !2, size: 128, align: 64, elements: !9343, templateParams: !9345, identifier: "7a7db6f08dd8181ffbc0406581832086")
!9343 = !{!9344}
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9342, file: !2, baseType: !7358, size: 128, align: 64)
!9345 = !{!8988, !9346}
!9346 = !DITemplateTypeParameter(name: "C", type: !7358)
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !9339, file: !2, baseType: !9348, size: 128, align: 64, extraData: i64 0)
!9348 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !9337, file: !2, size: 128, align: 64, elements: !9349, templateParams: !9345, identifier: "520e4a70aaf12c465e959335c5fb5ede")
!9349 = !{!9350}
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9348, file: !2, baseType: !8934, align: 8)
!9351 = !DIDerivedType(tag: DW_TAG_member, scope: !9337, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!9352 = !{!9332, !9353, !9356}
!9353 = !DILocalVariable(name: "v", scope: !9354, file: !8831, line: 223, type: !7358, align: 8)
!9354 = !DILexicalBlockFile(scope: !9355, file: !8831, discriminator: 0)
!9355 = distinct !DILexicalBlock(scope: !9334, file: !1782, line: 2119, column: 13)
!9356 = !DILocalVariable(name: "e", scope: !9357, file: !8831, line: 223, type: !7364, align: 1)
!9357 = !DILexicalBlockFile(scope: !9358, file: !8831, discriminator: 0)
!9358 = distinct !DILexicalBlock(scope: !9334, file: !1782, line: 2120, column: 13)
!9359 = !DILocation(line: 223, column: 31, scope: !9333, inlinedAt: !9360)
!9360 = !DILocation(line: 223, column: 31, scope: !9280)
!9361 = !DILocation(line: 223, column: 66, scope: !9284)
!9362 = !DILocalVariable(name: "residual", scope: !9363, file: !8831, line: 223, type: !8934, align: 1)
!9363 = !DILexicalBlockFile(scope: !9364, file: !8831, discriminator: 0)
!9364 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h70f8ddb153501273E", scope: !2709, file: !1782, line: 2132, type: !9033, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9039, retainedNodes: !9365)
!9365 = !{!9362, !9366}
!9366 = !DILocalVariable(name: "e", scope: !9367, file: !8831, line: 223, type: !7364, align: 1)
!9367 = !DILexicalBlockFile(scope: !9368, file: !8831, discriminator: 0)
!9368 = distinct !DILexicalBlock(scope: !9364, file: !1782, line: 2134, column: 13)
!9369 = !DILocation(line: 223, column: 31, scope: !9363, inlinedAt: !9370)
!9370 = !DILocation(line: 223, column: 31, scope: !9284)
!9371 = !DILocalVariable(name: "self", scope: !9372, file: !8831, line: 203, type: !6453, align: 8)
!9372 = !DILexicalBlockFile(scope: !9373, file: !8831, discriminator: 0)
!9373 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9374)
!9374 = !{!9371}
!9375 = !DILocation(line: 203, column: 25, scope: !9372, inlinedAt: !9376)
!9376 = !DILocation(line: 131, column: 9, scope: !9377, inlinedAt: !9381)
!9377 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc873a2004b83507E", scope: !1463, file: !6221, line: 130, type: !9050, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9378)
!9378 = !{!9379}
!9379 = !DILocalVariable(name: "self", scope: !9380, file: !8831, line: 203, type: !7391, align: 8)
!9380 = !DILexicalBlockFile(scope: !9377, file: !8831, discriminator: 0)
!9381 = !DILocation(line: 203, column: 25, scope: !9257)
!9382 = !DILocalVariable(name: "self", scope: !9383, file: !8831, line: 203, type: !1469, align: 8)
!9383 = !DILexicalBlockFile(scope: !9384, file: !8831, discriminator: 0)
!9384 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9385)
!9385 = !{!9382}
!9386 = !DILocation(line: 203, column: 25, scope: !9383, inlinedAt: !9376)
!9387 = !DILocalVariable(name: "self", scope: !9388, file: !8831, line: 203, type: !6453, align: 8)
!9388 = !DILexicalBlockFile(scope: !9389, file: !8831, discriminator: 0)
!9389 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9390)
!9390 = !{!9387}
!9391 = !DILocation(line: 203, column: 47, scope: !9388, inlinedAt: !9392)
!9392 = !DILocation(line: 131, column: 9, scope: !9393, inlinedAt: !9397)
!9393 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc873a2004b83507E", scope: !1463, file: !6221, line: 130, type: !9050, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9394)
!9394 = !{!9395}
!9395 = !DILocalVariable(name: "self", scope: !9396, file: !8831, line: 203, type: !7391, align: 8)
!9396 = !DILexicalBlockFile(scope: !9393, file: !8831, discriminator: 0)
!9397 = !DILocation(line: 203, column: 47, scope: !9257)
!9398 = !DILocalVariable(name: "self", scope: !9399, file: !8831, line: 203, type: !1469, align: 8)
!9399 = !DILexicalBlockFile(scope: !9400, file: !8831, discriminator: 0)
!9400 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9401)
!9401 = !{!9398}
!9402 = !DILocation(line: 203, column: 47, scope: !9399, inlinedAt: !9392)
!9403 = !DILocalVariable(name: "self", scope: !9404, file: !8831, line: 209, type: !6453, align: 8)
!9404 = !DILexicalBlockFile(scope: !9405, file: !8831, discriminator: 0)
!9405 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9406)
!9406 = !{!9403}
!9407 = !DILocation(line: 209, column: 31, scope: !9404, inlinedAt: !9408)
!9408 = !DILocation(line: 131, column: 9, scope: !9409, inlinedAt: !9413)
!9409 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc873a2004b83507E", scope: !1463, file: !6221, line: 130, type: !9050, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9410)
!9410 = !{!9411}
!9411 = !DILocalVariable(name: "self", scope: !9412, file: !8831, line: 209, type: !7391, align: 8)
!9412 = !DILexicalBlockFile(scope: !9409, file: !8831, discriminator: 0)
!9413 = !DILocation(line: 132, column: 49, scope: !9293, inlinedAt: !9300)
!9414 = !DILocalVariable(name: "self", scope: !9415, file: !8831, line: 209, type: !1469, align: 8)
!9415 = !DILexicalBlockFile(scope: !9416, file: !8831, discriminator: 0)
!9416 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9417)
!9417 = !{!9414}
!9418 = !DILocation(line: 209, column: 31, scope: !9415, inlinedAt: !9408)
!9419 = !DILocation(line: 210, column: 27, scope: !9309, inlinedAt: !9312)
!9420 = !DILocation(line: 210, column: 27, scope: !9328, inlinedAt: !9331)
!9421 = !DILocation(line: 223, column: 31, scope: !9357, inlinedAt: !9360)
!9422 = !DILocation(line: 223, column: 31, scope: !9367, inlinedAt: !9370)
!9423 = !DILocalVariable(name: "self", scope: !9424, file: !8831, line: 224, type: !350, align: 8)
!9424 = !DILexicalBlockFile(scope: !9425, file: !8831, discriminator: 0)
!9425 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9426)
!9426 = !{!9423}
!9427 = !DILocation(line: 224, column: 56, scope: !9424, inlinedAt: !9428)
!9428 = !DILocation(line: 553, column: 9, scope: !9429, inlinedAt: !9433)
!9429 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h79a9b38acdab3809E", scope: !7358, file: !1413, line: 552, type: !8851, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9430)
!9430 = !{!9431}
!9431 = !DILocalVariable(name: "self", scope: !9432, file: !8831, line: 224, type: !7358, align: 8)
!9432 = !DILexicalBlockFile(scope: !9429, file: !8831, discriminator: 0)
!9433 = !DILocation(line: 224, column: 56, scope: !9282)
!9434 = !DILocalVariable(name: "runtime", scope: !9435, file: !8831, line: 224, type: !9446, align: 8)
!9435 = !DILexicalBlockFile(scope: !9436, file: !8831, discriminator: 0)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !913, line: 2336, column: 13)
!9437 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h7c9be6ab69ebf582E", scope: !9438, file: !913, line: 2458, type: !9439, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9441)
!9438 = !DINamespace(name: "intrinsics", scope: !32)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{null, !353, !1021, !9}
!9441 = !{!9442, !9444, !9445, !9434}
!9442 = !DILocalVariable(name: "src", scope: !9443, file: !8831, line: 224, type: !353, align: 8)
!9443 = !DILexicalBlockFile(scope: !9437, file: !8831, discriminator: 0)
!9444 = !DILocalVariable(name: "dst", scope: !9443, file: !8831, line: 224, type: !1021, align: 8)
!9445 = !DILocalVariable(name: "count", scope: !9443, file: !8831, line: 224, type: !9, align: 8)
!9446 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !9447, file: !2, size: 192, align: 64, elements: !9448, templateParams: !28, identifier: "fb5d8c4998ddcc045cba0da9a8307400")
!9447 = !DINamespace(name: "copy_nonoverlapping", scope: !9438)
!9448 = !{!9449, !9451, !9453}
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !9446, file: !2, baseType: !9450, size: 64, align: 64)
!9450 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !353, size: 64, align: 64, dwarfAddressSpace: 0)
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !9446, file: !2, baseType: !9452, size: 64, align: 64, offset: 64)
!9452 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut u8", baseType: !1021, size: 64, align: 64, dwarfAddressSpace: 0)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !9446, file: !2, baseType: !918, size: 64, align: 64, offset: 128)
!9454 = !DILocation(line: 224, column: 17, scope: !9435, inlinedAt: !9455)
!9455 = !DILocation(line: 224, column: 17, scope: !9282)
!9456 = !DILocation(line: 198, column: 15, scope: !9257)
!9457 = !DILocalVariable(name: "self", scope: !9458, file: !8831, line: 198, type: !7391, align: 8)
!9458 = !DILexicalBlockFile(scope: !9459, file: !8831, discriminator: 0)
!9459 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9fadd9fb1273c9d1E", scope: !1463, file: !6221, line: 120, type: !9050, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9460)
!9460 = !{!9457}
!9461 = !DILocation(line: 198, column: 15, scope: !9458, inlinedAt: !9456)
!9462 = !DILocation(line: 198, column: 9, scope: !9257)
!9463 = !DILocation(line: 199, column: 34, scope: !9257)
!9464 = !DILocation(line: 199, column: 18, scope: !9257)
!9465 = !DILocation(line: 203, column: 25, scope: !9380, inlinedAt: !9381)
!9466 = !DILocalVariable(name: "n", scope: !9467, file: !8831, line: 203, type: !9, align: 8)
!9467 = !DILexicalBlockFile(scope: !9468, file: !8831, discriminator: 0)
!9468 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9469)
!9469 = !{!9466, !9470}
!9470 = !DILocalVariable(name: "runtime", scope: !9471, file: !8831, line: 203, type: !6477, align: 8)
!9471 = !DILexicalBlockFile(scope: !9472, file: !8831, discriminator: 0)
!9472 = distinct !DILexicalBlock(scope: !9468, file: !913, line: 2336, column: 13)
!9473 = !DILocation(line: 203, column: 25, scope: !9467, inlinedAt: !9474)
!9474 = !DILocation(line: 41, column: 18, scope: !9384, inlinedAt: !9376)
!9475 = !DILocation(line: 203, column: 47, scope: !9396, inlinedAt: !9397)
!9476 = !DILocalVariable(name: "n", scope: !9477, file: !8831, line: 203, type: !9, align: 8)
!9477 = !DILexicalBlockFile(scope: !9478, file: !8831, discriminator: 0)
!9478 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9479)
!9479 = !{!9476, !9480}
!9480 = !DILocalVariable(name: "runtime", scope: !9481, file: !8831, line: 203, type: !6477, align: 8)
!9481 = !DILexicalBlockFile(scope: !9482, file: !8831, discriminator: 0)
!9482 = distinct !DILexicalBlock(scope: !9478, file: !913, line: 2336, column: 13)
!9483 = !DILocation(line: 203, column: 47, scope: !9477, inlinedAt: !9484)
!9484 = !DILocation(line: 41, column: 18, scope: !9400, inlinedAt: !9392)
!9485 = !DILocation(line: 222, column: 13, scope: !9257)
!9486 = !DILocation(line: 222, column: 13, scope: !9280)
!9487 = !DILocation(line: 223, column: 47, scope: !9280)
!9488 = !DILocation(line: 203, column: 13, scope: !9257)
!9489 = !DILocation(line: 203, column: 13, scope: !9267)
!9490 = !DILocation(line: 204, column: 32, scope: !9267)
!9491 = !DILocalVariable(name: "self", scope: !9492, file: !8831, line: 204, type: !7391, align: 8)
!9492 = !DILexicalBlockFile(scope: !9493, file: !8831, discriminator: 0)
!9493 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9fadd9fb1273c9d1E", scope: !1463, file: !6221, line: 120, type: !9050, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9494)
!9494 = !{!9491}
!9495 = !DILocation(line: 204, column: 32, scope: !9492, inlinedAt: !9490)
!9496 = !DILocation(line: 204, column: 21, scope: !9270)
!9497 = !DILocation(line: 207, column: 48, scope: !9270)
!9498 = !DILocalVariable(name: "self", scope: !9499, file: !8831, line: 207, type: !7391, align: 8)
!9499 = !DILexicalBlockFile(scope: !9500, file: !8831, discriminator: 0)
!9500 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9fadd9fb1273c9d1E", scope: !1463, file: !6221, line: 120, type: !9050, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9501)
!9501 = !{!9498}
!9502 = !DILocation(line: 207, column: 48, scope: !9499, inlinedAt: !9497)
!9503 = !DILocation(line: 207, column: 36, scope: !9270)
!9504 = !DILocation(line: 207, column: 17, scope: !9270)
!9505 = !DILocation(line: 209, column: 39, scope: !9270)
!9506 = !DILocalVariable(name: "self", scope: !9507, file: !8831, line: 209, type: !350, align: 8)
!9507 = !DILexicalBlockFile(scope: !9508, file: !8831, discriminator: 0)
!9508 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9509)
!9509 = !{!9506}
!9510 = !DILocation(line: 209, column: 39, scope: !9507, inlinedAt: !9505)
!9511 = !DILocation(line: 209, column: 53, scope: !9270)
!9512 = !DILocation(line: 209, column: 65, scope: !9270)
!9513 = !DILocalVariable(name: "self", scope: !9514, file: !8831, line: 209, type: !7391, align: 8)
!9514 = !DILexicalBlockFile(scope: !9515, file: !8831, discriminator: 0)
!9515 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9fadd9fb1273c9d1E", scope: !1463, file: !6221, line: 120, type: !9050, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9516)
!9516 = !{!9513}
!9517 = !DILocation(line: 209, column: 31, scope: !9514, inlinedAt: !9518)
!9518 = !DILocation(line: 132, column: 34, scope: !9293, inlinedAt: !9300)
!9519 = !DILocation(line: 209, column: 31, scope: !9412, inlinedAt: !9413)
!9520 = !DILocalVariable(name: "n", scope: !9521, file: !8831, line: 209, type: !9, align: 8)
!9521 = !DILexicalBlockFile(scope: !9522, file: !8831, discriminator: 0)
!9522 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9523)
!9523 = !{!9520, !9524}
!9524 = !DILocalVariable(name: "runtime", scope: !9525, file: !8831, line: 209, type: !6477, align: 8)
!9525 = !DILexicalBlockFile(scope: !9526, file: !8831, discriminator: 0)
!9526 = distinct !DILexicalBlock(scope: !9522, file: !913, line: 2336, column: 13)
!9527 = !DILocation(line: 209, column: 31, scope: !9521, inlinedAt: !9528)
!9528 = !DILocation(line: 41, column: 18, scope: !9416, inlinedAt: !9408)
!9529 = !DILocation(line: 209, column: 21, scope: !9272)
!9530 = !DILocation(line: 210, column: 27, scope: !9319, inlinedAt: !9312)
!9531 = !DILocation(line: 210, column: 27, scope: !9306, inlinedAt: !9312)
!9532 = !DILocation(line: 210, column: 27, scope: !9278)
!9533 = !DILocation(line: 210, column: 21, scope: !9274)
!9534 = !DILocation(line: 211, column: 20, scope: !9274)
!9535 = !DILocation(line: 1, column: 1, scope: !9536)
!9536 = !DILexicalBlockFile(scope: !9257, file: !1610, discriminator: 0)
!9537 = !DILocation(line: 229, column: 6, scope: !9257)
!9538 = !DILocation(line: 214, column: 50, scope: !9274)
!9539 = !DILocalVariable(name: "data", scope: !9540, file: !8831, line: 214, type: !350, align: 8)
!9540 = !DILexicalBlockFile(scope: !9541, file: !8831, discriminator: 0)
!9541 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h0ce810460b964034E", scope: !7358, file: !1413, line: 487, type: !8955, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9542)
!9542 = !{!9539, !9543}
!9543 = !DILocalVariable(name: "len", scope: !9540, file: !8831, line: 214, type: !9, align: 8)
!9544 = !DILocation(line: 214, column: 20, scope: !9540, inlinedAt: !9545)
!9545 = !DILocation(line: 214, column: 20, scope: !9274)
!9546 = !DILocation(line: 214, column: 55, scope: !9274)
!9547 = !DILocalVariable(name: "self", scope: !9548, file: !8831, line: 214, type: !350, align: 8)
!9548 = !DILexicalBlockFile(scope: !9549, file: !8831, discriminator: 0)
!9549 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9550)
!9550 = !{!9547}
!9551 = !DILocation(line: 214, column: 20, scope: !9548, inlinedAt: !9552)
!9552 = !DILocation(line: 489, column: 70, scope: !9541, inlinedAt: !9545)
!9553 = !DILocalVariable(name: "data", scope: !9554, file: !8831, line: 214, type: !1021, align: 8)
!9554 = !DILexicalBlockFile(scope: !9555, file: !8831, discriminator: 0)
!9555 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hbea3f0d34aed7cbeE", scope: !53, file: !959, line: 727, type: !1046, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9556)
!9556 = !{!9553, !9557}
!9557 = !DILocalVariable(name: "len", scope: !9554, file: !8831, line: 214, type: !9, align: 8)
!9558 = !DILocation(line: 214, column: 20, scope: !9554, inlinedAt: !9559)
!9559 = !DILocation(line: 489, column: 38, scope: !9541, inlinedAt: !9545)
!9560 = !DILocalVariable(name: "self", scope: !9561, file: !8831, line: 214, type: !1021, align: 8)
!9561 = !DILexicalBlockFile(scope: !9562, file: !8831, discriminator: 0)
!9562 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h91b2ca1930163954E", scope: !1027, file: !1016, line: 45, type: !1056, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !973, retainedNodes: !9563)
!9563 = !{!9560}
!9564 = !DILocation(line: 214, column: 20, scope: !9561, inlinedAt: !9565)
!9565 = !DILocation(line: 728, column: 24, scope: !9555, inlinedAt: !9559)
!9566 = !DILocalVariable(name: "data_address", scope: !9567, file: !8831, line: 214, type: !1058, align: 8)
!9567 = !DILexicalBlockFile(scope: !9568, file: !8831, discriminator: 0)
!9568 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h13ff56bac2312bbbE", scope: !981, file: !980, line: 127, type: !1065, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9569)
!9569 = !{!9566, !9570}
!9570 = !DILocalVariable(name: "metadata", scope: !9567, file: !8831, line: 214, type: !9, align: 8)
!9571 = !DILocation(line: 214, column: 20, scope: !9567, inlinedAt: !9572)
!9572 = !DILocation(line: 728, column: 5, scope: !9555, inlinedAt: !9559)
!9573 = !DILocalVariable(name: "ptr", scope: !9574, file: !8831, line: 214, type: !992, align: 8)
!9574 = !DILexicalBlockFile(scope: !9575, file: !8831, discriminator: 0)
!9575 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h6b23342f6cbcc2a3E", scope: !7358, file: !1413, line: 196, type: !9215, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9576)
!9576 = !{!9573}
!9577 = !DILocation(line: 214, column: 20, scope: !9574, inlinedAt: !9578)
!9578 = !DILocation(line: 489, column: 18, scope: !9541, inlinedAt: !9545)
!9579 = !DILocation(line: 214, column: 17, scope: !9274)
!9580 = !DILocation(line: 215, column: 13, scope: !9257)
!9581 = !DILocation(line: 212, column: 21, scope: !9274)
!9582 = !DILocalVariable(name: "self", scope: !9583, file: !8831, line: 212, type: !1021, align: 8)
!9583 = !DILexicalBlockFile(scope: !9584, file: !8831, discriminator: 0)
!9584 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h24d8ee515aac51bfE", scope: !1027, file: !1016, line: 985, type: !1028, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9585)
!9585 = !{!9582, !9586}
!9586 = !DILocalVariable(name: "count", scope: !9583, file: !8831, line: 212, type: !9, align: 8)
!9587 = !DILocation(line: 212, column: 21, scope: !9583, inlinedAt: !9581)
!9588 = !DILocation(line: 212, column: 33, scope: !9274)
!9589 = !DILocalVariable(name: "self", scope: !9590, file: !8831, line: 212, type: !1021, align: 8)
!9590 = !DILexicalBlockFile(scope: !9591, file: !8831, discriminator: 0)
!9591 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h740b8c86c1df61cfE", scope: !1027, file: !1016, line: 465, type: !1037, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9592)
!9592 = !{!9589, !9593}
!9593 = !DILocalVariable(name: "count", scope: !9590, file: !8831, line: 212, type: !951, align: 8)
!9594 = !DILocation(line: 212, column: 21, scope: !9590, inlinedAt: !9595)
!9595 = !DILocation(line: 990, column: 18, scope: !9584, inlinedAt: !9581)
!9596 = !DILocalVariable(name: "self", scope: !9597, file: !8831, line: 212, type: !1021, align: 8)
!9597 = !DILexicalBlockFile(scope: !9598, file: !8831, discriminator: 0)
!9598 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h133b2c5a2763d1f3E", scope: !1027, file: !1016, line: 1441, type: !9599, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9601)
!9599 = !DISubroutineType(types: !9600)
!9600 = !{null, !1021, !78, !9}
!9601 = !{!9596, !9602, !9603}
!9602 = !DILocalVariable(name: "val", scope: !9597, file: !8831, line: 212, type: !78, align: 1)
!9603 = !DILocalVariable(name: "count", scope: !9597, file: !8831, line: 212, type: !9, align: 8)
!9604 = !DILocation(line: 212, column: 21, scope: !9597, inlinedAt: !9581)
!9605 = !DILocation(line: 212, column: 58, scope: !9274)
!9606 = !DILocalVariable(name: "dst", scope: !9607, file: !8831, line: 212, type: !1021, align: 8)
!9607 = !DILexicalBlockFile(scope: !9608, file: !8831, discriminator: 0)
!9608 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17hcb3681b4885c4cc6E", scope: !9438, file: !913, line: 2613, type: !9599, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9609)
!9609 = !{!9606, !9610, !9611, !9612}
!9610 = !DILocalVariable(name: "val", scope: !9607, file: !8831, line: 212, type: !78, align: 1)
!9611 = !DILocalVariable(name: "count", scope: !9607, file: !8831, line: 212, type: !9, align: 8)
!9612 = !DILocalVariable(name: "runtime", scope: !9613, file: !8831, line: 212, type: !9615, align: 8)
!9613 = !DILexicalBlockFile(scope: !9614, file: !8831, discriminator: 0)
!9614 = distinct !DILexicalBlock(scope: !9608, file: !913, line: 2336, column: 13)
!9615 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !9616, file: !2, size: 64, align: 64, elements: !9617, templateParams: !28, identifier: "6002da543977e8e7318dc1c6e6a51af")
!9616 = !DINamespace(name: "write_bytes", scope: !9438)
!9617 = !{!9618}
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !9615, file: !2, baseType: !9452, size: 64, align: 64)
!9619 = !DILocation(line: 212, column: 21, scope: !9607, inlinedAt: !9620)
!9620 = !DILocation(line: 1446, column: 18, scope: !9598, inlinedAt: !9581)
!9621 = !DILocation(line: 211, column: 17, scope: !9274)
!9622 = !DILocation(line: 223, column: 31, scope: !9354, inlinedAt: !9360)
!9623 = !DILocation(line: 223, column: 31, scope: !9286)
!9624 = !DILocation(line: 223, column: 21, scope: !9282)
!9625 = !DILocation(line: 224, column: 42, scope: !9282)
!9626 = !DILocalVariable(name: "self", scope: !9627, file: !8831, line: 224, type: !350, align: 8)
!9627 = !DILexicalBlockFile(scope: !9628, file: !8831, discriminator: 0)
!9628 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9629)
!9629 = !{!9626}
!9630 = !DILocation(line: 224, column: 42, scope: !9627, inlinedAt: !9625)
!9631 = !DILocation(line: 224, column: 17, scope: !9443, inlinedAt: !9455)
!9632 = !DILocation(line: 224, column: 56, scope: !9432, inlinedAt: !9433)
!9633 = !DILocalVariable(name: "self", scope: !9634, file: !8831, line: 224, type: !7358, align: 8)
!9634 = !DILexicalBlockFile(scope: !9635, file: !8831, discriminator: 0)
!9635 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h006553e9d87f9a0dE", scope: !7358, file: !1413, line: 532, type: !8893, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9636)
!9636 = !{!9633}
!9637 = !DILocation(line: 224, column: 56, scope: !9634, inlinedAt: !9428)
!9638 = !DILocalVariable(name: "self", scope: !9639, file: !8831, line: 224, type: !7358, align: 8)
!9639 = !DILexicalBlockFile(scope: !9640, file: !8831, discriminator: 0)
!9640 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc08d8add39eb4c7E", scope: !7358, file: !1413, line: 330, type: !8900, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9641)
!9641 = !{!9638}
!9642 = !DILocation(line: 224, column: 56, scope: !9639, inlinedAt: !9643)
!9643 = !DILocation(line: 534, column: 41, scope: !9635, inlinedAt: !9428)
!9644 = !DILocalVariable(name: "self", scope: !9645, file: !8831, line: 224, type: !992, align: 8)
!9645 = !DILexicalBlockFile(scope: !9646, file: !8831, discriminator: 0)
!9646 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h88045799f044eca6E", scope: !1017, file: !1016, line: 1778, type: !1019, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9647)
!9647 = !{!9644}
!9648 = !DILocation(line: 224, column: 56, scope: !9645, inlinedAt: !9643)
!9649 = !DILocalVariable(name: "ptr", scope: !9650, file: !8831, line: 224, type: !1021, align: 8)
!9650 = !DILexicalBlockFile(scope: !9651, file: !8831, discriminator: 0)
!9651 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9652)
!9652 = !{!9649}
!9653 = !DILocation(line: 224, column: 56, scope: !9650, inlinedAt: !9654)
!9654 = !DILocation(line: 534, column: 18, scope: !9635, inlinedAt: !9428)
!9655 = !DILocation(line: 224, column: 78, scope: !9282)
!9656 = !DILocation(line: 225, column: 38, scope: !9282)
!9657 = !DILocation(line: 225, column: 17, scope: !9282)
!9658 = !DILocation(line: 226, column: 17, scope: !9282)
!9659 = !DILocation(line: 227, column: 13, scope: !9257)
!9660 = !DILocation(line: 199, column: 52, scope: !9257)
!9661 = distinct !DISubprogram(name: "box_free<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17h8cf202bc5c4056e9E", scope: !359, file: !8831, line: 340, type: !9662, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !360, retainedNodes: !9669)
!9662 = !DISubroutineType(types: !9663)
!9663 = !{null, !9664, !358}
!9664 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8]>", scope: !347, file: !2, size: 128, align: 64, elements: !9665, templateParams: !332, identifier: "1d2099a8a4c8cae7160ee7e4073563b1")
!9665 = !{!9666, !9667}
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !9664, file: !2, baseType: !7358, size: 128, align: 64)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !9664, file: !2, baseType: !9668, align: 8)
!9668 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8]>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !332, identifier: "a99a42a9ed7127b2f458504cb45b588")
!9669 = !{!9670, !9671, !9672, !9674, !9676}
!9670 = !DILocalVariable(name: "ptr", arg: 1, scope: !9661, file: !8831, line: 341, type: !9664)
!9671 = !DILocalVariable(name: "alloc", arg: 2, scope: !9661, file: !8831, line: 342, type: !358)
!9672 = !DILocalVariable(name: "size", scope: !9673, file: !8831, line: 345, type: !9, align: 8)
!9673 = distinct !DILexicalBlock(scope: !9661, file: !8831, line: 345, column: 9)
!9674 = !DILocalVariable(name: "align", scope: !9675, file: !8831, line: 346, type: !9, align: 8)
!9675 = distinct !DILexicalBlock(scope: !9673, file: !8831, line: 346, column: 9)
!9676 = !DILocalVariable(name: "layout", scope: !9677, file: !8831, line: 347, type: !1463, align: 8)
!9677 = distinct !DILexicalBlock(scope: !9675, file: !8831, line: 347, column: 9)
!9678 = !DILocation(line: 341, column: 5, scope: !9661)
!9679 = !DILocation(line: 342, column: 5, scope: !9661)
!9680 = !DILocation(line: 347, column: 13, scope: !9677)
!9681 = !DILocalVariable(name: "unique", scope: !9682, file: !8831, line: 348, type: !346, align: 8)
!9682 = !DILexicalBlockFile(scope: !9683, file: !8831, discriminator: 0)
!9683 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h19dbefea06dd2371E", scope: !1414, file: !1413, line: 770, type: !1415, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9684)
!9684 = !{!9681}
!9685 = !DILocation(line: 348, column: 26, scope: !9682, inlinedAt: !9686)
!9686 = !DILocation(line: 348, column: 26, scope: !9677)
!9687 = !DILocalVariable(name: "pointer", scope: !9688, file: !8831, line: 348, type: !350, align: 8)
!9688 = !DILexicalBlockFile(scope: !9689, file: !8831, discriminator: 0)
!9689 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha394f9b77cfbb700E", scope: !9690, file: !1424, line: 190, type: !9691, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9693)
!9690 = !DINamespace(name: "{impl#11}", scope: !347)
!9691 = !DISubroutineType(types: !9692)
!9692 = !{!346, !350}
!9693 = !{!9687}
!9694 = !DILocation(line: 348, column: 37, scope: !9688, inlinedAt: !9695)
!9695 = !DILocation(line: 137, column: 9, scope: !9696, inlinedAt: !9703)
!9696 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17he7cb70386c78778eE", scope: !9664, file: !1424, line: 136, type: !9697, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9702, retainedNodes: !9699)
!9697 = !DISubroutineType(types: !9698)
!9698 = !{!346, !9664}
!9699 = !{!9700}
!9700 = !DILocalVariable(name: "self", scope: !9701, file: !8831, line: 348, type: !9664, align: 8)
!9701 = !DILexicalBlockFile(scope: !9696, file: !8831, discriminator: 0)
!9702 = !{!333, !1958}
!9703 = !DILocation(line: 348, column: 37, scope: !9677)
!9704 = !DILocation(line: 345, column: 32, scope: !9661)
!9705 = !DILocalVariable(name: "self", scope: !9706, file: !8831, line: 345, type: !9710, align: 8)
!9706 = !DILexicalBlockFile(scope: !9707, file: !8831, discriminator: 0)
!9707 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf78ec4af65f03cbeE", scope: !9664, file: !1424, line: 114, type: !9708, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9711)
!9708 = !DISubroutineType(types: !9709)
!9709 = !{!1083, !9710}
!9710 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<[u8]>", baseType: !9664, size: 64, align: 64, dwarfAddressSpace: 0)
!9711 = !{!9705}
!9712 = !DILocation(line: 345, column: 32, scope: !9706, inlinedAt: !9704)
!9713 = !DILocalVariable(name: "self", scope: !9714, file: !8831, line: 345, type: !9718, align: 8)
!9714 = !DILexicalBlockFile(scope: !9715, file: !8831, discriminator: 0)
!9715 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h29670772d69aa5e5E", scope: !7358, file: !1413, line: 378, type: !9716, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9719)
!9716 = !DISubroutineType(types: !9717)
!9717 = !{!1083, !9718}
!9718 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u8]>", baseType: !7358, size: 64, align: 64, dwarfAddressSpace: 0)
!9719 = !{!9713}
!9720 = !DILocation(line: 345, column: 32, scope: !9714, inlinedAt: !9721)
!9721 = !DILocation(line: 117, column: 18, scope: !9707, inlinedAt: !9704)
!9722 = !DILocalVariable(name: "self", scope: !9723, file: !8831, line: 345, type: !7358, align: 8)
!9723 = !DILexicalBlockFile(scope: !9724, file: !8831, discriminator: 0)
!9724 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc08d8add39eb4c7E", scope: !7358, file: !1413, line: 330, type: !8900, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9725)
!9725 = !{!9722}
!9726 = !DILocation(line: 345, column: 32, scope: !9723, inlinedAt: !9727)
!9727 = !DILocation(line: 381, column: 20, scope: !9715, inlinedAt: !9721)
!9728 = !DILocation(line: 345, column: 20, scope: !9661)
!9729 = !DILocation(line: 345, column: 13, scope: !9673)
!9730 = !DILocation(line: 346, column: 38, scope: !9673)
!9731 = !DILocalVariable(name: "self", scope: !9732, file: !8831, line: 346, type: !9710, align: 8)
!9732 = !DILexicalBlockFile(scope: !9733, file: !8831, discriminator: 0)
!9733 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hf78ec4af65f03cbeE", scope: !9664, file: !1424, line: 114, type: !9708, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9734)
!9734 = !{!9731}
!9735 = !DILocation(line: 346, column: 38, scope: !9732, inlinedAt: !9730)
!9736 = !DILocalVariable(name: "self", scope: !9737, file: !8831, line: 346, type: !9718, align: 8)
!9737 = !DILexicalBlockFile(scope: !9738, file: !8831, discriminator: 0)
!9738 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h29670772d69aa5e5E", scope: !7358, file: !1413, line: 378, type: !9716, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9739)
!9739 = !{!9736}
!9740 = !DILocation(line: 346, column: 38, scope: !9737, inlinedAt: !9741)
!9741 = !DILocation(line: 117, column: 18, scope: !9733, inlinedAt: !9730)
!9742 = !DILocalVariable(name: "self", scope: !9743, file: !8831, line: 346, type: !7358, align: 8)
!9743 = !DILexicalBlockFile(scope: !9744, file: !8831, discriminator: 0)
!9744 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc08d8add39eb4c7E", scope: !7358, file: !1413, line: 330, type: !8900, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9745)
!9745 = !{!9742}
!9746 = !DILocation(line: 346, column: 38, scope: !9743, inlinedAt: !9747)
!9747 = !DILocation(line: 381, column: 20, scope: !9738, inlinedAt: !9741)
!9748 = !DILocation(line: 346, column: 21, scope: !9673)
!9749 = !DILocation(line: 346, column: 13, scope: !9675)
!9750 = !DILocation(line: 347, column: 56, scope: !9675)
!9751 = !DILocalVariable(name: "size", scope: !9752, file: !8831, line: 347, type: !9, align: 8)
!9752 = !DILexicalBlockFile(scope: !9753, file: !8831, discriminator: 0)
!9753 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hd0530bfa33ab0837E", scope: !1463, file: !6221, line: 110, type: !6254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9754)
!9754 = !{!9751, !9755}
!9755 = !DILocalVariable(name: "align", scope: !9752, file: !8831, line: 347, type: !9, align: 8)
!9756 = !DILocation(line: 347, column: 22, scope: !9752, inlinedAt: !9757)
!9757 = !DILocation(line: 347, column: 22, scope: !9675)
!9758 = !DILocation(line: 347, column: 62, scope: !9675)
!9759 = !DILocalVariable(name: "align", scope: !9760, file: !8831, line: 347, type: !9, align: 8)
!9760 = !DILexicalBlockFile(scope: !9761, file: !8831, discriminator: 0)
!9761 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9762)
!9762 = !{!9759, !9763}
!9763 = !DILocalVariable(name: "runtime", scope: !9764, file: !8831, line: 347, type: !6271, align: 8)
!9764 = !DILexicalBlockFile(scope: !9765, file: !8831, discriminator: 0)
!9765 = distinct !DILexicalBlock(scope: !9761, file: !913, line: 2336, column: 13)
!9766 = !DILocation(line: 347, column: 22, scope: !9760, inlinedAt: !9767)
!9767 = !DILocation(line: 112, column: 40, scope: !9753, inlinedAt: !9757)
!9768 = !DILocation(line: 348, column: 37, scope: !9701, inlinedAt: !9703)
!9769 = !DILocalVariable(name: "self", scope: !9770, file: !8831, line: 348, type: !7358, align: 8)
!9770 = !DILexicalBlockFile(scope: !9771, file: !8831, discriminator: 0)
!9771 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h05d0aa1fb8e6e69fE", scope: !7358, file: !1413, line: 453, type: !8893, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9702, retainedNodes: !9772)
!9772 = !{!9769}
!9773 = !DILocation(line: 348, column: 37, scope: !9770, inlinedAt: !9774)
!9774 = !DILocation(line: 137, column: 22, scope: !9696, inlinedAt: !9703)
!9775 = !DILocalVariable(name: "self", scope: !9776, file: !8831, line: 348, type: !7358, align: 8)
!9776 = !DILexicalBlockFile(scope: !9777, file: !8831, discriminator: 0)
!9777 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc08d8add39eb4c7E", scope: !7358, file: !1413, line: 330, type: !8900, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9778)
!9778 = !{!9775}
!9779 = !DILocation(line: 348, column: 37, scope: !9776, inlinedAt: !9780)
!9780 = !DILocation(line: 455, column: 41, scope: !9771, inlinedAt: !9774)
!9781 = !DILocalVariable(name: "ptr", scope: !9782, file: !8831, line: 348, type: !1021, align: 8)
!9782 = !DILexicalBlockFile(scope: !9783, file: !8831, discriminator: 0)
!9783 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9784)
!9784 = !{!9781}
!9785 = !DILocation(line: 348, column: 37, scope: !9782, inlinedAt: !9786)
!9786 = !DILocation(line: 455, column: 18, scope: !9771, inlinedAt: !9774)
!9787 = !DILocalVariable(name: "self", scope: !9788, file: !8831, line: 348, type: !346, align: 8)
!9788 = !DILexicalBlockFile(scope: !9789, file: !8831, discriminator: 0)
!9789 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8bb8bd839a83b1c5E", scope: !346, file: !1424, line: 103, type: !1425, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9790)
!9790 = !{!9787}
!9791 = !DILocation(line: 348, column: 26, scope: !9788, inlinedAt: !9792)
!9792 = !DILocation(line: 773, column: 41, scope: !9683, inlinedAt: !9686)
!9793 = !DILocalVariable(name: "self", scope: !9794, file: !8831, line: 348, type: !350, align: 8)
!9794 = !DILexicalBlockFile(scope: !9795, file: !8831, discriminator: 0)
!9795 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9796)
!9796 = !{!9793}
!9797 = !DILocation(line: 348, column: 26, scope: !9794, inlinedAt: !9798)
!9798 = !DILocation(line: 104, column: 9, scope: !9789, inlinedAt: !9792)
!9799 = !DILocalVariable(name: "ptr", scope: !9800, file: !8831, line: 348, type: !1021, align: 8)
!9800 = !DILexicalBlockFile(scope: !9801, file: !8831, discriminator: 0)
!9801 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9802)
!9802 = !{!9799}
!9803 = !DILocation(line: 348, column: 26, scope: !9800, inlinedAt: !9804)
!9804 = !DILocation(line: 773, column: 18, scope: !9683, inlinedAt: !9686)
!9805 = !DILocation(line: 348, column: 50, scope: !9677)
!9806 = !DILocation(line: 348, column: 9, scope: !9677)
!9807 = !DILocation(line: 350, column: 1, scope: !9661)
!9808 = !DILocation(line: 340, column: 1, scope: !9661)
!9809 = !DILocation(line: 350, column: 2, scope: !9661)
!9810 = distinct !DISubprogram(name: "box_free<std::io::error::Custom, alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17h9d07eb48ae969750E", scope: !359, file: !8831, line: 340, type: !9811, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9831, retainedNodes: !9822)
!9811 = !DISubroutineType(types: !9812)
!9812 = !{null, !9813, !358}
!9813 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<std::io::error::Custom>", scope: !347, file: !2, size: 64, align: 64, elements: !9814, templateParams: !4327, identifier: "ed2218c422fd8d1b5d8ef5cc9a32b804")
!9814 = !{!9815, !9820}
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !9813, file: !2, baseType: !9816, size: 64, align: 64)
!9816 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<std::io::error::Custom>", scope: !52, file: !2, size: 64, align: 64, elements: !9817, templateParams: !4327, identifier: "25ba20889606cb13c9fe774102412775")
!9817 = !{!9818}
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !9816, file: !2, baseType: !9819, size: 64, align: 64)
!9819 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const std::io::error::Custom", baseType: !74, size: 64, align: 64, dwarfAddressSpace: 0)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !9813, file: !2, baseType: !9821, align: 8)
!9821 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<std::io::error::Custom>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !4327, identifier: "7657d0e04d24756529c60def68783989")
!9822 = !{!9823, !9824, !9825, !9827, !9829}
!9823 = !DILocalVariable(name: "ptr", arg: 1, scope: !9810, file: !8831, line: 341, type: !9813)
!9824 = !DILocalVariable(name: "alloc", arg: 2, scope: !9810, file: !8831, line: 342, type: !358)
!9825 = !DILocalVariable(name: "size", scope: !9826, file: !8831, line: 345, type: !9, align: 8)
!9826 = distinct !DILexicalBlock(scope: !9810, file: !8831, line: 345, column: 9)
!9827 = !DILocalVariable(name: "align", scope: !9828, file: !8831, line: 346, type: !9, align: 8)
!9828 = distinct !DILexicalBlock(scope: !9826, file: !8831, line: 346, column: 9)
!9829 = !DILocalVariable(name: "layout", scope: !9830, file: !8831, line: 347, type: !1463, align: 8)
!9830 = distinct !DILexicalBlock(scope: !9828, file: !8831, line: 347, column: 9)
!9831 = !{!4328, !361}
!9832 = !DILocation(line: 341, column: 5, scope: !9810)
!9833 = !DILocation(line: 342, column: 5, scope: !9810)
!9834 = !DILocation(line: 347, column: 13, scope: !9830)
!9835 = !DILocalVariable(name: "unique", scope: !9836, file: !8831, line: 348, type: !346, align: 8)
!9836 = !DILexicalBlockFile(scope: !9837, file: !8831, discriminator: 0)
!9837 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h19dbefea06dd2371E", scope: !1414, file: !1413, line: 770, type: !1415, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9838)
!9838 = !{!9835}
!9839 = !DILocation(line: 348, column: 26, scope: !9836, inlinedAt: !9840)
!9840 = !DILocation(line: 348, column: 26, scope: !9830)
!9841 = !DILocalVariable(name: "pointer", scope: !9842, file: !8831, line: 348, type: !350, align: 8)
!9842 = !DILexicalBlockFile(scope: !9843, file: !8831, discriminator: 0)
!9843 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha394f9b77cfbb700E", scope: !9690, file: !1424, line: 190, type: !9691, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9844)
!9844 = !{!9841}
!9845 = !DILocation(line: 348, column: 37, scope: !9842, inlinedAt: !9846)
!9846 = !DILocation(line: 137, column: 9, scope: !9847, inlinedAt: !9854)
!9847 = distinct !DISubprogram(name: "cast<std::io::error::Custom, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h5316abbeeb109656E", scope: !9813, file: !1424, line: 136, type: !9848, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9853, retainedNodes: !9850)
!9848 = !DISubroutineType(types: !9849)
!9849 = !{!346, !9813}
!9850 = !{!9851}
!9851 = !DILocalVariable(name: "self", scope: !9852, file: !8831, line: 348, type: !9813, align: 8)
!9852 = !DILexicalBlockFile(scope: !9847, file: !8831, discriminator: 0)
!9853 = !{!4328, !1958}
!9854 = !DILocation(line: 348, column: 37, scope: !9830)
!9855 = !DILocation(line: 345, column: 32, scope: !9810)
!9856 = !DILocalVariable(name: "self", scope: !9857, file: !8831, line: 345, type: !9861, align: 8)
!9857 = !DILexicalBlockFile(scope: !9858, file: !8831, discriminator: 0)
!9858 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h2c15720296cd4ecbE", scope: !9813, file: !1424, line: 114, type: !9859, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !9862)
!9859 = !DISubroutineType(types: !9860)
!9860 = !{!2007, !9861}
!9861 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<std::io::error::Custom>", baseType: !9813, size: 64, align: 64, dwarfAddressSpace: 0)
!9862 = !{!9856}
!9863 = !DILocation(line: 345, column: 32, scope: !9857, inlinedAt: !9855)
!9864 = !DILocalVariable(name: "self", scope: !9865, file: !8831, line: 345, type: !9869, align: 8)
!9865 = !DILexicalBlockFile(scope: !9866, file: !8831, discriminator: 0)
!9866 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h534bfd56450dd62aE", scope: !9816, file: !1413, line: 378, type: !9867, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !9870)
!9867 = !DISubroutineType(types: !9868)
!9868 = !{!2007, !9869}
!9869 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<std::io::error::Custom>", baseType: !9816, size: 64, align: 64, dwarfAddressSpace: 0)
!9870 = !{!9864}
!9871 = !DILocation(line: 345, column: 32, scope: !9865, inlinedAt: !9872)
!9872 = !DILocation(line: 117, column: 18, scope: !9858, inlinedAt: !9855)
!9873 = !DILocalVariable(name: "self", scope: !9874, file: !8831, line: 345, type: !9816, align: 8)
!9874 = !DILexicalBlockFile(scope: !9875, file: !8831, discriminator: 0)
!9875 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hccf6790cd1f4a2dfE", scope: !9816, file: !1413, line: 330, type: !9876, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !9878)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{!1838, !9816}
!9878 = !{!9873}
!9879 = !DILocation(line: 345, column: 32, scope: !9874, inlinedAt: !9880)
!9880 = !DILocation(line: 381, column: 20, scope: !9866, inlinedAt: !9872)
!9881 = !DILocation(line: 345, column: 20, scope: !9810)
!9882 = !DILocation(line: 345, column: 13, scope: !9826)
!9883 = !DILocation(line: 346, column: 38, scope: !9826)
!9884 = !DILocalVariable(name: "self", scope: !9885, file: !8831, line: 346, type: !9861, align: 8)
!9885 = !DILexicalBlockFile(scope: !9886, file: !8831, discriminator: 0)
!9886 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h2c15720296cd4ecbE", scope: !9813, file: !1424, line: 114, type: !9859, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !9887)
!9887 = !{!9884}
!9888 = !DILocation(line: 346, column: 38, scope: !9885, inlinedAt: !9883)
!9889 = !DILocalVariable(name: "self", scope: !9890, file: !8831, line: 346, type: !9869, align: 8)
!9890 = !DILexicalBlockFile(scope: !9891, file: !8831, discriminator: 0)
!9891 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h534bfd56450dd62aE", scope: !9816, file: !1413, line: 378, type: !9867, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !9892)
!9892 = !{!9889}
!9893 = !DILocation(line: 346, column: 38, scope: !9890, inlinedAt: !9894)
!9894 = !DILocation(line: 117, column: 18, scope: !9886, inlinedAt: !9883)
!9895 = !DILocalVariable(name: "self", scope: !9896, file: !8831, line: 346, type: !9816, align: 8)
!9896 = !DILexicalBlockFile(scope: !9897, file: !8831, discriminator: 0)
!9897 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hccf6790cd1f4a2dfE", scope: !9816, file: !1413, line: 330, type: !9876, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !9898)
!9898 = !{!9895}
!9899 = !DILocation(line: 346, column: 38, scope: !9896, inlinedAt: !9900)
!9900 = !DILocation(line: 381, column: 20, scope: !9891, inlinedAt: !9894)
!9901 = !DILocation(line: 346, column: 21, scope: !9826)
!9902 = !DILocation(line: 346, column: 13, scope: !9828)
!9903 = !DILocation(line: 347, column: 56, scope: !9828)
!9904 = !DILocalVariable(name: "size", scope: !9905, file: !8831, line: 347, type: !9, align: 8)
!9905 = !DILexicalBlockFile(scope: !9906, file: !8831, discriminator: 0)
!9906 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hd0530bfa33ab0837E", scope: !1463, file: !6221, line: 110, type: !6254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9907)
!9907 = !{!9904, !9908}
!9908 = !DILocalVariable(name: "align", scope: !9905, file: !8831, line: 347, type: !9, align: 8)
!9909 = !DILocation(line: 347, column: 22, scope: !9905, inlinedAt: !9910)
!9910 = !DILocation(line: 347, column: 22, scope: !9828)
!9911 = !DILocation(line: 347, column: 62, scope: !9828)
!9912 = !DILocalVariable(name: "align", scope: !9913, file: !8831, line: 347, type: !9, align: 8)
!9913 = !DILexicalBlockFile(scope: !9914, file: !8831, discriminator: 0)
!9914 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !9915)
!9915 = !{!9912, !9916}
!9916 = !DILocalVariable(name: "runtime", scope: !9917, file: !8831, line: 347, type: !6271, align: 8)
!9917 = !DILexicalBlockFile(scope: !9918, file: !8831, discriminator: 0)
!9918 = distinct !DILexicalBlock(scope: !9914, file: !913, line: 2336, column: 13)
!9919 = !DILocation(line: 347, column: 22, scope: !9913, inlinedAt: !9920)
!9920 = !DILocation(line: 112, column: 40, scope: !9906, inlinedAt: !9910)
!9921 = !DILocation(line: 348, column: 37, scope: !9852, inlinedAt: !9854)
!9922 = !DILocalVariable(name: "self", scope: !9923, file: !8831, line: 348, type: !9816, align: 8)
!9923 = !DILexicalBlockFile(scope: !9924, file: !8831, discriminator: 0)
!9924 = distinct !DISubprogram(name: "cast<std::io::error::Custom, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3b9d37427c2f6125E", scope: !9816, file: !1413, line: 453, type: !9925, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9853, retainedNodes: !9927)
!9925 = !DISubroutineType(types: !9926)
!9926 = !{!350, !9816}
!9927 = !{!9922}
!9928 = !DILocation(line: 348, column: 37, scope: !9923, inlinedAt: !9929)
!9929 = !DILocation(line: 137, column: 22, scope: !9847, inlinedAt: !9854)
!9930 = !DILocalVariable(name: "self", scope: !9931, file: !8831, line: 348, type: !9816, align: 8)
!9931 = !DILexicalBlockFile(scope: !9932, file: !8831, discriminator: 0)
!9932 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hccf6790cd1f4a2dfE", scope: !9816, file: !1413, line: 330, type: !9876, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !9933)
!9933 = !{!9930}
!9934 = !DILocation(line: 348, column: 37, scope: !9931, inlinedAt: !9935)
!9935 = !DILocation(line: 455, column: 41, scope: !9924, inlinedAt: !9929)
!9936 = !DILocalVariable(name: "ptr", scope: !9937, file: !8831, line: 348, type: !1021, align: 8)
!9937 = !DILexicalBlockFile(scope: !9938, file: !8831, discriminator: 0)
!9938 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9939)
!9939 = !{!9936}
!9940 = !DILocation(line: 348, column: 37, scope: !9937, inlinedAt: !9941)
!9941 = !DILocation(line: 455, column: 18, scope: !9924, inlinedAt: !9929)
!9942 = !DILocalVariable(name: "self", scope: !9943, file: !8831, line: 348, type: !346, align: 8)
!9943 = !DILexicalBlockFile(scope: !9944, file: !8831, discriminator: 0)
!9944 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8bb8bd839a83b1c5E", scope: !346, file: !1424, line: 103, type: !1425, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9945)
!9945 = !{!9942}
!9946 = !DILocation(line: 348, column: 26, scope: !9943, inlinedAt: !9947)
!9947 = !DILocation(line: 773, column: 41, scope: !9837, inlinedAt: !9840)
!9948 = !DILocalVariable(name: "self", scope: !9949, file: !8831, line: 348, type: !350, align: 8)
!9949 = !DILexicalBlockFile(scope: !9950, file: !8831, discriminator: 0)
!9950 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9951)
!9951 = !{!9948}
!9952 = !DILocation(line: 348, column: 26, scope: !9949, inlinedAt: !9953)
!9953 = !DILocation(line: 104, column: 9, scope: !9944, inlinedAt: !9947)
!9954 = !DILocalVariable(name: "ptr", scope: !9955, file: !8831, line: 348, type: !1021, align: 8)
!9955 = !DILexicalBlockFile(scope: !9956, file: !8831, discriminator: 0)
!9956 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9957)
!9957 = !{!9954}
!9958 = !DILocation(line: 348, column: 26, scope: !9955, inlinedAt: !9959)
!9959 = !DILocation(line: 773, column: 18, scope: !9837, inlinedAt: !9840)
!9960 = !DILocation(line: 348, column: 50, scope: !9830)
!9961 = !DILocation(line: 348, column: 9, scope: !9830)
!9962 = !DILocation(line: 350, column: 1, scope: !9810)
!9963 = !DILocation(line: 340, column: 1, scope: !9810)
!9964 = !DILocation(line: 350, column: 2, scope: !9810)
!9965 = distinct !DISubprogram(name: "box_free<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hcb2f4858f732f2d5E", scope: !359, file: !8831, line: 340, type: !9966, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9989, retainedNodes: !9980)
!9966 = !DISubroutineType(types: !9967)
!9967 = !{null, !9968, !358}
!9968 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<(dyn core::any::Any + core::marker::Send)>", scope: !347, file: !2, size: 128, align: 64, elements: !9969, templateParams: !4460, identifier: "d5bf4cea644a703366ddd9c587d0eed7")
!9969 = !{!9970, !9978}
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !9968, file: !2, baseType: !9971, size: 128, align: 64)
!9971 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(dyn core::any::Any + core::marker::Send)>", scope: !52, file: !2, size: 128, align: 64, elements: !9972, templateParams: !4460, identifier: "1473389a7f21e9adf89c306872b2243")
!9972 = !{!9973}
!9973 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !9971, file: !2, baseType: !9974, size: 128, align: 64)
!9974 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const (dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !9975, templateParams: !28, identifier: "2fc2519c89599ea6a74664ccb7671789")
!9975 = !{!9976, !9977}
!9976 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !9974, file: !2, baseType: !459, size: 64, align: 64)
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !9974, file: !2, baseType: !128, size: 64, align: 64, offset: 64)
!9978 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !9968, file: !2, baseType: !9979, align: 8)
!9979 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(dyn core::any::Any + core::marker::Send)>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !4460, identifier: "8c372e2356275a3d79ab89d80166510a")
!9980 = !{!9981, !9982, !9983, !9985, !9987}
!9981 = !DILocalVariable(name: "ptr", arg: 1, scope: !9965, file: !8831, line: 341, type: !9968)
!9982 = !DILocalVariable(name: "alloc", arg: 2, scope: !9965, file: !8831, line: 342, type: !358)
!9983 = !DILocalVariable(name: "size", scope: !9984, file: !8831, line: 345, type: !9, align: 8)
!9984 = distinct !DILexicalBlock(scope: !9965, file: !8831, line: 345, column: 9)
!9985 = !DILocalVariable(name: "align", scope: !9986, file: !8831, line: 346, type: !9, align: 8)
!9986 = distinct !DILexicalBlock(scope: !9984, file: !8831, line: 346, column: 9)
!9987 = !DILocalVariable(name: "layout", scope: !9988, file: !8831, line: 347, type: !1463, align: 8)
!9988 = distinct !DILexicalBlock(scope: !9986, file: !8831, line: 347, column: 9)
!9989 = !{!4461, !361}
!9990 = !DILocation(line: 341, column: 5, scope: !9965)
!9991 = !DILocation(line: 342, column: 5, scope: !9965)
!9992 = !DILocation(line: 347, column: 13, scope: !9988)
!9993 = !DILocalVariable(name: "unique", scope: !9994, file: !8831, line: 348, type: !346, align: 8)
!9994 = !DILexicalBlockFile(scope: !9995, file: !8831, discriminator: 0)
!9995 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h19dbefea06dd2371E", scope: !1414, file: !1413, line: 770, type: !1415, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !9996)
!9996 = !{!9993}
!9997 = !DILocation(line: 348, column: 26, scope: !9994, inlinedAt: !9998)
!9998 = !DILocation(line: 348, column: 26, scope: !9988)
!9999 = !DILocalVariable(name: "pointer", scope: !10000, file: !8831, line: 348, type: !350, align: 8)
!10000 = !DILexicalBlockFile(scope: !10001, file: !8831, discriminator: 0)
!10001 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha394f9b77cfbb700E", scope: !9690, file: !1424, line: 190, type: !9691, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10002)
!10002 = !{!9999}
!10003 = !DILocation(line: 348, column: 37, scope: !10000, inlinedAt: !10004)
!10004 = !DILocation(line: 137, column: 9, scope: !10005, inlinedAt: !10012)
!10005 = distinct !DISubprogram(name: "cast<(dyn core::any::Any + core::marker::Send), u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h931774d83d94028cE", scope: !9968, file: !1424, line: 136, type: !10006, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10011, retainedNodes: !10008)
!10006 = !DISubroutineType(types: !10007)
!10007 = !{!346, !9968}
!10008 = !{!10009}
!10009 = !DILocalVariable(name: "self", scope: !10010, file: !8831, line: 348, type: !9968, align: 8)
!10010 = !DILexicalBlockFile(scope: !10005, file: !8831, discriminator: 0)
!10011 = !{!4461, !1958}
!10012 = !DILocation(line: 348, column: 37, scope: !9988)
!10013 = !DILocation(line: 345, column: 32, scope: !9965)
!10014 = !DILocalVariable(name: "self", scope: !10015, file: !8831, line: 345, type: !10023, align: 8)
!10015 = !DILexicalBlockFile(scope: !10016, file: !8831, discriminator: 0)
!10016 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h34d9ede320359233E", scope: !9968, file: !1424, line: 114, type: !10017, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4460, retainedNodes: !10024)
!10017 = !DISubroutineType(types: !10018)
!10018 = !{!10019, !10023}
!10019 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn core::any::Any + core::marker::Send)", file: !2, size: 128, align: 64, elements: !10020, templateParams: !28, identifier: "5974d5915604a996fe707ddabeb5f60f")
!10020 = !{!10021, !10022}
!10021 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10019, file: !2, baseType: !459, size: 64, align: 64)
!10022 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !10019, file: !2, baseType: !128, size: 64, align: 64, offset: 64)
!10023 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<(dyn core::any::Any + core::marker::Send)>", baseType: !9968, size: 64, align: 64, dwarfAddressSpace: 0)
!10024 = !{!10014}
!10025 = !DILocation(line: 345, column: 32, scope: !10015, inlinedAt: !10013)
!10026 = !DILocalVariable(name: "self", scope: !10027, file: !8831, line: 345, type: !10031, align: 8)
!10027 = !DILexicalBlockFile(scope: !10028, file: !8831, discriminator: 0)
!10028 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hc6486aba1a1d1fd0E", scope: !9971, file: !1413, line: 378, type: !10029, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4460, retainedNodes: !10032)
!10029 = !DISubroutineType(types: !10030)
!10030 = !{!10019, !10031}
!10031 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<(dyn core::any::Any + core::marker::Send)>", baseType: !9971, size: 64, align: 64, dwarfAddressSpace: 0)
!10032 = !{!10026}
!10033 = !DILocation(line: 345, column: 32, scope: !10027, inlinedAt: !10034)
!10034 = !DILocation(line: 117, column: 18, scope: !10016, inlinedAt: !10013)
!10035 = !DILocalVariable(name: "self", scope: !10036, file: !8831, line: 345, type: !9971, align: 8)
!10036 = !DILexicalBlockFile(scope: !10037, file: !8831, discriminator: 0)
!10037 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf6725865abb92f73E", scope: !9971, file: !1413, line: 330, type: !10038, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4460, retainedNodes: !10040)
!10038 = !DISubroutineType(types: !10039)
!10039 = !{!4454, !9971}
!10040 = !{!10035}
!10041 = !DILocation(line: 345, column: 32, scope: !10036, inlinedAt: !10042)
!10042 = !DILocation(line: 381, column: 20, scope: !10028, inlinedAt: !10034)
!10043 = !DILocation(line: 345, column: 20, scope: !9965)
!10044 = !{i64 1, i64 0}
!10045 = !DILocation(line: 345, column: 13, scope: !9984)
!10046 = !DILocation(line: 346, column: 38, scope: !9984)
!10047 = !DILocalVariable(name: "self", scope: !10048, file: !8831, line: 346, type: !10023, align: 8)
!10048 = !DILexicalBlockFile(scope: !10049, file: !8831, discriminator: 0)
!10049 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h34d9ede320359233E", scope: !9968, file: !1424, line: 114, type: !10017, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4460, retainedNodes: !10050)
!10050 = !{!10047}
!10051 = !DILocation(line: 346, column: 38, scope: !10048, inlinedAt: !10046)
!10052 = !DILocalVariable(name: "self", scope: !10053, file: !8831, line: 346, type: !10031, align: 8)
!10053 = !DILexicalBlockFile(scope: !10054, file: !8831, discriminator: 0)
!10054 = distinct !DISubprogram(name: "as_ref<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hc6486aba1a1d1fd0E", scope: !9971, file: !1413, line: 378, type: !10029, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4460, retainedNodes: !10055)
!10055 = !{!10052}
!10056 = !DILocation(line: 346, column: 38, scope: !10053, inlinedAt: !10057)
!10057 = !DILocation(line: 117, column: 18, scope: !10049, inlinedAt: !10046)
!10058 = !DILocalVariable(name: "self", scope: !10059, file: !8831, line: 346, type: !9971, align: 8)
!10059 = !DILexicalBlockFile(scope: !10060, file: !8831, discriminator: 0)
!10060 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf6725865abb92f73E", scope: !9971, file: !1413, line: 330, type: !10038, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4460, retainedNodes: !10061)
!10061 = !{!10058}
!10062 = !DILocation(line: 346, column: 38, scope: !10059, inlinedAt: !10063)
!10063 = !DILocation(line: 381, column: 20, scope: !10054, inlinedAt: !10057)
!10064 = !DILocation(line: 346, column: 21, scope: !9984)
!10065 = !DILocation(line: 346, column: 13, scope: !9986)
!10066 = !DILocation(line: 347, column: 56, scope: !9986)
!10067 = !DILocalVariable(name: "size", scope: !10068, file: !8831, line: 347, type: !9, align: 8)
!10068 = !DILexicalBlockFile(scope: !10069, file: !8831, discriminator: 0)
!10069 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hd0530bfa33ab0837E", scope: !1463, file: !6221, line: 110, type: !6254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10070)
!10070 = !{!10067, !10071}
!10071 = !DILocalVariable(name: "align", scope: !10068, file: !8831, line: 347, type: !9, align: 8)
!10072 = !DILocation(line: 347, column: 22, scope: !10068, inlinedAt: !10073)
!10073 = !DILocation(line: 347, column: 22, scope: !9986)
!10074 = !DILocation(line: 347, column: 62, scope: !9986)
!10075 = !DILocalVariable(name: "align", scope: !10076, file: !8831, line: 347, type: !9, align: 8)
!10076 = !DILexicalBlockFile(scope: !10077, file: !8831, discriminator: 0)
!10077 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10078)
!10078 = !{!10075, !10079}
!10079 = !DILocalVariable(name: "runtime", scope: !10080, file: !8831, line: 347, type: !6271, align: 8)
!10080 = !DILexicalBlockFile(scope: !10081, file: !8831, discriminator: 0)
!10081 = distinct !DILexicalBlock(scope: !10077, file: !913, line: 2336, column: 13)
!10082 = !DILocation(line: 347, column: 22, scope: !10076, inlinedAt: !10083)
!10083 = !DILocation(line: 112, column: 40, scope: !10069, inlinedAt: !10073)
!10084 = !DILocation(line: 348, column: 37, scope: !10010, inlinedAt: !10012)
!10085 = !DILocalVariable(name: "self", scope: !10086, file: !8831, line: 348, type: !9971, align: 8)
!10086 = !DILexicalBlockFile(scope: !10087, file: !8831, discriminator: 0)
!10087 = distinct !DISubprogram(name: "cast<(dyn core::any::Any + core::marker::Send), u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h2ec1e3065fb16683E", scope: !9971, file: !1413, line: 453, type: !10088, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10011, retainedNodes: !10090)
!10088 = !DISubroutineType(types: !10089)
!10089 = !{!350, !9971}
!10090 = !{!10085}
!10091 = !DILocation(line: 348, column: 37, scope: !10086, inlinedAt: !10092)
!10092 = !DILocation(line: 137, column: 22, scope: !10005, inlinedAt: !10012)
!10093 = !DILocalVariable(name: "self", scope: !10094, file: !8831, line: 348, type: !9971, align: 8)
!10094 = !DILexicalBlockFile(scope: !10095, file: !8831, discriminator: 0)
!10095 = distinct !DISubprogram(name: "as_ptr<(dyn core::any::Any + core::marker::Send)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf6725865abb92f73E", scope: !9971, file: !1413, line: 330, type: !10038, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4460, retainedNodes: !10096)
!10096 = !{!10093}
!10097 = !DILocation(line: 348, column: 37, scope: !10094, inlinedAt: !10098)
!10098 = !DILocation(line: 455, column: 41, scope: !10087, inlinedAt: !10092)
!10099 = !DILocalVariable(name: "ptr", scope: !10100, file: !8831, line: 348, type: !1021, align: 8)
!10100 = !DILexicalBlockFile(scope: !10101, file: !8831, discriminator: 0)
!10101 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10102)
!10102 = !{!10099}
!10103 = !DILocation(line: 348, column: 37, scope: !10100, inlinedAt: !10104)
!10104 = !DILocation(line: 455, column: 18, scope: !10087, inlinedAt: !10092)
!10105 = !DILocalVariable(name: "self", scope: !10106, file: !8831, line: 348, type: !346, align: 8)
!10106 = !DILexicalBlockFile(scope: !10107, file: !8831, discriminator: 0)
!10107 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8bb8bd839a83b1c5E", scope: !346, file: !1424, line: 103, type: !1425, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10108)
!10108 = !{!10105}
!10109 = !DILocation(line: 348, column: 26, scope: !10106, inlinedAt: !10110)
!10110 = !DILocation(line: 773, column: 41, scope: !9995, inlinedAt: !9998)
!10111 = !DILocalVariable(name: "self", scope: !10112, file: !8831, line: 348, type: !350, align: 8)
!10112 = !DILexicalBlockFile(scope: !10113, file: !8831, discriminator: 0)
!10113 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10114)
!10114 = !{!10111}
!10115 = !DILocation(line: 348, column: 26, scope: !10112, inlinedAt: !10116)
!10116 = !DILocation(line: 104, column: 9, scope: !10107, inlinedAt: !10110)
!10117 = !DILocalVariable(name: "ptr", scope: !10118, file: !8831, line: 348, type: !1021, align: 8)
!10118 = !DILexicalBlockFile(scope: !10119, file: !8831, discriminator: 0)
!10119 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10120)
!10120 = !{!10117}
!10121 = !DILocation(line: 348, column: 26, scope: !10118, inlinedAt: !10122)
!10122 = !DILocation(line: 773, column: 18, scope: !9995, inlinedAt: !9998)
!10123 = !DILocation(line: 348, column: 50, scope: !9988)
!10124 = !DILocation(line: 348, column: 9, scope: !9988)
!10125 = !DILocation(line: 350, column: 1, scope: !9965)
!10126 = !DILocation(line: 340, column: 1, scope: !9965)
!10127 = !DILocation(line: 350, column: 2, scope: !9965)
!10128 = distinct !DISubprogram(name: "box_free<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hf2b034534e2503d1E", scope: !359, file: !8831, line: 340, type: !10129, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10152, retainedNodes: !10143)
!10129 = !DISubroutineType(types: !10130)
!10130 = !{null, !10131, !358}
!10131 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !347, file: !2, size: 128, align: 64, elements: !10132, templateParams: !4662, identifier: "63fff1a9ae0f9cab44e4779ad80822b")
!10132 = !{!10133, !10141}
!10133 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10131, file: !2, baseType: !10134, size: 128, align: 64)
!10134 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !52, file: !2, size: 128, align: 64, elements: !10135, templateParams: !4662, identifier: "95cfe13953bd00298c7689aed1482ec")
!10135 = !{!10136}
!10136 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10134, file: !2, baseType: !10137, size: 128, align: 64)
!10137 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const (dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !10138, templateParams: !28, identifier: "21116f06b2f8717ed9296c860aef0d85")
!10138 = !{!10139, !10140}
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10137, file: !2, baseType: !125, size: 64, align: 64)
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !10137, file: !2, baseType: !128, size: 64, align: 64, offset: 64)
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !10131, file: !2, baseType: !10142, align: 8)
!10142 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !59, file: !2, align: 8, elements: !28, templateParams: !4662, identifier: "3639c19c90b91409f3c0ea8292b2817d")
!10143 = !{!10144, !10145, !10146, !10148, !10150}
!10144 = !DILocalVariable(name: "ptr", arg: 1, scope: !10128, file: !8831, line: 341, type: !10131)
!10145 = !DILocalVariable(name: "alloc", arg: 2, scope: !10128, file: !8831, line: 342, type: !358)
!10146 = !DILocalVariable(name: "size", scope: !10147, file: !8831, line: 345, type: !9, align: 8)
!10147 = distinct !DILexicalBlock(scope: !10128, file: !8831, line: 345, column: 9)
!10148 = !DILocalVariable(name: "align", scope: !10149, file: !8831, line: 346, type: !9, align: 8)
!10149 = distinct !DILexicalBlock(scope: !10147, file: !8831, line: 346, column: 9)
!10150 = !DILocalVariable(name: "layout", scope: !10151, file: !8831, line: 347, type: !1463, align: 8)
!10151 = distinct !DILexicalBlock(scope: !10149, file: !8831, line: 347, column: 9)
!10152 = !{!4663, !361}
!10153 = !DILocation(line: 341, column: 5, scope: !10128)
!10154 = !DILocation(line: 342, column: 5, scope: !10128)
!10155 = !DILocation(line: 347, column: 13, scope: !10151)
!10156 = !DILocalVariable(name: "unique", scope: !10157, file: !8831, line: 348, type: !346, align: 8)
!10157 = !DILexicalBlockFile(scope: !10158, file: !8831, discriminator: 0)
!10158 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h19dbefea06dd2371E", scope: !1414, file: !1413, line: 770, type: !1415, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10159)
!10159 = !{!10156}
!10160 = !DILocation(line: 348, column: 26, scope: !10157, inlinedAt: !10161)
!10161 = !DILocation(line: 348, column: 26, scope: !10151)
!10162 = !DILocalVariable(name: "pointer", scope: !10163, file: !8831, line: 348, type: !350, align: 8)
!10163 = !DILexicalBlockFile(scope: !10164, file: !8831, discriminator: 0)
!10164 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha394f9b77cfbb700E", scope: !9690, file: !1424, line: 190, type: !9691, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10165)
!10165 = !{!10162}
!10166 = !DILocation(line: 348, column: 37, scope: !10163, inlinedAt: !10167)
!10167 = !DILocation(line: 137, column: 9, scope: !10168, inlinedAt: !10175)
!10168 = distinct !DISubprogram(name: "cast<(dyn std::error::Error + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h29ca0a629bd089a0E", scope: !10131, file: !1424, line: 136, type: !10169, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10174, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{!346, !10131}
!10171 = !{!10172}
!10172 = !DILocalVariable(name: "self", scope: !10173, file: !8831, line: 348, type: !10131, align: 8)
!10173 = !DILexicalBlockFile(scope: !10168, file: !8831, discriminator: 0)
!10174 = !{!4663, !1958}
!10175 = !DILocation(line: 348, column: 37, scope: !10151)
!10176 = !DILocation(line: 345, column: 32, scope: !10128)
!10177 = !DILocalVariable(name: "self", scope: !10178, file: !8831, line: 345, type: !10186, align: 8)
!10178 = !DILexicalBlockFile(scope: !10179, file: !8831, discriminator: 0)
!10179 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h70664a0eccdb8180E", scope: !10131, file: !1424, line: 114, type: !10180, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4662, retainedNodes: !10187)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{!10182, !10186}
!10182 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !10183, templateParams: !28, identifier: "acb9b04c18bec29a64f42cc13969440")
!10183 = !{!10184, !10185}
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10182, file: !2, baseType: !125, size: 64, align: 64)
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !10182, file: !2, baseType: !128, size: 64, align: 64, offset: 64)
!10186 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", baseType: !10131, size: 64, align: 64, dwarfAddressSpace: 0)
!10187 = !{!10177}
!10188 = !DILocation(line: 345, column: 32, scope: !10178, inlinedAt: !10176)
!10189 = !DILocalVariable(name: "self", scope: !10190, file: !8831, line: 345, type: !10194, align: 8)
!10190 = !DILexicalBlockFile(scope: !10191, file: !8831, discriminator: 0)
!10191 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h6cfaf37cefaca508E", scope: !10134, file: !1413, line: 378, type: !10192, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4662, retainedNodes: !10195)
!10192 = !DISubroutineType(types: !10193)
!10193 = !{!10182, !10194}
!10194 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", baseType: !10134, size: 64, align: 64, dwarfAddressSpace: 0)
!10195 = !{!10189}
!10196 = !DILocation(line: 345, column: 32, scope: !10190, inlinedAt: !10197)
!10197 = !DILocation(line: 117, column: 18, scope: !10179, inlinedAt: !10176)
!10198 = !DILocalVariable(name: "self", scope: !10199, file: !8831, line: 345, type: !10134, align: 8)
!10199 = !DILexicalBlockFile(scope: !10200, file: !8831, discriminator: 0)
!10200 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc6e71fe345555499E", scope: !10134, file: !1413, line: 330, type: !10201, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4662, retainedNodes: !10203)
!10201 = !DISubroutineType(types: !10202)
!10202 = !{!4656, !10134}
!10203 = !{!10198}
!10204 = !DILocation(line: 345, column: 32, scope: !10199, inlinedAt: !10205)
!10205 = !DILocation(line: 381, column: 20, scope: !10191, inlinedAt: !10197)
!10206 = !DILocation(line: 345, column: 20, scope: !10128)
!10207 = !DILocation(line: 345, column: 13, scope: !10147)
!10208 = !DILocation(line: 346, column: 38, scope: !10147)
!10209 = !DILocalVariable(name: "self", scope: !10210, file: !8831, line: 346, type: !10186, align: 8)
!10210 = !DILexicalBlockFile(scope: !10211, file: !8831, discriminator: 0)
!10211 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h70664a0eccdb8180E", scope: !10131, file: !1424, line: 114, type: !10180, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4662, retainedNodes: !10212)
!10212 = !{!10209}
!10213 = !DILocation(line: 346, column: 38, scope: !10210, inlinedAt: !10208)
!10214 = !DILocalVariable(name: "self", scope: !10215, file: !8831, line: 346, type: !10194, align: 8)
!10215 = !DILexicalBlockFile(scope: !10216, file: !8831, discriminator: 0)
!10216 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h6cfaf37cefaca508E", scope: !10134, file: !1413, line: 378, type: !10192, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4662, retainedNodes: !10217)
!10217 = !{!10214}
!10218 = !DILocation(line: 346, column: 38, scope: !10215, inlinedAt: !10219)
!10219 = !DILocation(line: 117, column: 18, scope: !10211, inlinedAt: !10208)
!10220 = !DILocalVariable(name: "self", scope: !10221, file: !8831, line: 346, type: !10134, align: 8)
!10221 = !DILexicalBlockFile(scope: !10222, file: !8831, discriminator: 0)
!10222 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc6e71fe345555499E", scope: !10134, file: !1413, line: 330, type: !10201, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4662, retainedNodes: !10223)
!10223 = !{!10220}
!10224 = !DILocation(line: 346, column: 38, scope: !10221, inlinedAt: !10225)
!10225 = !DILocation(line: 381, column: 20, scope: !10216, inlinedAt: !10219)
!10226 = !DILocation(line: 346, column: 21, scope: !10147)
!10227 = !DILocation(line: 346, column: 13, scope: !10149)
!10228 = !DILocation(line: 347, column: 56, scope: !10149)
!10229 = !DILocalVariable(name: "size", scope: !10230, file: !8831, line: 347, type: !9, align: 8)
!10230 = !DILexicalBlockFile(scope: !10231, file: !8831, discriminator: 0)
!10231 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17hd0530bfa33ab0837E", scope: !1463, file: !6221, line: 110, type: !6254, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10232)
!10232 = !{!10229, !10233}
!10233 = !DILocalVariable(name: "align", scope: !10230, file: !8831, line: 347, type: !9, align: 8)
!10234 = !DILocation(line: 347, column: 22, scope: !10230, inlinedAt: !10235)
!10235 = !DILocation(line: 347, column: 22, scope: !10149)
!10236 = !DILocation(line: 347, column: 62, scope: !10149)
!10237 = !DILocalVariable(name: "align", scope: !10238, file: !8831, line: 347, type: !9, align: 8)
!10238 = !DILexicalBlockFile(scope: !10239, file: !8831, discriminator: 0)
!10239 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17he4b2f575ef95898cE", scope: !1469, file: !6264, line: 29, type: !6265, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10240)
!10240 = !{!10237, !10241}
!10241 = !DILocalVariable(name: "runtime", scope: !10242, file: !8831, line: 347, type: !6271, align: 8)
!10242 = !DILexicalBlockFile(scope: !10243, file: !8831, discriminator: 0)
!10243 = distinct !DILexicalBlock(scope: !10239, file: !913, line: 2336, column: 13)
!10244 = !DILocation(line: 347, column: 22, scope: !10238, inlinedAt: !10245)
!10245 = !DILocation(line: 112, column: 40, scope: !10231, inlinedAt: !10235)
!10246 = !DILocation(line: 348, column: 37, scope: !10173, inlinedAt: !10175)
!10247 = !DILocalVariable(name: "self", scope: !10248, file: !8831, line: 348, type: !10134, align: 8)
!10248 = !DILexicalBlockFile(scope: !10249, file: !8831, discriminator: 0)
!10249 = distinct !DISubprogram(name: "cast<(dyn std::error::Error + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5bca24d4ab27c040E", scope: !10134, file: !1413, line: 453, type: !10250, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10174, retainedNodes: !10252)
!10250 = !DISubroutineType(types: !10251)
!10251 = !{!350, !10134}
!10252 = !{!10247}
!10253 = !DILocation(line: 348, column: 37, scope: !10248, inlinedAt: !10254)
!10254 = !DILocation(line: 137, column: 22, scope: !10168, inlinedAt: !10175)
!10255 = !DILocalVariable(name: "self", scope: !10256, file: !8831, line: 348, type: !10134, align: 8)
!10256 = !DILexicalBlockFile(scope: !10257, file: !8831, discriminator: 0)
!10257 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc6e71fe345555499E", scope: !10134, file: !1413, line: 330, type: !10201, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4662, retainedNodes: !10258)
!10258 = !{!10255}
!10259 = !DILocation(line: 348, column: 37, scope: !10256, inlinedAt: !10260)
!10260 = !DILocation(line: 455, column: 41, scope: !10249, inlinedAt: !10254)
!10261 = !DILocalVariable(name: "ptr", scope: !10262, file: !8831, line: 348, type: !1021, align: 8)
!10262 = !DILexicalBlockFile(scope: !10263, file: !8831, discriminator: 0)
!10263 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10264)
!10264 = !{!10261}
!10265 = !DILocation(line: 348, column: 37, scope: !10262, inlinedAt: !10266)
!10266 = !DILocation(line: 455, column: 18, scope: !10249, inlinedAt: !10254)
!10267 = !DILocalVariable(name: "self", scope: !10268, file: !8831, line: 348, type: !346, align: 8)
!10268 = !DILexicalBlockFile(scope: !10269, file: !8831, discriminator: 0)
!10269 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h8bb8bd839a83b1c5E", scope: !346, file: !1424, line: 103, type: !1425, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10270)
!10270 = !{!10267}
!10271 = !DILocation(line: 348, column: 26, scope: !10268, inlinedAt: !10272)
!10272 = !DILocation(line: 773, column: 41, scope: !10158, inlinedAt: !10161)
!10273 = !DILocalVariable(name: "self", scope: !10274, file: !8831, line: 348, type: !350, align: 8)
!10274 = !DILexicalBlockFile(scope: !10275, file: !8831, discriminator: 0)
!10275 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10276)
!10276 = !{!10273}
!10277 = !DILocation(line: 348, column: 26, scope: !10274, inlinedAt: !10278)
!10278 = !DILocation(line: 104, column: 9, scope: !10269, inlinedAt: !10272)
!10279 = !DILocalVariable(name: "ptr", scope: !10280, file: !8831, line: 348, type: !1021, align: 8)
!10280 = !DILexicalBlockFile(scope: !10281, file: !8831, discriminator: 0)
!10281 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10282)
!10282 = !{!10279}
!10283 = !DILocation(line: 348, column: 26, scope: !10280, inlinedAt: !10284)
!10284 = !DILocation(line: 773, column: 18, scope: !10158, inlinedAt: !10161)
!10285 = !DILocation(line: 348, column: 50, scope: !10151)
!10286 = !DILocation(line: 348, column: 9, scope: !10151)
!10287 = !DILocation(line: 350, column: 1, scope: !10128)
!10288 = !DILocation(line: 340, column: 1, scope: !10128)
!10289 = !DILocation(line: 350, column: 2, scope: !10128)
!10290 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17h1902612814c64536E", scope: !343, file: !1300, line: 448, type: !10291, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10363, retainedNodes: !10311)
!10291 = !DISubroutineType(types: !10292)
!10292 = !{!7372, !6427, !10293, !10310}
!10293 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !231, file: !2, size: 192, align: 64, elements: !10294, templateParams: !28, identifier: "2441bf159aec13ad0ba597f59aeb1a1")
!10294 = !{!10295}
!10295 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10293, file: !2, size: 192, align: 64, elements: !10296, templateParams: !28, identifier: "d785942d6e728cf8ed28d4d1a571b7a3", discriminator: !10309)
!10296 = !{!10297, !10305}
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !10295, file: !2, baseType: !10298, size: 192, align: 64, extraData: i64 0)
!10298 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !10293, file: !2, size: 192, align: 64, elements: !28, templateParams: !10299, identifier: "4d71821a6a04b7dadd5f931d25e98cb2")
!10299 = !{!10300}
!10300 = !DITemplateTypeParameter(name: "T", type: !10301)
!10301 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !10302, templateParams: !28, identifier: "c358a41279bc49b48121f0f71b1b3c8")
!10302 = !{!10303, !10304}
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10301, file: !2, baseType: !350, size: 64, align: 64)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !10301, file: !2, baseType: !1463, size: 128, align: 64, offset: 64)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !10295, file: !2, baseType: !10306, size: 192, align: 64)
!10306 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !10293, file: !2, size: 192, align: 64, elements: !10307, templateParams: !10299, identifier: "3a54c5b1a06a194b358330f440d65fe5")
!10307 = !{!10308}
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10306, file: !2, baseType: !10301, size: 192, align: 64)
!10309 = !DIDerivedType(tag: DW_TAG_member, scope: !10293, file: !2, baseType: !160, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!10310 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !358, size: 64, align: 64, dwarfAddressSpace: 0)
!10311 = !{!10312, !10313, !10314, !10315, !10317, !10332, !10334, !10349, !10351, !10353, !10355, !10356, !10359, !10360}
!10312 = !DILocalVariable(name: "new_layout", arg: 1, scope: !10290, file: !1300, line: 449, type: !6427)
!10313 = !DILocalVariable(name: "current_memory", arg: 2, scope: !10290, file: !1300, line: 450, type: !10293)
!10314 = !DILocalVariable(name: "alloc", arg: 3, scope: !10290, file: !1300, line: 451, type: !10310)
!10315 = !DILocalVariable(name: "new_layout", scope: !10316, file: !1300, line: 457, type: !1463, align: 8)
!10316 = distinct !DILexicalBlock(scope: !10290, file: !1300, line: 457, column: 5)
!10317 = !DILocalVariable(name: "residual", scope: !10318, file: !1300, line: 457, type: !10319, align: 8)
!10318 = distinct !DILexicalBlock(scope: !10290, file: !1300, line: 457, column: 62)
!10319 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !31, file: !2, size: 128, align: 64, elements: !10320, templateParams: !28, identifier: "5ef5f21a6f46a0206241b0c7f330dfa3")
!10320 = !{!10321}
!10321 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10319, file: !2, size: 128, align: 64, elements: !10322, templateParams: !28, identifier: "cb4858a3f71ae3f451b3ee0e26a669a0")
!10322 = !{!10323, !10328}
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10321, file: !2, baseType: !10324, size: 128, align: 64)
!10324 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10319, file: !2, size: 128, align: 64, elements: !10325, templateParams: !10327, identifier: "416344365d509c704ad8ffe5dcfb70fa")
!10325 = !{!10326}
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10324, file: !2, baseType: !2645, align: 8)
!10327 = !{!2650, !7442}
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10321, file: !2, baseType: !10329, size: 128, align: 64)
!10329 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10319, file: !2, size: 128, align: 64, elements: !10330, templateParams: !10327, identifier: "554770741a2c8057e7f8529a99308bf0")
!10330 = !{!10331}
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10329, file: !2, baseType: !1453, size: 128, align: 64)
!10332 = !DILocalVariable(name: "val", scope: !10333, file: !1300, line: 457, type: !1463, align: 8)
!10333 = distinct !DILexicalBlock(scope: !10290, file: !1300, line: 457, column: 22)
!10334 = !DILocalVariable(name: "residual", scope: !10335, file: !1300, line: 459, type: !10336, align: 8)
!10335 = distinct !DILexicalBlock(scope: !10316, file: !1300, line: 459, column: 35)
!10336 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !31, file: !2, size: 128, align: 64, elements: !10337, templateParams: !28, identifier: "c0cf86a3acbcbe62e1045ffe1b8697")
!10337 = !{!10338}
!10338 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10336, file: !2, size: 128, align: 64, elements: !10339, templateParams: !28, identifier: "542941ded386c5d0b8832b89b5bc0159")
!10339 = !{!10340, !10345}
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10338, file: !2, baseType: !10341, size: 128, align: 64)
!10341 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10336, file: !2, size: 128, align: 64, elements: !10342, templateParams: !10344, identifier: "172bc5836ee47c35d518a78511939b12")
!10342 = !{!10343}
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10341, file: !2, baseType: !2645, align: 8)
!10344 = !{!2650, !7381}
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10338, file: !2, baseType: !10346, size: 128, align: 64)
!10346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10336, file: !2, size: 128, align: 64, elements: !10347, templateParams: !10344, identifier: "adf3f686a95f61b9c3558b4df539adb8")
!10347 = !{!10348}
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10346, file: !2, baseType: !1450, size: 128, align: 64)
!10349 = !DILocalVariable(name: "val", scope: !10350, file: !1300, line: 459, type: !7, align: 1)
!10350 = distinct !DILexicalBlock(scope: !10316, file: !1300, line: 459, column: 5)
!10351 = !DILocalVariable(name: "memory", scope: !10352, file: !1300, line: 461, type: !7350, align: 8)
!10352 = distinct !DILexicalBlock(scope: !10316, file: !1300, line: 461, column: 5)
!10353 = !DILocalVariable(name: "ptr", scope: !10354, file: !1300, line: 461, type: !350, align: 8)
!10354 = distinct !DILexicalBlock(scope: !10316, file: !1300, line: 461, column: 66)
!10355 = !DILocalVariable(name: "old_layout", scope: !10354, file: !1300, line: 461, type: !1463, align: 8)
!10356 = !DILocalVariable(name: "left_val", scope: !10357, file: !1300, line: 462, type: !918, align: 8)
!10357 = !DILexicalBlockFile(scope: !10358, file: !1300, discriminator: 0)
!10358 = distinct !DILexicalBlock(scope: !10354, file: !7630, line: 39, column: 13)
!10359 = !DILocalVariable(name: "right_val", scope: !10357, file: !1300, line: 462, type: !918, align: 8)
!10360 = !DILocalVariable(name: "kind", scope: !10361, file: !1300, line: 462, type: !877, align: 1)
!10361 = !DILexicalBlockFile(scope: !10362, file: !1300, discriminator: 0)
!10362 = distinct !DILexicalBlock(scope: !10358, file: !7630, line: 41, column: 21)
!10363 = !{!361}
!10364 = !DILocation(line: 449, column: 5, scope: !10290)
!10365 = !DILocation(line: 450, column: 5, scope: !10290)
!10366 = !DILocation(line: 451, column: 5, scope: !10290)
!10367 = !DILocation(line: 457, column: 9, scope: !10316)
!10368 = !DILocalVariable(name: "self", scope: !10369, file: !1300, line: 457, type: !7478, align: 8)
!10369 = !DILexicalBlockFile(scope: !10370, file: !1300, discriminator: 0)
!10370 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h58561005092a9723E", scope: !2662, file: !1782, line: 2117, type: !10371, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7486, retainedNodes: !10389)
!10371 = !DISubroutineType(types: !10372)
!10372 = !{!10373, !7478}
!10373 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !2666, file: !2, size: 192, align: 64, elements: !10374, templateParams: !28, identifier: "30c77f8de40d27cc25bb1f117e102368")
!10374 = !{!10375}
!10375 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10373, file: !2, size: 192, align: 64, elements: !10376, templateParams: !28, identifier: "873dd87a14009e5aa4571f77c2255abd", discriminator: !10388)
!10376 = !{!10377, !10384}
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !10375, file: !2, baseType: !10378, size: 192, align: 64, extraData: i64 0)
!10378 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !10373, file: !2, size: 192, align: 64, elements: !10379, templateParams: !10381, identifier: "44b658dc6aeebfb637fc0f71177a37ae")
!10379 = !{!10380}
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10378, file: !2, baseType: !1463, size: 128, align: 64, offset: 64)
!10381 = !{!10382, !10383}
!10382 = !DITemplateTypeParameter(name: "B", type: !10319)
!10383 = !DITemplateTypeParameter(name: "C", type: !1463)
!10384 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !10375, file: !2, baseType: !10385, size: 192, align: 64, extraData: i64 1)
!10385 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !10373, file: !2, size: 192, align: 64, elements: !10386, templateParams: !10381, identifier: "a45e3c8f49f3878b531df9d7bb0c1ddb")
!10386 = !{!10387}
!10387 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10385, file: !2, baseType: !10319, size: 128, align: 64, offset: 64)
!10388 = !DIDerivedType(tag: DW_TAG_member, scope: !10373, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!10389 = !{!10368, !10390, !10393}
!10390 = !DILocalVariable(name: "v", scope: !10391, file: !1300, line: 457, type: !1463, align: 8)
!10391 = !DILexicalBlockFile(scope: !10392, file: !1300, discriminator: 0)
!10392 = distinct !DILexicalBlock(scope: !10370, file: !1782, line: 2119, column: 13)
!10393 = !DILocalVariable(name: "e", scope: !10394, file: !1300, line: 457, type: !1453, align: 8)
!10394 = !DILexicalBlockFile(scope: !10395, file: !1300, discriminator: 0)
!10395 = distinct !DILexicalBlock(scope: !10370, file: !1782, line: 2120, column: 13)
!10396 = !DILocation(line: 457, column: 22, scope: !10369, inlinedAt: !10397)
!10397 = !DILocation(line: 457, column: 22, scope: !10290)
!10398 = !DILocalVariable(name: "residual", scope: !10399, file: !1300, line: 457, type: !10319, align: 8)
!10399 = !DILexicalBlockFile(scope: !10400, file: !1300, discriminator: 0)
!10400 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc22d337e9854ec79E", scope: !2709, file: !1782, line: 2132, type: !10401, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10407, retainedNodes: !10403)
!10401 = !DISubroutineType(types: !10402)
!10402 = !{!7372, !10319, !1109}
!10403 = !{!10398, !10404}
!10404 = !DILocalVariable(name: "e", scope: !10405, file: !1300, line: 457, type: !1453, align: 8)
!10405 = !DILexicalBlockFile(scope: !10406, file: !1300, discriminator: 0)
!10406 = distinct !DILexicalBlock(scope: !10400, file: !1782, line: 2134, column: 13)
!10407 = !{!7362, !7442, !7400}
!10408 = !DILocation(line: 457, column: 22, scope: !10399, inlinedAt: !10409)
!10409 = !DILocation(line: 457, column: 22, scope: !10318)
!10410 = !DILocalVariable(name: "self", scope: !10411, file: !1300, line: 459, type: !7417, align: 8)
!10411 = !DILexicalBlockFile(scope: !10412, file: !1300, discriminator: 0)
!10412 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha31e8b7e75cc1b07E", scope: !2662, file: !1782, line: 2117, type: !10413, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7425, retainedNodes: !10431)
!10413 = !DISubroutineType(types: !10414)
!10414 = !{!10415, !7417}
!10415 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !2666, file: !2, size: 128, align: 64, elements: !10416, templateParams: !28, identifier: "dd182185d8f5b2b7cb5665cc5c5ccb07")
!10416 = !{!10417}
!10417 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10415, file: !2, size: 128, align: 64, elements: !10418, templateParams: !28, identifier: "57751adeae8e77576883f29d0a97ac09", discriminator: !10430)
!10418 = !{!10419, !10426}
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !10417, file: !2, baseType: !10420, size: 128, align: 64, extraData: i64 -9223372036854775807)
!10420 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !10415, file: !2, size: 128, align: 64, elements: !10421, templateParams: !10423, identifier: "35a87d623a367fdaec857f7d914f3ad9")
!10421 = !{!10422}
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10420, file: !2, baseType: !7, align: 8)
!10423 = !{!10424, !10425}
!10424 = !DITemplateTypeParameter(name: "B", type: !10336)
!10425 = !DITemplateTypeParameter(name: "C", type: !7)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !10417, file: !2, baseType: !10427, size: 128, align: 64)
!10427 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !10415, file: !2, size: 128, align: 64, elements: !10428, templateParams: !10423, identifier: "f5790c13a1dcecaf1cf858de99ad1734")
!10428 = !{!10429}
!10429 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10427, file: !2, baseType: !10336, size: 128, align: 64)
!10430 = !DIDerivedType(tag: DW_TAG_member, scope: !10415, file: !2, baseType: !160, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!10431 = !{!10410, !10432, !10435}
!10432 = !DILocalVariable(name: "v", scope: !10433, file: !1300, line: 459, type: !7, align: 1)
!10433 = !DILexicalBlockFile(scope: !10434, file: !1300, discriminator: 0)
!10434 = distinct !DILexicalBlock(scope: !10412, file: !1782, line: 2119, column: 13)
!10435 = !DILocalVariable(name: "e", scope: !10436, file: !1300, line: 459, type: !1450, align: 8)
!10436 = !DILexicalBlockFile(scope: !10437, file: !1300, discriminator: 0)
!10437 = distinct !DILexicalBlock(scope: !10412, file: !1782, line: 2120, column: 13)
!10438 = !DILocation(line: 459, column: 5, scope: !10411, inlinedAt: !10439)
!10439 = !DILocation(line: 459, column: 5, scope: !10316)
!10440 = !DILocalVariable(name: "residual", scope: !10441, file: !1300, line: 459, type: !10336, align: 8)
!10441 = !DILexicalBlockFile(scope: !10442, file: !1300, discriminator: 0)
!10442 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbf2e02cd1778e12cE", scope: !2709, file: !1782, line: 2132, type: !10443, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10449, retainedNodes: !10445)
!10443 = !DISubroutineType(types: !10444)
!10444 = !{!7372, !10336, !1109}
!10445 = !{!10440, !10446}
!10446 = !DILocalVariable(name: "e", scope: !10447, file: !1300, line: 459, type: !1450, align: 8)
!10447 = !DILexicalBlockFile(scope: !10448, file: !1300, discriminator: 0)
!10448 = distinct !DILexicalBlock(scope: !10442, file: !1782, line: 2134, column: 13)
!10449 = !{!7362, !7381, !7400}
!10450 = !DILocation(line: 459, column: 5, scope: !10441, inlinedAt: !10451)
!10451 = !DILocation(line: 459, column: 5, scope: !10335)
!10452 = !DILocation(line: 459, column: 5, scope: !10350)
!10453 = !DILocation(line: 461, column: 9, scope: !10352)
!10454 = !DILocation(line: 461, column: 36, scope: !10354)
!10455 = !DILocation(line: 459, column: 5, scope: !10433, inlinedAt: !10439)
!10456 = !DILocalVariable(name: "self", scope: !10457, file: !1300, line: 465, type: !6453, align: 8)
!10457 = !DILexicalBlockFile(scope: !10458, file: !1300, discriminator: 0)
!10458 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10459)
!10459 = !{!10456}
!10460 = !DILocation(line: 465, column: 32, scope: !10457, inlinedAt: !10461)
!10461 = !DILocation(line: 131, column: 9, scope: !10462, inlinedAt: !10466)
!10462 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc873a2004b83507E", scope: !1463, file: !6221, line: 130, type: !9050, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10463)
!10463 = !{!10464}
!10464 = !DILocalVariable(name: "self", scope: !10465, file: !1300, line: 465, type: !7391, align: 8)
!10465 = !DILexicalBlockFile(scope: !10462, file: !1300, discriminator: 0)
!10466 = !DILocation(line: 465, column: 32, scope: !10354)
!10467 = !DILocalVariable(name: "self", scope: !10468, file: !1300, line: 465, type: !1469, align: 8)
!10468 = !DILexicalBlockFile(scope: !10469, file: !1300, discriminator: 0)
!10469 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10470)
!10470 = !{!10467}
!10471 = !DILocation(line: 465, column: 32, scope: !10468, inlinedAt: !10461)
!10472 = !DILocalVariable(name: "self", scope: !10473, file: !1300, line: 465, type: !6453, align: 8)
!10473 = !DILexicalBlockFile(scope: !10474, file: !1300, discriminator: 0)
!10474 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10475)
!10475 = !{!10472}
!10476 = !DILocation(line: 465, column: 54, scope: !10473, inlinedAt: !10477)
!10477 = !DILocation(line: 131, column: 9, scope: !10478, inlinedAt: !10482)
!10478 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc873a2004b83507E", scope: !1463, file: !6221, line: 130, type: !9050, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10479)
!10479 = !{!10480}
!10480 = !DILocalVariable(name: "self", scope: !10481, file: !1300, line: 465, type: !7391, align: 8)
!10481 = !DILexicalBlockFile(scope: !10478, file: !1300, discriminator: 0)
!10482 = !DILocation(line: 465, column: 54, scope: !10354)
!10483 = !DILocalVariable(name: "self", scope: !10484, file: !1300, line: 465, type: !1469, align: 8)
!10484 = !DILexicalBlockFile(scope: !10485, file: !1300, discriminator: 0)
!10485 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10486)
!10486 = !{!10483}
!10487 = !DILocation(line: 465, column: 54, scope: !10484, inlinedAt: !10477)
!10488 = !DILocation(line: 457, column: 22, scope: !10391, inlinedAt: !10397)
!10489 = !DILocation(line: 457, column: 22, scope: !10394, inlinedAt: !10397)
!10490 = !DILocation(line: 457, column: 22, scope: !10333)
!10491 = !DILocation(line: 459, column: 5, scope: !10492, inlinedAt: !10439)
!10492 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17ha8d4b012492cdd93E", scope: !343, file: !1300, line: 505, type: !10493, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10495)
!10493 = !DISubroutineType(types: !10494)
!10494 = !{!7417, !9}
!10495 = !{!10496}
!10496 = !DILocalVariable(name: "alloc_size", scope: !10492, file: !1300, line: 459, type: !9, align: 8)
!10497 = !DILocation(line: 457, column: 62, scope: !10290)
!10498 = !DILocation(line: 457, column: 62, scope: !10318)
!10499 = !DILocation(line: 457, column: 22, scope: !10405, inlinedAt: !10409)
!10500 = !DILocalVariable(name: "kind", scope: !10501, file: !1300, line: 457, type: !1453, align: 8)
!10501 = !DILexicalBlockFile(scope: !10502, file: !1300, discriminator: 0)
!10502 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h6e98c5d1da63f7d0E", scope: !1446, file: !1445, line: 116, type: !1448, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10503)
!10503 = !{!10500}
!10504 = !DILocation(line: 457, column: 22, scope: !10501, inlinedAt: !10505)
!10505 = !DILocation(line: 2134, column: 27, scope: !10406, inlinedAt: !10409)
!10506 = !DILocation(line: 1, column: 1, scope: !10507)
!10507 = !DILexicalBlockFile(scope: !10290, file: !1610, discriminator: 0)
!10508 = !DILocation(line: 473, column: 2, scope: !10290)
!10509 = !DILocation(line: 459, column: 5, scope: !10436, inlinedAt: !10439)
!10510 = !DILocation(line: 461, column: 25, scope: !10354)
!10511 = !DILocation(line: 459, column: 35, scope: !10316)
!10512 = !DILocation(line: 459, column: 35, scope: !10335)
!10513 = !DILocation(line: 459, column: 5, scope: !10447, inlinedAt: !10451)
!10514 = !DILocation(line: 1, column: 1, scope: !10515)
!10515 = !DILexicalBlockFile(scope: !10316, file: !1610, discriminator: 0)
!10516 = !DILocation(line: 461, column: 31, scope: !10354)
!10517 = !DILocation(line: 465, column: 32, scope: !10465, inlinedAt: !10466)
!10518 = !DILocalVariable(name: "n", scope: !10519, file: !1300, line: 465, type: !9, align: 8)
!10519 = !DILexicalBlockFile(scope: !10520, file: !1300, discriminator: 0)
!10520 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10521)
!10521 = !{!10518, !10522}
!10522 = !DILocalVariable(name: "runtime", scope: !10523, file: !1300, line: 465, type: !6477, align: 8)
!10523 = !DILexicalBlockFile(scope: !10524, file: !1300, discriminator: 0)
!10524 = distinct !DILexicalBlock(scope: !10520, file: !913, line: 2336, column: 13)
!10525 = !DILocation(line: 465, column: 32, scope: !10519, inlinedAt: !10526)
!10526 = !DILocation(line: 41, column: 18, scope: !10469, inlinedAt: !10461)
!10527 = !DILocation(line: 465, column: 54, scope: !10481, inlinedAt: !10482)
!10528 = !DILocalVariable(name: "n", scope: !10529, file: !1300, line: 465, type: !9, align: 8)
!10529 = !DILexicalBlockFile(scope: !10530, file: !1300, discriminator: 0)
!10530 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10531)
!10531 = !{!10528, !10532}
!10532 = !DILocalVariable(name: "runtime", scope: !10533, file: !1300, line: 465, type: !6477, align: 8)
!10533 = !DILexicalBlockFile(scope: !10534, file: !1300, discriminator: 0)
!10534 = distinct !DILexicalBlock(scope: !10530, file: !913, line: 2336, column: 13)
!10535 = !DILocation(line: 465, column: 54, scope: !10529, inlinedAt: !10536)
!10536 = !DILocation(line: 41, column: 18, scope: !10485, inlinedAt: !10477)
!10537 = !DILocation(line: 465, column: 13, scope: !10354)
!10538 = !DILocation(line: 469, column: 24, scope: !10316)
!10539 = !DILocation(line: 469, column: 9, scope: !10316)
!10540 = !DILocation(line: 461, column: 18, scope: !10316)
!10541 = !DILocation(line: 472, column: 5, scope: !10352)
!10542 = !DILocation(line: 472, column: 20, scope: !10352)
!10543 = !DILocation(line: 466, column: 29, scope: !10354)
!10544 = !DILocation(line: 466, column: 41, scope: !10354)
!10545 = !DILocation(line: 466, column: 13, scope: !10354)
!10546 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h66c167fe7c85872cE", scope: !7388, file: !1300, line: 457, type: !10547, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10363, retainedNodes: !10549)
!10547 = !DISubroutineType(types: !10548)
!10548 = !{!1453, !7492, !6438}
!10549 = !{!10550, !10551}
!10550 = !DILocalVariable(arg: 1, scope: !10546, file: !1300, line: 457, type: !7492)
!10551 = !DILocalVariable(arg: 2, scope: !10546, file: !1300, line: 457, type: !6438)
!10552 = !DILocation(line: 457, column: 41, scope: !10546)
!10553 = !DILocation(line: 457, column: 42, scope: !10546)
!10554 = !DILocation(line: 457, column: 45, scope: !10546)
!10555 = !DILocation(line: 457, column: 44, scope: !10546)
!10556 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h6f36d7ffec3c0b0aE", scope: !7388, file: !1300, line: 472, type: !10557, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10363, retainedNodes: !10559)
!10557 = !DISubroutineType(types: !10558)
!10558 = !{!1450, !7387, !7364}
!10559 = !{!10560, !10561}
!10560 = !DILocalVariable(name: "new_layout", scope: !10556, file: !1300, line: 457, type: !1463, align: 8)
!10561 = !DILocalVariable(arg: 2, scope: !10556, file: !1300, line: 472, type: !7364)
!10562 = !DILocation(line: 457, column: 9, scope: !10556)
!10563 = !DILocation(line: 472, column: 21, scope: !10556)
!10564 = !DILocation(line: 472, column: 45, scope: !10556)
!10565 = !DILocation(line: 472, column: 24, scope: !10556)
!10566 = !DILocation(line: 472, column: 23, scope: !10556)
!10567 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17h00be94c037ccf9fdE", scope: !343, file: !1300, line: 487, type: !10568, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10570)
!10568 = !DISubroutineType(types: !10569)
!10569 = !{null, !7417}
!10570 = !{!10571, !10572}
!10571 = !DILocalVariable(name: "result", arg: 1, scope: !10567, file: !1300, line: 487, type: !7417)
!10572 = !DILocalVariable(name: "layout", scope: !10573, file: !1300, line: 490, type: !1463, align: 8)
!10573 = distinct !DILexicalBlock(scope: !10567, file: !1300, line: 490, column: 9)
!10574 = !DILocation(line: 487, column: 19, scope: !10567)
!10575 = !DILocation(line: 488, column: 11, scope: !10567)
!10576 = !DILocation(line: 488, column: 5, scope: !10567)
!10577 = !DILocation(line: 493, column: 2, scope: !10567)
!10578 = !DILocation(line: 489, column: 34, scope: !10567)
!10579 = !DILocation(line: 490, column: 26, scope: !10567)
!10580 = !DILocation(line: 490, column: 26, scope: !10573)
!10581 = !DILocation(line: 490, column: 43, scope: !10573)
!10582 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h49235c1b243c36e6E", scope: !7449, file: !1300, line: 488, type: !10583, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10585)
!10583 = !DISubroutineType(types: !10584)
!10584 = !{!1453, !7448, !1450}
!10585 = !{!10586, !10587}
!10586 = !DILocalVariable(name: "e", arg: 2, scope: !10582, file: !1300, line: 488, type: !1450)
!10587 = !DILocalVariable(arg: 1, scope: !10582, file: !1300, line: 488, type: !7448)
!10588 = !DILocation(line: 488, column: 26, scope: !10582)
!10589 = !DILocation(line: 488, column: 27, scope: !10582)
!10590 = !DILocation(line: 488, column: 30, scope: !10582)
!10591 = !DILocalVariable(name: "self", scope: !10592, file: !1300, line: 488, type: !10596, align: 8)
!10592 = !DILexicalBlockFile(scope: !10593, file: !1300, discriminator: 0)
!10593 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17hbe7536781ac00c5aE", scope: !1450, file: !1445, line: 74, type: !10594, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10597)
!10594 = !DISubroutineType(types: !10595)
!10595 = !{!1453, !10596}
!10596 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !1450, size: 64, align: 64, dwarfAddressSpace: 0)
!10597 = !{!10591}
!10598 = !DILocation(line: 488, column: 30, scope: !10592, inlinedAt: !10590)
!10599 = !DILocalVariable(name: "self", scope: !10600, file: !1300, line: 488, type: !10605, align: 8)
!10600 = !DILexicalBlockFile(scope: !10601, file: !1300, discriminator: 0)
!10601 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h2dd1e43566a07c7aE", scope: !10602, file: !1445, line: 80, type: !10603, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10606)
!10602 = !DINamespace(name: "{impl#10}", scope: !1447)
!10603 = !DISubroutineType(types: !10604)
!10604 = !{!1453, !10605}
!10605 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !1453, size: 64, align: 64, dwarfAddressSpace: 0)
!10606 = !{!10599, !10607, !10610}
!10607 = !DILocalVariable(name: "__self_0", scope: !10608, file: !1300, line: 488, type: !7391, align: 8)
!10608 = !DILexicalBlockFile(scope: !10609, file: !1300, discriminator: 0)
!10609 = distinct !DILexicalBlock(scope: !10601, file: !1445, line: 80, column: 10)
!10610 = !DILocalVariable(name: "__self_1", scope: !10608, file: !1300, line: 488, type: !10611, align: 8)
!10611 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!10612 = !DILocation(line: 488, column: 30, scope: !10600, inlinedAt: !10613)
!10613 = !DILocation(line: 75, column: 9, scope: !10593, inlinedAt: !10590)
!10614 = !DILocation(line: 488, column: 30, scope: !10608, inlinedAt: !10613)
!10615 = !DILocalVariable(name: "self", scope: !10616, file: !1300, line: 488, type: !7391, align: 8)
!10616 = !DILexicalBlockFile(scope: !10617, file: !1300, discriminator: 0)
!10617 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h436f41a71db19be0E", scope: !10618, file: !6221, line: 35, type: !10619, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10621)
!10618 = !DINamespace(name: "{impl#3}", scope: !1464)
!10619 = !DISubroutineType(types: !10620)
!10620 = !{!1463, !7391}
!10621 = !{!10615}
!10622 = !DILocation(line: 488, column: 30, scope: !10616, inlinedAt: !10623)
!10623 = !DILocation(line: 94, column: 9, scope: !10609, inlinedAt: !10613)
!10624 = !DILocation(line: 488, column: 29, scope: !10582)
!10625 = distinct !DISubprogram(name: "allocate_in<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hd0b14824167d3f29E", scope: !1193, file: !1300, line: 169, type: !10626, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !10628)
!10626 = !DISubroutineType(types: !10627)
!10627 = !{!1193, !9, !883, !358}
!10628 = !{!10629, !10630, !10631, !10632, !10634, !10636, !10638, !10640}
!10629 = !DILocalVariable(name: "capacity", arg: 1, scope: !10625, file: !1300, line: 169, type: !9)
!10630 = !DILocalVariable(name: "init", arg: 2, scope: !10625, file: !1300, line: 169, type: !883)
!10631 = !DILocalVariable(name: "alloc", arg: 3, scope: !10625, file: !1300, line: 169, type: !358)
!10632 = !DILocalVariable(name: "layout", scope: !10633, file: !1300, line: 176, type: !1463, align: 8)
!10633 = distinct !DILexicalBlock(scope: !10625, file: !1300, line: 176, column: 13)
!10634 = !DILocalVariable(name: "layout", scope: !10635, file: !1300, line: 177, type: !1463, align: 8)
!10635 = distinct !DILexicalBlock(scope: !10625, file: !1300, line: 177, column: 17)
!10636 = !DILocalVariable(name: "result", scope: !10637, file: !1300, line: 184, type: !7350, align: 8)
!10637 = distinct !DILexicalBlock(scope: !10633, file: !1300, line: 184, column: 13)
!10638 = !DILocalVariable(name: "ptr", scope: !10639, file: !1300, line: 188, type: !7358, align: 8)
!10639 = distinct !DILexicalBlock(scope: !10637, file: !1300, line: 188, column: 13)
!10640 = !DILocalVariable(name: "ptr", scope: !10641, file: !1300, line: 189, type: !7358, align: 8)
!10641 = distinct !DILexicalBlock(scope: !10637, file: !1300, line: 189, column: 17)
!10642 = !DILocation(line: 169, column: 20, scope: !10625)
!10643 = !DILocation(line: 169, column: 37, scope: !10625)
!10644 = !DILocation(line: 169, column: 54, scope: !10625)
!10645 = !DILocation(line: 184, column: 17, scope: !10637)
!10646 = !DILocalVariable(name: "self", scope: !10647, file: !1300, line: 197, type: !1199, align: 8)
!10647 = !DILexicalBlockFile(scope: !10648, file: !1300, discriminator: 0)
!10648 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !10649)
!10649 = !{!10646}
!10650 = !DILocation(line: 197, column: 53, scope: !10647, inlinedAt: !10651)
!10651 = !DILocation(line: 197, column: 53, scope: !10639)
!10652 = !DILocation(line: 171, column: 12, scope: !10625)
!10653 = !DILocation(line: 171, column: 40, scope: !10625)
!10654 = !DILocation(line: 176, column: 32, scope: !10625)
!10655 = !DILocation(line: 172, column: 26, scope: !10625)
!10656 = !DILocation(line: 172, column: 13, scope: !10625)
!10657 = !DILocation(line: 202, column: 5, scope: !10625)
!10658 = !DILocation(line: 171, column: 9, scope: !10625)
!10659 = !DILocation(line: 202, column: 6, scope: !10625)
!10660 = !DILocation(line: 176, column: 26, scope: !10625)
!10661 = !DILocation(line: 177, column: 20, scope: !10625)
!10662 = !DILocation(line: 177, column: 20, scope: !10635)
!10663 = !DILocation(line: 177, column: 31, scope: !10635)
!10664 = !DILocation(line: 176, column: 17, scope: !10633)
!10665 = !DILocation(line: 180, column: 19, scope: !10666, inlinedAt: !10669)
!10666 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17ha8d4b012492cdd93E", scope: !343, file: !1300, line: 505, type: !10493, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10667)
!10667 = !{!10668}
!10668 = !DILocalVariable(name: "alloc_size", scope: !10666, file: !1300, line: 180, type: !9, align: 8)
!10669 = !DILocation(line: 180, column: 19, scope: !10633)
!10670 = !DILocation(line: 180, column: 13, scope: !10633)
!10671 = !DILocation(line: 178, column: 27, scope: !10625)
!10672 = !DILocation(line: 184, column: 32, scope: !10633)
!10673 = !DILocation(line: 184, column: 26, scope: !10633)
!10674 = !DILocation(line: 182, column: 27, scope: !10633)
!10675 = !DILocation(line: 185, column: 45, scope: !10633)
!10676 = !DILocation(line: 186, column: 38, scope: !10633)
!10677 = !DILocation(line: 186, column: 66, scope: !10633)
!10678 = !DILocation(line: 188, column: 29, scope: !10637)
!10679 = !DILocation(line: 188, column: 23, scope: !10637)
!10680 = !DILocation(line: 185, column: 66, scope: !10633)
!10681 = !DILocation(line: 189, column: 20, scope: !10637)
!10682 = !DILocation(line: 189, column: 20, scope: !10641)
!10683 = !DILocation(line: 189, column: 28, scope: !10641)
!10684 = !DILocation(line: 188, column: 17, scope: !10639)
!10685 = !DILocalVariable(name: "self", scope: !10686, file: !1300, line: 197, type: !7358, align: 8)
!10686 = !DILexicalBlockFile(scope: !10687, file: !1300, discriminator: 0)
!10687 = distinct !DISubprogram(name: "cast<[u8], &str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3f741da44e5ca4a1E", scope: !7358, file: !1413, line: 453, type: !10688, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10691, retainedNodes: !10690)
!10688 = !DISubroutineType(types: !10689)
!10689 = !{!1199, !7358}
!10690 = !{!10685}
!10691 = !{!333, !7238}
!10692 = !DILocation(line: 197, column: 53, scope: !10686, inlinedAt: !10651)
!10693 = !DILocalVariable(name: "self", scope: !10694, file: !1300, line: 197, type: !7358, align: 8)
!10694 = !DILexicalBlockFile(scope: !10695, file: !1300, discriminator: 0)
!10695 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc08d8add39eb4c7E", scope: !7358, file: !1413, line: 330, type: !8900, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10696)
!10696 = !{!10693}
!10697 = !DILocation(line: 197, column: 53, scope: !10694, inlinedAt: !10698)
!10698 = !DILocation(line: 455, column: 41, scope: !10687, inlinedAt: !10651)
!10699 = !DILocalVariable(name: "ptr", scope: !10700, file: !1300, line: 197, type: !1275, align: 8)
!10700 = !DILexicalBlockFile(scope: !10701, file: !1300, discriminator: 0)
!10701 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9a2436cafa99480dE", scope: !1199, file: !1413, line: 196, type: !7119, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !10702)
!10702 = !{!10699}
!10703 = !DILocation(line: 197, column: 53, scope: !10700, inlinedAt: !10704)
!10704 = !DILocation(line: 455, column: 18, scope: !10687, inlinedAt: !10651)
!10705 = !DILocalVariable(name: "ptr", scope: !10706, file: !1300, line: 197, type: !1275, align: 8)
!10706 = !DILexicalBlockFile(scope: !10707, file: !1300, discriminator: 0)
!10707 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h914d9b1eaebd3354E", scope: !1196, file: !1424, line: 85, type: !10708, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !10710)
!10708 = !DISubroutineType(types: !10709)
!10709 = !{!1196, !1275}
!10710 = !{!10705}
!10711 = !DILocation(line: 197, column: 31, scope: !10706, inlinedAt: !10712)
!10712 = !DILocation(line: 197, column: 31, scope: !10639)
!10713 = !DILocalVariable(name: "ptr", scope: !10714, file: !1300, line: 197, type: !1275, align: 8)
!10714 = !DILexicalBlockFile(scope: !10715, file: !1300, discriminator: 0)
!10715 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9a2436cafa99480dE", scope: !1199, file: !1413, line: 196, type: !7119, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !10716)
!10716 = !{!10713}
!10717 = !DILocation(line: 197, column: 31, scope: !10714, inlinedAt: !10718)
!10718 = !DILocation(line: 87, column: 36, scope: !10707, inlinedAt: !10712)
!10719 = !DILocation(line: 196, column: 13, scope: !10639)
!10720 = !DILocation(line: 190, column: 27, scope: !10637)
!10721 = !DILocation(line: 169, column: 5, scope: !10625)
!10722 = distinct !DISubprogram(name: "needs_to_grow<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hceca2e7dfe8279dcE", scope: !1193, file: !1300, line: 360, type: !10723, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !10725)
!10723 = !DISubroutineType(types: !10724)
!10724 = !{!1244, !8041, !9, !9}
!10725 = !{!10726, !10727, !10728}
!10726 = !DILocalVariable(name: "self", arg: 1, scope: !10722, file: !1300, line: 360, type: !8041)
!10727 = !DILocalVariable(name: "len", arg: 2, scope: !10722, file: !1300, line: 360, type: !9)
!10728 = !DILocalVariable(name: "additional", arg: 3, scope: !10722, file: !1300, line: 360, type: !9)
!10729 = !DILocation(line: 360, column: 22, scope: !10722)
!10730 = !DILocation(line: 360, column: 29, scope: !10722)
!10731 = !DILocation(line: 360, column: 41, scope: !10722)
!10732 = !DILocalVariable(name: "self", scope: !10733, file: !1300, line: 361, type: !9, align: 8)
!10733 = !DILexicalBlockFile(scope: !10734, file: !1300, discriminator: 0)
!10734 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !1328, file: !1327, line: 1231, type: !1329, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !10735)
!10735 = !{!10732, !10736}
!10736 = !DILocalVariable(name: "rhs", scope: !10733, file: !1300, line: 361, type: !9, align: 8)
!10737 = !DILocation(line: 361, column: 22, scope: !10733, inlinedAt: !10738)
!10738 = !DILocation(line: 361, column: 22, scope: !10722)
!10739 = !DILocalVariable(name: "self", scope: !10740, file: !1300, line: 361, type: !8041, align: 8)
!10740 = distinct !DISubprogram(name: "capacity<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h60f53e490217d474E", scope: !1193, file: !1300, line: 231, type: !8122, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !10741)
!10741 = !{!10739}
!10742 = !DILocation(line: 361, column: 22, scope: !10740, inlinedAt: !10738)
!10743 = !DILocation(line: 361, column: 51, scope: !10722)
!10744 = !DILocation(line: 361, column: 9, scope: !10722)
!10745 = !DILocation(line: 362, column: 6, scope: !10722)
!10746 = distinct !DISubprogram(name: "current_memory<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8f4aabb6d3acb1f5E", scope: !342, file: !1300, line: 240, type: !10747, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !360, retainedNodes: !10749)
!10747 = !DISubroutineType(types: !10748)
!10748 = !{!10293, !7978}
!10749 = !{!10750, !10751}
!10750 = !DILocalVariable(name: "self", arg: 1, scope: !10746, file: !1300, line: 240, type: !7978)
!10751 = !DILocalVariable(name: "layout", scope: !10752, file: !1300, line: 247, type: !1463, align: 8)
!10752 = distinct !DILexicalBlock(scope: !10746, file: !1300, line: 247, column: 17)
!10753 = !DILocation(line: 240, column: 23, scope: !10746)
!10754 = !DILocalVariable(name: "self", scope: !10755, file: !1300, line: 247, type: !6427, align: 8)
!10755 = !DILexicalBlockFile(scope: !10756, file: !1300, discriminator: 0)
!10756 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h8605521870e31e57E", scope: !6427, file: !1782, line: 1520, type: !10757, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6435, retainedNodes: !10759)
!10757 = !DISubroutineType(types: !10758)
!10758 = !{!1463, !6427, !1109}
!10759 = !{!10754, !10760}
!10760 = !DILocalVariable(name: "t", scope: !10761, file: !1300, line: 247, type: !1463, align: 8)
!10761 = !DILexicalBlockFile(scope: !10762, file: !1300, discriminator: 0)
!10762 = distinct !DILexicalBlock(scope: !10756, file: !1782, line: 1523, column: 13)
!10763 = !DILocation(line: 247, column: 30, scope: !10755, inlinedAt: !10764)
!10764 = !DILocation(line: 247, column: 30, scope: !10746)
!10765 = !DILocalVariable(name: "pointer", scope: !10766, file: !1300, line: 248, type: !350, align: 8)
!10766 = !DILexicalBlockFile(scope: !10767, file: !1300, discriminator: 0)
!10767 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha394f9b77cfbb700E", scope: !9690, file: !1424, line: 190, type: !9691, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10768)
!10768 = !{!10765}
!10769 = !DILocation(line: 248, column: 23, scope: !10766, inlinedAt: !10770)
!10770 = !DILocation(line: 137, column: 9, scope: !10771, inlinedAt: !10777)
!10771 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h402fb84dbd01d497E", scope: !346, file: !1424, line: 136, type: !10772, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9702, retainedNodes: !10774)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{!346, !346}
!10774 = !{!10775}
!10775 = !DILocalVariable(name: "self", scope: !10776, file: !1300, line: 248, type: !346, align: 8)
!10776 = !DILexicalBlockFile(scope: !10771, file: !1300, discriminator: 0)
!10777 = !DILocation(line: 248, column: 23, scope: !10752)
!10778 = !DILocation(line: 241, column: 12, scope: !10746)
!10779 = !DILocation(line: 241, column: 40, scope: !10746)
!10780 = !DILocation(line: 247, column: 49, scope: !10746)
!10781 = !DILocation(line: 242, column: 13, scope: !10746)
!10782 = !DILocation(line: 241, column: 9, scope: !10746)
!10783 = !DILocation(line: 251, column: 6, scope: !10746)
!10784 = !DILocation(line: 247, column: 30, scope: !10761, inlinedAt: !10764)
!10785 = !DILocation(line: 247, column: 21, scope: !10752)
!10786 = !DILocation(line: 248, column: 23, scope: !10776, inlinedAt: !10777)
!10787 = !DILocalVariable(name: "self", scope: !10788, file: !1300, line: 248, type: !350, align: 8)
!10788 = !DILexicalBlockFile(scope: !10789, file: !1300, discriminator: 0)
!10789 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hdc2a6c3386363e81E", scope: !350, file: !1413, line: 453, type: !10790, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9702, retainedNodes: !10792)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{!350, !350}
!10792 = !{!10787}
!10793 = !DILocation(line: 248, column: 23, scope: !10788, inlinedAt: !10794)
!10794 = !DILocation(line: 137, column: 22, scope: !10771, inlinedAt: !10777)
!10795 = !DILocalVariable(name: "self", scope: !10796, file: !1300, line: 248, type: !350, align: 8)
!10796 = !DILexicalBlockFile(scope: !10797, file: !1300, discriminator: 0)
!10797 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10798)
!10798 = !{!10795}
!10799 = !DILocation(line: 248, column: 23, scope: !10796, inlinedAt: !10800)
!10800 = !DILocation(line: 455, column: 41, scope: !10789, inlinedAt: !10794)
!10801 = !DILocalVariable(name: "ptr", scope: !10802, file: !1300, line: 248, type: !1021, align: 8)
!10802 = !DILexicalBlockFile(scope: !10803, file: !1300, discriminator: 0)
!10803 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10804)
!10804 = !{!10801}
!10805 = !DILocation(line: 248, column: 23, scope: !10802, inlinedAt: !10806)
!10806 = !DILocation(line: 455, column: 18, scope: !10789, inlinedAt: !10794)
!10807 = !DILocation(line: 247, column: 30, scope: !10808, inlinedAt: !10810)
!10808 = !DILexicalBlockFile(scope: !10809, file: !1300, discriminator: 0)
!10809 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h837ae9793f44f7d6E", scope: !1497, file: !1496, line: 100, type: !179, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!10810 = !DILocation(line: 1525, column: 32, scope: !10756, inlinedAt: !10764)
!10811 = !DILocation(line: 248, column: 22, scope: !10752)
!10812 = !DILocation(line: 248, column: 17, scope: !10752)
!10813 = distinct !DISubprogram(name: "current_memory<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9516373acb554c32E", scope: !1193, file: !1300, line: 240, type: !10814, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !10816)
!10814 = !DISubroutineType(types: !10815)
!10815 = !{!10293, !8041}
!10816 = !{!10817, !10818}
!10817 = !DILocalVariable(name: "self", arg: 1, scope: !10813, file: !1300, line: 240, type: !8041)
!10818 = !DILocalVariable(name: "layout", scope: !10819, file: !1300, line: 247, type: !1463, align: 8)
!10819 = distinct !DILexicalBlock(scope: !10813, file: !1300, line: 247, column: 17)
!10820 = !DILocation(line: 240, column: 23, scope: !10813)
!10821 = !DILocalVariable(name: "self", scope: !10822, file: !1300, line: 247, type: !6427, align: 8)
!10822 = !DILexicalBlockFile(scope: !10823, file: !1300, discriminator: 0)
!10823 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h8605521870e31e57E", scope: !6427, file: !1782, line: 1520, type: !10757, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !6435, retainedNodes: !10824)
!10824 = !{!10821, !10825}
!10825 = !DILocalVariable(name: "t", scope: !10826, file: !1300, line: 247, type: !1463, align: 8)
!10826 = !DILexicalBlockFile(scope: !10827, file: !1300, discriminator: 0)
!10827 = distinct !DILexicalBlock(scope: !10823, file: !1782, line: 1523, column: 13)
!10828 = !DILocation(line: 247, column: 30, scope: !10822, inlinedAt: !10829)
!10829 = !DILocation(line: 247, column: 30, scope: !10813)
!10830 = !DILocalVariable(name: "pointer", scope: !10831, file: !1300, line: 248, type: !350, align: 8)
!10831 = !DILexicalBlockFile(scope: !10832, file: !1300, discriminator: 0)
!10832 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17ha394f9b77cfbb700E", scope: !9690, file: !1424, line: 190, type: !9691, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10833)
!10833 = !{!10830}
!10834 = !DILocation(line: 248, column: 23, scope: !10831, inlinedAt: !10835)
!10835 = !DILocation(line: 137, column: 9, scope: !10836, inlinedAt: !10843)
!10836 = distinct !DISubprogram(name: "cast<&str, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h024bd60b34329f7cE", scope: !1196, file: !1424, line: 136, type: !10837, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10842, retainedNodes: !10839)
!10837 = !DISubroutineType(types: !10838)
!10838 = !{!346, !1196}
!10839 = !{!10840}
!10840 = !DILocalVariable(name: "self", scope: !10841, file: !1300, line: 248, type: !1196, align: 8)
!10841 = !DILexicalBlockFile(scope: !10836, file: !1300, discriminator: 0)
!10842 = !{!1204, !1958}
!10843 = !DILocation(line: 248, column: 23, scope: !10819)
!10844 = !DILocation(line: 241, column: 12, scope: !10813)
!10845 = !DILocation(line: 241, column: 40, scope: !10813)
!10846 = !DILocation(line: 247, column: 49, scope: !10813)
!10847 = !DILocation(line: 242, column: 13, scope: !10813)
!10848 = !DILocation(line: 241, column: 9, scope: !10813)
!10849 = !DILocation(line: 251, column: 6, scope: !10813)
!10850 = !DILocation(line: 247, column: 30, scope: !10826, inlinedAt: !10829)
!10851 = !DILocation(line: 247, column: 21, scope: !10819)
!10852 = !DILocation(line: 248, column: 23, scope: !10841, inlinedAt: !10843)
!10853 = !DILocalVariable(name: "self", scope: !10854, file: !1300, line: 248, type: !1199, align: 8)
!10854 = !DILexicalBlockFile(scope: !10855, file: !1300, discriminator: 0)
!10855 = distinct !DISubprogram(name: "cast<&str, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfa70e56adb3b84e8E", scope: !1199, file: !1413, line: 453, type: !10856, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10842, retainedNodes: !10858)
!10856 = !DISubroutineType(types: !10857)
!10857 = !{!350, !1199}
!10858 = !{!10853}
!10859 = !DILocation(line: 248, column: 23, scope: !10854, inlinedAt: !10860)
!10860 = !DILocation(line: 137, column: 22, scope: !10836, inlinedAt: !10843)
!10861 = !DILocalVariable(name: "self", scope: !10862, file: !1300, line: 248, type: !1199, align: 8)
!10862 = !DILexicalBlockFile(scope: !10863, file: !1300, discriminator: 0)
!10863 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !10864)
!10864 = !{!10861}
!10865 = !DILocation(line: 248, column: 23, scope: !10862, inlinedAt: !10866)
!10866 = !DILocation(line: 455, column: 41, scope: !10855, inlinedAt: !10860)
!10867 = !DILocalVariable(name: "ptr", scope: !10868, file: !1300, line: 248, type: !1021, align: 8)
!10868 = !DILexicalBlockFile(scope: !10869, file: !1300, discriminator: 0)
!10869 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !10870)
!10870 = !{!10867}
!10871 = !DILocation(line: 248, column: 23, scope: !10868, inlinedAt: !10872)
!10872 = !DILocation(line: 455, column: 18, scope: !10855, inlinedAt: !10860)
!10873 = !DILocation(line: 247, column: 30, scope: !10874, inlinedAt: !10876)
!10874 = !DILexicalBlockFile(scope: !10875, file: !1300, discriminator: 0)
!10875 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h837ae9793f44f7d6E", scope: !1497, file: !1496, line: 100, type: !179, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!10876 = !DILocation(line: 1525, column: 32, scope: !10823, inlinedAt: !10829)
!10877 = !DILocation(line: 248, column: 22, scope: !10819)
!10878 = !DILocation(line: 248, column: 17, scope: !10819)
!10879 = distinct !DISubprogram(name: "grow_amortized<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h987b5bcb2ce470f8E", scope: !1193, file: !1300, line: 379, type: !10880, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !10883)
!10880 = !DISubroutineType(types: !10881)
!10881 = !{!7417, !10882, !9, !9}
!10882 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<&str, alloc::alloc::Global>", baseType: !1193, size: 64, align: 64, dwarfAddressSpace: 0)
!10883 = !{!10884, !10885, !10886, !10887, !10889, !10891, !10893, !10895, !10897, !10899, !10901, !10903}
!10884 = !DILocalVariable(name: "self", arg: 1, scope: !10879, file: !1300, line: 379, type: !10882)
!10885 = !DILocalVariable(name: "len", arg: 2, scope: !10879, file: !1300, line: 379, type: !9)
!10886 = !DILocalVariable(name: "additional", arg: 3, scope: !10879, file: !1300, line: 379, type: !9)
!10887 = !DILocalVariable(name: "required_cap", scope: !10888, file: !1300, line: 390, type: !9, align: 8)
!10888 = distinct !DILexicalBlock(scope: !10879, file: !1300, line: 390, column: 9)
!10889 = !DILocalVariable(name: "residual", scope: !10890, file: !1300, line: 390, type: !10319, align: 8)
!10890 = distinct !DILexicalBlock(scope: !10879, file: !1300, line: 390, column: 79)
!10891 = !DILocalVariable(name: "val", scope: !10892, file: !1300, line: 390, type: !9, align: 8)
!10892 = distinct !DILexicalBlock(scope: !10879, file: !1300, line: 390, column: 28)
!10893 = !DILocalVariable(name: "cap", scope: !10894, file: !1300, line: 394, type: !9, align: 8)
!10894 = distinct !DILexicalBlock(scope: !10888, file: !1300, line: 394, column: 9)
!10895 = !DILocalVariable(name: "cap", scope: !10896, file: !1300, line: 395, type: !9, align: 8)
!10896 = distinct !DILexicalBlock(scope: !10894, file: !1300, line: 395, column: 9)
!10897 = !DILocalVariable(name: "new_layout", scope: !10898, file: !1300, line: 397, type: !6427, align: 8)
!10898 = distinct !DILexicalBlock(scope: !10896, file: !1300, line: 397, column: 9)
!10899 = !DILocalVariable(name: "ptr", scope: !10900, file: !1300, line: 400, type: !7358, align: 8)
!10900 = distinct !DILexicalBlock(scope: !10898, file: !1300, line: 400, column: 9)
!10901 = !DILocalVariable(name: "residual", scope: !10902, file: !1300, line: 400, type: !10336, align: 8)
!10902 = distinct !DILexicalBlock(scope: !10898, file: !1300, line: 400, column: 82)
!10903 = !DILocalVariable(name: "val", scope: !10904, file: !1300, line: 400, type: !7358, align: 8)
!10904 = distinct !DILexicalBlock(scope: !10898, file: !1300, line: 400, column: 19)
!10905 = !DILocation(line: 379, column: 23, scope: !10879)
!10906 = !DILocation(line: 379, column: 34, scope: !10879)
!10907 = !DILocation(line: 379, column: 46, scope: !10879)
!10908 = !DILocalVariable(name: "self", scope: !10909, file: !1300, line: 390, type: !10927, align: 8)
!10909 = !DILexicalBlockFile(scope: !10910, file: !1300, discriminator: 0)
!10910 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4f2dea10047a083cE", scope: !2662, file: !1782, line: 2117, type: !10911, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10935, retainedNodes: !10941)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!10913, !10927}
!10913 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !2666, file: !2, size: 192, align: 64, elements: !10914, templateParams: !28, identifier: "aaa47d4c01b9e814e1128564379fb1ed")
!10914 = !{!10915}
!10915 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10913, file: !2, size: 192, align: 64, elements: !10916, templateParams: !28, identifier: "52bc498f97dcf0aebe4be722096289fa", discriminator: !10926)
!10916 = !{!10917, !10922}
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !10915, file: !2, baseType: !10918, size: 192, align: 64, extraData: i64 0)
!10918 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !10913, file: !2, size: 192, align: 64, elements: !10919, templateParams: !10921, identifier: "aa7cd1170a8c6991d015bac63ac068a0")
!10919 = !{!10920}
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10918, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!10921 = !{!10382, !6531}
!10922 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !10915, file: !2, baseType: !10923, size: 192, align: 64, extraData: i64 1)
!10923 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !10913, file: !2, size: 192, align: 64, elements: !10924, templateParams: !10921, identifier: "364459b0de7a7982990d34cdf2f986eb")
!10924 = !{!10925}
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10923, file: !2, baseType: !10319, size: 128, align: 64, offset: 64)
!10926 = !DIDerivedType(tag: DW_TAG_member, scope: !10913, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!10927 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !31, file: !2, size: 192, align: 64, elements: !10928, templateParams: !28, identifier: "3631237889770fa7267d5501216770d")
!10928 = !{!10929}
!10929 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10927, file: !2, size: 192, align: 64, elements: !10930, templateParams: !28, identifier: "1d1f45ee59d9f1cfc391058ed79e0cae", discriminator: !10940)
!10930 = !{!10931, !10936}
!10931 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10929, file: !2, baseType: !10932, size: 192, align: 64, extraData: i64 0)
!10932 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10927, file: !2, size: 192, align: 64, elements: !10933, templateParams: !10935, identifier: "e350c9849d9dffdf1ffb40e48a20f918")
!10933 = !{!10934}
!10934 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10932, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!10935 = !{!224, !7442}
!10936 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10929, file: !2, baseType: !10937, size: 192, align: 64, extraData: i64 1)
!10937 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10927, file: !2, size: 192, align: 64, elements: !10938, templateParams: !10935, identifier: "4805f2b2529d263fd0f1d3d0e43e54f8")
!10938 = !{!10939}
!10939 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10937, file: !2, baseType: !1453, size: 128, align: 64, offset: 64)
!10940 = !DIDerivedType(tag: DW_TAG_member, scope: !10927, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!10941 = !{!10908, !10942, !10945}
!10942 = !DILocalVariable(name: "v", scope: !10943, file: !1300, line: 390, type: !9, align: 8)
!10943 = !DILexicalBlockFile(scope: !10944, file: !1300, discriminator: 0)
!10944 = distinct !DILexicalBlock(scope: !10910, file: !1782, line: 2119, column: 13)
!10945 = !DILocalVariable(name: "e", scope: !10946, file: !1300, line: 390, type: !1453, align: 8)
!10946 = !DILexicalBlockFile(scope: !10947, file: !1300, discriminator: 0)
!10947 = distinct !DILexicalBlock(scope: !10910, file: !1782, line: 2120, column: 13)
!10948 = !DILocation(line: 390, column: 28, scope: !10909, inlinedAt: !10949)
!10949 = !DILocation(line: 390, column: 28, scope: !10879)
!10950 = !DILocalVariable(name: "self", scope: !10951, file: !1300, line: 390, type: !1740, align: 8)
!10951 = !DILexicalBlockFile(scope: !10952, file: !1300, discriminator: 0)
!10952 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h304856120c19bd02E", scope: !1740, file: !1848, line: 1051, type: !10953, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10935, retainedNodes: !10955)
!10953 = !DISubroutineType(types: !10954)
!10954 = !{!10927, !1740, !1453}
!10955 = !{!10950, !10956, !10957}
!10956 = !DILocalVariable(name: "err", scope: !10951, file: !1300, line: 390, type: !1453, align: 8)
!10957 = !DILocalVariable(name: "v", scope: !10958, file: !1300, line: 390, type: !9, align: 8)
!10958 = !DILexicalBlockFile(scope: !10959, file: !1300, discriminator: 0)
!10959 = distinct !DILexicalBlock(scope: !10952, file: !1848, line: 1056, column: 13)
!10960 = !DILocation(line: 390, column: 28, scope: !10951, inlinedAt: !10949)
!10961 = !DILocalVariable(name: "residual", scope: !10962, file: !1300, line: 390, type: !10319, align: 8)
!10962 = !DILexicalBlockFile(scope: !10963, file: !1300, discriminator: 0)
!10963 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hadd5934f849d816aE", scope: !2709, file: !1782, line: 2132, type: !10964, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10970, retainedNodes: !10966)
!10964 = !DISubroutineType(types: !10965)
!10965 = !{!7417, !10319, !1109}
!10966 = !{!10961, !10967}
!10967 = !DILocalVariable(name: "e", scope: !10968, file: !1300, line: 390, type: !1453, align: 8)
!10968 = !DILexicalBlockFile(scope: !10969, file: !1300, discriminator: 0)
!10969 = distinct !DILexicalBlock(scope: !10963, file: !1782, line: 2134, column: 13)
!10970 = !{!41, !7442, !7400}
!10971 = !DILocation(line: 390, column: 28, scope: !10962, inlinedAt: !10972)
!10972 = !DILocation(line: 390, column: 28, scope: !10890)
!10973 = !DILocalVariable(name: "self", scope: !10974, file: !1300, line: 400, type: !7372, align: 8)
!10974 = !DILexicalBlockFile(scope: !10975, file: !1300, discriminator: 0)
!10975 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h5805a4ee6d7fb4bcE", scope: !2662, file: !1782, line: 2117, type: !10976, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7380, retainedNodes: !10992)
!10976 = !DISubroutineType(types: !10977)
!10977 = !{!10978, !7372}
!10978 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !2666, file: !2, size: 192, align: 64, elements: !10979, templateParams: !28, identifier: "79c6e5125639b127cfa81db755c4cffd")
!10979 = !{!10980}
!10980 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10978, file: !2, size: 192, align: 64, elements: !10981, templateParams: !28, identifier: "bdca6637e968c25e4fe4c2dfef1c199f", discriminator: !10991)
!10981 = !{!10982, !10987}
!10982 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !10980, file: !2, baseType: !10983, size: 192, align: 64, extraData: i64 0)
!10983 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !10978, file: !2, size: 192, align: 64, elements: !10984, templateParams: !10986, identifier: "15ba5a416f94883524aa415e9e484c18")
!10984 = !{!10985}
!10985 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10983, file: !2, baseType: !7358, size: 128, align: 64, offset: 64)
!10986 = !{!10424, !9346}
!10987 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !10980, file: !2, baseType: !10988, size: 192, align: 64, extraData: i64 1)
!10988 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !10978, file: !2, size: 192, align: 64, elements: !10989, templateParams: !10986, identifier: "e100a24ff060842f7e06542fb969c57c")
!10989 = !{!10990}
!10990 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10988, file: !2, baseType: !10336, size: 128, align: 64, offset: 64)
!10991 = !DIDerivedType(tag: DW_TAG_member, scope: !10978, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!10992 = !{!10973, !10993, !10996}
!10993 = !DILocalVariable(name: "v", scope: !10994, file: !1300, line: 400, type: !7358, align: 8)
!10994 = !DILexicalBlockFile(scope: !10995, file: !1300, discriminator: 0)
!10995 = distinct !DILexicalBlock(scope: !10975, file: !1782, line: 2119, column: 13)
!10996 = !DILocalVariable(name: "e", scope: !10997, file: !1300, line: 400, type: !1450, align: 8)
!10997 = !DILexicalBlockFile(scope: !10998, file: !1300, discriminator: 0)
!10998 = distinct !DILexicalBlock(scope: !10975, file: !1782, line: 2120, column: 13)
!10999 = !DILocation(line: 400, column: 19, scope: !10974, inlinedAt: !11000)
!11000 = !DILocation(line: 400, column: 19, scope: !10898)
!11001 = !DILocalVariable(name: "residual", scope: !11002, file: !1300, line: 400, type: !10336, align: 8)
!11002 = !DILexicalBlockFile(scope: !11003, file: !1300, discriminator: 0)
!11003 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hdc76c9d3eeb9df58E", scope: !2709, file: !1782, line: 2132, type: !11004, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !11010, retainedNodes: !11006)
!11004 = !DISubroutineType(types: !11005)
!11005 = !{!7417, !10336, !1109}
!11006 = !{!11001, !11007}
!11007 = !DILocalVariable(name: "e", scope: !11008, file: !1300, line: 400, type: !1450, align: 8)
!11008 = !DILexicalBlockFile(scope: !11009, file: !1300, discriminator: 0)
!11009 = distinct !DILexicalBlock(scope: !11003, file: !1782, line: 2134, column: 13)
!11010 = !{!41, !7381, !7400}
!11011 = !DILocation(line: 400, column: 19, scope: !11002, inlinedAt: !11012)
!11012 = !DILocation(line: 400, column: 19, scope: !10902)
!11013 = !DILocation(line: 383, column: 12, scope: !10879)
!11014 = !DILocation(line: 386, column: 24, scope: !10879)
!11015 = !DILocation(line: 390, column: 62, scope: !10879)
!11016 = !DILocation(line: 390, column: 28, scope: !10958, inlinedAt: !10949)
!11017 = !DILocation(line: 390, column: 28, scope: !10943, inlinedAt: !10949)
!11018 = !DILocation(line: 390, column: 28, scope: !10946, inlinedAt: !10949)
!11019 = !DILocation(line: 390, column: 28, scope: !10892)
!11020 = !DILocation(line: 390, column: 13, scope: !10888)
!11021 = !DILocation(line: 394, column: 28, scope: !10888)
!11022 = !DILocalVariable(name: "v1", scope: !11023, file: !1300, line: 394, type: !9, align: 8)
!11023 = !DILexicalBlockFile(scope: !11024, file: !1300, discriminator: 0)
!11024 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hde53ba2d9ea02064E", scope: !865, file: !1337, line: 1278, type: !1329, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11025)
!11025 = !{!11022, !11026}
!11026 = !DILocalVariable(name: "v2", scope: !11023, file: !1300, line: 394, type: !9, align: 8)
!11027 = !DILocation(line: 394, column: 19, scope: !11023, inlinedAt: !11028)
!11028 = !DILocation(line: 394, column: 19, scope: !10888)
!11029 = !DILocation(line: 394, column: 42, scope: !10888)
!11030 = !DILocation(line: 394, column: 13, scope: !10894)
!11031 = !DILocation(line: 390, column: 79, scope: !10879)
!11032 = !DILocation(line: 390, column: 79, scope: !10890)
!11033 = !DILocation(line: 390, column: 28, scope: !10968, inlinedAt: !10972)
!11034 = !DILocalVariable(name: "kind", scope: !11035, file: !1300, line: 390, type: !1453, align: 8)
!11035 = !DILexicalBlockFile(scope: !11036, file: !1300, discriminator: 0)
!11036 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h6e98c5d1da63f7d0E", scope: !1446, file: !1445, line: 116, type: !1448, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11037)
!11037 = !{!11034}
!11038 = !DILocation(line: 390, column: 28, scope: !11035, inlinedAt: !11039)
!11039 = !DILocation(line: 2134, column: 27, scope: !10969, inlinedAt: !10972)
!11040 = !DILocation(line: 1, column: 1, scope: !11041)
!11041 = !DILexicalBlockFile(scope: !10879, file: !1610, discriminator: 0)
!11042 = !DILocation(line: 395, column: 52, scope: !10894)
!11043 = !DILocalVariable(name: "v2", scope: !11044, file: !1300, line: 395, type: !9, align: 8)
!11044 = !DILexicalBlockFile(scope: !11045, file: !1300, discriminator: 0)
!11045 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hde53ba2d9ea02064E", scope: !865, file: !1337, line: 1278, type: !1329, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11046)
!11046 = !{!11047, !11043}
!11047 = !DILocalVariable(name: "v1", scope: !11044, file: !1300, line: 395, type: !9, align: 8)
!11048 = !DILocation(line: 395, column: 19, scope: !11044, inlinedAt: !11049)
!11049 = !DILocation(line: 395, column: 19, scope: !10894)
!11050 = !DILocation(line: 395, column: 13, scope: !10896)
!11051 = !DILocation(line: 397, column: 26, scope: !10896)
!11052 = !DILocation(line: 397, column: 13, scope: !10898)
!11053 = !DILocation(line: 400, column: 43, scope: !10898)
!11054 = !DILocation(line: 400, column: 66, scope: !10898)
!11055 = !DILocation(line: 400, column: 19, scope: !10994, inlinedAt: !11000)
!11056 = !DILocation(line: 400, column: 19, scope: !10997, inlinedAt: !11000)
!11057 = !DILocation(line: 400, column: 19, scope: !10904)
!11058 = !DILocation(line: 400, column: 13, scope: !10900)
!11059 = !DILocation(line: 401, column: 9, scope: !10900)
!11060 = !DILocation(line: 400, column: 82, scope: !10898)
!11061 = !DILocation(line: 400, column: 82, scope: !10902)
!11062 = !DILocation(line: 400, column: 19, scope: !11008, inlinedAt: !11012)
!11063 = !DILocation(line: 1, column: 1, scope: !11064)
!11064 = !DILexicalBlockFile(scope: !10888, file: !1610, discriminator: 0)
!11065 = !DILocation(line: 403, column: 6, scope: !10879)
!11066 = !DILocation(line: 402, column: 9, scope: !10900)
!11067 = !DILocation(line: 386, column: 20, scope: !10879)
!11068 = distinct !DISubprogram(name: "set_ptr_and_cap<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17hd96ee3a8641a3a12E", scope: !1193, file: !1300, line: 364, type: !11069, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !11071)
!11069 = !DISubroutineType(types: !11070)
!11070 = !{null, !10882, !7358, !9}
!11071 = !{!11072, !11073, !11074}
!11072 = !DILocalVariable(name: "self", arg: 1, scope: !11068, file: !1300, line: 364, type: !10882)
!11073 = !DILocalVariable(name: "ptr", arg: 2, scope: !11068, file: !1300, line: 364, type: !7358)
!11074 = !DILocalVariable(name: "cap", arg: 3, scope: !11068, file: !1300, line: 364, type: !9)
!11075 = !DILocation(line: 364, column: 24, scope: !11068)
!11076 = !DILocation(line: 364, column: 35, scope: !11068)
!11077 = !DILocation(line: 364, column: 55, scope: !11068)
!11078 = !DILocalVariable(name: "self", scope: !11079, file: !1300, line: 368, type: !1199, align: 8)
!11079 = !DILexicalBlockFile(scope: !11080, file: !1300, discriminator: 0)
!11080 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !11081)
!11081 = !{!11078}
!11082 = !DILocation(line: 368, column: 51, scope: !11079, inlinedAt: !11083)
!11083 = !DILocation(line: 368, column: 51, scope: !11068)
!11084 = !DILocalVariable(name: "self", scope: !11085, file: !1300, line: 368, type: !7358, align: 8)
!11085 = !DILexicalBlockFile(scope: !11086, file: !1300, discriminator: 0)
!11086 = distinct !DISubprogram(name: "cast<[u8], &str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3f741da44e5ca4a1E", scope: !7358, file: !1413, line: 453, type: !10688, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !10691, retainedNodes: !11087)
!11087 = !{!11084}
!11088 = !DILocation(line: 368, column: 51, scope: !11085, inlinedAt: !11083)
!11089 = !DILocalVariable(name: "self", scope: !11090, file: !1300, line: 368, type: !7358, align: 8)
!11090 = !DILexicalBlockFile(scope: !11091, file: !1300, discriminator: 0)
!11091 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfc08d8add39eb4c7E", scope: !7358, file: !1413, line: 330, type: !8900, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11092)
!11092 = !{!11089}
!11093 = !DILocation(line: 368, column: 51, scope: !11090, inlinedAt: !11094)
!11094 = !DILocation(line: 455, column: 41, scope: !11086, inlinedAt: !11083)
!11095 = !DILocalVariable(name: "ptr", scope: !11096, file: !1300, line: 368, type: !1275, align: 8)
!11096 = !DILexicalBlockFile(scope: !11097, file: !1300, discriminator: 0)
!11097 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9a2436cafa99480dE", scope: !1199, file: !1413, line: 196, type: !7119, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !11098)
!11098 = !{!11095}
!11099 = !DILocation(line: 368, column: 51, scope: !11096, inlinedAt: !11100)
!11100 = !DILocation(line: 455, column: 18, scope: !11086, inlinedAt: !11083)
!11101 = !DILocalVariable(name: "ptr", scope: !11102, file: !1300, line: 368, type: !1275, align: 8)
!11102 = !DILexicalBlockFile(scope: !11103, file: !1300, discriminator: 0)
!11103 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h914d9b1eaebd3354E", scope: !1196, file: !1424, line: 85, type: !10708, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !11104)
!11104 = !{!11101}
!11105 = !DILocation(line: 368, column: 29, scope: !11102, inlinedAt: !11106)
!11106 = !DILocation(line: 368, column: 29, scope: !11068)
!11107 = !DILocalVariable(name: "ptr", scope: !11108, file: !1300, line: 368, type: !1275, align: 8)
!11108 = !DILexicalBlockFile(scope: !11109, file: !1300, discriminator: 0)
!11109 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9a2436cafa99480dE", scope: !1199, file: !1413, line: 196, type: !7119, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !11110)
!11110 = !{!11107}
!11111 = !DILocation(line: 368, column: 29, scope: !11108, inlinedAt: !11112)
!11112 = !DILocation(line: 87, column: 36, scope: !11103, inlinedAt: !11106)
!11113 = !DILocation(line: 368, column: 9, scope: !11068)
!11114 = !DILocation(line: 369, column: 9, scope: !11068)
!11115 = !DILocation(line: 370, column: 6, scope: !11068)
!11116 = distinct !DISubprogram(name: "new_in<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h753802f2aa00204aE", scope: !1193, file: !1300, line: 121, type: !11117, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !11119)
!11117 = !DISubroutineType(types: !11118)
!11118 = !{!1193, !358}
!11119 = !{!11120}
!11120 = !DILocalVariable(name: "alloc", arg: 1, scope: !11116, file: !1300, line: 121, type: !358)
!11121 = !DILocation(line: 121, column: 25, scope: !11116)
!11122 = !DILocalVariable(name: "pointer", scope: !11123, file: !1300, line: 123, type: !1199, align: 8)
!11123 = !DILexicalBlockFile(scope: !11124, file: !1300, discriminator: 0)
!11124 = distinct !DISubprogram(name: "from<&str>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h81d07cdee966a33bE", scope: !9690, file: !1424, line: 190, type: !11125, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !11127)
!11125 = !DISubroutineType(types: !11126)
!11126 = !{!1196, !1199}
!11127 = !{!11122}
!11128 = !DILocation(line: 123, column: 21, scope: !11123, inlinedAt: !11129)
!11129 = !DILocation(line: 73, column: 9, scope: !11130, inlinedAt: !11133)
!11130 = distinct !DISubprogram(name: "dangling<&str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h27f308608836297bE", scope: !1196, file: !1424, line: 72, type: !11131, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !28)
!11131 = !DISubroutineType(types: !11132)
!11132 = !{!1196}
!11133 = !DILocation(line: 123, column: 21, scope: !11116)
!11134 = !DILocation(line: 123, column: 21, scope: !11135, inlinedAt: !11137)
!11135 = !DILexicalBlockFile(scope: !11136, file: !1300, discriminator: 0)
!11136 = distinct !DISubprogram(name: "align_of<&str>", linkageName: "_ZN4core3mem8align_of17h20f544c066bc4021E", scope: !789, file: !3835, line: 464, type: !2774, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !28)
!11137 = !DILocation(line: 95, column: 52, scope: !11138, inlinedAt: !11145)
!11138 = distinct !DISubprogram(name: "dangling<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h9d453eb84540b249E", scope: !1199, file: !1413, line: 90, type: !11139, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !11141)
!11139 = !DISubroutineType(types: !11140)
!11140 = !{!1199}
!11141 = !{!11142}
!11142 = !DILocalVariable(name: "ptr", scope: !11143, file: !1300, line: 123, type: !1275, align: 8)
!11143 = !DILexicalBlockFile(scope: !11144, file: !1300, discriminator: 0)
!11144 = distinct !DILexicalBlock(scope: !11138, file: !1413, line: 95, column: 13)
!11145 = !DILocation(line: 73, column: 20, scope: !11130, inlinedAt: !11133)
!11146 = !DILocalVariable(name: "addr", scope: !11147, file: !1300, line: 123, type: !9, align: 8)
!11147 = !DILexicalBlockFile(scope: !11148, file: !1300, discriminator: 0)
!11148 = distinct !DISubprogram(name: "invalid_mut<&str>", linkageName: "_ZN4core3ptr11invalid_mut17h6afb0ee3588dd89eE", scope: !53, file: !959, line: 569, type: !11149, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !11151)
!11149 = !DISubroutineType(types: !11150)
!11150 = !{!1275, !9}
!11151 = !{!11146}
!11152 = !DILocation(line: 123, column: 21, scope: !11147, inlinedAt: !11153)
!11153 = !DILocation(line: 95, column: 23, scope: !11138, inlinedAt: !11145)
!11154 = !DILocation(line: 123, column: 21, scope: !11143, inlinedAt: !11145)
!11155 = !DILocalVariable(name: "ptr", scope: !11156, file: !1300, line: 123, type: !1275, align: 8)
!11156 = !DILexicalBlockFile(scope: !11157, file: !1300, discriminator: 0)
!11157 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9a2436cafa99480dE", scope: !1199, file: !1413, line: 196, type: !7119, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !11158)
!11158 = !{!11155}
!11159 = !DILocation(line: 123, column: 21, scope: !11156, inlinedAt: !11160)
!11160 = !DILocation(line: 96, column: 13, scope: !11144, inlinedAt: !11145)
!11161 = !DILocation(line: 123, column: 9, scope: !11116)
!11162 = !DILocation(line: 124, column: 6, scope: !11116)
!11163 = !DILocation(line: 124, column: 5, scope: !11116)
!11164 = !DILocation(line: 121, column: 5, scope: !11116)
!11165 = distinct !DISubprogram(name: "reserve<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h06188d9f7d316e3dE", scope: !1193, file: !1300, line: 274, type: !11166, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !11168)
!11166 = !DISubroutineType(types: !11167)
!11167 = !{null, !10882, !9, !9}
!11168 = !{!11169, !11170, !11171}
!11169 = !DILocalVariable(name: "self", arg: 1, scope: !11165, file: !1300, line: 274, type: !10882)
!11170 = !DILocalVariable(name: "len", arg: 2, scope: !11165, file: !1300, line: 274, type: !9)
!11171 = !DILocalVariable(name: "additional", arg: 3, scope: !11165, file: !1300, line: 274, type: !9)
!11172 = !DILocation(line: 274, column: 20, scope: !11165)
!11173 = !DILocation(line: 274, column: 31, scope: !11165)
!11174 = !DILocation(line: 274, column: 43, scope: !11165)
!11175 = !DILocation(line: 288, column: 12, scope: !11165)
!11176 = !DILocation(line: 291, column: 6, scope: !11165)
!11177 = !DILocation(line: 289, column: 13, scope: !11165)
!11178 = !DILocation(line: 288, column: 9, scope: !11165)
!11179 = distinct !DISubprogram(name: "do_reserve_and_handle<&str, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9c45ec13005a0ab5E", scope: !11180, file: !1300, line: 280, type: !11166, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !11182)
!11180 = !DINamespace(name: "reserve", scope: !11181)
!11181 = !DINamespace(name: "{impl#1}", scope: !343)
!11182 = !{!11183, !11184, !11185}
!11183 = !DILocalVariable(name: "slf", arg: 1, scope: !11179, file: !1300, line: 281, type: !10882)
!11184 = !DILocalVariable(name: "len", arg: 2, scope: !11179, file: !1300, line: 282, type: !9)
!11185 = !DILocalVariable(name: "additional", arg: 3, scope: !11179, file: !1300, line: 283, type: !9)
!11186 = !DILocation(line: 281, column: 13, scope: !11179)
!11187 = !DILocation(line: 282, column: 13, scope: !11179)
!11188 = !DILocation(line: 283, column: 13, scope: !11179)
!11189 = !DILocation(line: 285, column: 28, scope: !11179)
!11190 = !DILocation(line: 285, column: 13, scope: !11179)
!11191 = !DILocation(line: 286, column: 10, scope: !11179)
!11192 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<i32>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h28601dbc0e3e9f29E", scope: !5448, file: !5447, line: 271, type: !11193, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !11197, retainedNodes: !11195)
!11193 = !DISubroutineType(types: !11194)
!11194 = !{!3577, !3577}
!11195 = !{!11196}
!11196 = !DILocalVariable(name: "self", arg: 1, scope: !11192, file: !5447, line: 271, type: !3577)
!11197 = !{!3805}
!11198 = !DILocation(line: 271, column: 18, scope: !11192)
!11199 = !DILocation(line: 273, column: 6, scope: !11192)
!11200 = distinct !DISubprogram(name: "into_iter<core::str::iter::Lines>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf62c8bb5b8244d66E", scope: !5448, file: !5447, line: 271, type: !11201, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !11205, retainedNodes: !11203)
!11201 = !DISubroutineType(types: !11202)
!11202 = !{!1211, !1211}
!11203 = !{!11204}
!11204 = !DILocalVariable(name: "self", arg: 1, scope: !11200, file: !5447, line: 271, type: !1211)
!11205 = !{!1266}
!11206 = !DILocation(line: 271, column: 18, scope: !11200)
!11207 = !DILocation(line: 272, column: 9, scope: !11200)
!11208 = !DILocation(line: 273, column: 6, scope: !11200)
!11209 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h0f2ecd0c98b229ceE", scope: !8878, file: !8831, line: 246, type: !11210, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11212)
!11210 = !DISubroutineType(types: !11211)
!11211 = !{null, !8881, !350, !1463}
!11212 = !{!11213, !11214, !11215}
!11213 = !DILocalVariable(name: "self", arg: 1, scope: !11209, file: !8831, line: 246, type: !8881)
!11214 = !DILocalVariable(name: "ptr", arg: 2, scope: !11209, file: !8831, line: 246, type: !350)
!11215 = !DILocalVariable(name: "layout", arg: 3, scope: !11209, file: !8831, line: 246, type: !1463)
!11216 = !DILocation(line: 246, column: 26, scope: !11209)
!11217 = !DILocation(line: 246, column: 33, scope: !11209)
!11218 = !DILocation(line: 246, column: 51, scope: !11209)
!11219 = !DILocalVariable(name: "layout", scope: !11220, file: !8831, line: 250, type: !1463, align: 8)
!11220 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h5a795f0c30030555E", scope: !359, file: !8831, line: 112, type: !11221, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11223)
!11221 = !DISubroutineType(types: !11222)
!11222 = !{null, !1021, !1463}
!11223 = !{!11224, !11219}
!11224 = !DILocalVariable(name: "ptr", scope: !11220, file: !8831, line: 250, type: !1021, align: 8)
!11225 = !DILocation(line: 250, column: 22, scope: !11220, inlinedAt: !11226)
!11226 = !DILocation(line: 250, column: 22, scope: !11209)
!11227 = !DILocalVariable(name: "self", scope: !11228, file: !8831, line: 250, type: !6453, align: 8)
!11228 = !DILexicalBlockFile(scope: !11229, file: !8831, discriminator: 0)
!11229 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h09d460f87c3b799fE", scope: !6453, file: !6452, line: 82, type: !6456, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11230)
!11230 = !{!11227}
!11231 = !DILocation(line: 250, column: 22, scope: !11228, inlinedAt: !11232)
!11232 = !DILocation(line: 131, column: 9, scope: !11233, inlinedAt: !11237)
!11233 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17hcc873a2004b83507E", scope: !1463, file: !6221, line: 130, type: !9050, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11234)
!11234 = !{!11235}
!11235 = !DILocalVariable(name: "self", scope: !11236, file: !8831, line: 250, type: !7391, align: 8)
!11236 = !DILexicalBlockFile(scope: !11233, file: !8831, discriminator: 0)
!11237 = !DILocation(line: 113, column: 49, scope: !11220, inlinedAt: !11226)
!11238 = !DILocalVariable(name: "self", scope: !11239, file: !8831, line: 250, type: !1469, align: 8)
!11239 = !DILexicalBlockFile(scope: !11240, file: !8831, discriminator: 0)
!11240 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h3972d567cabde011E", scope: !1469, file: !6264, line: 39, type: !6464, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11241)
!11241 = !{!11238}
!11242 = !DILocation(line: 250, column: 22, scope: !11239, inlinedAt: !11232)
!11243 = !DILocation(line: 247, column: 12, scope: !11209)
!11244 = !DILocalVariable(name: "self", scope: !11245, file: !8831, line: 247, type: !7391, align: 8)
!11245 = !DILexicalBlockFile(scope: !11246, file: !8831, discriminator: 0)
!11246 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9fadd9fb1273c9d1E", scope: !1463, file: !6221, line: 120, type: !9050, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11247)
!11247 = !{!11244}
!11248 = !DILocation(line: 247, column: 12, scope: !11245, inlinedAt: !11243)
!11249 = !DILocation(line: 247, column: 9, scope: !11209)
!11250 = !DILocation(line: 250, column: 30, scope: !11209)
!11251 = !DILocalVariable(name: "self", scope: !11252, file: !8831, line: 250, type: !350, align: 8)
!11252 = !DILexicalBlockFile(scope: !11253, file: !8831, discriminator: 0)
!11253 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11254)
!11254 = !{!11251}
!11255 = !DILocation(line: 250, column: 30, scope: !11252, inlinedAt: !11250)
!11256 = !DILocation(line: 250, column: 44, scope: !11209)
!11257 = !DILocalVariable(name: "self", scope: !11258, file: !8831, line: 250, type: !7391, align: 8)
!11258 = !DILexicalBlockFile(scope: !11259, file: !8831, discriminator: 0)
!11259 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h9fadd9fb1273c9d1E", scope: !1463, file: !6221, line: 120, type: !9050, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11260)
!11260 = !{!11257}
!11261 = !DILocation(line: 250, column: 22, scope: !11258, inlinedAt: !11262)
!11262 = !DILocation(line: 113, column: 34, scope: !11220, inlinedAt: !11226)
!11263 = !DILocation(line: 250, column: 22, scope: !11236, inlinedAt: !11237)
!11264 = !DILocalVariable(name: "n", scope: !11265, file: !8831, line: 250, type: !9, align: 8)
!11265 = !DILexicalBlockFile(scope: !11266, file: !8831, discriminator: 0)
!11266 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h54d97a5710f945c2E", scope: !6453, file: !6452, line: 56, type: !6471, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11267)
!11267 = !{!11264, !11268}
!11268 = !DILocalVariable(name: "runtime", scope: !11269, file: !8831, line: 250, type: !6477, align: 8)
!11269 = !DILexicalBlockFile(scope: !11270, file: !8831, discriminator: 0)
!11270 = distinct !DILexicalBlock(scope: !11266, file: !913, line: 2336, column: 13)
!11271 = !DILocation(line: 250, column: 22, scope: !11265, inlinedAt: !11272)
!11272 = !DILocation(line: 41, column: 18, scope: !11240, inlinedAt: !11232)
!11273 = !DILocation(line: 252, column: 6, scope: !11209)
!11274 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb93721974950716eE", scope: !8878, file: !8831, line: 241, type: !8879, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11275)
!11275 = !{!11276, !11277}
!11276 = !DILocalVariable(name: "self", arg: 1, scope: !11274, file: !8831, line: 241, type: !8881)
!11277 = !DILocalVariable(name: "layout", arg: 2, scope: !11274, file: !8831, line: 241, type: !1463)
!11278 = !DILocation(line: 241, column: 24, scope: !11274)
!11279 = !DILocation(line: 241, column: 31, scope: !11274)
!11280 = !DILocation(line: 242, column: 9, scope: !11274)
!11281 = !DILocation(line: 243, column: 6, scope: !11274)
!11282 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h0d6a3619a715c446E", scope: !8878, file: !8831, line: 255, type: !11283, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11285)
!11283 = !DISubroutineType(types: !11284)
!11284 = !{!7350, !8881, !350, !1463, !1463}
!11285 = !{!11286, !11287, !11288, !11289}
!11286 = !DILocalVariable(name: "self", arg: 1, scope: !11282, file: !8831, line: 256, type: !8881)
!11287 = !DILocalVariable(name: "ptr", arg: 2, scope: !11282, file: !8831, line: 257, type: !350)
!11288 = !DILocalVariable(name: "old_layout", arg: 3, scope: !11282, file: !8831, line: 258, type: !1463)
!11289 = !DILocalVariable(name: "new_layout", arg: 4, scope: !11282, file: !8831, line: 259, type: !1463)
!11290 = !DILocation(line: 256, column: 9, scope: !11282)
!11291 = !DILocation(line: 257, column: 9, scope: !11282)
!11292 = !DILocation(line: 258, column: 9, scope: !11282)
!11293 = !DILocation(line: 259, column: 9, scope: !11282)
!11294 = !DILocation(line: 262, column: 18, scope: !11282)
!11295 = !DILocation(line: 263, column: 6, scope: !11282)
!11296 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h760fa60d0593f80cE", scope: !8878, file: !8831, line: 236, type: !8879, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11297)
!11297 = !{!11298, !11299}
!11298 = !DILocalVariable(name: "self", arg: 1, scope: !11296, file: !8831, line: 236, type: !8881)
!11299 = !DILocalVariable(name: "layout", arg: 2, scope: !11296, file: !8831, line: 236, type: !1463)
!11300 = !DILocation(line: 236, column: 17, scope: !11296)
!11301 = !DILocation(line: 236, column: 24, scope: !11296)
!11302 = !DILocation(line: 237, column: 9, scope: !11296)
!11303 = !DILocation(line: 238, column: 6, scope: !11296)
!11304 = distinct !DISubprogram(name: "clone<std::thread::Packet<()>>", linkageName: "_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h139c9a59e8ca1255E", scope: !11305, file: !2933, line: 1343, type: !11306, scopeLine: 1343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !11308)
!11305 = !DINamespace(name: "{impl#22}", scope: !203)
!11306 = !DISubroutineType(types: !11307)
!11307 = !{!382, !2938}
!11308 = !{!11309, !11310}
!11309 = !DILocalVariable(name: "self", arg: 1, scope: !11304, file: !2933, line: 1343, type: !2938)
!11310 = !DILocalVariable(name: "old_size", scope: !11311, file: !2933, line: 1355, type: !9, align: 8)
!11311 = distinct !DILexicalBlock(scope: !11304, file: !2933, line: 1355, column: 9)
!11312 = !DILocation(line: 1343, column: 14, scope: !11304)
!11313 = !DILocation(line: 1355, column: 24, scope: !11304)
!11314 = !DILocalVariable(name: "self", scope: !11315, file: !2933, line: 1355, type: !2938, align: 8)
!11315 = distinct !DISubprogram(name: "inner<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h2c9584fbefbd9d49E", scope: !382, file: !2933, line: 1091, type: !2944, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !11316)
!11316 = !{!11314}
!11317 = !DILocation(line: 1355, column: 24, scope: !11315, inlinedAt: !11313)
!11318 = !DILocalVariable(name: "self", scope: !11319, file: !2933, line: 1355, type: !2955, align: 8)
!11319 = !DILexicalBlockFile(scope: !11320, file: !2933, discriminator: 0)
!11320 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hee047371338adbdcE", scope: !385, file: !1413, line: 378, type: !2953, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !11321)
!11321 = !{!11318}
!11322 = !DILocation(line: 1355, column: 24, scope: !11319, inlinedAt: !11323)
!11323 = !DILocation(line: 1097, column: 18, scope: !11315, inlinedAt: !11313)
!11324 = !DILocalVariable(name: "self", scope: !11325, file: !2933, line: 1355, type: !385, align: 8)
!11325 = !DILexicalBlockFile(scope: !11326, file: !2933, discriminator: 0)
!11326 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !11327)
!11327 = !{!11324}
!11328 = !DILocation(line: 1355, column: 24, scope: !11325, inlinedAt: !11329)
!11329 = !DILocation(line: 381, column: 20, scope: !11320, inlinedAt: !11323)
!11330 = !DILocalVariable(name: "self", scope: !11331, file: !2933, line: 1355, type: !8601, align: 8)
!11331 = !DILexicalBlockFile(scope: !11332, file: !2933, discriminator: 0)
!11332 = distinct !DISubprogram(name: "fetch_add", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_add17hef1a896cfe7fe34dE", scope: !214, file: !6046, line: 2367, type: !11333, scopeLine: 2367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11335)
!11333 = !DISubroutineType(types: !11334)
!11334 = !{!9, !8601, !9, !870}
!11335 = !{!11330, !11336, !11337}
!11336 = !DILocalVariable(name: "val", scope: !11331, file: !2933, line: 1355, type: !9, align: 8)
!11337 = !DILocalVariable(name: "order", scope: !11331, file: !2933, line: 1355, type: !870, align: 1)
!11338 = !DILocation(line: 1355, column: 24, scope: !11331, inlinedAt: !11313)
!11339 = !DILocalVariable(name: "self", scope: !11340, file: !2933, line: 1355, type: !8613, align: 8)
!11340 = !DILexicalBlockFile(scope: !11341, file: !2933, discriminator: 0)
!11341 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11342)
!11342 = !{!11339}
!11343 = !DILocation(line: 1355, column: 24, scope: !11340, inlinedAt: !11344)
!11344 = !DILocation(line: 2369, column: 37, scope: !11332, inlinedAt: !11313)
!11345 = !DILocation(line: 1355, column: 13, scope: !11311)
!11346 = !DILocation(line: 1367, column: 12, scope: !11311)
!11347 = !DILocation(line: 1371, column: 35, scope: !11311)
!11348 = !DILocation(line: 1371, column: 18, scope: !11311)
!11349 = !DILocation(line: 1368, column: 13, scope: !11311)
!11350 = !DILocation(line: 1372, column: 6, scope: !11304)
!11351 = distinct !DISubprogram(name: "clone<std::thread::Inner>", linkageName: "_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hb0af00fa3275bdc1E", scope: !11305, file: !2933, line: 1343, type: !11352, scopeLine: 1343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !11355)
!11352 = !DISubroutineType(types: !11353)
!11353 = !{!202, !11354}
!11354 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::Arc<std::thread::Inner>", baseType: !202, size: 64, align: 64, dwarfAddressSpace: 0)
!11355 = !{!11356, !11357}
!11356 = !DILocalVariable(name: "self", arg: 1, scope: !11351, file: !2933, line: 1343, type: !11354)
!11357 = !DILocalVariable(name: "old_size", scope: !11358, file: !2933, line: 1355, type: !9, align: 8)
!11358 = distinct !DILexicalBlock(scope: !11351, file: !2933, line: 1355, column: 9)
!11359 = !DILocation(line: 1343, column: 14, scope: !11351)
!11360 = !DILocation(line: 1355, column: 24, scope: !11351)
!11361 = !DILocalVariable(name: "self", scope: !11362, file: !2933, line: 1355, type: !11354, align: 8)
!11362 = distinct !DISubprogram(name: "inner<std::thread::Inner>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h77ef7fcd5e1a68b3E", scope: !202, file: !2933, line: 1091, type: !11363, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !11366)
!11363 = !DISubroutineType(types: !11364)
!11364 = !{!11365, !11354}
!11365 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::ArcInner<std::thread::Inner>", baseType: !211, size: 64, align: 64, dwarfAddressSpace: 0)
!11366 = !{!11361}
!11367 = !DILocation(line: 1355, column: 24, scope: !11362, inlinedAt: !11360)
!11368 = !DILocalVariable(name: "self", scope: !11369, file: !2933, line: 1355, type: !11373, align: 8)
!11369 = !DILexicalBlockFile(scope: !11370, file: !2933, discriminator: 0)
!11370 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h656dc683e5b909a7E", scope: !207, file: !1413, line: 378, type: !11371, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !11374)
!11371 = !DISubroutineType(types: !11372)
!11372 = !{!11365, !11373}
!11373 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<alloc::sync::ArcInner<std::thread::Inner>>", baseType: !207, size: 64, align: 64, dwarfAddressSpace: 0)
!11374 = !{!11368}
!11375 = !DILocation(line: 1355, column: 24, scope: !11369, inlinedAt: !11376)
!11376 = !DILocation(line: 1097, column: 18, scope: !11362, inlinedAt: !11360)
!11377 = !DILocalVariable(name: "self", scope: !11378, file: !2933, line: 1355, type: !207, align: 8)
!11378 = !DILexicalBlockFile(scope: !11379, file: !2933, discriminator: 0)
!11379 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf5dc9bbda4fbb836E", scope: !207, file: !1413, line: 330, type: !8462, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !11380)
!11380 = !{!11377}
!11381 = !DILocation(line: 1355, column: 24, scope: !11378, inlinedAt: !11382)
!11382 = !DILocation(line: 381, column: 20, scope: !11370, inlinedAt: !11376)
!11383 = !DILocalVariable(name: "self", scope: !11384, file: !2933, line: 1355, type: !8601, align: 8)
!11384 = !DILexicalBlockFile(scope: !11385, file: !2933, discriminator: 0)
!11385 = distinct !DISubprogram(name: "fetch_add", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_add17hef1a896cfe7fe34dE", scope: !214, file: !6046, line: 2367, type: !11333, scopeLine: 2367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11386)
!11386 = !{!11383, !11387, !11388}
!11387 = !DILocalVariable(name: "val", scope: !11384, file: !2933, line: 1355, type: !9, align: 8)
!11388 = !DILocalVariable(name: "order", scope: !11384, file: !2933, line: 1355, type: !870, align: 1)
!11389 = !DILocation(line: 1355, column: 24, scope: !11384, inlinedAt: !11360)
!11390 = !DILocalVariable(name: "self", scope: !11391, file: !2933, line: 1355, type: !8613, align: 8)
!11391 = !DILexicalBlockFile(scope: !11392, file: !2933, discriminator: 0)
!11392 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11393)
!11393 = !{!11390}
!11394 = !DILocation(line: 1355, column: 24, scope: !11391, inlinedAt: !11395)
!11395 = !DILocation(line: 2369, column: 37, scope: !11385, inlinedAt: !11360)
!11396 = !DILocation(line: 1355, column: 13, scope: !11358)
!11397 = !DILocation(line: 1367, column: 12, scope: !11358)
!11398 = !DILocation(line: 1371, column: 35, scope: !11358)
!11399 = !DILocation(line: 1371, column: 18, scope: !11358)
!11400 = !DILocation(line: 1368, column: 13, scope: !11358)
!11401 = !DILocation(line: 1372, column: 6, scope: !11351)
!11402 = distinct !DISubprogram(name: "clone<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN64_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hc8dc62dc592d2f9fE", scope: !11305, file: !2933, line: 1343, type: !11403, scopeLine: 1343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !11405)
!11403 = !DISubroutineType(types: !11404)
!11404 = !{!295, !2922}
!11405 = !{!11406, !11407}
!11406 = !DILocalVariable(name: "self", arg: 1, scope: !11402, file: !2933, line: 1343, type: !2922)
!11407 = !DILocalVariable(name: "old_size", scope: !11408, file: !2933, line: 1355, type: !9, align: 8)
!11408 = distinct !DILexicalBlock(scope: !11402, file: !2933, line: 1355, column: 9)
!11409 = !DILocation(line: 1343, column: 14, scope: !11402)
!11410 = !DILocation(line: 1355, column: 24, scope: !11402)
!11411 = !DILocalVariable(name: "self", scope: !11412, file: !2933, line: 1355, type: !2922, align: 8)
!11412 = distinct !DISubprogram(name: "inner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17hfbc91d2dfafe949dE", scope: !295, file: !2933, line: 1091, type: !11413, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !11416)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{!11415, !2922}
!11415 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", baseType: !302, size: 64, align: 64, dwarfAddressSpace: 0)
!11416 = !{!11411}
!11417 = !DILocation(line: 1355, column: 24, scope: !11412, inlinedAt: !11410)
!11418 = !DILocalVariable(name: "self", scope: !11419, file: !2933, line: 1355, type: !11423, align: 8)
!11419 = !DILexicalBlockFile(scope: !11420, file: !2933, discriminator: 0)
!11420 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h4f4fdd4c94154b99E", scope: !298, file: !1413, line: 378, type: !11421, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !11424)
!11421 = !DISubroutineType(types: !11422)
!11422 = !{!11415, !11423}
!11423 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", baseType: !298, size: 64, align: 64, dwarfAddressSpace: 0)
!11424 = !{!11418}
!11425 = !DILocation(line: 1355, column: 24, scope: !11419, inlinedAt: !11426)
!11426 = !DILocation(line: 1097, column: 18, scope: !11412, inlinedAt: !11410)
!11427 = !DILocalVariable(name: "self", scope: !11428, file: !2933, line: 1355, type: !298, align: 8)
!11428 = !DILexicalBlockFile(scope: !11429, file: !2933, discriminator: 0)
!11429 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h252ca02f60dbca02E", scope: !298, file: !1413, line: 330, type: !8498, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !11430)
!11430 = !{!11427}
!11431 = !DILocation(line: 1355, column: 24, scope: !11428, inlinedAt: !11432)
!11432 = !DILocation(line: 381, column: 20, scope: !11420, inlinedAt: !11426)
!11433 = !DILocalVariable(name: "self", scope: !11434, file: !2933, line: 1355, type: !8601, align: 8)
!11434 = !DILexicalBlockFile(scope: !11435, file: !2933, discriminator: 0)
!11435 = distinct !DISubprogram(name: "fetch_add", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_add17hef1a896cfe7fe34dE", scope: !214, file: !6046, line: 2367, type: !11333, scopeLine: 2367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11436)
!11436 = !{!11433, !11437, !11438}
!11437 = !DILocalVariable(name: "val", scope: !11434, file: !2933, line: 1355, type: !9, align: 8)
!11438 = !DILocalVariable(name: "order", scope: !11434, file: !2933, line: 1355, type: !870, align: 1)
!11439 = !DILocation(line: 1355, column: 24, scope: !11434, inlinedAt: !11410)
!11440 = !DILocalVariable(name: "self", scope: !11441, file: !2933, line: 1355, type: !8613, align: 8)
!11441 = !DILexicalBlockFile(scope: !11442, file: !2933, discriminator: 0)
!11442 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11443)
!11443 = !{!11440}
!11444 = !DILocation(line: 1355, column: 24, scope: !11441, inlinedAt: !11445)
!11445 = !DILocation(line: 2369, column: 37, scope: !11435, inlinedAt: !11410)
!11446 = !DILocation(line: 1355, column: 13, scope: !11408)
!11447 = !DILocation(line: 1367, column: 12, scope: !11408)
!11448 = !DILocation(line: 1371, column: 35, scope: !11408)
!11449 = !DILocation(line: 1371, column: 18, scope: !11408)
!11450 = !DILocation(line: 1368, column: 13, scope: !11408)
!11451 = !DILocation(line: 1372, column: 6, scope: !11402)
!11452 = distinct !DISubprogram(name: "spec_new_impl<alloc::string::String>", linkageName: "_ZN66_$LT$T$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h06ec03921d146e9aE", scope: !11453, file: !7941, line: 267, type: !7942, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !2603, retainedNodes: !11456)
!11453 = !DINamespace(name: "{impl#0}", scope: !11454)
!11454 = !DINamespace(name: "new", scope: !11455)
!11455 = !DINamespace(name: "{impl#1}", scope: !240)
!11456 = !{!11457, !11458, !11460}
!11457 = !DILocalVariable(name: "self", arg: 1, scope: !11452, file: !7941, line: 267, type: !2605)
!11458 = !DILocalVariable(name: "bytes", scope: !11459, file: !7941, line: 268, type: !338, align: 8)
!11459 = distinct !DILexicalBlock(scope: !11452, file: !7941, line: 268, column: 17)
!11460 = !DILocalVariable(name: "i", scope: !11461, file: !7941, line: 270, type: !9, align: 8)
!11461 = distinct !DILexicalBlock(scope: !11459, file: !7941, line: 270, column: 21)
!11462 = !DILocation(line: 267, column: 38, scope: !11452)
!11463 = !DILocation(line: 268, column: 21, scope: !11459)
!11464 = !DILocation(line: 268, column: 38, scope: !11452)
!11465 = !DILocation(line: 269, column: 41, scope: !11459)
!11466 = !DILocalVariable(name: "self", scope: !11467, file: !7941, line: 269, type: !8173, align: 8)
!11467 = !DILexicalBlockFile(scope: !11468, file: !7941, discriminator: 0)
!11468 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0f2a85c5c352ff05E", scope: !11469, file: !1283, line: 2531, type: !11470, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !360, retainedNodes: !11472)
!11469 = !DINamespace(name: "{impl#10}", scope: !339)
!11470 = !DISubroutineType(types: !11471)
!11471 = !{!1083, !8173}
!11472 = !{!11466}
!11473 = !DILocation(line: 269, column: 41, scope: !11467, inlinedAt: !11465)
!11474 = !DILocation(line: 273, column: 13, scope: !11452)
!11475 = !DILocalVariable(name: "data", scope: !11476, file: !7941, line: 269, type: !353, align: 8)
!11476 = !DILexicalBlockFile(scope: !11477, file: !7941, discriminator: 0)
!11477 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h81523ddb88ade79cE", scope: !11479, file: !11478, line: 90, type: !11480, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11482)
!11478 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "bc05ab33aeb77226885613c6dc511a0a")
!11479 = !DINamespace(name: "raw", scope: !892)
!11480 = !DISubroutineType(types: !11481)
!11481 = !{!1083, !353, !9}
!11482 = !{!11475, !11483, !11484}
!11483 = !DILocalVariable(name: "len", scope: !11476, file: !7941, line: 269, type: !9, align: 8)
!11484 = !DILocalVariable(name: "runtime", scope: !11485, file: !7941, line: 269, type: !11487, align: 8)
!11485 = !DILexicalBlockFile(scope: !11486, file: !7941, discriminator: 0)
!11486 = distinct !DILexicalBlock(scope: !11477, file: !913, line: 2336, column: 13)
!11487 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !11488, file: !2, size: 128, align: 64, elements: !11489, templateParams: !28, identifier: "ca6adac9bf5585e57d20f143c4c8a4b5")
!11488 = !DINamespace(name: "from_raw_parts", scope: !11479)
!11489 = !{!11490, !11491}
!11490 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !11487, file: !2, baseType: !9450, size: 64, align: 64)
!11491 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !11487, file: !2, baseType: !918, size: 64, align: 64, offset: 64)
!11492 = !DILocation(line: 269, column: 41, scope: !11476, inlinedAt: !11493)
!11493 = !DILocation(line: 2532, column: 18, scope: !11468, inlinedAt: !11465)
!11494 = !DILocalVariable(name: "data", scope: !11495, file: !7941, line: 269, type: !353, align: 8)
!11495 = !DILexicalBlockFile(scope: !11496, file: !7941, discriminator: 0)
!11496 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h4a7908e46ff95e2bE", scope: !53, file: !959, line: 695, type: !960, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11497)
!11497 = !{!11494, !11498}
!11498 = !DILocalVariable(name: "len", scope: !11495, file: !7941, line: 269, type: !9, align: 8)
!11499 = !DILocation(line: 269, column: 41, scope: !11495, inlinedAt: !11500)
!11500 = !DILocation(line: 97, column: 11, scope: !11477, inlinedAt: !11493)
!11501 = !DILocalVariable(name: "self", scope: !11502, file: !7941, line: 269, type: !353, align: 8)
!11502 = !DILexicalBlockFile(scope: !11503, file: !7941, discriminator: 0)
!11503 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h41c23c76c3fbf195E", scope: !939, file: !929, line: 46, type: !970, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !973, retainedNodes: !11504)
!11504 = !{!11501}
!11505 = !DILocation(line: 269, column: 41, scope: !11502, inlinedAt: !11506)
!11506 = !DILocation(line: 696, column: 20, scope: !11496, inlinedAt: !11500)
!11507 = !DILocalVariable(name: "data_address", scope: !11508, file: !7941, line: 269, type: !6, align: 8)
!11508 = !DILexicalBlockFile(scope: !11509, file: !7941, discriminator: 0)
!11509 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h43846fe7970ea603E", scope: !981, file: !980, line: 110, type: !982, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11510)
!11510 = !{!11507, !11511}
!11511 = !DILocalVariable(name: "metadata", scope: !11508, file: !7941, line: 269, type: !9, align: 8)
!11512 = !DILocation(line: 269, column: 41, scope: !11508, inlinedAt: !11513)
!11513 = !DILocation(line: 696, column: 5, scope: !11496, inlinedAt: !11500)
!11514 = !DILocation(line: 269, column: 23, scope: !11459)
!11515 = !DILocation(line: 269, column: 17, scope: !11459)
!11516 = !DILocation(line: 271, column: 70, scope: !11459)
!11517 = !DILocation(line: 271, column: 41, scope: !11459)
!11518 = !DILocation(line: 270, column: 26, scope: !11459)
!11519 = !DILocation(line: 270, column: 26, scope: !11461)
!11520 = !DILocation(line: 270, column: 48, scope: !11461)
!11521 = !DILocation(line: 270, column: 36, scope: !11461)
!11522 = !DILocation(line: 270, column: 32, scope: !11461)
!11523 = !DILocation(line: 270, column: 54, scope: !11459)
!11524 = !DILocation(line: 273, column: 14, scope: !11452)
!11525 = !DILocation(line: 271, column: 29, scope: !11459)
!11526 = !DILocation(line: 271, column: 78, scope: !11459)
!11527 = !DILocation(line: 267, column: 13, scope: !11452)
!11528 = distinct !DISubprogram(name: "fmt<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", linkageName: "_ZN67_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h7a8d1becfc6dcc7bE", scope: !11529, file: !2846, line: 1829, type: !11530, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9989, retainedNodes: !11533)
!11529 = !DINamespace(name: "{impl#33}", scope: !2848)
!11530 = !DISubroutineType(types: !11531)
!11531 = !{!1717, !11532, !1733}
!11532 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>", baseType: !456, size: 64, align: 64, dwarfAddressSpace: 0)
!11533 = !{!11534, !11535}
!11534 = !DILocalVariable(name: "self", arg: 1, scope: !11528, file: !2846, line: 1829, type: !11532)
!11535 = !DILocalVariable(name: "f", arg: 2, scope: !11528, file: !2846, line: 1829, type: !1733)
!11536 = !DILocation(line: 1829, column: 12, scope: !11528)
!11537 = !DILocation(line: 1829, column: 19, scope: !11528)
!11538 = !DILocation(line: 1830, column: 25, scope: !11528)
!11539 = !DILocation(line: 1830, column: 9, scope: !11528)
!11540 = !DILocation(line: 1831, column: 6, scope: !11528)
!11541 = distinct !DISubprogram(name: "drop<std::thread::scoped::ScopeData>", linkageName: "_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h09b34d7a0183b9e1E", scope: !11542, file: !2933, line: 1663, type: !8538, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !11543)
!11542 = !DINamespace(name: "{impl#27}", scope: !203)
!11543 = !{!11544}
!11544 = !DILocalVariable(name: "self", arg: 1, scope: !11541, file: !2933, line: 1663, type: !8540)
!11545 = !DILocation(line: 1663, column: 13, scope: !11541)
!11546 = !DILocation(line: 1667, column: 12, scope: !11541)
!11547 = !DILocalVariable(name: "self", scope: !11548, file: !2933, line: 1667, type: !2758, align: 8)
!11548 = distinct !DISubprogram(name: "inner<std::thread::scoped::ScopeData>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h4adc7ecfdfdf4cc7E", scope: !405, file: !2933, line: 1091, type: !2982, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !11549)
!11549 = !{!11547}
!11550 = !DILocation(line: 1667, column: 12, scope: !11548, inlinedAt: !11546)
!11551 = !DILocalVariable(name: "self", scope: !11552, file: !2933, line: 1667, type: !2993, align: 8)
!11552 = !DILexicalBlockFile(scope: !11553, file: !2933, discriminator: 0)
!11553 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hf2c6e78f21739783E", scope: !408, file: !1413, line: 378, type: !2991, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !11554)
!11554 = !{!11551}
!11555 = !DILocation(line: 1667, column: 12, scope: !11552, inlinedAt: !11556)
!11556 = !DILocation(line: 1097, column: 18, scope: !11548, inlinedAt: !11546)
!11557 = !DILocalVariable(name: "self", scope: !11558, file: !2933, line: 1667, type: !408, align: 8)
!11558 = !DILexicalBlockFile(scope: !11559, file: !2933, discriminator: 0)
!11559 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34c1f75750307eb0E", scope: !408, file: !1413, line: 330, type: !3000, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !11560)
!11560 = !{!11557}
!11561 = !DILocation(line: 1667, column: 12, scope: !11558, inlinedAt: !11562)
!11562 = !DILocation(line: 381, column: 20, scope: !11553, inlinedAt: !11556)
!11563 = !DILocalVariable(name: "self", scope: !11564, file: !2933, line: 1667, type: !8601, align: 8)
!11564 = !DILexicalBlockFile(scope: !11565, file: !2933, discriminator: 0)
!11565 = distinct !DISubprogram(name: "fetch_sub", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h376aef57f7cd74f3E", scope: !214, file: !6046, line: 2397, type: !11333, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11566)
!11566 = !{!11563, !11567, !11568}
!11567 = !DILocalVariable(name: "val", scope: !11564, file: !2933, line: 1667, type: !9, align: 8)
!11568 = !DILocalVariable(name: "order", scope: !11564, file: !2933, line: 1667, type: !870, align: 1)
!11569 = !DILocation(line: 1667, column: 12, scope: !11564, inlinedAt: !11546)
!11570 = !DILocalVariable(name: "self", scope: !11571, file: !2933, line: 1667, type: !8613, align: 8)
!11571 = !DILexicalBlockFile(scope: !11572, file: !2933, discriminator: 0)
!11572 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11573)
!11573 = !{!11570}
!11574 = !DILocation(line: 1667, column: 12, scope: !11571, inlinedAt: !11575)
!11575 = !DILocation(line: 2399, column: 37, scope: !11565, inlinedAt: !11546)
!11576 = !DILocation(line: 1699, column: 9, scope: !11541)
!11577 = !DILocation(line: 1704, column: 6, scope: !11541)
!11578 = !DILocation(line: 1702, column: 13, scope: !11541)
!11579 = distinct !DISubprogram(name: "drop<std::thread::Inner>", linkageName: "_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0cc1e64477d80e45E", scope: !11542, file: !2933, line: 1663, type: !8436, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !11580)
!11580 = !{!11581}
!11581 = !DILocalVariable(name: "self", arg: 1, scope: !11579, file: !2933, line: 1663, type: !8438)
!11582 = !DILocation(line: 1663, column: 13, scope: !11579)
!11583 = !DILocation(line: 1667, column: 12, scope: !11579)
!11584 = !DILocalVariable(name: "self", scope: !11585, file: !2933, line: 1667, type: !11354, align: 8)
!11585 = distinct !DISubprogram(name: "inner<std::thread::Inner>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h77ef7fcd5e1a68b3E", scope: !202, file: !2933, line: 1091, type: !11363, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !11586)
!11586 = !{!11584}
!11587 = !DILocation(line: 1667, column: 12, scope: !11585, inlinedAt: !11583)
!11588 = !DILocalVariable(name: "self", scope: !11589, file: !2933, line: 1667, type: !11373, align: 8)
!11589 = !DILexicalBlockFile(scope: !11590, file: !2933, discriminator: 0)
!11590 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h656dc683e5b909a7E", scope: !207, file: !1413, line: 378, type: !11371, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !11591)
!11591 = !{!11588}
!11592 = !DILocation(line: 1667, column: 12, scope: !11589, inlinedAt: !11593)
!11593 = !DILocation(line: 1097, column: 18, scope: !11585, inlinedAt: !11583)
!11594 = !DILocalVariable(name: "self", scope: !11595, file: !2933, line: 1667, type: !207, align: 8)
!11595 = !DILexicalBlockFile(scope: !11596, file: !2933, discriminator: 0)
!11596 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf5dc9bbda4fbb836E", scope: !207, file: !1413, line: 330, type: !8462, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !11597)
!11597 = !{!11594}
!11598 = !DILocation(line: 1667, column: 12, scope: !11595, inlinedAt: !11599)
!11599 = !DILocation(line: 381, column: 20, scope: !11590, inlinedAt: !11593)
!11600 = !DILocalVariable(name: "self", scope: !11601, file: !2933, line: 1667, type: !8601, align: 8)
!11601 = !DILexicalBlockFile(scope: !11602, file: !2933, discriminator: 0)
!11602 = distinct !DISubprogram(name: "fetch_sub", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h376aef57f7cd74f3E", scope: !214, file: !6046, line: 2397, type: !11333, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11603)
!11603 = !{!11600, !11604, !11605}
!11604 = !DILocalVariable(name: "val", scope: !11601, file: !2933, line: 1667, type: !9, align: 8)
!11605 = !DILocalVariable(name: "order", scope: !11601, file: !2933, line: 1667, type: !870, align: 1)
!11606 = !DILocation(line: 1667, column: 12, scope: !11601, inlinedAt: !11583)
!11607 = !DILocalVariable(name: "self", scope: !11608, file: !2933, line: 1667, type: !8613, align: 8)
!11608 = !DILexicalBlockFile(scope: !11609, file: !2933, discriminator: 0)
!11609 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11610)
!11610 = !{!11607}
!11611 = !DILocation(line: 1667, column: 12, scope: !11608, inlinedAt: !11612)
!11612 = !DILocation(line: 2399, column: 37, scope: !11602, inlinedAt: !11583)
!11613 = !DILocation(line: 1699, column: 9, scope: !11579)
!11614 = !DILocation(line: 1704, column: 6, scope: !11579)
!11615 = !DILocation(line: 1702, column: 13, scope: !11579)
!11616 = distinct !DISubprogram(name: "drop<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3faf7497f9d00665E", scope: !11542, file: !2933, line: 1663, type: !8472, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !11617)
!11617 = !{!11618}
!11618 = !DILocalVariable(name: "self", arg: 1, scope: !11616, file: !2933, line: 1663, type: !8474)
!11619 = !DILocation(line: 1663, column: 13, scope: !11616)
!11620 = !DILocation(line: 1667, column: 12, scope: !11616)
!11621 = !DILocalVariable(name: "self", scope: !11622, file: !2933, line: 1667, type: !2922, align: 8)
!11622 = distinct !DISubprogram(name: "inner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17hfbc91d2dfafe949dE", scope: !295, file: !2933, line: 1091, type: !11413, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !11623)
!11623 = !{!11621}
!11624 = !DILocation(line: 1667, column: 12, scope: !11622, inlinedAt: !11620)
!11625 = !DILocalVariable(name: "self", scope: !11626, file: !2933, line: 1667, type: !11423, align: 8)
!11626 = !DILexicalBlockFile(scope: !11627, file: !2933, discriminator: 0)
!11627 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h4f4fdd4c94154b99E", scope: !298, file: !1413, line: 378, type: !11421, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !11628)
!11628 = !{!11625}
!11629 = !DILocation(line: 1667, column: 12, scope: !11626, inlinedAt: !11630)
!11630 = !DILocation(line: 1097, column: 18, scope: !11622, inlinedAt: !11620)
!11631 = !DILocalVariable(name: "self", scope: !11632, file: !2933, line: 1667, type: !298, align: 8)
!11632 = !DILexicalBlockFile(scope: !11633, file: !2933, discriminator: 0)
!11633 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h252ca02f60dbca02E", scope: !298, file: !1413, line: 330, type: !8498, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !11634)
!11634 = !{!11631}
!11635 = !DILocation(line: 1667, column: 12, scope: !11632, inlinedAt: !11636)
!11636 = !DILocation(line: 381, column: 20, scope: !11627, inlinedAt: !11630)
!11637 = !DILocalVariable(name: "self", scope: !11638, file: !2933, line: 1667, type: !8601, align: 8)
!11638 = !DILexicalBlockFile(scope: !11639, file: !2933, discriminator: 0)
!11639 = distinct !DISubprogram(name: "fetch_sub", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h376aef57f7cd74f3E", scope: !214, file: !6046, line: 2397, type: !11333, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11640)
!11640 = !{!11637, !11641, !11642}
!11641 = !DILocalVariable(name: "val", scope: !11638, file: !2933, line: 1667, type: !9, align: 8)
!11642 = !DILocalVariable(name: "order", scope: !11638, file: !2933, line: 1667, type: !870, align: 1)
!11643 = !DILocation(line: 1667, column: 12, scope: !11638, inlinedAt: !11620)
!11644 = !DILocalVariable(name: "self", scope: !11645, file: !2933, line: 1667, type: !8613, align: 8)
!11645 = !DILexicalBlockFile(scope: !11646, file: !2933, discriminator: 0)
!11646 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11647)
!11647 = !{!11644}
!11648 = !DILocation(line: 1667, column: 12, scope: !11645, inlinedAt: !11649)
!11649 = !DILocation(line: 2399, column: 37, scope: !11639, inlinedAt: !11620)
!11650 = !DILocation(line: 1699, column: 9, scope: !11616)
!11651 = !DILocation(line: 1704, column: 6, scope: !11616)
!11652 = !DILocation(line: 1702, column: 13, scope: !11616)
!11653 = distinct !DISubprogram(name: "drop<std::thread::Packet<()>>", linkageName: "_ZN67_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he236f3fc22265f07E", scope: !11542, file: !2933, line: 1663, type: !8508, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !11654)
!11654 = !{!11655}
!11655 = !DILocalVariable(name: "self", arg: 1, scope: !11653, file: !2933, line: 1663, type: !8412)
!11656 = !DILocation(line: 1663, column: 13, scope: !11653)
!11657 = !DILocation(line: 1667, column: 12, scope: !11653)
!11658 = !DILocalVariable(name: "self", scope: !11659, file: !2933, line: 1667, type: !2938, align: 8)
!11659 = distinct !DISubprogram(name: "inner<std::thread::Packet<()>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h2c9584fbefbd9d49E", scope: !382, file: !2933, line: 1091, type: !2944, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !11660)
!11660 = !{!11658}
!11661 = !DILocation(line: 1667, column: 12, scope: !11659, inlinedAt: !11657)
!11662 = !DILocalVariable(name: "self", scope: !11663, file: !2933, line: 1667, type: !2955, align: 8)
!11663 = !DILexicalBlockFile(scope: !11664, file: !2933, discriminator: 0)
!11664 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hee047371338adbdcE", scope: !385, file: !1413, line: 378, type: !2953, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !11665)
!11665 = !{!11662}
!11666 = !DILocation(line: 1667, column: 12, scope: !11663, inlinedAt: !11667)
!11667 = !DILocation(line: 1097, column: 18, scope: !11659, inlinedAt: !11657)
!11668 = !DILocalVariable(name: "self", scope: !11669, file: !2933, line: 1667, type: !385, align: 8)
!11669 = !DILexicalBlockFile(scope: !11670, file: !2933, discriminator: 0)
!11670 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !11671)
!11671 = !{!11668}
!11672 = !DILocation(line: 1667, column: 12, scope: !11669, inlinedAt: !11673)
!11673 = !DILocation(line: 381, column: 20, scope: !11664, inlinedAt: !11667)
!11674 = !DILocalVariable(name: "self", scope: !11675, file: !2933, line: 1667, type: !8601, align: 8)
!11675 = !DILexicalBlockFile(scope: !11676, file: !2933, discriminator: 0)
!11676 = distinct !DISubprogram(name: "fetch_sub", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h376aef57f7cd74f3E", scope: !214, file: !6046, line: 2397, type: !11333, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11677)
!11677 = !{!11674, !11678, !11679}
!11678 = !DILocalVariable(name: "val", scope: !11675, file: !2933, line: 1667, type: !9, align: 8)
!11679 = !DILocalVariable(name: "order", scope: !11675, file: !2933, line: 1667, type: !870, align: 1)
!11680 = !DILocation(line: 1667, column: 12, scope: !11675, inlinedAt: !11657)
!11681 = !DILocalVariable(name: "self", scope: !11682, file: !2933, line: 1667, type: !8613, align: 8)
!11682 = !DILexicalBlockFile(scope: !11683, file: !2933, discriminator: 0)
!11683 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11684)
!11684 = !{!11681}
!11685 = !DILocation(line: 1667, column: 12, scope: !11682, inlinedAt: !11686)
!11686 = !DILocation(line: 2399, column: 37, scope: !11676, inlinedAt: !11657)
!11687 = !DILocation(line: 1699, column: 9, scope: !11653)
!11688 = !DILocation(line: 1704, column: 6, scope: !11653)
!11689 = !DILocation(line: 1702, column: 13, scope: !11653)
!11690 = distinct !DISubprogram(name: "drop", linkageName: "_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hf8df026b45c34b8eE", scope: !11691, file: !7941, line: 701, type: !11692, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11695)
!11691 = !DINamespace(name: "{impl#2}", scope: !240)
!11692 = !DISubroutineType(types: !11693)
!11693 = !{null, !11694}
!11694 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::ffi::c_str::CString", baseType: !239, size: 64, align: 64, dwarfAddressSpace: 0)
!11695 = !{!11696}
!11696 = !DILocalVariable(name: "self", arg: 1, scope: !11690, file: !7941, line: 701, type: !11694)
!11697 = !DILocation(line: 701, column: 13, scope: !11690)
!11698 = !DILocation(line: 703, column: 14, scope: !11690)
!11699 = !DILocalVariable(name: "self", scope: !11700, file: !7941, line: 703, type: !1131, align: 8)
!11700 = !DILexicalBlockFile(scope: !11701, file: !7941, discriminator: 0)
!11701 = distinct !DISubprogram(name: "get_unchecked_mut<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hd81d2f867008f59bE", scope: !1568, file: !1567, line: 436, type: !11702, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4923, retainedNodes: !11704)
!11702 = !DISubroutineType(types: !11703)
!11703 = !{!5822, !1131, !9}
!11704 = !{!11699, !11705}
!11705 = !DILocalVariable(name: "index", scope: !11700, file: !7941, line: 703, type: !9, align: 8)
!11706 = !DILocation(line: 703, column: 14, scope: !11700, inlinedAt: !11698)
!11707 = !DILocalVariable(name: "slice", scope: !11708, file: !7941, line: 703, type: !992, align: 8)
!11708 = !DILexicalBlockFile(scope: !11709, file: !7941, discriminator: 0)
!11709 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2a4a4aa7c71e7c24E", scope: !11710, file: !889, line: 231, type: !11711, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11713)
!11710 = !DINamespace(name: "{impl#2}", scope: !891)
!11711 = !DISubroutineType(types: !11712)
!11712 = !{!1021, !9, !992}
!11713 = !{!11714, !11707, !11715}
!11714 = !DILocalVariable(name: "self", scope: !11708, file: !7941, line: 703, type: !9, align: 8)
!11715 = !DILocalVariable(name: "runtime", scope: !11716, file: !7941, line: 703, type: !11718, align: 8)
!11716 = !DILexicalBlockFile(scope: !11717, file: !7941, discriminator: 0)
!11717 = distinct !DILexicalBlock(scope: !11709, file: !913, line: 2336, column: 13)
!11718 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !11719, file: !2, size: 128, align: 64, elements: !11720, templateParams: !28, identifier: "d62b7ba1fd49927eee591e95c4576f60")
!11719 = !DINamespace(name: "get_unchecked_mut", scope: !11710)
!11720 = !{!11721, !11722}
!11721 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !11718, file: !2, baseType: !918, size: 64, align: 64)
!11722 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !11718, file: !2, baseType: !1008, size: 64, align: 64, offset: 64)
!11723 = !DILocation(line: 703, column: 14, scope: !11708, inlinedAt: !11724)
!11724 = !DILocation(line: 443, column: 24, scope: !11701, inlinedAt: !11698)
!11725 = !DILocalVariable(name: "self", scope: !11726, file: !7941, line: 703, type: !992, align: 8)
!11726 = !DILexicalBlockFile(scope: !11727, file: !7941, discriminator: 0)
!11727 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h88045799f044eca6E", scope: !1017, file: !1016, line: 1778, type: !1019, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11728)
!11728 = !{!11725}
!11729 = !DILocation(line: 703, column: 14, scope: !11726, inlinedAt: !11730)
!11730 = !DILocation(line: 235, column: 13, scope: !11709, inlinedAt: !11724)
!11731 = !DILocalVariable(name: "self", scope: !11732, file: !7941, line: 703, type: !1021, align: 8)
!11732 = !DILexicalBlockFile(scope: !11733, file: !7941, discriminator: 0)
!11733 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h24d8ee515aac51bfE", scope: !1027, file: !1016, line: 985, type: !1028, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11734)
!11734 = !{!11731, !11735}
!11735 = !DILocalVariable(name: "count", scope: !11732, file: !7941, line: 703, type: !9, align: 8)
!11736 = !DILocation(line: 703, column: 14, scope: !11732, inlinedAt: !11730)
!11737 = !DILocalVariable(name: "self", scope: !11738, file: !7941, line: 703, type: !1021, align: 8)
!11738 = !DILexicalBlockFile(scope: !11739, file: !7941, discriminator: 0)
!11739 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h740b8c86c1df61cfE", scope: !1027, file: !1016, line: 465, type: !1037, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11740)
!11740 = !{!11737, !11741}
!11741 = !DILocalVariable(name: "count", scope: !11738, file: !7941, line: 703, type: !951, align: 8)
!11742 = !DILocation(line: 703, column: 14, scope: !11738, inlinedAt: !11743)
!11743 = !DILocation(line: 990, column: 18, scope: !11733, inlinedAt: !11730)
!11744 = !DILocation(line: 703, column: 13, scope: !11690)
!11745 = !DILocation(line: 705, column: 6, scope: !11690)
!11746 = distinct !DISubprogram(name: "drop<std::thread::Inner>", linkageName: "_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h238b41a7943c0222E", scope: !11747, file: !2933, line: 2201, type: !11748, scopeLine: 2201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !278, retainedNodes: !11751)
!11747 = !DINamespace(name: "{impl#34}", scope: !203)
!11748 = !DISubroutineType(types: !11749)
!11749 = !{null, !11750}
!11750 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::sync::Weak<std::thread::Inner>", baseType: !4443, size: 64, align: 64, dwarfAddressSpace: 0)
!11751 = !{!11752, !11753, !11755}
!11752 = !DILocalVariable(name: "self", arg: 1, scope: !11746, file: !2933, line: 2201, type: !11750)
!11753 = !DILocalVariable(name: "inner", scope: !11754, file: !2933, line: 2210, type: !8704, align: 8)
!11754 = distinct !DILexicalBlock(scope: !11746, file: !2933, line: 2210, column: 9)
!11755 = !DILocalVariable(name: "inner", scope: !11756, file: !2933, line: 2210, type: !8704, align: 8)
!11756 = distinct !DILexicalBlock(scope: !11746, file: !2933, line: 2210, column: 55)
!11757 = !DILocation(line: 2201, column: 13, scope: !11746)
!11758 = !DILocation(line: 2210, column: 13, scope: !11754)
!11759 = !DILocation(line: 2210, column: 42, scope: !11756)
!11760 = !DILocation(line: 2210, column: 28, scope: !11756)
!11761 = !DILocation(line: 2210, column: 33, scope: !11756)
!11762 = !DILocation(line: 2210, column: 57, scope: !11756)
!11763 = !DILocation(line: 2212, column: 12, scope: !11754)
!11764 = !DILocalVariable(name: "self", scope: !11765, file: !2933, line: 2212, type: !8601, align: 8)
!11765 = !DILexicalBlockFile(scope: !11766, file: !2933, discriminator: 0)
!11766 = distinct !DISubprogram(name: "fetch_sub", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h376aef57f7cd74f3E", scope: !214, file: !6046, line: 2397, type: !11333, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11767)
!11767 = !{!11764, !11768, !11769}
!11768 = !DILocalVariable(name: "val", scope: !11765, file: !2933, line: 2212, type: !9, align: 8)
!11769 = !DILocalVariable(name: "order", scope: !11765, file: !2933, line: 2212, type: !870, align: 1)
!11770 = !DILocation(line: 2212, column: 12, scope: !11765, inlinedAt: !11763)
!11771 = !DILocalVariable(name: "self", scope: !11772, file: !2933, line: 2212, type: !8613, align: 8)
!11772 = !DILexicalBlockFile(scope: !11773, file: !2933, discriminator: 0)
!11773 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11774)
!11774 = !{!11771}
!11775 = !DILocation(line: 2212, column: 12, scope: !11772, inlinedAt: !11776)
!11776 = !DILocation(line: 2399, column: 37, scope: !11766, inlinedAt: !11763)
!11777 = !DILocation(line: 2216, column: 6, scope: !11746)
!11778 = !DILocation(line: 2213, column: 13, scope: !11754)
!11779 = !DILocation(line: 2212, column: 9, scope: !11754)
!11780 = !DILocation(line: 2214, column: 40, scope: !11754)
!11781 = !DILocalVariable(name: "self", scope: !11782, file: !2933, line: 2214, type: !207, align: 8)
!11782 = !DILexicalBlockFile(scope: !11783, file: !2933, discriminator: 0)
!11783 = distinct !DISubprogram(name: "cast<alloc::sync::ArcInner<std::thread::Inner>, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3bdcbd8cd53e667fE", scope: !207, file: !1413, line: 453, type: !11784, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !11787, retainedNodes: !11786)
!11784 = !DISubroutineType(types: !11785)
!11785 = !{!350, !207}
!11786 = !{!11781}
!11787 = !{!281, !1958}
!11788 = !DILocation(line: 2214, column: 40, scope: !11782, inlinedAt: !11780)
!11789 = !DILocalVariable(name: "self", scope: !11790, file: !2933, line: 2214, type: !207, align: 8)
!11790 = !DILexicalBlockFile(scope: !11791, file: !2933, discriminator: 0)
!11791 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf5dc9bbda4fbb836E", scope: !207, file: !1413, line: 330, type: !8462, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !11792)
!11792 = !{!11789}
!11793 = !DILocation(line: 2214, column: 40, scope: !11790, inlinedAt: !11794)
!11794 = !DILocation(line: 455, column: 41, scope: !11783, inlinedAt: !11780)
!11795 = !DILocalVariable(name: "ptr", scope: !11796, file: !2933, line: 2214, type: !1021, align: 8)
!11796 = !DILexicalBlockFile(scope: !11797, file: !2933, discriminator: 0)
!11797 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11798)
!11798 = !{!11795}
!11799 = !DILocation(line: 2214, column: 40, scope: !11796, inlinedAt: !11800)
!11800 = !DILocation(line: 455, column: 18, scope: !11783, inlinedAt: !11780)
!11801 = !DILocation(line: 2214, column: 79, scope: !11754)
!11802 = !DILocalVariable(name: "self", scope: !11803, file: !2933, line: 2214, type: !207, align: 8)
!11803 = !DILexicalBlockFile(scope: !11804, file: !2933, discriminator: 0)
!11804 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Inner>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf5dc9bbda4fbb836E", scope: !207, file: !1413, line: 330, type: !8462, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !280, retainedNodes: !11805)
!11805 = !{!11802}
!11806 = !DILocation(line: 2214, column: 79, scope: !11803, inlinedAt: !11801)
!11807 = !DILocation(line: 2214, column: 57, scope: !11754)
!11808 = !DILocation(line: 2214, column: 22, scope: !11754)
!11809 = distinct !DISubprogram(name: "drop<std::thread::scoped::ScopeData>", linkageName: "_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h48f4b0751265aadcE", scope: !11747, file: !2933, line: 2201, type: !11810, scopeLine: 2201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !11813)
!11810 = !DISubroutineType(types: !11811)
!11811 = !{null, !11812}
!11812 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::sync::Weak<std::thread::scoped::ScopeData>", baseType: !4501, size: 64, align: 64, dwarfAddressSpace: 0)
!11813 = !{!11814, !11815, !11817}
!11814 = !DILocalVariable(name: "self", arg: 1, scope: !11809, file: !2933, line: 2201, type: !11812)
!11815 = !DILocalVariable(name: "inner", scope: !11816, file: !2933, line: 2210, type: !8704, align: 8)
!11816 = distinct !DILexicalBlock(scope: !11809, file: !2933, line: 2210, column: 9)
!11817 = !DILocalVariable(name: "inner", scope: !11818, file: !2933, line: 2210, type: !8704, align: 8)
!11818 = distinct !DILexicalBlock(scope: !11809, file: !2933, line: 2210, column: 55)
!11819 = !DILocation(line: 2201, column: 13, scope: !11809)
!11820 = !DILocation(line: 2210, column: 13, scope: !11816)
!11821 = !DILocation(line: 2210, column: 42, scope: !11818)
!11822 = !DILocation(line: 2210, column: 28, scope: !11818)
!11823 = !DILocation(line: 2210, column: 33, scope: !11818)
!11824 = !DILocation(line: 2210, column: 57, scope: !11818)
!11825 = !DILocation(line: 2212, column: 12, scope: !11816)
!11826 = !DILocalVariable(name: "self", scope: !11827, file: !2933, line: 2212, type: !8601, align: 8)
!11827 = !DILexicalBlockFile(scope: !11828, file: !2933, discriminator: 0)
!11828 = distinct !DISubprogram(name: "fetch_sub", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h376aef57f7cd74f3E", scope: !214, file: !6046, line: 2397, type: !11333, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11829)
!11829 = !{!11826, !11830, !11831}
!11830 = !DILocalVariable(name: "val", scope: !11827, file: !2933, line: 2212, type: !9, align: 8)
!11831 = !DILocalVariable(name: "order", scope: !11827, file: !2933, line: 2212, type: !870, align: 1)
!11832 = !DILocation(line: 2212, column: 12, scope: !11827, inlinedAt: !11825)
!11833 = !DILocalVariable(name: "self", scope: !11834, file: !2933, line: 2212, type: !8613, align: 8)
!11834 = !DILexicalBlockFile(scope: !11835, file: !2933, discriminator: 0)
!11835 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11836)
!11836 = !{!11833}
!11837 = !DILocation(line: 2212, column: 12, scope: !11834, inlinedAt: !11838)
!11838 = !DILocation(line: 2399, column: 37, scope: !11828, inlinedAt: !11825)
!11839 = !DILocation(line: 2216, column: 6, scope: !11809)
!11840 = !DILocation(line: 2213, column: 13, scope: !11816)
!11841 = !DILocation(line: 2212, column: 9, scope: !11816)
!11842 = !DILocation(line: 2214, column: 40, scope: !11816)
!11843 = !DILocalVariable(name: "self", scope: !11844, file: !2933, line: 2214, type: !408, align: 8)
!11844 = !DILexicalBlockFile(scope: !11845, file: !2933, discriminator: 0)
!11845 = distinct !DISubprogram(name: "cast<alloc::sync::ArcInner<std::thread::scoped::ScopeData>, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h8a0b10b85f0619e7E", scope: !408, file: !1413, line: 453, type: !11846, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !11849, retainedNodes: !11848)
!11846 = !DISubroutineType(types: !11847)
!11847 = !{!350, !408}
!11848 = !{!11843}
!11849 = !{!426, !1958}
!11850 = !DILocation(line: 2214, column: 40, scope: !11844, inlinedAt: !11842)
!11851 = !DILocalVariable(name: "self", scope: !11852, file: !2933, line: 2214, type: !408, align: 8)
!11852 = !DILexicalBlockFile(scope: !11853, file: !2933, discriminator: 0)
!11853 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34c1f75750307eb0E", scope: !408, file: !1413, line: 330, type: !3000, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !11854)
!11854 = !{!11851}
!11855 = !DILocation(line: 2214, column: 40, scope: !11852, inlinedAt: !11856)
!11856 = !DILocation(line: 455, column: 41, scope: !11845, inlinedAt: !11842)
!11857 = !DILocalVariable(name: "ptr", scope: !11858, file: !2933, line: 2214, type: !1021, align: 8)
!11858 = !DILexicalBlockFile(scope: !11859, file: !2933, discriminator: 0)
!11859 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11860)
!11860 = !{!11857}
!11861 = !DILocation(line: 2214, column: 40, scope: !11858, inlinedAt: !11862)
!11862 = !DILocation(line: 455, column: 18, scope: !11845, inlinedAt: !11842)
!11863 = !DILocation(line: 2214, column: 79, scope: !11816)
!11864 = !DILocalVariable(name: "self", scope: !11865, file: !2933, line: 2214, type: !408, align: 8)
!11865 = !DILexicalBlockFile(scope: !11866, file: !2933, discriminator: 0)
!11866 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34c1f75750307eb0E", scope: !408, file: !1413, line: 330, type: !3000, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !11867)
!11867 = !{!11864}
!11868 = !DILocation(line: 2214, column: 79, scope: !11865, inlinedAt: !11863)
!11869 = !DILocation(line: 2214, column: 57, scope: !11816)
!11870 = !DILocation(line: 2214, column: 22, scope: !11816)
!11871 = distinct !DISubprogram(name: "drop<std::thread::Packet<()>>", linkageName: "_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8eec142c20276135E", scope: !11747, file: !2933, line: 2201, type: !11872, scopeLine: 2201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !492, retainedNodes: !11875)
!11872 = !DISubroutineType(types: !11873)
!11873 = !{null, !11874}
!11874 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::sync::Weak<std::thread::Packet<()>>", baseType: !4538, size: 64, align: 64, dwarfAddressSpace: 0)
!11875 = !{!11876, !11877, !11879}
!11876 = !DILocalVariable(name: "self", arg: 1, scope: !11871, file: !2933, line: 2201, type: !11874)
!11877 = !DILocalVariable(name: "inner", scope: !11878, file: !2933, line: 2210, type: !8704, align: 8)
!11878 = distinct !DILexicalBlock(scope: !11871, file: !2933, line: 2210, column: 9)
!11879 = !DILocalVariable(name: "inner", scope: !11880, file: !2933, line: 2210, type: !8704, align: 8)
!11880 = distinct !DILexicalBlock(scope: !11871, file: !2933, line: 2210, column: 55)
!11881 = !DILocation(line: 2201, column: 13, scope: !11871)
!11882 = !DILocation(line: 2210, column: 13, scope: !11878)
!11883 = !DILocation(line: 2210, column: 42, scope: !11880)
!11884 = !DILocation(line: 2210, column: 28, scope: !11880)
!11885 = !DILocation(line: 2210, column: 33, scope: !11880)
!11886 = !DILocation(line: 2210, column: 57, scope: !11880)
!11887 = !DILocation(line: 2212, column: 12, scope: !11878)
!11888 = !DILocalVariable(name: "self", scope: !11889, file: !2933, line: 2212, type: !8601, align: 8)
!11889 = !DILexicalBlockFile(scope: !11890, file: !2933, discriminator: 0)
!11890 = distinct !DISubprogram(name: "fetch_sub", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h376aef57f7cd74f3E", scope: !214, file: !6046, line: 2397, type: !11333, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11891)
!11891 = !{!11888, !11892, !11893}
!11892 = !DILocalVariable(name: "val", scope: !11889, file: !2933, line: 2212, type: !9, align: 8)
!11893 = !DILocalVariable(name: "order", scope: !11889, file: !2933, line: 2212, type: !870, align: 1)
!11894 = !DILocation(line: 2212, column: 12, scope: !11889, inlinedAt: !11887)
!11895 = !DILocalVariable(name: "self", scope: !11896, file: !2933, line: 2212, type: !8613, align: 8)
!11896 = !DILexicalBlockFile(scope: !11897, file: !2933, discriminator: 0)
!11897 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11898)
!11898 = !{!11895}
!11899 = !DILocation(line: 2212, column: 12, scope: !11896, inlinedAt: !11900)
!11900 = !DILocation(line: 2399, column: 37, scope: !11890, inlinedAt: !11887)
!11901 = !DILocation(line: 2216, column: 6, scope: !11871)
!11902 = !DILocation(line: 2213, column: 13, scope: !11878)
!11903 = !DILocation(line: 2212, column: 9, scope: !11878)
!11904 = !DILocation(line: 2214, column: 40, scope: !11878)
!11905 = !DILocalVariable(name: "self", scope: !11906, file: !2933, line: 2214, type: !385, align: 8)
!11906 = !DILexicalBlockFile(scope: !11907, file: !2933, discriminator: 0)
!11907 = distinct !DISubprogram(name: "cast<alloc::sync::ArcInner<std::thread::Packet<()>>, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h0166e93bdbb4596eE", scope: !385, file: !1413, line: 453, type: !11908, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !11911, retainedNodes: !11910)
!11908 = !DISubroutineType(types: !11909)
!11909 = !{!350, !385}
!11910 = !{!11905}
!11911 = !{!495, !1958}
!11912 = !DILocation(line: 2214, column: 40, scope: !11906, inlinedAt: !11904)
!11913 = !DILocalVariable(name: "self", scope: !11914, file: !2933, line: 2214, type: !385, align: 8)
!11914 = !DILexicalBlockFile(scope: !11915, file: !2933, discriminator: 0)
!11915 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !11916)
!11916 = !{!11913}
!11917 = !DILocation(line: 2214, column: 40, scope: !11914, inlinedAt: !11918)
!11918 = !DILocation(line: 455, column: 41, scope: !11907, inlinedAt: !11904)
!11919 = !DILocalVariable(name: "ptr", scope: !11920, file: !2933, line: 2214, type: !1021, align: 8)
!11920 = !DILexicalBlockFile(scope: !11921, file: !2933, discriminator: 0)
!11921 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11922)
!11922 = !{!11919}
!11923 = !DILocation(line: 2214, column: 40, scope: !11920, inlinedAt: !11924)
!11924 = !DILocation(line: 455, column: 18, scope: !11907, inlinedAt: !11904)
!11925 = !DILocation(line: 2214, column: 79, scope: !11878)
!11926 = !DILocalVariable(name: "self", scope: !11927, file: !2933, line: 2214, type: !385, align: 8)
!11927 = !DILexicalBlockFile(scope: !11928, file: !2933, discriminator: 0)
!11928 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7726403d0d682097E", scope: !385, file: !1413, line: 330, type: !2962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !11929)
!11929 = !{!11926}
!11930 = !DILocation(line: 2214, column: 79, scope: !11927, inlinedAt: !11925)
!11931 = !DILocation(line: 2214, column: 57, scope: !11878)
!11932 = !DILocation(line: 2214, column: 22, scope: !11878)
!11933 = distinct !DISubprogram(name: "drop<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", linkageName: "_ZN68_$LT$alloc..sync..Weak$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha6b9e9feb5fd2bdbE", scope: !11747, file: !2933, line: 2201, type: !11934, scopeLine: 2201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !365, retainedNodes: !11937)
!11934 = !DISubroutineType(types: !11935)
!11935 = !{null, !11936}
!11936 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::sync::Weak<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>", baseType: !4195, size: 64, align: 64, dwarfAddressSpace: 0)
!11937 = !{!11938, !11939, !11941}
!11938 = !DILocalVariable(name: "self", arg: 1, scope: !11933, file: !2933, line: 2201, type: !11936)
!11939 = !DILocalVariable(name: "inner", scope: !11940, file: !2933, line: 2210, type: !8704, align: 8)
!11940 = distinct !DILexicalBlock(scope: !11933, file: !2933, line: 2210, column: 9)
!11941 = !DILocalVariable(name: "inner", scope: !11942, file: !2933, line: 2210, type: !8704, align: 8)
!11942 = distinct !DILexicalBlock(scope: !11933, file: !2933, line: 2210, column: 55)
!11943 = !DILocation(line: 2201, column: 13, scope: !11933)
!11944 = !DILocation(line: 2210, column: 13, scope: !11940)
!11945 = !DILocation(line: 2210, column: 42, scope: !11942)
!11946 = !DILocation(line: 2210, column: 28, scope: !11942)
!11947 = !DILocation(line: 2210, column: 33, scope: !11942)
!11948 = !DILocation(line: 2210, column: 57, scope: !11942)
!11949 = !DILocation(line: 2212, column: 12, scope: !11940)
!11950 = !DILocalVariable(name: "self", scope: !11951, file: !2933, line: 2212, type: !8601, align: 8)
!11951 = !DILexicalBlockFile(scope: !11952, file: !2933, discriminator: 0)
!11952 = distinct !DISubprogram(name: "fetch_sub", linkageName: "_ZN4core4sync6atomic11AtomicUsize9fetch_sub17h376aef57f7cd74f3E", scope: !214, file: !6046, line: 2397, type: !11333, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !11953)
!11953 = !{!11950, !11954, !11955}
!11954 = !DILocalVariable(name: "val", scope: !11951, file: !2933, line: 2212, type: !9, align: 8)
!11955 = !DILocalVariable(name: "order", scope: !11951, file: !2933, line: 2212, type: !870, align: 1)
!11956 = !DILocation(line: 2212, column: 12, scope: !11951, inlinedAt: !11949)
!11957 = !DILocalVariable(name: "self", scope: !11958, file: !2933, line: 2212, type: !8613, align: 8)
!11958 = !DILexicalBlockFile(scope: !11959, file: !2933, discriminator: 0)
!11959 = distinct !DISubprogram(name: "get<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17hedcdbbd11036140fE", scope: !219, file: !2556, line: 1934, type: !8611, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !11960)
!11960 = !{!11957}
!11961 = !DILocation(line: 2212, column: 12, scope: !11958, inlinedAt: !11962)
!11962 = !DILocation(line: 2399, column: 37, scope: !11952, inlinedAt: !11949)
!11963 = !DILocation(line: 2216, column: 6, scope: !11933)
!11964 = !DILocation(line: 2213, column: 13, scope: !11940)
!11965 = !DILocation(line: 2212, column: 9, scope: !11940)
!11966 = !DILocation(line: 2214, column: 40, scope: !11940)
!11967 = !DILocalVariable(name: "self", scope: !11968, file: !2933, line: 2214, type: !298, align: 8)
!11968 = !DILexicalBlockFile(scope: !11969, file: !2933, discriminator: 0)
!11969 = distinct !DISubprogram(name: "cast<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7f3b1198cff49485E", scope: !298, file: !1413, line: 453, type: !11970, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !11973, retainedNodes: !11972)
!11970 = !DISubroutineType(types: !11971)
!11971 = !{!350, !298}
!11972 = !{!11967}
!11973 = !{!368, !1958}
!11974 = !DILocation(line: 2214, column: 40, scope: !11968, inlinedAt: !11966)
!11975 = !DILocalVariable(name: "self", scope: !11976, file: !2933, line: 2214, type: !298, align: 8)
!11976 = !DILexicalBlockFile(scope: !11977, file: !2933, discriminator: 0)
!11977 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h252ca02f60dbca02E", scope: !298, file: !1413, line: 330, type: !8498, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !11978)
!11978 = !{!11975}
!11979 = !DILocation(line: 2214, column: 40, scope: !11976, inlinedAt: !11980)
!11980 = !DILocation(line: 455, column: 41, scope: !11969, inlinedAt: !11966)
!11981 = !DILocalVariable(name: "ptr", scope: !11982, file: !2933, line: 2214, type: !1021, align: 8)
!11982 = !DILexicalBlockFile(scope: !11983, file: !2933, discriminator: 0)
!11983 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !11984)
!11984 = !{!11981}
!11985 = !DILocation(line: 2214, column: 40, scope: !11982, inlinedAt: !11986)
!11986 = !DILocation(line: 455, column: 18, scope: !11969, inlinedAt: !11966)
!11987 = !DILocation(line: 2214, column: 79, scope: !11940)
!11988 = !DILocalVariable(name: "self", scope: !11989, file: !2933, line: 2214, type: !298, align: 8)
!11989 = !DILexicalBlockFile(scope: !11990, file: !2933, discriminator: 0)
!11990 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h252ca02f60dbca02E", scope: !298, file: !1413, line: 330, type: !8498, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !367, retainedNodes: !11991)
!11991 = !{!11988}
!11992 = !DILocation(line: 2214, column: 79, scope: !11989, inlinedAt: !11987)
!11993 = !DILocation(line: 2214, column: 57, scope: !11940)
!11994 = !DILocation(line: 2214, column: 22, scope: !11940)
!11995 = distinct !DISubprogram(name: "spec_eq<i32, i32, 11>", linkageName: "_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h1ea9d04047e5b119E", scope: !11996, file: !6750, line: 148, type: !6753, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7538, retainedNodes: !11997)
!11996 = !DINamespace(name: "{impl#9}", scope: !6752)
!11997 = !{!11998, !11999, !12000}
!11998 = !DILocalVariable(name: "a", arg: 1, scope: !11995, file: !6750, line: 148, type: !564)
!11999 = !DILocalVariable(name: "b", arg: 2, scope: !11995, file: !6750, line: 148, type: !564)
!12000 = !DILocalVariable(name: "b", scope: !12001, file: !6750, line: 151, type: !564, align: 8)
!12001 = distinct !DILexicalBlock(scope: !11995, file: !6750, line: 151, column: 13)
!12002 = !DILocation(line: 148, column: 16, scope: !11995)
!12003 = !DILocation(line: 148, column: 28, scope: !11995)
!12004 = !DILocation(line: 151, column: 23, scope: !11995)
!12005 = !DILocalVariable(name: "self", scope: !12006, file: !6750, line: 151, type: !3506, align: 8)
!12006 = !DILexicalBlockFile(scope: !12007, file: !6750, discriminator: 0)
!12007 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf393e69a7151c5d7E", scope: !1568, file: !1567, line: 476, type: !6960, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !12008)
!12008 = !{!12005}
!12009 = !DILocation(line: 151, column: 23, scope: !12006, inlinedAt: !12004)
!12010 = !DILocalVariable(name: "self", scope: !12011, file: !6750, line: 151, type: !3584, align: 8)
!12011 = !DILexicalBlockFile(scope: !12012, file: !6750, discriminator: 0)
!12012 = distinct !DISubprogram(name: "cast<i32, [i32; 11]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hacc27825a61e1231E", scope: !939, file: !929, line: 46, type: !12013, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12017, retainedNodes: !12016)
!12013 = !DISubroutineType(types: !12014)
!12014 = !{!12015, !3584}
!12015 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 11]", baseType: !565, size: 64, align: 64, dwarfAddressSpace: 0)
!12016 = !{!12010}
!12017 = !{!3515, !7575}
!12018 = !DILocation(line: 151, column: 23, scope: !12011, inlinedAt: !12004)
!12019 = !DILocation(line: 151, column: 21, scope: !11995)
!12020 = !DILocation(line: 151, column: 17, scope: !12001)
!12021 = !DILocation(line: 152, column: 13, scope: !12001)
!12022 = !DILocation(line: 154, column: 6, scope: !11995)
!12023 = distinct !DISubprogram(name: "spec_eq<i32, i32, 16>", linkageName: "_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h904442c2dbb18634E", scope: !11996, file: !6750, line: 148, type: !6766, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7538, retainedNodes: !12024)
!12024 = !{!12025, !12026, !12027}
!12025 = !DILocalVariable(name: "a", arg: 1, scope: !12023, file: !6750, line: 148, type: !585)
!12026 = !DILocalVariable(name: "b", arg: 2, scope: !12023, file: !6750, line: 148, type: !585)
!12027 = !DILocalVariable(name: "b", scope: !12028, file: !6750, line: 151, type: !585, align: 8)
!12028 = distinct !DILexicalBlock(scope: !12023, file: !6750, line: 151, column: 13)
!12029 = !DILocation(line: 148, column: 16, scope: !12023)
!12030 = !DILocation(line: 148, column: 28, scope: !12023)
!12031 = !DILocation(line: 151, column: 23, scope: !12023)
!12032 = !DILocalVariable(name: "self", scope: !12033, file: !6750, line: 151, type: !3506, align: 8)
!12033 = !DILexicalBlockFile(scope: !12034, file: !6750, discriminator: 0)
!12034 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hf393e69a7151c5d7E", scope: !1568, file: !1567, line: 476, type: !6960, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !12035)
!12035 = !{!12032}
!12036 = !DILocation(line: 151, column: 23, scope: !12033, inlinedAt: !12031)
!12037 = !DILocalVariable(name: "self", scope: !12038, file: !6750, line: 151, type: !3584, align: 8)
!12038 = !DILexicalBlockFile(scope: !12039, file: !6750, discriminator: 0)
!12039 = distinct !DISubprogram(name: "cast<i32, [i32; 16]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h0d99698a01c0e77eE", scope: !939, file: !929, line: 46, type: !12040, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12044, retainedNodes: !12043)
!12040 = !DISubroutineType(types: !12041)
!12041 = !{!12042, !3584}
!12042 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 16]", baseType: !586, size: 64, align: 64, dwarfAddressSpace: 0)
!12043 = !{!12037}
!12044 = !{!3515, !7611}
!12045 = !DILocation(line: 151, column: 23, scope: !12038, inlinedAt: !12031)
!12046 = !DILocation(line: 151, column: 21, scope: !12023)
!12047 = !DILocation(line: 151, column: 17, scope: !12028)
!12048 = !DILocation(line: 152, column: 13, scope: !12028)
!12049 = !DILocation(line: 154, column: 6, scope: !12023)
!12050 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6a1e13ce38811b0aE", scope: !12051, file: !1283, line: 2915, type: !12052, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !360, retainedNodes: !12054)
!12051 = !DINamespace(name: "{impl#28}", scope: !339)
!12052 = !DISubroutineType(types: !12053)
!12053 = !{null, !7952}
!12054 = !{!12055}
!12055 = !DILocalVariable(name: "self", arg: 1, scope: !12050, file: !1283, line: 2915, type: !7952)
!12056 = !DILocation(line: 2915, column: 13, scope: !12050)
!12057 = !DILocation(line: 2920, column: 62, scope: !12050)
!12058 = !DILocalVariable(name: "data", scope: !12059, file: !1283, line: 2920, type: !1021, align: 8)
!12059 = !DILexicalBlockFile(scope: !12060, file: !1283, discriminator: 0)
!12060 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hbea3f0d34aed7cbeE", scope: !53, file: !959, line: 727, type: !1046, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12061)
!12061 = !{!12058, !12062}
!12062 = !DILocalVariable(name: "len", scope: !12059, file: !1283, line: 2920, type: !9, align: 8)
!12063 = !DILocation(line: 2920, column: 32, scope: !12059, inlinedAt: !12064)
!12064 = !DILocation(line: 2920, column: 32, scope: !12050)
!12065 = !DILocation(line: 2920, column: 81, scope: !12050)
!12066 = !DILocalVariable(name: "self", scope: !12067, file: !1283, line: 2920, type: !1021, align: 8)
!12067 = !DILexicalBlockFile(scope: !12068, file: !1283, discriminator: 0)
!12068 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h91b2ca1930163954E", scope: !1027, file: !1016, line: 45, type: !1056, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !973, retainedNodes: !12069)
!12069 = !{!12066}
!12070 = !DILocation(line: 2920, column: 32, scope: !12067, inlinedAt: !12071)
!12071 = !DILocation(line: 728, column: 24, scope: !12060, inlinedAt: !12064)
!12072 = !DILocalVariable(name: "data_address", scope: !12073, file: !1283, line: 2920, type: !1058, align: 8)
!12073 = !DILexicalBlockFile(scope: !12074, file: !1283, discriminator: 0)
!12074 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h13ff56bac2312bbbE", scope: !981, file: !980, line: 127, type: !1065, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12075)
!12075 = !{!12072, !12076}
!12076 = !DILocalVariable(name: "metadata", scope: !12073, file: !1283, line: 2920, type: !9, align: 8)
!12077 = !DILocation(line: 2920, column: 32, scope: !12073, inlinedAt: !12078)
!12078 = !DILocation(line: 728, column: 5, scope: !12060, inlinedAt: !12064)
!12079 = !DILocation(line: 2920, column: 13, scope: !12050)
!12080 = !DILocation(line: 2923, column: 6, scope: !12050)
!12081 = distinct !DISubprogram(name: "drop<&str, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he934566eb94c4369E", scope: !12051, file: !1283, line: 2915, type: !12082, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !12084)
!12082 = !DISubroutineType(types: !12083)
!12083 = !{null, !1354}
!12084 = !{!12085}
!12085 = !DILocalVariable(name: "self", arg: 1, scope: !12081, file: !1283, line: 2915, type: !1354)
!12086 = !DILocation(line: 2915, column: 13, scope: !12081)
!12087 = !DILocation(line: 2920, column: 62, scope: !12081)
!12088 = !DILocalVariable(name: "data", scope: !12089, file: !1283, line: 2920, type: !1275, align: 8)
!12089 = !DILexicalBlockFile(scope: !12090, file: !1283, discriminator: 0)
!12090 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<&str>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h9e7d4bb88ac464bdE", scope: !53, file: !959, line: 727, type: !12091, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !12097)
!12091 = !DISubroutineType(types: !12092)
!12092 = !{!12093, !1275, !9}
!12093 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [&str]", file: !2, size: 128, align: 64, elements: !12094, templateParams: !28, identifier: "d6e54d0bd0cf28bfa13e7647c81ffed5")
!12094 = !{!12095, !12096}
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !12093, file: !2, baseType: !1655, size: 64, align: 64)
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12093, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!12097 = !{!12088, !12098}
!12098 = !DILocalVariable(name: "len", scope: !12089, file: !1283, line: 2920, type: !9, align: 8)
!12099 = !DILocation(line: 2920, column: 32, scope: !12089, inlinedAt: !12100)
!12100 = !DILocation(line: 2920, column: 32, scope: !12081)
!12101 = !DILocation(line: 2920, column: 81, scope: !12081)
!12102 = !DILocalVariable(name: "self", scope: !12103, file: !1283, line: 2920, type: !1275, align: 8)
!12103 = !DILexicalBlockFile(scope: !12104, file: !1283, discriminator: 0)
!12104 = distinct !DISubprogram(name: "cast<&str, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hc3eafe4788cb75f1E", scope: !1027, file: !1016, line: 45, type: !12105, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12108, retainedNodes: !12107)
!12105 = !DISubroutineType(types: !12106)
!12106 = !{!1058, !1275}
!12107 = !{!12102}
!12108 = !{!1204, !974}
!12109 = !DILocation(line: 2920, column: 32, scope: !12103, inlinedAt: !12110)
!12110 = !DILocation(line: 728, column: 24, scope: !12090, inlinedAt: !12100)
!12111 = !DILocalVariable(name: "data_address", scope: !12112, file: !1283, line: 2920, type: !1058, align: 8)
!12112 = !DILexicalBlockFile(scope: !12113, file: !1283, discriminator: 0)
!12113 = distinct !DISubprogram(name: "from_raw_parts_mut<[&str]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hc5232eae580b1d85E", scope: !981, file: !980, line: 127, type: !12114, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !12116)
!12114 = !DISubroutineType(types: !12115)
!12115 = !{!12093, !1058, !9}
!12116 = !{!12111, !12117}
!12117 = !DILocalVariable(name: "metadata", scope: !12112, file: !1283, line: 2920, type: !9, align: 8)
!12118 = !DILocation(line: 2920, column: 32, scope: !12112, inlinedAt: !12119)
!12119 = !DILocation(line: 728, column: 5, scope: !12090, inlinedAt: !12100)
!12120 = !DILocation(line: 2920, column: 13, scope: !12081)
!12121 = !DILocation(line: 2923, column: 6, scope: !12081)
!12122 = distinct !DISubprogram(name: "drop<()>", linkageName: "_ZN70_$LT$std..thread..Packet$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h0ac411b30db094d6E", scope: !1375, file: !2499, line: 1317, type: !12123, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !12125)
!12123 = !DISubroutineType(types: !12124)
!12124 = !{null, !2536}
!12125 = !{!12126, !12127, !12129, !12132}
!12126 = !DILocalVariable(name: "self", arg: 1, scope: !12122, file: !2499, line: 1317, type: !2536)
!12127 = !DILocalVariable(name: "unhandled_panic", scope: !12128, file: !2499, line: 1321, type: !1244, align: 1)
!12128 = distinct !DILexicalBlock(scope: !12122, file: !2499, line: 1321, column: 9)
!12129 = !DILocalVariable(name: "out", scope: !12130, file: !2499, line: 1335, type: !22, align: 1)
!12130 = !DILexicalBlockFile(scope: !12131, file: !2499, discriminator: 0)
!12131 = distinct !DILexicalBlock(scope: !12128, file: !2420, line: 36, column: 66)
!12132 = !DILocalVariable(name: "scope", scope: !12133, file: !2499, line: 1338, type: !2758, align: 8)
!12133 = distinct !DILexicalBlock(scope: !12128, file: !2499, line: 1338, column: 42)
!12134 = !DILocation(line: 1317, column: 13, scope: !12122)
!12135 = !DILocation(line: 1321, column: 13, scope: !12128)
!12136 = !DILocation(line: 1335, column: 13, scope: !12130)
!12137 = !DILocation(line: 1321, column: 40, scope: !12122)
!12138 = !DILocalVariable(name: "self", scope: !12139, file: !2499, line: 1321, type: !1378, align: 8)
!12139 = !DILexicalBlockFile(scope: !12140, file: !2499, discriminator: 0)
!12140 = distinct !DISubprogram(name: "get_mut<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17hd3a273f706cb22b2E", scope: !435, file: !2556, line: 1959, type: !2557, scopeLine: 1959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !12141)
!12141 = !{!12138}
!12142 = !DILocation(line: 1321, column: 40, scope: !12139, inlinedAt: !12137)
!12143 = !DILocation(line: 1321, column: 31, scope: !12122)
!12144 = !DILocation(line: 1332, column: 69, scope: !12128)
!12145 = !DILocation(line: 1332, column: 45, scope: !12128)
!12146 = !DILocation(line: 1332, column: 25, scope: !12128)
!12147 = !DILocation(line: 1332, column: 16, scope: !12128)
!12148 = !DILocation(line: 1336, column: 9, scope: !12128)
!12149 = !DILocation(line: 1338, column: 30, scope: !12133)
!12150 = !DILocation(line: 1338, column: 16, scope: !12133)
!12151 = !DILocation(line: 1338, column: 21, scope: !12133)
!12152 = !DILocation(line: 1343, column: 13, scope: !12133)
!12153 = !DILocalVariable(name: "self", scope: !12154, file: !2499, line: 1343, type: !2758, align: 8)
!12154 = !DILexicalBlockFile(scope: !12155, file: !2499, discriminator: 0)
!12155 = distinct !DISubprogram(name: "deref<std::thread::scoped::ScopeData>", linkageName: "_ZN69_$LT$alloc..sync..Arc$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6a4049607f87aa22E", scope: !2934, file: !2933, line: 1380, type: !2975, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !12156)
!12156 = !{!12153}
!12157 = !DILocation(line: 1343, column: 13, scope: !12154, inlinedAt: !12152)
!12158 = !DILocalVariable(name: "self", scope: !12159, file: !2499, line: 1343, type: !2758, align: 8)
!12159 = !DILexicalBlockFile(scope: !12160, file: !2499, discriminator: 0)
!12160 = distinct !DISubprogram(name: "inner<std::thread::scoped::ScopeData>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$5inner17h4adc7ecfdfdf4cc7E", scope: !405, file: !2933, line: 1091, type: !2982, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !423, retainedNodes: !12161)
!12161 = !{!12158}
!12162 = !DILocation(line: 1343, column: 13, scope: !12159, inlinedAt: !12163)
!12163 = !DILocation(line: 1381, column: 10, scope: !12155, inlinedAt: !12152)
!12164 = !DILocalVariable(name: "self", scope: !12165, file: !2499, line: 1343, type: !2993, align: 8)
!12165 = !DILexicalBlockFile(scope: !12166, file: !2499, discriminator: 0)
!12166 = distinct !DISubprogram(name: "as_ref<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hf2c6e78f21739783E", scope: !408, file: !1413, line: 378, type: !2991, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !12167)
!12167 = !{!12164}
!12168 = !DILocation(line: 1343, column: 13, scope: !12165, inlinedAt: !12169)
!12169 = !DILocation(line: 1097, column: 18, scope: !12160, inlinedAt: !12163)
!12170 = !DILocalVariable(name: "self", scope: !12171, file: !2499, line: 1343, type: !408, align: 8)
!12171 = !DILexicalBlockFile(scope: !12172, file: !2499, discriminator: 0)
!12172 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<std::thread::scoped::ScopeData>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h34c1f75750307eb0E", scope: !408, file: !1413, line: 330, type: !3000, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !425, retainedNodes: !12173)
!12173 = !{!12170}
!12174 = !DILocation(line: 1343, column: 13, scope: !12171, inlinedAt: !12175)
!12175 = !DILocation(line: 381, column: 20, scope: !12166, inlinedAt: !12169)
!12176 = !DILocation(line: 1343, column: 49, scope: !12133)
!12177 = !DILocation(line: 1345, column: 6, scope: !12122)
!12178 = !DILocation(line: 1338, column: 9, scope: !12128)
!12179 = !DILocation(line: 1335, column: 13, scope: !12128)
!12180 = !DILocalVariable(name: "x", scope: !12181, file: !2499, line: 1335, type: !12185, align: 8)
!12181 = !DILexicalBlockFile(scope: !12182, file: !2499, discriminator: 0)
!12182 = distinct !DISubprogram(name: "new_display<core::fmt::Arguments>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hcd3bab6f37e1fb8eE", scope: !1707, file: !2158, line: 318, type: !12183, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7526, retainedNodes: !12186)
!12183 = !DISubroutineType(types: !12184)
!12184 = !{!1707, !12185}
!12185 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::Arguments", baseType: !1649, size: 64, align: 64, dwarfAddressSpace: 0)
!12186 = !{!12180}
!12187 = !DILocation(line: 1335, column: 13, scope: !12181, inlinedAt: !12188)
!12188 = !DILocation(line: 45, column: 56, scope: !12131)
!12189 = !DILocalVariable(name: "x", scope: !12190, file: !2499, line: 1335, type: !12185, align: 8)
!12190 = !DILexicalBlockFile(scope: !12191, file: !2499, discriminator: 0)
!12191 = distinct !DISubprogram(name: "new<core::fmt::Arguments>", linkageName: "_ZN4core3fmt10ArgumentV13new17h16e2b690f79ddc6dE", scope: !1707, file: !2158, line: 329, type: !12192, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !7526, retainedNodes: !12197)
!12192 = !DISubroutineType(types: !12193)
!12193 = !{!1707, !12185, !12194}
!12194 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::Arguments, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !12195, size: 64, align: 64, dwarfAddressSpace: 0)
!12195 = !DISubroutineType(types: !12196)
!12196 = !{!1717, !12185, !1733}
!12197 = !{!12189, !12198}
!12198 = !DILocalVariable(name: "f", scope: !12190, file: !2499, line: 1335, type: !12194, align: 8)
!12199 = !DILocation(line: 1335, column: 13, scope: !12190, inlinedAt: !12200)
!12200 = !DILocation(line: 319, column: 13, scope: !12182, inlinedAt: !12188)
!12201 = !DILocation(line: 1317, column: 5, scope: !12122)
!12202 = distinct !DISubprogram(name: "{closure#0}<()>", linkageName: "_ZN70_$LT$std..thread..Packet$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h57932cbd980faa8bE", scope: !1374, file: !2499, line: 1332, type: !12203, scopeLine: 1332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !12206)
!12203 = !DISubroutineType(types: !12204)
!12204 = !{null, !12205}
!12205 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::thread::{impl#6}::drop::{closure_env#0}<()>", baseType: !1373, size: 64, align: 64, dwarfAddressSpace: 0)
!12206 = !{!12207}
!12207 = !DILocalVariable(name: "self__result", scope: !12202, file: !2499, line: 1317, type: !435, align: 8)
!12208 = !DILocation(line: 1317, column: 13, scope: !12202)
!12209 = !DILocation(line: 1333, column: 38, scope: !12202)
!12210 = !DILocation(line: 1333, column: 14, scope: !12202)
!12211 = !DILocalVariable(name: "self", scope: !12212, file: !2499, line: 1333, type: !1378, align: 8)
!12212 = !DILexicalBlockFile(scope: !12213, file: !2499, discriminator: 0)
!12213 = distinct !DISubprogram(name: "get_mut<core::option::Option<core::result::Result<(), alloc::boxed::Box<(dyn core::any::Any + core::marker::Send), alloc::alloc::Global>>>>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$7get_mut17hd3a273f706cb22b2E", scope: !435, file: !2556, line: 1959, type: !2557, scopeLine: 1959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !472, retainedNodes: !12214)
!12214 = !{!12211}
!12215 = !DILocation(line: 1333, column: 14, scope: !12212, inlinedAt: !12210)
!12216 = !DILocation(line: 1333, column: 13, scope: !12202)
!12217 = !DILocation(line: 1333, column: 41, scope: !12202)
!12218 = !DILocation(line: 1332, column: 71, scope: !12202)
!12219 = !DILocation(line: 1332, column: 69, scope: !12202)
!12220 = distinct !DISubprogram(name: "deref<&str, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfb4be6d7c3069c49E", scope: !11469, file: !1283, line: 2531, type: !12221, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !12223)
!12221 = !DISubroutineType(types: !12222)
!12222 = !{!1652, !8110}
!12223 = !{!12224}
!12224 = !DILocalVariable(name: "self", arg: 1, scope: !12220, file: !1283, line: 2531, type: !8110)
!12225 = !DILocation(line: 2531, column: 14, scope: !12220)
!12226 = !DILocation(line: 2532, column: 40, scope: !12220)
!12227 = !DILocalVariable(name: "data", scope: !12228, file: !1283, line: 2532, type: !1202, align: 8)
!12228 = !DILexicalBlockFile(scope: !12229, file: !1283, discriminator: 0)
!12229 = distinct !DISubprogram(name: "from_raw_parts<&str>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h3e582b0a125e3882E", scope: !11479, file: !11478, line: 90, type: !12230, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !12232)
!12230 = !DISubroutineType(types: !12231)
!12231 = !{!1652, !1202, !9}
!12232 = !{!12227, !12233, !12234}
!12233 = !DILocalVariable(name: "len", scope: !12228, file: !1283, line: 2532, type: !9, align: 8)
!12234 = !DILocalVariable(name: "runtime", scope: !12235, file: !1283, line: 2532, type: !12237, align: 8)
!12235 = !DILexicalBlockFile(scope: !12236, file: !1283, discriminator: 0)
!12236 = distinct !DILexicalBlock(scope: !12229, file: !913, line: 2336, column: 13)
!12237 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&str>", scope: !11488, file: !2, size: 128, align: 64, elements: !12238, templateParams: !28, identifier: "951f995a03678a1ddfd9df5f599824")
!12238 = !{!12239, !12241}
!12239 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !12237, file: !2, baseType: !12240, size: 64, align: 64)
!12240 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const &str", baseType: !1202, size: 64, align: 64, dwarfAddressSpace: 0)
!12241 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !12237, file: !2, baseType: !918, size: 64, align: 64, offset: 64)
!12242 = !DILocation(line: 2532, column: 18, scope: !12228, inlinedAt: !12243)
!12243 = !DILocation(line: 2532, column: 18, scope: !12220)
!12244 = !DILocation(line: 2532, column: 55, scope: !12220)
!12245 = !DILocalVariable(name: "data", scope: !12246, file: !1283, line: 2532, type: !1202, align: 8)
!12246 = !DILexicalBlockFile(scope: !12247, file: !1283, discriminator: 0)
!12247 = distinct !DISubprogram(name: "slice_from_raw_parts<&str>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h8d72cb937d7b8fe8E", scope: !53, file: !959, line: 695, type: !12248, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !12254)
!12248 = !DISubroutineType(types: !12249)
!12249 = !{!12250, !1202, !9}
!12250 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [&str]", file: !2, size: 128, align: 64, elements: !12251, templateParams: !28, identifier: "20b18279343bb8c516faf452a181084")
!12251 = !{!12252, !12253}
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !12250, file: !2, baseType: !1655, size: 64, align: 64)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12250, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!12254 = !{!12245, !12255}
!12255 = !DILocalVariable(name: "len", scope: !12246, file: !1283, line: 2532, type: !9, align: 8)
!12256 = !DILocation(line: 2532, column: 18, scope: !12246, inlinedAt: !12257)
!12257 = !DILocation(line: 97, column: 11, scope: !12229, inlinedAt: !12243)
!12258 = !DILocalVariable(name: "self", scope: !12259, file: !1283, line: 2532, type: !1202, align: 8)
!12259 = !DILexicalBlockFile(scope: !12260, file: !1283, discriminator: 0)
!12260 = distinct !DISubprogram(name: "cast<&str, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h3247ff4f4b42b481E", scope: !939, file: !929, line: 46, type: !12261, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12108, retainedNodes: !12263)
!12261 = !DISubroutineType(types: !12262)
!12262 = !{!6, !1202}
!12263 = !{!12258}
!12264 = !DILocation(line: 2532, column: 18, scope: !12259, inlinedAt: !12265)
!12265 = !DILocation(line: 696, column: 20, scope: !12247, inlinedAt: !12257)
!12266 = !DILocalVariable(name: "data_address", scope: !12267, file: !1283, line: 2532, type: !6, align: 8)
!12267 = !DILexicalBlockFile(scope: !12268, file: !1283, discriminator: 0)
!12268 = distinct !DISubprogram(name: "from_raw_parts<[&str]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hfc08eda36906adefE", scope: !981, file: !980, line: 110, type: !12269, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !12271)
!12269 = !DISubroutineType(types: !12270)
!12270 = !{!12250, !6, !9}
!12271 = !{!12266, !12272}
!12272 = !DILocalVariable(name: "metadata", scope: !12267, file: !1283, line: 2532, type: !9, align: 8)
!12273 = !DILocation(line: 2532, column: 18, scope: !12267, inlinedAt: !12274)
!12274 = !DILocation(line: 696, column: 5, scope: !12247, inlinedAt: !12257)
!12275 = !DILocation(line: 2533, column: 6, scope: !12220)
!12276 = distinct !DISubprogram(name: "equal<u8, u8>", linkageName: "_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17h3b54d3325e8b8859E", scope: !12277, file: !6816, line: 82, type: !6819, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3683, retainedNodes: !12278)
!12277 = !DINamespace(name: "{impl#5}", scope: !6818)
!12278 = !{!12279, !12280, !12281}
!12279 = !DILocalVariable(name: "self", arg: 1, scope: !12276, file: !6816, line: 82, type: !1083)
!12280 = !DILocalVariable(name: "other", arg: 2, scope: !12276, file: !6816, line: 82, type: !1083)
!12281 = !DILocalVariable(name: "size", scope: !12282, file: !6816, line: 90, type: !9, align: 8)
!12282 = distinct !DILexicalBlock(scope: !12276, file: !6816, line: 90, column: 13)
!12283 = !DILocation(line: 82, column: 14, scope: !12276)
!12284 = !DILocation(line: 82, column: 21, scope: !12276)
!12285 = !DILocation(line: 83, column: 12, scope: !12276)
!12286 = !DILocation(line: 90, column: 41, scope: !12276)
!12287 = !DILocalVariable(name: "val", scope: !12288, file: !6816, line: 90, type: !1083, align: 8)
!12288 = !DILexicalBlockFile(scope: !12289, file: !6816, discriminator: 0)
!12289 = distinct !DISubprogram(name: "size_of_val<[u8]>", linkageName: "_ZN4core3mem11size_of_val17hf2d99659b425986eE", scope: !789, file: !3835, line: 342, type: !12290, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12292)
!12290 = !DISubroutineType(types: !12291)
!12291 = !{!9, !1083}
!12292 = !{!12287}
!12293 = !DILocation(line: 90, column: 24, scope: !12288, inlinedAt: !12294)
!12294 = !DILocation(line: 90, column: 24, scope: !12276)
!12295 = !DILocation(line: 90, column: 17, scope: !12282)
!12296 = !DILocation(line: 84, column: 20, scope: !12276)
!12297 = !DILocation(line: 93, column: 6, scope: !12276)
!12298 = !DILocation(line: 91, column: 20, scope: !12282)
!12299 = !DILocalVariable(name: "self", scope: !12300, file: !6816, line: 91, type: !1083, align: 8)
!12300 = !DILexicalBlockFile(scope: !12301, file: !6816, discriminator: 0)
!12301 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h24914325a8ead00fE", scope: !1568, file: !1567, line: 476, type: !6864, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12302)
!12302 = !{!12299}
!12303 = !DILocation(line: 91, column: 20, scope: !12300, inlinedAt: !12298)
!12304 = !DILocation(line: 91, column: 48, scope: !12282)
!12305 = !DILocalVariable(name: "self", scope: !12306, file: !6816, line: 91, type: !1083, align: 8)
!12306 = !DILexicalBlockFile(scope: !12307, file: !6816, discriminator: 0)
!12307 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h24914325a8ead00fE", scope: !1568, file: !1567, line: 476, type: !6864, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12308)
!12308 = !{!12305}
!12309 = !DILocation(line: 91, column: 48, scope: !12306, inlinedAt: !12304)
!12310 = !DILocation(line: 91, column: 13, scope: !12282)
!12311 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h585e02aa47efab1bE", scope: !11710, file: !889, line: 207, type: !12312, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12314)
!12312 = !DISubroutineType(types: !12313)
!12313 = !{!4756, !9, !1083}
!12314 = !{!12315, !12316}
!12315 = !DILocalVariable(name: "self", arg: 1, scope: !12311, file: !889, line: 207, type: !9)
!12316 = !DILocalVariable(name: "slice", arg: 2, scope: !12311, file: !889, line: 207, type: !1083)
!12317 = !DILocation(line: 207, column: 12, scope: !12311)
!12318 = !DILocation(line: 207, column: 18, scope: !12311)
!12319 = !DILocation(line: 209, column: 12, scope: !12311)
!12320 = !DILocation(line: 209, column: 87, scope: !12311)
!12321 = !DILocation(line: 209, column: 9, scope: !12311)
!12322 = !DILocation(line: 209, column: 49, scope: !12311)
!12323 = !DILocalVariable(name: "self", scope: !12324, file: !889, line: 209, type: !9, align: 8)
!12324 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h9a338a16d38b8806E", scope: !11710, file: !889, line: 219, type: !12325, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12327)
!12325 = !DISubroutineType(types: !12326)
!12326 = !{!353, !9, !895}
!12327 = !{!12323, !12328, !12329}
!12328 = !DILocalVariable(name: "slice", scope: !12324, file: !889, line: 209, type: !895, align: 8)
!12329 = !DILocalVariable(name: "runtime", scope: !12330, file: !889, line: 209, type: !12332, align: 8)
!12330 = !DILexicalBlockFile(scope: !12331, file: !889, discriminator: 0)
!12331 = distinct !DILexicalBlock(scope: !12324, file: !913, line: 2336, column: 13)
!12332 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !12333, file: !2, size: 128, align: 64, elements: !12334, templateParams: !28, identifier: "7104d3ced1030246c65aea384aa33b26")
!12333 = !DINamespace(name: "get_unchecked", scope: !11710)
!12334 = !{!12335, !12336}
!12335 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !12332, file: !2, baseType: !918, size: 64, align: 64)
!12336 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !12332, file: !2, baseType: !921, size: 64, align: 64, offset: 64)
!12337 = !DILocation(line: 209, column: 49, scope: !12324, inlinedAt: !12322)
!12338 = !DILocation(line: 209, column: 68, scope: !12311)
!12339 = !DILocalVariable(name: "self", scope: !12340, file: !889, line: 209, type: !895, align: 8)
!12340 = !DILexicalBlockFile(scope: !12341, file: !889, discriminator: 0)
!12341 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1088b55685155f31E", scope: !930, file: !929, line: 1385, type: !932, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12342)
!12342 = !{!12339}
!12343 = !DILocation(line: 209, column: 49, scope: !12340, inlinedAt: !12344)
!12344 = !DILocation(line: 226, column: 13, scope: !12324, inlinedAt: !12322)
!12345 = !DILocalVariable(name: "self", scope: !12346, file: !889, line: 209, type: !353, align: 8)
!12346 = !DILexicalBlockFile(scope: !12347, file: !889, discriminator: 0)
!12347 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h82208e5cbd5d7609E", scope: !939, file: !929, line: 871, type: !940, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12348)
!12348 = !{!12345, !12349}
!12349 = !DILocalVariable(name: "count", scope: !12346, file: !889, line: 209, type: !9, align: 8)
!12350 = !DILocation(line: 209, column: 49, scope: !12346, inlinedAt: !12344)
!12351 = !DILocalVariable(name: "self", scope: !12352, file: !889, line: 209, type: !353, align: 8)
!12352 = !DILexicalBlockFile(scope: !12353, file: !889, discriminator: 0)
!12353 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17ha09c9658f9aa8a93E", scope: !939, file: !929, line: 453, type: !949, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12354)
!12354 = !{!12351, !12355}
!12355 = !DILocalVariable(name: "count", scope: !12352, file: !889, line: 209, type: !951, align: 8)
!12356 = !DILocation(line: 209, column: 49, scope: !12352, inlinedAt: !12357)
!12357 = !DILocation(line: 876, column: 18, scope: !12347, inlinedAt: !12344)
!12358 = !DILocation(line: 209, column: 42, scope: !12311)
!12359 = !DILocation(line: 210, column: 6, scope: !12311)
!12360 = distinct !DISubprogram(name: "index<&str>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hc2bd77b2ca9788fdE", scope: !11710, file: !889, line: 240, type: !12361, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !12363)
!12361 = !DISubroutineType(types: !12362)
!12362 = !{!3679, !9, !1652, !1109}
!12363 = !{!12364, !12365}
!12364 = !DILocalVariable(name: "self", arg: 1, scope: !12360, file: !889, line: 240, type: !9)
!12365 = !DILocalVariable(name: "slice", arg: 2, scope: !12360, file: !889, line: 240, type: !1652)
!12366 = !DILocation(line: 240, column: 14, scope: !12360)
!12367 = !DILocation(line: 240, column: 20, scope: !12360)
!12368 = !DILocation(line: 242, column: 10, scope: !12360)
!12369 = !DILocation(line: 242, column: 9, scope: !12360)
!12370 = !DILocation(line: 243, column: 6, scope: !12360)
!12371 = distinct !DISubprogram(name: "drop<&str, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5d708344fc23db98E", scope: !12372, file: !1300, line: 477, type: !12373, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !12375)
!12372 = !DINamespace(name: "{impl#3}", scope: !343)
!12373 = !DISubroutineType(types: !12374)
!12374 = !{null, !10882}
!12375 = !{!12376, !12377, !12379}
!12376 = !DILocalVariable(name: "self", arg: 1, scope: !12371, file: !1300, line: 477, type: !10882)
!12377 = !DILocalVariable(name: "ptr", scope: !12378, file: !1300, line: 478, type: !350, align: 8)
!12378 = distinct !DILexicalBlock(scope: !12371, file: !1300, line: 478, column: 60)
!12379 = !DILocalVariable(name: "layout", scope: !12378, file: !1300, line: 478, type: !1463, align: 8)
!12380 = !DILocation(line: 477, column: 13, scope: !12371)
!12381 = !DILocation(line: 478, column: 38, scope: !12378)
!12382 = !DILocation(line: 478, column: 16, scope: !12378)
!12383 = !DILocation(line: 478, column: 22, scope: !12378)
!12384 = !DILocation(line: 478, column: 27, scope: !12378)
!12385 = !DILocation(line: 479, column: 22, scope: !12378)
!12386 = !DILocation(line: 481, column: 6, scope: !12371)
!12387 = !DILocation(line: 478, column: 9, scope: !12371)
!12388 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hd818a3818618aa12E", scope: !12372, file: !1300, line: 477, type: !12389, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !360, retainedNodes: !12392)
!12389 = !DISubroutineType(types: !12390)
!12390 = !{null, !12391}
!12391 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !342, size: 64, align: 64, dwarfAddressSpace: 0)
!12392 = !{!12393, !12394, !12396}
!12393 = !DILocalVariable(name: "self", arg: 1, scope: !12388, file: !1300, line: 477, type: !12391)
!12394 = !DILocalVariable(name: "ptr", scope: !12395, file: !1300, line: 478, type: !350, align: 8)
!12395 = distinct !DILexicalBlock(scope: !12388, file: !1300, line: 478, column: 60)
!12396 = !DILocalVariable(name: "layout", scope: !12395, file: !1300, line: 478, type: !1463, align: 8)
!12397 = !DILocation(line: 477, column: 13, scope: !12388)
!12398 = !DILocation(line: 478, column: 38, scope: !12395)
!12399 = !DILocation(line: 478, column: 16, scope: !12395)
!12400 = !DILocation(line: 478, column: 22, scope: !12395)
!12401 = !DILocation(line: 478, column: 27, scope: !12395)
!12402 = !DILocation(line: 479, column: 22, scope: !12395)
!12403 = !DILocation(line: 481, column: 6, scope: !12388)
!12404 = !DILocation(line: 478, column: 9, scope: !12388)
!12405 = distinct !DISubprogram(name: "drop", linkageName: "_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h83e5aaa269437a1eE", scope: !1824, file: !1625, line: 232, type: !12406, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12409)
!12406 = !DISubroutineType(types: !12407)
!12407 = !{null, !12408}
!12408 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::io::error::repr_bitpacked::Repr", baseType: !47, size: 64, align: 64, dwarfAddressSpace: 0)
!12409 = !{!12410}
!12410 = !DILocalVariable(name: "self", arg: 1, scope: !12405, file: !1625, line: 232, type: !12408)
!12411 = !DILocation(line: 232, column: 13, scope: !12405)
!12412 = !DILocation(line: 236, column: 33, scope: !12405)
!12413 = !DILocation(line: 236, column: 21, scope: !12405)
!12414 = !DILocation(line: 236, column: 72, scope: !12405)
!12415 = !DILocation(line: 238, column: 6, scope: !12405)
!12416 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h919d6555a94a7745E", scope: !1823, file: !1625, line: 236, type: !12417, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12419)
!12417 = !DISubroutineType(types: !12418)
!12418 = !{!73, !1822, !1838}
!12419 = !{!12420, !12421}
!12420 = !DILocalVariable(name: "p", arg: 2, scope: !12416, file: !1625, line: 236, type: !1838)
!12421 = !DILocalVariable(arg: 1, scope: !12416, file: !1625, line: 236, type: !1822)
!12422 = !DILocation(line: 236, column: 41, scope: !12416)
!12423 = !DILocation(line: 236, column: 42, scope: !12416)
!12424 = !DILocalVariable(name: "alloc", scope: !12425, file: !1625, line: 236, type: !358, align: 1)
!12425 = !DILexicalBlockFile(scope: !12426, file: !1625, discriminator: 0)
!12426 = distinct !DISubprogram(name: "from_raw_in<std::io::error::Custom, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hffb83631d81ca597E", scope: !8358, file: !2846, line: 1009, type: !12427, scopeLine: 1009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !9831, retainedNodes: !12429)
!12427 = !DISubroutineType(types: !12428)
!12428 = !{!73, !1838, !358}
!12429 = !{!12430, !12424}
!12430 = !DILocalVariable(name: "raw", scope: !12425, file: !1625, line: 236, type: !1838, align: 8)
!12431 = !DILocation(line: 236, column: 45, scope: !12425, inlinedAt: !12432)
!12432 = !DILocation(line: 954, column: 18, scope: !12433, inlinedAt: !12440)
!12433 = distinct !DISubprogram(name: "from_raw<std::io::error::Custom>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hd1a734f89485e35aE", scope: !12434, file: !2846, line: 953, type: !12435, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !12437)
!12434 = !DINamespace(name: "{impl#6}", scope: !2848)
!12435 = !DISubroutineType(types: !12436)
!12436 = !{!73, !1838}
!12437 = !{!12438}
!12438 = !DILocalVariable(name: "raw", scope: !12439, file: !1625, line: 236, type: !1838, align: 8)
!12439 = !DILexicalBlockFile(scope: !12433, file: !1625, discriminator: 0)
!12440 = !DILocation(line: 236, column: 45, scope: !12416)
!12441 = !DILocation(line: 236, column: 69, scope: !12416)
!12442 = !DILocation(line: 236, column: 45, scope: !12439, inlinedAt: !12440)
!12443 = !DILocalVariable(name: "ptr", scope: !12444, file: !1625, line: 236, type: !1838, align: 8)
!12444 = !DILexicalBlockFile(scope: !12445, file: !1625, discriminator: 0)
!12445 = distinct !DISubprogram(name: "new_unchecked<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h76ed3aa33230f677E", scope: !9813, file: !1424, line: 85, type: !12446, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !12448)
!12446 = !DISubroutineType(types: !12447)
!12447 = !{!9813, !1838}
!12448 = !{!12443}
!12449 = !DILocation(line: 236, column: 45, scope: !12444, inlinedAt: !12450)
!12450 = !DILocation(line: 1010, column: 22, scope: !12426, inlinedAt: !12432)
!12451 = !DILocalVariable(name: "ptr", scope: !12452, file: !1625, line: 236, type: !1838, align: 8)
!12452 = !DILexicalBlockFile(scope: !12453, file: !1625, discriminator: 0)
!12453 = distinct !DISubprogram(name: "new_unchecked<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h77c1be104851fce6E", scope: !9816, file: !1413, line: 196, type: !12454, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4327, retainedNodes: !12456)
!12454 = !DISubroutineType(types: !12455)
!12455 = !{!9816, !1838}
!12456 = !{!12451}
!12457 = !DILocation(line: 236, column: 45, scope: !12452, inlinedAt: !12458)
!12458 = !DILocation(line: 87, column: 36, scope: !12445, inlinedAt: !12450)
!12459 = !DILocation(line: 236, column: 44, scope: !12416)
!12460 = distinct !DISubprogram(name: "next_match", linkageName: "_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h9e67ceab2d5ac3b5E", scope: !12461, file: !5370, line: 1094, type: !12462, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12465)
!12461 = !DINamespace(name: "{impl#30}", scope: !1231)
!12462 = !DISubroutineType(types: !12463)
!12463 = !{!5383, !12464}
!12464 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::StrSearcher", baseType: !7852, size: 64, align: 64, dwarfAddressSpace: 0)
!12465 = !{!12466, !12467, !12469, !12470, !12472}
!12466 = !DILocalVariable(name: "self", arg: 1, scope: !12460, file: !5370, line: 1094, type: !12464)
!12467 = !DILocalVariable(name: "a", scope: !12468, file: !5370, line: 1098, type: !9, align: 8)
!12468 = distinct !DILexicalBlock(scope: !12460, file: !5370, line: 1098, column: 21)
!12469 = !DILocalVariable(name: "b", scope: !12468, file: !5370, line: 1098, type: !9, align: 8)
!12470 = !DILocalVariable(name: "searcher", scope: !12471, file: !5370, line: 1103, type: !5400, align: 8)
!12471 = distinct !DILexicalBlock(scope: !12460, file: !5370, line: 1103, column: 13)
!12472 = !DILocalVariable(name: "is_long", scope: !12473, file: !5370, line: 1104, type: !1244, align: 1)
!12473 = distinct !DILexicalBlock(scope: !12471, file: !5370, line: 1104, column: 17)
!12474 = !DILocation(line: 1094, column: 19, scope: !12460)
!12475 = !DILocation(line: 1095, column: 15, scope: !12460)
!12476 = !DILocation(line: 1095, column: 9, scope: !12460)
!12477 = !DILocation(line: 1096, column: 43, scope: !12460)
!12478 = !DILocation(line: 1103, column: 37, scope: !12460)
!12479 = !DILocation(line: 1103, column: 37, scope: !12471)
!12480 = !DILocation(line: 1104, column: 31, scope: !12471)
!12481 = !DILocation(line: 1104, column: 21, scope: !12473)
!12482 = !DILocation(line: 1107, column: 20, scope: !12473)
!12483 = !DILocation(line: 1115, column: 25, scope: !12473)
!12484 = !DILocalVariable(name: "self", scope: !12485, file: !5370, line: 1115, type: !145, align: 8)
!12485 = !DILexicalBlockFile(scope: !12486, file: !5370, discriminator: 0)
!12486 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12487)
!12487 = !{!12484}
!12488 = !DILocation(line: 1115, column: 25, scope: !12485, inlinedAt: !12483)
!12489 = !DILocation(line: 1109, column: 25, scope: !12473)
!12490 = !DILocalVariable(name: "self", scope: !12491, file: !5370, line: 1109, type: !145, align: 8)
!12491 = !DILexicalBlockFile(scope: !12492, file: !5370, discriminator: 0)
!12492 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12493)
!12493 = !{!12490}
!12494 = !DILocation(line: 1109, column: 25, scope: !12491, inlinedAt: !12489)
!12495 = !DILocation(line: 1110, column: 25, scope: !12473)
!12496 = !DILocalVariable(name: "self", scope: !12497, file: !5370, line: 1110, type: !145, align: 8)
!12497 = !DILexicalBlockFile(scope: !12498, file: !5370, discriminator: 0)
!12498 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12499)
!12499 = !{!12496}
!12500 = !DILocation(line: 1110, column: 25, scope: !12497, inlinedAt: !12495)
!12501 = !DILocation(line: 1108, column: 21, scope: !12473)
!12502 = !DILocation(line: 1107, column: 17, scope: !12473)
!12503 = !DILocation(line: 1120, column: 13, scope: !12460)
!12504 = !DILocation(line: 1116, column: 25, scope: !12473)
!12505 = !DILocalVariable(name: "self", scope: !12506, file: !5370, line: 1116, type: !145, align: 8)
!12506 = !DILexicalBlockFile(scope: !12507, file: !5370, discriminator: 0)
!12507 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12508)
!12508 = !{!12505}
!12509 = !DILocation(line: 1116, column: 25, scope: !12506, inlinedAt: !12504)
!12510 = !DILocation(line: 1114, column: 21, scope: !12473)
!12511 = !DILocation(line: 1122, column: 6, scope: !12460)
!12512 = !DILocation(line: 1097, column: 23, scope: !12460)
!12513 = !{i64 0, i64 3}
!12514 = !DILocation(line: 1097, column: 17, scope: !12460)
!12515 = !DILocation(line: 1098, column: 39, scope: !12460)
!12516 = !DILocation(line: 1098, column: 39, scope: !12468)
!12517 = !DILocation(line: 1098, column: 42, scope: !12460)
!12518 = !DILocation(line: 1098, column: 42, scope: !12468)
!12519 = !DILocation(line: 1098, column: 60, scope: !12468)
!12520 = !DILocation(line: 1098, column: 55, scope: !12468)
!12521 = !DILocation(line: 1, column: 1, scope: !12522)
!12522 = !DILexicalBlockFile(scope: !12460, file: !1610, discriminator: 0)
!12523 = !DILocation(line: 1099, column: 48, scope: !12460)
!12524 = !DILocation(line: 1099, column: 41, scope: !12460)
!12525 = distinct !DISubprogram(name: "next", linkageName: "_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h48004b3f13e71c0bE", scope: !12461, file: !5370, line: 1042, type: !12526, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12528)
!12526 = !DISubroutineType(types: !12527)
!12527 = !{!5606, !12464}
!12528 = !{!12529, !12530, !12533, !12535, !12537, !12539, !12541, !12543, !12545, !12546}
!12529 = !DILocalVariable(name: "self", arg: 1, scope: !12525, file: !5370, line: 1042, type: !12464)
!12530 = !DILocalVariable(name: "searcher", scope: !12531, file: !5370, line: 1044, type: !12532, align: 8)
!12531 = distinct !DILexicalBlock(scope: !12525, file: !5370, line: 1044, column: 13)
!12532 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::EmptyNeedle", baseType: !7865, size: 64, align: 64, dwarfAddressSpace: 0)
!12533 = !DILocalVariable(name: "is_match", scope: !12534, file: !5370, line: 1049, type: !1244, align: 1)
!12534 = distinct !DILexicalBlock(scope: !12531, file: !5370, line: 1049, column: 17)
!12535 = !DILocalVariable(name: "pos", scope: !12536, file: !5370, line: 1051, type: !9, align: 8)
!12536 = distinct !DILexicalBlock(scope: !12534, file: !5370, line: 1051, column: 17)
!12537 = !DILocalVariable(name: "ch", scope: !12538, file: !5370, line: 1058, type: !1237, align: 4)
!12538 = distinct !DILexicalBlock(scope: !12536, file: !5370, line: 1058, column: 21)
!12539 = !DILocalVariable(name: "searcher", scope: !12540, file: !5370, line: 1064, type: !5400, align: 8)
!12540 = distinct !DILexicalBlock(scope: !12525, file: !5370, line: 1064, column: 13)
!12541 = !DILocalVariable(name: "is_long", scope: !12542, file: !5370, line: 1073, type: !1244, align: 1)
!12542 = distinct !DILexicalBlock(scope: !12540, file: !5370, line: 1073, column: 17)
!12543 = !DILocalVariable(name: "a", scope: !12544, file: !5370, line: 1079, type: !9, align: 8)
!12544 = distinct !DILexicalBlock(scope: !12542, file: !5370, line: 1079, column: 21)
!12545 = !DILocalVariable(name: "b", scope: !12544, file: !5370, line: 1079, type: !9, align: 8)
!12546 = !DILocalVariable(name: "otherwise", scope: !12547, file: !5370, line: 1087, type: !5606, align: 8)
!12547 = distinct !DILexicalBlock(scope: !12542, file: !5370, line: 1087, column: 21)
!12548 = !DILocation(line: 1042, column: 13, scope: !12525)
!12549 = !DILocalVariable(name: "index", scope: !12550, file: !5370, line: 1052, type: !1150, align: 8)
!12550 = !DILexicalBlockFile(scope: !12551, file: !5370, discriminator: 0)
!12551 = distinct !DISubprogram(name: "index<core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h551c0ef1102343b7E", scope: !12552, file: !5108, line: 64, type: !12553, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12557, retainedNodes: !12555)
!12552 = !DINamespace(name: "{impl#4}", scope: !5110)
!12553 = !DISubroutineType(types: !12554)
!12554 = !{!145, !145, !1150, !1109}
!12555 = !{!12556, !12549}
!12556 = !DILocalVariable(name: "self", scope: !12550, file: !5370, line: 1052, type: !145, align: 8)
!12557 = !{!1558}
!12558 = !DILocation(line: 1052, column: 23, scope: !12550, inlinedAt: !12559)
!12559 = !DILocation(line: 1052, column: 23, scope: !12536)
!12560 = !DILocation(line: 1079, column: 43, scope: !12544)
!12561 = !DILocation(line: 1087, column: 21, scope: !12547)
!12562 = !DILocation(line: 1043, column: 15, scope: !12525)
!12563 = !DILocation(line: 1043, column: 9, scope: !12525)
!12564 = !DILocation(line: 1044, column: 36, scope: !12525)
!12565 = !DILocation(line: 1044, column: 36, scope: !12531)
!12566 = !DILocation(line: 1045, column: 20, scope: !12531)
!12567 = !DILocation(line: 1064, column: 37, scope: !12525)
!12568 = !DILocation(line: 1064, column: 37, scope: !12540)
!12569 = !DILocation(line: 1070, column: 20, scope: !12540)
!12570 = !DILocation(line: 1070, column: 41, scope: !12540)
!12571 = !DILocalVariable(name: "self", scope: !12572, file: !5370, line: 1070, type: !145, align: 8)
!12572 = !DILexicalBlockFile(scope: !12573, file: !5370, discriminator: 0)
!12573 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hed2dfa42a5f15112E", scope: !4896, file: !4895, line: 157, type: !4931, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12574)
!12574 = !{!12571}
!12575 = !DILocation(line: 1070, column: 41, scope: !12572, inlinedAt: !12570)
!12576 = !DILocalVariable(name: "self", scope: !12577, file: !5370, line: 1070, type: !145, align: 8)
!12577 = !DILexicalBlockFile(scope: !12578, file: !5370, discriminator: 0)
!12578 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12579)
!12579 = !{!12576}
!12580 = !DILocation(line: 1070, column: 41, scope: !12577, inlinedAt: !12581)
!12581 = !DILocation(line: 158, column: 9, scope: !12573, inlinedAt: !12570)
!12582 = !DILocation(line: 1073, column: 31, scope: !12540)
!12583 = !DILocation(line: 1073, column: 21, scope: !12542)
!12584 = !DILocation(line: 1075, column: 21, scope: !12542)
!12585 = !DILocalVariable(name: "self", scope: !12586, file: !5370, line: 1075, type: !145, align: 8)
!12586 = !DILexicalBlockFile(scope: !12587, file: !5370, discriminator: 0)
!12587 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12588)
!12588 = !{!12585}
!12589 = !DILocation(line: 1075, column: 21, scope: !12586, inlinedAt: !12584)
!12590 = !DILocation(line: 1071, column: 28, scope: !12540)
!12591 = !DILocation(line: 1, column: 1, scope: !12592)
!12592 = !DILexicalBlockFile(scope: !12525, file: !1610, discriminator: 0)
!12593 = !DILocation(line: 1091, column: 6, scope: !12525)
!12594 = !DILocation(line: 1076, column: 21, scope: !12542)
!12595 = !DILocalVariable(name: "self", scope: !12596, file: !5370, line: 1076, type: !145, align: 8)
!12596 = !DILexicalBlockFile(scope: !12597, file: !5370, discriminator: 0)
!12597 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12598)
!12598 = !{!12595}
!12599 = !DILocation(line: 1076, column: 21, scope: !12596, inlinedAt: !12594)
!12600 = !DILocation(line: 1074, column: 23, scope: !12542)
!12601 = !DILocation(line: 1074, column: 17, scope: !12542)
!12602 = !DILocation(line: 1079, column: 40, scope: !12542)
!12603 = !DILocation(line: 1079, column: 40, scope: !12544)
!12604 = !DILocation(line: 1079, column: 43, scope: !12542)
!12605 = !DILocation(line: 1081, column: 25, scope: !12544)
!12606 = !DILocation(line: 1087, column: 21, scope: !12542)
!12607 = !DILocation(line: 1087, column: 34, scope: !12547)
!12608 = !DILocation(line: 1087, column: 42, scope: !12542)
!12609 = !DILocation(line: 1089, column: 13, scope: !12525)
!12610 = !DILocation(line: 1081, column: 32, scope: !12544)
!12611 = !DILocation(line: 1081, column: 63, scope: !12544)
!12612 = !DILocation(line: 1081, column: 31, scope: !12544)
!12613 = !DILocation(line: 1084, column: 54, scope: !12544)
!12614 = !DILocalVariable(name: "v1", scope: !12615, file: !5370, line: 1084, type: !9, align: 8)
!12615 = !DILexicalBlockFile(scope: !12616, file: !5370, discriminator: 0)
!12616 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17hde53ba2d9ea02064E", scope: !865, file: !1337, line: 1278, type: !1329, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !12617)
!12617 = !{!12614, !12618}
!12618 = !DILocalVariable(name: "v2", scope: !12615, file: !5370, line: 1084, type: !9, align: 8)
!12619 = !DILocation(line: 1084, column: 45, scope: !12615, inlinedAt: !12620)
!12620 = !DILocation(line: 1084, column: 45, scope: !12544)
!12621 = !DILocation(line: 1084, column: 57, scope: !12544)
!12622 = !DILocation(line: 1082, column: 29, scope: !12544)
!12623 = !DILocation(line: 1084, column: 25, scope: !12544)
!12624 = !DILocation(line: 1085, column: 47, scope: !12544)
!12625 = !DILocation(line: 1085, column: 25, scope: !12544)
!12626 = !DILocation(line: 1086, column: 21, scope: !12542)
!12627 = !DILocation(line: 1049, column: 32, scope: !12531)
!12628 = !DILocation(line: 1049, column: 21, scope: !12534)
!12629 = !DILocation(line: 1050, column: 41, scope: !12534)
!12630 = !DILocation(line: 1050, column: 17, scope: !12534)
!12631 = !DILocation(line: 1051, column: 27, scope: !12534)
!12632 = !DILocation(line: 1051, column: 21, scope: !12536)
!12633 = !DILocation(line: 1052, column: 37, scope: !12536)
!12634 = !DILocation(line: 1046, column: 28, scope: !12531)
!12635 = !DILocalVariable(name: "self", scope: !12636, file: !5370, line: 1052, type: !145, align: 8)
!12636 = !DILexicalBlockFile(scope: !12637, file: !5370, discriminator: 0)
!12637 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hd44c764592d1bb9cE", scope: !4896, file: !4895, line: 780, type: !12638, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12643)
!12638 = !DISubroutineType(types: !12639)
!12639 = !{!12640, !145}
!12640 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !1212, file: !2, size: 128, align: 64, elements: !12641, templateParams: !28, identifier: "bf4266910c22c2e7c5f8afbf04b94119")
!12641 = !{!12642}
!12642 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !12640, file: !2, baseType: !4691, size: 128, align: 64)
!12643 = !{!12635}
!12644 = !DILocation(line: 1052, column: 23, scope: !12636, inlinedAt: !12559)
!12645 = !DILocalVariable(name: "self", scope: !12646, file: !5370, line: 1052, type: !145, align: 8)
!12646 = !DILexicalBlockFile(scope: !12647, file: !5370, discriminator: 0)
!12647 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12648)
!12648 = !{!12645}
!12649 = !DILocation(line: 1052, column: 23, scope: !12646, inlinedAt: !12650)
!12650 = !DILocation(line: 781, column: 23, scope: !12637, inlinedAt: !12559)
!12651 = !DILocalVariable(name: "self", scope: !12652, file: !5370, line: 1052, type: !1083, align: 8)
!12652 = !DILexicalBlockFile(scope: !12653, file: !5370, discriminator: 0)
!12653 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hdc50fe5668675ee7E", scope: !1568, file: !1567, line: 734, type: !6830, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12654)
!12654 = !{!12651}
!12655 = !DILocation(line: 1052, column: 23, scope: !12652, inlinedAt: !12650)
!12656 = !DILocalVariable(name: "self", scope: !12657, file: !5370, line: 1052, type: !12661, align: 8)
!12657 = !DILexicalBlockFile(scope: !12658, file: !5370, discriminator: 0)
!12658 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2d9a0ac906795509E", scope: !7206, file: !5026, line: 41, type: !12659, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12662)
!12659 = !DISubroutineType(types: !12660)
!12660 = !{!7191, !12661}
!12661 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Chars", baseType: !12640, size: 64, align: 64, dwarfAddressSpace: 0)
!12662 = !{!12656}
!12663 = !DILocation(line: 1052, column: 23, scope: !12657, inlinedAt: !12559)
!12664 = !DILocation(line: 1053, column: 26, scope: !12536)
!12665 = !DILocation(line: 1052, column: 17, scope: !12536)
!12666 = !DILocation(line: 1053, column: 38, scope: !12536)
!12667 = !DILocation(line: 1053, column: 64, scope: !12536)
!12668 = !DILocation(line: 1063, column: 13, scope: !12525)
!12669 = !DILocation(line: 1055, column: 25, scope: !12536)
!12670 = !DILocation(line: 1056, column: 25, scope: !12536)
!12671 = !DILocation(line: 1058, column: 26, scope: !12536)
!12672 = !DILocation(line: 1058, column: 26, scope: !12538)
!12673 = !DILocation(line: 1059, column: 46, scope: !12538)
!12674 = !DILocalVariable(name: "self", scope: !12675, file: !5370, line: 1059, type: !1237, align: 4)
!12675 = !DILexicalBlockFile(scope: !12676, file: !5370, discriminator: 0)
!12676 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h8c038d4f331d2ab1E", scope: !3744, file: !3743, line: 593, type: !12677, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12679)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{!9, !1237}
!12679 = !{!12674}
!12680 = !DILocation(line: 1059, column: 46, scope: !12675, inlinedAt: !12673)
!12681 = !DILocation(line: 1059, column: 25, scope: !12538)
!12682 = !DILocation(line: 1060, column: 49, scope: !12538)
!12683 = !DILocation(line: 1060, column: 25, scope: !12538)
!12684 = !DILocation(line: 1061, column: 21, scope: !12536)
!12685 = distinct !DISubprogram(name: "write_str<std::sys::unix::stdio::Stderr>", linkageName: "_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h3abb5efb30b14f62E", scope: !12686, file: !1530, line: 1660, type: !12687, scopeLine: 1660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !161, retainedNodes: !12689)
!12686 = !DINamespace(name: "{impl#0}", scope: !15)
!12687 = !DISubroutineType(types: !12688)
!12688 = !{!1717, !508, !145}
!12689 = !{!12690, !12691, !12692}
!12690 = !DILocalVariable(name: "self", arg: 1, scope: !12685, file: !1530, line: 1660, type: !508)
!12691 = !DILocalVariable(name: "s", arg: 2, scope: !12685, file: !1530, line: 1660, type: !145)
!12692 = !DILocalVariable(name: "e", scope: !12693, file: !1530, line: 1663, type: !43, align: 8)
!12693 = distinct !DILexicalBlock(scope: !12685, file: !1530, line: 1663, column: 21)
!12694 = !DILocation(line: 1660, column: 26, scope: !12685)
!12695 = !DILocation(line: 1660, column: 37, scope: !12685)
!12696 = !DILocation(line: 1661, column: 23, scope: !12685)
!12697 = !DILocation(line: 1661, column: 44, scope: !12685)
!12698 = !DILocalVariable(name: "self", scope: !12699, file: !1530, line: 1661, type: !145, align: 8)
!12699 = !DILexicalBlockFile(scope: !12700, file: !1530, discriminator: 0)
!12700 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12701)
!12701 = !{!12698}
!12702 = !DILocation(line: 1661, column: 44, scope: !12699, inlinedAt: !12697)
!12703 = !DILocation(line: 1661, column: 17, scope: !12685)
!12704 = !DILocation(line: 1662, column: 31, scope: !12685)
!12705 = !DILocation(line: 1662, column: 36, scope: !12685)
!12706 = !DILocation(line: 1663, column: 25, scope: !12685)
!12707 = !DILocation(line: 1663, column: 25, scope: !12693)
!12708 = !DILocation(line: 1664, column: 38, scope: !12693)
!12709 = !DILocation(line: 1664, column: 25, scope: !12693)
!12710 = !DILocation(line: 1660, column: 13, scope: !12685)
!12711 = !DILocation(line: 1665, column: 25, scope: !12693)
!12712 = !DILocation(line: 1668, column: 13, scope: !12685)
!12713 = !DILocation(line: 1668, column: 14, scope: !12685)
!12714 = distinct !DISubprogram(name: "index<&str, usize, alloc::alloc::Global>", linkageName: "_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17hd6789abdb498dafcE", scope: !12715, file: !1283, line: 2626, type: !12716, scopeLine: 2626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12721, retainedNodes: !12718)
!12715 = !DINamespace(name: "{impl#16}", scope: !339)
!12716 = !DISubroutineType(types: !12717)
!12717 = !{!3679, !8110, !9, !1109}
!12718 = !{!12719, !12720}
!12719 = !DILocalVariable(name: "self", arg: 1, scope: !12714, file: !1283, line: 2626, type: !8110)
!12720 = !DILocalVariable(name: "index", arg: 2, scope: !12714, file: !1283, line: 2626, type: !9)
!12721 = !{!1204, !4924, !361}
!12722 = !DILocation(line: 2626, column: 14, scope: !12714)
!12723 = !DILocation(line: 2626, column: 21, scope: !12714)
!12724 = !DILocation(line: 2627, column: 9, scope: !12714)
!12725 = !DILocation(line: 2627, column: 24, scope: !12714)
!12726 = !DILocalVariable(name: "self", scope: !12727, file: !1283, line: 2627, type: !8110, align: 8)
!12727 = distinct !DISubprogram(name: "deref<&str, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hfb4be6d7c3069c49E", scope: !11469, file: !1283, line: 2531, type: !12221, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1209, retainedNodes: !12728)
!12728 = !{!12726}
!12729 = !DILocation(line: 2627, column: 23, scope: !12727, inlinedAt: !12730)
!12730 = !DILocation(line: 2627, column: 23, scope: !12714)
!12731 = !DILocation(line: 2628, column: 5, scope: !12714)
!12732 = !DILocalVariable(name: "data", scope: !12733, file: !1283, line: 2627, type: !1202, align: 8)
!12733 = !DILexicalBlockFile(scope: !12734, file: !1283, discriminator: 0)
!12734 = distinct !DISubprogram(name: "from_raw_parts<&str>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h3e582b0a125e3882E", scope: !11479, file: !11478, line: 90, type: !12230, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !12735)
!12735 = !{!12732, !12736, !12737}
!12736 = !DILocalVariable(name: "len", scope: !12733, file: !1283, line: 2627, type: !9, align: 8)
!12737 = !DILocalVariable(name: "runtime", scope: !12738, file: !1283, line: 2627, type: !12237, align: 8)
!12738 = !DILexicalBlockFile(scope: !12739, file: !1283, discriminator: 0)
!12739 = distinct !DILexicalBlock(scope: !12734, file: !913, line: 2336, column: 13)
!12740 = !DILocation(line: 2627, column: 23, scope: !12733, inlinedAt: !12741)
!12741 = !DILocation(line: 2532, column: 18, scope: !12727, inlinedAt: !12730)
!12742 = !DILocalVariable(name: "data", scope: !12743, file: !1283, line: 2627, type: !1202, align: 8)
!12743 = !DILexicalBlockFile(scope: !12744, file: !1283, discriminator: 0)
!12744 = distinct !DISubprogram(name: "slice_from_raw_parts<&str>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h8d72cb937d7b8fe8E", scope: !53, file: !959, line: 695, type: !12248, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !12745)
!12745 = !{!12742, !12746}
!12746 = !DILocalVariable(name: "len", scope: !12743, file: !1283, line: 2627, type: !9, align: 8)
!12747 = !DILocation(line: 2627, column: 23, scope: !12743, inlinedAt: !12748)
!12748 = !DILocation(line: 97, column: 11, scope: !12734, inlinedAt: !12741)
!12749 = !DILocalVariable(name: "self", scope: !12750, file: !1283, line: 2627, type: !1202, align: 8)
!12750 = !DILexicalBlockFile(scope: !12751, file: !1283, discriminator: 0)
!12751 = distinct !DISubprogram(name: "cast<&str, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h3247ff4f4b42b481E", scope: !939, file: !929, line: 46, type: !12261, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12108, retainedNodes: !12752)
!12752 = !{!12749}
!12753 = !DILocation(line: 2627, column: 23, scope: !12750, inlinedAt: !12754)
!12754 = !DILocation(line: 696, column: 20, scope: !12744, inlinedAt: !12748)
!12755 = !DILocalVariable(name: "data_address", scope: !12756, file: !1283, line: 2627, type: !6, align: 8)
!12756 = !DILexicalBlockFile(scope: !12757, file: !1283, discriminator: 0)
!12757 = distinct !DISubprogram(name: "from_raw_parts<[&str]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hfc08eda36906adefE", scope: !981, file: !980, line: 110, type: !12269, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !12758)
!12758 = !{!12755, !12759}
!12759 = !DILocalVariable(name: "metadata", scope: !12756, file: !1283, line: 2627, type: !9, align: 8)
!12760 = !DILocation(line: 2627, column: 23, scope: !12756, inlinedAt: !12761)
!12761 = !DILocation(line: 696, column: 5, scope: !12744, inlinedAt: !12748)
!12762 = !DILocation(line: 2627, column: 22, scope: !12714)
!12763 = !DILocalVariable(name: "self", scope: !12764, file: !1283, line: 2627, type: !1652, align: 8)
!12764 = !DILexicalBlockFile(scope: !12765, file: !1283, discriminator: 0)
!12765 = distinct !DISubprogram(name: "index<&str, usize>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17hf97ae651e43faa86E", scope: !1552, file: !889, line: 17, type: !12766, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12770, retainedNodes: !12768)
!12766 = !DISubroutineType(types: !12767)
!12767 = !{!3679, !1652, !9, !1109}
!12768 = !{!12763, !12769}
!12769 = !DILocalVariable(name: "index", scope: !12764, file: !1283, line: 2627, type: !9, align: 8)
!12770 = !{!1204, !4924}
!12771 = !DILocation(line: 2627, column: 9, scope: !12764, inlinedAt: !12724)
!12772 = !DILocation(line: 2627, column: 31, scope: !12714)
!12773 = !DILocation(line: 2628, column: 6, scope: !12714)
!12774 = !DILocation(line: 2626, column: 5, scope: !12714)
!12775 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hc1d724428925cc3cE", scope: !7205, file: !5026, line: 44, type: !12776, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12778)
!12776 = !DISubroutineType(types: !12777)
!12777 = !{!1237, !7204, !275}
!12778 = !{!12779, !12780}
!12779 = !DILocalVariable(name: "ch", arg: 2, scope: !12775, file: !5026, line: 44, type: !275)
!12780 = !DILocalVariable(arg: 1, scope: !12775, file: !5026, line: 44, type: !7204)
!12781 = !DILocation(line: 44, column: 54, scope: !12775)
!12782 = !DILocation(line: 44, column: 55, scope: !12775)
!12783 = !DILocation(line: 44, column: 84, scope: !12775)
!12784 = !DILocalVariable(name: "i", scope: !12785, file: !5026, line: 44, type: !275, align: 4)
!12785 = !DILexicalBlockFile(scope: !12786, file: !5026, discriminator: 0)
!12786 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char18from_u32_unchecked17ha07466183a8f78d7E", scope: !3746, file: !12787, line: 123, type: !12788, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12790)
!12787 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "d5e58489a0433b5803d74ec8aa0d2891")
!12788 = !DISubroutineType(types: !12789)
!12789 = !{!1237, !275}
!12790 = !{!12784}
!12791 = !DILocation(line: 44, column: 59, scope: !12785, inlinedAt: !12792)
!12792 = !DILocation(line: 44, column: 59, scope: !12775)
!12793 = !DILocalVariable(name: "i", scope: !12794, file: !5026, line: 44, type: !275, align: 4)
!12794 = !DILexicalBlockFile(scope: !12795, file: !5026, discriminator: 0)
!12795 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17h5b32ae499906b131E", scope: !12797, file: !12796, line: 24, type: !12788, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12798)
!12796 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "682330ec4e366d97d021bfdf78a11076")
!12797 = !DINamespace(name: "convert", scope: !3746)
!12798 = !{!12793}
!12799 = !DILocation(line: 44, column: 59, scope: !12794, inlinedAt: !12800)
!12800 = !DILocation(line: 125, column: 14, scope: !12786, inlinedAt: !12792)
!12801 = !DILocation(line: 44, column: 58, scope: !12775)
!12802 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h11c66e7f15130a1bE", scope: !12803, file: !5026, line: 1101, type: !12804, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12807)
!12803 = !DINamespace(name: "{impl#30}", scope: !1212)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{!5029, !12806}
!12806 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Lines", baseType: !1211, size: 64, align: 64, dwarfAddressSpace: 0)
!12807 = !{!12808}
!12808 = !DILocalVariable(name: "self", arg: 1, scope: !12802, file: !5026, line: 1101, type: !12806)
!12809 = !DILocation(line: 1101, column: 13, scope: !12802)
!12810 = !DILocation(line: 1102, column: 9, scope: !12802)
!12811 = !DILocalVariable(name: "self", scope: !12812, file: !5026, line: 1102, type: !12817, align: 8)
!12812 = !DILexicalBlockFile(scope: !12813, file: !5026, discriminator: 0)
!12813 = distinct !DISubprogram(name: "next<&str, core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4c643f46391976f2E", scope: !12814, file: !6030, line: 102, type: !12815, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12819, retainedNodes: !12818)
!12814 = !DINamespace(name: "{impl#2}", scope: !1217)
!12815 = !DISubroutineType(types: !12816)
!12816 = !{!5029, !12817}
!12817 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>", baseType: !1216, size: 64, align: 64, dwarfAddressSpace: 0)
!12818 = !{!12811}
!12819 = !{!4974, !1251, !1252}
!12820 = !DILocation(line: 1102, column: 9, scope: !12812, inlinedAt: !12810)
!12821 = !DILocalVariable(name: "self", scope: !12822, file: !5026, line: 1102, type: !12826, align: 8)
!12822 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN100_$LT$core..str..iter..SplitTerminator$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h50119b50324ecd0cE", scope: !12823, file: !5026, line: 456, type: !12824, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1246, retainedNodes: !12827)
!12823 = !DINamespace(name: "{impl#70}", scope: !1212)
!12824 = !DISubroutineType(types: !12825)
!12825 = !{!5029, !12826}
!12826 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::SplitTerminator<char>", baseType: !1222, size: 64, align: 64, dwarfAddressSpace: 0)
!12827 = !{!12821}
!12828 = !DILocation(line: 1102, column: 9, scope: !12822, inlinedAt: !12829)
!12829 = !DILocation(line: 103, column: 9, scope: !12813, inlinedAt: !12810)
!12830 = !DILocation(line: 1103, column: 6, scope: !12802)
!12831 = distinct !DISubprogram(name: "size_hint", linkageName: "_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h480fba72e8ec65f4E", scope: !12803, file: !5026, line: 1106, type: !12832, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12839)
!12832 = !DISubroutineType(types: !12833)
!12833 = !{!12834, !12838}
!12834 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, core::option::Option<usize>)", file: !2, size: 192, align: 64, elements: !12835, templateParams: !28, identifier: "f906b68f221a6503b6525b65c4ce4669")
!12835 = !{!12836, !12837}
!12836 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12834, file: !2, baseType: !9, size: 64, align: 64)
!12837 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12834, file: !2, baseType: !1740, size: 128, align: 64, offset: 64)
!12838 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::iter::Lines", baseType: !1211, size: 64, align: 64, dwarfAddressSpace: 0)
!12839 = !{!12840}
!12840 = !DILocalVariable(name: "self", arg: 1, scope: !12831, file: !5026, line: 1106, type: !12838)
!12841 = !DILocation(line: 1106, column: 18, scope: !12831)
!12842 = !DILocation(line: 1107, column: 9, scope: !12843, inlinedAt: !12851)
!12843 = !DILexicalBlockFile(scope: !12844, file: !5026, discriminator: 0)
!12844 = distinct !DISubprogram(name: "size_hint<core::str::iter::SplitTerminator<char>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator9size_hint17h699b87924b495c3aE", scope: !4965, file: !4964, line: 215, type: !12845, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12850, retainedNodes: !12848)
!12845 = !DISubroutineType(types: !12846)
!12846 = !{!12834, !12847}
!12847 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::iter::SplitTerminator<char>", baseType: !1222, size: 64, align: 64, dwarfAddressSpace: 0)
!12848 = !{!12849}
!12849 = !DILocalVariable(name: "self", scope: !12843, file: !5026, line: 1107, type: !12847, align: 8)
!12850 = !{!4973}
!12851 = !DILocation(line: 108, column: 9, scope: !12852, inlinedAt: !12859)
!12852 = distinct !DISubprogram(name: "size_hint<&str, core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h13ac50fea36dea12E", scope: !12814, file: !6030, line: 107, type: !12853, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12819, retainedNodes: !12856)
!12853 = !DISubroutineType(types: !12854)
!12854 = !{!12834, !12855}
!12855 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::str::iter::SplitTerminator<char>, core::str::LinesAnyMap>", baseType: !1216, size: 64, align: 64, dwarfAddressSpace: 0)
!12856 = !{!12857}
!12857 = !DILocalVariable(name: "self", scope: !12858, file: !5026, line: 1107, type: !12855, align: 8)
!12858 = !DILexicalBlockFile(scope: !12852, file: !5026, discriminator: 0)
!12859 = !DILocation(line: 1107, column: 9, scope: !12831)
!12860 = !DILocation(line: 1108, column: 6, scope: !12831)
!12861 = distinct !DISubprogram(name: "next_match", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hd598a1d4db3a7242E", scope: !12862, file: !5370, line: 410, type: !12863, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12866)
!12862 = !DINamespace(name: "{impl#0}", scope: !1231)
!12863 = !DISubroutineType(types: !12864)
!12864 = !{!5383, !12865}
!12865 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharSearcher", baseType: !1230, size: 64, align: 64, dwarfAddressSpace: 0)
!12866 = !{!12867, !12868, !12870, !12872, !12874, !12876, !12878, !12880}
!12867 = !DILocalVariable(name: "self", arg: 1, scope: !12861, file: !5370, line: 410, type: !12865)
!12868 = !DILocalVariable(name: "bytes", scope: !12869, file: !5370, line: 413, type: !1083, align: 8)
!12869 = distinct !DILexicalBlock(scope: !12861, file: !5370, line: 413, column: 13)
!12870 = !DILocalVariable(name: "residual", scope: !12871, file: !5370, line: 413, type: !4706, align: 1)
!12871 = distinct !DILexicalBlock(scope: !12861, file: !5370, line: 413, column: 84)
!12872 = !DILocalVariable(name: "val", scope: !12873, file: !5370, line: 413, type: !1083, align: 8)
!12873 = distinct !DILexicalBlock(scope: !12861, file: !5370, line: 413, column: 25)
!12874 = !DILocalVariable(name: "last_byte", scope: !12875, file: !5370, line: 416, type: !78, align: 1)
!12875 = distinct !DILexicalBlock(scope: !12869, file: !5370, line: 416, column: 13)
!12876 = !DILocalVariable(name: "index", scope: !12877, file: !5370, line: 417, type: !9, align: 8)
!12877 = distinct !DILexicalBlock(scope: !12875, file: !5370, line: 417, column: 67)
!12878 = !DILocalVariable(name: "found_char", scope: !12879, file: !5370, line: 437, type: !9, align: 8)
!12879 = distinct !DILexicalBlock(scope: !12877, file: !5370, line: 437, column: 21)
!12880 = !DILocalVariable(name: "slice", scope: !12881, file: !5370, line: 438, type: !1083, align: 8)
!12881 = distinct !DILexicalBlock(scope: !12879, file: !5370, line: 438, column: 96)
!12882 = !DILocation(line: 410, column: 19, scope: !12861)
!12883 = !DILocalVariable(name: "self", scope: !12884, file: !5370, line: 413, type: !1075, align: 8)
!12884 = !DILexicalBlockFile(scope: !12885, file: !5370, discriminator: 0)
!12885 = distinct !DISubprogram(name: "branch<&[u8]>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h995bb751589498ecE", scope: !4737, file: !1848, line: 2290, type: !12886, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1081, retainedNodes: !12903)
!12886 = !DISubroutineType(types: !12887)
!12887 = !{!12888, !1075}
!12888 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &[u8]>", scope: !2666, file: !2, size: 128, align: 64, elements: !12889, templateParams: !28, identifier: "2990b45dad552e5a8d7cad1abaaa086")
!12889 = !{!12890}
!12890 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12888, file: !2, size: 128, align: 64, elements: !12891, templateParams: !28, identifier: "a61fddfb98ad6ea2f195e3ee2f8c66e3", discriminator: !12902)
!12891 = !{!12892, !12898}
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !12890, file: !2, baseType: !12893, size: 128, align: 64)
!12893 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !12888, file: !2, size: 128, align: 64, elements: !12894, templateParams: !12896, identifier: "efa0d2a36143818ed52fe0d2ee8767f4")
!12894 = !{!12895}
!12895 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12893, file: !2, baseType: !1083, size: 128, align: 64)
!12896 = !{!4749, !12897}
!12897 = !DITemplateTypeParameter(name: "C", type: !1083)
!12898 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !12890, file: !2, baseType: !12899, size: 128, align: 64, extraData: i64 0)
!12899 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !12888, file: !2, size: 128, align: 64, elements: !12900, templateParams: !12896, identifier: "adf0aa8fc506ad64ce41932fb4a8d651")
!12900 = !{!12901}
!12901 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12899, file: !2, baseType: !4706, align: 8)
!12902 = !DIDerivedType(tag: DW_TAG_member, scope: !12888, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!12903 = !{!12883, !12904}
!12904 = !DILocalVariable(name: "v", scope: !12905, file: !5370, line: 413, type: !1083, align: 8)
!12905 = !DILexicalBlockFile(scope: !12906, file: !5370, discriminator: 0)
!12906 = distinct !DILexicalBlock(scope: !12885, file: !1848, line: 2292, column: 13)
!12907 = !DILocation(line: 413, column: 25, scope: !12884, inlinedAt: !12908)
!12908 = !DILocation(line: 413, column: 25, scope: !12861)
!12909 = !DILocalVariable(name: "index", scope: !12910, file: !5370, line: 413, type: !899, align: 8)
!12910 = !DILexicalBlockFile(scope: !12911, file: !5370, discriminator: 0)
!12911 = distinct !DISubprogram(name: "get<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb99f0d98b1e37262E", scope: !1568, file: !1567, line: 339, type: !12912, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12916, retainedNodes: !12914)
!12912 = !DISubroutineType(types: !12913)
!12913 = !{!1075, !1083, !899}
!12914 = !{!12915, !12909}
!12915 = !DILocalVariable(name: "self", scope: !12910, file: !5370, line: 413, type: !1083, align: 8)
!12916 = !{!333, !5059}
!12917 = !DILocation(line: 413, column: 25, scope: !12910, inlinedAt: !12908)
!12918 = !DILocation(line: 413, column: 84, scope: !12871)
!12919 = !DILocalVariable(name: "residual", scope: !12920, file: !5370, line: 413, type: !4706, align: 1)
!12920 = !DILexicalBlockFile(scope: !12921, file: !5370, discriminator: 0)
!12921 = distinct !DISubprogram(name: "from_residual<(usize, usize)>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hd06a8016591127ebE", scope: !4777, file: !1848, line: 2302, type: !12922, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5389, retainedNodes: !12924)
!12922 = !DISubroutineType(types: !12923)
!12923 = !{!5383, !4706}
!12924 = !{!12919}
!12925 = !DILocation(line: 413, column: 25, scope: !12920, inlinedAt: !12926)
!12926 = !DILocation(line: 413, column: 25, scope: !12871)
!12927 = !DILocalVariable(name: "index", scope: !12928, file: !5370, line: 438, type: !899, align: 8)
!12928 = !DILexicalBlockFile(scope: !12929, file: !5370, discriminator: 0)
!12929 = distinct !DISubprogram(name: "get<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb99f0d98b1e37262E", scope: !1568, file: !1567, line: 339, type: !12912, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12916, retainedNodes: !12930)
!12930 = !{!12931, !12927}
!12931 = !DILocalVariable(name: "self", scope: !12928, file: !5370, line: 438, type: !1083, align: 8)
!12932 = !DILocation(line: 438, column: 42, scope: !12928, inlinedAt: !12933)
!12933 = !DILocation(line: 438, column: 42, scope: !12881)
!12934 = !DILocation(line: 438, column: 33, scope: !12881)
!12935 = !DILocalVariable(name: "index", scope: !12936, file: !5370, line: 439, type: !899, align: 8)
!12936 = !DILexicalBlockFile(scope: !12937, file: !5370, discriminator: 0)
!12937 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>, 4>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h7df7654b642db6fdE", scope: !6687, file: !6675, line: 285, type: !12938, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12916, retainedNodes: !12941)
!12938 = !DISubroutineType(types: !12939)
!12939 = !{!1083, !12940, !899, !1109}
!12940 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 4]", baseType: !1240, size: 64, align: 64, dwarfAddressSpace: 0)
!12941 = !{!12942, !12935}
!12942 = !DILocalVariable(name: "self", scope: !12936, file: !5370, line: 439, type: !12940, align: 8)
!12943 = !DILocation(line: 439, column: 38, scope: !12936, inlinedAt: !12944)
!12944 = !DILocation(line: 439, column: 38, scope: !12881)
!12945 = !DILocation(line: 411, column: 9, scope: !12861)
!12946 = !DILocalVariable(name: "self", scope: !12947, file: !5370, line: 413, type: !145, align: 8)
!12947 = !DILexicalBlockFile(scope: !12948, file: !5370, discriminator: 0)
!12948 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !12949)
!12949 = !{!12946}
!12950 = !DILocation(line: 413, column: 25, scope: !12947, inlinedAt: !12908)
!12951 = !DILocation(line: 413, column: 54, scope: !12861)
!12952 = !DILocation(line: 413, column: 67, scope: !12861)
!12953 = !DILocation(line: 413, column: 25, scope: !12905, inlinedAt: !12908)
!12954 = !DILocation(line: 413, column: 25, scope: !12873)
!12955 = !DILocation(line: 413, column: 17, scope: !12869)
!12956 = !DILocation(line: 416, column: 39, scope: !12869)
!12957 = !DILocalVariable(name: "self", scope: !12958, file: !5370, line: 416, type: !1083, align: 8)
!12958 = !DILexicalBlockFile(scope: !12959, file: !5370, discriminator: 0)
!12959 = distinct !DISubprogram(name: "get_unchecked<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h71a4c1ceeccee1eeE", scope: !1568, file: !1567, line: 398, type: !12960, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !4923, retainedNodes: !12962)
!12960 = !DISubroutineType(types: !12961)
!12961 = !{!4699, !1083, !9}
!12962 = !{!12957, !12963}
!12963 = !DILocalVariable(name: "index", scope: !12958, file: !5370, line: 416, type: !9, align: 8)
!12964 = !DILocation(line: 416, column: 39, scope: !12958, inlinedAt: !12956)
!12965 = !DILocation(line: 416, column: 71, scope: !12869)
!12966 = !DILocalVariable(name: "self", scope: !12967, file: !5370, line: 416, type: !9, align: 8)
!12967 = !DILexicalBlockFile(scope: !12968, file: !5370, discriminator: 0)
!12968 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h9a338a16d38b8806E", scope: !11710, file: !889, line: 219, type: !12325, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12969)
!12969 = !{!12966, !12970, !12971}
!12970 = !DILocalVariable(name: "slice", scope: !12967, file: !5370, line: 416, type: !895, align: 8)
!12971 = !DILocalVariable(name: "runtime", scope: !12972, file: !5370, line: 416, type: !12332, align: 8)
!12972 = !DILexicalBlockFile(scope: !12973, file: !5370, discriminator: 0)
!12973 = distinct !DILexicalBlock(scope: !12968, file: !913, line: 2336, column: 13)
!12974 = !DILocation(line: 416, column: 39, scope: !12967, inlinedAt: !12975)
!12975 = !DILocation(line: 405, column: 20, scope: !12959, inlinedAt: !12956)
!12976 = !DILocalVariable(name: "self", scope: !12977, file: !5370, line: 416, type: !895, align: 8)
!12977 = !DILexicalBlockFile(scope: !12978, file: !5370, discriminator: 0)
!12978 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h1088b55685155f31E", scope: !930, file: !929, line: 1385, type: !932, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12979)
!12979 = !{!12976}
!12980 = !DILocation(line: 416, column: 39, scope: !12977, inlinedAt: !12981)
!12981 = !DILocation(line: 226, column: 13, scope: !12968, inlinedAt: !12975)
!12982 = !DILocalVariable(name: "self", scope: !12983, file: !5370, line: 416, type: !353, align: 8)
!12983 = !DILexicalBlockFile(scope: !12984, file: !5370, discriminator: 0)
!12984 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h82208e5cbd5d7609E", scope: !939, file: !929, line: 871, type: !940, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12985)
!12985 = !{!12982, !12986}
!12986 = !DILocalVariable(name: "count", scope: !12983, file: !5370, line: 416, type: !9, align: 8)
!12987 = !DILocation(line: 416, column: 39, scope: !12983, inlinedAt: !12981)
!12988 = !DILocalVariable(name: "self", scope: !12989, file: !5370, line: 416, type: !353, align: 8)
!12989 = !DILexicalBlockFile(scope: !12990, file: !5370, discriminator: 0)
!12990 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17ha09c9658f9aa8a93E", scope: !939, file: !929, line: 453, type: !949, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !12991)
!12991 = !{!12988, !12992}
!12992 = !DILocalVariable(name: "count", scope: !12989, file: !5370, line: 416, type: !951, align: 8)
!12993 = !DILocation(line: 416, column: 39, scope: !12989, inlinedAt: !12994)
!12994 = !DILocation(line: 876, column: 18, scope: !12984, inlinedAt: !12981)
!12995 = !DILocation(line: 1, column: 1, scope: !12996)
!12996 = !DILexicalBlockFile(scope: !12861, file: !1610, discriminator: 0)
!12997 = !DILocation(line: 450, column: 6, scope: !12861)
!12998 = !DILocation(line: 416, column: 38, scope: !12869)
!12999 = !DILocation(line: 416, column: 17, scope: !12875)
!13000 = !DILocation(line: 417, column: 34, scope: !12877)
!13001 = !DILocation(line: 417, column: 20, scope: !12877)
!13002 = !DILocation(line: 417, column: 25, scope: !12877)
!13003 = !DILocation(line: 435, column: 32, scope: !12877)
!13004 = !DILocation(line: 435, column: 17, scope: !12877)
!13005 = !DILocation(line: 436, column: 20, scope: !12877)
!13006 = !DILocation(line: 436, column: 35, scope: !12877)
!13007 = !DILocation(line: 446, column: 31, scope: !12875)
!13008 = !DILocation(line: 446, column: 17, scope: !12875)
!13009 = !DILocation(line: 447, column: 24, scope: !12875)
!13010 = !DILocation(line: 447, column: 17, scope: !12875)
!13011 = !DILocation(line: 437, column: 38, scope: !12877)
!13012 = !DILocation(line: 437, column: 52, scope: !12877)
!13013 = !DILocation(line: 437, column: 25, scope: !12879)
!13014 = !DILocalVariable(name: "self", scope: !13015, file: !5370, line: 438, type: !145, align: 8)
!13015 = !DILexicalBlockFile(scope: !13016, file: !5370, discriminator: 0)
!13016 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13017)
!13017 = !{!13014}
!13018 = !DILocation(line: 438, column: 42, scope: !13015, inlinedAt: !12933)
!13019 = !DILocation(line: 438, column: 83, scope: !12881)
!13020 = !DILocation(line: 438, column: 71, scope: !12881)
!13021 = !DILocation(line: 438, column: 28, scope: !12881)
!13022 = !DILocation(line: 439, column: 28, scope: !12881)
!13023 = !DILocalVariable(name: "self", scope: !13024, file: !5370, line: 439, type: !5358, align: 8)
!13024 = !DILexicalBlockFile(scope: !13025, file: !5370, discriminator: 0)
!13025 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h19e69c64e5c95079E", scope: !3676, file: !1337, line: 1512, type: !5356, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3683, retainedNodes: !13026)
!13026 = !{!13023, !13027}
!13027 = !DILocalVariable(name: "other", scope: !13024, file: !5370, line: 439, type: !5358, align: 8)
!13028 = !DILocation(line: 439, column: 28, scope: !13024, inlinedAt: !13022)
!13029 = !DILocation(line: 439, column: 59, scope: !12881)
!13030 = !DILocation(line: 439, column: 56, scope: !12881)
!13031 = !DILocalVariable(name: "self", scope: !13032, file: !5370, line: 439, type: !1083, align: 8)
!13032 = !DILexicalBlockFile(scope: !13033, file: !5370, discriminator: 0)
!13033 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h295a923d9c0190e1E", scope: !1552, file: !889, line: 17, type: !13034, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !12916, retainedNodes: !13036)
!13034 = !DISubroutineType(types: !13035)
!13035 = !{!1083, !1083, !899, !1109}
!13036 = !{!13031, !13037}
!13037 = !DILocalVariable(name: "index", scope: !13032, file: !5370, line: 439, type: !899, align: 8)
!13038 = !DILocation(line: 439, column: 38, scope: !13032, inlinedAt: !13039)
!13039 = !DILocation(line: 286, column: 9, scope: !12937, inlinedAt: !12944)
!13040 = !DILocation(line: 436, column: 17, scope: !12877)
!13041 = !DILocation(line: 439, column: 37, scope: !12881)
!13042 = !DILocation(line: 438, column: 21, scope: !12879)
!13043 = !DILocation(line: 440, column: 54, scope: !12881)
!13044 = !DILocation(line: 440, column: 41, scope: !12881)
!13045 = !DILocation(line: 440, column: 36, scope: !12881)
!13046 = !DILocation(line: 1, column: 1, scope: !13047)
!13047 = !DILexicalBlockFile(scope: !12875, file: !1610, discriminator: 0)
!13048 = distinct !DISubprogram(name: "haystack", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h3521de85da7148d8E", scope: !12862, file: !5370, line: 379, type: !13049, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13052)
!13049 = !DISubroutineType(types: !13050)
!13050 = !{!145, !13051}
!13051 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::CharSearcher", baseType: !1230, size: 64, align: 64, dwarfAddressSpace: 0)
!13052 = !{!13053}
!13053 = !DILocalVariable(name: "self", arg: 1, scope: !13048, file: !5370, line: 379, type: !13051)
!13054 = !DILocation(line: 379, column: 17, scope: !13048)
!13055 = !DILocation(line: 380, column: 9, scope: !13048)
!13056 = !DILocation(line: 381, column: 6, scope: !13048)
!13057 = distinct !DISubprogram(name: "use_early_reject", linkageName: "_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hb002ffb500e0b323E", scope: !13058, file: !5370, line: 1655, type: !13059, scopeLine: 1655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!13058 = !DINamespace(name: "{impl#33}", scope: !1231)
!13059 = !DISubroutineType(types: !13060)
!13060 = !{!1244}
!13061 = !DILocation(line: 1657, column: 6, scope: !13057)
!13062 = distinct !DISubprogram(name: "matching", linkageName: "_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h53b2776185f0c713E", scope: !13058, file: !5370, line: 1663, type: !13063, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13065)
!13063 = !DISubroutineType(types: !13064)
!13064 = !{!5383, !9, !9}
!13065 = !{!13066, !13067}
!13066 = !DILocalVariable(name: "a", arg: 1, scope: !13062, file: !5370, line: 1663, type: !9)
!13067 = !DILocalVariable(name: "b", arg: 2, scope: !13062, file: !5370, line: 1663, type: !9)
!13068 = !DILocation(line: 1663, column: 17, scope: !13062)
!13069 = !DILocation(line: 1663, column: 27, scope: !13062)
!13070 = !DILocation(line: 1664, column: 14, scope: !13062)
!13071 = !DILocation(line: 1664, column: 9, scope: !13062)
!13072 = !DILocation(line: 1665, column: 6, scope: !13062)
!13073 = distinct !DISubprogram(name: "rejecting", linkageName: "_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17he46f0eaac2dbcdd2E", scope: !13058, file: !5370, line: 1659, type: !13063, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13074)
!13074 = !{!13075, !13076}
!13075 = !DILocalVariable(name: "_a", arg: 1, scope: !13073, file: !5370, line: 1659, type: !9)
!13076 = !DILocalVariable(name: "_b", arg: 2, scope: !13073, file: !5370, line: 1659, type: !9)
!13077 = !DILocation(line: 1659, column: 18, scope: !13073)
!13078 = !DILocation(line: 1659, column: 29, scope: !13073)
!13079 = !DILocation(line: 1660, column: 9, scope: !13073)
!13080 = !DILocation(line: 1661, column: 6, scope: !13073)
!13081 = distinct !DISubprogram(name: "spec_next_back<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17h14008ed51e9c3bc6E", scope: !13082, file: !3594, line: 664, type: !5531, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !13083)
!13082 = !DINamespace(name: "{impl#2}", scope: !3596)
!13083 = !{!13084}
!13084 = !DILocalVariable(name: "self", arg: 1, scope: !13081, file: !3594, line: 664, type: !5533)
!13085 = !DILocation(line: 664, column: 23, scope: !13081)
!13086 = !DILocation(line: 665, column: 12, scope: !13081)
!13087 = !DILocation(line: 665, column: 25, scope: !13081)
!13088 = !DILocation(line: 670, column: 13, scope: !13081)
!13089 = !DILocation(line: 665, column: 9, scope: !13081)
!13090 = !DILocation(line: 667, column: 58, scope: !13081)
!13091 = !DILocation(line: 667, column: 33, scope: !13081)
!13092 = !DILocation(line: 667, column: 13, scope: !13081)
!13093 = !DILocation(line: 668, column: 18, scope: !13081)
!13094 = !DILocation(line: 664, column: 5, scope: !13081)
!13095 = !DILocation(line: 668, column: 13, scope: !13081)
!13096 = !DILocation(line: 672, column: 6, scope: !13081)
!13097 = distinct !DISubprogram(name: "spec_next<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h1d9258947ac1e1f3E", scope: !13082, file: !3594, line: 620, type: !5531, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !223, retainedNodes: !13098)
!13098 = !{!13099, !13100}
!13099 = !DILocalVariable(name: "self", arg: 1, scope: !13097, file: !3594, line: 620, type: !5533)
!13100 = !DILocalVariable(name: "n", scope: !13101, file: !3594, line: 623, type: !9, align: 8)
!13101 = distinct !DILexicalBlock(scope: !13097, file: !3594, line: 623, column: 13)
!13102 = !DILocation(line: 620, column: 18, scope: !13097)
!13103 = !DILocation(line: 621, column: 12, scope: !13097)
!13104 = !DILocation(line: 621, column: 25, scope: !13097)
!13105 = !DILocation(line: 626, column: 13, scope: !13097)
!13106 = !DILocation(line: 621, column: 9, scope: !13097)
!13107 = !DILocation(line: 623, column: 54, scope: !13097)
!13108 = !DILocation(line: 623, column: 30, scope: !13097)
!13109 = !DILocation(line: 623, column: 17, scope: !13101)
!13110 = !DILocation(line: 624, column: 31, scope: !13101)
!13111 = !DILocation(line: 624, column: 18, scope: !13101)
!13112 = !DILocation(line: 624, column: 13, scope: !13101)
!13113 = !DILocation(line: 628, column: 6, scope: !13097)
!13114 = distinct !DISubprogram(name: "use_early_reject", linkageName: "_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h1b202ebc91a248faE", scope: !13115, file: !5370, line: 1675, type: !13059, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!13115 = !DINamespace(name: "{impl#34}", scope: !1231)
!13116 = !DILocation(line: 1677, column: 6, scope: !13114)
!13117 = distinct !DISubprogram(name: "matching", linkageName: "_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h2f3cec3c950c6e05E", scope: !13115, file: !5370, line: 1683, type: !13118, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13120)
!13118 = !DISubroutineType(types: !13119)
!13119 = !{!5606, !9, !9}
!13120 = !{!13121, !13122}
!13121 = !DILocalVariable(name: "a", arg: 1, scope: !13117, file: !5370, line: 1683, type: !9)
!13122 = !DILocalVariable(name: "b", arg: 2, scope: !13117, file: !5370, line: 1683, type: !9)
!13123 = !DILocation(line: 1683, column: 17, scope: !13117)
!13124 = !DILocation(line: 1683, column: 27, scope: !13117)
!13125 = !DILocation(line: 1684, column: 9, scope: !13117)
!13126 = !DILocation(line: 1685, column: 6, scope: !13117)
!13127 = distinct !DISubprogram(name: "rejecting", linkageName: "_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h3c9d378573ab90c8E", scope: !13115, file: !5370, line: 1679, type: !13118, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13128)
!13128 = !{!13129, !13130}
!13129 = !DILocalVariable(name: "a", arg: 1, scope: !13127, file: !5370, line: 1679, type: !9)
!13130 = !DILocalVariable(name: "b", arg: 2, scope: !13127, file: !5370, line: 1679, type: !9)
!13131 = !DILocation(line: 1679, column: 18, scope: !13127)
!13132 = !DILocation(line: 1679, column: 28, scope: !13127)
!13133 = !DILocation(line: 1680, column: 9, scope: !13127)
!13134 = !DILocation(line: 1681, column: 6, scope: !13127)
!13135 = distinct !DISubprogram(name: "next<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2695af24d0687f28E", scope: !13137, file: !13136, line: 134, type: !13138, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13140)
!13136 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "41903112aef4079fb81d70967f52d92d")
!13137 = !DINamespace(name: "{impl#181}", scope: !3578)
!13138 = !DISubroutineType(types: !13139)
!13139 = !{!4756, !4690}
!13140 = !{!13141}
!13141 = !DILocalVariable(name: "self", arg: 1, scope: !13135, file: !13136, line: 134, type: !4690)
!13142 = !DILocation(line: 134, column: 21, scope: !13135)
!13143 = !DILocalVariable(name: "metadata", scope: !13144, file: !13136, line: 142, type: !7, align: 1)
!13144 = !DILexicalBlockFile(scope: !13145, file: !13136, discriminator: 0)
!13145 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbf7d9dcb8aabe9a0E", scope: !981, file: !980, line: 127, type: !4600, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13146)
!13146 = !{!13147, !13143}
!13147 = !DILocalVariable(name: "data_address", scope: !13144, file: !13136, line: 142, type: !1058, align: 8)
!13148 = !DILocation(line: 142, column: 29, scope: !13144, inlinedAt: !13149)
!13149 = !DILocation(line: 668, column: 5, scope: !13150, inlinedAt: !13151)
!13150 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hcabc03503d7a71dfE", scope: !53, file: !959, line: 667, type: !4607, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!13151 = !DILocation(line: 38, column: 41, scope: !13152, inlinedAt: !13156)
!13152 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h930795340a28cb00E", scope: !1027, file: !1016, line: 35, type: !4611, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13153)
!13153 = !{!13154}
!13154 = !DILocalVariable(name: "self", scope: !13155, file: !13136, line: 142, type: !1021, align: 8)
!13155 = !DILexicalBlockFile(scope: !13152, file: !13136, discriminator: 0)
!13156 = !DILocation(line: 142, column: 29, scope: !13135)
!13157 = !DILocalVariable(name: "metadata", scope: !13158, file: !13136, line: 144, type: !7, align: 1)
!13158 = !DILexicalBlockFile(scope: !13159, file: !13136, discriminator: 0)
!13159 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h4aa80bedb05af437E", scope: !981, file: !980, line: 110, type: !6843, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13160)
!13160 = !{!13161, !13157}
!13161 = !DILocalVariable(name: "data_address", scope: !13158, file: !13136, line: 144, type: !6, align: 8)
!13162 = !DILocation(line: 144, column: 33, scope: !13158, inlinedAt: !13163)
!13163 = !DILocation(line: 513, column: 5, scope: !13164, inlinedAt: !13165)
!13164 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17hc3ad23a4f877b6c9E", scope: !53, file: !959, line: 512, type: !6850, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!13165 = !DILocation(line: 39, column: 43, scope: !13166, inlinedAt: !13170)
!13166 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf6dd7547acd73011E", scope: !939, file: !929, line: 36, type: !6854, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13167)
!13167 = !{!13168}
!13168 = !DILocalVariable(name: "self", scope: !13169, file: !13136, line: 144, type: !353, align: 8)
!13169 = !DILexicalBlockFile(scope: !13166, file: !13136, discriminator: 0)
!13170 = !DILocation(line: 144, column: 33, scope: !13135)
!13171 = !DILocalVariable(name: "self", scope: !13172, file: !13136, line: 142, type: !350, align: 8)
!13172 = !DILexicalBlockFile(scope: !13173, file: !13136, discriminator: 0)
!13173 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13174)
!13174 = !{!13171}
!13175 = !DILocation(line: 142, column: 29, scope: !13172, inlinedAt: !13156)
!13176 = !DILocation(line: 142, column: 29, scope: !13155, inlinedAt: !13156)
!13177 = !DILocalVariable(name: "self", scope: !13178, file: !13136, line: 142, type: !1021, align: 8)
!13178 = !DILexicalBlockFile(scope: !13179, file: !13136, discriminator: 0)
!13179 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h09a8727df387d3f4E", scope: !1027, file: !1016, line: 707, type: !4621, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13180)
!13180 = !{!13177, !13181}
!13181 = !DILocalVariable(name: "other", scope: !13178, file: !13136, line: 142, type: !1021, align: 8)
!13182 = !DILocation(line: 142, column: 29, scope: !13178, inlinedAt: !13183)
!13183 = !DILocation(line: 38, column: 9, scope: !13152, inlinedAt: !13156)
!13184 = !DILocation(line: 142, column: 29, scope: !13185, inlinedAt: !13189)
!13185 = !DILexicalBlockFile(scope: !13186, file: !13136, discriminator: 0)
!13186 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h8bd9c196eb7a9556E", scope: !53, file: !959, line: 569, type: !4630, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !13187)
!13187 = !{!13188}
!13188 = !DILocalVariable(name: "addr", scope: !13185, file: !13136, line: 142, type: !9, align: 8)
!13189 = !DILocation(line: 668, column: 24, scope: !13150, inlinedAt: !13151)
!13190 = !DILocation(line: 142, column: 28, scope: !13135)
!13191 = !DILocation(line: 142, column: 21, scope: !13135)
!13192 = !DILocation(line: 143, column: 24, scope: !13135)
!13193 = !DILocation(line: 143, column: 21, scope: !13135)
!13194 = !DILocation(line: 144, column: 33, scope: !13169, inlinedAt: !13170)
!13195 = !DILocalVariable(name: "self", scope: !13196, file: !13136, line: 144, type: !353, align: 8)
!13196 = !DILexicalBlockFile(scope: !13197, file: !13136, discriminator: 0)
!13197 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hdac652941147f64aE", scope: !939, file: !929, line: 777, type: !6873, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13198)
!13198 = !{!13195, !13199}
!13199 = !DILocalVariable(name: "other", scope: !13196, file: !13136, line: 144, type: !353, align: 8)
!13200 = !DILocation(line: 144, column: 33, scope: !13196, inlinedAt: !13201)
!13201 = !DILocation(line: 39, column: 9, scope: !13166, inlinedAt: !13170)
!13202 = !DILocation(line: 144, column: 33, scope: !13203, inlinedAt: !13207)
!13203 = !DILexicalBlockFile(scope: !13204, file: !13136, discriminator: 0)
!13204 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17hea3faf84fa625420E", scope: !53, file: !959, line: 538, type: !6882, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !13205)
!13205 = !{!13206}
!13206 = !DILocalVariable(name: "addr", scope: !13203, file: !13136, line: 144, type: !9, align: 8)
!13207 = !DILocation(line: 513, column: 20, scope: !13164, inlinedAt: !13165)
!13208 = !DILocation(line: 144, column: 32, scope: !13135)
!13209 = !DILocation(line: 144, column: 25, scope: !13135)
!13210 = !DILocation(line: 146, column: 24, scope: !13135)
!13211 = !DILocalVariable(name: "self", scope: !13212, file: !13136, line: 146, type: !350, align: 8)
!13212 = !DILexicalBlockFile(scope: !13213, file: !13136, discriminator: 0)
!13213 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13214)
!13214 = !{!13211}
!13215 = !DILocation(line: 146, column: 24, scope: !13212, inlinedAt: !13216)
!13216 = !DILocation(line: 8, column: 9, scope: !13135)
!13217 = !DILocation(line: 149, column: 30, scope: !13135)
!13218 = !DILocalVariable(name: "self", scope: !13219, file: !13136, line: 149, type: !4690, align: 8)
!13219 = distinct !DISubprogram(name: "post_inc_start<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h502dba90bc47f9dcE", scope: !4691, file: !13136, line: 85, type: !13220, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13222)
!13220 = !DISubroutineType(types: !13221)
!13221 = !{!353, !4690, !951}
!13222 = !{!13218, !13223, !13224}
!13223 = !DILocalVariable(name: "offset", scope: !13219, file: !13136, line: 149, type: !951, align: 8)
!13224 = !DILocalVariable(name: "old", scope: !13225, file: !13136, line: 149, type: !1021, align: 8)
!13225 = distinct !DILexicalBlock(scope: !13219, file: !13136, line: 90, column: 21)
!13226 = !DILocation(line: 149, column: 30, scope: !13219, inlinedAt: !13227)
!13227 = !DILocation(line: 53, column: 47, scope: !13135)
!13228 = !DILocation(line: 147, column: 25, scope: !13135)
!13229 = !DILocation(line: 146, column: 21, scope: !13135)
!13230 = !DILocation(line: 152, column: 14, scope: !13135)
!13231 = !DILocalVariable(name: "self", scope: !13232, file: !13136, line: 149, type: !353, align: 8)
!13232 = !DILexicalBlockFile(scope: !13233, file: !13136, discriminator: 0)
!13233 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hf7b7beef1ec4ebb3E", scope: !939, file: !929, line: 536, type: !949, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13234)
!13234 = !{!13231, !13235}
!13235 = !DILocalVariable(name: "count", scope: !13232, file: !13136, line: 149, type: !951, align: 8)
!13236 = !DILocation(line: 149, column: 30, scope: !13232, inlinedAt: !13237)
!13237 = !DILocation(line: 67, column: 29, scope: !13219, inlinedAt: !13227)
!13238 = !DILocalVariable(name: "self", scope: !13239, file: !13136, line: 149, type: !350, align: 8)
!13239 = !DILexicalBlockFile(scope: !13240, file: !13136, discriminator: 0)
!13240 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13241)
!13241 = !{!13238}
!13242 = !DILocation(line: 149, column: 30, scope: !13239, inlinedAt: !13243)
!13243 = !DILocation(line: 90, column: 31, scope: !13219, inlinedAt: !13227)
!13244 = !DILocation(line: 149, column: 30, scope: !13225, inlinedAt: !13227)
!13245 = !DILocalVariable(name: "self", scope: !13246, file: !13136, line: 149, type: !350, align: 8)
!13246 = !DILexicalBlockFile(scope: !13247, file: !13136, discriminator: 0)
!13247 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13248)
!13248 = !{!13245}
!13249 = !DILocation(line: 149, column: 30, scope: !13246, inlinedAt: !13250)
!13250 = !DILocation(line: 93, column: 64, scope: !13225, inlinedAt: !13227)
!13251 = !DILocalVariable(name: "self", scope: !13252, file: !13136, line: 149, type: !1021, align: 8)
!13252 = !DILexicalBlockFile(scope: !13253, file: !13136, discriminator: 0)
!13253 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h740b8c86c1df61cfE", scope: !1027, file: !1016, line: 465, type: !1037, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13254)
!13254 = !{!13251, !13255}
!13255 = !DILocalVariable(name: "count", scope: !13252, file: !13136, line: 149, type: !951, align: 8)
!13256 = !DILocation(line: 149, column: 30, scope: !13252, inlinedAt: !13250)
!13257 = !DILocalVariable(name: "ptr", scope: !13258, file: !13136, line: 149, type: !1021, align: 8)
!13258 = !DILexicalBlockFile(scope: !13259, file: !13136, discriminator: 0)
!13259 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hf5defd4646408926E", scope: !350, file: !1413, line: 196, type: !1438, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13260)
!13260 = !{!13257}
!13261 = !DILocation(line: 149, column: 30, scope: !13258, inlinedAt: !13262)
!13262 = !DILocation(line: 93, column: 41, scope: !13225, inlinedAt: !13227)
!13263 = !DILocation(line: 149, column: 25, scope: !13135)
!13264 = !DILocalVariable(name: "self", scope: !13265, file: !13136, line: 149, type: !350, align: 8)
!13265 = !DILexicalBlockFile(scope: !13266, file: !13136, discriminator: 0)
!13266 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13267)
!13267 = !{!13264}
!13268 = !DILocation(line: 149, column: 30, scope: !13265, inlinedAt: !13269)
!13269 = !DILocation(line: 88, column: 21, scope: !13219, inlinedAt: !13227)
!13270 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8771c2e09e12367dE", scope: !13137, file: !13136, line: 134, type: !13271, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13285)
!13271 = !DISubroutineType(types: !13272)
!13272 = !{!13273, !13284}
!13273 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&i32>", scope: !231, file: !2, size: 64, align: 64, elements: !13274, templateParams: !28, identifier: "324ce9e215b65561e56a4e40dc41c26a")
!13274 = !{!13275}
!13275 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13273, file: !2, size: 64, align: 64, elements: !13276, templateParams: !28, identifier: "7a132f634b787d2ff3bb697f10bd55f1", discriminator: !13283)
!13276 = !{!13277, !13279}
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !13275, file: !2, baseType: !13278, size: 64, align: 64, extraData: i64 0)
!13278 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !13273, file: !2, size: 64, align: 64, elements: !28, templateParams: !3588, identifier: "bdbca88789dba77455c6fdf7b07427bc")
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !13275, file: !2, baseType: !13280, size: 64, align: 64)
!13280 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !13273, file: !2, size: 64, align: 64, elements: !13281, templateParams: !3588, identifier: "c74e16f3f5ba0f0f9deeaf73819c704")
!13281 = !{!13282}
!13282 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13280, file: !2, baseType: !517, size: 64, align: 64)
!13283 = !DIDerivedType(tag: DW_TAG_member, scope: !13273, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!13284 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<i32>", baseType: !3577, size: 64, align: 64, dwarfAddressSpace: 0)
!13285 = !{!13286}
!13286 = !DILocalVariable(name: "self", arg: 1, scope: !13270, file: !13136, line: 134, type: !13284)
!13287 = !DILocation(line: 134, column: 21, scope: !13270)
!13288 = !DILocalVariable(name: "metadata", scope: !13289, file: !13136, line: 142, type: !7, align: 1)
!13289 = !DILexicalBlockFile(scope: !13290, file: !13136, discriminator: 0)
!13290 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbf7d9dcb8aabe9a0E", scope: !981, file: !980, line: 127, type: !4600, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13291)
!13291 = !{!13292, !13288}
!13292 = !DILocalVariable(name: "data_address", scope: !13289, file: !13136, line: 142, type: !1058, align: 8)
!13293 = !DILocation(line: 142, column: 29, scope: !13289, inlinedAt: !13294)
!13294 = !DILocation(line: 668, column: 5, scope: !13295, inlinedAt: !13296)
!13295 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hcabc03503d7a71dfE", scope: !53, file: !959, line: 667, type: !4607, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!13296 = !DILocation(line: 38, column: 41, scope: !13297, inlinedAt: !13303)
!13297 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h86520b2c55edf967E", scope: !1027, file: !1016, line: 35, type: !13298, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13300)
!13298 = !DISubroutineType(types: !13299)
!13299 = !{!1244, !618}
!13300 = !{!13301}
!13301 = !DILocalVariable(name: "self", scope: !13302, file: !13136, line: 142, type: !618, align: 8)
!13302 = !DILexicalBlockFile(scope: !13297, file: !13136, discriminator: 0)
!13303 = !DILocation(line: 142, column: 29, scope: !13270)
!13304 = !DILocalVariable(name: "metadata", scope: !13305, file: !13136, line: 144, type: !7, align: 1)
!13305 = !DILexicalBlockFile(scope: !13306, file: !13136, discriminator: 0)
!13306 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h4aa80bedb05af437E", scope: !981, file: !980, line: 110, type: !6843, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13307)
!13307 = !{!13308, !13304}
!13308 = !DILocalVariable(name: "data_address", scope: !13305, file: !13136, line: 144, type: !6, align: 8)
!13309 = !DILocation(line: 144, column: 33, scope: !13305, inlinedAt: !13310)
!13310 = !DILocation(line: 513, column: 5, scope: !13311, inlinedAt: !13312)
!13311 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17hc3ad23a4f877b6c9E", scope: !53, file: !959, line: 512, type: !6850, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!13312 = !DILocation(line: 39, column: 43, scope: !13313, inlinedAt: !13317)
!13313 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hc7a6af7c4b3f29cbE", scope: !939, file: !929, line: 36, type: !6950, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13314)
!13314 = !{!13315}
!13315 = !DILocalVariable(name: "self", scope: !13316, file: !13136, line: 144, type: !3584, align: 8)
!13316 = !DILexicalBlockFile(scope: !13313, file: !13136, discriminator: 0)
!13317 = !DILocation(line: 144, column: 33, scope: !13270)
!13318 = !DILocalVariable(name: "self", scope: !13319, file: !13136, line: 142, type: !3581, align: 8)
!13319 = !DILexicalBlockFile(scope: !13320, file: !13136, discriminator: 0)
!13320 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3b5a9e5df8476fc5E", scope: !3581, file: !1413, line: 330, type: !13321, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13323)
!13321 = !DISubroutineType(types: !13322)
!13322 = !{!618, !3581}
!13323 = !{!13318}
!13324 = !DILocation(line: 142, column: 29, scope: !13319, inlinedAt: !13303)
!13325 = !DILocation(line: 142, column: 29, scope: !13302, inlinedAt: !13303)
!13326 = !DILocalVariable(name: "self", scope: !13327, file: !13136, line: 142, type: !1021, align: 8)
!13327 = !DILexicalBlockFile(scope: !13328, file: !13136, discriminator: 0)
!13328 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h09a8727df387d3f4E", scope: !1027, file: !1016, line: 707, type: !4621, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13329)
!13329 = !{!13326, !13330}
!13330 = !DILocalVariable(name: "other", scope: !13327, file: !13136, line: 142, type: !1021, align: 8)
!13331 = !DILocation(line: 142, column: 29, scope: !13327, inlinedAt: !13332)
!13332 = !DILocation(line: 38, column: 9, scope: !13297, inlinedAt: !13303)
!13333 = !DILocation(line: 142, column: 29, scope: !13334, inlinedAt: !13338)
!13334 = !DILexicalBlockFile(scope: !13335, file: !13136, discriminator: 0)
!13335 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h8bd9c196eb7a9556E", scope: !53, file: !959, line: 569, type: !4630, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !13336)
!13336 = !{!13337}
!13337 = !DILocalVariable(name: "addr", scope: !13334, file: !13136, line: 142, type: !9, align: 8)
!13338 = !DILocation(line: 668, column: 24, scope: !13295, inlinedAt: !13296)
!13339 = !DILocation(line: 142, column: 28, scope: !13270)
!13340 = !DILocation(line: 142, column: 21, scope: !13270)
!13341 = !DILocation(line: 143, column: 24, scope: !13270)
!13342 = !DILocation(line: 143, column: 21, scope: !13270)
!13343 = !DILocation(line: 144, column: 33, scope: !13316, inlinedAt: !13317)
!13344 = !DILocalVariable(name: "self", scope: !13345, file: !13136, line: 144, type: !353, align: 8)
!13345 = !DILexicalBlockFile(scope: !13346, file: !13136, discriminator: 0)
!13346 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hdac652941147f64aE", scope: !939, file: !929, line: 777, type: !6873, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13347)
!13347 = !{!13344, !13348}
!13348 = !DILocalVariable(name: "other", scope: !13345, file: !13136, line: 144, type: !353, align: 8)
!13349 = !DILocation(line: 144, column: 33, scope: !13345, inlinedAt: !13350)
!13350 = !DILocation(line: 39, column: 9, scope: !13313, inlinedAt: !13317)
!13351 = !DILocation(line: 144, column: 33, scope: !13352, inlinedAt: !13356)
!13352 = !DILexicalBlockFile(scope: !13353, file: !13136, discriminator: 0)
!13353 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17hea3faf84fa625420E", scope: !53, file: !959, line: 538, type: !6882, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !13354)
!13354 = !{!13355}
!13355 = !DILocalVariable(name: "addr", scope: !13352, file: !13136, line: 144, type: !9, align: 8)
!13356 = !DILocation(line: 513, column: 20, scope: !13311, inlinedAt: !13312)
!13357 = !DILocation(line: 144, column: 32, scope: !13270)
!13358 = !DILocation(line: 144, column: 25, scope: !13270)
!13359 = !DILocation(line: 146, column: 24, scope: !13270)
!13360 = !DILocalVariable(name: "self", scope: !13361, file: !13136, line: 146, type: !3581, align: 8)
!13361 = !DILexicalBlockFile(scope: !13362, file: !13136, discriminator: 0)
!13362 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3b5a9e5df8476fc5E", scope: !3581, file: !1413, line: 330, type: !13321, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13363)
!13363 = !{!13360}
!13364 = !DILocation(line: 146, column: 24, scope: !13361, inlinedAt: !13365)
!13365 = !DILocation(line: 8, column: 9, scope: !13270)
!13366 = !DILocation(line: 149, column: 30, scope: !13270)
!13367 = !DILocalVariable(name: "self", scope: !13368, file: !13136, line: 149, type: !13284, align: 8)
!13368 = distinct !DISubprogram(name: "post_inc_start<i32>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h47405533a1d2a0caE", scope: !3577, file: !13136, line: 85, type: !13369, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13371)
!13369 = !DISubroutineType(types: !13370)
!13370 = !{!3584, !13284, !951}
!13371 = !{!13367, !13372, !13373}
!13372 = !DILocalVariable(name: "offset", scope: !13368, file: !13136, line: 149, type: !951, align: 8)
!13373 = !DILocalVariable(name: "old", scope: !13374, file: !13136, line: 149, type: !618, align: 8)
!13374 = distinct !DILexicalBlock(scope: !13368, file: !13136, line: 90, column: 21)
!13375 = !DILocation(line: 149, column: 30, scope: !13368, inlinedAt: !13376)
!13376 = !DILocation(line: 53, column: 47, scope: !13270)
!13377 = !DILocation(line: 147, column: 25, scope: !13270)
!13378 = !DILocation(line: 146, column: 21, scope: !13270)
!13379 = !DILocation(line: 152, column: 14, scope: !13270)
!13380 = !DILocalVariable(name: "self", scope: !13381, file: !13136, line: 149, type: !353, align: 8)
!13381 = !DILexicalBlockFile(scope: !13382, file: !13136, discriminator: 0)
!13382 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hf7b7beef1ec4ebb3E", scope: !939, file: !929, line: 536, type: !949, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13383)
!13383 = !{!13380, !13384}
!13384 = !DILocalVariable(name: "count", scope: !13381, file: !13136, line: 149, type: !951, align: 8)
!13385 = !DILocation(line: 149, column: 30, scope: !13381, inlinedAt: !13386)
!13386 = !DILocation(line: 67, column: 29, scope: !13368, inlinedAt: !13376)
!13387 = !DILocalVariable(name: "self", scope: !13388, file: !13136, line: 149, type: !3581, align: 8)
!13388 = !DILexicalBlockFile(scope: !13389, file: !13136, discriminator: 0)
!13389 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3b5a9e5df8476fc5E", scope: !3581, file: !1413, line: 330, type: !13321, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13390)
!13390 = !{!13387}
!13391 = !DILocation(line: 149, column: 30, scope: !13388, inlinedAt: !13392)
!13392 = !DILocation(line: 90, column: 31, scope: !13368, inlinedAt: !13376)
!13393 = !DILocation(line: 149, column: 30, scope: !13374, inlinedAt: !13376)
!13394 = !DILocalVariable(name: "self", scope: !13395, file: !13136, line: 149, type: !3581, align: 8)
!13395 = !DILexicalBlockFile(scope: !13396, file: !13136, discriminator: 0)
!13396 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3b5a9e5df8476fc5E", scope: !3581, file: !1413, line: 330, type: !13321, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13397)
!13397 = !{!13394}
!13398 = !DILocation(line: 149, column: 30, scope: !13395, inlinedAt: !13399)
!13399 = !DILocation(line: 93, column: 64, scope: !13374, inlinedAt: !13376)
!13400 = !DILocalVariable(name: "self", scope: !13401, file: !13136, line: 149, type: !618, align: 8)
!13401 = !DILexicalBlockFile(scope: !13402, file: !13136, discriminator: 0)
!13402 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha5dd220277866a76E", scope: !1027, file: !1016, line: 465, type: !13403, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13405)
!13403 = !DISubroutineType(types: !13404)
!13404 = !{!618, !618, !951}
!13405 = !{!13400, !13406}
!13406 = !DILocalVariable(name: "count", scope: !13401, file: !13136, line: 149, type: !951, align: 8)
!13407 = !DILocation(line: 149, column: 30, scope: !13401, inlinedAt: !13399)
!13408 = !DILocalVariable(name: "ptr", scope: !13409, file: !13136, line: 149, type: !618, align: 8)
!13409 = !DILexicalBlockFile(scope: !13410, file: !13136, discriminator: 0)
!13410 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h717af366b262a267E", scope: !3581, file: !1413, line: 196, type: !7021, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13411)
!13411 = !{!13408}
!13412 = !DILocation(line: 149, column: 30, scope: !13409, inlinedAt: !13413)
!13413 = !DILocation(line: 93, column: 41, scope: !13374, inlinedAt: !13376)
!13414 = !DILocation(line: 149, column: 25, scope: !13270)
!13415 = !DILocalVariable(name: "self", scope: !13416, file: !13136, line: 149, type: !3581, align: 8)
!13416 = !DILexicalBlockFile(scope: !13417, file: !13136, discriminator: 0)
!13417 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3b5a9e5df8476fc5E", scope: !3581, file: !1413, line: 330, type: !13321, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13418)
!13418 = !{!13415}
!13419 = !DILocation(line: 149, column: 30, scope: !13416, inlinedAt: !13420)
!13420 = !DILocation(line: 88, column: 21, scope: !13368, inlinedAt: !13376)
!13421 = distinct !DISubprogram(name: "next<&str>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha6d8713f2e09f655E", scope: !13137, file: !13136, line: 134, type: !13422, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13436)
!13422 = !DISubroutineType(types: !13423)
!13423 = !{!13424, !13435}
!13424 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&&str>", scope: !231, file: !2, size: 64, align: 64, elements: !13425, templateParams: !28, identifier: "84d983b3b62a1584e607eb9568951c81")
!13425 = !{!13426}
!13426 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13424, file: !2, size: 64, align: 64, elements: !13427, templateParams: !28, identifier: "42e9c00213f0fbdfd68230a7ab8c7e", discriminator: !13434)
!13427 = !{!13428, !13430}
!13428 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !13426, file: !2, baseType: !13429, size: 64, align: 64, extraData: i64 0)
!13429 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !13424, file: !2, size: 64, align: 64, elements: !28, templateParams: !6808, identifier: "cdfde7c90be5777a1325da870ff6f38d")
!13430 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !13426, file: !2, baseType: !13431, size: 64, align: 64)
!13431 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !13424, file: !2, size: 64, align: 64, elements: !13432, templateParams: !6808, identifier: "699a4b5135c9ad29b8983ffe42362098")
!13432 = !{!13433}
!13433 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13431, file: !2, baseType: !3679, size: 64, align: 64)
!13434 = !DIDerivedType(tag: DW_TAG_member, scope: !13424, file: !2, baseType: !160, size: 64, align: 64, flags: DIFlagArtificial)
!13435 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<&str>", baseType: !6802, size: 64, align: 64, dwarfAddressSpace: 0)
!13436 = !{!13437}
!13437 = !DILocalVariable(name: "self", arg: 1, scope: !13421, file: !13136, line: 134, type: !13435)
!13438 = !DILocation(line: 134, column: 21, scope: !13421)
!13439 = !DILocalVariable(name: "metadata", scope: !13440, file: !13136, line: 142, type: !7, align: 1)
!13440 = !DILexicalBlockFile(scope: !13441, file: !13136, discriminator: 0)
!13441 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbf7d9dcb8aabe9a0E", scope: !981, file: !980, line: 127, type: !4600, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13442)
!13442 = !{!13443, !13439}
!13443 = !DILocalVariable(name: "data_address", scope: !13440, file: !13136, line: 142, type: !1058, align: 8)
!13444 = !DILocation(line: 142, column: 29, scope: !13440, inlinedAt: !13445)
!13445 = !DILocation(line: 668, column: 5, scope: !13446, inlinedAt: !13447)
!13446 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hcabc03503d7a71dfE", scope: !53, file: !959, line: 667, type: !4607, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!13447 = !DILocation(line: 38, column: 41, scope: !13448, inlinedAt: !13452)
!13448 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h7c2f0240cba050e0E", scope: !1027, file: !1016, line: 35, type: !8029, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13449)
!13449 = !{!13450}
!13450 = !DILocalVariable(name: "self", scope: !13451, file: !13136, line: 142, type: !1275, align: 8)
!13451 = !DILexicalBlockFile(scope: !13448, file: !13136, discriminator: 0)
!13452 = !DILocation(line: 142, column: 29, scope: !13421)
!13453 = !DILocalVariable(name: "metadata", scope: !13454, file: !13136, line: 144, type: !7, align: 1)
!13454 = !DILexicalBlockFile(scope: !13455, file: !13136, discriminator: 0)
!13455 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h4aa80bedb05af437E", scope: !981, file: !980, line: 110, type: !6843, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13456)
!13456 = !{!13457, !13453}
!13457 = !DILocalVariable(name: "data_address", scope: !13454, file: !13136, line: 144, type: !6, align: 8)
!13458 = !DILocation(line: 144, column: 33, scope: !13454, inlinedAt: !13459)
!13459 = !DILocation(line: 513, column: 5, scope: !13460, inlinedAt: !13461)
!13460 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17hc3ad23a4f877b6c9E", scope: !53, file: !959, line: 512, type: !6850, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!13461 = !DILocation(line: 39, column: 43, scope: !13462, inlinedAt: !13466)
!13462 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hcd4837e5ebfa11aeE", scope: !939, file: !929, line: 36, type: !7048, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13463)
!13463 = !{!13464}
!13464 = !DILocalVariable(name: "self", scope: !13465, file: !13136, line: 144, type: !1202, align: 8)
!13465 = !DILexicalBlockFile(scope: !13462, file: !13136, discriminator: 0)
!13466 = !DILocation(line: 144, column: 33, scope: !13421)
!13467 = !DILocalVariable(name: "self", scope: !13468, file: !13136, line: 142, type: !1199, align: 8)
!13468 = !DILexicalBlockFile(scope: !13469, file: !13136, discriminator: 0)
!13469 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13470)
!13470 = !{!13467}
!13471 = !DILocation(line: 142, column: 29, scope: !13468, inlinedAt: !13452)
!13472 = !DILocation(line: 142, column: 29, scope: !13451, inlinedAt: !13452)
!13473 = !DILocalVariable(name: "self", scope: !13474, file: !13136, line: 142, type: !1021, align: 8)
!13474 = !DILexicalBlockFile(scope: !13475, file: !13136, discriminator: 0)
!13475 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h09a8727df387d3f4E", scope: !1027, file: !1016, line: 707, type: !4621, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13476)
!13476 = !{!13473, !13477}
!13477 = !DILocalVariable(name: "other", scope: !13474, file: !13136, line: 142, type: !1021, align: 8)
!13478 = !DILocation(line: 142, column: 29, scope: !13474, inlinedAt: !13479)
!13479 = !DILocation(line: 38, column: 9, scope: !13448, inlinedAt: !13452)
!13480 = !DILocation(line: 142, column: 29, scope: !13481, inlinedAt: !13485)
!13481 = !DILexicalBlockFile(scope: !13482, file: !13136, discriminator: 0)
!13482 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h8bd9c196eb7a9556E", scope: !53, file: !959, line: 569, type: !4630, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !13483)
!13483 = !{!13484}
!13484 = !DILocalVariable(name: "addr", scope: !13481, file: !13136, line: 142, type: !9, align: 8)
!13485 = !DILocation(line: 668, column: 24, scope: !13446, inlinedAt: !13447)
!13486 = !DILocation(line: 142, column: 28, scope: !13421)
!13487 = !DILocation(line: 142, column: 21, scope: !13421)
!13488 = !DILocation(line: 143, column: 24, scope: !13421)
!13489 = !DILocation(line: 143, column: 21, scope: !13421)
!13490 = !DILocation(line: 144, column: 33, scope: !13465, inlinedAt: !13466)
!13491 = !DILocalVariable(name: "self", scope: !13492, file: !13136, line: 144, type: !353, align: 8)
!13492 = !DILexicalBlockFile(scope: !13493, file: !13136, discriminator: 0)
!13493 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hdac652941147f64aE", scope: !939, file: !929, line: 777, type: !6873, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13494)
!13494 = !{!13491, !13495}
!13495 = !DILocalVariable(name: "other", scope: !13492, file: !13136, line: 144, type: !353, align: 8)
!13496 = !DILocation(line: 144, column: 33, scope: !13492, inlinedAt: !13497)
!13497 = !DILocation(line: 39, column: 9, scope: !13462, inlinedAt: !13466)
!13498 = !DILocation(line: 144, column: 33, scope: !13499, inlinedAt: !13503)
!13499 = !DILexicalBlockFile(scope: !13500, file: !13136, discriminator: 0)
!13500 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17hea3faf84fa625420E", scope: !53, file: !959, line: 538, type: !6882, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !56, retainedNodes: !13501)
!13501 = !{!13502}
!13502 = !DILocalVariable(name: "addr", scope: !13499, file: !13136, line: 144, type: !9, align: 8)
!13503 = !DILocation(line: 513, column: 20, scope: !13460, inlinedAt: !13461)
!13504 = !DILocation(line: 144, column: 32, scope: !13421)
!13505 = !DILocation(line: 144, column: 25, scope: !13421)
!13506 = !DILocation(line: 146, column: 24, scope: !13421)
!13507 = !DILocalVariable(name: "self", scope: !13508, file: !13136, line: 146, type: !1199, align: 8)
!13508 = !DILexicalBlockFile(scope: !13509, file: !13136, discriminator: 0)
!13509 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13510)
!13510 = !{!13507}
!13511 = !DILocation(line: 146, column: 24, scope: !13508, inlinedAt: !13512)
!13512 = !DILocation(line: 8, column: 9, scope: !13421)
!13513 = !DILocation(line: 149, column: 30, scope: !13421)
!13514 = !DILocalVariable(name: "self", scope: !13515, file: !13136, line: 149, type: !13435, align: 8)
!13515 = distinct !DISubprogram(name: "post_inc_start<&str>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17hdcb8be45c9d2727bE", scope: !6802, file: !13136, line: 85, type: !13516, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13518)
!13516 = !DISubroutineType(types: !13517)
!13517 = !{!1202, !13435, !951}
!13518 = !{!13514, !13519, !13520}
!13519 = !DILocalVariable(name: "offset", scope: !13515, file: !13136, line: 149, type: !951, align: 8)
!13520 = !DILocalVariable(name: "old", scope: !13521, file: !13136, line: 149, type: !1275, align: 8)
!13521 = distinct !DILexicalBlock(scope: !13515, file: !13136, line: 90, column: 21)
!13522 = !DILocation(line: 149, column: 30, scope: !13515, inlinedAt: !13523)
!13523 = !DILocation(line: 53, column: 47, scope: !13421)
!13524 = !DILocation(line: 147, column: 25, scope: !13421)
!13525 = !DILocation(line: 146, column: 21, scope: !13421)
!13526 = !DILocation(line: 152, column: 14, scope: !13421)
!13527 = !DILocalVariable(name: "self", scope: !13528, file: !13136, line: 149, type: !353, align: 8)
!13528 = !DILexicalBlockFile(scope: !13529, file: !13136, discriminator: 0)
!13529 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hf7b7beef1ec4ebb3E", scope: !939, file: !929, line: 536, type: !949, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13530)
!13530 = !{!13527, !13531}
!13531 = !DILocalVariable(name: "count", scope: !13528, file: !13136, line: 149, type: !951, align: 8)
!13532 = !DILocation(line: 149, column: 30, scope: !13528, inlinedAt: !13533)
!13533 = !DILocation(line: 67, column: 29, scope: !13515, inlinedAt: !13523)
!13534 = !DILocalVariable(name: "self", scope: !13535, file: !13136, line: 149, type: !1199, align: 8)
!13535 = !DILexicalBlockFile(scope: !13536, file: !13136, discriminator: 0)
!13536 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13537)
!13537 = !{!13534}
!13538 = !DILocation(line: 149, column: 30, scope: !13535, inlinedAt: !13539)
!13539 = !DILocation(line: 90, column: 31, scope: !13515, inlinedAt: !13523)
!13540 = !DILocation(line: 149, column: 30, scope: !13521, inlinedAt: !13523)
!13541 = !DILocalVariable(name: "self", scope: !13542, file: !13136, line: 149, type: !1199, align: 8)
!13542 = !DILexicalBlockFile(scope: !13543, file: !13136, discriminator: 0)
!13543 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13544)
!13544 = !{!13541}
!13545 = !DILocation(line: 149, column: 30, scope: !13542, inlinedAt: !13546)
!13546 = !DILocation(line: 93, column: 64, scope: !13521, inlinedAt: !13523)
!13547 = !DILocalVariable(name: "self", scope: !13548, file: !13136, line: 149, type: !1275, align: 8)
!13548 = !DILexicalBlockFile(scope: !13549, file: !13136, discriminator: 0)
!13549 = distinct !DISubprogram(name: "offset<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h8d09da632cacb9b6E", scope: !1027, file: !1016, line: 465, type: !8155, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13550)
!13550 = !{!13547, !13551}
!13551 = !DILocalVariable(name: "count", scope: !13548, file: !13136, line: 149, type: !951, align: 8)
!13552 = !DILocation(line: 149, column: 30, scope: !13548, inlinedAt: !13546)
!13553 = !DILocalVariable(name: "ptr", scope: !13554, file: !13136, line: 149, type: !1275, align: 8)
!13554 = !DILexicalBlockFile(scope: !13555, file: !13136, discriminator: 0)
!13555 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9a2436cafa99480dE", scope: !1199, file: !1413, line: 196, type: !7119, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13556)
!13556 = !{!13553}
!13557 = !DILocation(line: 149, column: 30, scope: !13554, inlinedAt: !13558)
!13558 = !DILocation(line: 93, column: 41, scope: !13521, inlinedAt: !13523)
!13559 = !DILocation(line: 149, column: 25, scope: !13421)
!13560 = !DILocalVariable(name: "self", scope: !13561, file: !13136, line: 149, type: !1199, align: 8)
!13561 = !DILexicalBlockFile(scope: !13562, file: !13136, discriminator: 0)
!13562 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13563)
!13563 = !{!13560}
!13564 = !DILocation(line: 149, column: 30, scope: !13561, inlinedAt: !13565)
!13565 = !DILocation(line: 88, column: 21, scope: !13515, inlinedAt: !13523)
!13566 = distinct !DISubprogram(name: "position<&str, statics_tests::test_sections::test_sectioned_used_static::{closure_env#0}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h57df9ce632f31387E", scope: !13137, file: !13136, line: 288, type: !13567, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !13585, retainedNodes: !13570)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!1740, !13435, !13569}
!13569 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !4161, file: !2, align: 8, elements: !28, identifier: "47226859f5e8d0d7feb03f84035979a7")
!13570 = !{!13571, !13572, !13573, !13575, !13577, !13579, !13581, !13583}
!13571 = !DILocalVariable(name: "self", arg: 1, scope: !13566, file: !13136, line: 288, type: !13435)
!13572 = !DILocalVariable(name: "predicate", arg: 2, scope: !13566, file: !13136, line: 288, type: !13569)
!13573 = !DILocalVariable(name: "n", scope: !13574, file: !13136, line: 292, type: !9, align: 8)
!13574 = distinct !DILexicalBlock(scope: !13566, file: !13136, line: 292, column: 17)
!13575 = !DILocalVariable(name: "start", scope: !13576, file: !13136, line: 292, type: !1199, align: 8)
!13576 = distinct !DILexicalBlock(scope: !13566, file: !13136, line: 18, column: 9)
!13577 = !DILocalVariable(name: "size", scope: !13578, file: !13136, line: 292, type: !9, align: 8)
!13578 = distinct !DILexicalBlock(scope: !13576, file: !13136, line: 19, column: 9)
!13579 = !DILocalVariable(name: "diff", scope: !13580, file: !13136, line: 292, type: !9, align: 8)
!13580 = distinct !DILexicalBlock(scope: !13578, file: !13136, line: 29, column: 13)
!13581 = !DILocalVariable(name: "i", scope: !13582, file: !13136, line: 293, type: !9, align: 8)
!13582 = distinct !DILexicalBlock(scope: !13574, file: !13136, line: 293, column: 17)
!13583 = !DILocalVariable(name: "x", scope: !13584, file: !13136, line: 294, type: !3679, align: 8)
!13584 = distinct !DILexicalBlock(scope: !13582, file: !13136, line: 294, column: 49)
!13585 = !{!1204, !13586}
!13586 = !DITemplateTypeParameter(name: "P", type: !13569)
!13587 = !DILocation(line: 288, column: 28, scope: !13566)
!13588 = !DILocation(line: 288, column: 39, scope: !13566)
!13589 = !DILocation(line: 292, column: 21, scope: !13574)
!13590 = !DILocation(line: 293, column: 21, scope: !13582)
!13591 = !DILocation(line: 292, column: 25, scope: !13566)
!13592 = !DILocation(line: 292, column: 25, scope: !13576)
!13593 = !DILocation(line: 292, column: 25, scope: !13594, inlinedAt: !13596)
!13594 = !DILexicalBlockFile(scope: !13595, file: !13136, discriminator: 0)
!13595 = distinct !DISubprogram(name: "size_of<&str>", linkageName: "_ZN4core3mem7size_of17he87f50d36c0792b6E", scope: !789, file: !3835, line: 314, type: !2774, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !28)
!13596 = !DILocation(line: 41, column: 5, scope: !13597, inlinedAt: !13600)
!13597 = distinct !DISubprogram(name: "size_from_ptr<&str>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h8ef6f646d0f18d31E", scope: !3578, file: !6829, line: 40, type: !13598, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !28)
!13598 = !DISubroutineType(types: !13599)
!13599 = !{!9, !1202}
!13600 = !DILocation(line: 19, column: 20, scope: !13576)
!13601 = !DILocation(line: 292, column: 25, scope: !13578)
!13602 = !DILocalVariable(name: "self", scope: !13603, file: !13136, line: 292, type: !1202, align: 8)
!13603 = !DILexicalBlockFile(scope: !13604, file: !13136, discriminator: 0)
!13604 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17he1f24e62224d7e60E", scope: !939, file: !929, line: 178, type: !13598, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13605)
!13605 = !{!13602}
!13606 = !DILocation(line: 292, column: 25, scope: !13603, inlinedAt: !13607)
!13607 = !DILocation(line: 23, column: 13, scope: !13578)
!13608 = !DILocalVariable(name: "self", scope: !13609, file: !13136, line: 292, type: !9, align: 8)
!13609 = !DILexicalBlockFile(scope: !13610, file: !13136, discriminator: 0)
!13610 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !1328, file: !1327, line: 1231, type: !1329, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13611)
!13611 = !{!13608, !13612}
!13612 = !DILocalVariable(name: "rhs", scope: !13609, file: !13136, line: 292, type: !9, align: 8)
!13613 = !DILocation(line: 292, column: 25, scope: !13609, inlinedAt: !13607)
!13614 = !DILocalVariable(name: "self", scope: !13615, file: !13136, line: 292, type: !1202, align: 8)
!13615 = !DILexicalBlockFile(scope: !13616, file: !13136, discriminator: 0)
!13616 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17he1f24e62224d7e60E", scope: !939, file: !929, line: 178, type: !13598, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13617)
!13617 = !{!13614}
!13618 = !DILocation(line: 292, column: 25, scope: !13615, inlinedAt: !13619)
!13619 = !DILocation(line: 29, column: 47, scope: !13578)
!13620 = !DILocalVariable(name: "self", scope: !13621, file: !13136, line: 292, type: !1199, align: 8)
!13621 = !DILexicalBlockFile(scope: !13622, file: !13136, discriminator: 0)
!13622 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13623)
!13623 = !{!13620}
!13624 = !DILocation(line: 292, column: 25, scope: !13621, inlinedAt: !13625)
!13625 = !DILocation(line: 29, column: 65, scope: !13578)
!13626 = !DILocalVariable(name: "self", scope: !13627, file: !13136, line: 292, type: !1275, align: 8)
!13627 = !DILexicalBlockFile(scope: !13628, file: !13136, discriminator: 0)
!13628 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h6c6aa7298c2c669fE", scope: !1027, file: !1016, line: 184, type: !13629, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13631)
!13629 = !DISubroutineType(types: !13630)
!13630 = !{!9, !1275}
!13631 = !{!13626}
!13632 = !DILocation(line: 292, column: 25, scope: !13627, inlinedAt: !13625)
!13633 = !DILocation(line: 292, column: 25, scope: !13580)
!13634 = !DILocation(line: 293, column: 29, scope: !13574)
!13635 = !DILocation(line: 294, column: 17, scope: !13582)
!13636 = !DILocalVariable(name: "self", scope: !13637, file: !13136, line: 292, type: !1199, align: 8)
!13637 = !DILexicalBlockFile(scope: !13638, file: !13136, discriminator: 0)
!13638 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h32e82d7f19059f0eE", scope: !1199, file: !1413, line: 330, type: !8055, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13639)
!13639 = !{!13636}
!13640 = !DILocation(line: 292, column: 25, scope: !13637, inlinedAt: !13641)
!13641 = !DILocation(line: 23, column: 43, scope: !13578)
!13642 = !DILocalVariable(name: "self", scope: !13643, file: !13136, line: 292, type: !1275, align: 8)
!13643 = !DILexicalBlockFile(scope: !13644, file: !13136, discriminator: 0)
!13644 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h6c6aa7298c2c669fE", scope: !1027, file: !1016, line: 184, type: !13629, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1203, retainedNodes: !13645)
!13645 = !{!13642}
!13646 = !DILocation(line: 292, column: 25, scope: !13643, inlinedAt: !13641)
!13647 = !DILocation(line: 294, column: 37, scope: !13584)
!13648 = !DILocation(line: 304, column: 13, scope: !13566)
!13649 = !DILocation(line: 294, column: 27, scope: !13584)
!13650 = !DILocation(line: 294, column: 32, scope: !13584)
!13651 = !DILocation(line: 295, column: 24, scope: !13584)
!13652 = !DILocation(line: 303, column: 17, scope: !13582)
!13653 = !DILocation(line: 304, column: 14, scope: !13566)
!13654 = !DILocation(line: 301, column: 21, scope: !13584)
!13655 = !DILocation(line: 298, column: 41, scope: !13584)
!13656 = !DILocation(line: 298, column: 45, scope: !13584)
!13657 = !DILocation(line: 298, column: 34, scope: !13584)
!13658 = !DILocation(line: 299, column: 37, scope: !13584)
!13659 = !DILocation(line: 299, column: 32, scope: !13584)
!13660 = !DILocation(line: 288, column: 13, scope: !13566)
!13661 = distinct !DISubprogram(name: "position<u8, core::slice::memchr::memchr::{closure_env#0}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h688fb9758e67fecbE", scope: !13137, file: !13136, line: 288, type: !13662, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !13679, retainedNodes: !13664)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{!1740, !4690, !7153}
!13664 = !{!13665, !13666, !13667, !13669, !13671, !13673, !13675, !13677}
!13665 = !DILocalVariable(name: "self", arg: 1, scope: !13661, file: !13136, line: 288, type: !4690)
!13666 = !DILocalVariable(name: "predicate", arg: 2, scope: !13661, file: !13136, line: 288, type: !7153)
!13667 = !DILocalVariable(name: "n", scope: !13668, file: !13136, line: 292, type: !9, align: 8)
!13668 = distinct !DILexicalBlock(scope: !13661, file: !13136, line: 292, column: 17)
!13669 = !DILocalVariable(name: "start", scope: !13670, file: !13136, line: 292, type: !350, align: 8)
!13670 = distinct !DILexicalBlock(scope: !13661, file: !13136, line: 18, column: 9)
!13671 = !DILocalVariable(name: "size", scope: !13672, file: !13136, line: 292, type: !9, align: 8)
!13672 = distinct !DILexicalBlock(scope: !13670, file: !13136, line: 19, column: 9)
!13673 = !DILocalVariable(name: "diff", scope: !13674, file: !13136, line: 292, type: !9, align: 8)
!13674 = distinct !DILexicalBlock(scope: !13672, file: !13136, line: 29, column: 13)
!13675 = !DILocalVariable(name: "i", scope: !13676, file: !13136, line: 293, type: !9, align: 8)
!13676 = distinct !DILexicalBlock(scope: !13668, file: !13136, line: 293, column: 17)
!13677 = !DILocalVariable(name: "x", scope: !13678, file: !13136, line: 294, type: !4699, align: 8)
!13678 = distinct !DILexicalBlock(scope: !13676, file: !13136, line: 294, column: 49)
!13679 = !{!333, !13680}
!13680 = !DITemplateTypeParameter(name: "P", type: !7153)
!13681 = !DILocation(line: 288, column: 28, scope: !13661)
!13682 = !DILocation(line: 288, column: 39, scope: !13661)
!13683 = !DILocation(line: 292, column: 21, scope: !13668)
!13684 = !DILocation(line: 293, column: 21, scope: !13676)
!13685 = !DILocation(line: 292, column: 25, scope: !13661)
!13686 = !DILocation(line: 292, column: 25, scope: !13670)
!13687 = !DILocation(line: 292, column: 25, scope: !13688, inlinedAt: !13690)
!13688 = !DILexicalBlockFile(scope: !13689, file: !13136, discriminator: 0)
!13689 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17hfc5f5e49cf82b721E", scope: !789, file: !3835, line: 314, type: !2774, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!13690 = !DILocation(line: 41, column: 5, scope: !13691, inlinedAt: !13694)
!13691 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h80a805fba36e95edE", scope: !3578, file: !6829, line: 40, type: !13692, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !28)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{!9, !353}
!13694 = !DILocation(line: 19, column: 20, scope: !13670)
!13695 = !DILocation(line: 292, column: 25, scope: !13672)
!13696 = !DILocalVariable(name: "self", scope: !13697, file: !13136, line: 292, type: !353, align: 8)
!13697 = !DILexicalBlockFile(scope: !13698, file: !13136, discriminator: 0)
!13698 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h95a1e62630cec108E", scope: !939, file: !929, line: 178, type: !13692, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13699)
!13699 = !{!13696}
!13700 = !DILocation(line: 292, column: 25, scope: !13697, inlinedAt: !13701)
!13701 = !DILocation(line: 23, column: 13, scope: !13672)
!13702 = !DILocalVariable(name: "self", scope: !13703, file: !13136, line: 292, type: !9, align: 8)
!13703 = !DILexicalBlockFile(scope: !13704, file: !13136, discriminator: 0)
!13704 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !1328, file: !1327, line: 1231, type: !1329, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13705)
!13705 = !{!13702, !13706}
!13706 = !DILocalVariable(name: "rhs", scope: !13703, file: !13136, line: 292, type: !9, align: 8)
!13707 = !DILocation(line: 292, column: 25, scope: !13703, inlinedAt: !13701)
!13708 = !DILocalVariable(name: "self", scope: !13709, file: !13136, line: 292, type: !353, align: 8)
!13709 = !DILexicalBlockFile(scope: !13710, file: !13136, discriminator: 0)
!13710 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h95a1e62630cec108E", scope: !939, file: !929, line: 178, type: !13692, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13711)
!13711 = !{!13708}
!13712 = !DILocation(line: 292, column: 25, scope: !13709, inlinedAt: !13713)
!13713 = !DILocation(line: 29, column: 47, scope: !13672)
!13714 = !DILocalVariable(name: "self", scope: !13715, file: !13136, line: 292, type: !350, align: 8)
!13715 = !DILexicalBlockFile(scope: !13716, file: !13136, discriminator: 0)
!13716 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13717)
!13717 = !{!13714}
!13718 = !DILocation(line: 292, column: 25, scope: !13715, inlinedAt: !13719)
!13719 = !DILocation(line: 29, column: 65, scope: !13672)
!13720 = !DILocalVariable(name: "self", scope: !13721, file: !13136, line: 292, type: !1021, align: 8)
!13721 = !DILexicalBlockFile(scope: !13722, file: !13136, discriminator: 0)
!13722 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h7969f5547c28a4b7E", scope: !1027, file: !1016, line: 184, type: !13723, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13725)
!13723 = !DISubroutineType(types: !13724)
!13724 = !{!9, !1021}
!13725 = !{!13720}
!13726 = !DILocation(line: 292, column: 25, scope: !13721, inlinedAt: !13719)
!13727 = !DILocation(line: 292, column: 25, scope: !13674)
!13728 = !DILocation(line: 293, column: 29, scope: !13668)
!13729 = !DILocation(line: 294, column: 17, scope: !13676)
!13730 = !DILocalVariable(name: "self", scope: !13731, file: !13136, line: 292, type: !350, align: 8)
!13731 = !DILexicalBlockFile(scope: !13732, file: !13136, discriminator: 0)
!13732 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcd08c083856b6c0eE", scope: !350, file: !1413, line: 330, type: !1431, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13733)
!13733 = !{!13730}
!13734 = !DILocation(line: 292, column: 25, scope: !13731, inlinedAt: !13735)
!13735 = !DILocation(line: 23, column: 43, scope: !13672)
!13736 = !DILocalVariable(name: "self", scope: !13737, file: !13136, line: 292, type: !1021, align: 8)
!13737 = !DILexicalBlockFile(scope: !13738, file: !13136, discriminator: 0)
!13738 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h7969f5547c28a4b7E", scope: !1027, file: !1016, line: 184, type: !13723, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !332, retainedNodes: !13739)
!13739 = !{!13736}
!13740 = !DILocation(line: 292, column: 25, scope: !13737, inlinedAt: !13735)
!13741 = !DILocation(line: 294, column: 37, scope: !13678)
!13742 = !DILocation(line: 304, column: 13, scope: !13661)
!13743 = !DILocation(line: 294, column: 27, scope: !13678)
!13744 = !DILocation(line: 294, column: 32, scope: !13678)
!13745 = !DILocation(line: 295, column: 24, scope: !13678)
!13746 = !DILocation(line: 303, column: 17, scope: !13676)
!13747 = !DILocation(line: 304, column: 14, scope: !13661)
!13748 = !DILocation(line: 301, column: 21, scope: !13678)
!13749 = !DILocation(line: 298, column: 41, scope: !13678)
!13750 = !DILocation(line: 298, column: 45, scope: !13678)
!13751 = !DILocation(line: 298, column: 34, scope: !13678)
!13752 = !DILocation(line: 299, column: 37, scope: !13678)
!13753 = !DILocation(line: 299, column: 32, scope: !13678)
!13754 = !DILocation(line: 288, column: 13, scope: !13661)
!13755 = distinct !DISubprogram(name: "call", linkageName: "_ZN92_$LT$core..str..LinesAnyMap$u20$as$u20$core..ops..function..Fn$LT$$LP$$RF$str$C$$RP$$GT$$GT$4call17h183e31b4d5fedbacE", scope: !13757, file: !13756, line: 156, type: !13758, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13761)
!13756 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/internal_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "e63771959055ac6eeea73519b0063b2f")
!13757 = !DINamespace(name: "{impl#4}", scope: !1213)
!13758 = !DISubroutineType(types: !13759)
!13759 = !{!145, !13760, !145}
!13760 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::LinesAnyMap", baseType: !1249, size: 64, align: 64, dwarfAddressSpace: 0)
!13761 = !{!13762, !13763, !13765, !13767}
!13762 = !DILocalVariable(name: "self", arg: 1, scope: !13755, file: !13756, line: 156, type: !13760)
!13763 = !DILocalVariable(name: "line", scope: !13764, file: !13756, line: 156, type: !145, align: 8)
!13764 = distinct !DILexicalBlock(scope: !13755, file: !13756, line: 156, column: 96)
!13765 = !DILocalVariable(name: "l", scope: !13766, file: !4895, line: 2592, type: !9, align: 8)
!13766 = distinct !DILexicalBlock(scope: !13764, file: !4895, line: 2592, column: 9)
!13767 = !DILocalVariable(arg: 2, scope: !13755, file: !13756, line: 156, type: !4068)
!13768 = !DILocation(line: 156, column: 44, scope: !13755)
!13769 = !DILocation(line: 156, column: 51, scope: !13755)
!13770 = !DILocalVariable(name: "index", scope: !13771, file: !4895, line: 2593, type: !899, align: 8)
!13771 = !DILexicalBlockFile(scope: !13772, file: !4895, discriminator: 0)
!13772 = distinct !DISubprogram(name: "index<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hee8d3a92fd5129b4E", scope: !12552, file: !5108, line: 64, type: !13773, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !5058, retainedNodes: !13775)
!13773 = !DISubroutineType(types: !13774)
!13774 = !{!145, !145, !899, !1109}
!13775 = !{!13776, !13770}
!13776 = !DILocalVariable(name: "self", scope: !13771, file: !4895, line: 2593, type: !145, align: 8)
!13777 = !DILocation(line: 2593, column: 56, scope: !13771, inlinedAt: !13778)
!13778 = !DILocation(line: 2593, column: 56, scope: !13766)
!13779 = !DILocation(line: 156, column: 55, scope: !13755)
!13780 = !DILocation(line: 156, column: 55, scope: !13764)
!13781 = !DILocation(line: 2592, column: 17, scope: !13782)
!13782 = !DILexicalBlockFile(scope: !13764, file: !4895, discriminator: 0)
!13783 = !DILocalVariable(name: "self", scope: !13784, file: !4895, line: 2592, type: !145, align: 8)
!13784 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hed2dfa42a5f15112E", scope: !4896, file: !4895, line: 157, type: !4931, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13785)
!13785 = !{!13783}
!13786 = !DILocation(line: 2592, column: 17, scope: !13784, inlinedAt: !13781)
!13787 = !DILocalVariable(name: "self", scope: !13788, file: !4895, line: 2592, type: !145, align: 8)
!13788 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13789)
!13789 = !{!13787}
!13790 = !DILocation(line: 2592, column: 17, scope: !13788, inlinedAt: !13791)
!13791 = !DILocation(line: 158, column: 9, scope: !13784, inlinedAt: !13781)
!13792 = !DILocation(line: 2592, column: 13, scope: !13766)
!13793 = !DILocation(line: 2593, column: 12, scope: !13766)
!13794 = !DILocation(line: 2593, column: 21, scope: !13766)
!13795 = !DILocalVariable(name: "self", scope: !13796, file: !4895, line: 2593, type: !145, align: 8)
!13796 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !4896, file: !4895, line: 323, type: !4912, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13797)
!13797 = !{!13795}
!13798 = !DILocation(line: 2593, column: 21, scope: !13796, inlinedAt: !13794)
!13799 = !DILocation(line: 2593, column: 37, scope: !13766)
!13800 = !DILocation(line: 2594, column: 16, scope: !13766)
!13801 = !DILocation(line: 2593, column: 9, scope: !13766)
!13802 = !DILocation(line: 2593, column: 66, scope: !13766)
!13803 = !DILocation(line: 2593, column: 61, scope: !13766)
!13804 = !DILocation(line: 2593, column: 55, scope: !13766)
!13805 = !DILocation(line: 158, column: 18, scope: !13755)
!13806 = distinct !DISubprogram(name: "from_iter<&str, core::str::iter::Lines>", linkageName: "_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h7211c62a78da3d20E", scope: !13807, file: !1283, line: 2647, type: !1188, scopeLine: 2647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1265, retainedNodes: !13808)
!13807 = !DINamespace(name: "{impl#18}", scope: !339)
!13808 = !{!13809}
!13809 = !DILocalVariable(name: "iter", arg: 1, scope: !13806, file: !1283, line: 2647, type: !1211)
!13810 = !DILocation(line: 2647, column: 45, scope: !13806)
!13811 = !DILocation(line: 2648, column: 59, scope: !13806)
!13812 = !DILocation(line: 2648, column: 9, scope: !13806)
!13813 = !DILocation(line: 2649, column: 6, scope: !13806)
!13814 = distinct !DISubprogram(name: "call_mut", linkageName: "_ZN95_$LT$core..str..LinesAnyMap$u20$as$u20$core..ops..function..FnMut$LT$$LP$$RF$str$C$$RP$$GT$$GT$8call_mut17hb4db0a0e2b1f3091E", scope: !13815, file: !13756, line: 163, type: !4062, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13816)
!13815 = !DINamespace(name: "{impl#5}", scope: !1213)
!13816 = !{!13817, !13818, !13820}
!13817 = !DILocalVariable(name: "self", arg: 1, scope: !13814, file: !13756, line: 164, type: !4064)
!13818 = !DILocalVariable(name: "line", scope: !13819, file: !13756, line: 165, type: !145, align: 8)
!13819 = distinct !DILexicalBlock(scope: !13814, file: !13756, line: 166, column: 32)
!13820 = !DILocalVariable(arg: 2, scope: !13814, file: !13756, line: 165, type: !4068)
!13821 = !DILocation(line: 164, column: 21, scope: !13814)
!13822 = !DILocation(line: 165, column: 21, scope: !13814)
!13823 = !DILocation(line: 165, column: 25, scope: !13814)
!13824 = !DILocation(line: 165, column: 25, scope: !13819)
!13825 = !DILocation(line: 167, column: 38, scope: !13819)
!13826 = !DILocation(line: 167, column: 21, scope: !13819)
!13827 = !DILocation(line: 168, column: 18, scope: !13814)
!13828 = distinct !DISubprogram(name: "spec_extend<&str, core::str::iter::Lines, alloc::alloc::Global>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h05555628f815cf77E", scope: !13830, file: !13829, line: 17, type: !8079, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !13835, retainedNodes: !13832)
!13829 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_extend.rs", directory: "", checksumkind: CSK_MD5, checksum: "f621a160b67dfe2bb567901fc380da7e")
!13830 = !DINamespace(name: "{impl#0}", scope: !13831)
!13831 = !DINamespace(name: "spec_extend", scope: !339)
!13832 = !{!13833, !13834}
!13833 = !DILocalVariable(name: "self", arg: 1, scope: !13828, file: !13829, line: 17, type: !1354)
!13834 = !DILocalVariable(name: "iter", arg: 2, scope: !13828, file: !13829, line: 17, type: !1211)
!13835 = !{!1204, !1266, !361}
!13836 = !DILocation(line: 17, column: 28, scope: !13828)
!13837 = !DILocation(line: 17, column: 39, scope: !13828)
!13838 = !DILocation(line: 18, column: 31, scope: !13828)
!13839 = !DILocation(line: 18, column: 9, scope: !13828)
!13840 = !DILocation(line: 19, column: 6, scope: !13828)
!13841 = distinct !DISubprogram(name: "from_iter<&str, core::str::iter::Lines>", linkageName: "_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17heeef220a0dd2810fE", scope: !13843, file: !13842, line: 32, type: !1188, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !1265, retainedNodes: !13845)
!13842 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_from_iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "b039a84bf3a4bff93117713671450099")
!13843 = !DINamespace(name: "{impl#0}", scope: !13844)
!13844 = !DINamespace(name: "spec_from_iter", scope: !339)
!13845 = !{!13846}
!13846 = !DILocalVariable(name: "iterator", arg: 1, scope: !13841, file: !13842, line: 32, type: !1211)
!13847 = !DILocation(line: 32, column: 26, scope: !13841)
!13848 = !DILocation(line: 33, column: 39, scope: !13841)
!13849 = !DILocation(line: 33, column: 9, scope: !13841)
!13850 = !DILocation(line: 34, column: 6, scope: !13841)
!13851 = distinct !DISubprogram(name: "from<alloc::sync::ArcInner<std::thread::Packet<()>>>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17hc0de90d68a9c83deE", scope: !13852, file: !1413, line: 784, type: !7744, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !494, retainedNodes: !13853)
!13852 = !DINamespace(name: "{impl#17}", scope: !52)
!13853 = !{!13854}
!13854 = !DILocalVariable(name: "reference", arg: 1, scope: !13851, file: !1413, line: 784, type: !7746)
!13855 = !DILocation(line: 784, column: 13, scope: !13851)
!13856 = !DILocation(line: 786, column: 18, scope: !13851)
!13857 = !DILocation(line: 787, column: 6, scope: !13851)
!13858 = distinct !DISubprogram(name: "rust_thread_entry", scope: !591, file: !592, line: 20, type: !13859, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !13861)
!13859 = !DISubroutineType(types: !13860)
!13860 = !{null, !275, !618}
!13861 = !{!13862, !13863, !13864, !13866, !13868, !13870, !13872, !13874, !13876, !13878, !13880, !13882, !13884, !13886, !13888, !13890, !13892, !13894, !13896}
!13862 = !DILocalVariable(name: "buffer_size", arg: 1, scope: !13858, file: !592, line: 21, type: !275)
!13863 = !DILocalVariable(name: "buffer", arg: 2, scope: !13858, file: !592, line: 22, type: !618)
!13864 = !DILocalVariable(name: "i", scope: !13865, file: !592, line: 37, type: !70, align: 4)
!13865 = distinct !DILexicalBlock(scope: !13858, file: !592, line: 37, column: 5)
!13866 = !DILocalVariable(name: "fresh0", scope: !13867, file: !592, line: 38, type: !70, align: 4)
!13867 = distinct !DILexicalBlock(scope: !13865, file: !592, line: 38, column: 5)
!13868 = !DILocalVariable(name: "fresh1", scope: !13869, file: !592, line: 42, type: !70, align: 4)
!13869 = distinct !DILexicalBlock(scope: !13867, file: !592, line: 42, column: 5)
!13870 = !DILocalVariable(name: "fresh2", scope: !13871, file: !592, line: 45, type: !70, align: 4)
!13871 = distinct !DILexicalBlock(scope: !13869, file: !592, line: 45, column: 5)
!13872 = !DILocalVariable(name: "fresh3", scope: !13873, file: !592, line: 49, type: !70, align: 4)
!13873 = distinct !DILexicalBlock(scope: !13871, file: !592, line: 49, column: 5)
!13874 = !DILocalVariable(name: "fresh4", scope: !13875, file: !592, line: 52, type: !70, align: 4)
!13875 = distinct !DILexicalBlock(scope: !13873, file: !592, line: 52, column: 5)
!13876 = !DILocalVariable(name: "fresh5", scope: !13877, file: !592, line: 56, type: !70, align: 4)
!13877 = distinct !DILexicalBlock(scope: !13875, file: !592, line: 56, column: 5)
!13878 = !DILocalVariable(name: "fresh6", scope: !13879, file: !592, line: 59, type: !70, align: 4)
!13879 = distinct !DILexicalBlock(scope: !13877, file: !592, line: 59, column: 5)
!13880 = !DILocalVariable(name: "fresh7", scope: !13881, file: !592, line: 63, type: !70, align: 4)
!13881 = distinct !DILexicalBlock(scope: !13879, file: !592, line: 63, column: 5)
!13882 = !DILocalVariable(name: "fresh8", scope: !13883, file: !592, line: 66, type: !70, align: 4)
!13883 = distinct !DILexicalBlock(scope: !13881, file: !592, line: 66, column: 5)
!13884 = !DILocalVariable(name: "fresh9", scope: !13885, file: !592, line: 70, type: !70, align: 4)
!13885 = distinct !DILexicalBlock(scope: !13883, file: !592, line: 70, column: 5)
!13886 = !DILocalVariable(name: "fresh10", scope: !13887, file: !592, line: 73, type: !70, align: 4)
!13887 = distinct !DILexicalBlock(scope: !13885, file: !592, line: 73, column: 5)
!13888 = !DILocalVariable(name: "fresh11", scope: !13889, file: !592, line: 77, type: !70, align: 4)
!13889 = distinct !DILexicalBlock(scope: !13887, file: !592, line: 77, column: 5)
!13890 = !DILocalVariable(name: "fresh12", scope: !13891, file: !592, line: 80, type: !70, align: 4)
!13891 = distinct !DILexicalBlock(scope: !13889, file: !592, line: 80, column: 5)
!13892 = !DILocalVariable(name: "fresh13", scope: !13893, file: !592, line: 84, type: !70, align: 4)
!13893 = distinct !DILexicalBlock(scope: !13891, file: !592, line: 84, column: 5)
!13894 = !DILocalVariable(name: "fresh14", scope: !13895, file: !592, line: 87, type: !70, align: 4)
!13895 = distinct !DILexicalBlock(scope: !13893, file: !592, line: 87, column: 5)
!13896 = !DILocalVariable(name: "fresh15", scope: !13897, file: !592, line: 91, type: !70, align: 4)
!13897 = distinct !DILexicalBlock(scope: !13895, file: !592, line: 91, column: 5)
!13898 = !DILocation(line: 21, column: 5, scope: !13858)
!13899 = !DILocation(line: 22, column: 5, scope: !13858)
!13900 = !DILocation(line: 37, column: 9, scope: !13865)
!13901 = !DILocation(line: 24, column: 8, scope: !13858)
!13902 = !DILocation(line: 37, column: 34, scope: !13858)
!13903 = !DILocation(line: 38, column: 18, scope: !13865)
!13904 = !DILocation(line: 38, column: 9, scope: !13867)
!13905 = !DILocation(line: 39, column: 5, scope: !13867)
!13906 = !DILocation(line: 40, column: 39, scope: !13867)
!13907 = !DILocalVariable(name: "self", arg: 1, scope: !13908, file: !1016, line: 465, type: !618)
!13908 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha5dd220277866a76E", scope: !1027, file: !1016, line: 465, type: !13403, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !3514, retainedNodes: !13909)
!13909 = !{!13907, !13910}
!13910 = !DILocalVariable(name: "count", arg: 2, scope: !13908, file: !1016, line: 465, type: !951)
!13911 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !13912)
!13912 = distinct !DILocation(line: 40, column: 6, scope: !13867)
!13913 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !13912)
!13914 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !13912)
!13915 = !DILocation(line: 40, column: 6, scope: !13867)
!13916 = !DILocation(line: 94, column: 2, scope: !13858)
!13917 = !DILocation(line: 40, column: 5, scope: !13867)
!13918 = !DILocation(line: 41, column: 5, scope: !13867)
!13919 = !DILocation(line: 42, column: 18, scope: !13867)
!13920 = !DILocation(line: 42, column: 9, scope: !13869)
!13921 = !DILocation(line: 43, column: 9, scope: !13869)
!13922 = !DILocation(line: 43, column: 5, scope: !13869)
!13923 = !DILocation(line: 44, column: 39, scope: !13869)
!13924 = !DILocation(line: 44, column: 20, scope: !13869)
!13925 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !13926)
!13926 = distinct !DILocation(line: 44, column: 6, scope: !13869)
!13927 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !13926)
!13928 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !13926)
!13929 = !DILocation(line: 44, column: 6, scope: !13869)
!13930 = !DILocation(line: 44, column: 5, scope: !13869)
!13931 = !DILocation(line: 45, column: 18, scope: !13869)
!13932 = !DILocation(line: 45, column: 9, scope: !13871)
!13933 = !DILocation(line: 46, column: 9, scope: !13871)
!13934 = !DILocation(line: 46, column: 5, scope: !13871)
!13935 = !DILocation(line: 47, column: 39, scope: !13871)
!13936 = !DILocation(line: 47, column: 20, scope: !13871)
!13937 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !13938)
!13938 = distinct !DILocation(line: 47, column: 6, scope: !13871)
!13939 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !13938)
!13940 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !13938)
!13941 = !DILocation(line: 47, column: 6, scope: !13871)
!13942 = !DILocation(line: 47, column: 5, scope: !13871)
!13943 = !DILocation(line: 48, column: 5, scope: !13871)
!13944 = !DILocation(line: 49, column: 18, scope: !13871)
!13945 = !DILocation(line: 49, column: 9, scope: !13873)
!13946 = !DILocation(line: 50, column: 9, scope: !13873)
!13947 = !DILocation(line: 50, column: 5, scope: !13873)
!13948 = !DILocation(line: 51, column: 39, scope: !13873)
!13949 = !DILocation(line: 51, column: 20, scope: !13873)
!13950 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !13951)
!13951 = distinct !DILocation(line: 51, column: 6, scope: !13873)
!13952 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !13951)
!13953 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !13951)
!13954 = !DILocation(line: 51, column: 6, scope: !13873)
!13955 = !DILocation(line: 51, column: 5, scope: !13873)
!13956 = !DILocation(line: 52, column: 18, scope: !13873)
!13957 = !DILocation(line: 52, column: 9, scope: !13875)
!13958 = !DILocation(line: 53, column: 9, scope: !13875)
!13959 = !DILocation(line: 53, column: 5, scope: !13875)
!13960 = !DILocation(line: 54, column: 39, scope: !13875)
!13961 = !DILocation(line: 54, column: 20, scope: !13875)
!13962 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !13963)
!13963 = distinct !DILocation(line: 54, column: 6, scope: !13875)
!13964 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !13963)
!13965 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !13963)
!13966 = !DILocation(line: 54, column: 6, scope: !13875)
!13967 = !DILocation(line: 54, column: 5, scope: !13875)
!13968 = !DILocation(line: 55, column: 5, scope: !13875)
!13969 = !DILocation(line: 56, column: 18, scope: !13875)
!13970 = !DILocation(line: 56, column: 9, scope: !13877)
!13971 = !DILocation(line: 57, column: 9, scope: !13877)
!13972 = !DILocation(line: 57, column: 5, scope: !13877)
!13973 = !DILocation(line: 58, column: 39, scope: !13877)
!13974 = !DILocation(line: 58, column: 20, scope: !13877)
!13975 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !13976)
!13976 = distinct !DILocation(line: 58, column: 6, scope: !13877)
!13977 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !13976)
!13978 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !13976)
!13979 = !DILocation(line: 58, column: 6, scope: !13877)
!13980 = !DILocation(line: 58, column: 5, scope: !13877)
!13981 = !DILocation(line: 59, column: 18, scope: !13877)
!13982 = !DILocation(line: 59, column: 9, scope: !13879)
!13983 = !DILocation(line: 60, column: 9, scope: !13879)
!13984 = !DILocation(line: 60, column: 5, scope: !13879)
!13985 = !DILocation(line: 61, column: 39, scope: !13879)
!13986 = !DILocation(line: 61, column: 20, scope: !13879)
!13987 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !13988)
!13988 = distinct !DILocation(line: 61, column: 6, scope: !13879)
!13989 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !13988)
!13990 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !13988)
!13991 = !DILocation(line: 61, column: 6, scope: !13879)
!13992 = !DILocation(line: 61, column: 5, scope: !13879)
!13993 = !DILocation(line: 62, column: 5, scope: !13879)
!13994 = !DILocation(line: 63, column: 18, scope: !13879)
!13995 = !DILocation(line: 63, column: 9, scope: !13881)
!13996 = !DILocation(line: 64, column: 9, scope: !13881)
!13997 = !DILocation(line: 64, column: 5, scope: !13881)
!13998 = !DILocation(line: 65, column: 39, scope: !13881)
!13999 = !DILocation(line: 65, column: 20, scope: !13881)
!14000 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14001)
!14001 = distinct !DILocation(line: 65, column: 6, scope: !13881)
!14002 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14001)
!14003 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14001)
!14004 = !DILocation(line: 65, column: 6, scope: !13881)
!14005 = !DILocation(line: 65, column: 5, scope: !13881)
!14006 = !DILocation(line: 66, column: 18, scope: !13881)
!14007 = !DILocation(line: 66, column: 9, scope: !13883)
!14008 = !DILocation(line: 67, column: 9, scope: !13883)
!14009 = !DILocation(line: 67, column: 5, scope: !13883)
!14010 = !DILocation(line: 68, column: 39, scope: !13883)
!14011 = !DILocation(line: 68, column: 20, scope: !13883)
!14012 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14013)
!14013 = distinct !DILocation(line: 68, column: 6, scope: !13883)
!14014 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14013)
!14015 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14013)
!14016 = !DILocation(line: 68, column: 6, scope: !13883)
!14017 = !DILocation(line: 68, column: 5, scope: !13883)
!14018 = !DILocation(line: 69, column: 5, scope: !13883)
!14019 = !DILocation(line: 70, column: 18, scope: !13883)
!14020 = !DILocation(line: 70, column: 9, scope: !13885)
!14021 = !DILocation(line: 71, column: 9, scope: !13885)
!14022 = !DILocation(line: 71, column: 5, scope: !13885)
!14023 = !DILocation(line: 72, column: 39, scope: !13885)
!14024 = !DILocation(line: 72, column: 20, scope: !13885)
!14025 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14026)
!14026 = distinct !DILocation(line: 72, column: 6, scope: !13885)
!14027 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14026)
!14028 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14026)
!14029 = !DILocation(line: 72, column: 6, scope: !13885)
!14030 = !DILocation(line: 72, column: 5, scope: !13885)
!14031 = !DILocation(line: 73, column: 19, scope: !13885)
!14032 = !DILocation(line: 73, column: 9, scope: !13887)
!14033 = !DILocation(line: 74, column: 9, scope: !13887)
!14034 = !DILocation(line: 74, column: 5, scope: !13887)
!14035 = !DILocation(line: 75, column: 40, scope: !13887)
!14036 = !DILocation(line: 75, column: 20, scope: !13887)
!14037 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14038)
!14038 = distinct !DILocation(line: 75, column: 6, scope: !13887)
!14039 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14038)
!14040 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14038)
!14041 = !DILocation(line: 75, column: 6, scope: !13887)
!14042 = !DILocation(line: 75, column: 5, scope: !13887)
!14043 = !DILocation(line: 76, column: 5, scope: !13887)
!14044 = !DILocation(line: 77, column: 19, scope: !13887)
!14045 = !DILocation(line: 77, column: 9, scope: !13889)
!14046 = !DILocation(line: 78, column: 9, scope: !13889)
!14047 = !DILocation(line: 78, column: 5, scope: !13889)
!14048 = !DILocation(line: 79, column: 40, scope: !13889)
!14049 = !DILocation(line: 79, column: 20, scope: !13889)
!14050 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14051)
!14051 = distinct !DILocation(line: 79, column: 6, scope: !13889)
!14052 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14051)
!14053 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14051)
!14054 = !DILocation(line: 79, column: 6, scope: !13889)
!14055 = !DILocation(line: 79, column: 5, scope: !13889)
!14056 = !DILocation(line: 80, column: 19, scope: !13889)
!14057 = !DILocation(line: 80, column: 9, scope: !13891)
!14058 = !DILocation(line: 81, column: 9, scope: !13891)
!14059 = !DILocation(line: 81, column: 5, scope: !13891)
!14060 = !DILocation(line: 82, column: 40, scope: !13891)
!14061 = !DILocation(line: 82, column: 20, scope: !13891)
!14062 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14063)
!14063 = distinct !DILocation(line: 82, column: 6, scope: !13891)
!14064 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14063)
!14065 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14063)
!14066 = !DILocation(line: 82, column: 6, scope: !13891)
!14067 = !DILocation(line: 82, column: 5, scope: !13891)
!14068 = !DILocation(line: 83, column: 5, scope: !13891)
!14069 = !DILocation(line: 84, column: 19, scope: !13891)
!14070 = !DILocation(line: 84, column: 9, scope: !13893)
!14071 = !DILocation(line: 85, column: 9, scope: !13893)
!14072 = !DILocation(line: 85, column: 5, scope: !13893)
!14073 = !DILocation(line: 86, column: 40, scope: !13893)
!14074 = !DILocation(line: 86, column: 20, scope: !13893)
!14075 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14076)
!14076 = distinct !DILocation(line: 86, column: 6, scope: !13893)
!14077 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14076)
!14078 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14076)
!14079 = !DILocation(line: 86, column: 6, scope: !13893)
!14080 = !DILocation(line: 86, column: 5, scope: !13893)
!14081 = !DILocation(line: 87, column: 19, scope: !13893)
!14082 = !DILocation(line: 87, column: 9, scope: !13895)
!14083 = !DILocation(line: 88, column: 9, scope: !13895)
!14084 = !DILocation(line: 88, column: 5, scope: !13895)
!14085 = !DILocation(line: 89, column: 40, scope: !13895)
!14086 = !DILocation(line: 89, column: 20, scope: !13895)
!14087 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 89, column: 6, scope: !13895)
!14089 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14088)
!14090 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14088)
!14091 = !DILocation(line: 89, column: 6, scope: !13895)
!14092 = !DILocation(line: 89, column: 5, scope: !13895)
!14093 = !DILocation(line: 90, column: 5, scope: !13895)
!14094 = !DILocation(line: 91, column: 19, scope: !13895)
!14095 = !DILocation(line: 91, column: 9, scope: !13897)
!14096 = !DILocation(line: 92, column: 9, scope: !13897)
!14097 = !DILocation(line: 92, column: 5, scope: !13897)
!14098 = !DILocation(line: 93, column: 40, scope: !13897)
!14099 = !DILocation(line: 93, column: 20, scope: !13897)
!14100 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14101)
!14101 = distinct !DILocation(line: 93, column: 6, scope: !13897)
!14102 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14101)
!14103 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14101)
!14104 = !DILocation(line: 93, column: 6, scope: !13897)
!14105 = !DILocation(line: 93, column: 5, scope: !13897)
!14106 = distinct !DISubprogram(name: "rust_fn_scoped_static_init", scope: !602, file: !603, line: 116, type: !14107, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!14107 = !DISubroutineType(types: !14108)
!14108 = !{!160}
!14109 = !DILocation(line: 123, column: 24, scope: !14106)
!14110 = !DILocation(line: 123, column: 23, scope: !14106)
!14111 = !DILocation(line: 123, column: 64, scope: !14106)
!14112 = !DILocalVariable(name: "self", arg: 1, scope: !14113, file: !1327, line: 1231, type: !160)
!14113 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_sub17h2fcb60c8cae33e6aE", scope: !14114, file: !1327, line: 1231, type: !14115, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14117)
!14114 = !DINamespace(name: "{impl#9}", scope: !259)
!14115 = !DISubroutineType(types: !14116)
!14116 = !{!160, !160, !160}
!14117 = !{!14112, !14118}
!14118 = !DILocalVariable(name: "rhs", arg: 2, scope: !14113, file: !1327, line: 1231, type: !160)
!14119 = !DILocation(line: 1231, column: 35, scope: !14113, inlinedAt: !14120)
!14120 = distinct !DILocation(line: 123, column: 23, scope: !14106)
!14121 = !DILocation(line: 1231, column: 41, scope: !14113, inlinedAt: !14120)
!14122 = !DILocation(line: 1232, column: 13, scope: !14113, inlinedAt: !14120)
!14123 = !DILocation(line: 123, column: 5, scope: !14106)
!14124 = !DILocation(line: 125, column: 12, scope: !14106)
!14125 = !DILocation(line: 126, column: 2, scope: !14106)
!14126 = distinct !DISubprogram(name: "rust_use_sectioned_array", scope: !602, file: !603, line: 131, type: !179, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14127)
!14127 = !{!14128}
!14128 = !DILocalVariable(name: "f", scope: !14129, file: !603, line: 132, type: !160, align: 8)
!14129 = distinct !DILexicalBlock(scope: !14126, file: !603, line: 132, column: 5)
!14130 = !DILocation(line: 132, column: 25, scope: !14126)
!14131 = !DILocation(line: 132, column: 9, scope: !14129)
!14132 = !DILocation(line: 133, column: 2, scope: !14126)
!14133 = distinct !DISubprogram(name: "run_static_initializers", linkageName: "_ZN13statics_tests8sections23run_static_initializers17hddfc9d13475afc0eE", scope: !602, file: !603, line: 134, type: !179, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14134)
!14134 = !{!14135, !14137, !14139}
!14135 = !DILocalVariable(name: "init", scope: !14136, file: !603, line: 144, type: !605, align: 4)
!14136 = distinct !DILexicalBlock(scope: !14133, file: !603, line: 144, column: 9)
!14137 = !DILocalVariable(name: "init", scope: !14138, file: !603, line: 162, type: !658, align: 8)
!14138 = distinct !DILexicalBlock(scope: !14133, file: !603, line: 162, column: 9)
!14139 = !DILocalVariable(name: "init", scope: !14140, file: !603, line: 166, type: !664, align: 8)
!14140 = distinct !DILexicalBlock(scope: !14133, file: !603, line: 166, column: 9)
!14141 = !DILocation(line: 144, column: 13, scope: !14136)
!14142 = !DILocation(line: 162, column: 13, scope: !14138)
!14143 = !DILocation(line: 166, column: 13, scope: !14140)
!14144 = !DILocation(line: 135, column: 5, scope: !14133)
!14145 = !DILocalVariable(name: "self", arg: 1, scope: !14146, file: !1327, line: 1380, type: !275)
!14146 = distinct !DISubprogram(name: "wrapping_neg", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_neg17h3d2f6fb5249241b6E", scope: !14147, file: !1327, line: 1380, type: !14148, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14150)
!14147 = !DINamespace(name: "{impl#8}", scope: !259)
!14148 = !DISubroutineType(types: !14149)
!14149 = !{!275, !275}
!14150 = !{!14145}
!14151 = !DILocation(line: 1380, column: 35, scope: !14146, inlinedAt: !14152)
!14152 = distinct !DILocation(line: 136, column: 23, scope: !14133)
!14153 = !DILocation(line: 1381, column: 40, scope: !14146, inlinedAt: !14152)
!14154 = !DILocalVariable(name: "rhs", scope: !14155, file: !1327, line: 1381, type: !275, align: 4)
!14155 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_sub17h9cc37bd9c29f6d20E", scope: !14147, file: !1327, line: 1231, type: !14156, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14158)
!14156 = !DISubroutineType(types: !14157)
!14157 = !{!275, !275, !275}
!14158 = !{!14159, !14154}
!14159 = !DILocalVariable(name: "self", scope: !14155, file: !1327, line: 1381, type: !275, align: 4)
!14160 = !DILocation(line: 1381, column: 13, scope: !14155, inlinedAt: !14161)
!14161 = distinct !DILocation(line: 1381, column: 13, scope: !14146, inlinedAt: !14152)
!14162 = !DILocation(line: 136, column: 23, scope: !14133)
!14163 = !DILocation(line: 136, column: 5, scope: !14133)
!14164 = !DILocation(line: 137, column: 5, scope: !14133)
!14165 = !DILocalVariable(name: "self", arg: 1, scope: !14166, file: !1327, line: 1189, type: !275)
!14166 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_add17h0fbd9558745a3ef4E", scope: !14147, file: !1327, line: 1189, type: !14156, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14167)
!14167 = !{!14165, !14168}
!14168 = !DILocalVariable(name: "rhs", arg: 2, scope: !14166, file: !1327, line: 1189, type: !275)
!14169 = !DILocation(line: 1189, column: 35, scope: !14166, inlinedAt: !14170)
!14170 = distinct !DILocation(line: 138, column: 24, scope: !14133)
!14171 = !DILocation(line: 1189, column: 41, scope: !14166, inlinedAt: !14170)
!14172 = !DILocation(line: 138, column: 24, scope: !14133)
!14173 = !DILocation(line: 138, column: 5, scope: !14133)
!14174 = !DILocation(line: 1189, column: 35, scope: !14166, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 139, column: 24, scope: !14133)
!14176 = !DILocation(line: 1189, column: 41, scope: !14166, inlinedAt: !14175)
!14177 = !DILocation(line: 139, column: 24, scope: !14133)
!14178 = !DILocation(line: 139, column: 5, scope: !14133)
!14179 = !DILocation(line: 1189, column: 35, scope: !14166, inlinedAt: !14180)
!14180 = distinct !DILocation(line: 141, column: 24, scope: !14133)
!14181 = !DILocation(line: 1189, column: 41, scope: !14166, inlinedAt: !14180)
!14182 = !DILocation(line: 141, column: 24, scope: !14133)
!14183 = !DILocation(line: 141, column: 5, scope: !14133)
!14184 = !DILocation(line: 1380, column: 35, scope: !14146, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 146, column: 16, scope: !14133)
!14186 = !DILocation(line: 1381, column: 40, scope: !14146, inlinedAt: !14185)
!14187 = !DILocation(line: 1381, column: 13, scope: !14155, inlinedAt: !14188)
!14188 = distinct !DILocation(line: 1381, column: 13, scope: !14146, inlinedAt: !14185)
!14189 = !DILocation(line: 146, column: 16, scope: !14133)
!14190 = !DILocation(line: 144, column: 24, scope: !14133)
!14191 = !DILocation(line: 149, column: 9, scope: !14136)
!14192 = !DILocation(line: 143, column: 5, scope: !14133)
!14193 = !DILocation(line: 151, column: 32, scope: !14133)
!14194 = !DILocation(line: 152, column: 23, scope: !14133)
!14195 = !DILocalVariable(name: "self", arg: 1, scope: !14196, file: !1327, line: 1276, type: !160)
!14196 = distinct !DISubprogram(name: "wrapping_div", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_div17hed7d80ef2c089755E", scope: !14114, file: !1327, line: 1276, type: !14115, scopeLine: 1276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14197)
!14197 = !{!14195, !14198}
!14198 = !DILocalVariable(name: "rhs", arg: 2, scope: !14196, file: !1327, line: 1276, type: !160)
!14199 = !DILocation(line: 1276, column: 35, scope: !14196, inlinedAt: !14200)
!14200 = distinct !DILocation(line: 151, column: 31, scope: !14133)
!14201 = !DILocation(line: 1276, column: 41, scope: !14196, inlinedAt: !14200)
!14202 = !DILocation(line: 1277, column: 13, scope: !14196, inlinedAt: !14200)
!14203 = !DILocation(line: 151, column: 31, scope: !14133)
!14204 = !DILocation(line: 151, column: 5, scope: !14133)
!14205 = !DILocation(line: 154, column: 24, scope: !14133)
!14206 = !DILocation(line: 159, column: 9, scope: !14133)
!14207 = !DILocation(line: 154, column: 20, scope: !14133)
!14208 = !DILocation(line: 157, column: 9, scope: !14133)
!14209 = !DILocation(line: 154, column: 5, scope: !14133)
!14210 = !DILocation(line: 162, column: 24, scope: !14133)
!14211 = !DILocation(line: 163, column: 9, scope: !14138)
!14212 = !DILocation(line: 161, column: 5, scope: !14133)
!14213 = !DILocation(line: 166, column: 24, scope: !14133)
!14214 = !DILocation(line: 169, column: 9, scope: !14140)
!14215 = !DILocation(line: 165, column: 5, scope: !14133)
!14216 = !DILocation(line: 171, column: 26, scope: !14133)
!14217 = !DILocation(line: 171, column: 5, scope: !14133)
!14218 = !DILocation(line: 175, column: 27, scope: !14133)
!14219 = !DILocation(line: 175, column: 5, scope: !14133)
!14220 = !DILocation(line: 179, column: 27, scope: !14133)
!14221 = !DILocation(line: 179, column: 5, scope: !14133)
!14222 = !DILocation(line: 183, column: 5, scope: !14133)
!14223 = !DILocation(line: 185, column: 5, scope: !14133)
!14224 = !DILocation(line: 188, column: 2, scope: !14133)
!14225 = distinct !DISubprogram(name: "run_test", linkageName: "_ZN13statics_tests18test_thread_locals8run_test17h36a019e3b5b64f0dE", scope: !379, file: !720, line: 35, type: !179, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14226)
!14226 = !{!14227, !14229, !14231, !14234, !14235, !14238, !14241, !14242, !14245, !14248, !14249, !14252, !14255, !14256, !14259, !14262, !14263}
!14227 = !DILocalVariable(name: "buffer", scope: !14228, file: !720, line: 36, type: !586, align: 4)
!14228 = distinct !DILexicalBlock(scope: !14225, file: !720, line: 36, column: 5)
!14229 = !DILocalVariable(name: "rust_buffer", scope: !14230, file: !720, line: 37, type: !586, align: 4)
!14230 = distinct !DILexicalBlock(scope: !14228, file: !720, line: 37, column: 5)
!14231 = !DILocalVariable(name: "left_val", scope: !14232, file: !720, line: 43, type: !585, align: 8)
!14232 = !DILexicalBlockFile(scope: !14233, file: !720, discriminator: 0)
!14233 = distinct !DILexicalBlock(scope: !14230, file: !7630, line: 39, column: 13)
!14234 = !DILocalVariable(name: "right_val", scope: !14232, file: !720, line: 43, type: !585, align: 8)
!14235 = !DILocalVariable(name: "kind", scope: !14236, file: !720, line: 43, type: !877, align: 1)
!14236 = !DILexicalBlockFile(scope: !14237, file: !720, discriminator: 0)
!14237 = distinct !DILexicalBlock(scope: !14233, file: !7630, line: 41, column: 21)
!14238 = !DILocalVariable(name: "left_val", scope: !14239, file: !720, line: 45, type: !576, align: 8)
!14239 = !DILexicalBlockFile(scope: !14240, file: !720, discriminator: 0)
!14240 = distinct !DILexicalBlock(scope: !14230, file: !7630, line: 39, column: 13)
!14241 = !DILocalVariable(name: "right_val", scope: !14239, file: !720, line: 45, type: !576, align: 8)
!14242 = !DILocalVariable(name: "kind", scope: !14243, file: !720, line: 45, type: !877, align: 1)
!14243 = !DILexicalBlockFile(scope: !14244, file: !720, discriminator: 0)
!14244 = distinct !DILexicalBlock(scope: !14240, file: !7630, line: 41, column: 21)
!14245 = !DILocalVariable(name: "left_val", scope: !14246, file: !720, line: 46, type: !576, align: 8)
!14246 = !DILexicalBlockFile(scope: !14247, file: !720, discriminator: 0)
!14247 = distinct !DILexicalBlock(scope: !14230, file: !7630, line: 39, column: 13)
!14248 = !DILocalVariable(name: "right_val", scope: !14246, file: !720, line: 46, type: !576, align: 8)
!14249 = !DILocalVariable(name: "kind", scope: !14250, file: !720, line: 46, type: !877, align: 1)
!14250 = !DILexicalBlockFile(scope: !14251, file: !720, discriminator: 0)
!14251 = distinct !DILexicalBlock(scope: !14247, file: !7630, line: 41, column: 21)
!14252 = !DILocalVariable(name: "left_val", scope: !14253, file: !720, line: 47, type: !576, align: 8)
!14253 = !DILexicalBlockFile(scope: !14254, file: !720, discriminator: 0)
!14254 = distinct !DILexicalBlock(scope: !14230, file: !7630, line: 39, column: 13)
!14255 = !DILocalVariable(name: "right_val", scope: !14253, file: !720, line: 47, type: !576, align: 8)
!14256 = !DILocalVariable(name: "kind", scope: !14257, file: !720, line: 47, type: !877, align: 1)
!14257 = !DILexicalBlockFile(scope: !14258, file: !720, discriminator: 0)
!14258 = distinct !DILexicalBlock(scope: !14254, file: !7630, line: 41, column: 21)
!14259 = !DILocalVariable(name: "left_val", scope: !14260, file: !720, line: 48, type: !576, align: 8)
!14260 = !DILexicalBlockFile(scope: !14261, file: !720, discriminator: 0)
!14261 = distinct !DILexicalBlock(scope: !14230, file: !7630, line: 39, column: 13)
!14262 = !DILocalVariable(name: "right_val", scope: !14260, file: !720, line: 48, type: !576, align: 8)
!14263 = !DILocalVariable(name: "kind", scope: !14264, file: !720, line: 48, type: !877, align: 1)
!14264 = !DILexicalBlockFile(scope: !14265, file: !720, discriminator: 0)
!14265 = distinct !DILexicalBlock(scope: !14261, file: !7630, line: 41, column: 21)
!14266 = !DILocation(line: 36, column: 9, scope: !14228)
!14267 = !DILocation(line: 37, column: 9, scope: !14230)
!14268 = !DILocation(line: 43, column: 5, scope: !14236)
!14269 = !DILocation(line: 45, column: 9, scope: !14243)
!14270 = !DILocation(line: 46, column: 9, scope: !14250)
!14271 = !DILocation(line: 47, column: 9, scope: !14257)
!14272 = !DILocation(line: 48, column: 9, scope: !14264)
!14273 = !DILocation(line: 36, column: 22, scope: !14225)
!14274 = !DILocation(line: 37, column: 27, scope: !14228)
!14275 = !DILocation(line: 39, column: 42, scope: !14230)
!14276 = !DILocation(line: 39, column: 9, scope: !14230)
!14277 = !DILocation(line: 40, column: 47, scope: !14230)
!14278 = !DILocation(line: 40, column: 9, scope: !14230)
!14279 = !DILocation(line: 43, column: 5, scope: !14230)
!14280 = !DILocation(line: 43, column: 5, scope: !14232)
!14281 = !DILocation(line: 45, column: 9, scope: !14230)
!14282 = !DILocation(line: 45, column: 9, scope: !14239)
!14283 = !DILocation(line: 46, column: 9, scope: !14230)
!14284 = !DILocation(line: 46, column: 9, scope: !14246)
!14285 = !DILocation(line: 47, column: 9, scope: !14230)
!14286 = !DILocation(line: 47, column: 9, scope: !14253)
!14287 = !DILocation(line: 48, column: 9, scope: !14230)
!14288 = !DILocation(line: 48, column: 9, scope: !14260)
!14289 = !DILocation(line: 50, column: 2, scope: !14225)
!14290 = distinct !DISubprogram(name: "run_static_initializers", linkageName: "_ZN13statics_tests10attributes23run_static_initializers17h2ed908014654bcc4E", scope: !737, file: !738, line: 34, type: !179, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!14291 = !DILocation(line: 1189, column: 35, scope: !14166, inlinedAt: !14292)
!14292 = distinct !DILocation(line: 35, column: 25, scope: !14290)
!14293 = !DILocation(line: 1189, column: 41, scope: !14166, inlinedAt: !14292)
!14294 = !DILocation(line: 35, column: 25, scope: !14290)
!14295 = !DILocation(line: 35, column: 5, scope: !14290)
!14296 = !DILocation(line: 37, column: 2, scope: !14290)
!14297 = distinct !DISubprogram(name: "rust_baz", linkageName: "_ZN13statics_tests7storage8rust_baz17h35e482ae63bc54bdE", scope: !753, file: !754, line: 24, type: !14298, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !28)
!14298 = !DISubroutineType(types: !14299)
!14299 = !{!70}
!14300 = !DILocation(line: 26, column: 5, scope: !14297)
!14301 = !DILocation(line: 28, column: 12, scope: !14297)
!14302 = !DILocation(line: 29, column: 2, scope: !14297)
!14303 = distinct !DISubprogram(name: "rust_entry", scope: !753, file: !754, line: 33, type: !13859, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14304)
!14304 = !{!14305, !14306}
!14305 = !DILocalVariable(name: "buffer_size", arg: 1, scope: !14303, file: !754, line: 34, type: !275)
!14306 = !DILocalVariable(name: "buffer", arg: 2, scope: !14303, file: !754, line: 35, type: !618)
!14307 = !DILocation(line: 34, column: 5, scope: !14303)
!14308 = !DILocation(line: 35, column: 5, scope: !14303)
!14309 = !DILocation(line: 37, column: 8, scope: !14303)
!14310 = !DILocation(line: 61, column: 53, scope: !14303)
!14311 = !DILocation(line: 74, column: 2, scope: !14303)
!14312 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14313)
!14313 = distinct !DILocation(line: 61, column: 6, scope: !14303)
!14314 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14313)
!14315 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14313)
!14316 = !DILocation(line: 61, column: 6, scope: !14303)
!14317 = !DILocation(line: 61, column: 5, scope: !14303)
!14318 = !DILocation(line: 62, column: 53, scope: !14303)
!14319 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14320)
!14320 = distinct !DILocation(line: 62, column: 6, scope: !14303)
!14321 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14320)
!14322 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14320)
!14323 = !DILocation(line: 62, column: 6, scope: !14303)
!14324 = !DILocation(line: 62, column: 5, scope: !14303)
!14325 = !DILocation(line: 63, column: 53, scope: !14303)
!14326 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14327)
!14327 = distinct !DILocation(line: 63, column: 6, scope: !14303)
!14328 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14327)
!14329 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14327)
!14330 = !DILocation(line: 63, column: 6, scope: !14303)
!14331 = !DILocation(line: 63, column: 5, scope: !14303)
!14332 = !DILocation(line: 64, column: 20, scope: !14303)
!14333 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14334)
!14334 = distinct !DILocation(line: 64, column: 6, scope: !14303)
!14335 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14334)
!14336 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14334)
!14337 = !DILocation(line: 64, column: 6, scope: !14303)
!14338 = !DILocation(line: 64, column: 5, scope: !14303)
!14339 = !DILocation(line: 65, column: 53, scope: !14303)
!14340 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14341)
!14341 = distinct !DILocation(line: 65, column: 6, scope: !14303)
!14342 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14341)
!14343 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14341)
!14344 = !DILocation(line: 65, column: 6, scope: !14303)
!14345 = !DILocation(line: 65, column: 5, scope: !14303)
!14346 = !DILocation(line: 66, column: 5, scope: !14303)
!14347 = !DILocation(line: 68, column: 5, scope: !14303)
!14348 = !DILocation(line: 69, column: 53, scope: !14303)
!14349 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14350)
!14350 = distinct !DILocation(line: 69, column: 6, scope: !14303)
!14351 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14350)
!14352 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14350)
!14353 = !DILocation(line: 69, column: 6, scope: !14303)
!14354 = !DILocation(line: 69, column: 5, scope: !14303)
!14355 = !DILocation(line: 70, column: 54, scope: !14303)
!14356 = !DILocalVariable(name: "self", arg: 1, scope: !14357, file: !929, line: 453, type: !762)
!14357 = distinct !DISubprogram(name: "offset<i8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h61fae8932bf0517eE", scope: !939, file: !929, line: 453, type: !14358, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !14362, retainedNodes: !14360)
!14358 = !DISubroutineType(types: !14359)
!14359 = !{!762, !762, !951}
!14360 = !{!14356, !14361}
!14361 = !DILocalVariable(name: "count", arg: 2, scope: !14357, file: !929, line: 453, type: !951)
!14362 = !{!14363}
!14363 = !DITemplateTypeParameter(name: "T", type: !763)
!14364 = !DILocation(line: 453, column: 32, scope: !14357, inlinedAt: !14365)
!14365 = distinct !DILocation(line: 70, column: 54, scope: !14303)
!14366 = !DILocation(line: 453, column: 38, scope: !14357, inlinedAt: !14365)
!14367 = !DILocation(line: 458, column: 18, scope: !14357, inlinedAt: !14365)
!14368 = !DILocation(line: 70, column: 53, scope: !14303)
!14369 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14370)
!14370 = distinct !DILocation(line: 70, column: 6, scope: !14303)
!14371 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14370)
!14372 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14370)
!14373 = !DILocation(line: 70, column: 6, scope: !14303)
!14374 = !DILocation(line: 70, column: 5, scope: !14303)
!14375 = !DILocation(line: 72, column: 55, scope: !14303)
!14376 = !DILocation(line: 453, column: 32, scope: !14357, inlinedAt: !14377)
!14377 = distinct !DILocation(line: 72, column: 55, scope: !14303)
!14378 = !DILocation(line: 453, column: 38, scope: !14357, inlinedAt: !14377)
!14379 = !DILocation(line: 458, column: 18, scope: !14357, inlinedAt: !14377)
!14380 = !DILocation(line: 72, column: 54, scope: !14303)
!14381 = !DILocation(line: 465, column: 32, scope: !13908, inlinedAt: !14382)
!14382 = distinct !DILocation(line: 72, column: 6, scope: !14303)
!14383 = !DILocation(line: 465, column: 38, scope: !13908, inlinedAt: !14382)
!14384 = !DILocation(line: 472, column: 18, scope: !13908, inlinedAt: !14382)
!14385 = !DILocation(line: 72, column: 6, scope: !14303)
!14386 = !DILocation(line: 72, column: 5, scope: !14303)
!14387 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN13statics_tests13test_sections22test_sectioned_statics28_$u7b$$u7b$closure$u7d$$u7d$17hccd241a0ef02210fE", scope: !4104, file: !14388, line: 7, type: !14389, scopeLine: 7, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14392)
!14388 = !DIFile(filename: "src/test_sections.rs", directory: "/home/calvin/git/c2rust/tests/statics", checksumkind: CSK_MD5, checksum: "b0cd294405148121fbb6912aec361fff")
!14389 = !DISubroutineType(types: !14390)
!14390 = !{null, !14391}
!14391 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&statics_tests::test_sections::test_sectioned_statics::{closure_env#0}", baseType: !4103, size: 64, align: 64, dwarfAddressSpace: 0)
!14392 = !{!14393}
!14393 = !DILocalVariable(arg: 1, scope: !14387, file: !14388, line: 7, type: !14391)
!14394 = !DILocation(line: 7, column: 1, scope: !14387)
!14395 = !DILocation(line: 29, column: 2, scope: !14387)
!14396 = distinct !DISubprogram(name: "test_sectioned_statics", scope: !4105, file: !14388, line: 7, type: !179, scopeLine: 7, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14397)
!14397 = !{!14398, !14401, !14402, !14405, !14408, !14409, !14412, !14415, !14416, !14419, !14422, !14423, !14426, !14429, !14430, !14433, !14436, !14437, !14440, !14443, !14444, !14447, !14450, !14451, !14454, !14457, !14458, !14461, !14463, !14466, !14467, !14470, !14473, !14474}
!14398 = !DILocalVariable(name: "left_val", scope: !14399, file: !14388, line: 9, type: !576, align: 8)
!14399 = !DILexicalBlockFile(scope: !14400, file: !14388, discriminator: 0)
!14400 = distinct !DILexicalBlock(scope: !14396, file: !7630, line: 39, column: 13)
!14401 = !DILocalVariable(name: "right_val", scope: !14399, file: !14388, line: 9, type: !576, align: 8)
!14402 = !DILocalVariable(name: "kind", scope: !14403, file: !14388, line: 9, type: !877, align: 1)
!14403 = !DILexicalBlockFile(scope: !14404, file: !14388, discriminator: 0)
!14404 = distinct !DILexicalBlock(scope: !14400, file: !7630, line: 41, column: 21)
!14405 = !DILocalVariable(name: "left_val", scope: !14406, file: !14388, line: 10, type: !517, align: 8)
!14406 = !DILexicalBlockFile(scope: !14407, file: !14388, discriminator: 0)
!14407 = distinct !DILexicalBlock(scope: !14396, file: !7630, line: 39, column: 13)
!14408 = !DILocalVariable(name: "right_val", scope: !14406, file: !14388, line: 10, type: !517, align: 8)
!14409 = !DILocalVariable(name: "kind", scope: !14410, file: !14388, line: 10, type: !877, align: 1)
!14410 = !DILexicalBlockFile(scope: !14411, file: !14388, discriminator: 0)
!14411 = distinct !DILexicalBlock(scope: !14407, file: !7630, line: 41, column: 21)
!14412 = !DILocalVariable(name: "left_val", scope: !14413, file: !14388, line: 11, type: !576, align: 8)
!14413 = !DILexicalBlockFile(scope: !14414, file: !14388, discriminator: 0)
!14414 = distinct !DILexicalBlock(scope: !14396, file: !7630, line: 39, column: 13)
!14415 = !DILocalVariable(name: "right_val", scope: !14413, file: !14388, line: 11, type: !576, align: 8)
!14416 = !DILocalVariable(name: "kind", scope: !14417, file: !14388, line: 11, type: !877, align: 1)
!14417 = !DILexicalBlockFile(scope: !14418, file: !14388, discriminator: 0)
!14418 = distinct !DILexicalBlock(scope: !14414, file: !7630, line: 41, column: 21)
!14419 = !DILocalVariable(name: "left_val", scope: !14420, file: !14388, line: 12, type: !576, align: 8)
!14420 = !DILexicalBlockFile(scope: !14421, file: !14388, discriminator: 0)
!14421 = distinct !DILexicalBlock(scope: !14396, file: !7630, line: 39, column: 13)
!14422 = !DILocalVariable(name: "right_val", scope: !14420, file: !14388, line: 12, type: !576, align: 8)
!14423 = !DILocalVariable(name: "kind", scope: !14424, file: !14388, line: 12, type: !877, align: 1)
!14424 = !DILexicalBlockFile(scope: !14425, file: !14388, discriminator: 0)
!14425 = distinct !DILexicalBlock(scope: !14421, file: !7630, line: 41, column: 21)
!14426 = !DILocalVariable(name: "left_val", scope: !14427, file: !14388, line: 13, type: !576, align: 8)
!14427 = !DILexicalBlockFile(scope: !14428, file: !14388, discriminator: 0)
!14428 = distinct !DILexicalBlock(scope: !14396, file: !7630, line: 39, column: 13)
!14429 = !DILocalVariable(name: "right_val", scope: !14427, file: !14388, line: 13, type: !576, align: 8)
!14430 = !DILocalVariable(name: "kind", scope: !14431, file: !14388, line: 13, type: !877, align: 1)
!14431 = !DILexicalBlockFile(scope: !14432, file: !14388, discriminator: 0)
!14432 = distinct !DILexicalBlock(scope: !14428, file: !7630, line: 41, column: 21)
!14433 = !DILocalVariable(name: "left_val", scope: !14434, file: !14388, line: 14, type: !576, align: 8)
!14434 = !DILexicalBlockFile(scope: !14435, file: !14388, discriminator: 0)
!14435 = distinct !DILexicalBlock(scope: !14396, file: !7630, line: 39, column: 13)
!14436 = !DILocalVariable(name: "right_val", scope: !14434, file: !14388, line: 14, type: !576, align: 8)
!14437 = !DILocalVariable(name: "kind", scope: !14438, file: !14388, line: 14, type: !877, align: 1)
!14438 = !DILexicalBlockFile(scope: !14439, file: !14388, discriminator: 0)
!14439 = distinct !DILexicalBlock(scope: !14435, file: !7630, line: 41, column: 21)
!14440 = !DILocalVariable(name: "left_val", scope: !14441, file: !14388, line: 15, type: !517, align: 8)
!14441 = !DILexicalBlockFile(scope: !14442, file: !14388, discriminator: 0)
!14442 = distinct !DILexicalBlock(scope: !14396, file: !7630, line: 39, column: 13)
!14443 = !DILocalVariable(name: "right_val", scope: !14441, file: !14388, line: 15, type: !517, align: 8)
!14444 = !DILocalVariable(name: "kind", scope: !14445, file: !14388, line: 15, type: !877, align: 1)
!14445 = !DILexicalBlockFile(scope: !14446, file: !14388, discriminator: 0)
!14446 = distinct !DILexicalBlock(scope: !14442, file: !7630, line: 41, column: 21)
!14447 = !DILocalVariable(name: "left_val", scope: !14448, file: !14388, line: 16, type: !554, align: 8)
!14448 = !DILexicalBlockFile(scope: !14449, file: !14388, discriminator: 0)
!14449 = distinct !DILexicalBlock(scope: !14396, file: !7630, line: 39, column: 13)
!14450 = !DILocalVariable(name: "right_val", scope: !14448, file: !14388, line: 16, type: !554, align: 8)
!14451 = !DILocalVariable(name: "kind", scope: !14452, file: !14388, line: 16, type: !877, align: 1)
!14452 = !DILexicalBlockFile(scope: !14453, file: !14388, discriminator: 0)
!14453 = distinct !DILexicalBlock(scope: !14449, file: !7630, line: 41, column: 21)
!14454 = !DILocalVariable(name: "left_val", scope: !14455, file: !14388, line: 17, type: !576, align: 8)
!14455 = !DILexicalBlockFile(scope: !14456, file: !14388, discriminator: 0)
!14456 = distinct !DILexicalBlock(scope: !14396, file: !7630, line: 39, column: 13)
!14457 = !DILocalVariable(name: "right_val", scope: !14455, file: !14388, line: 17, type: !576, align: 8)
!14458 = !DILocalVariable(name: "kind", scope: !14459, file: !14388, line: 17, type: !877, align: 1)
!14459 = !DILexicalBlockFile(scope: !14460, file: !14388, discriminator: 0)
!14460 = distinct !DILexicalBlock(scope: !14456, file: !7630, line: 41, column: 21)
!14461 = !DILocalVariable(name: "ptr_deref", scope: !14462, file: !14388, line: 23, type: !275, align: 4)
!14462 = distinct !DILexicalBlock(scope: !14396, file: !14388, line: 23, column: 9)
!14463 = !DILocalVariable(name: "left_val", scope: !14464, file: !14388, line: 24, type: !576, align: 8)
!14464 = !DILexicalBlockFile(scope: !14465, file: !14388, discriminator: 0)
!14465 = distinct !DILexicalBlock(scope: !14462, file: !7630, line: 39, column: 13)
!14466 = !DILocalVariable(name: "right_val", scope: !14464, file: !14388, line: 24, type: !576, align: 8)
!14467 = !DILocalVariable(name: "kind", scope: !14468, file: !14388, line: 24, type: !877, align: 1)
!14468 = !DILexicalBlockFile(scope: !14469, file: !14388, discriminator: 0)
!14469 = distinct !DILexicalBlock(scope: !14465, file: !7630, line: 41, column: 21)
!14470 = !DILocalVariable(name: "left_val", scope: !14471, file: !14388, line: 25, type: !576, align: 8)
!14471 = !DILexicalBlockFile(scope: !14472, file: !14388, discriminator: 0)
!14472 = distinct !DILexicalBlock(scope: !14462, file: !7630, line: 39, column: 13)
!14473 = !DILocalVariable(name: "right_val", scope: !14471, file: !14388, line: 25, type: !576, align: 8)
!14474 = !DILocalVariable(name: "kind", scope: !14475, file: !14388, line: 25, type: !877, align: 1)
!14475 = !DILexicalBlockFile(scope: !14476, file: !14388, discriminator: 0)
!14476 = distinct !DILexicalBlock(scope: !14472, file: !7630, line: 41, column: 21)
!14477 = !DILocation(line: 9, column: 9, scope: !14403)
!14478 = !DILocation(line: 10, column: 9, scope: !14410)
!14479 = !DILocation(line: 11, column: 9, scope: !14417)
!14480 = !DILocation(line: 12, column: 9, scope: !14424)
!14481 = !DILocation(line: 13, column: 9, scope: !14431)
!14482 = !DILocation(line: 14, column: 9, scope: !14438)
!14483 = !DILocation(line: 15, column: 9, scope: !14445)
!14484 = !DILocation(line: 16, column: 9, scope: !14452)
!14485 = !DILocation(line: 17, column: 9, scope: !14459)
!14486 = !DILocation(line: 23, column: 13, scope: !14462)
!14487 = !DILocation(line: 24, column: 9, scope: !14468)
!14488 = !DILocation(line: 25, column: 9, scope: !14475)
!14489 = !DILocation(line: 9, column: 9, scope: !14396)
!14490 = !DILocation(line: 9, column: 9, scope: !14399)
!14491 = !DILocation(line: 10, column: 9, scope: !14396)
!14492 = !DILocation(line: 10, column: 9, scope: !14406)
!14493 = !DILocation(line: 11, column: 9, scope: !14396)
!14494 = !DILocation(line: 11, column: 9, scope: !14413)
!14495 = !DILocation(line: 12, column: 9, scope: !14396)
!14496 = !DILocation(line: 12, column: 9, scope: !14420)
!14497 = !DILocation(line: 13, column: 9, scope: !14396)
!14498 = !DILocation(line: 13, column: 9, scope: !14427)
!14499 = !DILocation(line: 14, column: 9, scope: !14396)
!14500 = !DILocation(line: 14, column: 9, scope: !14434)
!14501 = !DILocation(line: 15, column: 9, scope: !14396)
!14502 = !DILocation(line: 15, column: 9, scope: !14441)
!14503 = !DILocation(line: 16, column: 9, scope: !14396)
!14504 = !DILocation(line: 16, column: 9, scope: !14448)
!14505 = !DILocation(line: 17, column: 9, scope: !14396)
!14506 = !DILocation(line: 17, column: 9, scope: !14455)
!14507 = !DILocation(line: 18, column: 17, scope: !14396)
!14508 = !DILocation(line: 18, column: 39, scope: !14396)
!14509 = !DILocation(line: 18, column: 9, scope: !14396)
!14510 = !DILocation(line: 23, column: 36, scope: !14396)
!14511 = !DILocation(line: 23, column: 35, scope: !14396)
!14512 = !DILocation(line: 23, column: 34, scope: !14396)
!14513 = !DILocation(line: 24, column: 31, scope: !14462)
!14514 = !DILocation(line: 24, column: 9, scope: !14462)
!14515 = !DILocation(line: 24, column: 9, scope: !14464)
!14516 = !DILocation(line: 25, column: 37, scope: !14462)
!14517 = !DILocation(line: 25, column: 9, scope: !14462)
!14518 = !DILocation(line: 25, column: 9, scope: !14471)
!14519 = !DILocation(line: 27, column: 9, scope: !14462)
!14520 = !DILocation(line: 29, column: 2, scope: !14396)
!14521 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN13statics_tests13test_sections26test_sectioned_used_static28_$u7b$$u7b$closure$u7d$$u7d$17h497198cb98fff466E", scope: !4161, file: !14388, line: 32, type: !14522, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14525)
!14522 = !DISubroutineType(types: !14523)
!14523 = !{null, !14524}
!14524 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&statics_tests::test_sections::test_sectioned_used_static::{closure_env#0}", baseType: !4160, size: 64, align: 64, dwarfAddressSpace: 0)
!14525 = !{!14526}
!14526 = !DILocalVariable(arg: 1, scope: !14521, file: !14388, line: 32, type: !14524)
!14527 = !DILocation(line: 32, column: 1, scope: !14521)
!14528 = !DILocation(line: 55, column: 2, scope: !14521)
!14529 = distinct !DISubprogram(name: "test_sectioned_used_static", scope: !4105, file: !14388, line: 32, type: !179, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14530)
!14530 = !{!14531, !14533, !14535}
!14531 = !DILocalVariable(name: "src", scope: !14532, file: !14388, line: 37, type: !145, align: 8)
!14532 = distinct !DILexicalBlock(scope: !14529, file: !14388, line: 37, column: 9)
!14533 = !DILocalVariable(name: "lines", scope: !14534, file: !14388, line: 39, type: !1190, align: 8)
!14534 = distinct !DILexicalBlock(scope: !14532, file: !14388, line: 39, column: 9)
!14535 = !DILocalVariable(name: "pos", scope: !14536, file: !14388, line: 41, type: !9, align: 8)
!14536 = distinct !DILexicalBlock(scope: !14534, file: !14388, line: 41, column: 9)
!14537 = !DILocation(line: 39, column: 13, scope: !14534)
!14538 = !DILocation(line: 37, column: 19, scope: !14529)
!14539 = !DILocation(line: 37, column: 13, scope: !14532)
!14540 = !DILocation(line: 39, column: 32, scope: !14532)
!14541 = !DILocation(line: 41, column: 19, scope: !14534)
!14542 = !DILocation(line: 54, column: 5, scope: !14532)
!14543 = !DILocation(line: 41, column: 13, scope: !14536)
!14544 = !DILocation(line: 47, column: 20, scope: !14536)
!14545 = !DILocation(line: 47, column: 14, scope: !14536)
!14546 = !DILocation(line: 47, column: 13, scope: !14536)
!14547 = !DILocation(line: 47, column: 51, scope: !14536)
!14548 = !DILocation(line: 47, column: 45, scope: !14536)
!14549 = !DILocation(line: 48, column: 27, scope: !14536)
!14550 = !DILocation(line: 46, column: 9, scope: !14536)
!14551 = !DILocation(line: 48, column: 21, scope: !14536)
!14552 = !DILocation(line: 48, column: 20, scope: !14536)
!14553 = !DILocation(line: 48, column: 58, scope: !14536)
!14554 = !DILocation(line: 48, column: 52, scope: !14536)
!14555 = !DILocation(line: 52, column: 17, scope: !14536)
!14556 = !DILocation(line: 52, column: 9, scope: !14536)
!14557 = !DILocation(line: 53, column: 17, scope: !14536)
!14558 = !DILocation(line: 53, column: 9, scope: !14536)
!14559 = !DILocation(line: 32, column: 1, scope: !14529)
!14560 = !DILocation(line: 55, column: 2, scope: !14529)
!14561 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN13statics_tests13test_sections26test_sectioned_used_static28_$u7b$$u7b$closure$u7d$$u7d$17h549c4656ecb13e93E", scope: !4161, file: !14388, line: 43, type: !14562, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14565)
!14562 = !DISubroutineType(types: !14563)
!14563 = !{!1244, !14564, !3679}
!14564 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut statics_tests::test_sections::test_sectioned_used_static::{closure_env#0}", baseType: !13569, size: 64, align: 64, dwarfAddressSpace: 0)
!14565 = !{!14566, !14568, !14569}
!14566 = !DILocalVariable(name: "x", scope: !14567, file: !14388, line: 43, type: !145, align: 8)
!14567 = distinct !DILexicalBlock(scope: !14561, file: !14388, line: 43, column: 28)
!14568 = !DILocalVariable(arg: 1, scope: !14561, file: !14388, line: 43, type: !14564)
!14569 = !DILocalVariable(arg: 2, scope: !14561, file: !14388, line: 43, type: !3679)
!14570 = !DILocation(line: 43, column: 23, scope: !14561)
!14571 = !DILocation(line: 43, column: 24, scope: !14561)
!14572 = !DILocation(line: 43, column: 25, scope: !14567)
!14573 = !DILocation(line: 43, column: 25, scope: !14561)
!14574 = !DILocation(line: 43, column: 28, scope: !14567)
!14575 = !DILocation(line: 43, column: 27, scope: !14561)
!14576 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN13statics_tests12test_storage11test_buffer28_$u7b$$u7b$closure$u7d$$u7d$17h01ef486d412cb6dcE", scope: !4149, file: !14577, line: 12, type: !14578, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14581)
!14577 = !DIFile(filename: "src/test_storage.rs", directory: "/home/calvin/git/c2rust/tests/statics", checksumkind: CSK_MD5, checksum: "77ae2494f15613707f10d180bde91df4")
!14578 = !DISubroutineType(types: !14579)
!14579 = !{null, !14580}
!14580 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&statics_tests::test_storage::test_buffer::{closure_env#0}", baseType: !4148, size: 64, align: 64, dwarfAddressSpace: 0)
!14581 = !{!14582}
!14582 = !DILocalVariable(arg: 1, scope: !14576, file: !14577, line: 12, type: !14580)
!14583 = !DILocation(line: 12, column: 1, scope: !14576)
!14584 = !DILocation(line: 24, column: 2, scope: !14576)
!14585 = distinct !DISubprogram(name: "test_buffer", scope: !4150, file: !14577, line: 12, type: !179, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14586)
!14586 = !{!14587, !14589, !14591, !14593, !14596, !14597, !14600, !14603, !14604}
!14587 = !DILocalVariable(name: "buffer", scope: !14588, file: !14577, line: 13, type: !565, align: 4)
!14588 = distinct !DILexicalBlock(scope: !14585, file: !14577, line: 13, column: 5)
!14589 = !DILocalVariable(name: "rust_buffer", scope: !14590, file: !14577, line: 14, type: !565, align: 4)
!14590 = distinct !DILexicalBlock(scope: !14588, file: !14577, line: 14, column: 5)
!14591 = !DILocalVariable(name: "expected_buffer", scope: !14592, file: !14577, line: 15, type: !565, align: 4)
!14592 = distinct !DILexicalBlock(scope: !14590, file: !14577, line: 15, column: 5)
!14593 = !DILocalVariable(name: "left_val", scope: !14594, file: !14577, line: 22, type: !564, align: 8)
!14594 = !DILexicalBlockFile(scope: !14595, file: !14577, discriminator: 0)
!14595 = distinct !DILexicalBlock(scope: !14592, file: !7630, line: 39, column: 13)
!14596 = !DILocalVariable(name: "right_val", scope: !14594, file: !14577, line: 22, type: !564, align: 8)
!14597 = !DILocalVariable(name: "kind", scope: !14598, file: !14577, line: 22, type: !877, align: 1)
!14598 = !DILexicalBlockFile(scope: !14599, file: !14577, discriminator: 0)
!14599 = distinct !DILexicalBlock(scope: !14595, file: !7630, line: 41, column: 21)
!14600 = !DILocalVariable(name: "left_val", scope: !14601, file: !14577, line: 23, type: !564, align: 8)
!14601 = !DILexicalBlockFile(scope: !14602, file: !14577, discriminator: 0)
!14602 = distinct !DILexicalBlock(scope: !14592, file: !7630, line: 39, column: 13)
!14603 = !DILocalVariable(name: "right_val", scope: !14601, file: !14577, line: 23, type: !564, align: 8)
!14604 = !DILocalVariable(name: "kind", scope: !14605, file: !14577, line: 23, type: !877, align: 1)
!14605 = !DILexicalBlockFile(scope: !14606, file: !14577, discriminator: 0)
!14606 = distinct !DILexicalBlock(scope: !14602, file: !7630, line: 41, column: 21)
!14607 = !DILocation(line: 13, column: 9, scope: !14588)
!14608 = !DILocation(line: 14, column: 9, scope: !14590)
!14609 = !DILocation(line: 15, column: 9, scope: !14592)
!14610 = !DILocation(line: 22, column: 5, scope: !14598)
!14611 = !DILocation(line: 23, column: 5, scope: !14605)
!14612 = !DILocation(line: 13, column: 22, scope: !14585)
!14613 = !DILocation(line: 14, column: 27, scope: !14588)
!14614 = !DILocation(line: 15, column: 27, scope: !14590)
!14615 = !DILocation(line: 18, column: 35, scope: !14592)
!14616 = !DILocation(line: 18, column: 9, scope: !14592)
!14617 = !DILocation(line: 19, column: 40, scope: !14592)
!14618 = !DILocation(line: 19, column: 9, scope: !14592)
!14619 = !DILocation(line: 22, column: 5, scope: !14592)
!14620 = !DILocation(line: 22, column: 5, scope: !14594)
!14621 = !DILocation(line: 23, column: 5, scope: !14592)
!14622 = !DILocation(line: 23, column: 5, scope: !14601)
!14623 = !DILocation(line: 24, column: 2, scope: !14585)
!14624 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN13statics_tests18test_thread_locals18test_thread_locals28_$u7b$$u7b$closure$u7d$$u7d$17h2c03ead6c654b3d9E", scope: !378, file: !720, line: 53, type: !14625, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14628)
!14625 = !DISubroutineType(types: !14626)
!14626 = !{null, !14627}
!14627 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&statics_tests::test_thread_locals::test_thread_locals::{closure_env#0}", baseType: !4124, size: 64, align: 64, dwarfAddressSpace: 0)
!14628 = !{!14629}
!14629 = !DILocalVariable(arg: 1, scope: !14624, file: !720, line: 53, type: !14627)
!14630 = !DILocation(line: 53, column: 1, scope: !14624)
!14631 = !DILocation(line: 64, column: 2, scope: !14624)
!14632 = distinct !DISubprogram(name: "test_thread_locals", scope: !379, file: !720, line: 53, type: !179, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14633)
!14633 = !{!14634}
!14634 = !DILocalVariable(name: "t", scope: !14635, file: !720, line: 56, type: !2572, align: 8)
!14635 = distinct !DILexicalBlock(scope: !14632, file: !720, line: 56, column: 5)
!14636 = !DILocation(line: 56, column: 9, scope: !14635)
!14637 = !DILocation(line: 54, column: 5, scope: !14632)
!14638 = !DILocation(line: 55, column: 5, scope: !14632)
!14639 = !DILocation(line: 56, column: 13, scope: !14632)
!14640 = !DILocation(line: 61, column: 13, scope: !14635)
!14641 = !DILocation(line: 62, column: 5, scope: !14635)
!14642 = !DILocation(line: 63, column: 5, scope: !14635)
!14643 = !DILocation(line: 64, column: 2, scope: !14632)
!14644 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN13statics_tests18test_thread_locals18test_thread_locals28_$u7b$$u7b$closure$u7d$$u7d$17h1540399d328ece2dE", scope: !378, file: !720, line: 56, type: !1483, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !784, templateParams: !28, retainedNodes: !14645)
!14645 = !{!14646}
!14646 = !DILocalVariable(arg: 1, scope: !14644, file: !720, line: 56, type: !377)
!14647 = !DILocation(line: 56, column: 27, scope: !14644)
!14648 = !DILocation(line: 57, column: 9, scope: !14644)
!14649 = !DILocation(line: 58, column: 9, scope: !14644)
!14650 = !DILocation(line: 59, column: 9, scope: !14644)
!14651 = !DILocation(line: 56, column: 29, scope: !14644)
!14652 = distinct !DISubprogram(name: "main", linkageName: "_ZN13statics_tests4main17h9893fa3e70e9a167E", scope: !380, file: !1610, line: 1, type: !179, scopeLine: 1, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagMainSubprogram, unit: !784, templateParams: !28, retainedNodes: !28)
!14653 = !DILocation(line: 1, column: 1, scope: !14652)
