; ModuleID = 'build_script_build.cfd22473-cgu.0'
source_filename = "build_script_build.cfd22473-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { { i8*, i64 }, i64 }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::ops::range::RangeFull" = type {}
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]" = type {}
%"core::str::iter::CharIndices" = type { i64, { i8*, i8* } }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>" = type { %"[closure@core::str::<impl str>::trim::{closure#0}]", { [0 x i8]*, i64 }, %"core::str::iter::CharIndices" }
%"[closure@core::str::<impl str>::trim::{closure#0}]" = type {}
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>" = type { [2 x i64] }
%"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[core::mem::maybe_uninit::MaybeUninit<u8>]>>::get_unchecked_mut::{closure#0}]" = type { i64*, i64*, { [0 x i8]*, i64 }* }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>" = type { %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>" }
%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"alloc::alloc::Global", %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", i64 }
%"alloc::alloc::Global" = type {}
%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" }
%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { i64, [3 x i64] }
%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", %"core::marker::PhantomData<alloc::boxed::Box<(std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>)>>", { i64, i64* }, i64 }
%"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>" = type { %"alloc::alloc::Global" }
%"core::marker::PhantomData<alloc::boxed::Box<(std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>)>>" = type {}
%"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>" = type { [0 x i8] }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", { i64, i64* }, i64 }
%"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>" = type {}
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>" = type { [1 x i64], {}*, [1 x i64] }
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>" = type { i8, [15 x i8] }
%"std::io::error::SimpleMessage" = type { { [0 x i8]*, i64 }, i8, [7 x i8] }
%"std::io::error::Custom" = type { { {}*, [3 x i64]* }, i8, [7 x i8] }
%"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]" = type {}
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os" = type { [1 x i32], i32 }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage" = type { [1 x i64], %"std::io::error::SimpleMessage"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom" = type { [1 x i64], %"std::io::error::Custom"* }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple" = type { [1 x i8], i8 }
%"core::fmt::UnsafeArg" = type { {} }
%"core::result::Result<alloc::string::String, std::env::VarError>" = type { i64, [3 x i64] }
%"std::ffi::os_str::OsStr" = type { %"std::sys::unix::os_str::Slice" }
%"std::sys::unix::os_str::Slice" = type { [0 x i8] }
%"core::option::Option<std::ffi::os_str::OsString>" = type { {}*, [2 x i64] }
%"std::sys::unix::os_str::Buf" = type { %"alloc::vec::Vec<u8>" }
%"std::process::Command" = type { %"std::sys::unix::process::process_common::Command" }
%"std::sys::unix::process::process_common::Command" = type { { i8*, i64 }, %"alloc::vec::Vec<alloc::ffi::c_str::CString>", %"std::sys::unix::process::process_common::Argv", %"std::sys_common::process::CommandEnv", { i8*, i64 }, %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>", { i32*, i64 }, { i32, i32 }, { i32, i32 }, { i32, i32 }, { i32, i32 }, { i32, i32 }, { i32, i32 }, i8, i8, [6 x i8] }
%"alloc::vec::Vec<alloc::ffi::c_str::CString>" = type { { i64*, i64 }, i64 }
%"std::sys::unix::process::process_common::Argv" = type { %"alloc::vec::Vec<*const i8>" }
%"alloc::vec::Vec<*const i8>" = type { { i64*, i64 }, i64 }
%"std::sys_common::process::CommandEnv" = type { %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", i8, i8, [6 x i8] }
%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>" = type { { i64*, i64 }, i64 }
%"std::ffi::os_str::OsString" = type { %"std::sys::unix::os_str::Buf" }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>" = type { %"[closure@core::str::<impl str>::trim::{closure#0}]" }
%"core::fmt::Opaque" = type {}
%"alloc::borrow::Cow<str>" = type { i64, [3 x i64] }
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>" = type { [3 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>" = type { [3 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>" = type { [4 x i64] }
%"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>" = type { %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" }
%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]" = type {}
%"std::env::VarError" = type { {}*, [2 x i64] }
%"std::env::VarError::NotUnicode" = type { %"std::ffi::os_str::OsString" }
%"std::process::Output" = type { %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>", i32, [1 x i32] }
%"alloc::string::FromUtf8Error" = type { %"alloc::vec::Vec<u8>", %"core::str::error::Utf8Error" }
%"core::str::error::Utf8Error" = type { i64, { i8, i8 }, [6 x i8] }
%"alloc::borrow::Cow<str>::Owned" = type { [1 x i64], %"alloc::string::String" }
%"alloc::collections::btree::mem::replace::PanicGuard" = type {}
%"core::option::Option<std::ffi::os_str::OsString>::Some" = type { %"std::ffi::os_str::OsString" }
%"core::result::Result<alloc::string::String, std::env::VarError>::Ok" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<alloc::string::String, std::env::VarError>::Err" = type { [1 x i64], %"std::env::VarError" }
%"core::option::Option<core::convert::Infallible>::None" = type {}
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<i32, core::num::error::ParseIntError>" = type { i8, [7 x i8] }
%"core::result::Result<u32, core::num::error::ParseIntError>" = type { i8, [7 x i8] }
%"core::result::Result<u64, core::num::error::ParseIntError>" = type { i8, [15 x i8] }
%"core::str::iter::Split<char>" = type { %"core::str::iter::SplitInternal<char>" }
%"core::str::iter::SplitInternal<char>" = type { i64, i64, %"core::str::pattern::CharSearcher", i8, i8, [6 x i8] }
%"core::str::pattern::CharSearcher" = type { { [0 x i8]*, i64 }, i64, i64, i64, i32, [4 x i8] }
%"core::str::iter::Split<[char; 2]>" = type { %"core::str::iter::SplitInternal<[char; 2]>" }
%"core::str::iter::SplitInternal<[char; 2]>" = type { i64, i64, %"core::str::pattern::CharArraySearcher<2>", i8, i8, [6 x i8] }
%"core::str::pattern::CharArraySearcher<2>" = type { %"core::str::pattern::MultiCharEqSearcher<[char; 2]>" }
%"core::str::pattern::MultiCharEqSearcher<[char; 2]>" = type { { [0 x i8]*, i64 }, %"core::str::iter::CharIndices", [2 x i32] }
%"core::result::Result<&str, usize>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break" = type { [1 x i64], i64 }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"[closure@core::intrinsics::copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>::{closure#0}]" = type { i8**, i8**, i64* }
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>" = type { [1 x i64], {}*, [1 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", { i64, i64* }, i64 }
%"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>" = type {}
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" }
%"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]" = type {}
%"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]" = type {}
%"core::result::Result<&str, usize>::Err" = type { [1 x i64], i64 }
%"core::result::Result<&str, usize>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:239:45: 239:50]" = type {}
%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:286:40: 286:43]" = type {}
%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:285:40: 285:43]" = type {}
%"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:284:40: 284:43]" = type {}
%"core::result::Result<u64, core::num::error::ParseIntError>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<u64, core::num::error::ParseIntError>::Err" = type { [1 x i8], i8 }
%"core::option::Option<alloc::string::String>" = type { {}*, [2 x i64] }
%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>" = type { i64, [5 x i64] }
%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok" = type { [1 x i64], %"alloc::string::String" }
%"core::option::Option<alloc::string::String>::Some" = type { %"alloc::string::String" }
%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err" = type { [1 x i64], %"alloc::string::FromUtf8Error" }
%"core::result::Result<&str, core::str::error::Utf8Error>" = type { i64, [2 x i64] }
%"core::result::Result<&str, core::str::error::Utf8Error>::Ok" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::result::Result<&str, core::str::error::Utf8Error>::Err" = type { [1 x i64], %"core::str::error::Utf8Error" }
%"core::result::Result<u32, core::num::error::ParseIntError>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<u32, core::num::error::ParseIntError>::Err" = type { [1 x i8], i8 }
%"core::option::Option<std::process::Output>" = type { {}*, [6 x i64] }
%"core::result::Result<std::process::Output, std::io::error::Error>" = type { i64, [7 x i64] }
%"core::result::Result<std::process::Output, std::io::error::Error>::Ok" = type { [1 x i64], %"std::process::Output" }
%"core::option::Option<std::process::Output>::Some" = type { %"std::process::Output" }
%"core::result::Result<std::process::Output, std::io::error::Error>::Err" = type { [1 x i64], i8* }
%"core::result::Result<i32, core::num::error::ParseIntError>::Ok" = type { [1 x i32], i32 }
%"core::result::Result<i32, core::num::error::ParseIntError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]" = type {}
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { {} }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", { i64, i64* }, i64 }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [3 x i64] }
%"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]" = type { %"alloc::alloc::Global" }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>" = type { i64, [3 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" }
%"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { i64*, [11 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"], [11 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"], i16, i16, [2 x i16] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", { i64, i64* }, i64 }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>", { i64, i64* }, i64 }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>" = type { %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>", { i64, i64* }, i64 }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>" = type { i64, [3 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>" }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>" = type { i64, [3 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>" = type { i64, [2 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf" = type { [1 x i64], { i64, i64* } }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal" = type { [1 x i64], { i64, i64* } }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", [12 x i8*] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err" = type { [1 x i64], { i64, i64* } }
%"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { i64, [3 x i64] }
%"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root" = type { [1 x i64], { i64, i64* } }
%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some" = type { %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" }
%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>" = type { [1 x i64], {}*, [4 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>" = type { [3 x i64] }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }
%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some" = type { { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" } }
%"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { [1 x i64], {}*, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { i64, [3 x i64] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue" = type { %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" }
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some" = type { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"alloc::borrow::Cow<str>::Borrowed" = type { [1 x i64], { [0 x i8]*, i64 } }
%"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[*const i8]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>" = type { [2 x i64] }
%"core::str::pattern::MultiCharEqPattern<[char; 2]>" = type { [2 x i32] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>" = type { {}*, [6 x i64] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>::Continue" = type { %"std::process::Output" }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>" = type { {}*, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>::Continue" = type { %"alloc::string::String" }
%"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { [3 x i64] }
%"core::option::Option<core::fmt::Arguments>::Some" = type { %"core::fmt::Arguments" }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@alloc513 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc514 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/io/error/repr_bitpacked.rs" }>, align 1
@alloc515 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc514, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\00\18\01\00\00\0D\00\00\00" }>, align 8
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5cc1347c42b5cc74E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i32 (i64**)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h3c2f1caed72981f4E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha250cad3a78ce847E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha250cad3a78ce847E" to i8*) }>, align 8, !dbg !0
@alloc243 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc244 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc243, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc252 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc521 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs" }>, align 1
@alloc522 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc521, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\88\01\00\00\0D\00\00\00" }>, align 8
@alloc525 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/methods.rs" }>, align 1
@alloc524 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc525, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\A7\06\00\00\0A\00\00\00" }>, align 8
@alloc324 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc326 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc327 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc325 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc324, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc326, i32 0, i32 0, i32 0), [8 x i8] c"\13\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc327, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc526 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [80 x i8] }>, <{ [80 x i8] }>* @alloc525, i32 0, i32 0, i32 0), [16 x i8] c"P\00\00\00\00\00\00\00\A0\06\00\00\0E\00\00\00" }>, align 8
@alloc527 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs" }>, align 1
@alloc528 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [77 x i8] }>, <{ [77 x i8] }>* @alloc527, i32 0, i32 0, i32 0), [16 x i8] c"M\00\00\00\00\00\00\00\9E\08\00\00'\00\00\00" }>, align 8
@alloc529 = private unnamed_addr constant <{ [35 x i8] }> <{ [35 x i8] c"assertion failed: mid <= self.len()" }>, align 1
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hb5924639660c528dE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h9412cc25832b82a2E" to i8*) }>, align 8, !dbg !24
@alloc533 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i8*)* @"_ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17h6a56c174e9ffbc8eE" to i8*), [16 x i8] c"\01\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (i8*, %"core::fmt::Formatter"*)* @"_ZN68_$LT$core..num..error..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h69f92421caac858dE" to i8*) }>, align 8, !dbg !147
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ({ i8*, i64 }**)* @"_ZN4core3ptr60drop_in_place$LT$$RF$core..option..Option$LT$$RF$str$GT$$GT$17he50dc97f5c182187E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i8*, i64 }**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17heb65f44bf8fb9e20E" to i8*) }>, align 8, !dbg !167
@alloc543 = private unnamed_addr constant <{ [47 x i8] }> <{ [47 x i8] c"assertion failed: BorrowType::PERMITS_TRAVERSAL" }>, align 1
@alloc544 = private unnamed_addr constant <{ [91 x i8] }> <{ [91 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/btree/node.rs" }>, align 1
@alloc542 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc544, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\EE\03\00\00\09\00\00\00" }>, align 8
@alloc545 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc544, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00A\01\00\00\09\00\00\00" }>, align 8
@alloc549 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Option::unwrap()` on a `None` value" }>, align 1
@alloc550 = private unnamed_addr constant <{ [95 x i8] }> <{ [95 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/btree/navigate.rs" }>, align 1
@alloc548 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [95 x i8] }>, <{ [95 x i8] }>* @alloc550, i32 0, i32 0, i32 0), [16 x i8] c"_\00\00\00\00\00\00\00L\02\00\00\0D\00\00\00" }>, align 8
@alloc551 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [95 x i8] }>, <{ [95 x i8] }>* @alloc550, i32 0, i32 0, i32 0), [16 x i8] c"_\00\00\00\00\00\00\00\BA\00\00\00\15\00\00\00" }>, align 8
@alloc552 = private unnamed_addr constant <{ [53 x i8] }> <{ [53 x i8] c"attempt to join into collection with len > usize::MAX" }>, align 1
@alloc555 = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/str.rs" }>, align 1
@alloc554 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [72 x i8] }>, <{ [72 x i8] }>* @alloc555, i32 0, i32 0, i32 0), [16 x i8] c"H\00\00\00\00\00\00\00\C2\00\00\00\16\00\00\00" }>, align 8
@alloc556 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [72 x i8] }>, <{ [72 x i8] }>* @alloc555, i32 0, i32 0, i32 0), [16 x i8] c"H\00\00\00\00\00\00\00\A6\00\00\00\18\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc557 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Some" }>, align 1
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ({ [0 x i8]*, i64 }**)* @"_ZN4core3ptr32drop_in_place$LT$$RF$$RF$str$GT$17hf0fb5c2cb3a8d8dbE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf06ba88675a9062bE" to i8*) }>, align 8, !dbg !191
@alloc561 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"None" }>, align 1
@alloc562 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/string.rs" }>, align 1
@alloc563 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc562, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\9E\08\00\00\01\00\00\00" }>, align 8
@alloc564 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/pattern.rs" }>, align 1
@alloc565 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc564, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\B7\01\00\00&\00\00\00" }>, align 8
@alloc566 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs" }>, align 1
@alloc567 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [78 x i8] }>, <{ [78 x i8] }>* @alloc566, i32 0, i32 0, i32 0), [16 x i8] c"N\00\00\00\00\00\00\00\87\00\00\00\01\00\00\00" }>, align 8
@str.5 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc52 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"cargo:rerun-if-changed=build.rs\0A" }>, align 1
@alloc53 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [32 x i8] }>, <{ [32 x i8] }>* @alloc52, i32 0, i32 0, i32 0), [8 x i8] c" \00\00\00\00\00\00\00" }>, align 8
@alloc568 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"CARGO_FEATURE_RUSTC_DEP_OF_STD" }>, align 1
@alloc569 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"LIBC_CI" }>, align 1
@alloc570 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"CARGO_CFG_TARGET_ENV" }>, align 1
@alloc571 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"CARGO_CFG_TARGET_OS" }>, align 1
@alloc572 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"CARGO_CFG_TARGET_POINTER_WIDTH" }>, align 1
@alloc573 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"CARGO_CFG_TARGET_ARCH" }>, align 1
@alloc63 = private unnamed_addr constant <{ [62 x i8] }> <{ [62 x i8] c"cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_FREEBSD_VERSION\0A" }>, align 1
@alloc64 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [62 x i8] }>, <{ [62 x i8] }>* @alloc63, i32 0, i32 0, i32 0), [8 x i8] c">\00\00\00\00\00\00\00" }>, align 8
@alloc574 = private unnamed_addr constant <{ [34 x i8] }> <{ [34 x i8] c"RUST_LIBC_UNSTABLE_FREEBSD_VERSION" }>, align 1
@alloc644 = private unnamed_addr constant <{ [82 x i8] }> <{ [82 x i8] c"/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs" }>, align 1
@alloc576 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00D\00\00\00$\00\00\00" }>, align 8
@alloc69 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"cargo:warning=setting FreeBSD version to " }>, align 1
@alloc387 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\0A" }>, align 1
@alloc70 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [41 x i8] }>, <{ [41 x i8] }>* @alloc69, i32 0, i32 0, i32 0), [8 x i8] c")\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc387, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc75 = private unnamed_addr constant <{ [38 x i8] }> <{ [38 x i8] c"FreeBSD older than 10 is not supported" }>, align 1
@alloc76 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [38 x i8] }>, <{ [38 x i8] }>* @alloc75, i32 0, i32 0, i32 0), [8 x i8] c"&\00\00\00\00\00\00\00" }>, align 8
@alloc578 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00P\00\00\00\18\00\00\00" }>, align 8
@alloc11 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd15" }>, align 1
@alloc10 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd14" }>, align 1
@alloc9 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd13" }>, align 1
@alloc8 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd12" }>, align 1
@alloc7 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd11" }>, align 1
@alloc6 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"freebsd10" }>, align 1
@alloc3 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"emscripten_old_stat_abi" }>, align 1
@alloc586 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"RUST_LIBC_UNSTABLE_MUSL_V1_2_3" }>, align 1
@alloc93 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_MUSL_V1_2_3\0A" }>, align 1
@alloc94 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [58 x i8] }>, <{ [58 x i8] }>* @alloc93, i32 0, i32 0, i32 0), [8 x i8] c":\00\00\00\00\00\00\00" }>, align 8
@alloc42 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"loongarch64" }>, align 1
@alloc102 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc42, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00" }>, align 8
@alloc37 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"ohos" }>, align 1
@alloc99 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc37, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc19 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"musl_v1_2_3" }>, align 1
@alloc588 = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"RUST_LIBC_UNSTABLE_LINUX_TIME_BITS64" }>, align 1
@alloc107 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_LINUX_TIME_BITS64\0A" }>, align 1
@alloc108 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [64 x i8] }>, <{ [64 x i8] }>* @alloc107, i32 0, i32 0, i32 0), [8 x i8] c"@\00\00\00\00\00\00\00" }>, align 8
@alloc18 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"linux_time_bits64" }>, align 1
@alloc114 = private unnamed_addr constant <{ [67 x i8] }> <{ [67 x i8] c"cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_GNU_FILE_OFFSET_BITS\0A" }>, align 1
@alloc115 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [67 x i8] }>, <{ [67 x i8] }>* @alloc114, i32 0, i32 0, i32 0), [8 x i8] c"C\00\00\00\00\00\00\00" }>, align 8
@alloc119 = private unnamed_addr constant <{ [60 x i8] }> <{ [60 x i8] c"cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_GNU_TIME_BITS\0A" }>, align 1
@alloc120 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [60 x i8] }>, <{ [60 x i8] }>* @alloc119, i32 0, i32 0, i32 0), [8 x i8] c"<\00\00\00\00\00\00\00" }>, align 8
@alloc124 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"gnu" }>, align 1
@alloc125 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc124, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc136 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"linux" }>, align 1
@alloc137 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc136, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00" }>, align 8
@alloc163 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"32" }>, align 1
@alloc164 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc163, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc130 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"riscv32" }>, align 1
@alloc131 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc130, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc127 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"x86_64" }>, align 1
@alloc128 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc127, i32 0, i32 0, i32 0), [8 x i8] c"\06\00\00\00\00\00\00\00" }>, align 8
@alloc590 = private unnamed_addr constant <{ [32 x i8] }> <{ [32 x i8] c"RUST_LIBC_UNSTABLE_GNU_TIME_BITS" }>, align 1
@alloc158 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"64" }>, align 1
@alloc159 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc158, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc12 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"gnu_file_offset_bits64" }>, align 1
@alloc13 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"gnu_time_bits64" }>, align 1
@alloc153 = private unnamed_addr constant <{ [64 x i8] }> <{ [64 x i8] c"RUST_LIBC_UNSTABLE_GNU_TIME_BITS may only be set to '32' or '64'" }>, align 1
@alloc154 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [64 x i8] }>, <{ [64 x i8] }>* @alloc153, i32 0, i32 0, i32 0), [8 x i8] c"@\00\00\00\00\00\00\00" }>, align 8
@alloc595 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00z\00\00\00\11\00\00\00" }>, align 8
@alloc596 = private unnamed_addr constant <{ [39 x i8] }> <{ [39 x i8] c"RUST_LIBC_UNSTABLE_GNU_FILE_OFFSET_BITS" }>, align 1
@alloc166 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"RUST_LIBC_UNSTABLE_GNU_FILE_OFFSET_BITS may only be set to '32' or '64'" }>, align 1
@alloc167 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc166, i32 0, i32 0, i32 0), [8 x i8] c"G\00\00\00\00\00\00\00" }>, align 8
@alloc599 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\82\00\00\00\19\00\00\00" }>, align 8
@alloc15 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"libc_deny_warnings" }>, align 1
@alloc16 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"libc_thread_local" }>, align 1
@alloc14 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"libc_const_extern_fn" }>, align 1
@alloc5 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"espidf_time32" }>, align 1
@alloc17 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"libc_ctest" }>, align 1
@alloc4 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [23 x i8] }>, <{ [23 x i8] }>* @alloc3, i32 0, i32 0, i32 0), [8 x i8] c"\17\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc5, i32 0, i32 0, i32 0), [8 x i8] c"\0D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc6, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc7, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc8, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc9, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc10, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc11, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc12, i32 0, i32 0, i32 0), [8 x i8] c"\16\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [15 x i8] }>, <{ [15 x i8] }>* @alloc13, i32 0, i32 0, i32 0), [8 x i8] c"\0F\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [20 x i8] }>, <{ [20 x i8] }>* @alloc14, i32 0, i32 0, i32 0), [8 x i8] c"\14\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc15, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc16, i32 0, i32 0, i32 0), [8 x i8] c"\11\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc17, i32 0, i32 0, i32 0), [8 x i8] c"\0A\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc18, i32 0, i32 0, i32 0), [8 x i8] c"\11\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc19, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00" }>, align 8
@1 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc4 to i8*), [8 x i8] c"\10\00\00\00\00\00\00\00" }>, align 8
@alloc187 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"cargo:rustc-check-cfg=cfg(" }>, align 1
@alloc183 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c")\0A" }>, align 1
@alloc178 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc187, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc183, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc192 = private unnamed_addr constant <{ [29 x i8] }> <{ [29 x i8] c"cargo:rustc-check-cfg=values(" }>, align 1
@alloc182 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [29 x i8] }>, <{ [29 x i8] }>* @alloc192, i32 0, i32 0, i32 0), [8 x i8] c"\1D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc183, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc32 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"target_os" }>, align 1
@alloc22 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"switch" }>, align 1
@alloc36 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"aix" }>, align 1
@alloc26 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"hurd" }>, align 1
@alloc27 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"rtems" }>, align 1
@alloc28 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"visionos" }>, align 1
@alloc29 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"nuttx" }>, align 1
@alloc30 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"cygwin" }>, align 1
@alloc23 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc22, i32 0, i32 0, i32 0), [8 x i8] c"\06\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc36, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc37, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc26, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc27, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc28, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc29, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc30, i32 0, i32 0, i32 0), [8 x i8] c"\06\00\00\00\00\00\00\00" }>, align 8
@alloc41 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"target_env" }>, align 1
@alloc33 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"illumos" }>, align 1
@alloc35 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"wasi" }>, align 1
@alloc38 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"nto71_iosock" }>, align 1
@alloc39 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"nto80" }>, align 1
@alloc34 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc33, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc35, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc36, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc37, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc38, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [5 x i8] }>, <{ [5 x i8] }>* @alloc39, i32 0, i32 0, i32 0), [8 x i8] c"\05\00\00\00\00\00\00\00" }>, align 8
@alloc48 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"target_arch" }>, align 1
@alloc44 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"mips32r6" }>, align 1
@alloc45 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"mips64r6" }>, align 1
@alloc46 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"csky" }>, align 1
@alloc43 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc42, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc44, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [8 x i8] }>, <{ [8 x i8] }>* @alloc45, i32 0, i32 0, i32 0), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc46, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc49 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc32, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc23 to i8*), [8 x i8] c"\08\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc41, i32 0, i32 0, i32 0), [8 x i8] c"\0A\00\00\00\00\00\00\00", i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc34 to i8*), [8 x i8] c"\06\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [11 x i8] }>, <{ [11 x i8] }>* @alloc48, i32 0, i32 0, i32 0), [8 x i8] c"\0B\00\00\00\00\00\00\00", i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc43 to i8*), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@2 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc49 to i8*), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc603 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\22,\22" }>, align 1
@alloc189 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c",values(\22" }>, align 1
@alloc190 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\22))\0A" }>, align 1
@alloc188 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc187, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [9 x i8] }>, <{ [9 x i8] }>* @alloc189, i32 0, i32 0, i32 0), [8 x i8] c"\09\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [4 x i8] }>, <{ [4 x i8] }>* @alloc190, i32 0, i32 0, i32 0), [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc194 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c",\22" }>, align 1
@alloc195 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"\22)\0A" }>, align 1
@alloc193 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [29 x i8] }>, <{ [29 x i8] }>* @alloc192, i32 0, i32 0, i32 0), [8 x i8] c"\1D\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [2 x i8] }>, <{ [2 x i8] }>* @alloc194, i32 0, i32 0, i32 0), [8 x i8] c"\02\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [3 x i8] }>, <{ [3 x i8] }>* @alloc195, i32 0, i32 0, i32 0), [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc604 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"RUSTC" }>, align 1
@alloc605 = private unnamed_addr constant <{ [46 x i8] }> <{ [46 x i8] c"Failed to get rustc version: missing RUSTC env" }>, align 1
@alloc607 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\AE\00\00\00&\00\00\00" }>, align 8
@alloc608 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"RUSTC_WRAPPER" }>, align 1
@alloc609 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"--rustc" }>, align 1
@alloc610 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"--version" }>, align 1
@alloc249 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"Failed to get rustc version" }>, align 1
@alloc613 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\C0\00\00\00\1F\00\00\00" }>, align 8
@alloc305 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"failed to run rustc: " }>, align 1
@alloc306 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc305, i32 0, i32 0, i32 0), [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc615 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\C2\00\00\00\05\00\00\00" }>, align 8
@alloc616 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"clippy" }>, align 1
@alloc261 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"rustc 1" }>, align 1
@alloc260 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc261, i32 0, i32 0, i32 0), [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc250 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc249, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc618 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\E1\00\00\00\05\00\00\00" }>, align 8
@alloc620 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\F2\00\00\00\11\00\00\00" }>, align 8
@alloc622 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\F2\00\00\00\17\00\00\00" }>, align 8
@alloc624 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\EE\00\00\00\17\00\00\00" }>, align 8
@alloc626 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\DD\00\00\00\13\00\00\00" }>, align 8
@alloc628 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00\D9\00\00\00\08\00\00\00" }>, align 8
@alloc629 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"dev" }>, align 1
@alloc630 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"nightly" }>, align 1
@alloc631 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"freebsd-version" }>, align 1
@alloc632 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"10" }>, align 1
@alloc633 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"11" }>, align 1
@alloc634 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"12" }>, align 1
@alloc635 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"13" }>, align 1
@alloc636 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"14" }>, align 1
@alloc637 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"15" }>, align 1
@alloc638 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"emcc" }>, align 1
@alloc639 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"-dumpversion" }>, align 1
@alloc641 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00 \01\00\00\0A\00\00\00" }>, align 8
@str.6 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc643 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00 \01\00\00\1A\00\00\00" }>, align 8
@alloc381 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"trying to set cfg " }>, align 1
@alloc383 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c", but it is not in ALLOWED_CFGS" }>, align 1
@alloc382 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc381, i32 0, i32 0, i32 0), [8 x i8] c"\12\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [31 x i8] }>, <{ [31 x i8] }>* @alloc383, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00" }>, align 8
@alloc645 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [82 x i8] }>, <{ [82 x i8] }>* @alloc644, i32 0, i32 0, i32 0), [16 x i8] c"R\00\00\00\00\00\00\00$\01\00\00\05\00\00\00" }>, align 8
@alloc385 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"cargo:rustc-cfg=" }>, align 1
@alloc386 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc385, i32 0, i32 0, i32 0), [8 x i8] c"\10\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc387, i32 0, i32 0, i32 0), [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@__rustc_debug_gdb_scripts_section__ = linkonce_odr unnamed_addr constant [34 x i8] c"\01gdb_load_rust_pretty_printers.py\00", section ".debug_gdb_scripts", align 1

; <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h7d8c747932610c4dE"(%"alloc::string::String"* align 8 %self, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !305 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  %_19 = alloca { i8*, i64 }, align 8
  %_18 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !354, metadata !DIExpression()), !dbg !356
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %_index.dbg.spill, metadata !355, metadata !DIExpression()), !dbg !357
  %_6 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*, !dbg !358
  store %"alloc::vec::Vec<u8>"* %_6, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !358
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !359, metadata !DIExpression()), !dbg !372
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hcda8ebe428aaf363E"(%"alloc::vec::Vec<u8>"* align 8 %_6), !dbg !372
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !372
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !373, metadata !DIExpression()), !dbg !394
  br label %bb1, !dbg !372

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_6, i32 0, i32 1, !dbg !372
  %len = load i64, i64* %2, align 8, !dbg !372
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !372
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !382, metadata !DIExpression()), !dbg !394
  store i8* %data, i8** %data.dbg.spill2, align 8, !dbg !394
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill2, metadata !396, metadata !DIExpression()), !dbg !408
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !394
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !407, metadata !DIExpression()), !dbg !408
  store i8* %data, i8** %self.dbg.spill4, align 8, !dbg !408
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !410, metadata !DIExpression()), !dbg !421
  %data_address = bitcast i8* %data to {}*, !dbg !421
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !421
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !423, metadata !DIExpression()), !dbg !432
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !408
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !431, metadata !DIExpression()), !dbg !432
  %3 = bitcast { i8*, i64 }* %_19 to {}**, !dbg !432
  store {}* %data_address, {}** %3, align 8, !dbg !432
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_19, i32 0, i32 1, !dbg !432
  store i64 %len, i64* %4, align 8, !dbg !432
  %5 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_18 to { i8*, i64 }*, !dbg !432
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_19, i32 0, i32 0, !dbg !432
  %7 = load i8*, i8** %6, align 8, !dbg !432
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_19, i32 0, i32 1, !dbg !432
  %9 = load i64, i64* %8, align 8, !dbg !432
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !432
  store i8* %7, i8** %10, align 8, !dbg !432
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !432
  store i64 %9, i64* %11, align 8, !dbg !432
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_18 to { [0 x i8]*, i64 }*, !dbg !432
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0, !dbg !432
  %_11.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !dbg !432
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1, !dbg !432
  %_11.1 = load i64, i64* %14, align 8, !dbg !432
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !358
  store [0 x i8]* %_11.0, [0 x i8]** %15, align 8, !dbg !358
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !358
  store i64 %_11.1, i64* %16, align 8, !dbg !358
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !434, metadata !DIExpression()), !dbg !443
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !443
  store [0 x i8]* %_11.0, [0 x i8]** %17, align 8, !dbg !443
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !443
  store i64 %_11.1, i64* %18, align 8, !dbg !443
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !443
  %20 = load [0 x i8]*, [0 x i8]** %19, align 8, !dbg !443, !nonnull !23, !align !445, !noundef !23
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !443
  %22 = load i64, i64* %21, align 8, !dbg !443
  br label %bb2, !dbg !443

bb2:                                              ; preds = %bb1
  %23 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %20, 0, !dbg !446
  %24 = insertvalue { [0 x i8]*, i64 } %23, i64 %22, 1, !dbg !446
  ret { [0 x i8]*, i64 } %24, !dbg !446
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h8de37ed017eb7085E"({ i64*, i64* }* align 8 %self, i64 %init) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !447 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %g.dbg.spill = alloca {}, align 1
  %init.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_10 = alloca i8, align 1
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !497, metadata !DIExpression()), !dbg !505
  store i64 %init, i64* %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %init.dbg.spill, metadata !498, metadata !DIExpression()), !dbg !506
  call void @llvm.dbg.declare(metadata {}* %g.dbg.spill, metadata !499, metadata !DIExpression()), !dbg !507
  store i8 1, i8* %_10, align 1, !dbg !508
  %_8 = bitcast { i64*, i64* }* %self to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, !dbg !509
; invoke core::iter::adapters::map::map_try_fold
  %_6 = invoke align 1 i8* @_ZN4core4iter8adapters3map12map_try_fold17h4d53a0801c1cce34E(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %_8)
          to label %bb1 unwind label %cleanup, !dbg !510

bb5:                                              ; preds = %cleanup
  %1 = load i8, i8* %_10, align 1, !dbg !511, !range !512, !noundef !23
  %2 = trunc i8 %1 to i1, !dbg !511
  br i1 %2, label %bb4, label %bb3, !dbg !511

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_10, align 1, !dbg !513
; invoke core::iter::traits::iterator::Iterator::try_fold
  %8 = invoke { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h61f1b67524321cb2E({ i64*, i64* }* align 8 %self, i64 %init, i8* align 1 %_6)
          to label %bb2 unwind label %cleanup, !dbg !513

bb2:                                              ; preds = %bb1
  %9 = extractvalue { i64, i64 } %8, 0, !dbg !513
  %10 = extractvalue { i64, i64 } %8, 1, !dbg !513
  %11 = insertvalue { i64, i64 } undef, i64 %9, 0, !dbg !514
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !514
  ret { i64, i64 } %12, !dbg !514

bb3:                                              ; preds = %bb4, %bb5
  %13 = bitcast { i8*, i32 }* %0 to i8**, !dbg !515
  %14 = load i8*, i8** %13, align 8, !dbg !515
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !515
  %16 = load i32, i32* %15, align 8, !dbg !515
  %17 = insertvalue { i8*, i32 } undef, i8* %14, 0, !dbg !515
  %18 = insertvalue { i8*, i32 } %17, i32 %16, 1, !dbg !515
  resume { i8*, i32 } %18, !dbg !515

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !511
}

; <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h9d06d895a780a20dE"(%"core::str::iter::CharIndices"* align 8 %self) unnamed_addr #0 !dbg !516 {
start:
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %_4 = alloca { i64*, i64* }, align 8
  store %"core::str::iter::CharIndices"* %self, %"core::str::iter::CharIndices"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %self.dbg.spill, metadata !558, metadata !DIExpression()), !dbg !559
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !560
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !560
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !561, metadata !DIExpression()), !dbg !581
; call core::str::validations::next_code_point_reverse
  %0 = call { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17h3be7733f33aea549E({ i8*, i8* }* align 8 %self1), !dbg !581
  %_7.0 = extractvalue { i32, i32 } %0, 0, !dbg !581
  %_7.1 = extractvalue { i32, i32 } %0, 1, !dbg !581
  br label %bb2, !dbg !581

bb2:                                              ; preds = %start
; call core::option::Option<T>::map
  %_2 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h54d2ab215f40a2d9E"(i32 %_7.0, i32 %_7.1), !dbg !581, !range !582
  br label %bb3, !dbg !581

bb3:                                              ; preds = %bb2
  %_5 = bitcast %"core::str::iter::CharIndices"* %self to i64*, !dbg !583
  %_6 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !583
  %1 = bitcast { i64*, i64* }* %_4 to i64**, !dbg !583
  store i64* %_5, i64** %1, align 8, !dbg !583
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_4, i32 0, i32 1, !dbg !583
  %3 = bitcast i64** %2 to { i8*, i8* }**, !dbg !583
  store { i8*, i8* }* %_6, { i8*, i8* }** %3, align 8, !dbg !583
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_4, i32 0, i32 0, !dbg !560
  %5 = load i64*, i64** %4, align 8, !dbg !560, !nonnull !23, !align !584, !noundef !23
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_4, i32 0, i32 1, !dbg !560
  %7 = load i64*, i64** %6, align 8, !dbg !560, !nonnull !23, !align !584, !noundef !23
; call core::option::Option<T>::map
  %8 = call { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h4f6218bb1bf4933aE"(i32 %_2, i64* align 8 %5, i64* align 8 %7), !dbg !560
  %9 = extractvalue { i64, i32 } %8, 0, !dbg !560
  %10 = extractvalue { i64, i32 } %8, 1, !dbg !560
  br label %bb1, !dbg !560

bb1:                                              ; preds = %bb3
  %11 = insertvalue { i64, i32 } undef, i64 %9, 0, !dbg !585
  %12 = insertvalue { i64, i32 } %11, i32 %10, 1, !dbg !585
  ret { i64, i32 } %12, !dbg !585
}

; <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h2f165d3b881e7820E"(i64* align 8 %0, i64* align 8 %1, i32 %ch) unnamed_addr #0 !dbg !586 {
start:
  %index.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %ch.dbg.spill = alloca i32, align 4
  %6 = alloca { i64, i32 }, align 8
  %_1 = alloca { i64*, i64* }, align 8
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 0
  store i64* %0, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
  store i64* %1, i64** %8, align 8
  %9 = bitcast { i64*, i64* }* %_1 to i64**
  %10 = load i64*, i64** %9, align 8, !nonnull !23, !align !584, !noundef !23
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_1, metadata !597, metadata !DIExpression(DW_OP_deref)), !dbg !601
  %11 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
  %12 = bitcast i64** %11 to { i8*, i8* }**
  %13 = load { i8*, i8* }*, { i8*, i8* }** %12, align 8, !nonnull !23, !align !584, !noundef !23
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_1, metadata !598, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref)), !dbg !601
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !596, metadata !DIExpression()), !dbg !602
  %14 = bitcast { i64*, i64* }* %_1 to i64**, !dbg !603
  %_9 = load i64*, i64** %14, align 8, !dbg !603, !nonnull !23, !align !584, !noundef !23
  %_4 = load i64, i64* %_9, align 8, !dbg !603
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1, !dbg !604
  %16 = bitcast i64** %15 to { i8*, i8* }**, !dbg !604
  %_10 = load { i8*, i8* }*, { i8*, i8* }** %16, align 8, !dbg !604, !nonnull !23, !align !584, !noundef !23
  store { i8*, i8* }* %_10, { i8*, i8* }** %self.dbg.spill, align 8, !dbg !604
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !605, metadata !DIExpression()), !dbg !622
  %17 = bitcast { i8*, i8* }* %_10 to i8**, !dbg !622
  %start1 = load i8*, i8** %17, align 8, !dbg !622, !nonnull !23, !noundef !23
  store i8* %start1, i8** %start.dbg.spill, align 8, !dbg !622
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !613, metadata !DIExpression()), !dbg !623
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !624
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !616, metadata !DIExpression()), !dbg !636
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_10, i32 0, i32 1, !dbg !636
  %self = load i8*, i8** %18, align 8, !dbg !636
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !636
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !637, metadata !DIExpression()), !dbg !641
  %19 = bitcast i64* %5 to i8**, !dbg !641
  store i8* %self, i8** %19, align 8, !dbg !641
  %_20 = load i64, i64* %5, align 8, !dbg !641
  br label %bb3, !dbg !641

bb3:                                              ; preds = %start
  store i8* %start1, i8** %self.dbg.spill3, align 8, !dbg !636
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !643, metadata !DIExpression()), !dbg !651
  store i8* %start1, i8** %self.dbg.spill4, align 8, !dbg !651
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !653, metadata !DIExpression()), !dbg !662
  %20 = bitcast i64* %4 to i8**, !dbg !662
  store i8* %start1, i8** %20, align 8, !dbg !662
  %_22 = load i64, i64* %4, align 8, !dbg !662
  br label %bb4, !dbg !662

bb4:                                              ; preds = %bb3
  %21 = sub nuw i64 %_20, %_22, !dbg !636
  store i64 %21, i64* %3, align 8, !dbg !636
  %diff = load i64, i64* %3, align 8, !dbg !636
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !636
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !619, metadata !DIExpression()), !dbg !663
  br label %bb1, !dbg !636

bb1:                                              ; preds = %bb4
  %22 = udiv exact i64 %diff, 1, !dbg !663
  store i64 %22, i64* %2, align 8, !dbg !663
  %_5 = load i64, i64* %2, align 8, !dbg !663
  br label %bb2, !dbg !663

bb2:                                              ; preds = %bb1
  %index = add i64 %_4, %_5, !dbg !603
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !603
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !599, metadata !DIExpression()), !dbg !664
  %23 = bitcast { i64, i32 }* %6 to i64*, !dbg !665
  store i64 %index, i64* %23, align 8, !dbg !665
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1, !dbg !665
  store i32 %ch, i32* %24, align 8, !dbg !665
  %25 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0, !dbg !666
  %26 = load i64, i64* %25, align 8, !dbg !666
  %27 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1, !dbg !666
  %28 = load i32, i32* %27, align 8, !dbg !666, !range !667, !noundef !23
  %29 = insertvalue { i64, i32 } undef, i64 %26, 0, !dbg !666
  %30 = insertvalue { i64, i32 } %29, i32 %28, 1, !dbg !666
  ret { i64, i32 } %30, !dbg !666
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::ReverseSearcher>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17haf0fbae422bf6c47E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #0 !dbg !668 {
start:
  %char_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %diff.dbg.spill18 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %self.dbg.spill15 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %size.dbg.spill12 = alloca i64, align 8
  %start.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill9 = alloca { i8*, i8* }*, align 8
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %pre_len.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %s.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  %_5 = alloca { i64, i32 }, align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !703, metadata !DIExpression()), !dbg !715
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, i32 0, i32 2, !dbg !716
  store %"core::str::iter::CharIndices"* %s, %"core::str::iter::CharIndices"** %s.dbg.spill, align 8, !dbg !716
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %s.dbg.spill, metadata !704, metadata !DIExpression()), !dbg !717
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !718
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !718
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !719, metadata !DIExpression()), !dbg !732
  %9 = bitcast { i8*, i8* }* %self1 to i8**, !dbg !732
  %start3 = load i8*, i8** %9, align 8, !dbg !732, !nonnull !23, !noundef !23
  store i8* %start3, i8** %start.dbg.spill, align 8, !dbg !732
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !723, metadata !DIExpression()), !dbg !733
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !734
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !726, metadata !DIExpression()), !dbg !740
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self1, i32 0, i32 1, !dbg !740
  %self4 = load i8*, i8** %10, align 8, !dbg !740
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !740
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !741, metadata !DIExpression()), !dbg !745
  %11 = bitcast i64* %8 to i8**, !dbg !745
  store i8* %self4, i8** %11, align 8, !dbg !745
  %_35 = load i64, i64* %8, align 8, !dbg !745
  br label %bb11, !dbg !745

bb11:                                             ; preds = %start
  store i8* %start3, i8** %self.dbg.spill6, align 8, !dbg !740
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !747, metadata !DIExpression()), !dbg !751
  store i8* %start3, i8** %self.dbg.spill7, align 8, !dbg !751
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !753, metadata !DIExpression()), !dbg !757
  %12 = bitcast i64* %7 to i8**, !dbg !757
  store i8* %start3, i8** %12, align 8, !dbg !757
  %_37 = load i64, i64* %7, align 8, !dbg !757
  br label %bb12, !dbg !757

bb12:                                             ; preds = %bb11
  %13 = sub nuw i64 %_35, %_37, !dbg !740
  store i64 %13, i64* %6, align 8, !dbg !740
  %diff = load i64, i64* %6, align 8, !dbg !740
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !740
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !729, metadata !DIExpression()), !dbg !758
  br label %bb9, !dbg !740

bb9:                                              ; preds = %bb12
  %14 = udiv exact i64 %diff, 1, !dbg !758
  store i64 %14, i64* %5, align 8, !dbg !758
  %pre_len = load i64, i64* %5, align 8, !dbg !758
  store i64 %pre_len, i64* %pre_len.dbg.spill, align 8, !dbg !758
  call void @llvm.dbg.declare(metadata i64* %pre_len.dbg.spill, metadata !706, metadata !DIExpression()), !dbg !759
  br label %bb10, !dbg !758

bb10:                                             ; preds = %bb9
; call <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %15 = call { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h9d06d895a780a20dE"(%"core::str::iter::CharIndices"* align 8 %s), !dbg !760
  store { i64, i32 } %15, { i64, i32 }* %_5, align 8, !dbg !760
  br label %bb1, !dbg !760

bb1:                                              ; preds = %bb10
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !761
  %17 = load i32, i32* %16, align 8, !dbg !761, !range !582, !noundef !23
  %18 = sub i32 %17, 1114112, !dbg !761
  %19 = icmp eq i32 %18, 0, !dbg !761
  %_7 = select i1 %19, i64 0, i64 1, !dbg !761
  %20 = icmp eq i64 %_7, 1, !dbg !761
  br i1 %20, label %bb2, label %bb6, !dbg !761

bb2:                                              ; preds = %bb1
  %21 = bitcast { i64, i32 }* %_5 to i64*, !dbg !762
  %i = load i64, i64* %21, align 8, !dbg !762
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !762
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !708, metadata !DIExpression()), !dbg !762
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !763
  %c = load i32, i32* %22, align 8, !dbg !763, !range !667, !noundef !23
  store i32 %c, i32* %c.dbg.spill, align 4, !dbg !763
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !710, metadata !DIExpression()), !dbg !763
  %self8 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !764
  store { i8*, i8* }* %self8, { i8*, i8* }** %self.dbg.spill9, align 8, !dbg !764
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill9, metadata !765, metadata !DIExpression()), !dbg !778
  %23 = bitcast { i8*, i8* }* %self8 to i8**, !dbg !778
  %start10 = load i8*, i8** %23, align 8, !dbg !778, !nonnull !23, !noundef !23
  store i8* %start10, i8** %start.dbg.spill11, align 8, !dbg !778
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill11, metadata !769, metadata !DIExpression()), !dbg !779
  store i64 1, i64* %size.dbg.spill12, align 8, !dbg !780
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill12, metadata !772, metadata !DIExpression()), !dbg !786
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self8, i32 0, i32 1, !dbg !786
  %self13 = load i8*, i8** %24, align 8, !dbg !786
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !786
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !787, metadata !DIExpression()), !dbg !791
  %25 = bitcast i64* %4 to i8**, !dbg !791
  store i8* %self13, i8** %25, align 8, !dbg !791
  %_54 = load i64, i64* %4, align 8, !dbg !791
  br label %bb15, !dbg !791

bb6:                                              ; preds = %bb1
  %26 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !793
  store i64 2, i64* %26, align 8, !dbg !793
  br label %bb8, !dbg !794

bb8:                                              ; preds = %bb7, %bb6
  ret void, !dbg !794

bb15:                                             ; preds = %bb2
  store i8* %start10, i8** %self.dbg.spill15, align 8, !dbg !786
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill15, metadata !795, metadata !DIExpression()), !dbg !799
  store i8* %start10, i8** %self.dbg.spill16, align 8, !dbg !799
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !801, metadata !DIExpression()), !dbg !805
  %27 = bitcast i64* %3 to i8**, !dbg !805
  store i8* %start10, i8** %27, align 8, !dbg !805
  %_56 = load i64, i64* %3, align 8, !dbg !805
  br label %bb16, !dbg !805

bb16:                                             ; preds = %bb15
  %28 = sub nuw i64 %_54, %_56, !dbg !786
  store i64 %28, i64* %2, align 8, !dbg !786
  %diff17 = load i64, i64* %2, align 8, !dbg !786
  store i64 %diff17, i64* %diff.dbg.spill18, align 8, !dbg !786
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill18, metadata !775, metadata !DIExpression()), !dbg !806
  br label %bb13, !dbg !786

bb13:                                             ; preds = %bb16
  %29 = udiv exact i64 %diff17, 1, !dbg !806
  store i64 %29, i64* %1, align 8, !dbg !806
  %len = load i64, i64* %1, align 8, !dbg !806
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !806
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !711, metadata !DIExpression()), !dbg !807
  br label %bb14, !dbg !806

bb14:                                             ; preds = %bb13
  %char_len = sub i64 %pre_len, %len, !dbg !808
  store i64 %char_len, i64* %char_len.dbg.spill, align 8, !dbg !808
  call void @llvm.dbg.declare(metadata i64* %char_len.dbg.spill, metadata !713, metadata !DIExpression()), !dbg !809
  %_16 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self to %"[closure@core::str::<impl str>::trim::{closure#0}]"*, !dbg !810
; call <F as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hdc36e925302422e0E"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %_16, i32 %c), !dbg !810
  br label %bb3, !dbg !810

bb3:                                              ; preds = %bb14
  br i1 %_15, label %bb4, label %bb5, !dbg !810

bb5:                                              ; preds = %bb3
  %_23 = add i64 %i, %char_len, !dbg !811
  %30 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !812
  %31 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %30, i32 0, i32 1, !dbg !812
  store i64 %i, i64* %31, align 8, !dbg !812
  %32 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !812
  %33 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %32, i32 0, i32 2, !dbg !812
  store i64 %_23, i64* %33, align 8, !dbg !812
  %34 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !812
  store i64 1, i64* %34, align 8, !dbg !812
  br label %bb7, !dbg !813

bb4:                                              ; preds = %bb3
  %_19 = add i64 %i, %char_len, !dbg !814
  %35 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !815
  %36 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %35, i32 0, i32 1, !dbg !815
  store i64 %i, i64* %36, align 8, !dbg !815
  %37 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !815
  %38 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %37, i32 0, i32 2, !dbg !815
  store i64 %_19, i64* %38, align 8, !dbg !815
  %39 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !815
  store i64 0, i64* %39, align 8, !dbg !815
  br label %bb7, !dbg !816

bb7:                                              ; preds = %bb5, %bb4
  br label %bb8, !dbg !794
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hadb60770f7cc267eE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !817 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_22 = alloca { i8*, i64 }, align 8
  %_21 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !830, metadata !DIExpression()), !dbg !842
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !831, metadata !DIExpression()), !dbg !843
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked::{closure#0}]"* %runtime, metadata !832, metadata !DIExpression()), !dbg !844
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !845
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !845
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !845
  store i64 %slice.1, i64* %6, align 8, !dbg !845
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !846, metadata !DIExpression()), !dbg !853
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !853
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !853
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !854, metadata !DIExpression()), !dbg !861
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !862
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !860, metadata !DIExpression()), !dbg !861
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !861
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !863, metadata !DIExpression()), !dbg !871
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !861
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !870, metadata !DIExpression()), !dbg !871
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !871
  store i8* %7, i8** %0, align 8, !dbg !871
  %data = load i8*, i8** %0, align 8, !dbg !871
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !871
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !873, metadata !DIExpression()), !dbg !878
  br label %bb1, !dbg !871

bb1:                                              ; preds = %start
  %len = sub i64 %self.1, %self.0, !dbg !880
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !880
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !877, metadata !DIExpression()), !dbg !878
  store i8* %data, i8** %self.dbg.spill5, align 8, !dbg !878
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !881, metadata !DIExpression()), !dbg !885
  %data_address = bitcast i8* %data to {}*, !dbg !885
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !885
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !887, metadata !DIExpression()), !dbg !892
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !878
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !891, metadata !DIExpression()), !dbg !892
  %8 = bitcast { i8*, i64 }* %_22 to {}**, !dbg !892
  store {}* %data_address, {}** %8, align 8, !dbg !892
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !892
  store i64 %len, i64* %9, align 8, !dbg !892
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { i8*, i64 }*, !dbg !892
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 0, !dbg !892
  %12 = load i8*, i8** %11, align 8, !dbg !892
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_22, i32 0, i32 1, !dbg !892
  %14 = load i64, i64* %13, align 8, !dbg !892
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !892
  store i8* %12, i8** %15, align 8, !dbg !892
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !892
  store i64 %14, i64* %16, align 8, !dbg !892
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_21 to { [0 x i8]*, i64 }*, !dbg !892
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !892
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !892
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !892
  %21 = load i64, i64* %20, align 8, !dbg !892
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !894
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !894
  ret { [0 x i8]*, i64 } %23, !dbg !894
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h0289f9d6ecabd111E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !895 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !903, metadata !DIExpression()), !dbg !915
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !904, metadata !DIExpression()), !dbg !916
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[u8]>>::get_unchecked_mut::{closure#0}]"* %runtime, metadata !905, metadata !DIExpression()), !dbg !917
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !918
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !918
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !918
  store i64 %slice.1, i64* %6, align 8, !dbg !918
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !919, metadata !DIExpression()), !dbg !926
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !926
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !926
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !927, metadata !DIExpression()), !dbg !934
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !935
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !933, metadata !DIExpression()), !dbg !934
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !934
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !936, metadata !DIExpression()), !dbg !943
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !934
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !942, metadata !DIExpression()), !dbg !943
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !943
  store i8* %7, i8** %0, align 8, !dbg !943
  %_15 = load i8*, i8** %0, align 8, !dbg !943
  br label %bb1, !dbg !943

bb1:                                              ; preds = %start
  store i8* %_15, i8** %data.dbg.spill, align 8, !dbg !943
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !945, metadata !DIExpression()), !dbg !952
  %len = sub i64 %self.1, %self.0, !dbg !954
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !954
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !951, metadata !DIExpression()), !dbg !952
  store i8* %_15, i8** %self.dbg.spill5, align 8, !dbg !952
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !955, metadata !DIExpression()), !dbg !962
  %data_address = bitcast i8* %_15 to {}*, !dbg !962
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !962
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !964, metadata !DIExpression()), !dbg !971
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !952
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !970, metadata !DIExpression()), !dbg !971
  %8 = bitcast { i8*, i64 }* %_24 to {}**, !dbg !971
  store {}* %data_address, {}** %8, align 8, !dbg !971
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !971
  store i64 %len, i64* %9, align 8, !dbg !971
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { i8*, i64 }*, !dbg !971
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !971
  %12 = load i8*, i8** %11, align 8, !dbg !971
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !971
  %14 = load i64, i64* %13, align 8, !dbg !971
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !971
  store i8* %12, i8** %15, align 8, !dbg !971
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !971
  store i64 %14, i64* %16, align 8, !dbg !971
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_23 to { [0 x i8]*, i64 }*, !dbg !971
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !971
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !971
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !971
  %21 = load i64, i64* %20, align 8, !dbg !971
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !973
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !973
  ret { [0 x i8]*, i64 } %23, !dbg !973
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hcb8e7252e399a07dE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !974 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %runtime = alloca %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[core::mem::maybe_uninit::MaybeUninit<u8>]>>::get_unchecked_mut::{closure#0}]", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !992, metadata !DIExpression()), !dbg !1005
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !993, metadata !DIExpression()), !dbg !1006
  call void @llvm.dbg.declare(metadata %"[closure@<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[core::mem::maybe_uninit::MaybeUninit<u8>]>>::get_unchecked_mut::{closure#0}]"* %runtime, metadata !994, metadata !DIExpression()), !dbg !1007
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !1008
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !1008
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !1008
  store i64 %slice.1, i64* %6, align 8, !dbg !1008
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !1009, metadata !DIExpression()), !dbg !1016
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !1016
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !1016
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !1017, metadata !DIExpression()), !dbg !1024
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !1025
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !1023, metadata !DIExpression()), !dbg !1024
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !1024
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !1026, metadata !DIExpression()), !dbg !1033
  store i64 %self.0, i64* %count.dbg.spill4, align 8, !dbg !1024
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !1032, metadata !DIExpression()), !dbg !1033
  %7 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !1033
  store i8* %7, i8** %0, align 8, !dbg !1033
  %_15 = load i8*, i8** %0, align 8, !dbg !1033
  br label %bb1, !dbg !1033

bb1:                                              ; preds = %start
  store i8* %_15, i8** %data.dbg.spill, align 8, !dbg !1033
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1035, metadata !DIExpression()), !dbg !1042
  %len = sub i64 %self.1, %self.0, !dbg !1044
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !1044
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1041, metadata !DIExpression()), !dbg !1042
  store i8* %_15, i8** %self.dbg.spill5, align 8, !dbg !1042
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !1045, metadata !DIExpression()), !dbg !1052
  %data_address = bitcast i8* %_15 to {}*, !dbg !1052
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1052
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1054, metadata !DIExpression()), !dbg !1061
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !1042
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1060, metadata !DIExpression()), !dbg !1061
  %8 = bitcast { i8*, i64 }* %_24 to {}**, !dbg !1061
  store {}* %data_address, {}** %8, align 8, !dbg !1061
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !1061
  store i64 %len, i64* %9, align 8, !dbg !1061
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_23 to { i8*, i64 }*, !dbg !1061
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !1061
  %12 = load i8*, i8** %11, align 8, !dbg !1061
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !1061
  %14 = load i64, i64* %13, align 8, !dbg !1061
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !1061
  store i8* %12, i8** %15, align 8, !dbg !1061
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !1061
  store i64 %14, i64* %16, align 8, !dbg !1061
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_23 to { [0 x i8]*, i64 }*, !dbg !1061
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !1061
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !1061
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !1061
  %21 = load i64, i64* %20, align 8, !dbg !1061
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !1063
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !1063
  ret { [0 x i8]*, i64 } %23, !dbg !1063
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hf345357b5c64d268E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !1064 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1081, metadata !DIExpression()), !dbg !1083
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1082, metadata !DIExpression()), !dbg !1084
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !1085
  br i1 %_4, label %bb1, label %bb2, !dbg !1085

bb2:                                              ; preds = %start
  %_7 = icmp ugt i64 %self.1, %slice.1, !dbg !1086
  %5 = zext i1 %_7 to i8, !dbg !1085
  store i8 %5, i8* %_3, align 1, !dbg !1085
  br label %bb3, !dbg !1085

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !1085
  br label %bb3, !dbg !1085

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !1085, !range !512, !noundef !23
  %7 = trunc i8 %6 to i1, !dbg !1085
  br i1 %7, label %bb4, label %bb5, !dbg !1085

bb5:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %8 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hadb60770f7cc267eE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1087
  %_13.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !1087
  %_13.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !1087
  br label %bb6, !dbg !1087

bb4:                                              ; preds = %bb3
  %9 = bitcast { i8*, i64 }* %0 to {}**, !dbg !1088
  store {}* null, {}** %9, align 8, !dbg !1088
  br label %bb7, !dbg !1089

bb7:                                              ; preds = %bb6, %bb4
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !1090
  %11 = load i8*, i8** %10, align 8, !dbg !1090, !align !445
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !1090
  %13 = load i64, i64* %12, align 8, !dbg !1090
  %14 = insertvalue { i8*, i64 } undef, i8* %11, 0, !dbg !1090
  %15 = insertvalue { i8*, i64 } %14, i64 %13, 1, !dbg !1090
  ret { i8*, i64 } %15, !dbg !1090

bb6:                                              ; preds = %bb5
  %16 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !1091
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0, !dbg !1091
  store [0 x i8]* %_13.0, [0 x i8]** %17, align 8, !dbg !1091
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1, !dbg !1091
  store i64 %_13.1, i64* %18, align 8, !dbg !1091
  br label %bb7, !dbg !1089
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h311cd6c79c217910E"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1092 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1096, metadata !DIExpression()), !dbg !1098
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1097, metadata !DIExpression()), !dbg !1099
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !1100
  br i1 %_3, label %bb1, label %bb2, !dbg !1100

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !1101
  br i1 %_9, label %bb3, label %bb4, !dbg !1101

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) #15, !dbg !1102
  unreachable, !dbg !1102

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hadb60770f7cc267eE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1103
  %_17.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !1103
  %_17.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !1103
  br label %bb5, !dbg !1103

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #15, !dbg !1104
  unreachable, !dbg !1104

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_17.0, 0, !dbg !1105
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_17.1, 1, !dbg !1105
  ret { [0 x i8]*, i64 } %7, !dbg !1105
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h88e374dad76d3e4bE"(i64 %self.0, i64 %self.1, [0 x i8]* align 1 %slice.0, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !1106 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !1114, metadata !DIExpression()), !dbg !1116
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1115, metadata !DIExpression()), !dbg !1117
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !1118
  br i1 %_4, label %bb1, label %bb2, !dbg !1118

bb2:                                              ; preds = %start
  %_10 = icmp ugt i64 %self.1, %slice.1, !dbg !1119
  br i1 %_10, label %bb3, label %bb4, !dbg !1119

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 %0) #15, !dbg !1120
  unreachable, !dbg !1120

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h0289f9d6ecabd111E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1121
  %_20.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !1121
  %_20.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !1121
  br label %bb5, !dbg !1121

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64 %self.1, i64 %slice.1, %"core::panic::location::Location"* align 8 %0) #15, !dbg !1122
  unreachable, !dbg !1122

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_20.0, 0, !dbg !1123
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_20.1, 1, !dbg !1123
  ret { [0 x i8]*, i64 } %7, !dbg !1123
}

; <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8e87941d7e06ef18E"({ i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !1124 {
start:
  %self.dbg.spill20 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill12 = alloca i8*, align 8
  %data_address.dbg.spill10 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !1141, metadata !DIExpression()), !dbg !1142
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1143, metadata !DIExpression()), !dbg !1150
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !1164, metadata !DIExpression()), !dbg !1171
  %7 = bitcast { i8*, i8* }* %self to i8**, !dbg !1163
  %self2 = load i8*, i8** %7, align 8, !dbg !1163, !nonnull !23, !noundef !23
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !1163
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !1184, metadata !DIExpression()), !dbg !1188
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !1188
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !1161, metadata !DIExpression()), !dbg !1189
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !1189
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !1190, metadata !DIExpression()), !dbg !1197
  %8 = bitcast {}** %5 to i64*, !dbg !1199
  store i64 0, i64* %8, align 8, !dbg !1199
  %data_address = load {}*, {}** %5, align 8, !dbg !1199
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1199
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1149, metadata !DIExpression()), !dbg !1150
  br label %bb9, !dbg !1199

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !1150
  store {}* %data_address, {}** %9, align 8, !dbg !1150
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1150
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !1150
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !1150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !1150
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !1150
  %other = load i8*, i8** %13, align 8, !dbg !1150
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1150
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1196, metadata !DIExpression()), !dbg !1197
  %14 = icmp eq i8* %self2, %other, !dbg !1197
  %15 = zext i1 %14 to i8, !dbg !1197
  store i8 %15, i8* %4, align 1, !dbg !1197
  %16 = load i8, i8* %4, align 1, !dbg !1197, !range !512, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !1197
  br label %bb10, !dbg !1197

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !1207
  call void @llvm.assume(i1 %_3), !dbg !1208
  br label %bb1, !dbg !1208

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !1209

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !1210

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1183
  %self6 = load i8*, i8** %17, align 8, !dbg !1183
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !1183
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !1181, metadata !DIExpression()), !dbg !1211
  store i8* %self6, i8** %self.dbg.spill8, align 8, !dbg !1211
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !1212, metadata !DIExpression()), !dbg !1219
  %18 = bitcast {}** %3 to i64*, !dbg !1221
  store i64 0, i64* %18, align 8, !dbg !1221
  %data_address9 = load {}*, {}** %3, align 8, !dbg !1221
  store {}* %data_address9, {}** %data_address.dbg.spill10, align 8, !dbg !1221
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill10, metadata !1170, metadata !DIExpression()), !dbg !1171
  br label %bb11, !dbg !1221

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !1171
  store {}* %data_address9, {}** %19, align 8, !dbg !1171
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1171
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !1171
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !1171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !1171
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !1171
  %other11 = load i8*, i8** %23, align 8, !dbg !1171
  store i8* %other11, i8** %other.dbg.spill12, align 8, !dbg !1171
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill12, metadata !1218, metadata !DIExpression()), !dbg !1219
  %24 = icmp eq i8* %self6, %other11, !dbg !1219
  %25 = zext i1 %24 to i8, !dbg !1219
  store i8 %25, i8* %2, align 1, !dbg !1219
  %26 = load i8, i8* %2, align 1, !dbg !1219, !range !512, !noundef !23
  %_10 = trunc i8 %26 to i1, !dbg !1219
  br label %bb12, !dbg !1219

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !1229
  call void @llvm.assume(i1 %_9), !dbg !1230
  br label %bb3, !dbg !1230

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !1210

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i8*, i8* }* %self to i8**, !dbg !1231
  %self13 = load i8*, i8** %27, align 8, !dbg !1231, !nonnull !23, !noundef !23
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !1231
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !1232, metadata !DIExpression()), !dbg !1236
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1231
  %_16 = load i8*, i8** %28, align 8, !dbg !1231
  %_12 = icmp eq i8* %self13, %_16, !dbg !1231
  br i1 %_12, label %bb6, label %bb7, !dbg !1231

bb7:                                              ; preds = %bb5
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill15, align 8, !dbg !1238
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill15, metadata !1239, metadata !DIExpression()), !dbg !1245
  br i1 false, label %bb13, label %bb14, !dbg !1245

bb6:                                              ; preds = %bb5
  %29 = bitcast i8** %6 to {}**, !dbg !1247
  store {}* null, {}** %29, align 8, !dbg !1247
  br label %bb8, !dbg !1248

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i8*, i8** %6, align 8, !dbg !1249, !align !445
  ret i8* %30, !dbg !1249

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1245
  %_56 = load i8*, i8** %31, align 8, !dbg !1245
  store i8* %_56, i8** %self.dbg.spill18, align 8, !dbg !1245
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !1250, metadata !DIExpression()), !dbg !1255
  %32 = getelementptr i8, i8* %_56, i64 -1, !dbg !1255
  store i8* %32, i8** %0, align 8, !dbg !1255
  %_54 = load i8*, i8** %0, align 8, !dbg !1255
  br label %bb16, !dbg !1255

bb14:                                             ; preds = %bb7
  %33 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1245
  %self16 = load i8*, i8** %33, align 8, !dbg !1245
  store i8* %self16, i8** %self.dbg.spill17, align 8, !dbg !1245
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !1257, metadata !DIExpression()), !dbg !1262
  %34 = getelementptr inbounds i8, i8* %self16, i64 -1, !dbg !1262
  store i8* %34, i8** %1, align 8, !dbg !1262
  %_60 = load i8*, i8** %1, align 8, !dbg !1262
  br label %bb17, !dbg !1262

bb17:                                             ; preds = %bb14
  %35 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1245
  store i8* %_60, i8** %35, align 8, !dbg !1245
  %36 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1245
  %37 = load i8*, i8** %36, align 8, !dbg !1245
  store i8* %37, i8** %_19, align 8, !dbg !1245
  br label %bb15, !dbg !1245

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i8*, i8** %_19, align 8, !dbg !1238
  store i8* %_18, i8** %6, align 8, !dbg !1264
  br label %bb8, !dbg !1248

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !1245
  store i8* %_54, i8** %38, align 8, !dbg !1245
  %39 = bitcast { i8*, i8* }* %self to i8**, !dbg !1245
  %self19 = load i8*, i8** %39, align 8, !dbg !1245, !nonnull !23, !noundef !23
  store i8* %self19, i8** %self.dbg.spill20, align 8, !dbg !1245
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill20, metadata !1265, metadata !DIExpression()), !dbg !1269
  store i8* %self19, i8** %_19, align 8, !dbg !1245
  br label %bb15, !dbg !1245
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::ReverseSearcher>::next_reject_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17h67232f0984849cf5E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #0 !dbg !1271 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  store %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !1299, metadata !DIExpression()), !dbg !1300
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self to %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, !dbg !1301
; call core::str::pattern::ReverseSearcher::next_reject_back
  call void @_ZN4core3str7pattern15ReverseSearcher16next_reject_back17h4f16c1589d6f0daeE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %_2), !dbg !1301
  br label %bb1, !dbg !1301

bb1:                                              ; preds = %start
  ret void, !dbg !1302
}

; <alloc::collections::btree::map::BTreeMap<K,V,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN119_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2b44944a4e45610fE"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self) unnamed_addr #1 !dbg !1303 {
start:
  %self.dbg.spill14 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"*, align 8
  %src.dbg.spill13 = alloca %"alloc::alloc::Global"*, align 8
  %slot.dbg.spill12 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"*, align 8
  %self.dbg.spill11 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %self.dbg.spill10 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %root.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill9 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"*, align 8
  %src.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %slot.dbg.spill8 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"*, align 8
  %self.dbg.spill7 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %self.dbg.spill6 = alloca { i64, i64* }*, align 8
  %self.dbg.spill4 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %slot.dbg.spill3 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", align 1
  %self.dbg.spill2 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %slot.dbg.spill = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", align 1
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %tmp1 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", align 1
  %_32 = alloca { i64, i64* }, align 8
  %_28 = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_22 = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_13 = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %full_range = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_4 = alloca { i64, i64* }, align 8
  %value = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %me = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, metadata !1558, metadata !DIExpression()), !dbg !1570
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, metadata !1559, metadata !DIExpression()), !dbg !1571
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %value, metadata !1572, metadata !DIExpression()), !dbg !1579
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %full_range, metadata !1568, metadata !DIExpression()), !dbg !1581
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp, metadata !1582, metadata !DIExpression()), !dbg !1596
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %self.dbg.spill, metadata !1606, metadata !DIExpression()), !dbg !1613
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %slot.dbg.spill, metadata !1615, metadata !DIExpression()), !dbg !1621
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp1, metadata !1623, metadata !DIExpression()), !dbg !1630
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %self.dbg.spill2, metadata !1637, metadata !DIExpression()), !dbg !1641
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %slot.dbg.spill3, metadata !1643, metadata !DIExpression()), !dbg !1647
  %1 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %value to i8*, !dbg !1649
  %2 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to i8*, !dbg !1649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !1649
  %3 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_28 to i8*, !dbg !1579
  %4 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %value to i8*, !dbg !1579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !dbg !1579
  %5 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1579
  %6 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %5 to i8*, !dbg !1579
  %7 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_28 to i8*, !dbg !1579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !1579
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill4, align 8, !dbg !1650
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill4, metadata !1651, metadata !DIExpression()), !dbg !1660
  %_30 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1660
  %self5 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_30 to { i64, i64* }*, !dbg !1650
  store { i64, i64* }* %self5, { i64, i64* }** %self.dbg.spill6, align 8, !dbg !1650
  call void @llvm.dbg.declare(metadata { i64, i64* }** %self.dbg.spill6, metadata !1661, metadata !DIExpression()), !dbg !1669
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_32, i32 0, i32 1, !dbg !1669
  %9 = bitcast i64** %8 to {}**, !dbg !1669
  store {}* null, {}** %9, align 8, !dbg !1669
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_32, i32 0, i32 0, !dbg !1669
  %11 = load i64, i64* %10, align 8, !dbg !1669
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_32, i32 0, i32 1, !dbg !1669
  %13 = load i64*, i64** %12, align 8, !dbg !1669
; call core::mem::replace
  %14 = call { i64, i64* } @_ZN4core3mem7replace17hcdd549a02bb507dfE({ i64, i64* }* align 8 %self5, i64 %11, i64* %13), !dbg !1669
  store { i64, i64* } %14, { i64, i64* }* %_4, align 8, !dbg !1669
  br label %bb7, !dbg !1669

bb7:                                              ; preds = %start
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_4, i32 0, i32 1, !dbg !1670
  %16 = bitcast i64** %15 to {}**, !dbg !1670
  %17 = load {}*, {}** %16, align 8, !dbg !1670
  %18 = icmp eq {}* %17, null, !dbg !1670
  %_8 = select i1 %18, i64 0, i64 1, !dbg !1670
  %19 = icmp eq i64 %_8, 1, !dbg !1670
  br i1 %19, label %bb1, label %bb4, !dbg !1670

bb1:                                              ; preds = %bb7
  %20 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_4, i32 0, i32 0, !dbg !1671
  %root.0 = load i64, i64* %20, align 8, !dbg !1671
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_4, i32 0, i32 1, !dbg !1671
  %root.1 = load i64*, i64** %21, align 8, !dbg !1671, !nonnull !23, !noundef !23
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root.dbg.spill, i32 0, i32 0, !dbg !1671
  store i64 %root.0, i64* %22, align 8, !dbg !1671
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root.dbg.spill, i32 0, i32 1, !dbg !1671
  store i64* %root.1, i64** %23, align 8, !dbg !1671
  call void @llvm.dbg.declare(metadata { i64, i64* }* %root.dbg.spill, metadata !1566, metadata !DIExpression()), !dbg !1671
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,Type>::into_dying
  %24 = call { i64, i64* } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$Type$GT$10into_dying17h6029ad7cda11e823E"(i64 %root.0, i64* %root.1), !dbg !1672
  %_11.0 = extractvalue { i64, i64* } %24, 0, !dbg !1672
  %_11.1 = extractvalue { i64, i64* } %24, 1, !dbg !1672
  br label %bb2, !dbg !1672

bb4:                                              ; preds = %bb7
; call alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::none
  call void @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$4none17h695ba281fab6cef3E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %_22), !dbg !1673
  br label %bb5, !dbg !1673

bb5:                                              ; preds = %bb4
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill7, align 8, !dbg !1674
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill7, metadata !1675, metadata !DIExpression()), !dbg !1679
  %_48 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1679
  %_25 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_48 to %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"*, !dbg !1680
  store %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %_25, %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"** %slot.dbg.spill8, align 8, !dbg !1680
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"** %slot.dbg.spill8, metadata !1634, metadata !DIExpression()), !dbg !1681
  %_50 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %_25 to %"alloc::alloc::Global"*, !dbg !1681
  store %"alloc::alloc::Global"* %_50, %"alloc::alloc::Global"** %src.dbg.spill, align 8, !dbg !1681
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %src.dbg.spill, metadata !1628, metadata !DIExpression()), !dbg !1682
  %25 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp1 to {}*, !dbg !1683
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp1, %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill9, align 8, !dbg !1630
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill9, metadata !1687, metadata !DIExpression()), !dbg !1695
  %_53 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp1 to %"alloc::alloc::Global"*, !dbg !1695
  %26 = bitcast %"alloc::alloc::Global"* %_53 to i8*, !dbg !1630
  %27 = bitcast %"alloc::alloc::Global"* %_50 to i8*, !dbg !1630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 0, i1 false), !dbg !1630
  br label %bb9, !dbg !1641

bb9:                                              ; preds = %bb5
  %28 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1697
  %29 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %28 to i8*, !dbg !1697
  %30 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_22 to i8*, !dbg !1697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 64, i1 false), !dbg !1697
  %31 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0, i32 0, i32 2, !dbg !1697
  store i64 0, i64* %31, align 8, !dbg !1697
  %32 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"alloc::alloc::Global"*, !dbg !1697
  br label %bb6, !dbg !1698

bb6:                                              ; preds = %bb8, %bb9
  ret void, !dbg !1699

bb2:                                              ; preds = %bb1
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::full_range
  call void @"_ZN5alloc11collections5btree8navigate178_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$10full_range17h09990fc7236fc009E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %full_range, i64 %_11.0, i64* %_11.1), !dbg !1672
  br label %bb3, !dbg !1672

bb3:                                              ; preds = %bb2
  %33 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_13 to i8*, !dbg !1700
  %34 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %full_range to i8*, !dbg !1700
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 64, i1 false), !dbg !1700
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill10, align 8, !dbg !1701
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill10, metadata !1702, metadata !DIExpression()), !dbg !1711
  %_15 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1711
  %35 = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_15, i32 0, i32 3, !dbg !1701
  %_14 = load i64, i64* %35, align 8, !dbg !1701
  store %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me, %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill11, align 8, !dbg !1712
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill11, metadata !1713, metadata !DIExpression()), !dbg !1717
  %_34 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %me to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1717
  %_19 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_34 to %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"*, !dbg !1718
  store %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %_19, %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"** %slot.dbg.spill12, align 8, !dbg !1718
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"** %slot.dbg.spill12, metadata !1603, metadata !DIExpression()), !dbg !1719
  %_36 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>"* %_19 to %"alloc::alloc::Global"*, !dbg !1719
  store %"alloc::alloc::Global"* %_36, %"alloc::alloc::Global"** %src.dbg.spill13, align 8, !dbg !1719
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %src.dbg.spill13, metadata !1590, metadata !DIExpression()), !dbg !1720
  %36 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to {}*, !dbg !1721
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill14, align 8, !dbg !1596
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"** %self.dbg.spill14, metadata !1725, metadata !DIExpression()), !dbg !1729
  %_39 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>"* %tmp to %"alloc::alloc::Global"*, !dbg !1729
  %37 = bitcast %"alloc::alloc::Global"* %_39 to i8*, !dbg !1596
  %38 = bitcast %"alloc::alloc::Global"* %_36 to i8*, !dbg !1596
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64 0, i1 false), !dbg !1596
  br label %bb8, !dbg !1613

bb8:                                              ; preds = %bb3
  %39 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !1731
  %40 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %39 to i8*, !dbg !1731
  %41 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_13 to i8*, !dbg !1731
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 64, i1 false), !dbg !1731
  %42 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0, i32 0, i32 2, !dbg !1731
  store i64 %_14, i64* %42, align 8, !dbg !1731
  %43 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"alloc::alloc::Global"*, !dbg !1731
  br label %bb6, !dbg !1698
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h235423854f80c95bE"(i8* %unique) unnamed_addr #0 !dbg !1732 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %unique.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !1737, metadata !DIExpression()), !dbg !1738
  store i8* %unique, i8** %self.dbg.spill, align 8, !dbg !1739
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1740, metadata !DIExpression()), !dbg !1747
  store i8* %unique, i8** %self.dbg.spill1, align 8, !dbg !1747
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !1748, metadata !DIExpression()), !dbg !1751
  store i8* %unique, i8** %ptr.dbg.spill, align 8, !dbg !1751
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1753, metadata !DIExpression()), !dbg !1758
  store i8* %unique, i8** %0, align 8, !dbg !1758
  %1 = load i8*, i8** %0, align 8, !dbg !1760, !nonnull !23, !noundef !23
  ret i8* %1, !dbg !1760
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h546a7d4f068a885bE"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !1761 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !1791, metadata !DIExpression()), !dbg !1792
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1793
  store i64 %kind.0, i64* %3, align 8, !dbg !1793
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1793
  store i64 %kind.1, i64* %4, align 8, !dbg !1793
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1794
  %6 = load i64, i64* %5, align 8, !dbg !1794
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1794
  %8 = load i64, i64* %7, align 8, !dbg !1794, !range !1795, !noundef !23
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !1794
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !1794
  ret { i64, i64 } %10, !dbg !1794
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hfa10ff63240d453dE"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %0, i8* %1) unnamed_addr #1 !dbg !1796 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %iterator = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 0
  store i8* %0, i8** %2, align 8
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iterator, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !1804, metadata !DIExpression()), !dbg !1808
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %iterator, metadata !1805, metadata !DIExpression()), !dbg !1809
; call core::slice::iter::Iter<T>::as_slice
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h95713962b8792772E"({ i8*, i8* }* align 8 %iterator), !dbg !1810
  %slice.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !1810
  %slice.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !1810
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !1810
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !1810
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !1810
  store i64 %slice.1, i64* %6, align 8, !dbg !1810
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !1806, metadata !DIExpression()), !dbg !1811
  br label %bb1, !dbg !1810

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hb0491b9b26179efeE"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !1812
  br label %bb2, !dbg !1812

bb2:                                              ; preds = %bb1
  ret void, !dbg !1813
}

; <<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<K,V,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN174_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hded606778ae165c8E"(i64** align 8 %self) unnamed_addr #1 !dbg !1814 {
start:
  %self.dbg.spill = alloca i64**, align 8
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !1826, metadata !DIExpression()), !dbg !1843
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv, metadata !1827, metadata !DIExpression()), !dbg !1844
  br label %bb1, !dbg !1845

bb1:                                              ; preds = %bb4, %start
  %0 = bitcast i64** %self to %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, !dbg !1846
  %_8 = load %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %0, align 8, !dbg !1846, !nonnull !23, !align !584, !noundef !23
; call alloc::collections::btree::map::IntoIter<K,V,A>::dying_next
  call void @"_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h4f1bfc4fa54278c4E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>") %_2, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_8), !dbg !1846
  br label %bb2, !dbg !1846

bb2:                                              ; preds = %bb1
  %1 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %_2, i32 0, i32 1, !dbg !1847
  %2 = load {}*, {}** %1, align 8, !dbg !1847
  %3 = icmp eq {}* %2, null, !dbg !1847
  %_4 = select i1 %3, i64 0, i64 1, !dbg !1847
  %4 = icmp eq i64 %_4, 1, !dbg !1847
  br i1 %4, label %bb3, label %bb5, !dbg !1847

bb3:                                              ; preds = %bb2
  %5 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"*, !dbg !1844
  %6 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"* %5 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !1844
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !1844
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %6 to i8*, !dbg !1844
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !1844
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_7 to i8*, !dbg !1848
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !1848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !1848
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::drop_key_val
  call void @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h7334a7c41f34b097E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_7), !dbg !1848
  br label %bb4, !dbg !1848

bb5:                                              ; preds = %bb2
  ret void, !dbg !1849

bb4:                                              ; preds = %bb3
  br label %bb1, !dbg !1845
}

; std::sys_common::backtrace::__rust_begin_short_backtrace
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h2a99f7a5eba12a9bE(void ()* %f) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1850 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dummy.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca void ()*, align 8
  %result.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !1858, metadata !DIExpression()), !dbg !1862
  store void ()* %f, void ()** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %f.dbg.spill, metadata !1857, metadata !DIExpression()), !dbg !1863
  call void @llvm.dbg.declare(metadata {}* %dummy.dbg.spill, metadata !1864, metadata !DIExpression()), !dbg !1872
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h5f346be4eda2d72eE(void ()* %f), !dbg !1874
  br label %bb1, !dbg !1874

bb1:                                              ; preds = %start
  call void asm sideeffect "", "r,~{memory}"({}* undef), !dbg !1872, !srcloc !1875
  br label %bb4, !dbg !1872

bb4:                                              ; preds = %bb1
  ret void, !dbg !1876

bb2:                                              ; No predecessors!
  br label %bb3, !dbg !1877

bb3:                                              ; preds = %bb2
  %1 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1878
  %2 = load i8*, i8** %1, align 8, !dbg !1878
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1878
  %4 = load i32, i32* %3, align 8, !dbg !1878
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0, !dbg !1878
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1, !dbg !1878
  resume { i8*, i32 } %6, !dbg !1878
}

; std::io::error::repr_bitpacked::decode_repr
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std2io5error14repr_bitpacked11decode_repr17hcd0e3b9b5356dd58E(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %0, i8* %ptr) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1879 {
start:
  %code.dbg.spill = alloca i32, align 4
  %x.dbg.spill = alloca i8, align 1
  %kind_bits.dbg.spill = alloca i32, align 4
  %ptr.dbg.spill12 = alloca %"std::io::error::SimpleMessage"*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %custom.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca {}*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %make_custom.dbg.spill = alloca %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]", align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_37 = alloca i8, align 1
  %_34 = alloca i64*, align 8
  %self1 = alloca i64*, align 8
  %f = alloca i64*, align 8
  %self = alloca i8, align 1
  %kind = alloca i8, align 1
  %bits = alloca i64, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1887, metadata !DIExpression()), !dbg !1902
  call void @llvm.dbg.declare(metadata %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]"* %make_custom.dbg.spill, metadata !1888, metadata !DIExpression()), !dbg !1903
  call void @llvm.dbg.declare(metadata i64* %bits, metadata !1889, metadata !DIExpression()), !dbg !1904
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !1895, metadata !DIExpression()), !dbg !1905
  call void @llvm.dbg.declare(metadata i8* %self, metadata !1906, metadata !DIExpression()), !dbg !1935
  call void @llvm.dbg.declare(metadata i64** %f, metadata !1929, metadata !DIExpression()), !dbg !1935
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !1937, metadata !DIExpression()), !dbg !1950
  store i8 1, i8* %_37, align 1, !dbg !1952
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !1953
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1954, metadata !DIExpression()), !dbg !1960
  %_38 = bitcast i8* %ptr to {}*, !dbg !1960
  store {}* %_38, {}** %self.dbg.spill2, align 8, !dbg !1960
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill2, metadata !1961, metadata !DIExpression()), !dbg !1967
  %3 = bitcast i64* %bits to {}**, !dbg !1967
  store {}* %_38, {}** %3, align 8, !dbg !1967
  br label %bb14, !dbg !1967

bb14:                                             ; preds = %start
  %_7 = load i64, i64* %bits, align 8, !dbg !1968
  %_6 = and i64 %_7, 3, !dbg !1968
  switch i64 %_6, label %bb1 [
    i64 2, label %bb2
    i64 3, label %bb3
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !1969

bb1:                                              ; preds = %bb14
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [40 x i8] }>* @alloc513 to [0 x i8]*), i64 40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc515 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !1970

bb2:                                              ; preds = %bb14
  %_11 = load i64, i64* %bits, align 8, !dbg !1971
  %_9 = ashr i64 %_11, 32, !dbg !1972
  %code = trunc i64 %_9 to i32, !dbg !1972
  store i32 %code, i32* %code.dbg.spill, align 4, !dbg !1972
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !1891, metadata !DIExpression()), !dbg !1973
  %4 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"*, !dbg !1974
  %5 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os"* %4, i32 0, i32 1, !dbg !1974
  store i32 %code, i32* %5, align 4, !dbg !1974
  %6 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !1974
  store i8 0, i8* %6, align 8, !dbg !1974
  br label %bb8, !dbg !1975

bb3:                                              ; preds = %bb14
  %_15 = load i64, i64* %bits, align 8, !dbg !1976
  %_14 = lshr i64 %_15, 32, !dbg !1977
  %kind_bits = trunc i64 %_14 to i32, !dbg !1977
  store i32 %kind_bits, i32* %kind_bits.dbg.spill, align 4, !dbg !1977
  call void @llvm.dbg.declare(metadata i32* %kind_bits.dbg.spill, metadata !1893, metadata !DIExpression()), !dbg !1978
; invoke std::io::error::repr_bitpacked::kind_from_prim
  %7 = invoke i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17h5c18ff44e4b611d2E(i32 %kind_bits)
          to label %bb4 unwind label %cleanup, !dbg !1936, !range !1979

bb5:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill9, align 8, !dbg !1951
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !1980, metadata !DIExpression()), !dbg !1988
  store i8* %ptr, i8** %self.dbg.spill10, align 8, !dbg !1988
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !1989, metadata !DIExpression()), !dbg !1993
  %_47 = bitcast i8* %ptr to {}*, !dbg !1993
  %ptr11 = bitcast {}* %_47 to %"std::io::error::SimpleMessage"*, !dbg !1988
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, align 8, !dbg !1988
  call void @llvm.dbg.declare(metadata %"std::io::error::SimpleMessage"** %ptr.dbg.spill12, metadata !1995, metadata !DIExpression()), !dbg !2001
  %8 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !2001
  store %"std::io::error::SimpleMessage"* %ptr11, %"std::io::error::SimpleMessage"** %8, align 8, !dbg !2001
  %9 = bitcast i64** %self1 to %"std::io::error::SimpleMessage"**, !dbg !1950
  %_51 = load %"std::io::error::SimpleMessage"*, %"std::io::error::SimpleMessage"** %9, align 8, !dbg !1950
  %10 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"*, !dbg !2003
  %11 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage"* %10, i32 0, i32 1, !dbg !2003
  store %"std::io::error::SimpleMessage"* %_51, %"std::io::error::SimpleMessage"** %11, align 8, !dbg !2003
  %12 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !2003
  store i8 2, i8* %12, align 8, !dbg !2003
  br label %bb8, !dbg !2004

bb6:                                              ; preds = %bb14
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !2005
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !2006, metadata !DIExpression()), !dbg !2010
  %_52 = bitcast i8* %ptr to {}*, !dbg !2010
  store {}* %_52, {}** %self.dbg.spill4, align 8, !dbg !2010
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill4, metadata !2011, metadata !DIExpression()), !dbg !2019
  %self5 = bitcast {}* %_52 to i8*, !dbg !2019
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !2019
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !2020, metadata !DIExpression()), !dbg !2025
  store i8* %self5, i8** %self.dbg.spill7, align 8, !dbg !2025
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !2026, metadata !DIExpression()), !dbg !2031
  %13 = getelementptr i8, i8* %self5, i64 -1, !dbg !2031
  store i8* %13, i8** %1, align 8, !dbg !2031
  %_60 = load i8*, i8** %1, align 8, !dbg !2031
  br label %bb20, !dbg !2031

bb13:                                             ; preds = %cleanup
  %14 = load i8, i8* %_37, align 1, !dbg !2033, !range !512, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !2033
  br i1 %15, label %bb12, label %bb10, !dbg !2033

cleanup:                                          ; preds = %bb15, %bb3, %bb20, %bb1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb13

unreachable:                                      ; preds = %bb1
  unreachable

bb20:                                             ; preds = %bb6
  store i8* %_60, i8** %self.dbg.spill8, align 8, !dbg !2031
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !2034, metadata !DIExpression()), !dbg !2042
  %custom = bitcast i8* %_60 to %"std::io::error::Custom"*, !dbg !2042
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %custom.dbg.spill, align 8, !dbg !2042
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %custom.dbg.spill, metadata !1897, metadata !DIExpression()), !dbg !2043
  store i8 0, i8* %_37, align 1, !dbg !2044
  %21 = bitcast i64** %_34 to %"std::io::error::Custom"**, !dbg !2044
  store %"std::io::error::Custom"* %custom, %"std::io::error::Custom"** %21, align 8, !dbg !2044
  %22 = load i64*, i64** %_34, align 8, !dbg !2044
  %23 = bitcast i64* %22 to %"std::io::error::Custom"*, !dbg !2044
; invoke <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
  %_32 = invoke align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h216229d3035f3cdbE"(%"std::io::error::Custom"* %23)
          to label %bb7 unwind label %cleanup, !dbg !2044

bb7:                                              ; preds = %bb20
  %24 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*, !dbg !2045
  %25 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %24, i32 0, i32 1, !dbg !2045
  store %"std::io::error::Custom"* %_32, %"std::io::error::Custom"** %25, align 8, !dbg !2045
  %26 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !2045
  store i8 3, i8* %26, align 8, !dbg !2045
  br label %bb8, !dbg !2046

bb8:                                              ; preds = %bb2, %bb19, %bb5, %bb7
  %27 = load i8, i8* %_37, align 1, !dbg !2033, !range !512, !noundef !23
  %28 = trunc i8 %27 to i1, !dbg !2033
  br i1 %28, label %bb11, label %bb9, !dbg !2033

bb4:                                              ; preds = %bb3
  store i8 %7, i8* %self, align 1, !dbg !1936
  store i64* %bits, i64** %f, align 8, !dbg !2047
  %29 = load i8, i8* %self, align 1, !dbg !1935, !range !1979, !noundef !23
  %30 = sub i8 %29, 41, !dbg !1935
  %31 = icmp eq i8 %30, 0, !dbg !1935
  %_40 = select i1 %31, i64 0, i64 1, !dbg !1935
  switch i64 %_40, label %bb16 [
    i64 0, label %bb15
    i64 1, label %bb17
  ], !dbg !1935

bb16:                                             ; preds = %bb4
  unreachable, !dbg !1935

bb15:                                             ; preds = %bb4
  %_42 = load i64*, i64** %f, align 8, !dbg !1935, !nonnull !23, !align !584, !noundef !23
; invoke std::io::error::repr_bitpacked::decode_repr::{{closure}}
  %32 = invoke i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17hc8e85d939c45a11bE"(i64* align 8 %_42)
          to label %bb18 unwind label %cleanup, !dbg !1935, !range !2048

bb17:                                             ; preds = %bb4
  %x = load i8, i8* %self, align 1, !dbg !1935, !range !2048, !noundef !23
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !1935
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !1930, metadata !DIExpression()), !dbg !2049
  store i8 %x, i8* %kind, align 1, !dbg !2049
  br label %bb19, !dbg !1935

bb19:                                             ; preds = %bb18, %bb17
  %_21 = load i8, i8* %kind, align 1, !dbg !2050, !range !2048, !noundef !23
  %33 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"*, !dbg !2051
  %34 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple"* %33, i32 0, i32 1, !dbg !2051
  store i8 %_21, i8* %34, align 1, !dbg !2051
  %35 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %0 to i8*, !dbg !2051
  store i8 1, i8* %35, align 8, !dbg !2051
  br label %bb8, !dbg !2052

bb18:                                             ; preds = %bb15
  store i8 %32, i8* %kind, align 1, !dbg !1935
  br label %bb19, !dbg !1935

bb10:                                             ; preds = %bb12, %bb13
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !2053
  %37 = load i8*, i8** %36, align 8, !dbg !2053
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !2053
  %39 = load i32, i32* %38, align 8, !dbg !2053
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !2053
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !2053
  resume { i8*, i32 } %41, !dbg !2053

bb12:                                             ; preds = %bb13
  br label %bb10, !dbg !2033

bb9:                                              ; preds = %bb11, %bb8
  ret void, !dbg !2054

bb11:                                             ; preds = %bb8
  br label %bb9, !dbg !2033
}

; std::io::error::repr_bitpacked::decode_repr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17hc8e85d939c45a11bE"(i64* align 8 %_1) unnamed_addr #0 !dbg !2055 {
start:
  %_unsafe_arg.dbg.spill = alloca %"core::fmt::UnsafeArg", align 1
  %_1.dbg.spill = alloca i64*, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = load i64*, i64** %_1.dbg.spill, align 8, !nonnull !23, !align !584, !noundef !23
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !2059, metadata !DIExpression(DW_OP_deref)), !dbg !2060
  call void @llvm.dbg.declare(metadata %"core::fmt::UnsafeArg"* %_unsafe_arg.dbg.spill, metadata !2061, metadata !DIExpression()), !dbg !2175
  unreachable, !dbg !2179
}

; std::io::error::repr_bitpacked::kind_from_prim
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17h5c18ff44e4b611d2E(i32 %0) unnamed_addr #0 !dbg !2183 {
start:
  %v.dbg.spill40 = alloca i32*, align 8
  %v.dbg.spill39 = alloca i32*, align 8
  %v.dbg.spill38 = alloca i32*, align 8
  %v.dbg.spill37 = alloca i32*, align 8
  %v.dbg.spill36 = alloca i32*, align 8
  %v.dbg.spill35 = alloca i32*, align 8
  %v.dbg.spill34 = alloca i32*, align 8
  %v.dbg.spill33 = alloca i32*, align 8
  %v.dbg.spill32 = alloca i32*, align 8
  %v.dbg.spill31 = alloca i32*, align 8
  %v.dbg.spill30 = alloca i32*, align 8
  %v.dbg.spill29 = alloca i32*, align 8
  %v.dbg.spill28 = alloca i32*, align 8
  %v.dbg.spill27 = alloca i32*, align 8
  %v.dbg.spill26 = alloca i32*, align 8
  %v.dbg.spill25 = alloca i32*, align 8
  %v.dbg.spill24 = alloca i32*, align 8
  %v.dbg.spill23 = alloca i32*, align 8
  %v.dbg.spill22 = alloca i32*, align 8
  %v.dbg.spill21 = alloca i32*, align 8
  %v.dbg.spill20 = alloca i32*, align 8
  %v.dbg.spill19 = alloca i32*, align 8
  %v.dbg.spill18 = alloca i32*, align 8
  %v.dbg.spill17 = alloca i32*, align 8
  %v.dbg.spill16 = alloca i32*, align 8
  %v.dbg.spill15 = alloca i32*, align 8
  %v.dbg.spill14 = alloca i32*, align 8
  %v.dbg.spill13 = alloca i32*, align 8
  %v.dbg.spill12 = alloca i32*, align 8
  %v.dbg.spill11 = alloca i32*, align 8
  %v.dbg.spill10 = alloca i32*, align 8
  %v.dbg.spill9 = alloca i32*, align 8
  %v.dbg.spill8 = alloca i32*, align 8
  %v.dbg.spill7 = alloca i32*, align 8
  %v.dbg.spill6 = alloca i32*, align 8
  %v.dbg.spill5 = alloca i32*, align 8
  %v.dbg.spill4 = alloca i32*, align 8
  %v.dbg.spill3 = alloca i32*, align 8
  %v.dbg.spill2 = alloca i32*, align 8
  %v.dbg.spill1 = alloca i32*, align 8
  %v.dbg.spill = alloca i32*, align 8
  %1 = alloca i8, align 1
  %ek = alloca i32, align 4
  store i32 %0, i32* %ek, align 4
  call void @llvm.dbg.declare(metadata i32* %ek, metadata !2187, metadata !DIExpression()), !dbg !2312
  store i32* %ek, i32** %v.dbg.spill, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill, metadata !2190, metadata !DIExpression()), !dbg !2314
  %_5 = load i32, i32* %ek, align 4, !dbg !2313
  %_4 = icmp eq i32 %_5, 0, !dbg !2313
  br i1 %_4, label %bb1, label %bb2, !dbg !2313

bb2:                                              ; preds = %start
  store i32* %ek, i32** %v.dbg.spill1, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill1, metadata !2194, metadata !DIExpression()), !dbg !2315
  %_10 = load i32, i32* %ek, align 4, !dbg !2313
  %_9 = icmp eq i32 %_10, 1, !dbg !2313
  br i1 %_9, label %bb3, label %bb4, !dbg !2313

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1, !dbg !2314
  br label %bb83, !dbg !2313

bb83:                                             ; preds = %bb82, %bb81, %bb79, %bb77, %bb75, %bb73, %bb71, %bb69, %bb67, %bb65, %bb63, %bb61, %bb59, %bb57, %bb55, %bb53, %bb51, %bb49, %bb47, %bb45, %bb43, %bb41, %bb39, %bb37, %bb35, %bb33, %bb31, %bb29, %bb27, %bb25, %bb23, %bb21, %bb19, %bb17, %bb15, %bb13, %bb11, %bb9, %bb7, %bb5, %bb3, %bb1
  %2 = load i8, i8* %1, align 1, !dbg !2316, !range !1979, !noundef !23
  ret i8 %2, !dbg !2316

bb4:                                              ; preds = %bb2
  store i32* %ek, i32** %v.dbg.spill2, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill2, metadata !2197, metadata !DIExpression()), !dbg !2317
  %_15 = load i32, i32* %ek, align 4, !dbg !2313
  %_14 = icmp eq i32 %_15, 2, !dbg !2313
  br i1 %_14, label %bb5, label %bb6, !dbg !2313

bb3:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1, !dbg !2315
  br label %bb83, !dbg !2313

bb6:                                              ; preds = %bb4
  store i32* %ek, i32** %v.dbg.spill3, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill3, metadata !2200, metadata !DIExpression()), !dbg !2318
  %_20 = load i32, i32* %ek, align 4, !dbg !2313
  %_19 = icmp eq i32 %_20, 3, !dbg !2313
  br i1 %_19, label %bb7, label %bb8, !dbg !2313

bb5:                                              ; preds = %bb4
  store i8 2, i8* %1, align 1, !dbg !2317
  br label %bb83, !dbg !2313

bb8:                                              ; preds = %bb6
  store i32* %ek, i32** %v.dbg.spill4, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill4, metadata !2203, metadata !DIExpression()), !dbg !2319
  %_25 = load i32, i32* %ek, align 4, !dbg !2313
  %_24 = icmp eq i32 %_25, 4, !dbg !2313
  br i1 %_24, label %bb9, label %bb10, !dbg !2313

bb7:                                              ; preds = %bb6
  store i8 3, i8* %1, align 1, !dbg !2318
  br label %bb83, !dbg !2313

bb10:                                             ; preds = %bb8
  store i32* %ek, i32** %v.dbg.spill5, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill5, metadata !2206, metadata !DIExpression()), !dbg !2320
  %_30 = load i32, i32* %ek, align 4, !dbg !2313
  %_29 = icmp eq i32 %_30, 5, !dbg !2313
  br i1 %_29, label %bb11, label %bb12, !dbg !2313

bb9:                                              ; preds = %bb8
  store i8 4, i8* %1, align 1, !dbg !2319
  br label %bb83, !dbg !2313

bb12:                                             ; preds = %bb10
  store i32* %ek, i32** %v.dbg.spill6, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill6, metadata !2209, metadata !DIExpression()), !dbg !2321
  %_35 = load i32, i32* %ek, align 4, !dbg !2313
  %_34 = icmp eq i32 %_35, 6, !dbg !2313
  br i1 %_34, label %bb13, label %bb14, !dbg !2313

bb11:                                             ; preds = %bb10
  store i8 5, i8* %1, align 1, !dbg !2320
  br label %bb83, !dbg !2313

bb14:                                             ; preds = %bb12
  store i32* %ek, i32** %v.dbg.spill7, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill7, metadata !2212, metadata !DIExpression()), !dbg !2322
  %_40 = load i32, i32* %ek, align 4, !dbg !2313
  %_39 = icmp eq i32 %_40, 7, !dbg !2313
  br i1 %_39, label %bb15, label %bb16, !dbg !2313

bb13:                                             ; preds = %bb12
  store i8 6, i8* %1, align 1, !dbg !2321
  br label %bb83, !dbg !2313

bb16:                                             ; preds = %bb14
  store i32* %ek, i32** %v.dbg.spill8, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill8, metadata !2215, metadata !DIExpression()), !dbg !2323
  %_45 = load i32, i32* %ek, align 4, !dbg !2313
  %_44 = icmp eq i32 %_45, 8, !dbg !2313
  br i1 %_44, label %bb17, label %bb18, !dbg !2313

bb15:                                             ; preds = %bb14
  store i8 7, i8* %1, align 1, !dbg !2322
  br label %bb83, !dbg !2313

bb18:                                             ; preds = %bb16
  store i32* %ek, i32** %v.dbg.spill9, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill9, metadata !2218, metadata !DIExpression()), !dbg !2324
  %_50 = load i32, i32* %ek, align 4, !dbg !2313
  %_49 = icmp eq i32 %_50, 9, !dbg !2313
  br i1 %_49, label %bb19, label %bb20, !dbg !2313

bb17:                                             ; preds = %bb16
  store i8 8, i8* %1, align 1, !dbg !2323
  br label %bb83, !dbg !2313

bb20:                                             ; preds = %bb18
  store i32* %ek, i32** %v.dbg.spill10, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill10, metadata !2221, metadata !DIExpression()), !dbg !2325
  %_55 = load i32, i32* %ek, align 4, !dbg !2313
  %_54 = icmp eq i32 %_55, 10, !dbg !2313
  br i1 %_54, label %bb21, label %bb22, !dbg !2313

bb19:                                             ; preds = %bb18
  store i8 9, i8* %1, align 1, !dbg !2324
  br label %bb83, !dbg !2313

bb22:                                             ; preds = %bb20
  store i32* %ek, i32** %v.dbg.spill11, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill11, metadata !2224, metadata !DIExpression()), !dbg !2326
  %_60 = load i32, i32* %ek, align 4, !dbg !2313
  %_59 = icmp eq i32 %_60, 11, !dbg !2313
  br i1 %_59, label %bb23, label %bb24, !dbg !2313

bb21:                                             ; preds = %bb20
  store i8 10, i8* %1, align 1, !dbg !2325
  br label %bb83, !dbg !2313

bb24:                                             ; preds = %bb22
  store i32* %ek, i32** %v.dbg.spill12, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill12, metadata !2227, metadata !DIExpression()), !dbg !2327
  %_65 = load i32, i32* %ek, align 4, !dbg !2313
  %_64 = icmp eq i32 %_65, 12, !dbg !2313
  br i1 %_64, label %bb25, label %bb26, !dbg !2313

bb23:                                             ; preds = %bb22
  store i8 11, i8* %1, align 1, !dbg !2326
  br label %bb83, !dbg !2313

bb26:                                             ; preds = %bb24
  store i32* %ek, i32** %v.dbg.spill13, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill13, metadata !2230, metadata !DIExpression()), !dbg !2328
  %_70 = load i32, i32* %ek, align 4, !dbg !2313
  %_69 = icmp eq i32 %_70, 13, !dbg !2313
  br i1 %_69, label %bb27, label %bb28, !dbg !2313

bb25:                                             ; preds = %bb24
  store i8 12, i8* %1, align 1, !dbg !2327
  br label %bb83, !dbg !2313

bb28:                                             ; preds = %bb26
  store i32* %ek, i32** %v.dbg.spill14, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill14, metadata !2233, metadata !DIExpression()), !dbg !2329
  %_75 = load i32, i32* %ek, align 4, !dbg !2313
  %_74 = icmp eq i32 %_75, 14, !dbg !2313
  br i1 %_74, label %bb29, label %bb30, !dbg !2313

bb27:                                             ; preds = %bb26
  store i8 13, i8* %1, align 1, !dbg !2328
  br label %bb83, !dbg !2313

bb30:                                             ; preds = %bb28
  store i32* %ek, i32** %v.dbg.spill15, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill15, metadata !2236, metadata !DIExpression()), !dbg !2330
  %_80 = load i32, i32* %ek, align 4, !dbg !2313
  %_79 = icmp eq i32 %_80, 15, !dbg !2313
  br i1 %_79, label %bb31, label %bb32, !dbg !2313

bb29:                                             ; preds = %bb28
  store i8 14, i8* %1, align 1, !dbg !2329
  br label %bb83, !dbg !2313

bb32:                                             ; preds = %bb30
  store i32* %ek, i32** %v.dbg.spill16, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill16, metadata !2239, metadata !DIExpression()), !dbg !2331
  %_85 = load i32, i32* %ek, align 4, !dbg !2313
  %_84 = icmp eq i32 %_85, 16, !dbg !2313
  br i1 %_84, label %bb33, label %bb34, !dbg !2313

bb31:                                             ; preds = %bb30
  store i8 15, i8* %1, align 1, !dbg !2330
  br label %bb83, !dbg !2313

bb34:                                             ; preds = %bb32
  store i32* %ek, i32** %v.dbg.spill17, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill17, metadata !2242, metadata !DIExpression()), !dbg !2332
  %_90 = load i32, i32* %ek, align 4, !dbg !2313
  %_89 = icmp eq i32 %_90, 17, !dbg !2313
  br i1 %_89, label %bb35, label %bb36, !dbg !2313

bb33:                                             ; preds = %bb32
  store i8 16, i8* %1, align 1, !dbg !2331
  br label %bb83, !dbg !2313

bb36:                                             ; preds = %bb34
  store i32* %ek, i32** %v.dbg.spill18, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill18, metadata !2245, metadata !DIExpression()), !dbg !2333
  %_95 = load i32, i32* %ek, align 4, !dbg !2313
  %_94 = icmp eq i32 %_95, 18, !dbg !2313
  br i1 %_94, label %bb37, label %bb38, !dbg !2313

bb35:                                             ; preds = %bb34
  store i8 17, i8* %1, align 1, !dbg !2332
  br label %bb83, !dbg !2313

bb38:                                             ; preds = %bb36
  store i32* %ek, i32** %v.dbg.spill19, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill19, metadata !2248, metadata !DIExpression()), !dbg !2334
  %_100 = load i32, i32* %ek, align 4, !dbg !2313
  %_99 = icmp eq i32 %_100, 19, !dbg !2313
  br i1 %_99, label %bb39, label %bb40, !dbg !2313

bb37:                                             ; preds = %bb36
  store i8 18, i8* %1, align 1, !dbg !2333
  br label %bb83, !dbg !2313

bb40:                                             ; preds = %bb38
  store i32* %ek, i32** %v.dbg.spill20, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill20, metadata !2251, metadata !DIExpression()), !dbg !2335
  %_105 = load i32, i32* %ek, align 4, !dbg !2313
  %_104 = icmp eq i32 %_105, 20, !dbg !2313
  br i1 %_104, label %bb41, label %bb42, !dbg !2313

bb39:                                             ; preds = %bb38
  store i8 19, i8* %1, align 1, !dbg !2334
  br label %bb83, !dbg !2313

bb42:                                             ; preds = %bb40
  store i32* %ek, i32** %v.dbg.spill21, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill21, metadata !2254, metadata !DIExpression()), !dbg !2336
  %_110 = load i32, i32* %ek, align 4, !dbg !2313
  %_109 = icmp eq i32 %_110, 21, !dbg !2313
  br i1 %_109, label %bb43, label %bb44, !dbg !2313

bb41:                                             ; preds = %bb40
  store i8 20, i8* %1, align 1, !dbg !2335
  br label %bb83, !dbg !2313

bb44:                                             ; preds = %bb42
  store i32* %ek, i32** %v.dbg.spill22, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill22, metadata !2257, metadata !DIExpression()), !dbg !2337
  %_115 = load i32, i32* %ek, align 4, !dbg !2313
  %_114 = icmp eq i32 %_115, 22, !dbg !2313
  br i1 %_114, label %bb45, label %bb46, !dbg !2313

bb43:                                             ; preds = %bb42
  store i8 21, i8* %1, align 1, !dbg !2336
  br label %bb83, !dbg !2313

bb46:                                             ; preds = %bb44
  store i32* %ek, i32** %v.dbg.spill23, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill23, metadata !2260, metadata !DIExpression()), !dbg !2338
  %_120 = load i32, i32* %ek, align 4, !dbg !2313
  %_119 = icmp eq i32 %_120, 23, !dbg !2313
  br i1 %_119, label %bb47, label %bb48, !dbg !2313

bb45:                                             ; preds = %bb44
  store i8 22, i8* %1, align 1, !dbg !2337
  br label %bb83, !dbg !2313

bb48:                                             ; preds = %bb46
  store i32* %ek, i32** %v.dbg.spill24, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill24, metadata !2263, metadata !DIExpression()), !dbg !2339
  %_125 = load i32, i32* %ek, align 4, !dbg !2313
  %_124 = icmp eq i32 %_125, 24, !dbg !2313
  br i1 %_124, label %bb49, label %bb50, !dbg !2313

bb47:                                             ; preds = %bb46
  store i8 23, i8* %1, align 1, !dbg !2338
  br label %bb83, !dbg !2313

bb50:                                             ; preds = %bb48
  store i32* %ek, i32** %v.dbg.spill25, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill25, metadata !2266, metadata !DIExpression()), !dbg !2340
  %_130 = load i32, i32* %ek, align 4, !dbg !2313
  %_129 = icmp eq i32 %_130, 25, !dbg !2313
  br i1 %_129, label %bb51, label %bb52, !dbg !2313

bb49:                                             ; preds = %bb48
  store i8 24, i8* %1, align 1, !dbg !2339
  br label %bb83, !dbg !2313

bb52:                                             ; preds = %bb50
  store i32* %ek, i32** %v.dbg.spill26, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill26, metadata !2269, metadata !DIExpression()), !dbg !2341
  %_135 = load i32, i32* %ek, align 4, !dbg !2313
  %_134 = icmp eq i32 %_135, 26, !dbg !2313
  br i1 %_134, label %bb53, label %bb54, !dbg !2313

bb51:                                             ; preds = %bb50
  store i8 25, i8* %1, align 1, !dbg !2340
  br label %bb83, !dbg !2313

bb54:                                             ; preds = %bb52
  store i32* %ek, i32** %v.dbg.spill27, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill27, metadata !2272, metadata !DIExpression()), !dbg !2342
  %_140 = load i32, i32* %ek, align 4, !dbg !2313
  %_139 = icmp eq i32 %_140, 27, !dbg !2313
  br i1 %_139, label %bb55, label %bb56, !dbg !2313

bb53:                                             ; preds = %bb52
  store i8 26, i8* %1, align 1, !dbg !2341
  br label %bb83, !dbg !2313

bb56:                                             ; preds = %bb54
  store i32* %ek, i32** %v.dbg.spill28, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill28, metadata !2275, metadata !DIExpression()), !dbg !2343
  %_145 = load i32, i32* %ek, align 4, !dbg !2313
  %_144 = icmp eq i32 %_145, 28, !dbg !2313
  br i1 %_144, label %bb57, label %bb58, !dbg !2313

bb55:                                             ; preds = %bb54
  store i8 27, i8* %1, align 1, !dbg !2342
  br label %bb83, !dbg !2313

bb58:                                             ; preds = %bb56
  store i32* %ek, i32** %v.dbg.spill29, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill29, metadata !2278, metadata !DIExpression()), !dbg !2344
  %_150 = load i32, i32* %ek, align 4, !dbg !2313
  %_149 = icmp eq i32 %_150, 29, !dbg !2313
  br i1 %_149, label %bb59, label %bb60, !dbg !2313

bb57:                                             ; preds = %bb56
  store i8 28, i8* %1, align 1, !dbg !2343
  br label %bb83, !dbg !2313

bb60:                                             ; preds = %bb58
  store i32* %ek, i32** %v.dbg.spill30, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill30, metadata !2281, metadata !DIExpression()), !dbg !2345
  %_155 = load i32, i32* %ek, align 4, !dbg !2313
  %_154 = icmp eq i32 %_155, 30, !dbg !2313
  br i1 %_154, label %bb61, label %bb62, !dbg !2313

bb59:                                             ; preds = %bb58
  store i8 29, i8* %1, align 1, !dbg !2344
  br label %bb83, !dbg !2313

bb62:                                             ; preds = %bb60
  store i32* %ek, i32** %v.dbg.spill31, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill31, metadata !2284, metadata !DIExpression()), !dbg !2346
  %_160 = load i32, i32* %ek, align 4, !dbg !2313
  %_159 = icmp eq i32 %_160, 31, !dbg !2313
  br i1 %_159, label %bb63, label %bb64, !dbg !2313

bb61:                                             ; preds = %bb60
  store i8 30, i8* %1, align 1, !dbg !2345
  br label %bb83, !dbg !2313

bb64:                                             ; preds = %bb62
  store i32* %ek, i32** %v.dbg.spill32, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill32, metadata !2287, metadata !DIExpression()), !dbg !2347
  %_165 = load i32, i32* %ek, align 4, !dbg !2313
  %_164 = icmp eq i32 %_165, 32, !dbg !2313
  br i1 %_164, label %bb65, label %bb66, !dbg !2313

bb63:                                             ; preds = %bb62
  store i8 31, i8* %1, align 1, !dbg !2346
  br label %bb83, !dbg !2313

bb66:                                             ; preds = %bb64
  store i32* %ek, i32** %v.dbg.spill33, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill33, metadata !2290, metadata !DIExpression()), !dbg !2348
  %_170 = load i32, i32* %ek, align 4, !dbg !2313
  %_169 = icmp eq i32 %_170, 33, !dbg !2313
  br i1 %_169, label %bb67, label %bb68, !dbg !2313

bb65:                                             ; preds = %bb64
  store i8 32, i8* %1, align 1, !dbg !2347
  br label %bb83, !dbg !2313

bb68:                                             ; preds = %bb66
  store i32* %ek, i32** %v.dbg.spill34, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill34, metadata !2293, metadata !DIExpression()), !dbg !2349
  %_175 = load i32, i32* %ek, align 4, !dbg !2313
  %_174 = icmp eq i32 %_175, 34, !dbg !2313
  br i1 %_174, label %bb69, label %bb70, !dbg !2313

bb67:                                             ; preds = %bb66
  store i8 33, i8* %1, align 1, !dbg !2348
  br label %bb83, !dbg !2313

bb70:                                             ; preds = %bb68
  store i32* %ek, i32** %v.dbg.spill35, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill35, metadata !2296, metadata !DIExpression()), !dbg !2350
  %_180 = load i32, i32* %ek, align 4, !dbg !2313
  %_179 = icmp eq i32 %_180, 35, !dbg !2313
  br i1 %_179, label %bb71, label %bb72, !dbg !2313

bb69:                                             ; preds = %bb68
  store i8 34, i8* %1, align 1, !dbg !2349
  br label %bb83, !dbg !2313

bb72:                                             ; preds = %bb70
  store i32* %ek, i32** %v.dbg.spill36, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill36, metadata !2299, metadata !DIExpression()), !dbg !2351
  %_185 = load i32, i32* %ek, align 4, !dbg !2313
  %_184 = icmp eq i32 %_185, 39, !dbg !2313
  br i1 %_184, label %bb73, label %bb74, !dbg !2313

bb71:                                             ; preds = %bb70
  store i8 35, i8* %1, align 1, !dbg !2350
  br label %bb83, !dbg !2313

bb74:                                             ; preds = %bb72
  store i32* %ek, i32** %v.dbg.spill37, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill37, metadata !2302, metadata !DIExpression()), !dbg !2352
  %_190 = load i32, i32* %ek, align 4, !dbg !2313
  %_189 = icmp eq i32 %_190, 37, !dbg !2313
  br i1 %_189, label %bb75, label %bb76, !dbg !2313

bb73:                                             ; preds = %bb72
  store i8 39, i8* %1, align 1, !dbg !2351
  br label %bb83, !dbg !2313

bb76:                                             ; preds = %bb74
  store i32* %ek, i32** %v.dbg.spill38, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill38, metadata !2305, metadata !DIExpression()), !dbg !2353
  %_195 = load i32, i32* %ek, align 4, !dbg !2313
  %_194 = icmp eq i32 %_195, 36, !dbg !2313
  br i1 %_194, label %bb77, label %bb78, !dbg !2313

bb75:                                             ; preds = %bb74
  store i8 37, i8* %1, align 1, !dbg !2352
  br label %bb83, !dbg !2313

bb78:                                             ; preds = %bb76
  store i32* %ek, i32** %v.dbg.spill39, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill39, metadata !2308, metadata !DIExpression()), !dbg !2354
  %_200 = load i32, i32* %ek, align 4, !dbg !2313
  %_199 = icmp eq i32 %_200, 38, !dbg !2313
  br i1 %_199, label %bb79, label %bb80, !dbg !2313

bb77:                                             ; preds = %bb76
  store i8 36, i8* %1, align 1, !dbg !2353
  br label %bb83, !dbg !2313

bb80:                                             ; preds = %bb78
  store i32* %ek, i32** %v.dbg.spill40, align 8, !dbg !2313
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill40, metadata !2311, metadata !DIExpression()), !dbg !2355
  %_205 = load i32, i32* %ek, align 4, !dbg !2313
  %_204 = icmp eq i32 %_205, 40, !dbg !2313
  br i1 %_204, label %bb81, label %bb82, !dbg !2313

bb79:                                             ; preds = %bb78
  store i8 38, i8* %1, align 1, !dbg !2354
  br label %bb83, !dbg !2313

bb82:                                             ; preds = %bb80
  store i8 41, i8* %1, align 1, !dbg !2313
  br label %bb83, !dbg !2313

bb81:                                             ; preds = %bb80
  store i8 40, i8* %1, align 1, !dbg !2355
  br label %bb83, !dbg !2313
}

; std::rt::lang_start
; Function Attrs: nonlazybind uwtable
define hidden i64 @_ZN3std2rt10lang_start17h29b804ca370f3f45E(void ()* %main, i64 %argc, i8** %argv) unnamed_addr #1 !dbg !2356 {
start:
  %v.dbg.spill = alloca i64, align 8
  %argv.dbg.spill = alloca i8**, align 8
  %argc.dbg.spill = alloca i64, align 8
  %main.dbg.spill = alloca void ()*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64, align 8
  store void ()* %main, void ()** %main.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %main.dbg.spill, metadata !2362, metadata !DIExpression()), !dbg !2367
  store i64 %argc, i64* %argc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %argc.dbg.spill, metadata !2363, metadata !DIExpression()), !dbg !2368
  store i8** %argv, i8*** %argv.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.dbg.spill, metadata !2364, metadata !DIExpression()), !dbg !2369
  %0 = bitcast i64** %_8 to void ()**, !dbg !2370
  store void ()* %main, void ()** %0, align 8, !dbg !2370
  %_5.0 = bitcast i64** %_8 to {}*, !dbg !2371
; call std::rt::lang_start_internal
  %1 = call i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1 %_5.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.0 to [3 x i64]*), i64 %argc, i8** %argv), !dbg !2372
  store i64 %1, i64* %_4, align 8, !dbg !2372
  br label %bb1, !dbg !2372

bb1:                                              ; preds = %start
  %v = load i64, i64* %_4, align 8, !dbg !2373
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2373
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2365, metadata !DIExpression()), !dbg !2374
  ret i64 %v, !dbg !2375
}

; std::rt::lang_start::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha250cad3a78ce847E"(i64** align 8 %_1) unnamed_addr #0 !dbg !2376 {
start:
  %self.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i64**, align 8
  %self = alloca i8, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  %0 = load i64**, i64*** %_1.dbg.spill, align 8, !nonnull !23, !align !584, !noundef !23
  %1 = bitcast i64** %0 to void ()**
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !2381, metadata !DIExpression(DW_OP_deref)), !dbg !2382
  call void @llvm.dbg.declare(metadata i8* %self, metadata !2383, metadata !DIExpression()), !dbg !2399
  %2 = bitcast i64** %_1 to void ()**, !dbg !2401
  %_4 = load void ()*, void ()** %2, align 8, !dbg !2401, !nonnull !23, !noundef !23
; call std::sys_common::backtrace::__rust_begin_short_backtrace
  call void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h2a99f7a5eba12a9bE(void ()* %_4), !dbg !2400
  br label %bb1, !dbg !2400

bb1:                                              ; preds = %start
; call <() as std::process::Termination>::report
  %3 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h9670bdbbde5b6d51E"(), !dbg !2400
  store i8 %3, i8* %self, align 1, !dbg !2400
  br label %bb2, !dbg !2400

bb2:                                              ; preds = %bb1
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !2399
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2402, metadata !DIExpression()), !dbg !2410
  %_6 = load i8, i8* %self, align 1, !dbg !2410
  %4 = zext i8 %_6 to i32, !dbg !2410
  ret i32 %4, !dbg !2412
}

; std::env::var
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %0, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2413 {
start:
  %3 = alloca { i8*, i32 }, align 8
  %key = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %key, metadata !2446, metadata !DIExpression()), !dbg !2449
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h8095b91f3bd8cf5dE"({ [0 x i8]*, i64 }* align 8 %key)
          to label %bb1 unwind label %cleanup, !dbg !2450

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2451

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 0, !dbg !2450
  %_3.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 1, !dbg !2450
; invoke std::env::_var
  invoke void @_ZN3std3env4_var17h48effbaa8b2613b5E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %0, %"std::ffi::os_str::OsStr"* align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup, !dbg !2452

bb2:                                              ; preds = %bb1
  br label %bb3, !dbg !2451

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %3 to i8**, !dbg !2453
  %13 = load i8*, i8** %12, align 8, !dbg !2453
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !2453
  %15 = load i32, i32* %14, align 8, !dbg !2453
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !2453
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !2453
  resume { i8*, i32 } %17, !dbg !2453

bb3:                                              ; preds = %bb2
  ret void, !dbg !2454
}

; std::env::var_os
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std3env6var_os17h9497c5a252de7612E(%"core::option::Option<std::ffi::os_str::OsString>"* sret(%"core::option::Option<std::ffi::os_str::OsString>") %0, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2455 {
start:
  %3 = alloca { i8*, i32 }, align 8
  %key = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %key, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %key, metadata !2459, metadata !DIExpression()), !dbg !2460
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h8095b91f3bd8cf5dE"({ [0 x i8]*, i64 }* align 8 %key)
          to label %bb1 unwind label %cleanup, !dbg !2461

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2462

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 0, !dbg !2461
  %_3.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 1, !dbg !2461
; invoke std::env::_var_os
  invoke void @_ZN3std3env7_var_os17h2f2f6465d9e6a0ebE(%"core::option::Option<std::ffi::os_str::OsString>"* sret(%"core::option::Option<std::ffi::os_str::OsString>") %0, %"std::ffi::os_str::OsStr"* align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup, !dbg !2463

bb2:                                              ; preds = %bb1
  br label %bb3, !dbg !2462

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %3 to i8**, !dbg !2464
  %13 = load i8*, i8** %12, align 8, !dbg !2464
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !2464
  %15 = load i32, i32* %14, align 8, !dbg !2464
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !2464
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !2464
  resume { i8*, i32 } %17, !dbg !2464

bb3:                                              ; preds = %bb2
  ret void, !dbg !2465
}

; std::ffi::os_str::OsStr::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std3ffi6os_str5OsStr8is_empty17h6fb2cce940f29d11E(%"std::ffi::os_str::OsStr"* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2466 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { %"std::ffi::os_str::OsStr"*, i64 }, align 8
  %0 = getelementptr inbounds { %"std::ffi::os_str::OsStr"*, i64 }, { %"std::ffi::os_str::OsStr"*, i64 }* %self.dbg.spill, i32 0, i32 0
  store %"std::ffi::os_str::OsStr"* %self.0, %"std::ffi::os_str::OsStr"** %0, align 8
  %1 = getelementptr inbounds { %"std::ffi::os_str::OsStr"*, i64 }, { %"std::ffi::os_str::OsStr"*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { %"std::ffi::os_str::OsStr"*, i64 }* %self.dbg.spill, metadata !2482, metadata !DIExpression()), !dbg !2483
  %2 = mul nsw i64 %self.1, 1, !dbg !2484
  %3 = add i64 0, %2, !dbg !2484
  %4 = add i64 %3, 0, !dbg !2484
  %5 = and i64 %4, -1, !dbg !2484
  %6 = bitcast %"std::ffi::os_str::OsStr"* %self.0 to i8*, !dbg !2484
  %7 = getelementptr i8, i8* %6, i64 0, !dbg !2484
  %8 = bitcast i8* %7 to %"std::sys::unix::os_str::Slice"*, !dbg !2484
  %self.01 = bitcast %"std::sys::unix::os_str::Slice"* %8 to [0 x i8]*, !dbg !2484
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !2484
  store [0 x i8]* %self.01, [0 x i8]** %9, align 8, !dbg !2484
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !2484
  store i64 %self.1, i64* %10, align 8, !dbg !2484
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !2485, metadata !DIExpression()), !dbg !2493
  %11 = icmp eq i64 %self.1, 0, !dbg !2493
  ret i1 %11, !dbg !2494
}

; std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h710673d6632e9c0eE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2495 {
start:
  %inner.dbg.spill = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %0 = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %s.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2500, metadata !DIExpression()), !dbg !2501
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !2502
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !2502
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !2502
  store i64 %self.1, i64* %5, align 8, !dbg !2502
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !2503, metadata !DIExpression()), !dbg !2515
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !2515
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !2515
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !2515
  store i64 %self.1, i64* %7, align 8, !dbg !2515
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !2517, metadata !DIExpression()), !dbg !2524
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2524
  store [0 x i8]* %self.0, [0 x i8]** %8, align 8, !dbg !2524
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2524
  store i64 %self.1, i64* %9, align 8, !dbg !2524
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2524
  %_6.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !2524, !nonnull !23, !align !445, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2524
  %_6.1 = load i64, i64* %11, align 8, !dbg !2524
  br label %bb1, !dbg !2524

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill2, i32 0, i32 0, !dbg !2515
  store [0 x i8]* %_6.0, [0 x i8]** %12, align 8, !dbg !2515
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill2, i32 0, i32 1, !dbg !2515
  store i64 %_6.1, i64* %13, align 8, !dbg !2515
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill2, metadata !2526, metadata !DIExpression()), !dbg !2532
  %14 = bitcast { %"std::sys::unix::os_str::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !2532
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !2532
  store [0 x i8]* %_6.0, [0 x i8]** %15, align 8, !dbg !2532
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !2532
  store i64 %_6.1, i64* %16, align 8, !dbg !2532
  %17 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 0, !dbg !2532
  %_3.0 = load %"std::sys::unix::os_str::Slice"*, %"std::sys::unix::os_str::Slice"** %17, align 8, !dbg !2532, !nonnull !23, !align !445, !noundef !23
  %18 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 1, !dbg !2532
  %_3.1 = load i64, i64* %18, align 8, !dbg !2532
  br label %bb2, !dbg !2532

bb2:                                              ; preds = %bb1
  %19 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 0, !dbg !2516
  store %"std::sys::unix::os_str::Slice"* %_3.0, %"std::sys::unix::os_str::Slice"** %19, align 8, !dbg !2516
  %20 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 1, !dbg !2516
  store i64 %_3.1, i64* %20, align 8, !dbg !2516
  call void @llvm.dbg.declare(metadata { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, metadata !2534, metadata !DIExpression()), !dbg !2539
  %_10.0 = bitcast %"std::sys::unix::os_str::Slice"* %_3.0 to %"std::ffi::os_str::OsStr"*, !dbg !2539
  %21 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %_10.0, 0, !dbg !2541
  %22 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %21, i64 %_3.1, 1, !dbg !2541
  ret { %"std::ffi::os_str::OsStr"*, i64 } %22, !dbg !2541
}

; std::sys::unix::os_str::Buf::as_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str3Buf8as_slice17h577f94a0cba317dcE(%"std::sys::unix::os_str::Buf"* align 8 %self) unnamed_addr #0 !dbg !2542 {
start:
  %0 = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill4 = alloca i64, align 8
  %data.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"std::sys::unix::os_str::Buf"*, align 8
  %_17 = alloca { i8*, i64 }, align 8
  %_16 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"std::sys::unix::os_str::Buf"* %self, %"std::sys::unix::os_str::Buf"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::os_str::Buf"** %self.dbg.spill, metadata !2547, metadata !DIExpression()), !dbg !2548
  %self1 = bitcast %"std::sys::unix::os_str::Buf"* %self to %"alloc::vec::Vec<u8>"*, !dbg !2549
  store %"alloc::vec::Vec<u8>"* %self1, %"alloc::vec::Vec<u8>"** %self.dbg.spill2, align 8, !dbg !2549
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill2, metadata !2550, metadata !DIExpression()), !dbg !2554
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hcda8ebe428aaf363E"(%"alloc::vec::Vec<u8>"* align 8 %self1), !dbg !2554
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !2554
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2556, metadata !DIExpression()), !dbg !2564
  br label %bb2, !dbg !2554

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self1, i32 0, i32 1, !dbg !2554
  %len = load i64, i64* %1, align 8, !dbg !2554
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2554
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2560, metadata !DIExpression()), !dbg !2564
  store i8* %data, i8** %data.dbg.spill3, align 8, !dbg !2564
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill3, metadata !2566, metadata !DIExpression()), !dbg !2571
  store i64 %len, i64* %len.dbg.spill4, align 8, !dbg !2564
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill4, metadata !2570, metadata !DIExpression()), !dbg !2571
  store i8* %data, i8** %self.dbg.spill5, align 8, !dbg !2571
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !2573, metadata !DIExpression()), !dbg !2577
  %data_address = bitcast i8* %data to {}*, !dbg !2577
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2577
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2579, metadata !DIExpression()), !dbg !2584
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !2571
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !2583, metadata !DIExpression()), !dbg !2584
  %2 = bitcast { i8*, i64 }* %_17 to {}**, !dbg !2584
  store {}* %data_address, {}** %2, align 8, !dbg !2584
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 1, !dbg !2584
  store i64 %len, i64* %3, align 8, !dbg !2584
  %4 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_16 to { i8*, i64 }*, !dbg !2584
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 0, !dbg !2584
  %6 = load i8*, i8** %5, align 8, !dbg !2584
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_17, i32 0, i32 1, !dbg !2584
  %8 = load i64, i64* %7, align 8, !dbg !2584
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 0, !dbg !2584
  store i8* %6, i8** %9, align 8, !dbg !2584
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 1, !dbg !2584
  store i64 %8, i64* %10, align 8, !dbg !2584
  %11 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_16 to { [0 x i8]*, i64 }*, !dbg !2584
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !2584
  %_9.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !2584
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !2584
  %_9.1 = load i64, i64* %13, align 8, !dbg !2584
  %14 = bitcast { %"std::sys::unix::os_str::Slice"*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !2586
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !2586
  store [0 x i8]* %_9.0, [0 x i8]** %15, align 8, !dbg !2586
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !2586
  store i64 %_9.1, i64* %16, align 8, !dbg !2586
  %17 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 0, !dbg !2586
  %18 = load %"std::sys::unix::os_str::Slice"*, %"std::sys::unix::os_str::Slice"** %17, align 8, !dbg !2586, !nonnull !23, !align !445, !noundef !23
  %19 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %0, i32 0, i32 1, !dbg !2586
  %20 = load i64, i64* %19, align 8, !dbg !2586
  br label %bb1, !dbg !2586

bb1:                                              ; preds = %bb2
  %21 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } undef, %"std::sys::unix::os_str::Slice"* %18, 0, !dbg !2587
  %22 = insertvalue { %"std::sys::unix::os_str::Slice"*, i64 } %21, i64 %20, 1, !dbg !2587
  ret { %"std::sys::unix::os_str::Slice"*, i64 } %22, !dbg !2587
}

; std::process::Command::arg
; Function Attrs: nonlazybind uwtable
define internal align 8 %"std::process::Command"* @_ZN3std7process7Command3arg17haab4420e573e4115E(%"std::process::Command"* align 8 %self, %"std::ffi::os_str::OsString"* %arg) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2588 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"std::process::Command"*, align 8
  store %"std::process::Command"* %self, %"std::process::Command"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::process::Command"** %self.dbg.spill, metadata !2794, metadata !DIExpression()), !dbg !2798
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"* %arg, metadata !2795, metadata !DIExpression()), !dbg !2799
  %_5 = bitcast %"std::process::Command"* %self to %"std::sys::unix::process::process_common::Command"*, !dbg !2800
; invoke <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %1 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17hd9b985f827e3ffcaE"(%"std::ffi::os_str::OsString"* align 8 %arg)
          to label %bb1 unwind label %cleanup, !dbg !2801

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %arg) #16
          to label %bb5 unwind label %abort, !dbg !2802

cleanup:                                          ; preds = %bb1, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_7.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 0, !dbg !2801
  %_7.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %1, 1, !dbg !2801
; invoke std::sys::unix::process::process_common::Command::arg
  invoke void @_ZN3std3sys4unix7process14process_common7Command3arg17h1dc5214fca92cdf5E(%"std::sys::unix::process::process_common::Command"* align 8 %_5, %"std::ffi::os_str::OsStr"* align 1 %_7.0, i64 %_7.1)
          to label %bb2 unwind label %cleanup, !dbg !2800

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %arg), !dbg !2802
  br label %bb3, !dbg !2802

abort:                                            ; preds = %bb4
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !2803
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !2803
  unreachable, !dbg !2803

bb5:                                              ; preds = %bb4
  %8 = bitcast { i8*, i32 }* %0 to i8**, !dbg !2803
  %9 = load i8*, i8** %8, align 8, !dbg !2803
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !2803
  %11 = load i32, i32* %10, align 8, !dbg !2803
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !2803
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !2803
  resume { i8*, i32 } %13, !dbg !2803

bb3:                                              ; preds = %bb2
  ret %"std::process::Command"* %self, !dbg !2804
}

; std::process::Command::arg
; Function Attrs: nonlazybind uwtable
define internal align 8 %"std::process::Command"* @_ZN3std7process7Command3arg17he741b1289eee98d1E(%"std::process::Command"* align 8 %self, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2805 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"std::process::Command"*, align 8
  %arg = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %arg, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %arg, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store %"std::process::Command"* %self, %"std::process::Command"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::process::Command"** %self.dbg.spill, metadata !2809, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %arg, metadata !2810, metadata !DIExpression()), !dbg !2814
  %_5 = bitcast %"std::process::Command"* %self to %"std::sys::unix::process::process_common::Command"*, !dbg !2815
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %5 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h8095b91f3bd8cf5dE"({ [0 x i8]*, i64 }* align 8 %arg)
          to label %bb1 unwind label %cleanup, !dbg !2816

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2817

cleanup:                                          ; preds = %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_7.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %5, 0, !dbg !2816
  %_7.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %5, 1, !dbg !2816
; invoke std::sys::unix::process::process_common::Command::arg
  invoke void @_ZN3std3sys4unix7process14process_common7Command3arg17h1dc5214fca92cdf5E(%"std::sys::unix::process::process_common::Command"* align 8 %_5, %"std::ffi::os_str::OsStr"* align 1 %_7.0, i64 %_7.1)
          to label %bb2 unwind label %cleanup, !dbg !2815

bb2:                                              ; preds = %bb1
  br label %bb3, !dbg !2817

bb5:                                              ; preds = %bb4
  %11 = bitcast { i8*, i32 }* %2 to i8**, !dbg !2818
  %12 = load i8*, i8** %11, align 8, !dbg !2818
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !2818
  %14 = load i32, i32* %13, align 8, !dbg !2818
  %15 = insertvalue { i8*, i32 } undef, i8* %12, 0, !dbg !2818
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1, !dbg !2818
  resume { i8*, i32 } %16, !dbg !2818

bb3:                                              ; preds = %bb2
  ret %"std::process::Command"* %self, !dbg !2819
}

; std::process::Command::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std7process7Command3new17h0bb87ac83e738136E(%"std::process::Command"* sret(%"std::process::Command") %0, [0 x i8]* align 1 %1, i64 %2) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2820 {
start:
  %3 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"std::sys::unix::process::process_common::Command", align 8
  %program = alloca { [0 x i8]*, i64 }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %program, i32 0, i32 0
  store [0 x i8]* %1, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %program, i32 0, i32 1
  store i64 %2, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %program, metadata !2824, metadata !DIExpression()), !dbg !2825
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %6 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h8095b91f3bd8cf5dE"({ [0 x i8]*, i64 }* align 8 %program)
          to label %bb1 unwind label %cleanup, !dbg !2826

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !2827

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 0, !dbg !2826
  %_4.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %6, 1, !dbg !2826
; invoke std::sys::unix::process::process_common::Command::new
  invoke void @_ZN3std3sys4unix7process14process_common7Command3new17h826d4e968588230fE(%"std::sys::unix::process::process_common::Command"* sret(%"std::sys::unix::process::process_common::Command") %_2, %"std::ffi::os_str::OsStr"* align 1 %_4.0, i64 %_4.1)
          to label %bb2 unwind label %cleanup, !dbg !2828

bb2:                                              ; preds = %bb1
  %12 = bitcast %"std::process::Command"* %0 to %"std::sys::unix::process::process_common::Command"*, !dbg !2829
  %13 = bitcast %"std::sys::unix::process::process_common::Command"* %12 to i8*, !dbg !2829
  %14 = bitcast %"std::sys::unix::process::process_common::Command"* %_2 to i8*, !dbg !2829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 208, i1 false), !dbg !2829
  br label %bb3, !dbg !2827

bb5:                                              ; preds = %bb4
  %15 = bitcast { i8*, i32 }* %3 to i8**, !dbg !2830
  %16 = load i8*, i8** %15, align 8, !dbg !2830
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !2830
  %18 = load i32, i32* %17, align 8, !dbg !2830
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !2830
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !2830
  resume { i8*, i32 } %20, !dbg !2830

bb3:                                              ; preds = %bb2
  ret void, !dbg !2831
}

; std::process::Command::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN3std7process7Command3new17h73e5afb7c0ac4ee6E(%"std::process::Command"* sret(%"std::process::Command") %0, %"std::ffi::os_str::OsString"* %program) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2832 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca %"std::sys::unix::process::process_common::Command", align 8
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"* %program, metadata !2836, metadata !DIExpression()), !dbg !2837
; invoke <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %2 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17hd9b985f827e3ffcaE"(%"std::ffi::os_str::OsString"* align 8 %program)
          to label %bb1 unwind label %cleanup, !dbg !2838

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %program) #16
          to label %bb5 unwind label %abort, !dbg !2839

cleanup:                                          ; preds = %bb1, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %2, 0, !dbg !2838
  %_4.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %2, 1, !dbg !2838
; invoke std::sys::unix::process::process_common::Command::new
  invoke void @_ZN3std3sys4unix7process14process_common7Command3new17h826d4e968588230fE(%"std::sys::unix::process::process_common::Command"* sret(%"std::sys::unix::process::process_common::Command") %_2, %"std::ffi::os_str::OsStr"* align 1 %_4.0, i64 %_4.1)
          to label %bb2 unwind label %cleanup, !dbg !2840

bb2:                                              ; preds = %bb1
  %8 = bitcast %"std::process::Command"* %0 to %"std::sys::unix::process::process_common::Command"*, !dbg !2841
  %9 = bitcast %"std::sys::unix::process::process_common::Command"* %8 to i8*, !dbg !2841
  %10 = bitcast %"std::sys::unix::process::process_common::Command"* %_2 to i8*, !dbg !2841
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 208, i1 false), !dbg !2841
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %program), !dbg !2839
  br label %bb3, !dbg !2839

abort:                                            ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !2842
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !2842
  unreachable, !dbg !2842

bb5:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %1 to i8**, !dbg !2842
  %13 = load i8*, i8** %12, align 8, !dbg !2842
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !2842
  %15 = load i32, i32* %14, align 8, !dbg !2842
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !2842
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !2842
  resume { i8*, i32 } %17, !dbg !2842

bb3:                                              ; preds = %bb2
  ret void, !dbg !2843
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h07728422a7103b3fE"({ [0 x i8]*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !2844 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !2849, metadata !DIExpression()), !dbg !2851
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2850, metadata !DIExpression()), !dbg !2852
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !2853
  %_6.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !2853, !nonnull !23, !align !445, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !2853
  %_6.1 = load i64, i64* %1, align 8, !dbg !2853
; call <str as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h158131d6df421a05E"([0 x i8]* align 1 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f), !dbg !2854
  br label %bb1, !dbg !2854

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !2855
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17heb65f44bf8fb9e20E"({ i8*, i64 }** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !2856 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { i8*, i64 }**, align 8
  store { i8*, i64 }** %self, { i8*, i64 }*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }*** %self.dbg.spill, metadata !2861, metadata !DIExpression()), !dbg !2865
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2862, metadata !DIExpression()), !dbg !2866
  %_6 = load { i8*, i64 }*, { i8*, i64 }** %self, align 8, !dbg !2867, !nonnull !23, !align !584, !noundef !23
; call <core::option::Option<T> as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hefaa21c78fc9c5fbE"({ i8*, i64 }* align 8 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !2868
  br label %bb1, !dbg !2868

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !2869
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf06ba88675a9062bE"({ [0 x i8]*, i64 }** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !2870 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }**, align 8
  store { [0 x i8]*, i64 }** %self, { [0 x i8]*, i64 }*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }*** %self.dbg.spill, metadata !2875, metadata !DIExpression()), !dbg !2877
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2876, metadata !DIExpression()), !dbg !2878
  %_6 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %self, align 8, !dbg !2879, !nonnull !23, !align !584, !noundef !23
; call <&T as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h07728422a7103b3fE"({ [0 x i8]*, i64 }* align 8 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !2880
  br label %bb1, !dbg !2880

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !2881
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h65542891b179a116E"({ [0 x i8]*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !2882 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !2885, metadata !DIExpression()), !dbg !2887
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2886, metadata !DIExpression()), !dbg !2888
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !2889
  %_6.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !2889, !nonnull !23, !align !445, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !2889
  %_6.1 = load i64, i64* %1, align 8, !dbg !2889
; call <str as core::fmt::Display>::fmt
  %2 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hde81f4d22eef4d42E"([0 x i8]* align 1 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f), !dbg !2890
  br label %bb1, !dbg !2890

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !2891
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha67470dfda3d322dE"({ [0 x i8]*, i64 }** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !2892 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }**, align 8
  store { [0 x i8]*, i64 }** %self, { [0 x i8]*, i64 }*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }*** %self.dbg.spill, metadata !2894, metadata !DIExpression()), !dbg !2896
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2895, metadata !DIExpression()), !dbg !2897
  %_6 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %self, align 8, !dbg !2898, !nonnull !23, !align !584, !noundef !23
; call <&T as core::fmt::Display>::fmt
  %0 = call zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h65542891b179a116E"({ [0 x i8]*, i64 }* align 8 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !2899
  br label %bb1, !dbg !2899

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !2900
}

; <F as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h49ecd823c3899a35E"(%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* sret(%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>") %0, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !2901 {
start:
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"[closure@core::str::<impl str>::trim::{closure#0}]", align 1
  %_4 = alloca %"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>", align 1
  %_3 = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::str::<impl str>::trim::{closure#0}]"* %self.dbg.spill, metadata !2906, metadata !DIExpression()), !dbg !2908
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !2907, metadata !DIExpression()), !dbg !2909
  %3 = bitcast %"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>"* %_4 to %"[closure@core::str::<impl str>::trim::{closure#0}]"*, !dbg !2910
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h91860eee0c889734E"(%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* sret(%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>") %_3, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !2910
  br label %bb1, !dbg !2910

bb1:                                              ; preds = %start
  %4 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %0 to %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, !dbg !2911
  %5 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %4 to i8*, !dbg !2911
  %6 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %_3 to i8*, !dbg !2911
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 40, i1 false), !dbg !2911
  ret void, !dbg !2912
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h420a2c1e2dba794cE"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !2913 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !2920, metadata !DIExpression()), !dbg !2922
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2921, metadata !DIExpression()), !dbg !2923
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !2924
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !2925, metadata !DIExpression()), !dbg !2932
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !2933
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !2931, metadata !DIExpression()), !dbg !2932
  %1 = add nuw i64 %start1, %n, !dbg !2932
  store i64 %1, i64* %0, align 8, !dbg !2932
  %2 = load i64, i64* %0, align 8, !dbg !2932
  br label %bb1, !dbg !2932

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !2934
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3cmp3Ord3max17h8a63a3f550b3945bE(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2935 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %3 = alloca i64, align 8
  %other = alloca i64, align 8
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  store i64 %1, i64* %other, align 8
  call void @llvm.dbg.declare(metadata i64* %self, metadata !2939, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.declare(metadata i64* %other, metadata !2940, metadata !DIExpression()), !dbg !2944
  store i8 1, i8* %_9, align 1, !dbg !2945
  store i8 1, i8* %_8, align 1, !dbg !2945
; invoke core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %4 = invoke i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hb02b91b719b88d1fE"(i64* align 8 %self, i64* align 8 %other)
          to label %bb1 unwind label %cleanup, !dbg !2945, !range !2946

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !2947

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %4, i8* %_3, align 1, !dbg !2945
  %_7 = load i8, i8* %_3, align 1, !dbg !2945, !range !2946, !noundef !23
  switch i8 %_7, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !2948

bb13:                                             ; preds = %bb8
  %10 = load i8, i8* %_9, align 1, !dbg !2947, !range !512, !noundef !23
  %11 = trunc i8 %10 to i1, !dbg !2947
  br i1 %11, label %bb12, label %bb9, !dbg !2947

bb3:                                              ; preds = %bb1
  unreachable, !dbg !2945

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_8, align 1, !dbg !2949
  %12 = load i64, i64* %other, align 8, !dbg !2949
  store i64 %12, i64* %3, align 8, !dbg !2949
  br label %bb5, !dbg !2949

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1, !dbg !2950
  %13 = load i64, i64* %self, align 8, !dbg !2950
  store i64 %13, i64* %3, align 8, !dbg !2950
  br label %bb5, !dbg !2950

bb5:                                              ; preds = %bb4, %bb2
  %14 = load i8, i8* %_8, align 1, !dbg !2947, !range !512, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !2947
  br i1 %15, label %bb10, label %bb6, !dbg !2947

bb6:                                              ; preds = %bb10, %bb5
  %16 = load i8, i8* %_9, align 1, !dbg !2947, !range !512, !noundef !23
  %17 = trunc i8 %16 to i1, !dbg !2947
  br i1 %17, label %bb11, label %bb7, !dbg !2947

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !2947

bb9:                                              ; preds = %bb12, %bb13
  %18 = bitcast { i8*, i32 }* %2 to i8**, !dbg !2951
  %19 = load i8*, i8** %18, align 8, !dbg !2951
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !2951
  %21 = load i32, i32* %20, align 8, !dbg !2951
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !2951
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !2951
  resume { i8*, i32 } %23, !dbg !2951

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !2947

bb7:                                              ; preds = %bb11, %bb6
  %24 = load i64, i64* %3, align 8, !dbg !2952
  ret i64 %24, !dbg !2952

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !2947
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hb02b91b719b88d1fE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !2953 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !2959, metadata !DIExpression()), !dbg !2961
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !2960, metadata !DIExpression()), !dbg !2962
  %_4 = load i64, i64* %self, align 8, !dbg !2963
  %_5 = load i64, i64* %other, align 8, !dbg !2964
  %_3 = icmp ult i64 %_4, %_5, !dbg !2963
  br i1 %_3, label %bb1, label %bb2, !dbg !2963

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !2965
  %_8 = load i64, i64* %other, align 8, !dbg !2966
  %_6 = icmp eq i64 %_7, %_8, !dbg !2965
  br i1 %_6, label %bb3, label %bb4, !dbg !2965

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !2967
  br label %bb6, !dbg !2968

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !2969, !range !2946, !noundef !23
  ret i8 %1, !dbg !2969

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !2970
  br label %bb5, !dbg !2971

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !2972
  br label %bb5, !dbg !2971

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !2968
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h9df645b2d77e9e3eE"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !2973 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !2978, metadata !DIExpression()), !dbg !2980
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !2979, metadata !DIExpression()), !dbg !2981
  %_3 = load i64, i64* %self, align 8, !dbg !2982
  %_4 = load i64, i64* %other, align 8, !dbg !2983
  %0 = icmp ult i64 %_3, %_4, !dbg !2982
  ret i1 %0, !dbg !2984
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h9ee33d899d15c81dE"({ [0 x i8]*, i64 }* align 8 %self, { [0 x i8]*, i64 }* align 8 %other) unnamed_addr #0 !dbg !2985 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !2990, metadata !DIExpression()), !dbg !2995
  store { [0 x i8]*, i64 }* %other, { [0 x i8]*, i64 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !2991, metadata !DIExpression()), !dbg !2996
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !2997
  %_5.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !2997, !nonnull !23, !align !445, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !2997
  %_5.1 = load i64, i64* %1, align 8, !dbg !2997
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0, !dbg !2998
  %_6.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !2998, !nonnull !23, !align !445, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1, !dbg !2998
  %_6.1 = load i64, i64* %3, align 8, !dbg !2998
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %4 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h09592fa3aa826ce9E"([0 x i8]* align 1 %_5.0, i64 %_5.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !2999
  br label %bb1, !dbg !2999

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !3000
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h1b4be81c2260b809E(%"alloc::string::String"* align 8 %x) unnamed_addr #0 !dbg !3001 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca %"alloc::string::String"*, align 8
  %x.dbg.spill = alloca %"alloc::string::String"*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store %"alloc::string::String"* %x, %"alloc::string::String"** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %x.dbg.spill, metadata !3005, metadata !DIExpression()), !dbg !3007
  store %"alloc::string::String"* %x, %"alloc::string::String"** %x.dbg.spill1, align 8, !dbg !3008
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %x.dbg.spill1, metadata !3009, metadata !DIExpression()), !dbg !3018
  store i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hcfbfb7ac5f978e32E", i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3020
  call void @llvm.dbg.declare(metadata i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3017, metadata !DIExpression()), !dbg !3018
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (%"alloc::string::String"*, %"core::fmt::Formatter"*)* @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hcfbfb7ac5f978e32E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3018
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3018, !nonnull !23, !noundef !23
  br label %bb1, !dbg !3018

bb1:                                              ; preds = %start
  %3 = bitcast %"alloc::string::String"* %x to %"core::fmt::Opaque"*, !dbg !3018
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3018
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3018, !nonnull !23, !align !445, !noundef !23
  br label %bb2, !dbg !3018

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3018
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3018
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3018
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3018
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3018
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3021
  %8 = load i8*, i8** %7, align 8, !dbg !3021, !nonnull !23, !align !445, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3021
  %10 = load i64*, i64** %9, align 8, !dbg !3021, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3021
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3021
  ret { i8*, i64* } %12, !dbg !3021
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h284bd7125bac7ee2E({ [0 x i8]*, i64 }** align 8 %x) unnamed_addr #0 !dbg !3022 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca { [0 x i8]*, i64 }**, align 8
  %x.dbg.spill = alloca { [0 x i8]*, i64 }**, align 8
  %2 = alloca { i8*, i64* }, align 8
  store { [0 x i8]*, i64 }** %x, { [0 x i8]*, i64 }*** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }*** %x.dbg.spill, metadata !3026, metadata !DIExpression()), !dbg !3027
  store { [0 x i8]*, i64 }** %x, { [0 x i8]*, i64 }*** %x.dbg.spill1, align 8, !dbg !3028
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }*** %x.dbg.spill1, metadata !3029, metadata !DIExpression()), !dbg !3036
  store i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha67470dfda3d322dE", i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3038
  call void @llvm.dbg.declare(metadata i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3035, metadata !DIExpression()), !dbg !3036
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 ({ [0 x i8]*, i64 }**, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha67470dfda3d322dE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3036
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3036, !nonnull !23, !noundef !23
  br label %bb1, !dbg !3036

bb1:                                              ; preds = %start
  %3 = bitcast { [0 x i8]*, i64 }** %x to %"core::fmt::Opaque"*, !dbg !3036
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3036
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3036, !nonnull !23, !align !445, !noundef !23
  br label %bb2, !dbg !3036

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3036
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3036
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3036
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3036
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3036
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3039
  %8 = load i8*, i8** %7, align 8, !dbg !3039, !nonnull !23, !align !445, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3039
  %10 = load i64*, i64** %9, align 8, !dbg !3039, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3039
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3039
  ret { i8*, i64* } %12, !dbg !3039
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hca781f09679ab152E(i32* align 4 %x) unnamed_addr #0 !dbg !3040 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i32*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca i32*, align 8
  %x.dbg.spill = alloca i32*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store i32* %x, i32** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill, metadata !3045, metadata !DIExpression()), !dbg !3046
  store i32* %x, i32** %x.dbg.spill1, align 8, !dbg !3047
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill1, metadata !3048, metadata !DIExpression()), !dbg !3057
  store i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE", i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3059
  call void @llvm.dbg.declare(metadata i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3056, metadata !DIExpression()), !dbg !3057
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3057
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3057, !nonnull !23, !noundef !23
  br label %bb1, !dbg !3057

bb1:                                              ; preds = %start
  %3 = bitcast i32* %x to %"core::fmt::Opaque"*, !dbg !3057
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3057
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3057, !nonnull !23, !align !445, !noundef !23
  br label %bb2, !dbg !3057

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3057
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3057
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3057
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3057
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3057
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3060
  %8 = load i8*, i8** %7, align 8, !dbg !3060, !nonnull !23, !align !445, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3060
  %10 = load i64*, i64** %9, align 8, !dbg !3060, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3060
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3060
  ret { i8*, i64* } %12, !dbg !3060
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hd3e7c3896cc0a32bE({ [0 x i8]*, i64 }* align 8 %x) unnamed_addr #0 !dbg !3061 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !3065, metadata !DIExpression()), !dbg !3066
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill1, align 8, !dbg !3067
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill1, metadata !3068, metadata !DIExpression()), !dbg !3075
  store i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h65542891b179a116E", i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3077
  call void @llvm.dbg.declare(metadata i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3074, metadata !DIExpression()), !dbg !3075
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 ({ [0 x i8]*, i64 }*, %"core::fmt::Formatter"*)* @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h65542891b179a116E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3075
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3075, !nonnull !23, !noundef !23
  br label %bb1, !dbg !3075

bb1:                                              ; preds = %start
  %3 = bitcast { [0 x i8]*, i64 }* %x to %"core::fmt::Opaque"*, !dbg !3075
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3075
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3075, !nonnull !23, !align !445, !noundef !23
  br label %bb2, !dbg !3075

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3075
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3075
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3075
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3075
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3075
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3078
  %8 = load i8*, i8** %7, align 8, !dbg !3078, !nonnull !23, !align !445, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3078
  %10 = load i64*, i64** %9, align 8, !dbg !3078, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3078
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3078
  ret { i8*, i64* } %12, !dbg !3078
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hf28baa3399b6d67fE(%"alloc::borrow::Cow<str>"* align 8 %x) unnamed_addr #0 !dbg !3079 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca %"alloc::borrow::Cow<str>"*, align 8
  %x.dbg.spill = alloca %"alloc::borrow::Cow<str>"*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store %"alloc::borrow::Cow<str>"* %x, %"alloc::borrow::Cow<str>"** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<str>"** %x.dbg.spill, metadata !3099, metadata !DIExpression()), !dbg !3102
  store %"alloc::borrow::Cow<str>"* %x, %"alloc::borrow::Cow<str>"** %x.dbg.spill1, align 8, !dbg !3103
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<str>"** %x.dbg.spill1, metadata !3104, metadata !DIExpression()), !dbg !3113
  store i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)* @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h0082b1a9c3918ff0E", i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !3115
  call void @llvm.dbg.declare(metadata i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !3112, metadata !DIExpression()), !dbg !3113
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (%"alloc::borrow::Cow<str>"*, %"core::fmt::Formatter"*)* @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h0082b1a9c3918ff0E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3113
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !3113, !nonnull !23, !noundef !23
  br label %bb1, !dbg !3113

bb1:                                              ; preds = %start
  %3 = bitcast %"alloc::borrow::Cow<str>"* %x to %"core::fmt::Opaque"*, !dbg !3113
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !3113
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !3113, !nonnull !23, !align !445, !noundef !23
  br label %bb2, !dbg !3113

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !3113
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !3113
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3113
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !3113
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !3113
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !3116
  %8 = load i8*, i8** %7, align 8, !dbg !3116, !nonnull !23, !align !445, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !3116
  %10 = load i64*, i64** %9, align 8, !dbg !3116, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !3116
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !3116
  ret { i8*, i64* } %12, !dbg !3116
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !3117 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !3121, metadata !DIExpression()), !dbg !3123
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !3122, metadata !DIExpression()), !dbg !3124
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !3125
  br i1 %_4, label %bb1, label %bb2, !dbg !3125

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !3126
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !3127
  %5 = zext i1 %_9 to i8, !dbg !3125
  store i8 %5, i8* %_3, align 1, !dbg !3125
  br label %bb3, !dbg !3125

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !3125
  br label %bb3, !dbg !3125

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !3125, !range !512, !noundef !23
  %7 = trunc i8 %6 to i1, !dbg !3125
  br i1 %7, label %bb4, label %bb6, !dbg !3125

bb6:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_24 to {}**, !dbg !3128
  store {}* null, {}** %8, align 8, !dbg !3128
  %9 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !3129
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !3129
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !3129
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !3129
  store i64 %pieces.1, i64* %11, align 8, !dbg !3129
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1, !dbg !3129
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0, !dbg !3129
  %14 = load i64*, i64** %13, align 8, !dbg !3129, !align !584
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1, !dbg !3129
  %16 = load i64, i64* %15, align 8, !dbg !3129
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !3129
  store i64* %14, i64** %17, align 8, !dbg !3129
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !3129
  store i64 %16, i64* %18, align 8, !dbg !3129
  %19 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2, !dbg !3129
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !3129
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !3129
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !3129
  store i64 %args.1, i64* %21, align 8, !dbg !3129
  ret void, !dbg !3130

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc244 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0), !dbg !3131
  br label %bb5, !dbg !3131

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc522 to %"core::panic::location::Location"*)) #15, !dbg !3131
  unreachable, !dbg !3131
}

; core::mem::maybe_uninit::MaybeUninit<T>::assume_init_drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17h4da2b390b04c8ad3E"(%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #1 !dbg !3132 {
start:
  %self.dbg.spill1 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !3137, metadata !DIExpression()), !dbg !3138
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill1, align 8, !dbg !3139
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill1, metadata !3140, metadata !DIExpression()), !dbg !3146
  %_2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<std::ffi::os_str::OsString>"*, !dbg !3146
; call core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17h479a684ef65e5531E"(%"core::option::Option<std::ffi::os_str::OsString>"* %_2), !dbg !3147
  br label %bb1, !dbg !3147

bb1:                                              ; preds = %start
  ret void, !dbg !3148
}

; core::mem::maybe_uninit::MaybeUninit<T>::assume_init_drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17hea943d09be3c0b44E"(%"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* align 8 %self) unnamed_addr #1 !dbg !3149 {
start:
  %self.dbg.spill1 = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill, metadata !3154, metadata !DIExpression()), !dbg !3155
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill1, align 8, !dbg !3156
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill1, metadata !3157, metadata !DIExpression()), !dbg !3163
  %_2 = bitcast %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self to %"std::ffi::os_str::OsString"*, !dbg !3163
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %_2), !dbg !3164
  br label %bb1, !dbg !3164

bb1:                                              ; preds = %start
  ret void, !dbg !3165
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem7replace17h2fe7bc61199dfd35E(i64* align 8 %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3166 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %result.dbg.spill = alloca i64, align 8
  %slot.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill = alloca i64*, align 8
  %src.dbg.spill2 = alloca i64*, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  %src1 = alloca i64, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !3171, metadata !DIExpression()), !dbg !3175
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !3172, metadata !DIExpression()), !dbg !3176
  call void @llvm.dbg.declare(metadata i64* %src1, metadata !3177, metadata !DIExpression()), !dbg !3185
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !3187, metadata !DIExpression()), !dbg !3204
  store i64* %dest, i64** %src.dbg.spill2, align 8, !dbg !3206
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill2, metadata !3195, metadata !DIExpression()), !dbg !3207
  %1 = bitcast i64* %tmp to {}*, !dbg !3208
  store i64* %tmp, i64** %self.dbg.spill, align 8, !dbg !3204
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !3214, metadata !DIExpression()), !dbg !3221
  %2 = bitcast i64* %tmp to i8*, !dbg !3204
  %3 = bitcast i64* %dest to i8*, !dbg !3204
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !3204
  %self = load i64, i64* %tmp, align 8, !dbg !3204
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !3204
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !3223, metadata !DIExpression()), !dbg !3229
  br label %bb4, !dbg !3229

bb4:                                              ; preds = %start
  store i64 %self, i64* %slot.dbg.spill, align 8, !dbg !3229
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill, metadata !3231, metadata !DIExpression()), !dbg !3237
  store i64 %self, i64* %result.dbg.spill, align 8, !dbg !3237
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !3173, metadata !DIExpression()), !dbg !3239
  store i64* %dest, i64** %dst.dbg.spill, align 8, !dbg !3240
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !3184, metadata !DIExpression()), !dbg !3185
  store i64 %src, i64* %src1, align 8, !dbg !3241
  %4 = bitcast i64* %dest to i8*, !dbg !3185
  %5 = bitcast i64* %src1 to i8*, !dbg !3185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !3185
  ret i64 %self, !dbg !3242

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !3243

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3244
  %7 = load i8*, i8** %6, align 8, !dbg !3244
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3244
  %9 = load i32, i32* %8, align 8, !dbg !3244
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !3244
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !3244
  resume { i8*, i32 } %11, !dbg !3244

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !3243
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64* } @_ZN4core3mem7replace17hcdd549a02bb507dfE({ i64, i64* }* align 8 %dest, i64 %src.0, i64* %src.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3245 {
start:
  %dst.dbg.spill = alloca { i64, i64* }*, align 8
  %result.dbg.spill = alloca { i64, i64* }, align 8
  %slot.dbg.spill = alloca { i64, i64* }, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill2 = alloca { i64, i8* }, align 8
  %self.dbg.spill = alloca { i64, i8* }*, align 8
  %src.dbg.spill1 = alloca { i64, i64* }*, align 8
  %src.dbg.spill = alloca { i64, i64* }, align 8
  %dest.dbg.spill = alloca { i64, i64* }*, align 8
  %tmp = alloca { i64, i8* }, align 8
  %src = alloca { i64, i64* }, align 8
  store { i64, i64* }* %dest, { i64, i64* }** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %dest.dbg.spill, metadata !3249, metadata !DIExpression()), !dbg !3255
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %src.dbg.spill, i32 0, i32 0
  store i64 %src.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %src.dbg.spill, i32 0, i32 1
  store i64* %src.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %src.dbg.spill, metadata !3250, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.declare(metadata { i64, i64* }* %src, metadata !3257, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.declare(metadata { i64, i8* }* %tmp, metadata !3267, metadata !DIExpression()), !dbg !3284
  store { i64, i64* }* %dest, { i64, i64* }** %src.dbg.spill1, align 8, !dbg !3286
  call void @llvm.dbg.declare(metadata { i64, i64* }** %src.dbg.spill1, metadata !3275, metadata !DIExpression()), !dbg !3287
  %3 = bitcast { i64, i8* }* %tmp to {}*, !dbg !3288
  store { i64, i8* }* %tmp, { i64, i8* }** %self.dbg.spill, align 8, !dbg !3284
  call void @llvm.dbg.declare(metadata { i64, i8* }** %self.dbg.spill, metadata !3294, metadata !DIExpression()), !dbg !3301
  %_9 = bitcast { i64, i8* }* %tmp to { i64, i64* }*, !dbg !3301
  %4 = bitcast { i64, i64* }* %_9 to i8*, !dbg !3284
  %5 = bitcast { i64, i64* }* %dest to i8*, !dbg !3284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false), !dbg !3284
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0, !dbg !3284
  %self.0 = load i64, i64* %6, align 8, !dbg !3284
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1, !dbg !3284
  %self.1 = load i8*, i8** %7, align 8, !dbg !3284
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill2, i32 0, i32 0, !dbg !3284
  store i64 %self.0, i64* %8, align 8, !dbg !3284
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill2, i32 0, i32 1, !dbg !3284
  store i8* %self.1, i8** %9, align 8, !dbg !3284
  call void @llvm.dbg.declare(metadata { i64, i8* }* %self.dbg.spill2, metadata !3303, metadata !DIExpression()), !dbg !3309
  br label %bb4, !dbg !3309

bb4:                                              ; preds = %start
  %slot.1 = bitcast i8* %self.1 to i64*, !dbg !3309
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 0, !dbg !3309
  store i64 %self.0, i64* %10, align 8, !dbg !3309
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 1, !dbg !3309
  store i64* %slot.1, i64** %11, align 8, !dbg !3309
  call void @llvm.dbg.declare(metadata { i64, i64* }* %slot.dbg.spill, metadata !3311, metadata !DIExpression()), !dbg !3317
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %result.dbg.spill, i32 0, i32 0, !dbg !3317
  store i64 %self.0, i64* %12, align 8, !dbg !3317
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %result.dbg.spill, i32 0, i32 1, !dbg !3317
  store i64* %slot.1, i64** %13, align 8, !dbg !3317
  call void @llvm.dbg.declare(metadata { i64, i64* }* %result.dbg.spill, metadata !3251, metadata !DIExpression()), !dbg !3319
  store { i64, i64* }* %dest, { i64, i64* }** %dst.dbg.spill, align 8, !dbg !3320
  call void @llvm.dbg.declare(metadata { i64, i64* }** %dst.dbg.spill, metadata !3264, metadata !DIExpression()), !dbg !3265
  %14 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %src, i32 0, i32 0, !dbg !3321
  store i64 %src.0, i64* %14, align 8, !dbg !3321
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %src, i32 0, i32 1, !dbg !3321
  store i64* %src.1, i64** %15, align 8, !dbg !3321
  %16 = bitcast { i64, i64* }* %dest to i8*, !dbg !3265
  %17 = bitcast { i64, i64* }* %src to i8*, !dbg !3265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false), !dbg !3265
  %18 = insertvalue { i64, i64* } undef, i64 %self.0, 0, !dbg !3322
  %19 = insertvalue { i64, i64* } %18, i64* %slot.1, 1, !dbg !3322
  ret { i64, i64* } %19, !dbg !3322

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !3323

bb1:                                              ; preds = %bb2, %bb3
  %20 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3324
  %21 = load i8*, i8** %20, align 8, !dbg !3324
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3324
  %23 = load i32, i32* %22, align 8, !dbg !3324
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0, !dbg !3324
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1, !dbg !3324
  resume { i8*, i32 } %25, !dbg !3324

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !3323
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3mem7replace17hda57ce3c37e1415dE(%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* sret(%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>") %result, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* align 8 %dest, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3325 {
start:
  %dst.dbg.spill = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"*, align 8
  %src.dbg.spill = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %dest.dbg.spill = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", align 8
  %src1 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %result, metadata !3332, metadata !DIExpression()), !dbg !3336
  store %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %dest.dbg.spill, metadata !3330, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src, metadata !3331, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src1, metadata !3339, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp, metadata !3349, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %self, metadata !3368, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %slot, metadata !3376, metadata !DIExpression()), !dbg !3382
  store %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %src.dbg.spill, align 8, !dbg !3384
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %src.dbg.spill, metadata !3357, metadata !DIExpression()), !dbg !3385
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp to {}*, !dbg !3386
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"** %self.dbg.spill, align 8, !dbg !3366
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"** %self.dbg.spill, metadata !3392, metadata !DIExpression()), !dbg !3399
  %_9 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !3399
  %2 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_9 to i8*, !dbg !3366
  %3 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest to i8*, !dbg !3366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 32, i1 false), !dbg !3366
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %self to i8*, !dbg !3366
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %tmp to i8*, !dbg !3366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false), !dbg !3366
  br label %bb4, !dbg !3374

bb4:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %self to %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"*, !dbg !3374
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %slot to i8*, !dbg !3374
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %6 to i8*, !dbg !3374
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !dbg !3374
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>"* %slot to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !3382
  %10 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %result to i8*, !dbg !3382
  %11 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %9 to i8*, !dbg !3382
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false), !dbg !3382
  store %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %dst.dbg.spill, align 8, !dbg !3401
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %dst.dbg.spill, metadata !3346, metadata !DIExpression()), !dbg !3347
  %12 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src1 to i8*, !dbg !3402
  %13 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src to i8*, !dbg !3402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false), !dbg !3402
  %14 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %dest to i8*, !dbg !3347
  %15 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %src1 to i8*, !dbg !3347
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 32, i1 false), !dbg !3347
  ret void, !dbg !3403

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !3404

bb1:                                              ; preds = %bb2, %bb3
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3405
  %17 = load i8*, i8** %16, align 8, !dbg !3405
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3405
  %19 = load i32, i32* %18, align 8, !dbg !3405
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !3405
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !3405
  resume { i8*, i32 } %21, !dbg !3405

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !3404
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3624cd181a4fd12eE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !3406 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3408, metadata !DIExpression()), !dbg !3413
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !3409, metadata !DIExpression()), !dbg !3414
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !3415
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !3416, metadata !DIExpression()), !dbg !3429
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !3430
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !3425, metadata !DIExpression()), !dbg !3429
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !3429
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !3429
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !3429
  %6 = zext i1 %5 to i8, !dbg !3429
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !3429
  store i64 %4, i64* %7, align 8, !dbg !3429
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !3429
  store i8 %6, i8* %8, align 8, !dbg !3429
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !3429
  %_13.0 = load i64, i64* %9, align 8, !dbg !3429
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !3429
  %11 = load i8, i8* %10, align 8, !dbg !3429, !range !512, !noundef !23
  %_13.1 = trunc i8 %11 to i1, !dbg !3429
  br label %bb5, !dbg !3429

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !3429
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !3426, metadata !DIExpression()), !dbg !3431
  %12 = zext i1 %_13.1 to i8, !dbg !3429
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !3429
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !3428, metadata !DIExpression()), !dbg !3431
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !3431
  store i64 %_13.0, i64* %13, align 8, !dbg !3431
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !3431
  %15 = zext i1 %_13.1 to i8, !dbg !3431
  store i8 %15, i8* %14, align 8, !dbg !3431
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !3432
  %a = load i64, i64* %16, align 8, !dbg !3432
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !3432
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !3410, metadata !DIExpression()), !dbg !3433
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !3434
  %18 = load i8, i8* %17, align 8, !dbg !3434, !range !512, !noundef !23
  %b = trunc i8 %18 to i1, !dbg !3434
  %19 = zext i1 %b to i8, !dbg !3434
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !3434
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !3412, metadata !DIExpression()), !dbg !3435
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !3436
  %21 = zext i1 %20 to i8, !dbg !3436
  store i8 %21, i8* %0, align 1, !dbg !3436
  %22 = load i8, i8* %0, align 1, !dbg !3436, !range !512, !noundef !23
  %_8 = trunc i8 %22 to i1, !dbg !3436
  br label %bb1, !dbg !3436

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !3436

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3437
  store i64 %a, i64* %23, align 8, !dbg !3437
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !3437
  store i64 1, i64* %24, align 8, !dbg !3437
  br label %bb4, !dbg !3438

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !3439
  store i64 0, i64* %25, align 8, !dbg !3439
  br label %bb4, !dbg !3438

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3440
  %27 = load i64, i64* %26, align 8, !dbg !3440, !range !3441, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3440
  %29 = load i64, i64* %28, align 8, !dbg !3440
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !3440
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !3440
  ret { i64, i64 } %31, !dbg !3440
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3032ae0d07eed7eaE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !3442 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3444, metadata !DIExpression()), !dbg !3449
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !3445, metadata !DIExpression()), !dbg !3450
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !3451
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !3452, metadata !DIExpression()), !dbg !3459
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !3460
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !3455, metadata !DIExpression()), !dbg !3459
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !3459
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !3459
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !3459
  %6 = zext i1 %5 to i8, !dbg !3459
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !3459
  store i64 %4, i64* %7, align 8, !dbg !3459
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !3459
  store i8 %6, i8* %8, align 8, !dbg !3459
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !3459
  %_13.0 = load i64, i64* %9, align 8, !dbg !3459
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !3459
  %11 = load i8, i8* %10, align 8, !dbg !3459, !range !512, !noundef !23
  %_13.1 = trunc i8 %11 to i1, !dbg !3459
  br label %bb5, !dbg !3459

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !3459
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !3456, metadata !DIExpression()), !dbg !3461
  %12 = zext i1 %_13.1 to i8, !dbg !3459
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !3459
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !3458, metadata !DIExpression()), !dbg !3461
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !3461
  store i64 %_13.0, i64* %13, align 8, !dbg !3461
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !3461
  %15 = zext i1 %_13.1 to i8, !dbg !3461
  store i8 %15, i8* %14, align 8, !dbg !3461
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !3462
  %a = load i64, i64* %16, align 8, !dbg !3462
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !3462
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !3446, metadata !DIExpression()), !dbg !3463
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !3464
  %18 = load i8, i8* %17, align 8, !dbg !3464, !range !512, !noundef !23
  %b = trunc i8 %18 to i1, !dbg !3464
  %19 = zext i1 %b to i8, !dbg !3464
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !3464
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !3448, metadata !DIExpression()), !dbg !3465
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !3466
  %21 = zext i1 %20 to i8, !dbg !3466
  store i8 %21, i8* %0, align 1, !dbg !3466
  %22 = load i8, i8* %0, align 1, !dbg !3466, !range !512, !noundef !23
  %_8 = trunc i8 %22 to i1, !dbg !3466
  br label %bb1, !dbg !3466

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !3466

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3467
  store i64 %a, i64* %23, align 8, !dbg !3467
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !3467
  store i64 1, i64* %24, align 8, !dbg !3467
  br label %bb4, !dbg !3468

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !3469
  store i64 0, i64* %25, align 8, !dbg !3469
  br label %bb4, !dbg !3468

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3470
  %27 = load i64, i64* %26, align 8, !dbg !3470, !range !3441, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3470
  %29 = load i64, i64* %28, align 8, !dbg !3470
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !3470
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !3470
  ret { i64, i64 } %31, !dbg !3470
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core3ops8function5FnMut8call_mut17h263dca5034dc8e70E({}* align 1 %_1, i64 %0, i64 %1) unnamed_addr #0 !dbg !3471 {
start:
  %_1.dbg.spill = alloca {}*, align 8
  %_2 = alloca { i64, i64 }, align 8
  %2 = bitcast { i64, i64 }* %_2 to i64*
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store {}* %_1, {}** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_1.dbg.spill, metadata !3479, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.declare(metadata { i64, i64 }* %_2, metadata !3481, metadata !DIExpression()), !dbg !3485
  %4 = bitcast { i64, i64 }* %_2 to i64*, !dbg !3485
  %5 = load i64, i64* %4, align 8, !dbg !3485
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !3485
  %7 = load i64, i64* %6, align 8, !dbg !3485
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3624cd181a4fd12eE"(i64 %5, i64 %7), !dbg !3485
  %9 = extractvalue { i64, i64 } %8, 0, !dbg !3485
  %10 = extractvalue { i64, i64 } %8, 1, !dbg !3485
  br label %bb1, !dbg !3485

bb1:                                              ; preds = %start
  %11 = insertvalue { i64, i64 } undef, i64 %9, 0, !dbg !3485
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1, !dbg !3485
  ret { i64, i64 } %12, !dbg !3485
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h707c8e4717864377E"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %self, { [0 x i8]*, i64 }* align 8 %0) unnamed_addr #1 !dbg !3486 {
start:
  %self.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, align 8
  %args = alloca i64*, align 8
  %1 = bitcast i64** %args to { [0 x i8]*, i64 }**
  store { [0 x i8]*, i64 }* %0, { [0 x i8]*, i64 }** %1, align 8
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %self, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %self.dbg.spill, metadata !3498, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.declare(metadata i64** %args, metadata !3499, metadata !DIExpression()), !dbg !3507
  %_4 = load i64*, i64** %args, align 8, !dbg !3508, !nonnull !23, !align !584, !noundef !23
  %2 = bitcast i64* %_4 to { [0 x i8]*, i64 }*, !dbg !3509
; call alloc::str::join_generic_copy::{{closure}}
  %3 = call { [0 x i8]*, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h2d47737fcc58c300E"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %self, { [0 x i8]*, i64 }* align 8 %2), !dbg !3509
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3509
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3509
  br label %bb1, !dbg !3509

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !3510
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !3510
  ret { [0 x i8]*, i64 } %7, !dbg !3510
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h3c2f1caed72981f4E"(i64** %_1) unnamed_addr #0 !dbg !3511 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  %_2 = alloca {}, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !3517, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !3518, metadata !DIExpression()), !dbg !3522
  %0 = load i64*, i64** %_1, align 8, !dbg !3522, !nonnull !23, !noundef !23
; call core::ops::function::FnOnce::call_once
  %1 = call i32 @_ZN4core3ops8function6FnOnce9call_once17h21cfed8141e90430E(i64* %0), !dbg !3522
  br label %bb1, !dbg !3522

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !3522
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17h21cfed8141e90430E(i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3523 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !3527, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !3528, metadata !DIExpression()), !dbg !3529
; invoke std::rt::lang_start::{{closure}}
  %2 = invoke i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha250cad3a78ce847E"(i64** align 8 %_1)
          to label %bb1 unwind label %cleanup, !dbg !3529

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !3529

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !3529

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %1 to i8**, !dbg !3529
  %9 = load i8*, i8** %8, align 8, !dbg !3529
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !3529
  %11 = load i32, i32* %10, align 8, !dbg !3529
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !3529
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !3529
  resume { i8*, i32 } %13, !dbg !3529

bb2:                                              ; preds = %bb1
  ret i32 %2, !dbg !3529
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h5f346be4eda2d72eE(void ()* %_1) unnamed_addr #0 !dbg !3530 {
start:
  %_1.dbg.spill = alloca void ()*, align 8
  %_2 = alloca {}, align 1
  store void ()* %_1, void ()** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %_1.dbg.spill, metadata !3532, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !3533, metadata !DIExpression()), !dbg !3536
  call void %_1(), !dbg !3536
  br label %bb1, !dbg !3536

bb1:                                              ; preds = %start
  ret void, !dbg !3536
}

; core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17hd88a457266cabe3aE"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1) unnamed_addr #1 !dbg !3537 {
start:
  %_1.dbg.spill = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"*, align 8
  store %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1, %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"** %_1.dbg.spill, metadata !3542, metadata !DIExpression()), !dbg !3543
  %0 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to i8*, !dbg !3543
  %1 = load i8, i8* %0, align 8, !dbg !3543, !range !3544, !noundef !23
  %_2 = zext i8 %1 to i64, !dbg !3543
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ], !dbg !3543

bb2:                                              ; preds = %start
  %2 = bitcast %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_1 to %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"*, !dbg !3543
  %3 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom"* %2, i32 0, i32 1, !dbg !3543
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hedbc1b722e94a535E"(%"std::io::error::Custom"** %3), !dbg !3543
  br label %bb1, !dbg !3543

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void, !dbg !3543
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h7a73d68e8a63a3eeE"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3545 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %_1, { {}*, [3 x i64]* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %_1.dbg.spill, metadata !3550, metadata !DIExpression()), !dbg !3553
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3553
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*, !dbg !3553
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !3553
  %4 = load {}*, {}** %3, align 8, !dbg !3553
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !3553
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !dbg !3553, !nonnull !23, !align !584, !noundef !23
  %7 = bitcast [3 x i64]* %6 to void ({}*)**, !dbg !3553
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0, !dbg !3553
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !dbg !3553, !invariant.load !23, !nonnull !23
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup, !dbg !3553

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3553
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0, !dbg !3553
  %12 = load i8*, i8** %11, align 8, !dbg !3553, !nonnull !23, !noundef !23
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1, !dbg !3553
  %14 = load i64*, i64** %13, align 8, !dbg !3553, !nonnull !23, !align !584, !noundef !23
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17h703b187b3615a7b3E(i8* %12, i64* align 8 %14) #16
          to label %bb2 unwind label %abort, !dbg !3553

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3553
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0, !dbg !3553
  %22 = load i8*, i8** %21, align 8, !dbg !3553, !nonnull !23, !noundef !23
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1, !dbg !3553
  %24 = load i64*, i64** %23, align 8, !dbg !3553, !nonnull !23, !align !584, !noundef !23
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h703b187b3615a7b3E(i8* %22, i64* align 8 %24), !dbg !3553
  br label %bb1, !dbg !3553

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !3553
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3553
  unreachable, !dbg !3553

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3553
  %27 = load i8*, i8** %26, align 8, !dbg !3553
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3553
  %29 = load i32, i32* %28, align 8, !dbg !3553
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !3553
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !3553
  resume { i8*, i32 } %31, !dbg !3553

bb1:                                              ; preds = %bb3
  ret void, !dbg !3553
}

; core::ptr::drop_in_place<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h1e60537dafd513eeE"(%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_1) unnamed_addr #1 !dbg !3554 {
start:
  %_1.dbg.spill = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  store %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_1, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_1.dbg.spill, metadata !3559, metadata !DIExpression()), !dbg !3560
; call <alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop
  call void @"_ZN99_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9b975583e5441ae1E"(%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_1), !dbg !3560
  br label %bb1, !dbg !3560

bb1:                                              ; preds = %start
  ret void, !dbg !3560
}

; core::ptr::drop_in_place<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..IntoIter$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h818fbd173477ac4fE"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_1) unnamed_addr #1 !dbg !3561 {
start:
  %_1.dbg.spill = alloca %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  store %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_1, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_1.dbg.spill, metadata !3566, metadata !DIExpression()), !dbg !3569
; call <alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop
  call void @"_ZN99_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha7ce146287e506ffE"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_1), !dbg !3569
  br label %bb1, !dbg !3569

bb1:                                              ; preds = %start
  ret void, !dbg !3569
}

; core::ptr::drop_in_place<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr203drop_in_place$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h587c7f485e27e66aE"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #1 !dbg !3570 {
start:
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 0
  store {}* %_1.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 1
  store [3 x i64]* %_1.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %_1.dbg.spill, metadata !3578, metadata !DIExpression()), !dbg !3581
  %2 = bitcast [3 x i64]* %_1.1 to void ({}*)**, !dbg !3581
  %3 = getelementptr inbounds void ({}*)*, void ({}*)** %2, i64 0, !dbg !3581
  %4 = load void ({}*)*, void ({}*)** %3, align 8, !dbg !3581, !invariant.load !23, !nonnull !23
  call void %4({}* %_1.0), !dbg !3581
  br label %bb1, !dbg !3581

bb1:                                              ; preds = %start
  ret void, !dbg !3581
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h9eb861c09485f364E"({ {}*, [3 x i64]* }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3582 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  store { {}*, [3 x i64]* }* %_1, { {}*, [3 x i64]* }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %_1.dbg.spill, metadata !3587, metadata !DIExpression()), !dbg !3588
  %1 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3588
  %2 = bitcast { i8*, i64* }* %1 to { {}*, [3 x i64]* }*, !dbg !3588
  %3 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 0, !dbg !3588
  %4 = load {}*, {}** %3, align 8, !dbg !3588
  %5 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %2, i32 0, i32 1, !dbg !3588
  %6 = load [3 x i64]*, [3 x i64]** %5, align 8, !dbg !3588, !nonnull !23, !align !584, !noundef !23
  %7 = bitcast [3 x i64]* %6 to void ({}*)**, !dbg !3588
  %8 = getelementptr inbounds void ({}*)*, void ({}*)** %7, i64 0, !dbg !3588
  %9 = load void ({}*)*, void ({}*)** %8, align 8, !dbg !3588, !invariant.load !23, !nonnull !23
  invoke void %9({}* %4)
          to label %bb3 unwind label %cleanup, !dbg !3588

bb4:                                              ; preds = %cleanup
  %10 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3588
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 0, !dbg !3588
  %12 = load i8*, i8** %11, align 8, !dbg !3588, !nonnull !23, !noundef !23
  %13 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %10, i32 0, i32 1, !dbg !3588
  %14 = load i64*, i64** %13, align 8, !dbg !3588, !nonnull !23, !align !584, !noundef !23
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hf5ecefe57bddb78cE(i8* %12, i64* align 8 %14) #16
          to label %bb2 unwind label %abort, !dbg !3588

cleanup:                                          ; preds = %start
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %20 = bitcast { {}*, [3 x i64]* }* %_1 to { i8*, i64* }*, !dbg !3588
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 0, !dbg !3588
  %22 = load i8*, i8** %21, align 8, !dbg !3588, !nonnull !23, !noundef !23
  %23 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %20, i32 0, i32 1, !dbg !3588
  %24 = load i64*, i64** %23, align 8, !dbg !3588, !nonnull !23, !align !584, !noundef !23
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hf5ecefe57bddb78cE(i8* %22, i64* align 8 %24), !dbg !3588
  br label %bb1, !dbg !3588

abort:                                            ; preds = %bb4
  %25 = landingpad { i8*, i32 }
          cleanup, !dbg !3588
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3588
  unreachable, !dbg !3588

bb2:                                              ; preds = %bb4
  %26 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3588
  %27 = load i8*, i8** %26, align 8, !dbg !3588
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3588
  %29 = load i32, i32* %28, align 8, !dbg !3588
  %30 = insertvalue { i8*, i32 } undef, i8* %27, 0, !dbg !3588
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1, !dbg !3588
  resume { i8*, i32 } %31, !dbg !3588

bb1:                                              ; preds = %bb3
  ret void, !dbg !3588
}

; core::ptr::drop_in_place<[alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>]>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr238drop_in_place$LT$$u5b$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u5d$$GT$17h4422a65083af32a9E"([0 x { {}*, [3 x i64]* }]* %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3589 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x { {}*, [3 x i64]* }]*, i64 }, align 8
  %_9 = alloca { {}*, [3 x i64]* }*, align 8
  %_4 = alloca i64, align 8
  %1 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %_1.dbg.spill, i32 0, i32 0
  store [0 x { {}*, [3 x i64]* }]* %_1.0, [0 x { {}*, [3 x i64]* }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %_1.dbg.spill, i32 0, i32 1
  store i64 %_1.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { {}*, [3 x i64]* }]*, i64 }* %_1.dbg.spill, metadata !3598, metadata !DIExpression()), !dbg !3599
  br i1 false, label %bb7, label %bb12, !dbg !3599

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8, !dbg !3599
  br label %bb6, !dbg !3599

bb12:                                             ; preds = %start
  %3 = bitcast [0 x { {}*, [3 x i64]* }]* %_1.0 to { {}*, [3 x i64]* }*, !dbg !3599
  store { {}*, [3 x i64]* }* %3, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
  %4 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
  %_10 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %4, i64 %_1.1, !dbg !3599
  br label %bb11, !dbg !3599

bb11:                                             ; preds = %bb10, %bb12
  %5 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
  %_14 = icmp eq { {}*, [3 x i64]* }* %5, %_10, !dbg !3599
  br i1 %_14, label %bb1, label %bb10, !dbg !3599

bb10:                                             ; preds = %bb11
  %_13 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
  %6 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
  %7 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %6, i64 1, !dbg !3599
  store { {}*, [3 x i64]* }* %7, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h9eb861c09485f364E"({ {}*, [3 x i64]* }* %_13)
          to label %bb11 unwind label %cleanup, !dbg !3599

bb1:                                              ; preds = %bb6, %bb11
  ret void, !dbg !3599

bb9:                                              ; preds = %bb8, %cleanup
  %8 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
  %_12 = icmp eq { {}*, [3 x i64]* }* %8, %_10, !dbg !3599
  br i1 %_12, label %bb2, label %bb8, !dbg !3599

cleanup:                                          ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
  %14 = load { {}*, [3 x i64]* }*, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
  %15 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %14, i64 1, !dbg !3599
  store { {}*, [3 x i64]* }* %15, { {}*, [3 x i64]* }** %_9, align 8, !dbg !3599
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h9eb861c09485f364E"({ {}*, [3 x i64]* }* %_11) #16
          to label %bb9 unwind label %abort, !dbg !3599

bb2:                                              ; preds = %bb4, %bb9
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3599
  %17 = load i8*, i8** %16, align 8, !dbg !3599
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3599
  %19 = load i32, i32* %18, align 8, !dbg !3599
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !3599
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !3599
  resume { i8*, i32 } %21, !dbg !3599

abort:                                            ; preds = %bb3, %bb8
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !3599
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3599
  unreachable, !dbg !3599

bb6:                                              ; preds = %bb5, %bb7
  %23 = load i64, i64* %_4, align 8, !dbg !3599
  %_8 = icmp eq i64 %23, %_1.1, !dbg !3599
  br i1 %_8, label %bb1, label %bb5, !dbg !3599

bb5:                                              ; preds = %bb6
  %24 = load i64, i64* %_4, align 8, !dbg !3599
  %_7 = getelementptr inbounds [0 x { {}*, [3 x i64]* }], [0 x { {}*, [3 x i64]* }]* %_1.0, i64 0, i64 %24, !dbg !3599
  %25 = load i64, i64* %_4, align 8, !dbg !3599
  %26 = add i64 %25, 1, !dbg !3599
  store i64 %26, i64* %_4, align 8, !dbg !3599
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h9eb861c09485f364E"({ {}*, [3 x i64]* }* %_7)
          to label %bb6 unwind label %cleanup1, !dbg !3599

bb4:                                              ; preds = %bb3, %cleanup1
  %27 = load i64, i64* %_4, align 8, !dbg !3599
  %_6 = icmp eq i64 %27, %_1.1, !dbg !3599
  br i1 %_6, label %bb2, label %bb3, !dbg !3599

cleanup1:                                         ; preds = %bb5
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %33 = load i64, i64* %_4, align 8, !dbg !3599
  %_5 = getelementptr inbounds [0 x { {}*, [3 x i64]* }], [0 x { {}*, [3 x i64]* }]* %_1.0, i64 0, i64 %33, !dbg !3599
  %34 = load i64, i64* %_4, align 8, !dbg !3599
  %35 = add i64 %34, 1, !dbg !3599
  store i64 %35, i64* %_4, align 8, !dbg !3599
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h9eb861c09485f364E"({ {}*, [3 x i64]* }* %_5) #16
          to label %bb4 unwind label %abort, !dbg !3599
}

; core::ptr::drop_in_place<<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr250drop_in_place$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$C$alloc..alloc..Global$GT$$GT$17h029ebd041840b249E"(i64** %_1) unnamed_addr #1 !dbg !3600 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !3605, metadata !DIExpression()), !dbg !3608
; call <<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<K,V,A> as core::ops::drop::Drop>::drop
  call void @"_ZN174_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hded606778ae165c8E"(i64** align 8 %_1), !dbg !3608
  br label %bb1, !dbg !3608

bb1:                                              ; preds = %start
  ret void, !dbg !3608
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17ha74d07525bbc13d6E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3609 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"*, align 8
  store %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %_1, %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %_1.dbg.spill, metadata !3614, metadata !DIExpression()), !dbg !3617
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h463cdfb33676b2f8E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3617

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %_1 to { i64*, i64 }*, !dbg !3617
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  invoke void @"_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h0f9a0176c5f2a35fE"({ i64*, i64 }* %1) #16
          to label %bb1 unwind label %abort, !dbg !3617

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %_1 to { i64*, i64 }*, !dbg !3617
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  call void @"_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h0f9a0176c5f2a35fE"({ i64*, i64 }* %7), !dbg !3617
  br label %bb2, !dbg !3617

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3617
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3617
  unreachable, !dbg !3617

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3617
  %10 = load i8*, i8** %9, align 8, !dbg !3617
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3617
  %12 = load i32, i32* %11, align 8, !dbg !3617
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3617
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3617
  resume { i8*, i32 } %14, !dbg !3617

bb2:                                              ; preds = %bb4
  ret void, !dbg !3617
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h0f9a0176c5f2a35fE"({ i64*, i64 }* %_1) unnamed_addr #1 !dbg !3618 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !3623, metadata !DIExpression()), !dbg !3626
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hacdcb6083e4f06ffE"({ i64*, i64 }* align 8 %_1), !dbg !3626
  br label %bb1, !dbg !3626

bb1:                                              ; preds = %start
  ret void, !dbg !3626
}

; core::ptr::drop_in_place<&&str>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr32drop_in_place$LT$$RF$$RF$str$GT$17hf0fb5c2cb3a8d8dbE"({ [0 x i8]*, i64 }** %_1) unnamed_addr #0 !dbg !3627 {
start:
  %_1.dbg.spill = alloca { [0 x i8]*, i64 }**, align 8
  store { [0 x i8]*, i64 }** %_1, { [0 x i8]*, i64 }*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }*** %_1.dbg.spill, metadata !3632, metadata !DIExpression()), !dbg !3633
  ret void, !dbg !3633
}

; core::ptr::drop_in_place<std::env::VarError>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17h371bdcb895803ce5E"(%"std::env::VarError"* %_1) unnamed_addr #1 !dbg !3634 {
start:
  %_1.dbg.spill = alloca %"std::env::VarError"*, align 8
  store %"std::env::VarError"* %_1, %"std::env::VarError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::env::VarError"** %_1.dbg.spill, metadata !3639, metadata !DIExpression()), !dbg !3642
  %0 = bitcast %"std::env::VarError"* %_1 to {}**, !dbg !3642
  %1 = load {}*, {}** %0, align 8, !dbg !3642
  %2 = icmp eq {}* %1, null, !dbg !3642
  %_2 = select i1 %2, i64 0, i64 1, !dbg !3642
  %3 = icmp eq i64 %_2, 0, !dbg !3642
  br i1 %3, label %bb1, label %bb2, !dbg !3642

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3642

bb2:                                              ; preds = %start
  %4 = bitcast %"std::env::VarError"* %_1 to %"std::env::VarError::NotUnicode"*, !dbg !3642
  %5 = bitcast %"std::env::VarError::NotUnicode"* %4 to %"std::ffi::os_str::OsString"*, !dbg !3642
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %5), !dbg !3642
  br label %bb1, !dbg !3642
}

; core::ptr::drop_in_place<std::process::Output>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h8f570cd6e5742122E"(%"std::process::Output"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3643 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"std::process::Output"*, align 8
  store %"std::process::Output"* %_1, %"std::process::Output"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::process::Output"** %_1.dbg.spill, metadata !3660, metadata !DIExpression()), !dbg !3663
  %1 = bitcast %"std::process::Output"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !3663
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %1)
          to label %bb4 unwind label %cleanup, !dbg !3663

bb3:                                              ; preds = %cleanup
  %2 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %_1, i32 0, i32 1, !dbg !3663
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %2) #16
          to label %bb1 unwind label %abort, !dbg !3663

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %_1, i32 0, i32 1, !dbg !3663
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %8), !dbg !3663
  br label %bb2, !dbg !3663

abort:                                            ; preds = %bb3
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !3663
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3663
  unreachable, !dbg !3663

bb1:                                              ; preds = %bb3
  %10 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3663
  %11 = load i8*, i8** %10, align 8, !dbg !3663
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3663
  %13 = load i32, i32* %12, align 8, !dbg !3663
  %14 = insertvalue { i8*, i32 } undef, i8* %11, 0, !dbg !3663
  %15 = insertvalue { i8*, i32 } %14, i32 %13, 1, !dbg !3663
  resume { i8*, i32 } %15, !dbg !3663

bb2:                                              ; preds = %bb4
  ret void, !dbg !3663
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %_1) unnamed_addr #1 !dbg !3664 {
start:
  %_1.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %_1, %"alloc::string::String"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %_1.dbg.spill, metadata !3669, metadata !DIExpression()), !dbg !3670
  %0 = bitcast %"alloc::string::String"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !3670
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %0), !dbg !3670
  br label %bb1, !dbg !3670

bb1:                                              ; preds = %start
  ret void, !dbg !3670
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hb5924639660c528dE"(i8** %_1) unnamed_addr #1 !dbg !3671 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !3676, metadata !DIExpression()), !dbg !3679
; call core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17hf238a55dcd5bc0d8E"(i8** %_1), !dbg !3679
  br label %bb1, !dbg !3679

bb1:                                              ; preds = %start
  ret void, !dbg !3679
}

; core::ptr::drop_in_place<std::process::Command>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %_1) unnamed_addr #1 !dbg !3680 {
start:
  %_1.dbg.spill = alloca %"std::process::Command"*, align 8
  store %"std::process::Command"* %_1, %"std::process::Command"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::process::Command"** %_1.dbg.spill, metadata !3685, metadata !DIExpression()), !dbg !3688
  %0 = bitcast %"std::process::Command"* %_1 to %"std::sys::unix::process::process_common::Command"*, !dbg !3688
; call core::ptr::drop_in_place<std::sys::unix::process::process_common::Command>
  call void @"_ZN4core3ptr69drop_in_place$LT$std..sys..unix..process..process_common..Command$GT$17h11ce9fcf49ad8669E"(%"std::sys::unix::process::process_common::Command"* %0), !dbg !3688
  br label %bb1, !dbg !3688

bb1:                                              ; preds = %start
  ret void, !dbg !3688
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h3284e708e170caddE"(%"std::io::error::Custom"* %_1) unnamed_addr #1 !dbg !3689 {
start:
  %_1.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  store %"std::io::error::Custom"* %_1, %"std::io::error::Custom"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %_1.dbg.spill, metadata !3693, metadata !DIExpression()), !dbg !3696
  %0 = bitcast %"std::io::error::Custom"* %_1 to { {}*, [3 x i64]* }*, !dbg !3696
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn std::error::Error+core::marker::Send+core::marker::Sync>>
  call void @"_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h7a73d68e8a63a3eeE"({ {}*, [3 x i64]* }* %0), !dbg !3696
  br label %bb1, !dbg !3696

bb1:                                              ; preds = %start
  ret void, !dbg !3696
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3697 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %_1, %"alloc::vec::Vec<u8>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %_1.dbg.spill, metadata !3702, metadata !DIExpression()), !dbg !3705
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h01da44811e7732aeE"(%"alloc::vec::Vec<u8>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3705

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !3705
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hc9a842026c3c109eE"({ i8*, i64 }* %1) #16
          to label %bb1 unwind label %abort, !dbg !3705

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !3705
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hc9a842026c3c109eE"({ i8*, i64 }* %7), !dbg !3705
  br label %bb2, !dbg !3705

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3705
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3705
  unreachable, !dbg !3705

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3705
  %10 = load i8*, i8** %9, align 8, !dbg !3705
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3705
  %12 = load i32, i32* %11, align 8, !dbg !3705
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3705
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3705
  resume { i8*, i32 } %14, !dbg !3705

bb2:                                              ; preds = %bb4
  ret void, !dbg !3705
}

; core::ptr::drop_in_place<alloc::ffi::c_str::CString>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hbe4f4b40e09a24caE"({ i8*, i64 }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3706 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !3711, metadata !DIExpression()), !dbg !3712
; invoke <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
  invoke void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17he8a0e41e7ccbaa0aE"({ i8*, i64 }* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3712

bb3:                                              ; preds = %cleanup
  %1 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !3712
; invoke core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h3979a13cd804d08cE"({ [0 x i8]*, i64 }* %1) #16
          to label %bb1 unwind label %abort, !dbg !3712

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast { i8*, i64 }* %_1 to { [0 x i8]*, i64 }*, !dbg !3712
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h3979a13cd804d08cE"({ [0 x i8]*, i64 }* %7), !dbg !3712
  br label %bb2, !dbg !3712

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3712
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3712
  unreachable, !dbg !3712

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3712
  %10 = load i8*, i8** %9, align 8, !dbg !3712
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3712
  %12 = load i32, i32* %11, align 8, !dbg !3712
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3712
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3712
  resume { i8*, i32 } %14, !dbg !3712

bb2:                                              ; preds = %bb4
  ret void, !dbg !3712
}

; core::ptr::drop_in_place<std::ffi::os_str::OsString>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %_1) unnamed_addr #1 !dbg !3713 {
start:
  %_1.dbg.spill = alloca %"std::ffi::os_str::OsString"*, align 8
  store %"std::ffi::os_str::OsString"* %_1, %"std::ffi::os_str::OsString"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %_1.dbg.spill, metadata !3717, metadata !DIExpression()), !dbg !3718
  %0 = bitcast %"std::ffi::os_str::OsString"* %_1 to %"std::sys::unix::os_str::Buf"*, !dbg !3718
; call core::ptr::drop_in_place<std::sys::unix::os_str::Buf>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..sys..unix..os_str..Buf$GT$17hc68db956ffa81994E"(%"std::sys::unix::os_str::Buf"* %0), !dbg !3718
  br label %bb1, !dbg !3718

bb1:                                              ; preds = %start
  ret void, !dbg !3718
}

; core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17hfdd6a2d00d4ea053E"(i32* %_1) unnamed_addr #1 !dbg !3719 {
start:
  %_1.dbg.spill = alloca i32*, align 8
  store i32* %_1, i32** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %_1.dbg.spill, metadata !3724, metadata !DIExpression()), !dbg !3727
; call <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
  call void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8a4c2bd86d948212E"(i32* align 4 %_1), !dbg !3727
  br label %bb1, !dbg !3727

bb1:                                              ; preds = %start
  ret void, !dbg !3727
}

; core::ptr::drop_in_place<std::sys::unix::os_str::Buf>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$std..sys..unix..os_str..Buf$GT$17hc68db956ffa81994E"(%"std::sys::unix::os_str::Buf"* %_1) unnamed_addr #1 !dbg !3728 {
start:
  %_1.dbg.spill = alloca %"std::sys::unix::os_str::Buf"*, align 8
  store %"std::sys::unix::os_str::Buf"* %_1, %"std::sys::unix::os_str::Buf"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::os_str::Buf"** %_1.dbg.spill, metadata !3733, metadata !DIExpression()), !dbg !3736
  %0 = bitcast %"std::sys::unix::os_str::Buf"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !3736
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %0), !dbg !3736
  br label %bb1, !dbg !3736

bb1:                                              ; preds = %start
  ret void, !dbg !3736
}

; core::ptr::drop_in_place<alloc::string::FromUtf8Error>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17hd8c00ca92f8a6ec7E"(%"alloc::string::FromUtf8Error"* %_1) unnamed_addr #1 !dbg !3737 {
start:
  %_1.dbg.spill = alloca %"alloc::string::FromUtf8Error"*, align 8
  store %"alloc::string::FromUtf8Error"* %_1, %"alloc::string::FromUtf8Error"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::FromUtf8Error"** %_1.dbg.spill, metadata !3762, metadata !DIExpression()), !dbg !3765
  %0 = bitcast %"alloc::string::FromUtf8Error"* %_1 to %"alloc::vec::Vec<u8>"*, !dbg !3765
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %0), !dbg !3765
  br label %bb1, !dbg !3765

bb1:                                              ; preds = %start
  ret void, !dbg !3765
}

; core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17h5b4c5b75ab8c65d5E"(i32* %_1) unnamed_addr #1 !dbg !3766 {
start:
  %_1.dbg.spill = alloca i32*, align 8
  store i32* %_1, i32** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %_1.dbg.spill, metadata !3771, metadata !DIExpression()), !dbg !3774
; call core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17hfdd6a2d00d4ea053E"(i32* %_1), !dbg !3774
  br label %bb1, !dbg !3774

bb1:                                              ; preds = %start
  ret void, !dbg !3774
}

; core::ptr::drop_in_place<alloc::borrow::Cow<str>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h608c52efd9ce7c6cE"(%"alloc::borrow::Cow<str>"* %_1) unnamed_addr #1 !dbg !3775 {
start:
  %_1.dbg.spill = alloca %"alloc::borrow::Cow<str>"*, align 8
  store %"alloc::borrow::Cow<str>"* %_1, %"alloc::borrow::Cow<str>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<str>"** %_1.dbg.spill, metadata !3780, metadata !DIExpression()), !dbg !3781
  %0 = bitcast %"alloc::borrow::Cow<str>"* %_1 to i64*, !dbg !3781
  %_2 = load i64, i64* %0, align 8, !dbg !3781, !range !3441, !noundef !23
  %1 = icmp eq i64 %_2, 0, !dbg !3781
  br i1 %1, label %bb1, label %bb2, !dbg !3781

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3781

bb2:                                              ; preds = %start
  %2 = bitcast %"alloc::borrow::Cow<str>"* %_1 to %"alloc::borrow::Cow<str>::Owned"*, !dbg !3781
  %3 = getelementptr inbounds %"alloc::borrow::Cow<str>::Owned", %"alloc::borrow::Cow<str>::Owned"* %2, i32 0, i32 1, !dbg !3781
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %3), !dbg !3781
  br label %bb1, !dbg !3781
}

; core::ptr::drop_in_place<core::num::error::ParseIntError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17h6a56c174e9ffbc8eE"(i8* %_1) unnamed_addr #0 !dbg !3782 {
start:
  %_1.dbg.spill = alloca i8*, align 8
  store i8* %_1, i8** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %_1.dbg.spill, metadata !3787, metadata !DIExpression()), !dbg !3790
  ret void, !dbg !3790
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hc9a842026c3c109eE"({ i8*, i64 }* %_1) unnamed_addr #1 !dbg !3791 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !3796, metadata !DIExpression()), !dbg !3799
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h42b6e46e2ad84c19E"({ i8*, i64 }* align 8 %_1), !dbg !3799
  br label %bb1, !dbg !3799

bb1:                                              ; preds = %start
  ret void, !dbg !3799
}

; core::ptr::drop_in_place<[alloc::ffi::c_str::CString]>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr57drop_in_place$LT$$u5b$alloc..ffi..c_str..CString$u5d$$GT$17hdb4dd38c7432c3a5E"([0 x { i8*, i64 }]* %_1.0, i64 %_1.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3800 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x { i8*, i64 }]*, i64 }, align 8
  %_9 = alloca { i8*, i64 }*, align 8
  %_4 = alloca i64, align 8
  %1 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %_1.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64 }]* %_1.0, [0 x { i8*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %_1.dbg.spill, i32 0, i32 1
  store i64 %_1.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64 }]*, i64 }* %_1.dbg.spill, metadata !3809, metadata !DIExpression()), !dbg !3810
  br i1 false, label %bb7, label %bb12, !dbg !3810

bb7:                                              ; preds = %start
  store i64 0, i64* %_4, align 8, !dbg !3810
  br label %bb6, !dbg !3810

bb12:                                             ; preds = %start
  %3 = bitcast [0 x { i8*, i64 }]* %_1.0 to { i8*, i64 }*, !dbg !3810
  store { i8*, i64 }* %3, { i8*, i64 }** %_9, align 8, !dbg !3810
  %4 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3810
  %_10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i64 %_1.1, !dbg !3810
  br label %bb11, !dbg !3810

bb11:                                             ; preds = %bb10, %bb12
  %5 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3810
  %_14 = icmp eq { i8*, i64 }* %5, %_10, !dbg !3810
  br i1 %_14, label %bb1, label %bb10, !dbg !3810

bb10:                                             ; preds = %bb11
  %_13 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3810
  %6 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3810
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i64 1, !dbg !3810
  store { i8*, i64 }* %7, { i8*, i64 }** %_9, align 8, !dbg !3810
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hbe4f4b40e09a24caE"({ i8*, i64 }* %_13)
          to label %bb11 unwind label %cleanup, !dbg !3810

bb1:                                              ; preds = %bb6, %bb11
  ret void, !dbg !3810

bb9:                                              ; preds = %bb8, %cleanup
  %8 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3810
  %_12 = icmp eq { i8*, i64 }* %8, %_10, !dbg !3810
  br i1 %_12, label %bb2, label %bb8, !dbg !3810

cleanup:                                          ; preds = %bb10
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = extractvalue { i8*, i32 } %9, 1
  %12 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %11, i32* %13, align 8
  br label %bb9

bb8:                                              ; preds = %bb9
  %_11 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3810
  %14 = load { i8*, i64 }*, { i8*, i64 }** %_9, align 8, !dbg !3810
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %14, i64 1, !dbg !3810
  store { i8*, i64 }* %15, { i8*, i64 }** %_9, align 8, !dbg !3810
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hbe4f4b40e09a24caE"({ i8*, i64 }* %_11) #16
          to label %bb9 unwind label %abort, !dbg !3810

bb2:                                              ; preds = %bb4, %bb9
  %16 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3810
  %17 = load i8*, i8** %16, align 8, !dbg !3810
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3810
  %19 = load i32, i32* %18, align 8, !dbg !3810
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !3810
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !3810
  resume { i8*, i32 } %21, !dbg !3810

abort:                                            ; preds = %bb3, %bb8
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !3810
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3810
  unreachable, !dbg !3810

bb6:                                              ; preds = %bb5, %bb7
  %23 = load i64, i64* %_4, align 8, !dbg !3810
  %_8 = icmp eq i64 %23, %_1.1, !dbg !3810
  br i1 %_8, label %bb1, label %bb5, !dbg !3810

bb5:                                              ; preds = %bb6
  %24 = load i64, i64* %_4, align 8, !dbg !3810
  %_7 = getelementptr inbounds [0 x { i8*, i64 }], [0 x { i8*, i64 }]* %_1.0, i64 0, i64 %24, !dbg !3810
  %25 = load i64, i64* %_4, align 8, !dbg !3810
  %26 = add i64 %25, 1, !dbg !3810
  store i64 %26, i64* %_4, align 8, !dbg !3810
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hbe4f4b40e09a24caE"({ i8*, i64 }* %_7)
          to label %bb6 unwind label %cleanup1, !dbg !3810

bb4:                                              ; preds = %bb3, %cleanup1
  %27 = load i64, i64* %_4, align 8, !dbg !3810
  %_6 = icmp eq i64 %27, %_1.1, !dbg !3810
  br i1 %_6, label %bb2, label %bb3, !dbg !3810

cleanup1:                                         ; preds = %bb5
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %33 = load i64, i64* %_4, align 8, !dbg !3810
  %_5 = getelementptr inbounds [0 x { i8*, i64 }], [0 x { i8*, i64 }]* %_1.0, i64 0, i64 %33, !dbg !3810
  %34 = load i64, i64* %_4, align 8, !dbg !3810
  %35 = add i64 %34, 1, !dbg !3810
  store i64 %35, i64* %_4, align 8, !dbg !3810
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hbe4f4b40e09a24caE"({ i8*, i64 }* %_5) #16
          to label %bb4 unwind label %abort, !dbg !3810
}

; core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17hf238a55dcd5bc0d8E"(i8** %_1) unnamed_addr #1 !dbg !3811 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !3816, metadata !DIExpression()), !dbg !3819
; call <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
  call void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h65a8325589ab0e8aE"(i8** align 8 %_1), !dbg !3819
  br label %bb1, !dbg !3819

bb1:                                              ; preds = %start
  ret void, !dbg !3819
}

; core::ptr::drop_in_place<std::sys_common::process::CommandEnv>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h2d46c7b5a8107923E"(%"std::sys_common::process::CommandEnv"* %_1) unnamed_addr #1 !dbg !3820 {
start:
  %_1.dbg.spill = alloca %"std::sys_common::process::CommandEnv"*, align 8
  store %"std::sys_common::process::CommandEnv"* %_1, %"std::sys_common::process::CommandEnv"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys_common::process::CommandEnv"** %_1.dbg.spill, metadata !3825, metadata !DIExpression()), !dbg !3828
  %0 = bitcast %"std::sys_common::process::CommandEnv"* %_1 to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !3828
; call core::ptr::drop_in_place<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
  call void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h1e60537dafd513eeE"(%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0), !dbg !3828
  br label %bb1, !dbg !3828

bb1:                                              ; preds = %start
  ret void, !dbg !3828
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h3979a13cd804d08cE"({ [0 x i8]*, i64 }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3829 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %_1, { [0 x i8]*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %_1.dbg.spill, metadata !3834, metadata !DIExpression()), !dbg !3837
  br label %bb3, !dbg !3837

bb3:                                              ; preds = %start
  %1 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !3837
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !3837
  %3 = load i8*, i8** %2, align 8, !dbg !3837, !nonnull !23, !noundef !23
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !3837
  %5 = load i64, i64* %4, align 8, !dbg !3837
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17hfb2cd30f7e79faf9E(i8* %3, i64 %5), !dbg !3837
  br label %bb1, !dbg !3837

bb4:                                              ; No predecessors!
  %6 = bitcast { [0 x i8]*, i64 }* %_1 to { i8*, i64 }*, !dbg !3837
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 0, !dbg !3837
  %8 = load i8*, i8** %7, align 8, !dbg !3837, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %6, i32 0, i32 1, !dbg !3837
  %10 = load i64, i64* %9, align 8, !dbg !3837
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17hfb2cd30f7e79faf9E(i8* %8, i64 %10) #16
          to label %bb2 unwind label %abort, !dbg !3837

abort:                                            ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !3837
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3837
  unreachable, !dbg !3837

bb2:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3837
  %13 = load i8*, i8** %12, align 8, !dbg !3837
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3837
  %15 = load i32, i32* %14, align 8, !dbg !3837
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !3837
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !3837
  resume { i8*, i32 } %17, !dbg !3837

bb1:                                              ; preds = %bb3
  ret void, !dbg !3837
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u32]>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr59drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$17ha56e96f269f477d0E"({ [0 x i32]*, i64 }* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3838 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca { [0 x i32]*, i64 }*, align 8
  store { [0 x i32]*, i64 }* %_1, { [0 x i32]*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }** %_1.dbg.spill, metadata !3843, metadata !DIExpression()), !dbg !3844
  br label %bb3, !dbg !3844

bb3:                                              ; preds = %start
  %1 = bitcast { [0 x i32]*, i64 }* %_1 to { i32*, i64 }*, !dbg !3844
  %2 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 0, !dbg !3844
  %3 = load i32*, i32** %2, align 8, !dbg !3844, !nonnull !23, !noundef !23
  %4 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %1, i32 0, i32 1, !dbg !3844
  %5 = load i64, i64* %4, align 8, !dbg !3844
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17h4b1fc673c5cb9615E(i32* %3, i64 %5), !dbg !3844
  br label %bb1, !dbg !3844

bb4:                                              ; No predecessors!
  %6 = bitcast { [0 x i32]*, i64 }* %_1 to { i32*, i64 }*, !dbg !3844
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %6, i32 0, i32 0, !dbg !3844
  %8 = load i32*, i32** %7, align 8, !dbg !3844, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %6, i32 0, i32 1, !dbg !3844
  %10 = load i64, i64* %9, align 8, !dbg !3844
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17h4b1fc673c5cb9615E(i32* %8, i64 %10) #16
          to label %bb2 unwind label %abort, !dbg !3844

abort:                                            ; preds = %bb4
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !3844
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3844
  unreachable, !dbg !3844

bb2:                                              ; preds = %bb4
  %12 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3844
  %13 = load i8*, i8** %12, align 8, !dbg !3844
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3844
  %15 = load i32, i32* %14, align 8, !dbg !3844
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !3844
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !3844
  resume { i8*, i32 } %17, !dbg !3844

bb1:                                              ; preds = %bb3
  ret void, !dbg !3844
}

; core::ptr::drop_in_place<&core::option::Option<&str>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr60drop_in_place$LT$$RF$core..option..Option$LT$$RF$str$GT$$GT$17he50dc97f5c182187E"({ i8*, i64 }** %_1) unnamed_addr #0 !dbg !3845 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }**, align 8
  store { i8*, i64 }** %_1, { i8*, i64 }*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }*** %_1.dbg.spill, metadata !3850, metadata !DIExpression()), !dbg !3853
  ret void, !dbg !3853
}

; core::ptr::drop_in_place<alloc::vec::Vec<*const i8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr60drop_in_place$LT$alloc..vec..Vec$LT$$BP$const$u20$i8$GT$$GT$17hcb0762e63aa439b0E"(%"alloc::vec::Vec<*const i8>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3854 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<*const i8>"*, align 8
  store %"alloc::vec::Vec<*const i8>"* %_1, %"alloc::vec::Vec<*const i8>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<*const i8>"** %_1.dbg.spill, metadata !3859, metadata !DIExpression()), !dbg !3862
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h511be7b7fe589a0eE"(%"alloc::vec::Vec<*const i8>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3862

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<*const i8>"* %_1 to { i64*, i64 }*, !dbg !3862
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<*const i8>>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17he4d53045d8fa64f8E"({ i64*, i64 }* %1) #16
          to label %bb1 unwind label %abort, !dbg !3862

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<*const i8>"* %_1 to { i64*, i64 }*, !dbg !3862
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<*const i8>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17he4d53045d8fa64f8E"({ i64*, i64 }* %7), !dbg !3862
  br label %bb2, !dbg !3862

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3862
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3862
  unreachable, !dbg !3862

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3862
  %10 = load i8*, i8** %9, align 8, !dbg !3862
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3862
  %12 = load i32, i32* %11, align 8, !dbg !3862
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3862
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3862
  resume { i8*, i32 } %14, !dbg !3862

bb2:                                              ; preds = %bb4
  ret void, !dbg !3862
}

; core::ptr::drop_in_place<std::sys::unix::process::process_common::Argv>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr66drop_in_place$LT$std..sys..unix..process..process_common..Argv$GT$17h1a71daa127b4e316E"(%"std::sys::unix::process::process_common::Argv"* %_1) unnamed_addr #1 !dbg !3863 {
start:
  %_1.dbg.spill = alloca %"std::sys::unix::process::process_common::Argv"*, align 8
  store %"std::sys::unix::process::process_common::Argv"* %_1, %"std::sys::unix::process::process_common::Argv"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::process::process_common::Argv"** %_1.dbg.spill, metadata !3868, metadata !DIExpression()), !dbg !3871
  %0 = bitcast %"std::sys::unix::process::process_common::Argv"* %_1 to %"alloc::vec::Vec<*const i8>"*, !dbg !3871
; call core::ptr::drop_in_place<alloc::vec::Vec<*const i8>>
  call void @"_ZN4core3ptr60drop_in_place$LT$alloc..vec..Vec$LT$$BP$const$u20$i8$GT$$GT$17hcb0762e63aa439b0E"(%"alloc::vec::Vec<*const i8>"* %0), !dbg !3871
  br label %bb1, !dbg !3871

bb1:                                              ; preds = %start
  ret void, !dbg !3871
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<*const i8>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17he4d53045d8fa64f8E"({ i64*, i64 }* %_1) unnamed_addr #1 !dbg !3872 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !3877, metadata !DIExpression()), !dbg !3880
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h65dcb9afe758c0d8E"({ i64*, i64 }* align 8 %_1), !dbg !3880
  br label %bb1, !dbg !3880

bb1:                                              ; preds = %start
  ret void, !dbg !3880
}

; core::ptr::drop_in_place<std::sys::unix::process::process_common::Stdio>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr67drop_in_place$LT$std..sys..unix..process..process_common..Stdio$GT$17h9fd1ff8e79cd466cE"({ i32, i32 }* %_1) unnamed_addr #1 !dbg !3881 {
start:
  %_1.dbg.spill = alloca { i32, i32 }*, align 8
  store { i32, i32 }* %_1, { i32, i32 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %_1.dbg.spill, metadata !3886, metadata !DIExpression()), !dbg !3887
  %0 = bitcast { i32, i32 }* %_1 to i32*, !dbg !3887
  %1 = load i32, i32* %0, align 4, !dbg !3887, !range !3888, !noundef !23
  %_2 = zext i32 %1 to i64, !dbg !3887
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ], !dbg !3887

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_1, i32 0, i32 1, !dbg !3887
; call core::ptr::drop_in_place<std::sys::unix::fd::FileDesc>
  call void @"_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17h5b4c5b75ab8c65d5E"(i32* %2), !dbg !3887
  br label %bb1, !dbg !3887

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void, !dbg !3887
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hedbc1b722e94a535E"(%"std::io::error::Custom"** %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3889 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"std::io::error::Custom"**, align 8
  store %"std::io::error::Custom"** %_1, %"std::io::error::Custom"*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"*** %_1.dbg.spill, metadata !3894, metadata !DIExpression()), !dbg !3897
  %1 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !3897
  %2 = bitcast i64** %1 to %"std::io::error::Custom"**, !dbg !3897
  %3 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %2, align 8, !dbg !3897
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h3284e708e170caddE"(%"std::io::error::Custom"* %3)
          to label %bb3 unwind label %cleanup, !dbg !3897

bb4:                                              ; preds = %cleanup
  %4 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !3897
  %5 = load i64*, i64** %4, align 8, !dbg !3897, !nonnull !23, !noundef !23
; invoke alloc::alloc::box_free
  invoke void @_ZN5alloc5alloc8box_free17he04ba104dc105ff4E(i64* %5) #16
          to label %bb2 unwind label %abort, !dbg !3897

cleanup:                                          ; preds = %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %11 = bitcast %"std::io::error::Custom"** %_1 to i64**, !dbg !3897
  %12 = load i64*, i64** %11, align 8, !dbg !3897, !nonnull !23, !noundef !23
; call alloc::alloc::box_free
  call void @_ZN5alloc5alloc8box_free17he04ba104dc105ff4E(i64* %12), !dbg !3897
  br label %bb1, !dbg !3897

abort:                                            ; preds = %bb4
  %13 = landingpad { i8*, i32 }
          cleanup, !dbg !3897
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3897
  unreachable, !dbg !3897

bb2:                                              ; preds = %bb4
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3897
  %15 = load i8*, i8** %14, align 8, !dbg !3897
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3897
  %17 = load i32, i32* %16, align 8, !dbg !3897
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !3897
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !3897
  resume { i8*, i32 } %19, !dbg !3897

bb1:                                              ; preds = %bb3
  ret void, !dbg !3897
}

; core::ptr::drop_in_place<std::sys::unix::process::process_common::Command>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr69drop_in_place$LT$std..sys..unix..process..process_common..Command$GT$17h11ce9fcf49ad8669E"(%"std::sys::unix::process::process_common::Command"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3898 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"std::sys::unix::process::process_common::Command"*, align 8
  store %"std::sys::unix::process::process_common::Command"* %_1, %"std::sys::unix::process::process_common::Command"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::sys::unix::process::process_common::Command"** %_1.dbg.spill, metadata !3903, metadata !DIExpression()), !dbg !3906
  %1 = bitcast %"std::sys::unix::process::process_common::Command"* %_1 to { i8*, i64 }*, !dbg !3906
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hbe4f4b40e09a24caE"({ i8*, i64 }* %1)
          to label %bb20 unwind label %cleanup, !dbg !3906

bb11:                                             ; preds = %cleanup
  %2 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 1, !dbg !3906
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hc40652661f7d9783E"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %2) #16
          to label %bb10 unwind label %abort, !dbg !3906

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb11

bb20:                                             ; preds = %start
  %8 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 1, !dbg !3906
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hc40652661f7d9783E"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %8)
          to label %bb19 unwind label %cleanup1, !dbg !3906

abort:                                            ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11
  %9 = landingpad { i8*, i32 }
          cleanup, !dbg !3906
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3906
  unreachable, !dbg !3906

bb10:                                             ; preds = %cleanup1, %bb11
  %10 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 2, !dbg !3906
; invoke core::ptr::drop_in_place<std::sys::unix::process::process_common::Argv>
  invoke void @"_ZN4core3ptr66drop_in_place$LT$std..sys..unix..process..process_common..Argv$GT$17h1a71daa127b4e316E"(%"std::sys::unix::process::process_common::Argv"* %10) #16
          to label %bb9 unwind label %abort, !dbg !3906

cleanup1:                                         ; preds = %bb20
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb10

bb19:                                             ; preds = %bb20
  %16 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 2, !dbg !3906
; invoke core::ptr::drop_in_place<std::sys::unix::process::process_common::Argv>
  invoke void @"_ZN4core3ptr66drop_in_place$LT$std..sys..unix..process..process_common..Argv$GT$17h1a71daa127b4e316E"(%"std::sys::unix::process::process_common::Argv"* %16)
          to label %bb18 unwind label %cleanup2, !dbg !3906

bb9:                                              ; preds = %cleanup2, %bb10
  %17 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 3, !dbg !3906
; invoke core::ptr::drop_in_place<std::sys_common::process::CommandEnv>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h2d46c7b5a8107923E"(%"std::sys_common::process::CommandEnv"* %17) #16
          to label %bb8 unwind label %abort, !dbg !3906

cleanup2:                                         ; preds = %bb19
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb9

bb18:                                             ; preds = %bb19
  %23 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 3, !dbg !3906
; invoke core::ptr::drop_in_place<std::sys_common::process::CommandEnv>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h2d46c7b5a8107923E"(%"std::sys_common::process::CommandEnv"* %23)
          to label %bb17 unwind label %cleanup3, !dbg !3906

bb8:                                              ; preds = %cleanup3, %bb9
  %24 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 4, !dbg !3906
; invoke core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17ha8c32539fa3f5184E"({ i8*, i64 }* %24) #16
          to label %bb7 unwind label %abort, !dbg !3906

cleanup3:                                         ; preds = %bb18
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb8

bb17:                                             ; preds = %bb18
  %30 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 4, !dbg !3906
; invoke core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17ha8c32539fa3f5184E"({ i8*, i64 }* %30)
          to label %bb16 unwind label %cleanup4, !dbg !3906

bb7:                                              ; preds = %cleanup4, %bb8
  %31 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 5, !dbg !3906
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  invoke void @"_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17ha74d07525bbc13d6E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %31) #16
          to label %bb6 unwind label %abort, !dbg !3906

cleanup4:                                         ; preds = %bb17
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  %34 = extractvalue { i8*, i32 } %32, 1
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  br label %bb7

bb16:                                             ; preds = %bb17
  %37 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 5, !dbg !3906
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  invoke void @"_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17ha74d07525bbc13d6E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %37)
          to label %bb15 unwind label %cleanup5, !dbg !3906

bb6:                                              ; preds = %cleanup5, %bb7
  %38 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 6, !dbg !3906
; invoke core::ptr::drop_in_place<core::option::Option<alloc::boxed::Box<[u32]>>>
  invoke void @"_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h062718b2c053f204E"({ i32*, i64 }* %38) #16
          to label %bb5 unwind label %abort, !dbg !3906

cleanup5:                                         ; preds = %bb16
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = extractvalue { i8*, i32 } %39, 1
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %41, i32* %43, align 8
  br label %bb6

bb15:                                             ; preds = %bb16
  %44 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 6, !dbg !3906
; invoke core::ptr::drop_in_place<core::option::Option<alloc::boxed::Box<[u32]>>>
  invoke void @"_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h062718b2c053f204E"({ i32*, i64 }* %44)
          to label %bb14 unwind label %cleanup6, !dbg !3906

bb5:                                              ; preds = %cleanup6, %bb6
  %45 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 9, !dbg !3906
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17ha909f5961af418deE"({ i32, i32 }* %45) #16
          to label %bb4 unwind label %abort, !dbg !3906

cleanup6:                                         ; preds = %bb15
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  %48 = extractvalue { i8*, i32 } %46, 1
  %49 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %47, i8** %49, align 8
  %50 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %48, i32* %50, align 8
  br label %bb5

bb14:                                             ; preds = %bb15
  %51 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 9, !dbg !3906
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17ha909f5961af418deE"({ i32, i32 }* %51)
          to label %bb13 unwind label %cleanup7, !dbg !3906

bb4:                                              ; preds = %cleanup7, %bb5
  %52 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 10, !dbg !3906
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17ha909f5961af418deE"({ i32, i32 }* %52) #16
          to label %bb3 unwind label %abort, !dbg !3906

cleanup7:                                         ; preds = %bb14
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb4

bb13:                                             ; preds = %bb14
  %58 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 10, !dbg !3906
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17ha909f5961af418deE"({ i32, i32 }* %58)
          to label %bb12 unwind label %cleanup8, !dbg !3906

bb3:                                              ; preds = %cleanup8, %bb4
  %59 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 11, !dbg !3906
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17ha909f5961af418deE"({ i32, i32 }* %59) #16
          to label %bb1 unwind label %abort, !dbg !3906

cleanup8:                                         ; preds = %bb13
  %60 = landingpad { i8*, i32 }
          cleanup
  %61 = extractvalue { i8*, i32 } %60, 0
  %62 = extractvalue { i8*, i32 } %60, 1
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %61, i8** %63, align 8
  %64 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %62, i32* %64, align 8
  br label %bb3

bb12:                                             ; preds = %bb13
  %65 = getelementptr inbounds %"std::sys::unix::process::process_common::Command", %"std::sys::unix::process::process_common::Command"* %_1, i32 0, i32 11, !dbg !3906
; call core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
  call void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17ha909f5961af418deE"({ i32, i32 }* %65), !dbg !3906
  br label %bb2, !dbg !3906

bb1:                                              ; preds = %bb3
  %66 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3906
  %67 = load i8*, i8** %66, align 8, !dbg !3906
  %68 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3906
  %69 = load i32, i32* %68, align 8, !dbg !3906
  %70 = insertvalue { i8*, i32 } undef, i8* %67, 0, !dbg !3906
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1, !dbg !3906
  resume { i8*, i32 } %71, !dbg !3906

bb2:                                              ; preds = %bb12
  ret void, !dbg !3906
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hc40652661f7d9783E"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %_1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3907 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<alloc::ffi::c_str::CString>"*, align 8
  store %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %_1, %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %_1.dbg.spill, metadata !3912, metadata !DIExpression()), !dbg !3915
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb5222ef95bf26be8E"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !3915

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %_1 to { i64*, i64 }*, !dbg !3915
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17hdf10a8fdd126de4dE"({ i64*, i64 }* %1) #16
          to label %bb1 unwind label %abort, !dbg !3915

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %_1 to { i64*, i64 }*, !dbg !3915
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>>
  call void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17hdf10a8fdd126de4dE"({ i64*, i64 }* %7), !dbg !3915
  br label %bb2, !dbg !3915

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3915
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !3915
  unreachable, !dbg !3915

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !3915
  %10 = load i8*, i8** %9, align 8, !dbg !3915
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !3915
  %12 = load i32, i32* %11, align 8, !dbg !3915
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3915
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !3915
  resume { i8*, i32 } %14, !dbg !3915

bb2:                                              ; preds = %bb4
  ret void, !dbg !3915
}

; core::ptr::drop_in_place<alloc::collections::btree::mem::replace::PanicGuard>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17h622122c3e0caab8dE"(%"alloc::collections::btree::mem::replace::PanicGuard"* %_1) unnamed_addr #1 !dbg !3916 {
start:
  %_1.dbg.spill = alloca %"alloc::collections::btree::mem::replace::PanicGuard"*, align 8
  store %"alloc::collections::btree::mem::replace::PanicGuard"* %_1, %"alloc::collections::btree::mem::replace::PanicGuard"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::mem::replace::PanicGuard"** %_1.dbg.spill, metadata !3924, metadata !DIExpression()), !dbg !3927
; call <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
  call void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfa13d25b04515027E"(%"alloc::collections::btree::mem::replace::PanicGuard"* align 1 %_1), !dbg !3927
  br label %bb1, !dbg !3927

bb1:                                              ; preds = %start
  ret void, !dbg !3927
}

; core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17ha8c32539fa3f5184E"({ i8*, i64 }* %_1) unnamed_addr #1 !dbg !3928 {
start:
  %_1.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %_1, { i8*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %_1.dbg.spill, metadata !3933, metadata !DIExpression()), !dbg !3936
  %0 = bitcast { i8*, i64 }* %_1 to {}**, !dbg !3936
  %1 = load {}*, {}** %0, align 8, !dbg !3936
  %2 = icmp eq {}* %1, null, !dbg !3936
  %_2 = select i1 %2, i64 0, i64 1, !dbg !3936
  %3 = icmp eq i64 %_2, 0, !dbg !3936
  br i1 %3, label %bb1, label %bb2, !dbg !3936

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3936

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hbe4f4b40e09a24caE"({ i8*, i64 }* %_1), !dbg !3936
  br label %bb1, !dbg !3936
}

; core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17h479a684ef65e5531E"(%"core::option::Option<std::ffi::os_str::OsString>"* %_1) unnamed_addr #1 !dbg !3937 {
start:
  %_1.dbg.spill = alloca %"core::option::Option<std::ffi::os_str::OsString>"*, align 8
  store %"core::option::Option<std::ffi::os_str::OsString>"* %_1, %"core::option::Option<std::ffi::os_str::OsString>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::ffi::os_str::OsString>"** %_1.dbg.spill, metadata !3941, metadata !DIExpression()), !dbg !3942
  %0 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_1 to {}**, !dbg !3942
  %1 = load {}*, {}** %0, align 8, !dbg !3942
  %2 = icmp eq {}* %1, null, !dbg !3942
  %_2 = select i1 %2, i64 0, i64 1, !dbg !3942
  %3 = icmp eq i64 %_2, 0, !dbg !3942
  br i1 %3, label %bb1, label %bb2, !dbg !3942

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3942

bb2:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_1 to %"core::option::Option<std::ffi::os_str::OsString>::Some"*, !dbg !3942
  %5 = bitcast %"core::option::Option<std::ffi::os_str::OsString>::Some"* %4 to %"std::ffi::os_str::OsString"*, !dbg !3942
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %5), !dbg !3942
  br label %bb1, !dbg !3942
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17hdf10a8fdd126de4dE"({ i64*, i64 }* %_1) unnamed_addr #1 !dbg !3943 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !3948, metadata !DIExpression()), !dbg !3951
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h97298da8e3a6412dE"({ i64*, i64 }* align 8 %_1), !dbg !3951
  br label %bb1, !dbg !3951

bb1:                                              ; preds = %start
  ret void, !dbg !3951
}

; core::ptr::drop_in_place<std::rt::lang_start<()>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5cc1347c42b5cc74E"(i64** %_1) unnamed_addr #0 !dbg !3952 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !3956, metadata !DIExpression()), !dbg !3959
  ret void, !dbg !3959
}

; core::ptr::drop_in_place<core::option::Option<alloc::boxed::Box<[u32]>>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h062718b2c053f204E"({ i32*, i64 }* %_1) unnamed_addr #1 !dbg !3960 {
start:
  %_1.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %_1, { i32*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %_1.dbg.spill, metadata !3965, metadata !DIExpression()), !dbg !3968
  %0 = bitcast { i32*, i64 }* %_1 to {}**, !dbg !3968
  %1 = load {}*, {}** %0, align 8, !dbg !3968
  %2 = icmp eq {}* %1, null, !dbg !3968
  %_2 = select i1 %2, i64 0, i64 1, !dbg !3968
  %3 = icmp eq i64 %_2, 0, !dbg !3968
  br i1 %3, label %bb1, label %bb2, !dbg !3968

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3968

bb2:                                              ; preds = %start
  %4 = bitcast { i32*, i64 }* %_1 to { [0 x i32]*, i64 }*, !dbg !3968
; call core::ptr::drop_in_place<alloc::boxed::Box<[u32]>>
  call void @"_ZN4core3ptr59drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$17ha56e96f269f477d0E"({ [0 x i32]*, i64 }* %4), !dbg !3968
  br label %bb1, !dbg !3968
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h3ca09ae8930ef9efE"(i8* %ptr) unnamed_addr #0 !dbg !3969 {
start:
  %ptr.dbg.spill2 = alloca i8*, align 8
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_5 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3986, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !3988, metadata !DIExpression()), !dbg !3993
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !4001
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !3999, metadata !DIExpression()), !dbg !4002
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !4002
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !4003, metadata !DIExpression()), !dbg !4008
  %3 = bitcast {}** %1 to i64*, !dbg !4010
  store i64 0, i64* %3, align 8, !dbg !4010
  %data_address = load {}*, {}** %1, align 8, !dbg !4010
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !4010
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3992, metadata !DIExpression()), !dbg !3993
  br label %bb4, !dbg !4010

bb4:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to {}**, !dbg !3993
  store {}* %data_address, {}** %4, align 8, !dbg !3993
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !3993
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !3993
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to i8*, !dbg !3993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !3993
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to i8**, !dbg !3993
  %other = load i8*, i8** %8, align 8, !dbg !3993
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !3993
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !4007, metadata !DIExpression()), !dbg !4008
  %9 = icmp eq i8* %ptr, %other, !dbg !4008
  %10 = zext i1 %9 to i8, !dbg !4008
  store i8 %10, i8* %0, align 1, !dbg !4008
  %11 = load i8, i8* %0, align 1, !dbg !4008, !range !512, !noundef !23
  %_3 = trunc i8 %11 to i1, !dbg !4008
  br label %bb5, !dbg !4008

bb5:                                              ; preds = %bb4
  %_2 = xor i1 %_3, true, !dbg !4016
  br i1 %_2, label %bb1, label %bb2, !dbg !4016

bb2:                                              ; preds = %bb5
  %12 = bitcast i8** %2 to {}**, !dbg !4017
  store {}* null, {}** %12, align 8, !dbg !4017
  br label %bb3, !dbg !4018

bb1:                                              ; preds = %bb5
  store i8* %ptr, i8** %ptr.dbg.spill2, align 8, !dbg !4019
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill2, metadata !4020, metadata !DIExpression()), !dbg !4023
  store i8* %ptr, i8** %_5, align 8, !dbg !4023
  %13 = load i8*, i8** %_5, align 8, !dbg !4025, !nonnull !23, !noundef !23
  store i8* %13, i8** %2, align 8, !dbg !4025
  br label %bb3, !dbg !4018

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8*, i8** %2, align 8, !dbg !4026
  ret i8* %14, !dbg !4026
}

; core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_1) unnamed_addr #1 !dbg !4027 {
start:
  %_1.dbg.spill = alloca %"core::result::Result<alloc::string::String, std::env::VarError>"*, align 8
  store %"core::result::Result<alloc::string::String, std::env::VarError>"* %_1, %"core::result::Result<alloc::string::String, std::env::VarError>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::string::String, std::env::VarError>"** %_1.dbg.spill, metadata !4032, metadata !DIExpression()), !dbg !4035
  %0 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_1 to i64*, !dbg !4035
  %_2 = load i64, i64* %0, align 8, !dbg !4035, !range !3441, !noundef !23
  %1 = icmp eq i64 %_2, 0, !dbg !4035
  br i1 %1, label %bb2, label %bb3, !dbg !4035

bb2:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_1 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !4035
  %3 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %2, i32 0, i32 1, !dbg !4035
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %3), !dbg !4035
  br label %bb1, !dbg !4035

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_1 to %"core::result::Result<alloc::string::String, std::env::VarError>::Err"*, !dbg !4035
  %5 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", %"core::result::Result<alloc::string::String, std::env::VarError>::Err"* %4, i32 0, i32 1, !dbg !4035
; call core::ptr::drop_in_place<std::env::VarError>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17h371bdcb895803ce5E"(%"std::env::VarError"* %5), !dbg !4035
  br label %bb1, !dbg !4035

bb1:                                              ; preds = %bb2, %bb3
  ret void, !dbg !4035
}

; core::ptr::drop_in_place<dyn std::error::Error+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17he3a0e5a61e843fa8E"({}* %_1.0, [3 x i64]* align 8 %_1.1) unnamed_addr #1 !dbg !4036 {
start:
  %_1.dbg.spill = alloca { {}*, [3 x i64]* }, align 8
  %0 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 0
  store {}* %_1.0, {}** %0, align 8
  %1 = getelementptr inbounds { {}*, [3 x i64]* }, { {}*, [3 x i64]* }* %_1.dbg.spill, i32 0, i32 1
  store [3 x i64]* %_1.1, [3 x i64]** %1, align 8
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }* %_1.dbg.spill, metadata !4044, metadata !DIExpression()), !dbg !4047
  %2 = bitcast [3 x i64]* %_1.1 to void ({}*)**, !dbg !4047
  %3 = getelementptr inbounds void ({}*)*, void ({}*)** %2, i64 0, !dbg !4047
  %4 = load void ({}*)*, void ({}*)** %3, align 8, !dbg !4047, !invariant.load !23, !nonnull !23
  call void %4({}* %_1.0), !dbg !4047
  br label %bb1, !dbg !4047

bb1:                                              ; preds = %start
  ret void, !dbg !4047
}

; core::ptr::drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17ha909f5961af418deE"({ i32, i32 }* %_1) unnamed_addr #1 !dbg !4048 {
start:
  %_1.dbg.spill = alloca { i32, i32 }*, align 8
  store { i32, i32 }* %_1, { i32, i32 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %_1.dbg.spill, metadata !4053, metadata !DIExpression()), !dbg !4056
  %0 = bitcast { i32, i32 }* %_1 to i32*, !dbg !4056
  %1 = load i32, i32* %0, align 4, !dbg !4056, !range !4057, !noundef !23
  %2 = sub i32 %1, 4, !dbg !4056
  %3 = icmp eq i32 %2, 0, !dbg !4056
  %_2 = select i1 %3, i64 0, i64 1, !dbg !4056
  %4 = icmp eq i64 %_2, 0, !dbg !4056
  br i1 %4, label %bb1, label %bb2, !dbg !4056

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !4056

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sys::unix::process::process_common::Stdio>
  call void @"_ZN4core3ptr67drop_in_place$LT$std..sys..unix..process..process_common..Stdio$GT$17h9fd1ff8e79cd466cE"({ i32, i32 }* %_1), !dbg !4056
  br label %bb1, !dbg !4056
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @_ZN4core3str11validations15next_code_point17hd6a7a759b1fa4f00E({ i8*, i8* }* align 8 %bytes) unnamed_addr #0 !dbg !4058 {
start:
  %byte.dbg.spill16 = alloca i8, align 1
  %ch.dbg.spill15 = alloca i32, align 4
  %w.dbg.spill = alloca i8, align 1
  %val.dbg.spill14 = alloca i8*, align 8
  %y_z.dbg.spill = alloca i32, align 4
  %byte.dbg.spill12 = alloca i8, align 1
  %ch.dbg.spill11 = alloca i32, align 4
  %z.dbg.spill = alloca i8, align 1
  %val.dbg.spill9 = alloca i8*, align 8
  %byte.dbg.spill7 = alloca i8, align 1
  %ch.dbg.spill = alloca i32, align 4
  %y.dbg.spill = alloca i8, align 1
  %val.dbg.spill6 = alloca i8*, align 8
  %init.dbg.spill = alloca i32, align 4
  %byte.dbg.spill = alloca i8, align 1
  %x.dbg.spill = alloca i8, align 1
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill1 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %bytes.dbg.spill = alloca { i8*, i8* }*, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %ch = alloca i32, align 4
  %self2 = alloca i8*, align 8
  %self = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i8*, i8* }* %bytes, { i8*, i8* }** %bytes.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %bytes.dbg.spill, metadata !4064, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.declare(metadata i8** %self, metadata !4102, metadata !DIExpression()), !dbg !4129
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !4067, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill1, metadata !4132, metadata !DIExpression()), !dbg !4139
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !4141, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4091, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !4153, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !4162, metadata !DIExpression()), !dbg !4169
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %1 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hccc9d4a4f7ed0572E"({ i8*, i8* }* align 8 %bytes), !dbg !4130
  store i8* %1, i8** %self, align 8, !dbg !4130
  br label %bb1, !dbg !4130

bb1:                                              ; preds = %start
  %2 = bitcast i8** %self to {}**, !dbg !4129
  %3 = load {}*, {}** %2, align 8, !dbg !4129
  %4 = icmp eq {}* %3, null, !dbg !4129
  %_51 = select i1 %4, i64 0, i64 1, !dbg !4129
  switch i64 %_51, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !4129

bb18:                                             ; preds = %bb1
  unreachable, !dbg !4129

bb17:                                             ; preds = %bb1
  %5 = bitcast i8** %_4 to {}**, !dbg !4129
  store {}* null, {}** %5, align 8, !dbg !4129
  br label %bb2, !dbg !4129

bb19:                                             ; preds = %bb1
  %v = load i8*, i8** %self, align 8, !dbg !4129, !nonnull !23, !align !445, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !4129
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !4126, metadata !DIExpression()), !dbg !4171
  store i8* %v, i8** %_4, align 8, !dbg !4171
  br label %bb2, !dbg !4129

bb2:                                              ; preds = %bb17, %bb19
  %6 = bitcast i8** %_4 to {}**, !dbg !4130
  %7 = load {}*, {}** %6, align 8, !dbg !4130
  %8 = icmp eq {}* %7, null, !dbg !4130
  %_7 = select i1 %8, i64 1, i64 0, !dbg !4130
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !4130

bb4:                                              ; preds = %bb2
  unreachable, !dbg !4130

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !dbg !4130, !nonnull !23, !align !445, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !4130
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !4085, metadata !DIExpression()), !dbg !4172
  %x = load i8, i8* %val, align 1, !dbg !4173
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !4173
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !4065, metadata !DIExpression()), !dbg !4174
  %_11 = icmp ult i8 %x, -128, !dbg !4175
  br i1 %_11, label %bb6, label %bb7, !dbg !4175

bb5:                                              ; preds = %bb2
  %9 = bitcast { i32, i32 }* %0 to i32*, !dbg !4139
  store i32 0, i32* %9, align 4, !dbg !4139
  br label %bb15, !dbg !4176

bb15:                                             ; preds = %bb6, %bb5
  br label %bb16, !dbg !4179

bb7:                                              ; preds = %bb3
  store i8 %x, i8* %byte.dbg.spill, align 1, !dbg !4180
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !4181, metadata !DIExpression()), !dbg !4187
  %_55 = and i8 %x, 31, !dbg !4187
  %init = zext i8 %_55 to i32, !dbg !4187
  store i32 %init, i32* %init.dbg.spill, align 4, !dbg !4187
  call void @llvm.dbg.declare(metadata i32* %init.dbg.spill, metadata !4087, metadata !DIExpression()), !dbg !4189
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %10 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hccc9d4a4f7ed0572E"({ i8*, i8* }* align 8 %bytes), !dbg !4151
  store i8* %10, i8** %self2, align 8, !dbg !4151
  br label %bb8, !dbg !4151

bb6:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32, !dbg !4190
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4191
  store i32 %_13, i32* %11, align 4, !dbg !4191
  %12 = bitcast { i32, i32 }* %0 to i32*, !dbg !4191
  store i32 1, i32* %12, align 4, !dbg !4191
  br label %bb15, !dbg !4192

bb16:                                             ; preds = %bb14, %bb15
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !4179
  %14 = load i32, i32* %13, align 4, !dbg !4179, !range !4194, !noundef !23
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4179
  %16 = load i32, i32* %15, align 4, !dbg !4179
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0, !dbg !4179
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1, !dbg !4179
  ret { i32, i32 } %18, !dbg !4179

bb8:                                              ; preds = %bb7
  %19 = bitcast i8** %self2 to {}**, !dbg !4150
  %20 = load {}*, {}** %19, align 8, !dbg !4150
  %21 = icmp eq {}* %20, null, !dbg !4150
  %_59 = select i1 %21, i64 0, i64 1, !dbg !4150
  switch i64 %_59, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ], !dbg !4150

bb21:                                             ; preds = %bb8
  unreachable, !dbg !4150

bb20:                                             ; preds = %bb8
  unreachable, !dbg !4195

bb22:                                             ; preds = %bb8
  %val5 = load i8*, i8** %self2, align 8, !dbg !4150, !nonnull !23, !align !445, !noundef !23
  store i8* %val5, i8** %val.dbg.spill6, align 8, !dbg !4150
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill6, metadata !4147, metadata !DIExpression()), !dbg !4199
  %y = load i8, i8* %val5, align 1, !dbg !4200
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !4200
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !4089, metadata !DIExpression()), !dbg !4201
  store i32 %init, i32* %ch.dbg.spill, align 4, !dbg !4202
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !4203, metadata !DIExpression()), !dbg !4209
  store i8 %y, i8* %byte.dbg.spill7, align 1, !dbg !4211
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill7, metadata !4208, metadata !DIExpression()), !dbg !4209
  %_60 = shl i32 %init, 6, !dbg !4209
  %_63 = and i8 %y, 63, !dbg !4209
  %_62 = zext i8 %_63 to i32, !dbg !4209
  %22 = or i32 %_60, %_62, !dbg !4209
  store i32 %22, i32* %ch, align 4, !dbg !4209
  %_24 = icmp uge i8 %x, -32, !dbg !4212
  br i1 %_24, label %bb9, label %bb14, !dbg !4212

bb14:                                             ; preds = %bb13, %bb22
  %_50 = load i32, i32* %ch, align 4, !dbg !4213
  %23 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4214
  store i32 %_50, i32* %23, align 4, !dbg !4214
  %24 = bitcast { i32, i32 }* %0 to i32*, !dbg !4214
  store i32 1, i32* %24, align 4, !dbg !4214
  br label %bb16, !dbg !4179

bb9:                                              ; preds = %bb22
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %25 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hccc9d4a4f7ed0572E"({ i8*, i8* }* align 8 %bytes), !dbg !4161
  store i8* %25, i8** %self3, align 8, !dbg !4161
  br label %bb10, !dbg !4161

bb10:                                             ; preds = %bb9
  %26 = bitcast i8** %self3 to {}**, !dbg !4160
  %27 = load {}*, {}** %26, align 8, !dbg !4160
  %28 = icmp eq {}* %27, null, !dbg !4160
  %_66 = select i1 %28, i64 0, i64 1, !dbg !4160
  switch i64 %_66, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ], !dbg !4160

bb24:                                             ; preds = %bb10
  unreachable, !dbg !4160

bb23:                                             ; preds = %bb10
  unreachable, !dbg !4215

bb25:                                             ; preds = %bb10
  %val8 = load i8*, i8** %self3, align 8, !dbg !4160, !nonnull !23, !align !445, !noundef !23
  store i8* %val8, i8** %val.dbg.spill9, align 8, !dbg !4160
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill9, metadata !4157, metadata !DIExpression()), !dbg !4219
  %z = load i8, i8* %val8, align 1, !dbg !4220
  store i8 %z, i8* %z.dbg.spill, align 1, !dbg !4220
  call void @llvm.dbg.declare(metadata i8* %z.dbg.spill, metadata !4093, metadata !DIExpression()), !dbg !4221
  %_32 = and i8 %y, 63, !dbg !4222
  %ch10 = zext i8 %_32 to i32, !dbg !4222
  store i32 %ch10, i32* %ch.dbg.spill11, align 4, !dbg !4222
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill11, metadata !4223, metadata !DIExpression()), !dbg !4227
  store i8 %z, i8* %byte.dbg.spill12, align 1, !dbg !4229
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill12, metadata !4226, metadata !DIExpression()), !dbg !4227
  %_67 = shl i32 %ch10, 6, !dbg !4227
  %_70 = and i8 %z, 63, !dbg !4227
  %_69 = zext i8 %_70 to i32, !dbg !4227
  %y_z = or i32 %_67, %_69, !dbg !4227
  store i32 %y_z, i32* %y_z.dbg.spill, align 4, !dbg !4227
  call void @llvm.dbg.declare(metadata i32* %y_z.dbg.spill, metadata !4095, metadata !DIExpression()), !dbg !4230
  %_35 = shl i32 %init, 12, !dbg !4231
  %29 = or i32 %_35, %y_z, !dbg !4232
  store i32 %29, i32* %ch, align 4, !dbg !4232
  %_38 = icmp uge i8 %x, -16, !dbg !4233
  br i1 %_38, label %bb11, label %bb13, !dbg !4233

bb13:                                             ; preds = %bb28, %bb25
  br label %bb14, !dbg !4234

bb11:                                             ; preds = %bb25
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %30 = call align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hccc9d4a4f7ed0572E"({ i8*, i8* }* align 8 %bytes), !dbg !4170
  store i8* %30, i8** %self4, align 8, !dbg !4170
  br label %bb12, !dbg !4170

bb12:                                             ; preds = %bb11
  %31 = bitcast i8** %self4 to {}**, !dbg !4169
  %32 = load {}*, {}** %31, align 8, !dbg !4169
  %33 = icmp eq {}* %32, null, !dbg !4169
  %_73 = select i1 %33, i64 0, i64 1, !dbg !4169
  switch i64 %_73, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ], !dbg !4169

bb27:                                             ; preds = %bb12
  unreachable, !dbg !4169

bb26:                                             ; preds = %bb12
  unreachable, !dbg !4235

bb28:                                             ; preds = %bb12
  %val13 = load i8*, i8** %self4, align 8, !dbg !4169, !nonnull !23, !align !445, !noundef !23
  store i8* %val13, i8** %val.dbg.spill14, align 8, !dbg !4169
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill14, metadata !4166, metadata !DIExpression()), !dbg !4239
  %w = load i8, i8* %val13, align 1, !dbg !4240
  store i8 %w, i8* %w.dbg.spill, align 1, !dbg !4240
  call void @llvm.dbg.declare(metadata i8* %w.dbg.spill, metadata !4097, metadata !DIExpression()), !dbg !4241
  %_45 = and i32 %init, 7, !dbg !4242
  %_44 = shl i32 %_45, 18, !dbg !4242
  store i32 %y_z, i32* %ch.dbg.spill15, align 4, !dbg !4243
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill15, metadata !4244, metadata !DIExpression()), !dbg !4248
  store i8 %w, i8* %byte.dbg.spill16, align 1, !dbg !4250
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill16, metadata !4247, metadata !DIExpression()), !dbg !4248
  %_74 = shl i32 %y_z, 6, !dbg !4248
  %_77 = and i8 %w, 63, !dbg !4248
  %_76 = zext i8 %_77 to i32, !dbg !4248
  %_47 = or i32 %_74, %_76, !dbg !4248
  %34 = or i32 %_44, %_47, !dbg !4251
  store i32 %34, i32* %ch, align 4, !dbg !4251
  br label %bb13, !dbg !4252
}

; core::str::validations::next_code_point_reverse
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17h3be7733f33aea549E({ i8*, i8* }* align 8 %bytes) unnamed_addr #0 !dbg !4253 {
start:
  %byte.dbg.spill23 = alloca i8, align 1
  %ch.dbg.spill22 = alloca i32, align 4
  %byte.dbg.spill20 = alloca i8, align 1
  %ch.dbg.spill19 = alloca i32, align 4
  %byte.dbg.spill17 = alloca i8, align 1
  %ch.dbg.spill = alloca i32, align 4
  %byte.dbg.spill15 = alloca i8, align 1
  %x.dbg.spill = alloca i8, align 1
  %val.dbg.spill14 = alloca i8*, align 8
  %byte.dbg.spill12 = alloca i8, align 1
  %byte.dbg.spill11 = alloca i8, align 1
  %y.dbg.spill = alloca i8, align 1
  %val.dbg.spill10 = alloca i8*, align 8
  %byte.dbg.spill8 = alloca i8, align 1
  %byte.dbg.spill = alloca i8, align 1
  %z.dbg.spill = alloca i8, align 1
  %val.dbg.spill7 = alloca i8*, align 8
  %w.dbg.spill = alloca i8, align 1
  %back_byte.dbg.spill = alloca i8, align 1
  %next_byte.dbg.spill5 = alloca i8, align 1
  %next_byte.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill1 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %bytes.dbg.spill = alloca { i8*, i8* }*, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %self2 = alloca i8*, align 8
  %ch = alloca i32, align 4
  %self = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i8*, i8* }* %bytes, { i8*, i8* }** %bytes.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %bytes.dbg.spill, metadata !4255, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.declare(metadata i8** %self, metadata !4276, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !4258, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill1, metadata !4286, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4267, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !4293, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !4302, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !4311, metadata !DIExpression()), !dbg !4318
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %1 = call align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8e87941d7e06ef18E"({ i8*, i8* }* align 8 %bytes), !dbg !4284
  store i8* %1, i8** %self, align 8, !dbg !4284
  br label %bb1, !dbg !4284

bb1:                                              ; preds = %start
  %2 = bitcast i8** %self to {}**, !dbg !4283
  %3 = load {}*, {}** %2, align 8, !dbg !4283
  %4 = icmp eq {}* %3, null, !dbg !4283
  %_51 = select i1 %4, i64 0, i64 1, !dbg !4283
  switch i64 %_51, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !4283

bb18:                                             ; preds = %bb1
  unreachable, !dbg !4283

bb17:                                             ; preds = %bb1
  %5 = bitcast i8** %_4 to {}**, !dbg !4283
  store {}* null, {}** %5, align 8, !dbg !4283
  br label %bb2, !dbg !4283

bb19:                                             ; preds = %bb1
  %v = load i8*, i8** %self, align 8, !dbg !4283, !nonnull !23, !align !445, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !4283
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !4280, metadata !DIExpression()), !dbg !4320
  store i8* %v, i8** %_4, align 8, !dbg !4320
  br label %bb2, !dbg !4283

bb2:                                              ; preds = %bb17, %bb19
  %6 = bitcast i8** %_4 to {}**, !dbg !4284
  %7 = load {}*, {}** %6, align 8, !dbg !4284
  %8 = icmp eq {}* %7, null, !dbg !4284
  %_7 = select i1 %8, i64 1, i64 0, !dbg !4284
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !4284

bb4:                                              ; preds = %bb2
  unreachable, !dbg !4284

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !dbg !4284, !nonnull !23, !align !445, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !4284
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !4260, metadata !DIExpression()), !dbg !4321
  store i8* %val, i8** %next_byte.dbg.spill, align 8, !dbg !4322
  call void @llvm.dbg.declare(metadata i8** %next_byte.dbg.spill, metadata !4264, metadata !DIExpression()), !dbg !4323
  %_14 = load i8, i8* %val, align 1, !dbg !4324
  %_13 = icmp ult i8 %_14, -128, !dbg !4324
  br i1 %_13, label %bb6, label %bb7, !dbg !4324

bb5:                                              ; preds = %bb2
  %9 = bitcast { i32, i32 }* %0 to i32*, !dbg !4290
  store i32 0, i32* %9, align 4, !dbg !4290
  br label %bb15, !dbg !4325

bb15:                                             ; preds = %bb6, %bb5
  br label %bb16, !dbg !4327

bb7:                                              ; preds = %bb3
  %back_byte = load i8, i8* %val, align 1, !dbg !4328
  store i8 %back_byte, i8* %back_byte.dbg.spill, align 1, !dbg !4328
  call void @llvm.dbg.declare(metadata i8* %back_byte.dbg.spill, metadata !4265, metadata !DIExpression()), !dbg !4329
  store i8 %back_byte, i8* %w.dbg.spill, align 1, !dbg !4330
  call void @llvm.dbg.declare(metadata i8* %w.dbg.spill, metadata !4256, metadata !DIExpression()), !dbg !4331
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %10 = call align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8e87941d7e06ef18E"({ i8*, i8* }* align 8 %bytes), !dbg !4301
  store i8* %10, i8** %self2, align 8, !dbg !4301
  br label %bb8, !dbg !4301

bb6:                                              ; preds = %bb3
  %next_byte = load i8, i8* %val, align 1, !dbg !4322
  store i8 %next_byte, i8* %next_byte.dbg.spill5, align 1, !dbg !4322
  call void @llvm.dbg.declare(metadata i8* %next_byte.dbg.spill5, metadata !4262, metadata !DIExpression()), !dbg !4323
  %_15 = zext i8 %next_byte to i32, !dbg !4332
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4333
  store i32 %_15, i32* %11, align 4, !dbg !4333
  %12 = bitcast { i32, i32 }* %0 to i32*, !dbg !4333
  store i32 1, i32* %12, align 4, !dbg !4333
  br label %bb15, !dbg !4325

bb16:                                             ; preds = %bb14, %bb15
  %13 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !4327
  %14 = load i32, i32* %13, align 4, !dbg !4327, !range !4194, !noundef !23
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4327
  %16 = load i32, i32* %15, align 4, !dbg !4327
  %17 = insertvalue { i32, i32 } undef, i32 %14, 0, !dbg !4327
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1, !dbg !4327
  ret { i32, i32 } %18, !dbg !4327

bb8:                                              ; preds = %bb7
  %19 = bitcast i8** %self2 to {}**, !dbg !4300
  %20 = load {}*, {}** %19, align 8, !dbg !4300
  %21 = icmp eq {}* %20, null, !dbg !4300
  %_55 = select i1 %21, i64 0, i64 1, !dbg !4300
  switch i64 %_55, label %bb21 [
    i64 0, label %bb20
    i64 1, label %bb22
  ], !dbg !4300

bb21:                                             ; preds = %bb8
  unreachable, !dbg !4300

bb20:                                             ; preds = %bb8
  unreachable, !dbg !4334

bb22:                                             ; preds = %bb8
  %val6 = load i8*, i8** %self2, align 8, !dbg !4300, !nonnull !23, !align !445, !noundef !23
  store i8* %val6, i8** %val.dbg.spill7, align 8, !dbg !4300
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill7, metadata !4297, metadata !DIExpression()), !dbg !4338
  %z = load i8, i8* %val6, align 1, !dbg !4339
  store i8 %z, i8* %z.dbg.spill, align 1, !dbg !4339
  call void @llvm.dbg.declare(metadata i8* %z.dbg.spill, metadata !4269, metadata !DIExpression()), !dbg !4340
  store i8 %z, i8* %byte.dbg.spill, align 1, !dbg !4341
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !4342, metadata !DIExpression()), !dbg !4346
  %_57 = and i8 %z, 31, !dbg !4346
  %_23 = zext i8 %_57 to i32, !dbg !4346
  store i32 %_23, i32* %ch, align 4, !dbg !4348
  store i8 %z, i8* %byte.dbg.spill8, align 1, !dbg !4349
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill8, metadata !4350, metadata !DIExpression()), !dbg !4355
  %_25 = icmp slt i8 %z, -64, !dbg !4355
  br i1 %_25, label %bb9, label %bb14, !dbg !4356

bb14:                                             ; preds = %bb13, %bb22
  %ch21 = load i32, i32* %ch, align 4, !dbg !4357
  store i32 %ch21, i32* %ch.dbg.spill22, align 4, !dbg !4357
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill22, metadata !4358, metadata !DIExpression()), !dbg !4362
  store i8 %back_byte, i8* %byte.dbg.spill23, align 1, !dbg !4364
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill23, metadata !4361, metadata !DIExpression()), !dbg !4362
  %_86 = shl i32 %ch21, 6, !dbg !4362
  %_89 = and i8 %back_byte, 63, !dbg !4362
  %_88 = zext i8 %_89 to i32, !dbg !4362
  %_47 = or i32 %_86, %_88, !dbg !4362
  store i32 %_47, i32* %ch, align 4, !dbg !4365
  %_50 = load i32, i32* %ch, align 4, !dbg !4366
  %22 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !4367
  store i32 %_50, i32* %22, align 4, !dbg !4367
  %23 = bitcast { i32, i32 }* %0 to i32*, !dbg !4367
  store i32 1, i32* %23, align 4, !dbg !4367
  br label %bb16, !dbg !4327

bb9:                                              ; preds = %bb22
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %24 = call align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8e87941d7e06ef18E"({ i8*, i8* }* align 8 %bytes), !dbg !4310
  store i8* %24, i8** %self3, align 8, !dbg !4310
  br label %bb10, !dbg !4310

bb10:                                             ; preds = %bb9
  %25 = bitcast i8** %self3 to {}**, !dbg !4309
  %26 = load {}*, {}** %25, align 8, !dbg !4309
  %27 = icmp eq {}* %26, null, !dbg !4309
  %_63 = select i1 %27, i64 0, i64 1, !dbg !4309
  switch i64 %_63, label %bb24 [
    i64 0, label %bb23
    i64 1, label %bb25
  ], !dbg !4309

bb24:                                             ; preds = %bb10
  unreachable, !dbg !4309

bb23:                                             ; preds = %bb10
  unreachable, !dbg !4368

bb25:                                             ; preds = %bb10
  %val9 = load i8*, i8** %self3, align 8, !dbg !4309, !nonnull !23, !align !445, !noundef !23
  store i8* %val9, i8** %val.dbg.spill10, align 8, !dbg !4309
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill10, metadata !4306, metadata !DIExpression()), !dbg !4372
  %y = load i8, i8* %val9, align 1, !dbg !4373
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !4373
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !4271, metadata !DIExpression()), !dbg !4374
  store i8 %y, i8* %byte.dbg.spill11, align 1, !dbg !4375
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill11, metadata !4376, metadata !DIExpression()), !dbg !4380
  %_65 = and i8 %y, 15, !dbg !4380
  %_31 = zext i8 %_65 to i32, !dbg !4380
  store i32 %_31, i32* %ch, align 4, !dbg !4382
  store i8 %y, i8* %byte.dbg.spill12, align 1, !dbg !4383
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill12, metadata !4384, metadata !DIExpression()), !dbg !4387
  %_33 = icmp slt i8 %y, -64, !dbg !4387
  br i1 %_33, label %bb11, label %bb13, !dbg !4388

bb13:                                             ; preds = %bb28, %bb25
  %ch18 = load i32, i32* %ch, align 4, !dbg !4389
  store i32 %ch18, i32* %ch.dbg.spill19, align 4, !dbg !4389
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill19, metadata !4390, metadata !DIExpression()), !dbg !4394
  store i8 %z, i8* %byte.dbg.spill20, align 1, !dbg !4396
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill20, metadata !4393, metadata !DIExpression()), !dbg !4394
  %_81 = shl i32 %ch18, 6, !dbg !4394
  %_84 = and i8 %z, 63, !dbg !4394
  %_83 = zext i8 %_84 to i32, !dbg !4394
  %_44 = or i32 %_81, %_83, !dbg !4394
  store i32 %_44, i32* %ch, align 4, !dbg !4397
  br label %bb14, !dbg !4398

bb11:                                             ; preds = %bb25
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %28 = call align 1 i8* @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8e87941d7e06ef18E"({ i8*, i8* }* align 8 %bytes), !dbg !4319
  store i8* %28, i8** %self4, align 8, !dbg !4319
  br label %bb12, !dbg !4319

bb12:                                             ; preds = %bb11
  %29 = bitcast i8** %self4 to {}**, !dbg !4318
  %30 = load {}*, {}** %29, align 8, !dbg !4318
  %31 = icmp eq {}* %30, null, !dbg !4318
  %_71 = select i1 %31, i64 0, i64 1, !dbg !4318
  switch i64 %_71, label %bb27 [
    i64 0, label %bb26
    i64 1, label %bb28
  ], !dbg !4318

bb27:                                             ; preds = %bb12
  unreachable, !dbg !4318

bb26:                                             ; preds = %bb12
  unreachable, !dbg !4399

bb28:                                             ; preds = %bb12
  %val13 = load i8*, i8** %self4, align 8, !dbg !4318, !nonnull !23, !align !445, !noundef !23
  store i8* %val13, i8** %val.dbg.spill14, align 8, !dbg !4318
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill14, metadata !4315, metadata !DIExpression()), !dbg !4403
  %x = load i8, i8* %val13, align 1, !dbg !4404
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !4404
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !4273, metadata !DIExpression()), !dbg !4405
  store i8 %x, i8* %byte.dbg.spill15, align 1, !dbg !4406
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill15, metadata !4407, metadata !DIExpression()), !dbg !4411
  %_73 = and i8 %x, 7, !dbg !4411
  %_39 = zext i8 %_73 to i32, !dbg !4411
  store i32 %_39, i32* %ch, align 4, !dbg !4413
  %ch16 = load i32, i32* %ch, align 4, !dbg !4414
  store i32 %ch16, i32* %ch.dbg.spill, align 4, !dbg !4414
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !4415, metadata !DIExpression()), !dbg !4419
  store i8 %y, i8* %byte.dbg.spill17, align 1, !dbg !4421
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill17, metadata !4418, metadata !DIExpression()), !dbg !4419
  %_76 = shl i32 %ch16, 6, !dbg !4419
  %_79 = and i8 %y, 63, !dbg !4419
  %_78 = zext i8 %_79 to i32, !dbg !4419
  %_41 = or i32 %_76, %_78, !dbg !4419
  store i32 %_41, i32* %ch, align 4, !dbg !4422
  br label %bb13, !dbg !4423
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %pat.0, i64 %pat.1) unnamed_addr #1 !dbg !4424 {
start:
  %pat.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4428, metadata !DIExpression()), !dbg !4432
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %pat.dbg.spill, i32 0, i32 0
  store [0 x i8]* %pat.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %pat.dbg.spill, i32 0, i32 1
  store i64 %pat.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %pat.dbg.spill, metadata !4429, metadata !DIExpression()), !dbg !4433
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %4 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hd1805ba1b6eb2660E"([0 x i8]* align 1 %pat.0, i64 %pat.1, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4434
  br label %bb1, !dbg !4434

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !4435
}

; core::str::<impl str>::trim_matches
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$12trim_matches17hb2741686825608a8E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4436 {
start:
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %b.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %pat.dbg.spill = alloca %"[closure@core::str::<impl str>::trim::{closure#0}]", align 1
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %i1 = alloca { i64, i64 }, align 8
  %_15 = alloca %"core::option::Option<(usize, usize)>", align 8
  %_8 = alloca %"core::option::Option<(usize, usize)>", align 8
  %matcher = alloca %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", align 8
  %j = alloca i64, align 8
  %i = alloca i64, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4440, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.declare(metadata %"[closure@core::str::<impl str>::trim::{closure#0}]"* %pat.dbg.spill, metadata !4441, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4442, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.declare(metadata i64* %j, metadata !4444, metadata !DIExpression()), !dbg !4458
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %matcher, metadata !4446, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i1, metadata !4460, metadata !DIExpression()), !dbg !4468
  store i64 0, i64* %i, align 8, !dbg !4470
  store i64 0, i64* %j, align 8, !dbg !4471
; call <F as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h49ecd823c3899a35E"(%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* sret(%"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>") %matcher, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4472
  br label %bb1, !dbg !4472

bb1:                                              ; preds = %start
; invoke <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_reject
  invoke void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$11next_reject17hd5a39d2be4573d4fE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_8, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %matcher)
          to label %bb2 unwind label %cleanup, !dbg !4473

bb9:                                              ; preds = %cleanup
  br label %bb10, !dbg !4474

cleanup:                                          ; preds = %bb7, %bb4, %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to i64*, !dbg !4475
  %_10 = load i64, i64* %8, align 8, !dbg !4475, !range !3441, !noundef !23
  %9 = icmp eq i64 %_10, 1, !dbg !4475
  br i1 %9, label %bb3, label %bb4, !dbg !4475

bb3:                                              ; preds = %bb2
  %10 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4476
  %11 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %10, i32 0, i32 1, !dbg !4476
  %12 = bitcast { i64, i64 }* %11 to i64*, !dbg !4476
  %a = load i64, i64* %12, align 8, !dbg !4476
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !4476
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4448, metadata !DIExpression()), !dbg !4476
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_8 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4477
  %14 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %13, i32 0, i32 1, !dbg !4477
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !4477
  %b = load i64, i64* %15, align 8, !dbg !4477
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !4477
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !4450, metadata !DIExpression()), !dbg !4477
  store i64 %a, i64* %i, align 8, !dbg !4478
  store i64 %b, i64* %j, align 8, !dbg !4479
  br label %bb4, !dbg !4480

bb4:                                              ; preds = %bb3, %bb2
; invoke <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::ReverseSearcher>::next_reject_back
  invoke void @"_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17h67232f0984849cf5E"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_15, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %matcher)
          to label %bb5 unwind label %cleanup, !dbg !4481

bb5:                                              ; preds = %bb4
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %_15 to i64*, !dbg !4482
  %_17 = load i64, i64* %16, align 8, !dbg !4482, !range !3441, !noundef !23
  %17 = icmp eq i64 %_17, 1, !dbg !4482
  br i1 %17, label %bb6, label %bb7, !dbg !4482

bb6:                                              ; preds = %bb5
  %18 = bitcast %"core::option::Option<(usize, usize)>"* %_15 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4483
  %19 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %18, i32 0, i32 1, !dbg !4483
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !4483
  %b2 = load i64, i64* %20, align 8, !dbg !4483
  store i64 %b2, i64* %b.dbg.spill3, align 8, !dbg !4483
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill3, metadata !4451, metadata !DIExpression()), !dbg !4483
  store i64 %b2, i64* %j, align 8, !dbg !4484
  br label %bb7, !dbg !4485

bb7:                                              ; preds = %bb6, %bb5
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !4469
  store [0 x i8]* %self.0, [0 x i8]** %21, align 8, !dbg !4469
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !4469
  store i64 %self.1, i64* %22, align 8, !dbg !4469
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !4465, metadata !DIExpression()), !dbg !4468
  %_22 = load i64, i64* %i, align 8, !dbg !4486
  %_23 = load i64, i64* %j, align 8, !dbg !4487
  %23 = bitcast { i64, i64 }* %i1 to i64*, !dbg !4486
  store i64 %_22, i64* %23, align 8, !dbg !4486
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i1, i32 0, i32 1, !dbg !4486
  store i64 %_23, i64* %24, align 8, !dbg !4486
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i1, i32 0, i32 0, !dbg !4468
  %_25.0 = load i64, i64* %25, align 8, !dbg !4468
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i1, i32 0, i32 1, !dbg !4468
  %_25.1 = load i64, i64* %26, align 8, !dbg !4468
; invoke core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %27 = invoke { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h612abac0371ebe9fE"(i64 %_25.0, i64 %_25.1, [0 x i8]* %self.0, i64 %self.1)
          to label %bb11 unwind label %cleanup, !dbg !4468

bb11:                                             ; preds = %bb7
  %_24.0 = extractvalue { [0 x i8]*, i64 } %27, 0, !dbg !4468
  %_24.1 = extractvalue { [0 x i8]*, i64 } %27, 1, !dbg !4468
  br label %bb8, !dbg !4474

bb10:                                             ; preds = %bb9
  %28 = bitcast { i8*, i32 }* %0 to i8**, !dbg !4488
  %29 = load i8*, i8** %28, align 8, !dbg !4488
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !4488
  %31 = load i32, i32* %30, align 8, !dbg !4488
  %32 = insertvalue { i8*, i32 } undef, i8* %29, 0, !dbg !4488
  %33 = insertvalue { i8*, i32 } %32, i32 %31, 1, !dbg !4488
  resume { i8*, i32 } %33, !dbg !4488

bb8:                                              ; preds = %bb11
  %34 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_24.0, 0, !dbg !4489
  %35 = insertvalue { [0 x i8]*, i64 } %34, i64 %_24.1, 1, !dbg !4489
  ret { [0 x i8]*, i64 } %35, !dbg !4489
}

; core::str::<impl str>::trim
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim17hd25ab38ac10a5d56E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !4490 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4494, metadata !DIExpression()), !dbg !4495
; call core::str::<impl str>::trim_matches
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$12trim_matches17hb2741686825608a8E"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4496
  %3 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !4496
  %4 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !4496
  br label %bb1, !dbg !4496

bb1:                                              ; preds = %start
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %3, 0, !dbg !4497
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1, !dbg !4497
  ret { [0 x i8]*, i64 } %6, !dbg !4497
}

; core::str::<impl str>::trim::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim28_$u7b$$u7b$closure$u7d$$u7d$17h143a3bc07e2984ccE"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %_1, i32 %c) unnamed_addr #0 !dbg !4498 {
start:
  %c.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@core::str::<impl str>::trim::{closure#0}]"*, align 8
  store %"[closure@core::str::<impl str>::trim::{closure#0}]"* %_1, %"[closure@core::str::<impl str>::trim::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::str::<impl str>::trim::{closure#0}]"** %_1.dbg.spill, metadata !4504, metadata !DIExpression()), !dbg !4505
  store i32 %c, i32* %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !4503, metadata !DIExpression()), !dbg !4506
; call core::char::methods::<impl char>::is_whitespace
  %0 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h5b061f1b4b1d2b71E"(i32 %c), !dbg !4507
  br label %bb1, !dbg !4507

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !4508
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h05dd069edc62a978E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !4509 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<i32, core::num::error::ParseIntError>", align 4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4528, metadata !DIExpression()), !dbg !4531
; call core::num::<impl core::str::traits::FromStr for i32>::from_str
  %4 = call i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$i32$GT$8from_str17h60c3befe7cda1babE"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4532
  store i64 %4, i64* %0, align 8, !dbg !4532
  %5 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %1 to i8*, !dbg !4532
  %6 = bitcast i64* %0 to i8*, !dbg !4532
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false), !dbg !4532
  br label %bb1, !dbg !4532

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %1 to i64*, !dbg !4533
  %8 = load i64, i64* %7, align 4, !dbg !4533
  ret i64 %8, !dbg !4533
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h7b8b0c2b7cd3bb41E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !4534 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<u32, core::num::error::ParseIntError>", align 4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4552, metadata !DIExpression()), !dbg !4555
; call core::num::<impl core::str::traits::FromStr for u32>::from_str
  %4 = call i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u32$GT$8from_str17h2a346393c61b3aedE"([0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4556
  store i64 %4, i64* %0, align 8, !dbg !4556
  %5 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %1 to i8*, !dbg !4556
  %6 = bitcast i64* %0 to i8*, !dbg !4556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false), !dbg !4556
  br label %bb1, !dbg !4556

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %1 to i64*, !dbg !4557
  %8 = load i64, i64* %7, align 4, !dbg !4557
  ret i64 %8, !dbg !4557
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h8dac79dedbab61bdE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %0, [0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !4558 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4577, metadata !DIExpression()), !dbg !4580
; call core::num::<impl core::str::traits::FromStr for u64>::from_str
  call void @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u64$GT$8from_str17h32134b240f70e51fE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %0, [0 x i8]* align 1 %self.0, i64 %self.1), !dbg !4581
  br label %bb1, !dbg !4581

bb1:                                              ; preds = %start
  ret void, !dbg !4582
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h0a47fafe188b62e8E"(%"core::str::iter::Split<char>"* sret(%"core::str::iter::Split<char>") %0, [0 x i8]* align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4583 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %pat.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca %"core::str::pattern::CharSearcher", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<char>", align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4610, metadata !DIExpression()), !dbg !4612
  store i32 %pat, i32* %pat.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %pat.dbg.spill, metadata !4611, metadata !DIExpression()), !dbg !4613
  store i8 1, i8* %_9, align 1, !dbg !4614
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4615
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !4615
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4615
  store i64 %self.1, i64* %6, align 8, !dbg !4615
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4616, metadata !DIExpression()), !dbg !4621
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !4621
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !4621
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !4621
  store i64 %self.1, i64* %8, align 8, !dbg !4621
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !4622, metadata !DIExpression()), !dbg !4625
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !4625
  store [0 x i8]* %self.0, [0 x i8]** %9, align 8, !dbg !4625
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !4625
  store i64 %self.1, i64* %10, align 8, !dbg !4625
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !4625
  %_11.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !4625, !nonnull !23, !align !445, !noundef !23
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !4625
  %_11.1 = load i64, i64* %12, align 8, !dbg !4625
  br label %bb5, !dbg !4625

bb5:                                              ; preds = %start
  store i8 0, i8* %_9, align 1, !dbg !4627
; invoke <char as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h0e053acafbe28eb4E"(%"core::str::pattern::CharSearcher"* sret(%"core::str::pattern::CharSearcher") %_6, i32 %pat, [0 x i8]* align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup, !dbg !4627

bb4:                                              ; preds = %cleanup
  %13 = load i8, i8* %_9, align 1, !dbg !4628, !range !512, !noundef !23
  %14 = trunc i8 %13 to i1, !dbg !4628
  br i1 %14, label %bb3, label %bb2, !dbg !4628

cleanup:                                          ; preds = %bb5
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  %17 = extractvalue { i8*, i32 } %15, 1
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %17, i32* %19, align 8
  br label %bb4

bb1:                                              ; preds = %bb5
  %20 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i64*, !dbg !4614
  store i64 0, i64* %20, align 8, !dbg !4614
  %21 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 1, !dbg !4614
  store i64 %_11.1, i64* %21, align 8, !dbg !4614
  %22 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 2, !dbg !4614
  %23 = bitcast %"core::str::pattern::CharSearcher"* %22 to i8*, !dbg !4614
  %24 = bitcast %"core::str::pattern::CharSearcher"* %_6 to i8*, !dbg !4614
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 48, i1 false), !dbg !4614
  %25 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 3, !dbg !4614
  store i8 1, i8* %25, align 8, !dbg !4614
  %26 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %_3, i32 0, i32 4, !dbg !4614
  store i8 0, i8* %26, align 1, !dbg !4614
  %27 = bitcast %"core::str::iter::Split<char>"* %0 to %"core::str::iter::SplitInternal<char>"*, !dbg !4629
  %28 = bitcast %"core::str::iter::SplitInternal<char>"* %27 to i8*, !dbg !4629
  %29 = bitcast %"core::str::iter::SplitInternal<char>"* %_3 to i8*, !dbg !4629
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 72, i1 false), !dbg !4629
  ret void, !dbg !4630

bb2:                                              ; preds = %bb3, %bb4
  %30 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4631
  %31 = load i8*, i8** %30, align 8, !dbg !4631
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4631
  %33 = load i32, i32* %32, align 8, !dbg !4631
  %34 = insertvalue { i8*, i32 } undef, i8* %31, 0, !dbg !4631
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1, !dbg !4631
  resume { i8*, i32 } %35, !dbg !4631

bb3:                                              ; preds = %bb4
  br label %bb2, !dbg !4628
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h1bb17d058b9c0d23E"(%"core::str::iter::Split<[char; 2]>"* sret(%"core::str::iter::Split<[char; 2]>") %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4632 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca [2 x i32], align 4
  %_6 = alloca %"core::str::pattern::CharArraySearcher<2>", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<[char; 2]>", align 8
  %4 = alloca i64, align 8
  %pat = alloca [2 x i32], align 4
  store i64 %1, i64* %4, align 8
  %5 = bitcast [2 x i32]* %pat to i8*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false)
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4661, metadata !DIExpression()), !dbg !4663
  call void @llvm.dbg.declare(metadata [2 x i32]* %pat, metadata !4662, metadata !DIExpression()), !dbg !4664
  store i8 1, i8* %_9, align 1, !dbg !4665
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4666
  store [0 x i8]* %self.0, [0 x i8]** %9, align 8, !dbg !4666
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4666
  store i64 %self.1, i64* %10, align 8, !dbg !4666
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4667, metadata !DIExpression()), !dbg !4670
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !4670
  store [0 x i8]* %self.0, [0 x i8]** %11, align 8, !dbg !4670
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !4670
  store i64 %self.1, i64* %12, align 8, !dbg !4670
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !4671, metadata !DIExpression()), !dbg !4674
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !4674
  store [0 x i8]* %self.0, [0 x i8]** %13, align 8, !dbg !4674
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !4674
  store i64 %self.1, i64* %14, align 8, !dbg !4674
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !4674
  %_11.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !dbg !4674, !nonnull !23, !align !445, !noundef !23
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !4674
  %_11.1 = load i64, i64* %16, align 8, !dbg !4674
  br label %bb5, !dbg !4674

bb5:                                              ; preds = %start
  store i8 0, i8* %_9, align 1, !dbg !4676
  %17 = bitcast [2 x i32]* %_7 to i8*, !dbg !4676
  %18 = bitcast [2 x i32]* %pat to i8*, !dbg !4676
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 8, i1 false), !dbg !4676
  %19 = bitcast [2 x i32]* %_7 to i64*, !dbg !4676
  %20 = load i64, i64* %19, align 4, !dbg !4676
; invoke <[char; N] as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN73_$LT$$u5b$char$u3b$$u20$N$u5d$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h8b847401d3708913E"(%"core::str::pattern::CharArraySearcher<2>"* sret(%"core::str::pattern::CharArraySearcher<2>") %_6, i64 %20, [0 x i8]* align 1 %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup, !dbg !4676

bb4:                                              ; preds = %cleanup
  %21 = load i8, i8* %_9, align 1, !dbg !4677, !range !512, !noundef !23
  %22 = trunc i8 %21 to i1, !dbg !4677
  br i1 %22, label %bb3, label %bb2, !dbg !4677

cleanup:                                          ; preds = %bb5
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  %25 = extractvalue { i8*, i32 } %23, 1
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %25, i32* %27, align 8
  br label %bb4

bb1:                                              ; preds = %bb5
  %28 = bitcast %"core::str::iter::SplitInternal<[char; 2]>"* %_3 to i64*, !dbg !4665
  store i64 0, i64* %28, align 8, !dbg !4665
  %29 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %_3, i32 0, i32 1, !dbg !4665
  store i64 %_11.1, i64* %29, align 8, !dbg !4665
  %30 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %_3, i32 0, i32 2, !dbg !4665
  %31 = bitcast %"core::str::pattern::CharArraySearcher<2>"* %30 to i8*, !dbg !4665
  %32 = bitcast %"core::str::pattern::CharArraySearcher<2>"* %_6 to i8*, !dbg !4665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 48, i1 false), !dbg !4665
  %33 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %_3, i32 0, i32 3, !dbg !4665
  store i8 1, i8* %33, align 8, !dbg !4665
  %34 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %_3, i32 0, i32 4, !dbg !4665
  store i8 0, i8* %34, align 1, !dbg !4665
  %35 = bitcast %"core::str::iter::Split<[char; 2]>"* %0 to %"core::str::iter::SplitInternal<[char; 2]>"*, !dbg !4678
  %36 = bitcast %"core::str::iter::SplitInternal<[char; 2]>"* %35 to i8*, !dbg !4678
  %37 = bitcast %"core::str::iter::SplitInternal<[char; 2]>"* %_3 to i8*, !dbg !4678
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 72, i1 false), !dbg !4678
  ret void, !dbg !4679

bb2:                                              ; preds = %bb3, %bb4
  %38 = bitcast { i8*, i32 }* %2 to i8**, !dbg !4680
  %39 = load i8*, i8** %38, align 8, !dbg !4680
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !4680
  %41 = load i32, i32* %40, align 8, !dbg !4680
  %42 = insertvalue { i8*, i32 } undef, i8* %39, 0, !dbg !4680
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1, !dbg !4680
  resume { i8*, i32 } %43, !dbg !4680

bb3:                                              ; preds = %bb4
  br label %bb2, !dbg !4677
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h6744161f5d751910E"(%"core::str::iter::SplitInternal<[char; 2]>"* align 8 %self) unnamed_addr #0 !dbg !4681 {
start:
  %elt.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<[char; 2]>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<[char; 2]>"* %self, %"core::str::iter::SplitInternal<[char; 2]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<[char; 2]>"** %self.dbg.spill, metadata !4686, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !4695, metadata !DIExpression()), !dbg !4700
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %self, i32 0, i32 4, !dbg !4702
  %2 = load i8, i8* %1, align 1, !dbg !4702, !range !512, !noundef !23
  %_2 = trunc i8 %2 to i1, !dbg !4702
  br i1 %_2, label %bb1, label %bb2, !dbg !4702

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %self, i32 0, i32 2, !dbg !4703
; call <core::str::pattern::CharArraySearcher<_> as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN95_$LT$core..str..pattern..CharArraySearcher$LT$_$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hd2ef0c83d6342879E"(%"core::str::pattern::CharArraySearcher<2>"* align 8 %_4), !dbg !4703
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !4703
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !4703
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0, !dbg !4703
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8, !dbg !4703
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1, !dbg !4703
  store i64 %haystack.1, i64* %5, align 8, !dbg !4703
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !4687, metadata !DIExpression()), !dbg !4704
  br label %bb3, !dbg !4703

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %0 to {}**, !dbg !4705
  store {}* null, {}** %6, align 8, !dbg !4705
  br label %bb10, !dbg !4706

bb10:                                             ; preds = %bb9, %bb1
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !4706
  %8 = load i8*, i8** %7, align 8, !dbg !4706, !align !445
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !4706
  %10 = load i64, i64* %9, align 8, !dbg !4706
  %11 = insertvalue { i8*, i64 } undef, i8* %8, 0, !dbg !4706
  %12 = insertvalue { i8*, i64 } %11, i64 %10, 1, !dbg !4706
  ret { i8*, i64 } %12, !dbg !4706

bb3:                                              ; preds = %bb2
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %self, i32 0, i32 2, !dbg !4707
; call <core::str::pattern::CharArraySearcher<_> as core::str::pattern::Searcher>::next_match
  call void @"_ZN95_$LT$core..str..pattern..CharArraySearcher$LT$_$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h54af7edd65943b5eE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_5, %"core::str::pattern::CharArraySearcher<2>"* align 8 %_6), !dbg !4707
  br label %bb4, !dbg !4707

bb4:                                              ; preds = %bb3
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to i64*, !dbg !4707
  %_7 = load i64, i64* %13, align 8, !dbg !4707, !range !3441, !noundef !23
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ], !dbg !4708

bb6:                                              ; preds = %bb4
  unreachable, !dbg !4707

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %14 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hb439a7971d71987aE"(%"core::str::iter::SplitInternal<[char; 2]>"* align 8 %self), !dbg !4709
  store { i8*, i64 } %14, { i8*, i64 }* %0, align 8, !dbg !4709
  br label %bb8, !dbg !4709

bb7:                                              ; preds = %bb4
  %15 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4710
  %16 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %15, i32 0, i32 1, !dbg !4710
  %17 = bitcast { i64, i64 }* %16 to i64*, !dbg !4710
  %a = load i64, i64* %17, align 8, !dbg !4710
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !4710
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4689, metadata !DIExpression()), !dbg !4711
  %18 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4712
  %19 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %18, i32 0, i32 1, !dbg !4712
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !4712
  %b = load i64, i64* %20, align 8, !dbg !4712
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !4712
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !4691, metadata !DIExpression()), !dbg !4713
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4701
  store [0 x i8]* %haystack.0, [0 x i8]** %21, align 8, !dbg !4701
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4701
  store i64 %haystack.1, i64* %22, align 8, !dbg !4701
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4699, metadata !DIExpression()), !dbg !4700
  %23 = bitcast %"core::str::iter::SplitInternal<[char; 2]>"* %self to i64*, !dbg !4714
  %_13 = load i64, i64* %23, align 8, !dbg !4714
  %24 = bitcast { i64, i64 }* %i to i64*, !dbg !4714
  store i64 %_13, i64* %24, align 8, !dbg !4714
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4714
  store i64 %a, i64* %25, align 8, !dbg !4714
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !4700
  %_19.0 = load i64, i64* %26, align 8, !dbg !4700
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4700
  %_19.1 = load i64, i64* %27, align 8, !dbg !4700
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %28 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h612abac0371ebe9fE"(i64 %_19.0, i64 %_19.1, [0 x i8]* %haystack.0, i64 %haystack.1), !dbg !4700
  %_18.0 = extractvalue { [0 x i8]*, i64 } %28, 0, !dbg !4700
  %_18.1 = extractvalue { [0 x i8]*, i64 } %28, 1, !dbg !4700
  br label %bb11, !dbg !4700

bb11:                                             ; preds = %bb7
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 0, !dbg !4700
  store [0 x i8]* %_18.0, [0 x i8]** %29, align 8, !dbg !4700
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 1, !dbg !4700
  store i64 %_18.1, i64* %30, align 8, !dbg !4700
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %elt.dbg.spill, metadata !4692, metadata !DIExpression()), !dbg !4715
  %31 = bitcast %"core::str::iter::SplitInternal<[char; 2]>"* %self to i64*, !dbg !4716
  store i64 %b, i64* %31, align 8, !dbg !4716
  %32 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !4717
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !4717
  store [0 x i8]* %_18.0, [0 x i8]** %33, align 8, !dbg !4717
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !4717
  store i64 %_18.1, i64* %34, align 8, !dbg !4717
  br label %bb9, !dbg !4718

bb9:                                              ; preds = %bb8, %bb11
  br label %bb10, !dbg !4706

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !4719
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17ha5aaa9b52ec87b91E"(%"core::str::iter::SplitInternal<char>"* align 8 %self) unnamed_addr #0 !dbg !4720 {
start:
  %elt.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<char>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<char>"* %self, %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, metadata !4725, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !4734, metadata !DIExpression()), !dbg !4739
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4, !dbg !4741
  %2 = load i8, i8* %1, align 1, !dbg !4741, !range !512, !noundef !23
  %_2 = trunc i8 %2 to i1, !dbg !4741
  br i1 %_2, label %bb1, label %bb2, !dbg !4741

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2, !dbg !4742
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %3 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h5b45f91e8f6b6713E"(%"core::str::pattern::CharSearcher"* align 8 %_4), !dbg !4742
  %haystack.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !4742
  %haystack.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !4742
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0, !dbg !4742
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8, !dbg !4742
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1, !dbg !4742
  store i64 %haystack.1, i64* %5, align 8, !dbg !4742
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !4726, metadata !DIExpression()), !dbg !4743
  br label %bb3, !dbg !4742

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %0 to {}**, !dbg !4744
  store {}* null, {}** %6, align 8, !dbg !4744
  br label %bb10, !dbg !4745

bb10:                                             ; preds = %bb9, %bb1
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !4745
  %8 = load i8*, i8** %7, align 8, !dbg !4745, !align !445
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !4745
  %10 = load i64, i64* %9, align 8, !dbg !4745
  %11 = insertvalue { i8*, i64 } undef, i8* %8, 0, !dbg !4745
  %12 = insertvalue { i8*, i64 } %11, i64 %10, 1, !dbg !4745
  ret { i8*, i64 } %12, !dbg !4745

bb3:                                              ; preds = %bb2
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2, !dbg !4746
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hbac8f4cc31f9a4ccE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %_5, %"core::str::pattern::CharSearcher"* align 8 %_6), !dbg !4746
  br label %bb4, !dbg !4746

bb4:                                              ; preds = %bb3
  %13 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to i64*, !dbg !4746
  %_7 = load i64, i64* %13, align 8, !dbg !4746, !range !3441, !noundef !23
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ], !dbg !4747

bb6:                                              ; preds = %bb4
  unreachable, !dbg !4746

bb5:                                              ; preds = %bb4
; call core::str::iter::SplitInternal<P>::get_end
  %14 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17haa59f93809c2fca0E"(%"core::str::iter::SplitInternal<char>"* align 8 %self), !dbg !4748
  store { i8*, i64 } %14, { i8*, i64 }* %0, align 8, !dbg !4748
  br label %bb8, !dbg !4748

bb7:                                              ; preds = %bb4
  %15 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4749
  %16 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %15, i32 0, i32 1, !dbg !4749
  %17 = bitcast { i64, i64 }* %16 to i64*, !dbg !4749
  %a = load i64, i64* %17, align 8, !dbg !4749
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !4749
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4728, metadata !DIExpression()), !dbg !4750
  %18 = bitcast %"core::option::Option<(usize, usize)>"* %_5 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4751
  %19 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %18, i32 0, i32 1, !dbg !4751
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !4751
  %b = load i64, i64* %20, align 8, !dbg !4751
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !4751
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !4730, metadata !DIExpression()), !dbg !4752
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4740
  store [0 x i8]* %haystack.0, [0 x i8]** %21, align 8, !dbg !4740
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4740
  store i64 %haystack.1, i64* %22, align 8, !dbg !4740
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4738, metadata !DIExpression()), !dbg !4739
  %23 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !4753
  %_13 = load i64, i64* %23, align 8, !dbg !4753
  %24 = bitcast { i64, i64 }* %i to i64*, !dbg !4753
  store i64 %_13, i64* %24, align 8, !dbg !4753
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4753
  store i64 %a, i64* %25, align 8, !dbg !4753
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !4739
  %_19.0 = load i64, i64* %26, align 8, !dbg !4739
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4739
  %_19.1 = load i64, i64* %27, align 8, !dbg !4739
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %28 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h612abac0371ebe9fE"(i64 %_19.0, i64 %_19.1, [0 x i8]* %haystack.0, i64 %haystack.1), !dbg !4739
  %_18.0 = extractvalue { [0 x i8]*, i64 } %28, 0, !dbg !4739
  %_18.1 = extractvalue { [0 x i8]*, i64 } %28, 1, !dbg !4739
  br label %bb11, !dbg !4739

bb11:                                             ; preds = %bb7
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 0, !dbg !4739
  store [0 x i8]* %_18.0, [0 x i8]** %29, align 8, !dbg !4739
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %elt.dbg.spill, i32 0, i32 1, !dbg !4739
  store i64 %_18.1, i64* %30, align 8, !dbg !4739
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %elt.dbg.spill, metadata !4731, metadata !DIExpression()), !dbg !4754
  %31 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !4755
  store i64 %b, i64* %31, align 8, !dbg !4755
  %32 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !4756
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !4756
  store [0 x i8]* %_18.0, [0 x i8]** %33, align 8, !dbg !4756
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !4756
  store i64 %_18.1, i64* %34, align 8, !dbg !4756
  br label %bb9, !dbg !4757

bb9:                                              ; preds = %bb8, %bb11
  br label %bb10, !dbg !4745

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !4758
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17haa59f93809c2fca0E"(%"core::str::iter::SplitInternal<char>"* align 8 %self) unnamed_addr #0 !dbg !4759 {
start:
  %string.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<char>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<char>"* %self, %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<char>"** %self.dbg.spill, metadata !4761, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !4765, metadata !DIExpression()), !dbg !4770
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4, !dbg !4772
  %2 = load i8, i8* %1, align 1, !dbg !4772, !range !512, !noundef !23
  %_4 = trunc i8 %2 to i1, !dbg !4772
  %_3 = xor i1 %_4, true, !dbg !4773
  br i1 %_3, label %bb2, label %bb1, !dbg !4773

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1, !dbg !4773
  br label %bb3, !dbg !4773

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 3, !dbg !4774
  %4 = load i8, i8* %3, align 8, !dbg !4774, !range !512, !noundef !23
  %_6 = trunc i8 %4 to i1, !dbg !4774
  br i1 %_6, label %bb4, label %bb5, !dbg !4775

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 1, !dbg !4776
  %_9 = load i64, i64* %5, align 8, !dbg !4776
  %6 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !4777
  %_10 = load i64, i64* %6, align 8, !dbg !4777
  %_8 = sub i64 %_9, %_10, !dbg !4776
  %_7 = icmp ugt i64 %_8, 0, !dbg !4776
  %7 = zext i1 %_7 to i8, !dbg !4775
  store i8 %7, i8* %_5, align 1, !dbg !4775
  br label %bb6, !dbg !4775

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_5, align 1, !dbg !4775
  br label %bb6, !dbg !4775

bb6:                                              ; preds = %bb5, %bb4
  %8 = load i8, i8* %_5, align 1, !dbg !4773, !range !512, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !4773
  %10 = zext i1 %9 to i8, !dbg !4773
  store i8 %10, i8* %_2, align 1, !dbg !4773
  br label %bb3, !dbg !4773

bb3:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %_2, align 1, !dbg !4773, !range !512, !noundef !23
  %12 = trunc i8 %11 to i1, !dbg !4773
  br i1 %12, label %bb7, label %bb9, !dbg !4773

bb9:                                              ; preds = %bb3
  %13 = bitcast { i8*, i64 }* %0 to {}**, !dbg !4778
  store {}* null, {}** %13, align 8, !dbg !4778
  br label %bb10, !dbg !4779

bb7:                                              ; preds = %bb3
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 4, !dbg !4780
  store i8 1, i8* %14, align 1, !dbg !4780
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 2, !dbg !4771
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %15 = call { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h5b45f91e8f6b6713E"(%"core::str::pattern::CharSearcher"* align 8 %_14), !dbg !4771
  %_13.0 = extractvalue { [0 x i8]*, i64 } %15, 0, !dbg !4771
  %_13.1 = extractvalue { [0 x i8]*, i64 } %15, 1, !dbg !4771
  br label %bb8, !dbg !4771

bb8:                                              ; preds = %bb7
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4771
  store [0 x i8]* %_13.0, [0 x i8]** %16, align 8, !dbg !4771
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4771
  store i64 %_13.1, i64* %17, align 8, !dbg !4771
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4769, metadata !DIExpression()), !dbg !4770
  %18 = bitcast %"core::str::iter::SplitInternal<char>"* %self to i64*, !dbg !4781
  %_16 = load i64, i64* %18, align 8, !dbg !4781
  %19 = getelementptr inbounds %"core::str::iter::SplitInternal<char>", %"core::str::iter::SplitInternal<char>"* %self, i32 0, i32 1, !dbg !4782
  %_17 = load i64, i64* %19, align 8, !dbg !4782
  %20 = bitcast { i64, i64 }* %i to i64*, !dbg !4781
  store i64 %_16, i64* %20, align 8, !dbg !4781
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4781
  store i64 %_17, i64* %21, align 8, !dbg !4781
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !4770
  %_20.0 = load i64, i64* %22, align 8, !dbg !4770
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4770
  %_20.1 = load i64, i64* %23, align 8, !dbg !4770
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h612abac0371ebe9fE"(i64 %_20.0, i64 %_20.1, [0 x i8]* %_13.0, i64 %_13.1), !dbg !4770
  %_19.0 = extractvalue { [0 x i8]*, i64 } %24, 0, !dbg !4770
  %_19.1 = extractvalue { [0 x i8]*, i64 } %24, 1, !dbg !4770
  br label %bb11, !dbg !4770

bb11:                                             ; preds = %bb8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 0, !dbg !4770
  store [0 x i8]* %_19.0, [0 x i8]** %25, align 8, !dbg !4770
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 1, !dbg !4770
  store i64 %_19.1, i64* %26, align 8, !dbg !4770
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %string.dbg.spill, metadata !4762, metadata !DIExpression()), !dbg !4783
  %27 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !4784
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0, !dbg !4784
  store [0 x i8]* %_19.0, [0 x i8]** %28, align 8, !dbg !4784
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1, !dbg !4784
  store i64 %_19.1, i64* %29, align 8, !dbg !4784
  br label %bb10, !dbg !4779

bb10:                                             ; preds = %bb9, %bb11
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !4785
  %31 = load i8*, i8** %30, align 8, !dbg !4785, !align !445
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !4785
  %33 = load i64, i64* %32, align 8, !dbg !4785
  %34 = insertvalue { i8*, i64 } undef, i8* %31, 0, !dbg !4785
  %35 = insertvalue { i8*, i64 } %34, i64 %33, 1, !dbg !4785
  ret { i8*, i64 } %35, !dbg !4785
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hb439a7971d71987aE"(%"core::str::iter::SplitInternal<[char; 2]>"* align 8 %self) unnamed_addr #0 !dbg !4786 {
start:
  %string.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::iter::SplitInternal<[char; 2]>"*, align 8
  %i = alloca { i64, i64 }, align 8
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::SplitInternal<[char; 2]>"* %self, %"core::str::iter::SplitInternal<[char; 2]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::SplitInternal<[char; 2]>"** %self.dbg.spill, metadata !4788, metadata !DIExpression()), !dbg !4791
  call void @llvm.dbg.declare(metadata { i64, i64 }* %i, metadata !4792, metadata !DIExpression()), !dbg !4797
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %self, i32 0, i32 4, !dbg !4799
  %2 = load i8, i8* %1, align 1, !dbg !4799, !range !512, !noundef !23
  %_4 = trunc i8 %2 to i1, !dbg !4799
  %_3 = xor i1 %_4, true, !dbg !4800
  br i1 %_3, label %bb2, label %bb1, !dbg !4800

bb1:                                              ; preds = %start
  store i8 0, i8* %_2, align 1, !dbg !4800
  br label %bb3, !dbg !4800

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %self, i32 0, i32 3, !dbg !4801
  %4 = load i8, i8* %3, align 8, !dbg !4801, !range !512, !noundef !23
  %_6 = trunc i8 %4 to i1, !dbg !4801
  br i1 %_6, label %bb4, label %bb5, !dbg !4802

bb5:                                              ; preds = %bb2
  %5 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %self, i32 0, i32 1, !dbg !4803
  %_9 = load i64, i64* %5, align 8, !dbg !4803
  %6 = bitcast %"core::str::iter::SplitInternal<[char; 2]>"* %self to i64*, !dbg !4804
  %_10 = load i64, i64* %6, align 8, !dbg !4804
  %_8 = sub i64 %_9, %_10, !dbg !4803
  %_7 = icmp ugt i64 %_8, 0, !dbg !4803
  %7 = zext i1 %_7 to i8, !dbg !4802
  store i8 %7, i8* %_5, align 1, !dbg !4802
  br label %bb6, !dbg !4802

bb4:                                              ; preds = %bb2
  store i8 1, i8* %_5, align 1, !dbg !4802
  br label %bb6, !dbg !4802

bb6:                                              ; preds = %bb5, %bb4
  %8 = load i8, i8* %_5, align 1, !dbg !4800, !range !512, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !4800
  %10 = zext i1 %9 to i8, !dbg !4800
  store i8 %10, i8* %_2, align 1, !dbg !4800
  br label %bb3, !dbg !4800

bb3:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %_2, align 1, !dbg !4800, !range !512, !noundef !23
  %12 = trunc i8 %11 to i1, !dbg !4800
  br i1 %12, label %bb7, label %bb9, !dbg !4800

bb9:                                              ; preds = %bb3
  %13 = bitcast { i8*, i64 }* %0 to {}**, !dbg !4805
  store {}* null, {}** %13, align 8, !dbg !4805
  br label %bb10, !dbg !4806

bb7:                                              ; preds = %bb3
  %14 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %self, i32 0, i32 4, !dbg !4807
  store i8 1, i8* %14, align 1, !dbg !4807
  %_14 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %self, i32 0, i32 2, !dbg !4798
; call <core::str::pattern::CharArraySearcher<_> as core::str::pattern::Searcher>::haystack
  %15 = call { [0 x i8]*, i64 } @"_ZN95_$LT$core..str..pattern..CharArraySearcher$LT$_$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hd2ef0c83d6342879E"(%"core::str::pattern::CharArraySearcher<2>"* align 8 %_14), !dbg !4798
  %_13.0 = extractvalue { [0 x i8]*, i64 } %15, 0, !dbg !4798
  %_13.1 = extractvalue { [0 x i8]*, i64 } %15, 1, !dbg !4798
  br label %bb8, !dbg !4798

bb8:                                              ; preds = %bb7
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4798
  store [0 x i8]* %_13.0, [0 x i8]** %16, align 8, !dbg !4798
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4798
  store i64 %_13.1, i64* %17, align 8, !dbg !4798
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4796, metadata !DIExpression()), !dbg !4797
  %18 = bitcast %"core::str::iter::SplitInternal<[char; 2]>"* %self to i64*, !dbg !4808
  %_16 = load i64, i64* %18, align 8, !dbg !4808
  %19 = getelementptr inbounds %"core::str::iter::SplitInternal<[char; 2]>", %"core::str::iter::SplitInternal<[char; 2]>"* %self, i32 0, i32 1, !dbg !4809
  %_17 = load i64, i64* %19, align 8, !dbg !4809
  %20 = bitcast { i64, i64 }* %i to i64*, !dbg !4808
  store i64 %_16, i64* %20, align 8, !dbg !4808
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4808
  store i64 %_17, i64* %21, align 8, !dbg !4808
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 0, !dbg !4797
  %_20.0 = load i64, i64* %22, align 8, !dbg !4797
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %i, i32 0, i32 1, !dbg !4797
  %_20.1 = load i64, i64* %23, align 8, !dbg !4797
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %24 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h612abac0371ebe9fE"(i64 %_20.0, i64 %_20.1, [0 x i8]* %_13.0, i64 %_13.1), !dbg !4797
  %_19.0 = extractvalue { [0 x i8]*, i64 } %24, 0, !dbg !4797
  %_19.1 = extractvalue { [0 x i8]*, i64 } %24, 1, !dbg !4797
  br label %bb11, !dbg !4797

bb11:                                             ; preds = %bb8
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 0, !dbg !4797
  store [0 x i8]* %_19.0, [0 x i8]** %25, align 8, !dbg !4797
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %string.dbg.spill, i32 0, i32 1, !dbg !4797
  store i64 %_19.1, i64* %26, align 8, !dbg !4797
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %string.dbg.spill, metadata !4789, metadata !DIExpression()), !dbg !4810
  %27 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !4811
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 0, !dbg !4811
  store [0 x i8]* %_19.0, [0 x i8]** %28, align 8, !dbg !4811
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %27, i32 0, i32 1, !dbg !4811
  store i64 %_19.1, i64* %29, align 8, !dbg !4811
  br label %bb10, !dbg !4806

bb10:                                             ; preds = %bb9, %bb11
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !4812
  %31 = load i8*, i8** %30, align 8, !dbg !4812, !align !445
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !4812
  %33 = load i64, i64* %32, align 8, !dbg !4812
  %34 = insertvalue { i8*, i64 } undef, i8* %31, 0, !dbg !4812
  %35 = insertvalue { i8*, i64 } %34, i64 %33, 1, !dbg !4812
  ret { i8*, i64 } %35, !dbg !4812
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h612abac0371ebe9fE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !4813 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %len.dbg.spill6 = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %_26 = alloca { i8*, i64 }, align 8
  %_25 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !4824, metadata !DIExpression()), !dbg !4832
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !4825, metadata !DIExpression()), !dbg !4833
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 0, !dbg !4834
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8, !dbg !4834
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 1, !dbg !4834
  store i64 %slice.1, i64* %6, align 8, !dbg !4834
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill1, metadata !4826, metadata !DIExpression()), !dbg !4835
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !4836
  store [0 x i8]* %slice.0, [0 x i8]** %7, align 8, !dbg !4836
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !4836
  store i64 %slice.1, i64* %8, align 8, !dbg !4836
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !4837, metadata !DIExpression()), !dbg !4841
  %self = bitcast [0 x i8]* %slice.0 to i8*, !dbg !4841
  store i8* %self, i8** %self.dbg.spill3, align 8, !dbg !4841
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !4842, metadata !DIExpression()), !dbg !4847
  store i64 %self.0, i64* %count.dbg.spill, align 8, !dbg !4848
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !4846, metadata !DIExpression()), !dbg !4847
  store i8* %self, i8** %self.dbg.spill4, align 8, !dbg !4847
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !4849, metadata !DIExpression()), !dbg !4854
  store i64 %self.0, i64* %count.dbg.spill5, align 8, !dbg !4847
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !4853, metadata !DIExpression()), !dbg !4854
  %9 = getelementptr inbounds i8, i8* %self, i64 %self.0, !dbg !4854
  store i8* %9, i8** %0, align 8, !dbg !4854
  %ptr = load i8*, i8** %0, align 8, !dbg !4854
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !4854
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4828, metadata !DIExpression()), !dbg !4856
  br label %bb1, !dbg !4854

bb1:                                              ; preds = %start
  %len = sub i64 %self.1, %self.0, !dbg !4857
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !4857
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4830, metadata !DIExpression()), !dbg !4858
  store i8* %ptr, i8** %data.dbg.spill, align 8, !dbg !4859
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !4860, metadata !DIExpression()), !dbg !4865
  store i64 %len, i64* %len.dbg.spill6, align 8, !dbg !4867
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill6, metadata !4864, metadata !DIExpression()), !dbg !4865
  store i8* %ptr, i8** %self.dbg.spill7, align 8, !dbg !4865
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !4868, metadata !DIExpression()), !dbg !4872
  %data_address = bitcast i8* %ptr to {}*, !dbg !4872
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !4872
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !4874, metadata !DIExpression()), !dbg !4879
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !4865
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !4878, metadata !DIExpression()), !dbg !4879
  %10 = bitcast { i8*, i64 }* %_26 to {}**, !dbg !4879
  store {}* %data_address, {}** %10, align 8, !dbg !4879
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !4879
  store i64 %len, i64* %11, align 8, !dbg !4879
  %12 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { i8*, i64 }*, !dbg !4879
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 0, !dbg !4879
  %14 = load i8*, i8** %13, align 8, !dbg !4879
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !4879
  %16 = load i64, i64* %15, align 8, !dbg !4879
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 0, !dbg !4879
  store i8* %14, i8** %17, align 8, !dbg !4879
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %12, i32 0, i32 1, !dbg !4879
  store i64 %16, i64* %18, align 8, !dbg !4879
  %19 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { [0 x i8]*, i64 }*, !dbg !4879
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 0, !dbg !4879
  %_12.0 = load [0 x i8]*, [0 x i8]** %20, align 8, !dbg !4879
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %19, i32 0, i32 1, !dbg !4879
  %_12.1 = load i64, i64* %21, align 8, !dbg !4879
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0, !dbg !4881
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %_12.1, 1, !dbg !4881
  ret { [0 x i8]*, i64 } %23, !dbg !4881
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h09592fa3aa826ce9E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #0 !dbg !4882 {
start:
  %other.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4885, metadata !DIExpression()), !dbg !4887
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !4886, metadata !DIExpression()), !dbg !4888
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4889
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !4889
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4889
  store i64 %self.1, i64* %5, align 8, !dbg !4889
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4890, metadata !DIExpression()), !dbg !4894
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 0, !dbg !4894
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !4894
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 1, !dbg !4894
  store i64 %self.1, i64* %7, align 8, !dbg !4894
  br label %bb1, !dbg !4894

bb1:                                              ; preds = %start
  store { [0 x i8]*, i64 }* %_4, { [0 x i8]*, i64 }** %self.dbg.spill2, align 8, !dbg !4889
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill2, metadata !4895, metadata !DIExpression()), !dbg !4903
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !4904
  store [0 x i8]* %other.0, [0 x i8]** %8, align 8, !dbg !4904
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !4904
  store i64 %other.1, i64* %9, align 8, !dbg !4904
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !4905, metadata !DIExpression()), !dbg !4909
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 0, !dbg !4909
  store [0 x i8]* %other.0, [0 x i8]** %10, align 8, !dbg !4909
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 1, !dbg !4909
  store i64 %other.1, i64* %11, align 8, !dbg !4909
  br label %bb2, !dbg !4909

bb2:                                              ; preds = %bb1
  store { [0 x i8]*, i64 }* %_7, { [0 x i8]*, i64 }** %other.dbg.spill4, align 8, !dbg !4904
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill4, metadata !4902, metadata !DIExpression()), !dbg !4903
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 0, !dbg !4903
  %_13.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !4903, !nonnull !23, !align !445, !noundef !23
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_4, i32 0, i32 1, !dbg !4903
  %_13.1 = load i64, i64* %13, align 8, !dbg !4903
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 0, !dbg !4903
  %_14.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !4903, !nonnull !23, !align !445, !noundef !23
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_7, i32 0, i32 1, !dbg !4903
  %_14.1 = load i64, i64* %15, align 8, !dbg !4903
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %16 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he80a31ab2f1cfe97E"([0 x i8]* align 1 %_13.0, i64 %_13.1, [0 x i8]* align 1 %_14.0, i64 %_14.1), !dbg !4903
  br label %bb3, !dbg !4903

bb3:                                              ; preds = %bb2
  ret i1 %16, !dbg !4910
}

; core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17ha3be070eaf30319eE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !4911 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !4914, metadata !DIExpression()), !dbg !4915
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !4916
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8, !dbg !4916
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !4916
  store i64 %self.1, i64* %4, align 8, !dbg !4916
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !4917, metadata !DIExpression()), !dbg !4920
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !4920
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !4920
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !4920
  store i64 %self.1, i64* %6, align 8, !dbg !4920
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !4920
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !4920, !nonnull !23, !align !445, !noundef !23
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !4920
  %10 = load i64, i64* %9, align 8, !dbg !4920
  br label %bb1, !dbg !4920

bb1:                                              ; preds = %start
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0, !dbg !4921
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !4921
  ret { [0 x i8]*, i64 } %12, !dbg !4921
}

; core::str::pattern::ReverseSearcher::next_reject_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern15ReverseSearcher16next_reject_back17h4f16c1589d6f0daeE(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #0 !dbg !4922 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !4927, metadata !DIExpression()), !dbg !4933
  br label %bb1, !dbg !4934

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::ReverseSearcher>::next_back
  call void @"_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17haf0fbae422bf6c47E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_2, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self), !dbg !4935
  br label %bb2, !dbg !4935

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*, !dbg !4935
  %_4 = load i64, i64* %1, align 8, !dbg !4935, !range !4936, !noundef !23
  switch i64 %_4, label %bb5 [
    i64 1, label %bb3
    i64 2, label %bb4
  ], !dbg !4937

bb5:                                              ; preds = %bb2
  br label %bb1, !dbg !4938

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*, !dbg !4940
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %2, i32 0, i32 1, !dbg !4940
  %a = load i64, i64* %3, align 8, !dbg !4940
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !4940
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4928, metadata !DIExpression()), !dbg !4941
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*, !dbg !4942
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %4, i32 0, i32 2, !dbg !4942
  %b = load i64, i64* %5, align 8, !dbg !4942
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !4942
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !4930, metadata !DIExpression()), !dbg !4943
  %6 = bitcast { i64, i64 }* %_7 to i64*, !dbg !4944
  store i64 %a, i64* %6, align 8, !dbg !4944
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !4944
  store i64 %b, i64* %7, align 8, !dbg !4944
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4945
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1, !dbg !4945
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !4945
  %11 = load i64, i64* %10, align 8, !dbg !4945
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !4945
  %13 = load i64, i64* %12, align 8, !dbg !4945
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !4945
  store i64 %11, i64* %14, align 8, !dbg !4945
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !4945
  store i64 %13, i64* %15, align 8, !dbg !4945
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !4945
  store i64 1, i64* %16, align 8, !dbg !4945
  br label %bb6, !dbg !4938

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !4946
  store i64 0, i64* %17, align 8, !dbg !4946
  br label %bb6, !dbg !4947

bb6:                                              ; preds = %bb3, %bb4
  ret void, !dbg !4948
}

; core::str::pattern::Searcher::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern8Searcher10next_match17hf80201f6cbe5aab5E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* align 8 %self) unnamed_addr #0 !dbg !4949 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"*, align 8
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  store %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"** %self.dbg.spill, metadata !4955, metadata !DIExpression()), !dbg !4961
  br label %bb1, !dbg !4962

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  call void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h10d2da9364c3a8c8E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_2, %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* align 8 %self), !dbg !4963
  br label %bb2, !dbg !4963

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*, !dbg !4963
  %_4 = load i64, i64* %1, align 8, !dbg !4963, !range !4936, !noundef !23
  switch i64 %_4, label %bb5 [
    i64 0, label %bb3
    i64 2, label %bb4
  ], !dbg !4964

bb5:                                              ; preds = %bb2
  br label %bb1, !dbg !4965

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*, !dbg !4967
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %2, i32 0, i32 1, !dbg !4967
  %a = load i64, i64* %3, align 8, !dbg !4967
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !4967
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4956, metadata !DIExpression()), !dbg !4968
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Match"*, !dbg !4969
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %4, i32 0, i32 2, !dbg !4969
  %b = load i64, i64* %5, align 8, !dbg !4969
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !4969
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !4958, metadata !DIExpression()), !dbg !4970
  %6 = bitcast { i64, i64 }* %_7 to i64*, !dbg !4971
  store i64 %a, i64* %6, align 8, !dbg !4971
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !4971
  store i64 %b, i64* %7, align 8, !dbg !4971
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4972
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1, !dbg !4972
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !4972
  %11 = load i64, i64* %10, align 8, !dbg !4972
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !4972
  %13 = load i64, i64* %12, align 8, !dbg !4972
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !4972
  store i64 %11, i64* %14, align 8, !dbg !4972
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !4972
  store i64 %13, i64* %15, align 8, !dbg !4972
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !4972
  store i64 1, i64* %16, align 8, !dbg !4972
  br label %bb6, !dbg !4965

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !4973
  store i64 0, i64* %17, align 8, !dbg !4973
  br label %bb6, !dbg !4974

bb6:                                              ; preds = %bb3, %bb4
  ret void, !dbg !4975
}

; core::str::pattern::Searcher::next_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3str7pattern8Searcher11next_reject17hc547f4bf1cf9f741E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #0 !dbg !4976 {
start:
  %b.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  %_7 = alloca { i64, i64 }, align 8
  %_2 = alloca %"core::str::pattern::SearchStep", align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !4978, metadata !DIExpression()), !dbg !4982
  br label %bb1, !dbg !4983

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  call void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h716145b75f37cbccE"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %_2, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self), !dbg !4984
  br label %bb2, !dbg !4984

bb2:                                              ; preds = %bb1
  %1 = bitcast %"core::str::pattern::SearchStep"* %_2 to i64*, !dbg !4984
  %_4 = load i64, i64* %1, align 8, !dbg !4984, !range !4936, !noundef !23
  switch i64 %_4, label %bb5 [
    i64 1, label %bb3
    i64 2, label %bb4
  ], !dbg !4985

bb5:                                              ; preds = %bb2
  br label %bb1, !dbg !4986

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*, !dbg !4988
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %2, i32 0, i32 1, !dbg !4988
  %a = load i64, i64* %3, align 8, !dbg !4988
  store i64 %a, i64* %a.dbg.spill, align 8, !dbg !4988
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !4979, metadata !DIExpression()), !dbg !4989
  %4 = bitcast %"core::str::pattern::SearchStep"* %_2 to %"core::str::pattern::SearchStep::Reject"*, !dbg !4990
  %5 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %4, i32 0, i32 2, !dbg !4990
  %b = load i64, i64* %5, align 8, !dbg !4990
  store i64 %b, i64* %b.dbg.spill, align 8, !dbg !4990
  call void @llvm.dbg.declare(metadata i64* %b.dbg.spill, metadata !4981, metadata !DIExpression()), !dbg !4991
  %6 = bitcast { i64, i64 }* %_7 to i64*, !dbg !4992
  store i64 %a, i64* %6, align 8, !dbg !4992
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !4992
  store i64 %b, i64* %7, align 8, !dbg !4992
  %8 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !4993
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %8, i32 0, i32 1, !dbg !4993
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !4993
  %11 = load i64, i64* %10, align 8, !dbg !4993
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !4993
  %13 = load i64, i64* %12, align 8, !dbg !4993
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !4993
  store i64 %11, i64* %14, align 8, !dbg !4993
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !4993
  store i64 %13, i64* %15, align 8, !dbg !4993
  %16 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !4993
  store i64 1, i64* %16, align 8, !dbg !4993
  br label %bb6, !dbg !4986

bb4:                                              ; preds = %bb2
  %17 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !4994
  store i64 0, i64* %17, align 8, !dbg !4994
  br label %bb6, !dbg !4995

bb6:                                              ; preds = %bb3, %bb4
  ret void, !dbg !4996
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h5a0cf1b4e242d71cE(i32 %0, [0 x i8]* align 1 %dst.0, i64 %dst.1) unnamed_addr #0 !dbg !4997 {
start:
  %1 = alloca %"core::fmt::Opaque"*, align 8
  %2 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill23 = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill22 = alloca i64*, align 8
  %x.dbg.spill21 = alloca i64*, align 8
  %3 = alloca %"core::fmt::Opaque"*, align 8
  %4 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill20 = alloca i1 (i32*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill19 = alloca i32*, align 8
  %x.dbg.spill18 = alloca i32*, align 8
  %5 = alloca %"core::fmt::Opaque"*, align 8
  %6 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill17 = alloca i64*, align 8
  %x.dbg.spill = alloca i64*, align 8
  %slice.dbg.spill16 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill15 = alloca i64, align 8
  %self.dbg.spill14 = alloca { [0 x i8]*, i64 }, align 8
  %a.dbg.spill13 = alloca i8*, align 8
  %b.dbg.spill11 = alloca i8*, align 8
  %a.dbg.spill9 = alloca i8*, align 8
  %c.dbg.spill7 = alloca i8*, align 8
  %b.dbg.spill5 = alloca i8*, align 8
  %a.dbg.spill3 = alloca i8*, align 8
  %d.dbg.spill = alloca i8*, align 8
  %c.dbg.spill = alloca i8*, align 8
  %b.dbg.spill = alloca i8*, align 8
  %a.dbg.spill = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_137 = alloca { i64, i64 }, align 8
  %index = alloca i64, align 8
  %_86 = alloca i64, align 8
  %_83 = alloca { i8*, i64* }, align 8
  %_80 = alloca { i8*, i64* }, align 8
  %_77 = alloca { i8*, i64* }, align 8
  %_76 = alloca [3 x { i8*, i64* }], align 8
  %_69 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca { i64, { [0 x i8]*, i64 } }, align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, i32* %code, align 4
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5004, metadata !DIExpression()), !dbg !5023
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 0
  store [0 x i8]* %dst.0, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 1
  store i64 %dst.1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %dst.dbg.spill, metadata !5005, metadata !DIExpression()), !dbg !5024
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5006, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !5026, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.declare(metadata i64* %index, metadata !5038, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill, metadata !5052, metadata !DIExpression()), !dbg !5060
  %_5 = load i32, i32* %code, align 4, !dbg !5062
; call core::char::methods::len_utf8
  %9 = call i64 @_ZN4core4char7methods8len_utf817hecd0ef79fb54d9b9E(i32 %_5), !dbg !5063
  store i64 %9, i64* %len, align 8, !dbg !5063
  br label %bb1, !dbg !5063

bb1:                                              ; preds = %start
  %_7 = load i64, i64* %len, align 8, !dbg !5064
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5037
  store [0 x i8]* %dst.0, [0 x i8]** %10, align 8, !dbg !5037
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5037
  store i64 %dst.1, i64* %11, align 8, !dbg !5037
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !5033, metadata !DIExpression()), !dbg !5036
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !5036
  store [0 x i8]* %dst.0, [0 x i8]** %12, align 8, !dbg !5036
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !5036
  store i64 %dst.1, i64* %13, align 8, !dbg !5036
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5059, metadata !DIExpression()), !dbg !5060
  %14 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*, !dbg !5065
  store i64 %_7, i64* %14, align 8, !dbg !5065
  %15 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5065
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0, !dbg !5065
  store [0 x i8]* %dst.0, [0 x i8]** %16, align 8, !dbg !5065
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1, !dbg !5065
  store i64 %dst.1, i64* %17, align 8, !dbg !5065
  %18 = bitcast { i64, { [0 x i8]*, i64 } }* %_6 to i64*, !dbg !5066
  %19 = load i64, i64* %18, align 8, !dbg !5066
  switch i64 %19, label %bb3 [
    i64 1, label %bb2
    i64 2, label %bb4
    i64 3, label %bb5
    i64 4, label %bb6
  ], !dbg !5066

bb3:                                              ; preds = %bb2, %bb4, %bb5, %bb6, %bb1
  store i64* %len, i64** %x.dbg.spill, align 8, !dbg !5067
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill, metadata !5068, metadata !DIExpression()), !dbg !5074
  store i64* %len, i64** %x.dbg.spill17, align 8, !dbg !5074
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill17, metadata !5076, metadata !DIExpression()), !dbg !5086
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !5074
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !5085, metadata !DIExpression()), !dbg !5086
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !5086
  %_115 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !5086, !nonnull !23, !noundef !23
  br label %bb13, !dbg !5086

bb2:                                              ; preds = %bb1
  %20 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5088
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 0, !dbg !5088
  %_94.0 = load [0 x i8]*, [0 x i8]** %21, align 8, !dbg !5088, !nonnull !23, !align !445, !noundef !23
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %20, i32 0, i32 1, !dbg !5088
  %_94.1 = load i64, i64* %22, align 8, !dbg !5088
  %_14 = icmp uge i64 %_94.1, 1, !dbg !5088
  br i1 %_14, label %bb7, label %bb3, !dbg !5088

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5089
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !5089
  %_95.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !5089, !nonnull !23, !align !445, !noundef !23
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !5089
  %_95.1 = load i64, i64* %25, align 8, !dbg !5089
  %_17 = icmp uge i64 %_95.1, 2, !dbg !5089
  br i1 %_17, label %bb8, label %bb3, !dbg !5089

bb5:                                              ; preds = %bb1
  %26 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5090
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !5090
  %_96.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !5090, !nonnull !23, !align !445, !noundef !23
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !5090
  %_96.1 = load i64, i64* %28, align 8, !dbg !5090
  %_20 = icmp uge i64 %_96.1, 3, !dbg !5090
  br i1 %_20, label %bb9, label %bb3, !dbg !5090

bb6:                                              ; preds = %bb1
  %29 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5091
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !5091
  %_97.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !5091, !nonnull !23, !align !445, !noundef !23
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !5091
  %_97.1 = load i64, i64* %31, align 8, !dbg !5091
  %_23 = icmp uge i64 %_97.1, 4, !dbg !5091
  br i1 %_23, label %bb10, label %bb3, !dbg !5091

bb10:                                             ; preds = %bb6
  %32 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5092
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !5092
  %_104.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !dbg !5092, !nonnull !23, !align !445, !noundef !23
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !5092
  %_104.1 = load i64, i64* %34, align 8, !dbg !5092
  %a = getelementptr inbounds [0 x i8], [0 x i8]* %_104.0, i64 0, i64 0, !dbg !5092
  store i8* %a, i8** %a.dbg.spill, align 8, !dbg !5092
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill, metadata !5018, metadata !DIExpression()), !dbg !5093
  %35 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5094
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %35, i32 0, i32 0, !dbg !5094
  %_105.0 = load [0 x i8]*, [0 x i8]** %36, align 8, !dbg !5094, !nonnull !23, !align !445, !noundef !23
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %35, i32 0, i32 1, !dbg !5094
  %_105.1 = load i64, i64* %37, align 8, !dbg !5094
  %b = getelementptr inbounds [0 x i8], [0 x i8]* %_105.0, i64 0, i64 1, !dbg !5094
  store i8* %b, i8** %b.dbg.spill, align 8, !dbg !5094
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill, metadata !5020, metadata !DIExpression()), !dbg !5095
  %38 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5096
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 0, !dbg !5096
  %_106.0 = load [0 x i8]*, [0 x i8]** %39, align 8, !dbg !5096, !nonnull !23, !align !445, !noundef !23
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %38, i32 0, i32 1, !dbg !5096
  %_106.1 = load i64, i64* %40, align 8, !dbg !5096
  %c = getelementptr inbounds [0 x i8], [0 x i8]* %_106.0, i64 0, i64 2, !dbg !5096
  store i8* %c, i8** %c.dbg.spill, align 8, !dbg !5096
  call void @llvm.dbg.declare(metadata i8** %c.dbg.spill, metadata !5021, metadata !DIExpression()), !dbg !5097
  %41 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5098
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %41, i32 0, i32 0, !dbg !5098
  %_107.0 = load [0 x i8]*, [0 x i8]** %42, align 8, !dbg !5098, !nonnull !23, !align !445, !noundef !23
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %41, i32 0, i32 1, !dbg !5098
  %_107.1 = load i64, i64* %43, align 8, !dbg !5098
  %d = getelementptr inbounds [0 x i8], [0 x i8]* %_107.0, i64 0, i64 3, !dbg !5098
  store i8* %d, i8** %d.dbg.spill, align 8, !dbg !5098
  call void @llvm.dbg.declare(metadata i8** %d.dbg.spill, metadata !5022, metadata !DIExpression()), !dbg !5099
  %_56 = load i32, i32* %code, align 4, !dbg !5100
  %_55 = lshr i32 %_56, 18, !dbg !5100
  %_54 = and i32 %_55, 7, !dbg !5101
  %_53 = trunc i32 %_54 to i8, !dbg !5101
  %44 = or i8 %_53, -16, !dbg !5102
  store i8 %44, i8* %a, align 1, !dbg !5102
  %_60 = load i32, i32* %code, align 4, !dbg !5103
  %_59 = lshr i32 %_60, 12, !dbg !5103
  %_58 = and i32 %_59, 63, !dbg !5104
  %_57 = trunc i32 %_58 to i8, !dbg !5104
  %45 = or i8 %_57, -128, !dbg !5105
  store i8 %45, i8* %b, align 1, !dbg !5105
  %_64 = load i32, i32* %code, align 4, !dbg !5106
  %_63 = lshr i32 %_64, 6, !dbg !5106
  %_62 = and i32 %_63, 63, !dbg !5107
  %_61 = trunc i32 %_62 to i8, !dbg !5107
  %46 = or i8 %_61, -128, !dbg !5108
  store i8 %46, i8* %c, align 1, !dbg !5108
  %_67 = load i32, i32* %code, align 4, !dbg !5109
  %_66 = and i32 %_67, 63, !dbg !5110
  %_65 = trunc i32 %_66 to i8, !dbg !5110
  %47 = or i8 %_65, -128, !dbg !5111
  store i8 %47, i8* %d, align 1, !dbg !5111
  br label %bb12, !dbg !5112

bb12:                                             ; preds = %bb7, %bb8, %bb9, %bb10
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !5051
  store [0 x i8]* %dst.0, [0 x i8]** %48, align 8, !dbg !5051
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !5051
  store i64 %dst.1, i64* %49, align 8, !dbg !5051
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill14, metadata !5047, metadata !DIExpression()), !dbg !5050
  %_92 = load i64, i64* %len, align 8, !dbg !5113
  store i64 %_92, i64* %index, align 8, !dbg !5114
  %self = load i64, i64* %index, align 8, !dbg !5050
  store i64 %self, i64* %self.dbg.spill15, align 8, !dbg !5050
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill15, metadata !5115, metadata !DIExpression()), !dbg !5123
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill16, i32 0, i32 0, !dbg !5050
  store [0 x i8]* %dst.0, [0 x i8]** %50, align 8, !dbg !5050
  %51 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill16, i32 0, i32 1, !dbg !5050
  store i64 %dst.1, i64* %51, align 8, !dbg !5050
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill16, metadata !5122, metadata !DIExpression()), !dbg !5123
  %52 = bitcast { i64, i64 }* %_137 to i64*, !dbg !5123
  store i64 0, i64* %52, align 8, !dbg !5123
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 1, !dbg !5123
  store i64 %self, i64* %53, align 8, !dbg !5123
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 0, !dbg !5123
  %55 = load i64, i64* %54, align 8, !dbg !5123
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_137, i32 0, i32 1, !dbg !5123
  %57 = load i64, i64* %56, align 8, !dbg !5123
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %58 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h88e374dad76d3e4bE"(i64 %55, i64 %57, [0 x i8]* align 1 %dst.0, i64 %dst.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc524 to %"core::panic::location::Location"*)), !dbg !5123
  %_136.0 = extractvalue { [0 x i8]*, i64 } %58, 0, !dbg !5123
  %_136.1 = extractvalue { [0 x i8]*, i64 } %58, 1, !dbg !5123
  br label %bb19, !dbg !5123

bb9:                                              ; preds = %bb5
  %59 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5125
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 0, !dbg !5125
  %_101.0 = load [0 x i8]*, [0 x i8]** %60, align 8, !dbg !5125, !nonnull !23, !align !445, !noundef !23
  %61 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %59, i32 0, i32 1, !dbg !5125
  %_101.1 = load i64, i64* %61, align 8, !dbg !5125
  %a2 = getelementptr inbounds [0 x i8], [0 x i8]* %_101.0, i64 0, i64 0, !dbg !5125
  store i8* %a2, i8** %a.dbg.spill3, align 8, !dbg !5125
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill3, metadata !5014, metadata !DIExpression()), !dbg !5126
  %62 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5127
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 0, !dbg !5127
  %_102.0 = load [0 x i8]*, [0 x i8]** %63, align 8, !dbg !5127, !nonnull !23, !align !445, !noundef !23
  %64 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %62, i32 0, i32 1, !dbg !5127
  %_102.1 = load i64, i64* %64, align 8, !dbg !5127
  %b4 = getelementptr inbounds [0 x i8], [0 x i8]* %_102.0, i64 0, i64 1, !dbg !5127
  store i8* %b4, i8** %b.dbg.spill5, align 8, !dbg !5127
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill5, metadata !5016, metadata !DIExpression()), !dbg !5128
  %65 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5129
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 0, !dbg !5129
  %_103.0 = load [0 x i8]*, [0 x i8]** %66, align 8, !dbg !5129, !nonnull !23, !align !445, !noundef !23
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %65, i32 0, i32 1, !dbg !5129
  %_103.1 = load i64, i64* %67, align 8, !dbg !5129
  %c6 = getelementptr inbounds [0 x i8], [0 x i8]* %_103.0, i64 0, i64 2, !dbg !5129
  store i8* %c6, i8** %c.dbg.spill7, align 8, !dbg !5129
  call void @llvm.dbg.declare(metadata i8** %c.dbg.spill7, metadata !5017, metadata !DIExpression()), !dbg !5130
  %_41 = load i32, i32* %code, align 4, !dbg !5131
  %_40 = lshr i32 %_41, 12, !dbg !5131
  %_39 = and i32 %_40, 15, !dbg !5132
  %_38 = trunc i32 %_39 to i8, !dbg !5132
  %68 = or i8 %_38, -32, !dbg !5133
  store i8 %68, i8* %a2, align 1, !dbg !5133
  %_45 = load i32, i32* %code, align 4, !dbg !5134
  %_44 = lshr i32 %_45, 6, !dbg !5134
  %_43 = and i32 %_44, 63, !dbg !5135
  %_42 = trunc i32 %_43 to i8, !dbg !5135
  %69 = or i8 %_42, -128, !dbg !5136
  store i8 %69, i8* %b4, align 1, !dbg !5136
  %_48 = load i32, i32* %code, align 4, !dbg !5137
  %_47 = and i32 %_48, 63, !dbg !5138
  %_46 = trunc i32 %_47 to i8, !dbg !5138
  %70 = or i8 %_46, -128, !dbg !5139
  store i8 %70, i8* %c6, align 1, !dbg !5139
  br label %bb12, !dbg !5140

bb8:                                              ; preds = %bb4
  %71 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5141
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %71, i32 0, i32 0, !dbg !5141
  %_99.0 = load [0 x i8]*, [0 x i8]** %72, align 8, !dbg !5141, !nonnull !23, !align !445, !noundef !23
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %71, i32 0, i32 1, !dbg !5141
  %_99.1 = load i64, i64* %73, align 8, !dbg !5141
  %a8 = getelementptr inbounds [0 x i8], [0 x i8]* %_99.0, i64 0, i64 0, !dbg !5141
  store i8* %a8, i8** %a.dbg.spill9, align 8, !dbg !5141
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill9, metadata !5011, metadata !DIExpression()), !dbg !5142
  %74 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5143
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 0, !dbg !5143
  %_100.0 = load [0 x i8]*, [0 x i8]** %75, align 8, !dbg !5143, !nonnull !23, !align !445, !noundef !23
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %74, i32 0, i32 1, !dbg !5143
  %_100.1 = load i64, i64* %76, align 8, !dbg !5143
  %b10 = getelementptr inbounds [0 x i8], [0 x i8]* %_100.0, i64 0, i64 1, !dbg !5143
  store i8* %b10, i8** %b.dbg.spill11, align 8, !dbg !5143
  call void @llvm.dbg.declare(metadata i8** %b.dbg.spill11, metadata !5013, metadata !DIExpression()), !dbg !5144
  %_31 = load i32, i32* %code, align 4, !dbg !5145
  %_30 = lshr i32 %_31, 6, !dbg !5145
  %_29 = and i32 %_30, 31, !dbg !5146
  %_28 = trunc i32 %_29 to i8, !dbg !5146
  %77 = or i8 %_28, -64, !dbg !5147
  store i8 %77, i8* %a8, align 1, !dbg !5147
  %_34 = load i32, i32* %code, align 4, !dbg !5148
  %_33 = and i32 %_34, 63, !dbg !5149
  %_32 = trunc i32 %_33 to i8, !dbg !5149
  %78 = or i8 %_32, -128, !dbg !5150
  store i8 %78, i8* %b10, align 1, !dbg !5150
  br label %bb12, !dbg !5151

bb7:                                              ; preds = %bb2
  %79 = getelementptr inbounds { i64, { [0 x i8]*, i64 } }, { i64, { [0 x i8]*, i64 } }* %_6, i32 0, i32 1, !dbg !5152
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %79, i32 0, i32 0, !dbg !5152
  %_98.0 = load [0 x i8]*, [0 x i8]** %80, align 8, !dbg !5152, !nonnull !23, !align !445, !noundef !23
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %79, i32 0, i32 1, !dbg !5152
  %_98.1 = load i64, i64* %81, align 8, !dbg !5152
  %a12 = getelementptr inbounds [0 x i8], [0 x i8]* %_98.0, i64 0, i64 0, !dbg !5152
  store i8* %a12, i8** %a.dbg.spill13, align 8, !dbg !5152
  call void @llvm.dbg.declare(metadata i8** %a.dbg.spill13, metadata !5008, metadata !DIExpression()), !dbg !5153
  %_25 = load i32, i32* %code, align 4, !dbg !5154
  %82 = trunc i32 %_25 to i8, !dbg !5155
  store i8 %82, i8* %a12, align 1, !dbg !5155
  br label %bb12, !dbg !5156

bb19:                                             ; preds = %bb12
  %83 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_136.0, 0, !dbg !5157
  %84 = insertvalue { [0 x i8]*, i64 } %83, i64 %_136.1, 1, !dbg !5157
  ret { [0 x i8]*, i64 } %84, !dbg !5157

bb13:                                             ; preds = %bb3
  %85 = bitcast i64* %len to %"core::fmt::Opaque"*, !dbg !5086
  store %"core::fmt::Opaque"* %85, %"core::fmt::Opaque"** %5, align 8, !dbg !5086
  %_117 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %5, align 8, !dbg !5086, !nonnull !23, !align !445, !noundef !23
  br label %bb14, !dbg !5086

bb14:                                             ; preds = %bb13
  %86 = bitcast { i8*, i64* }* %_77 to %"core::fmt::Opaque"**, !dbg !5086
  store %"core::fmt::Opaque"* %_117, %"core::fmt::Opaque"** %86, align 8, !dbg !5086
  %87 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 1, !dbg !5086
  %88 = bitcast i64** %87 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5086
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_115, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %88, align 8, !dbg !5086
  store i32* %code, i32** %x.dbg.spill18, align 8, !dbg !5067
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill18, metadata !5158, metadata !DIExpression()), !dbg !5164
  store i32* %code, i32** %x.dbg.spill19, align 8, !dbg !5164
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill19, metadata !5166, metadata !DIExpression()), !dbg !5176
  store i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E", i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill20, align 8, !dbg !5164
  call void @llvm.dbg.declare(metadata i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill20, metadata !5175, metadata !DIExpression()), !dbg !5176
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %4, align 8, !dbg !5176
  %_121 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %4, align 8, !dbg !5176, !nonnull !23, !noundef !23
  br label %bb15, !dbg !5176

bb15:                                             ; preds = %bb14
  %89 = bitcast i32* %code to %"core::fmt::Opaque"*, !dbg !5176
  store %"core::fmt::Opaque"* %89, %"core::fmt::Opaque"** %3, align 8, !dbg !5176
  %_123 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %3, align 8, !dbg !5176, !nonnull !23, !align !445, !noundef !23
  br label %bb16, !dbg !5176

bb16:                                             ; preds = %bb15
  %90 = bitcast { i8*, i64* }* %_80 to %"core::fmt::Opaque"**, !dbg !5176
  store %"core::fmt::Opaque"* %_123, %"core::fmt::Opaque"** %90, align 8, !dbg !5176
  %91 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 1, !dbg !5176
  %92 = bitcast i64** %91 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5176
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_121, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %92, align 8, !dbg !5176
  store i64 %dst.1, i64* %_86, align 8, !dbg !5178
  store i64* %_86, i64** %x.dbg.spill21, align 8, !dbg !5067
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill21, metadata !5179, metadata !DIExpression()), !dbg !5183
  store i64* %_86, i64** %x.dbg.spill22, align 8, !dbg !5183
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill22, metadata !5184, metadata !DIExpression()), !dbg !5189
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill23, align 8, !dbg !5183
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill23, metadata !5188, metadata !DIExpression()), !dbg !5189
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %2, align 8, !dbg !5189
  %_127 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %2, align 8, !dbg !5189, !nonnull !23, !noundef !23
  br label %bb17, !dbg !5189

bb17:                                             ; preds = %bb16
  %93 = bitcast i64* %_86 to %"core::fmt::Opaque"*, !dbg !5189
  store %"core::fmt::Opaque"* %93, %"core::fmt::Opaque"** %1, align 8, !dbg !5189
  %_129 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %1, align 8, !dbg !5189, !nonnull !23, !align !445, !noundef !23
  br label %bb18, !dbg !5189

bb18:                                             ; preds = %bb17
  %94 = bitcast { i8*, i64* }* %_83 to %"core::fmt::Opaque"**, !dbg !5189
  store %"core::fmt::Opaque"* %_129, %"core::fmt::Opaque"** %94, align 8, !dbg !5189
  %95 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 1, !dbg !5189
  %96 = bitcast i64** %95 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !5189
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_127, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %96, align 8, !dbg !5189
  %97 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 0, !dbg !5067
  %98 = load i8*, i8** %97, align 8, !dbg !5067, !nonnull !23, !align !445, !noundef !23
  %99 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_77, i32 0, i32 1, !dbg !5067
  %100 = load i64*, i64** %99, align 8, !dbg !5067, !nonnull !23, !noundef !23
  %101 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i64 0, i64 0, !dbg !5067
  %102 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 0, !dbg !5067
  store i8* %98, i8** %102, align 8, !dbg !5067
  %103 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %101, i32 0, i32 1, !dbg !5067
  store i64* %100, i64** %103, align 8, !dbg !5067
  %104 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 0, !dbg !5067
  %105 = load i8*, i8** %104, align 8, !dbg !5067, !nonnull !23, !align !445, !noundef !23
  %106 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_80, i32 0, i32 1, !dbg !5067
  %107 = load i64*, i64** %106, align 8, !dbg !5067, !nonnull !23, !noundef !23
  %108 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i64 0, i64 1, !dbg !5067
  %109 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %108, i32 0, i32 0, !dbg !5067
  store i8* %105, i8** %109, align 8, !dbg !5067
  %110 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %108, i32 0, i32 1, !dbg !5067
  store i64* %107, i64** %110, align 8, !dbg !5067
  %111 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 0, !dbg !5067
  %112 = load i8*, i8** %111, align 8, !dbg !5067, !nonnull !23, !align !445, !noundef !23
  %113 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_83, i32 0, i32 1, !dbg !5067
  %114 = load i64*, i64** %113, align 8, !dbg !5067, !nonnull !23, !noundef !23
  %115 = getelementptr inbounds [3 x { i8*, i64* }], [3 x { i8*, i64* }]* %_76, i64 0, i64 2, !dbg !5067
  %116 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 0, !dbg !5067
  store i8* %112, i8** %116, align 8, !dbg !5067
  %117 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %115, i32 0, i32 1, !dbg !5067
  store i64* %114, i64** %117, align 8, !dbg !5067
  %_73.0 = bitcast [3 x { i8*, i64* }]* %_76 to [0 x { i8*, i64* }]*, !dbg !5067
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_69, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc325 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_73.0, i64 3), !dbg !5067
  br label %bb11, !dbg !5067

bb11:                                             ; preds = %bb18
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_69, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc526 to %"core::panic::location::Location"*)) #15, !dbg !5067
  unreachable, !dbg !5067
}

; core::char::methods::<impl char>::is_whitespace
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h5b061f1b4b1d2b71E"(i32 %self) unnamed_addr #0 !dbg !5191 {
start:
  %c.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca i32, align 4
  %0 = alloca i8, align 1
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !5196, metadata !DIExpression()), !dbg !5199
  %1 = icmp eq i32 %self, 32, !dbg !5200
  br i1 %1, label %bb4, label %bb1, !dbg !5200

bb4:                                              ; preds = %bb2, %start
  store i8 1, i8* %0, align 1, !dbg !5201
  br label %bb9, !dbg !5201

bb1:                                              ; preds = %start
  %_2 = icmp ule i32 9, %self, !dbg !5202
  br i1 %_2, label %bb2, label %bb3, !dbg !5202

bb3:                                              ; preds = %bb2, %bb1
  store i32 %self, i32* %c.dbg.spill, align 4, !dbg !5203
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !5197, metadata !DIExpression()), !dbg !5204
  %_5 = icmp ugt i32 %self, 127, !dbg !5205
  br i1 %_5, label %bb6, label %bb5, !dbg !5205

bb2:                                              ; preds = %bb1
  %_3 = icmp ule i32 %self, 13, !dbg !5202
  br i1 %_3, label %bb4, label %bb3, !dbg !5202

bb5:                                              ; preds = %bb3
  store i8 0, i8* %0, align 1, !dbg !5205
  br label %bb7, !dbg !5205

bb6:                                              ; preds = %bb3
; call core::unicode::unicode_data::white_space::lookup
  %_7 = call zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17h7fc73e48918678a5E(i32 %self), !dbg !5206
  br label %bb8, !dbg !5206

bb8:                                              ; preds = %bb6
  %2 = zext i1 %_7 to i8, !dbg !5205
  store i8 %2, i8* %0, align 1, !dbg !5205
  br label %bb7, !dbg !5205

bb7:                                              ; preds = %bb5, %bb8
  br label %bb9, !dbg !5207

bb9:                                              ; preds = %bb4, %bb7
  %3 = load i8, i8* %0, align 1, !dbg !5208, !range !512, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !5208
  ret i1 %4, !dbg !5208
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4char7methods8len_utf817hecd0ef79fb54d9b9E(i32 %code) unnamed_addr #0 !dbg !5209 {
start:
  %code.dbg.spill = alloca i32, align 4
  %0 = alloca i64, align 8
  store i32 %code, i32* %code.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %code.dbg.spill, metadata !5213, metadata !DIExpression()), !dbg !5214
  %_2 = icmp ult i32 %code, 128, !dbg !5215
  br i1 %_2, label %bb1, label %bb2, !dbg !5215

bb2:                                              ; preds = %start
  %_4 = icmp ult i32 %code, 2048, !dbg !5216
  br i1 %_4, label %bb3, label %bb4, !dbg !5216

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8, !dbg !5217
  br label %bb9, !dbg !5218

bb9:                                              ; preds = %bb8, %bb1
  %1 = load i64, i64* %0, align 8, !dbg !5219
  ret i64 %1, !dbg !5219

bb4:                                              ; preds = %bb2
  %_6 = icmp ult i32 %code, 65536, !dbg !5220
  br i1 %_6, label %bb5, label %bb6, !dbg !5220

bb3:                                              ; preds = %bb2
  store i64 2, i64* %0, align 8, !dbg !5221
  br label %bb8, !dbg !5222

bb8:                                              ; preds = %bb7, %bb3
  br label %bb9, !dbg !5218

bb6:                                              ; preds = %bb4
  store i64 4, i64* %0, align 8, !dbg !5223
  br label %bb7, !dbg !5224

bb5:                                              ; preds = %bb4
  store i64 3, i64* %0, align 8, !dbg !5225
  br label %bb7, !dbg !5224

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8, !dbg !5222
}

; core::iter::traits::iterator::Iterator::advance_by
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator10advance_by17hd779907944178400E(%"core::str::iter::Split<char>"* align 8 %self, i64 %n) unnamed_addr #0 !dbg !5226 {
start:
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::iter::Split<char>"*, align 8
  %residual = alloca i64, align 8
  %_14 = alloca %"core::result::Result<&str, usize>", align 8
  %_13 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>", align 8
  %_7 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store %"core::str::iter::Split<char>"* %self, %"core::str::iter::Split<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<char>"** %self.dbg.spill, metadata !5250, metadata !DIExpression()), !dbg !5275
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5251, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5277, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !5252, metadata !DIExpression()), !dbg !5288
  call void @llvm.dbg.declare(metadata i64* %residual, metadata !5289, metadata !DIExpression()), !dbg !5302
  %1 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5287
  store i64 0, i64* %1, align 8, !dbg !5287
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5287
  store i64 %n, i64* %2, align 8, !dbg !5287
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !5286
  %_3.0 = load i64, i64* %3, align 8, !dbg !5286
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5286
  %_3.1 = load i64, i64* %4, align 8, !dbg !5286
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !5287
  store i64 %_3.0, i64* %5, align 8, !dbg !5287
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !5287
  store i64 %_3.1, i64* %6, align 8, !dbg !5287
  br label %bb1, !dbg !5304

bb1:                                              ; preds = %bb11, %start
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !5288
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !5305, metadata !DIExpression()), !dbg !5315
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %7 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hf15cad5564cfbb15E"({ i64, i64 }* align 8 %iter), !dbg !5315
  store { i64, i64 } %7, { i64, i64 }* %_7, align 8, !dbg !5315
  br label %bb13, !dbg !5315

bb13:                                             ; preds = %bb1
  %8 = bitcast { i64, i64 }* %_7 to i64*, !dbg !5288
  %_10 = load i64, i64* %8, align 8, !dbg !5288, !range !3441, !noundef !23
  switch i64 %_10, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !5288

bb3:                                              ; preds = %bb13
  unreachable, !dbg !5288

bb4:                                              ; preds = %bb13
  %9 = bitcast { i64, i64 }* %0 to i64*, !dbg !5316
  store i64 0, i64* %9, align 8, !dbg !5316
  br label %bb12, !dbg !5317

bb2:                                              ; preds = %bb13
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !5318
  %i = load i64, i64* %10, align 8, !dbg !5318
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !5318
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !5254, metadata !DIExpression()), !dbg !5319
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %11 = call { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5ce0bf41ffb7e76aE"(%"core::str::iter::Split<char>"* align 8 %self), !dbg !5320
  %_15.0 = extractvalue { i8*, i64 } %11, 0, !dbg !5320
  %_15.1 = extractvalue { i8*, i64 } %11, 1, !dbg !5320
  br label %bb5, !dbg !5320

bb5:                                              ; preds = %bb2
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h6b3fe0e75b710255E"(%"core::result::Result<&str, usize>"* sret(%"core::result::Result<&str, usize>") %_14, i8* align 1 %_15.0, i64 %_15.1, i64 %i), !dbg !5320
  br label %bb6, !dbg !5320

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb030faf09e4c671cE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>") %_13, %"core::result::Result<&str, usize>"* %_14), !dbg !5320
  br label %bb7, !dbg !5320

bb7:                                              ; preds = %bb6
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %_13 to i64*, !dbg !5320
  %_18 = load i64, i64* %12, align 8, !dbg !5320, !range !3441, !noundef !23
  switch i64 %_18, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !5320

bb9:                                              ; preds = %bb7
  unreachable, !dbg !5320

bb8:                                              ; preds = %bb7
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %_13 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue"*, !dbg !5320
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue"* %13, i32 0, i32 1, !dbg !5320
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !5320
  %val.0 = load [0 x i8]*, [0 x i8]** %15, align 8, !dbg !5320, !nonnull !23, !align !445, !noundef !23
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !5320
  %val.1 = load i64, i64* %16, align 8, !dbg !5320
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !5320
  store [0 x i8]* %val.0, [0 x i8]** %17, align 8, !dbg !5320
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !5320
  store i64 %val.1, i64* %18, align 8, !dbg !5320
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !5271, metadata !DIExpression()), !dbg !5321
  br label %bb11, !dbg !5322

bb10:                                             ; preds = %bb7
  %19 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %_13 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break"*, !dbg !5323
  %20 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break"* %19, i32 0, i32 1, !dbg !5323
  %residual3 = load i64, i64* %20, align 8, !dbg !5323
  store i64 %residual3, i64* %residual.dbg.spill, align 8, !dbg !5323
  call void @llvm.dbg.declare(metadata i64* %residual.dbg.spill, metadata !5256, metadata !DIExpression()), !dbg !5324
  store i64 %residual3, i64* %residual, align 8, !dbg !5324
  %e = load i64, i64* %residual, align 8, !dbg !5302
  store i64 %e, i64* %e.dbg.spill, align 8, !dbg !5302
  call void @llvm.dbg.declare(metadata i64* %e.dbg.spill, metadata !5297, metadata !DIExpression()), !dbg !5325
; call <T as core::convert::From<T>>::from
  %_24 = call i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h92de53f2d292b24cE"(i64 %e), !dbg !5325
  br label %bb14, !dbg !5325

bb14:                                             ; preds = %bb10
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5325
  store i64 %_24, i64* %21, align 8, !dbg !5325
  %22 = bitcast { i64, i64 }* %0 to i64*, !dbg !5325
  store i64 1, i64* %22, align 8, !dbg !5325
  br label %bb12, !dbg !5317

bb12:                                             ; preds = %bb4, %bb14
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5317
  %24 = load i64, i64* %23, align 8, !dbg !5317, !range !3441, !noundef !23
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5317
  %26 = load i64, i64* %25, align 8, !dbg !5317
  %27 = insertvalue { i64, i64 } undef, i64 %24, 0, !dbg !5317
  %28 = insertvalue { i64, i64 } %27, i64 %26, 1, !dbg !5317
  ret { i64, i64 } %28, !dbg !5317

bb11:                                             ; preds = %bb8
  br label %bb1, !dbg !5304
}

; core::iter::traits::iterator::Iterator::nth
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator3nth17h60d719fd4cf64f56E(%"core::str::iter::Split<char>"* align 8 %self, i64 %n) unnamed_addr #0 !dbg !5326 {
start:
  %v.dbg.spill = alloca {}, align 1
  %x.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %residual.dbg.spill3 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::str::iter::Split<char>"*, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %0 = alloca { i8*, i64 }, align 8
  store %"core::str::iter::Split<char>"* %self, %"core::str::iter::Split<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<char>"** %self.dbg.spill, metadata !5330, metadata !DIExpression()), !dbg !5336
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5331, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.declare(metadata i8* %self1, metadata !5338, metadata !DIExpression()), !dbg !5373
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !5375, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !5332, metadata !DIExpression()), !dbg !5388
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill3, metadata !5389, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !5334, metadata !DIExpression()), !dbg !5397
  call void @llvm.dbg.declare(metadata {}* %x.dbg.spill, metadata !5381, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !5370, metadata !DIExpression()), !dbg !5399
; call core::iter::traits::iterator::Iterator::advance_by
  %1 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator10advance_by17hd779907944178400E(%"core::str::iter::Split<char>"* align 8 %self, i64 %n), !dbg !5374
  store { i64, i64 } %1, { i64, i64 }* %self2, align 8, !dbg !5374
  br label %bb1, !dbg !5374

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %self2 to i64*, !dbg !5387
  %_13 = load i64, i64* %2, align 8, !dbg !5387, !range !3441, !noundef !23
  switch i64 %_13, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !5387

bb10:                                             ; preds = %bb1
  unreachable, !dbg !5387

bb11:                                             ; preds = %bb1
  store i8 1, i8* %self1, align 1, !dbg !5398
  br label %bb2, !dbg !5387

bb9:                                              ; preds = %bb1
  store i8 0, i8* %self1, align 1, !dbg !5400
  br label %bb2, !dbg !5387

bb2:                                              ; preds = %bb11, %bb9
  %3 = load i8, i8* %self1, align 1, !dbg !5373, !range !512, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !5373
  %_16 = zext i1 %4 to i64, !dbg !5373
  switch i64 %_16, label %bb13 [
    i64 0, label %bb12
    i64 1, label %bb14
  ], !dbg !5373

bb13:                                             ; preds = %bb2
  unreachable, !dbg !5373

bb12:                                             ; preds = %bb2
  store i8 1, i8* %_3, align 1, !dbg !5373
  br label %bb3, !dbg !5373

bb14:                                             ; preds = %bb2
  store i8 0, i8* %_3, align 1, !dbg !5399
  br label %bb3, !dbg !5373

bb3:                                              ; preds = %bb12, %bb14
  %5 = load i8, i8* %_3, align 1, !dbg !5374, !range !512, !noundef !23
  %6 = trunc i8 %5 to i1, !dbg !5374
  %_8 = zext i1 %6 to i64, !dbg !5374
  switch i64 %_8, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !5374

bb5:                                              ; preds = %bb3
  unreachable, !dbg !5374

bb4:                                              ; preds = %bb3
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %7 = call { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5ce0bf41ffb7e76aE"(%"core::str::iter::Split<char>"* align 8 %self), !dbg !5401
  store { i8*, i64 } %7, { i8*, i64 }* %0, align 8, !dbg !5401
  br label %bb7, !dbg !5401

bb6:                                              ; preds = %bb3
  %8 = bitcast { i8*, i64 }* %0 to {}**, !dbg !5395
  store {}* null, {}** %8, align 8, !dbg !5395
  br label %bb8, !dbg !5402

bb8:                                              ; preds = %bb7, %bb6
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !5402
  %10 = load i8*, i8** %9, align 8, !dbg !5402, !align !445
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !5402
  %12 = load i64, i64* %11, align 8, !dbg !5402
  %13 = insertvalue { i8*, i64 } undef, i8* %10, 0, !dbg !5402
  %14 = insertvalue { i8*, i64 } %13, i64 %12, 1, !dbg !5402
  ret { i8*, i64 } %14, !dbg !5402

bb7:                                              ; preds = %bb4
  br label %bb8, !dbg !5402
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h61f1b67524321cb2E({ i64*, i64* }* align 8 %self, i64 %init, i8* align 1 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5403 {
start:
  %val.dbg.spill = alloca i64, align 8
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %init.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_21 = alloca i8, align 1
  %_13 = alloca { i64, i64* }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_5 = alloca i64*, align 8
  %accum = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %f = alloca i8*, align 8
  store i8* %0, i8** %f, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !5414, metadata !DIExpression()), !dbg !5428
  store i64 %init, i64* %init.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %init.dbg.spill, metadata !5415, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.declare(metadata i8** %f, metadata !5416, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.declare(metadata i64* %accum, metadata !5417, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !5421, metadata !DIExpression()), !dbg !5432
  store i8 1, i8* %_21, align 1, !dbg !5433
  store i64 %init, i64* %accum, align 8, !dbg !5433
  br label %bb1, !dbg !5434

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !5435

bb17:                                             ; preds = %cleanup
  %4 = load i8, i8* %_21, align 1, !dbg !5436, !range !512, !noundef !23
  %5 = trunc i8 %4 to i1, !dbg !5436
  br i1 %5, label %bb16, label %bb14, !dbg !5436

cleanup:                                          ; preds = %bb8, %bb4, %bb3, %bb11, %bb1
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  store i64* %3, i64** %_5, align 8, !dbg !5435
  %11 = bitcast i64** %_5 to {}**, !dbg !5437
  %12 = load {}*, {}** %11, align 8, !dbg !5437
  %13 = icmp eq {}* %12, null, !dbg !5437
  %_7 = select i1 %13, i64 0, i64 1, !dbg !5437
  %14 = icmp eq i64 %_7, 1, !dbg !5437
  br i1 %14, label %bb3, label %bb10, !dbg !5437

bb3:                                              ; preds = %bb2
  %15 = bitcast i64** %_5 to { [0 x i8]*, i64 }**, !dbg !5438
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %15, align 8, !dbg !5438, !nonnull !23, !align !584, !noundef !23
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8, !dbg !5438
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !5419, metadata !DIExpression()), !dbg !5438
  store i8 0, i8* %_21, align 1, !dbg !5439
  %_14 = load i64, i64* %accum, align 8, !dbg !5439
  %16 = bitcast { i64, i64* }* %_13 to i64*, !dbg !5440
  store i64 %_14, i64* %16, align 8, !dbg !5440
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_13, i32 0, i32 1, !dbg !5440
  %18 = bitcast i64** %17 to { [0 x i8]*, i64 }**, !dbg !5440
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %18, align 8, !dbg !5440
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_13, i32 0, i32 0, !dbg !5440
  %20 = load i64, i64* %19, align 8, !dbg !5440
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_13, i32 0, i32 1, !dbg !5440
  %22 = load i64*, i64** %21, align 8, !dbg !5440, !nonnull !23, !align !584, !noundef !23
  %23 = bitcast i64* %22 to { [0 x i8]*, i64 }*, !dbg !5440
; invoke core::iter::adapters::map::map_try_fold::{{closure}}
  %24 = invoke { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h46fe6e20efd5747eE"(i8** align 8 %f, i64 %20, { [0 x i8]*, i64 }* align 8 %23)
          to label %bb4 unwind label %cleanup, !dbg !5440

bb10:                                             ; preds = %bb2
  br label %bb11, !dbg !5434

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_21, align 1, !dbg !5441
  %_20 = load i64, i64* %accum, align 8, !dbg !5441
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::from_output
  %25 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17ha57357068f46e474E"(i64 %_20)
          to label %bb12 unwind label %cleanup, !dbg !5441

bb12:                                             ; preds = %bb11
  store { i64, i64 } %25, { i64, i64 }* %2, align 8, !dbg !5441
  br label %bb13, !dbg !5436

bb13:                                             ; preds = %bb9, %bb12
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !5442
  %27 = load i64, i64* %26, align 8, !dbg !5442, !range !3441, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !5442
  %29 = load i64, i64* %28, align 8, !dbg !5442
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !5442
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !5442
  ret { i64, i64 } %31, !dbg !5442

bb4:                                              ; preds = %bb3
  %_11.0 = extractvalue { i64, i64 } %24, 0, !dbg !5440
  %_11.1 = extractvalue { i64, i64 } %24, 1, !dbg !5440
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %32 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8616beab22fb2dd3E"(i64 %_11.0, i64 %_11.1)
          to label %bb5 unwind label %cleanup, !dbg !5440

bb5:                                              ; preds = %bb4
  store { i64, i64 } %32, { i64, i64 }* %_10, align 8, !dbg !5440
  %33 = bitcast { i64, i64 }* %_10 to i64*, !dbg !5440
  %_16 = load i64, i64* %33, align 8, !dbg !5440, !range !3441, !noundef !23
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !5440

bb7:                                              ; preds = %bb5
  unreachable, !dbg !5440

bb6:                                              ; preds = %bb5
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !5440
  %val = load i64, i64* %34, align 8, !dbg !5440
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5440
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5423, metadata !DIExpression()), !dbg !5443
  store i8 1, i8* %_21, align 1, !dbg !5444
  store i64 %val, i64* %accum, align 8, !dbg !5444
  br label %bb1, !dbg !5434

bb8:                                              ; preds = %bb5
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %35 = invoke { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h063192d14cb62140E"()
          to label %bb9 unwind label %cleanup, !dbg !5445

bb9:                                              ; preds = %bb8
  store { i64, i64 } %35, { i64, i64 }* %2, align 8, !dbg !5445
  br label %bb13, !dbg !5436

bb14:                                             ; preds = %bb16, %bb17
  br label %bb15, !dbg !5436

bb16:                                             ; preds = %bb17
  br label %bb14, !dbg !5436

bb15:                                             ; preds = %bb14
  %36 = bitcast { i8*, i32 }* %1 to i8**, !dbg !5446
  %37 = load i8*, i8** %36, align 8, !dbg !5446
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !5446
  %39 = load i32, i32* %38, align 8, !dbg !5446
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !5446
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !5446
  resume { i8*, i32 } %41, !dbg !5446
}

; core::iter::adapters::map::map_try_fold
; Function Attrs: nonlazybind uwtable
define internal align 1 i8* @_ZN4core4iter8adapters3map12map_try_fold17h4d53a0801c1cce34E(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %f) unnamed_addr #1 !dbg !5447 {
start:
  %g.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, align 8
  %0 = alloca i8*, align 8
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %f, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %f.dbg.spill, metadata !5451, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.declare(metadata {}* %g.dbg.spill, metadata !5452, metadata !DIExpression()), !dbg !5457
  %1 = bitcast i8** %0 to {}*, !dbg !5458
  %2 = bitcast i8** %0 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"**, !dbg !5458
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %f, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %2, align 8, !dbg !5458
  %3 = load i8*, i8** %0, align 8, !dbg !5459, !nonnull !23, !align !445, !noundef !23
  ret i8* %3, !dbg !5459
}

; core::iter::adapters::map::map_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h46fe6e20efd5747eE"(i8** align 8 %_1, i64 %acc, { [0 x i8]*, i64 }* align 8 %elt) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5460 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %elt.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %acc.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca i8**, align 8
  %_12 = alloca i8, align 1
  %_9 = alloca i64*, align 8
  %_5 = alloca { i64, i64 }, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  %1 = load i8**, i8*** %_1.dbg.spill, align 8, !nonnull !23, !align !584, !noundef !23
  %2 = bitcast i8** %1 to {}*
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !5467, metadata !DIExpression(DW_OP_deref)), !dbg !5469
  %3 = load i8**, i8*** %_1.dbg.spill, align 8, !nonnull !23, !align !584, !noundef !23
  %4 = bitcast i8** %3 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"**
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !5468, metadata !DIExpression(DW_OP_deref)), !dbg !5470
  store i64 %acc, i64* %acc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %acc.dbg.spill, metadata !5465, metadata !DIExpression()), !dbg !5471
  store { [0 x i8]*, i64 }* %elt, { [0 x i8]*, i64 }** %elt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %elt.dbg.spill, metadata !5466, metadata !DIExpression()), !dbg !5472
  %_4 = bitcast i8** %_1 to {}*, !dbg !5473
  store i8 1, i8* %_12, align 1, !dbg !5474
  %5 = bitcast i8** %_1 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"**, !dbg !5475
  %_11 = load %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %5, align 8, !dbg !5475, !nonnull !23, !align !445, !noundef !23
  %6 = bitcast i64** %_9 to { [0 x i8]*, i64 }**, !dbg !5475
  store { [0 x i8]*, i64 }* %elt, { [0 x i8]*, i64 }** %6, align 8, !dbg !5475
  %7 = load i64*, i64** %_9, align 8, !dbg !5475, !nonnull !23, !align !584, !noundef !23
  %8 = bitcast i64* %7 to { [0 x i8]*, i64 }*, !dbg !5475
; invoke alloc::str::join_generic_copy::{{closure}}::{{closure}}
  %_7 = invoke i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h9c4954e6196e7c1dE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %_11, { [0 x i8]*, i64 }* align 8 %8)
          to label %bb1 unwind label %cleanup, !dbg !5475

bb5:                                              ; preds = %cleanup
  %9 = load i8, i8* %_12, align 1, !dbg !5476, !range !512, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !5476
  br i1 %10, label %bb4, label %bb3, !dbg !5476

cleanup:                                          ; preds = %bb1, %start
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, i8* %_12, align 1, !dbg !5473
  %16 = bitcast { i64, i64 }* %_5 to i64*, !dbg !5473
  store i64 %acc, i64* %16, align 8, !dbg !5473
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !5473
  store i64 %_7, i64* %17, align 8, !dbg !5473
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !5473
  %19 = load i64, i64* %18, align 8, !dbg !5473
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !5473
  %21 = load i64, i64* %20, align 8, !dbg !5473
; invoke core::ops::function::FnMut::call_mut
  %22 = invoke { i64, i64 } @_ZN4core3ops8function5FnMut8call_mut17h263dca5034dc8e70E({}* align 1 %_4, i64 %19, i64 %21)
          to label %bb2 unwind label %cleanup, !dbg !5473

bb2:                                              ; preds = %bb1
  %23 = extractvalue { i64, i64 } %22, 0, !dbg !5473
  %24 = extractvalue { i64, i64 } %22, 1, !dbg !5473
  %25 = insertvalue { i64, i64 } undef, i64 %23, 0, !dbg !5477
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1, !dbg !5477
  ret { i64, i64 } %26, !dbg !5477

bb3:                                              ; preds = %bb4, %bb5
  %27 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5478
  %28 = load i8*, i8** %27, align 8, !dbg !5478
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5478
  %30 = load i32, i32* %29, align 8, !dbg !5478
  %31 = insertvalue { i8*, i32 } undef, i8* %28, 0, !dbg !5478
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1, !dbg !5478
  resume { i8*, i32 } %32, !dbg !5478

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !5476
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17ha3a3b0f9d46f12b4E"(i64* %iter.0, i64* %iter.1) unnamed_addr #1 !dbg !5479 {
start:
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]", align 1
  %iter.dbg.spill = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 0
  store i64* %iter.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 1
  store i64* %iter.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter.dbg.spill, metadata !5488, metadata !DIExpression()), !dbg !5490
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %f.dbg.spill, metadata !5489, metadata !DIExpression()), !dbg !5491
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0, !dbg !5492
  store i64* %iter.0, i64** %3, align 8, !dbg !5492
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1, !dbg !5492
  store i64* %iter.1, i64** %4, align 8, !dbg !5492
  %5 = bitcast { i64*, i64* }* %0 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !5492
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0, !dbg !5493
  %7 = load i64*, i64** %6, align 8, !dbg !5493, !nonnull !23, !noundef !23
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1, !dbg !5493
  %9 = load i64*, i64** %8, align 8, !dbg !5493
  %10 = insertvalue { i64*, i64* } undef, i64* %7, 0, !dbg !5493
  %11 = insertvalue { i64*, i64* } %10, i64* %9, 1, !dbg !5493
  ret { i64*, i64* } %11, !dbg !5493
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hc92e239c89dd940dE"(i64* %iter.0, i64* %iter.1) unnamed_addr #1 !dbg !5494 {
start:
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]", align 1
  %iter.dbg.spill = alloca { i64*, i64* }, align 8
  %0 = alloca { i64*, i64* }, align 8
  %1 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 0
  store i64* %iter.0, i64** %1, align 8
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 1
  store i64* %iter.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter.dbg.spill, metadata !5498, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %f.dbg.spill, metadata !5499, metadata !DIExpression()), !dbg !5501
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0, !dbg !5502
  store i64* %iter.0, i64** %3, align 8, !dbg !5502
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1, !dbg !5502
  store i64* %iter.1, i64** %4, align 8, !dbg !5502
  %5 = bitcast { i64*, i64* }* %0 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, !dbg !5502
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 0, !dbg !5503
  %7 = load i64*, i64** %6, align 8, !dbg !5503, !nonnull !23, !noundef !23
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %0, i32 0, i32 1, !dbg !5503
  %9 = load i64*, i64** %8, align 8, !dbg !5503
  %10 = insertvalue { i64*, i64* } undef, i64* %7, 0, !dbg !5503
  %11 = insertvalue { i64*, i64* } %10, i64* %9, 1, !dbg !5503
  ret { i64*, i64* } %11, !dbg !5503
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout10size_align17h6b8cb00642389332E() unnamed_addr #1 !dbg !5504 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !5508
  store i64 640, i64* %1, align 8, !dbg !5508
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5508
  store i64 8, i64* %2, align 8, !dbg !5508
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5509
  %4 = load i64, i64* %3, align 8, !dbg !5509
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5509
  %6 = load i64, i64* %5, align 8, !dbg !5509
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !5509
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !5509
  ret { i64, i64 } %8, !dbg !5509
}

; core::alloc::layout::size_align
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout10size_align17ha9ef1132169c015aE() unnamed_addr #1 !dbg !5510 {
start:
  %0 = alloca { i64, i64 }, align 8
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !5511
  store i64 544, i64* %1, align 8, !dbg !5511
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5511
  store i64 8, i64* %2, align 8, !dbg !5511
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5512
  %4 = load i64, i64* %3, align 8, !dbg !5512
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5512
  %6 = load i64, i64* %5, align 8, !dbg !5512
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !5512
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !5512
  ret { i64, i64 } %8, !dbg !5512
}

; core::alloc::layout::Layout::from_size_valid_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17hf620ecb5f9921cbcE(i64 %size, i64 %align) unnamed_addr #0 !dbg !5513 {
start:
  %n.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %self1 = alloca i64, align 8
  %self = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !5534, metadata !DIExpression()), !dbg !5536
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !5535, metadata !DIExpression()), !dbg !5537
  call void @llvm.dbg.declare(metadata i64* %self, metadata !5538, metadata !DIExpression()), !dbg !5549
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !5551, metadata !DIExpression()), !dbg !5558
  store i64 %align, i64* %self1, align 8, !dbg !5550
  %_15 = load i64, i64* %self1, align 8, !dbg !5558, !range !5559, !noundef !23
  store i64 %_15, i64* %n.dbg.spill, align 8, !dbg !5558
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5560, metadata !DIExpression()), !dbg !5574
  store i64 %_15, i64* %self, align 8, !dbg !5574
  %_8 = load i64, i64* %self, align 8, !dbg !5549
  %_7 = sub i64 %_8, 1, !dbg !5576
  %_5 = sub i64 9223372036854775807, %_7, !dbg !5577
  %_3 = icmp ugt i64 %size, %_5, !dbg !5578
  br i1 %_3, label %bb1, label %bb2, !dbg !5578

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_11 to i64*, !dbg !5579
  store i64 %size, i64* %1, align 8, !dbg !5579
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !5579
  store i64 %align, i64* %2, align 8, !dbg !5579
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !5580
  %4 = load i64, i64* %3, align 8, !dbg !5580
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !5580
  %6 = load i64, i64* %5, align 8, !dbg !5580, !range !5559, !noundef !23
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5580
  store i64 %4, i64* %7, align 8, !dbg !5580
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5580
  store i64 %6, i64* %8, align 8, !dbg !5580
  br label %bb3, !dbg !5581

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5582
  store i64 0, i64* %9, align 8, !dbg !5582
  br label %bb3, !dbg !5581

bb3:                                              ; preds = %bb2, %bb1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5581
  %11 = load i64, i64* %10, align 8, !dbg !5581
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5581
  %13 = load i64, i64* %12, align 8, !dbg !5581, !range !1795, !noundef !23
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !5581
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !5581
  ret { i64, i64 } %15, !dbg !5581
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h55a81e3824e5f6f7E(i64 %n) unnamed_addr #0 !dbg !5583 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5587, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5608, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5653, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !5659, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !5590, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !5665, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !5648, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !5671, metadata !DIExpression()), !dbg !5679
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3032ae0d07eed7eaE"(i64 16, i64 %n), !dbg !5652
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !5652
  br label %bb1, !dbg !5652

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5663
  %_15 = load i64, i64* %3, align 8, !dbg !5663, !range !3441, !noundef !23
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !5663

bb9:                                              ; preds = %bb1
  unreachable, !dbg !5663

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !5663
  store i64 1, i64* %4, align 8, !dbg !5663
  br label %bb11, !dbg !5663

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5663
  %v = load i64, i64* %5, align 8, !dbg !5663
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !5663
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !5660, metadata !DIExpression()), !dbg !5680
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5680
  store i64 %v, i64* %6, align 8, !dbg !5680
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !5680
  store i64 0, i64* %7, align 8, !dbg !5680
  br label %bb11, !dbg !5663

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !5651
  %_18 = load i64, i64* %8, align 8, !dbg !5651, !range !3441, !noundef !23
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !5651

bb13:                                             ; preds = %bb11
  unreachable, !dbg !5651

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5651
  %v4 = load i64, i64* %9, align 8, !dbg !5651
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !5651
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !5645, metadata !DIExpression()), !dbg !5681
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5681
  store i64 %v4, i64* %10, align 8, !dbg !5681
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5681
  store i64 0, i64* %11, align 8, !dbg !5681
  br label %bb2, !dbg !5651

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5678
  store i64 1, i64* %12, align 8, !dbg !5678
  br label %bb2, !dbg !5651

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5652
  %_9 = load i64, i64* %13, align 8, !dbg !5652, !range !3441, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !5652

bb4:                                              ; preds = %bb2
  unreachable, !dbg !5652

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5652
  %val = load i64, i64* %14, align 8, !dbg !5652
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5652
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5605, metadata !DIExpression()), !dbg !5682
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !5682
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !5588, metadata !DIExpression()), !dbg !5683
  store i64 8, i64* %align.dbg.spill, align 8, !dbg !5684
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !5692, metadata !DIExpression()), !dbg !5706
  store i64 8, i64* %0, align 8, !dbg !5706
  %_14 = load i64, i64* %0, align 8, !dbg !5706, !range !5559, !noundef !23
  br label %bb15, !dbg !5706

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha8e0a4e0ca4129a2E"(), !dbg !5679
  br label %bb16, !dbg !5679

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5679
  store i64 0, i64* %15, align 8, !dbg !5679
  br label %bb7, !dbg !5708

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5708
  %17 = load i64, i64* %16, align 8, !dbg !5708
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5708
  %19 = load i64, i64* %18, align 8, !dbg !5708, !range !1795, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !5708
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !5708
  ret { i64, i64 } %21, !dbg !5708

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17hf620ecb5f9921cbcE(i64 %val, i64 %_14), !dbg !5709
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !5709
  br label %bb6, !dbg !5709

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !5708
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h740ebd2248365eefE(i64 %n) unnamed_addr #0 !dbg !5710 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5712, metadata !DIExpression()), !dbg !5719
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5720, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5732, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !5736, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !5715, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !5742, metadata !DIExpression()), !dbg !5749
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !5727, metadata !DIExpression()), !dbg !5751
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !5746, metadata !DIExpression()), !dbg !5752
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3032ae0d07eed7eaE"(i64 16, i64 %n), !dbg !5731
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !5731
  br label %bb1, !dbg !5731

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5740
  %_15 = load i64, i64* %3, align 8, !dbg !5740, !range !3441, !noundef !23
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !5740

bb9:                                              ; preds = %bb1
  unreachable, !dbg !5740

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !5740
  store i64 1, i64* %4, align 8, !dbg !5740
  br label %bb11, !dbg !5740

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5740
  %v = load i64, i64* %5, align 8, !dbg !5740
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !5740
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !5737, metadata !DIExpression()), !dbg !5753
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5753
  store i64 %v, i64* %6, align 8, !dbg !5753
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !5753
  store i64 0, i64* %7, align 8, !dbg !5753
  br label %bb11, !dbg !5740

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !5730
  %_18 = load i64, i64* %8, align 8, !dbg !5730, !range !3441, !noundef !23
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !5730

bb13:                                             ; preds = %bb11
  unreachable, !dbg !5730

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5730
  %v4 = load i64, i64* %9, align 8, !dbg !5730
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !5730
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !5724, metadata !DIExpression()), !dbg !5754
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5754
  store i64 %v4, i64* %10, align 8, !dbg !5754
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5754
  store i64 0, i64* %11, align 8, !dbg !5754
  br label %bb2, !dbg !5730

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5751
  store i64 1, i64* %12, align 8, !dbg !5751
  br label %bb2, !dbg !5730

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5731
  %_9 = load i64, i64* %13, align 8, !dbg !5731, !range !3441, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !5731

bb4:                                              ; preds = %bb2
  unreachable, !dbg !5731

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5731
  %val = load i64, i64* %14, align 8, !dbg !5731
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5731
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5717, metadata !DIExpression()), !dbg !5755
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !5755
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !5713, metadata !DIExpression()), !dbg !5756
  store i64 8, i64* %align.dbg.spill, align 8, !dbg !5757
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !5763, metadata !DIExpression()), !dbg !5770
  store i64 8, i64* %0, align 8, !dbg !5770
  %_14 = load i64, i64* %0, align 8, !dbg !5770, !range !5559, !noundef !23
  br label %bb15, !dbg !5770

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha8e0a4e0ca4129a2E"(), !dbg !5752
  br label %bb16, !dbg !5752

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5752
  store i64 0, i64* %15, align 8, !dbg !5752
  br label %bb7, !dbg !5772

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5772
  %17 = load i64, i64* %16, align 8, !dbg !5772
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5772
  %19 = load i64, i64* %18, align 8, !dbg !5772, !range !1795, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !5772
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !5772
  ret { i64, i64 } %21, !dbg !5772

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17hf620ecb5f9921cbcE(i64 %val, i64 %_14), !dbg !5773
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !5773
  br label %bb6, !dbg !5773

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !5772
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17haf51b2e82c5094e2E(i64 %n) unnamed_addr #0 !dbg !5774 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5776, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5784, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5796, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !5800, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !5779, metadata !DIExpression()), !dbg !5805
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !5806, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !5791, metadata !DIExpression()), !dbg !5815
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !5810, metadata !DIExpression()), !dbg !5816
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3032ae0d07eed7eaE"(i64 8, i64 %n), !dbg !5795
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !5795
  br label %bb1, !dbg !5795

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5804
  %_15 = load i64, i64* %3, align 8, !dbg !5804, !range !3441, !noundef !23
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !5804

bb9:                                              ; preds = %bb1
  unreachable, !dbg !5804

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !5804
  store i64 1, i64* %4, align 8, !dbg !5804
  br label %bb11, !dbg !5804

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5804
  %v = load i64, i64* %5, align 8, !dbg !5804
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !5804
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !5801, metadata !DIExpression()), !dbg !5817
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5817
  store i64 %v, i64* %6, align 8, !dbg !5817
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !5817
  store i64 0, i64* %7, align 8, !dbg !5817
  br label %bb11, !dbg !5804

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !5794
  %_18 = load i64, i64* %8, align 8, !dbg !5794, !range !3441, !noundef !23
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !5794

bb13:                                             ; preds = %bb11
  unreachable, !dbg !5794

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5794
  %v4 = load i64, i64* %9, align 8, !dbg !5794
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !5794
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !5788, metadata !DIExpression()), !dbg !5818
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5818
  store i64 %v4, i64* %10, align 8, !dbg !5818
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5818
  store i64 0, i64* %11, align 8, !dbg !5818
  br label %bb2, !dbg !5794

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5815
  store i64 1, i64* %12, align 8, !dbg !5815
  br label %bb2, !dbg !5794

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5795
  %_9 = load i64, i64* %13, align 8, !dbg !5795, !range !3441, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !5795

bb4:                                              ; preds = %bb2
  unreachable, !dbg !5795

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5795
  %val = load i64, i64* %14, align 8, !dbg !5795
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5795
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5781, metadata !DIExpression()), !dbg !5819
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !5819
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !5777, metadata !DIExpression()), !dbg !5820
  store i64 8, i64* %align.dbg.spill, align 8, !dbg !5821
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !5827, metadata !DIExpression()), !dbg !5834
  store i64 8, i64* %0, align 8, !dbg !5834
  %_14 = load i64, i64* %0, align 8, !dbg !5834, !range !5559, !noundef !23
  br label %bb15, !dbg !5834

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha8e0a4e0ca4129a2E"(), !dbg !5816
  br label %bb16, !dbg !5816

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5816
  store i64 0, i64* %15, align 8, !dbg !5816
  br label %bb7, !dbg !5836

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5836
  %17 = load i64, i64* %16, align 8, !dbg !5836
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5836
  %19 = load i64, i64* %18, align 8, !dbg !5836, !range !1795, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !5836
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !5836
  ret { i64, i64 } %21, !dbg !5836

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17hf620ecb5f9921cbcE(i64 %val, i64 %_14), !dbg !5837
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !5837
  br label %bb6, !dbg !5837

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !5836
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hc79c5268edc0cd65E(i64 %n) unnamed_addr #0 !dbg !5838 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5840, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !5848, metadata !DIExpression()), !dbg !5858
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !5860, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !5864, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !5843, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !5870, metadata !DIExpression()), !dbg !5877
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !5855, metadata !DIExpression()), !dbg !5879
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !5874, metadata !DIExpression()), !dbg !5880
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3032ae0d07eed7eaE"(i64 1, i64 %n), !dbg !5859
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !5859
  br label %bb1, !dbg !5859

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !5868
  %_15 = load i64, i64* %3, align 8, !dbg !5868, !range !3441, !noundef !23
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !5868

bb9:                                              ; preds = %bb1
  unreachable, !dbg !5868

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !5868
  store i64 1, i64* %4, align 8, !dbg !5868
  br label %bb11, !dbg !5868

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !5868
  %v = load i64, i64* %5, align 8, !dbg !5868
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !5868
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !5865, metadata !DIExpression()), !dbg !5881
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5881
  store i64 %v, i64* %6, align 8, !dbg !5881
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !5881
  store i64 0, i64* %7, align 8, !dbg !5881
  br label %bb11, !dbg !5868

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !5858
  %_18 = load i64, i64* %8, align 8, !dbg !5858, !range !3441, !noundef !23
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !5858

bb13:                                             ; preds = %bb11
  unreachable, !dbg !5858

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5858
  %v4 = load i64, i64* %9, align 8, !dbg !5858
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !5858
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !5852, metadata !DIExpression()), !dbg !5882
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5882
  store i64 %v4, i64* %10, align 8, !dbg !5882
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5882
  store i64 0, i64* %11, align 8, !dbg !5882
  br label %bb2, !dbg !5858

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5879
  store i64 1, i64* %12, align 8, !dbg !5879
  br label %bb2, !dbg !5858

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !5859
  %_9 = load i64, i64* %13, align 8, !dbg !5859, !range !3441, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !5859

bb4:                                              ; preds = %bb2
  unreachable, !dbg !5859

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !5859
  %val = load i64, i64* %14, align 8, !dbg !5859
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !5859
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !5845, metadata !DIExpression()), !dbg !5883
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !5883
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !5841, metadata !DIExpression()), !dbg !5884
  store i64 1, i64* %align.dbg.spill, align 8, !dbg !5885
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !5891, metadata !DIExpression()), !dbg !5898
  store i64 1, i64* %0, align 8, !dbg !5898
  %_14 = load i64, i64* %0, align 8, !dbg !5898, !range !5559, !noundef !23
  br label %bb15, !dbg !5898

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha8e0a4e0ca4129a2E"(), !dbg !5880
  br label %bb16, !dbg !5880

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5880
  store i64 0, i64* %15, align 8, !dbg !5880
  br label %bb7, !dbg !5900

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !5900
  %17 = load i64, i64* %16, align 8, !dbg !5900
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !5900
  %19 = load i64, i64* %18, align 8, !dbg !5900, !range !1795, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !5900
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !5900
  ret { i64, i64 } %21, !dbg !5900

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17hf620ecb5f9921cbcE(i64 %val, i64 %_14), !dbg !5901
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !5901
  br label %bb6, !dbg !5901

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !5900
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h03ffcdbbede98532E"(i64* align 8 %self) unnamed_addr #0 !dbg !5902 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !5910, metadata !DIExpression()), !dbg !5911
  %0 = load i64, i64* %self, align 8, !dbg !5912
  ret i64 %0, !dbg !5913
}

; core::slice::<impl [T]>::starts_with
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h648456b66418bed4E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %0, i64 %1) unnamed_addr #1 !dbg !5914 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_19 = alloca { i64, i64 }, align 8
  %index = alloca i64, align 8
  %_12 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca i8, align 1
  %needle = alloca { [0 x i8]*, i64 }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5918, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %needle, metadata !5919, metadata !DIExpression()), !dbg !5923
  call void @llvm.dbg.declare(metadata i64* %index, metadata !5924, metadata !DIExpression()), !dbg !5932
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0, !dbg !5934
  %_4.0 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !5934, !nonnull !23, !align !445, !noundef !23
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1, !dbg !5934
  %_4.1 = load i64, i64* %8, align 8, !dbg !5934
  store i64 %_4.1, i64* %n.dbg.spill, align 8, !dbg !5934
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5920, metadata !DIExpression()), !dbg !5935
  %_5 = icmp uge i64 %self.1, %_4.1, !dbg !5936
  br i1 %_5, label %bb2, label %bb1, !dbg !5936

bb1:                                              ; preds = %start
  store i8 0, i8* %2, align 1, !dbg !5936
  br label %bb3, !dbg !5936

bb2:                                              ; preds = %start
  store { [0 x i8]*, i64 }* %needle, { [0 x i8]*, i64 }** %self.dbg.spill1, align 8, !dbg !5937
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill1, metadata !5938, metadata !DIExpression()), !dbg !5943
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5933
  store [0 x i8]* %self.0, [0 x i8]** %9, align 8, !dbg !5933
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5933
  store i64 %self.1, i64* %10, align 8, !dbg !5933
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !5931, metadata !DIExpression()), !dbg !5932
  store i64 %_4.1, i64* %index, align 8, !dbg !5944
  %self = load i64, i64* %index, align 8, !dbg !5932
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !5932
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !5945, metadata !DIExpression()), !dbg !5952
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !5932
  store [0 x i8]* %self.0, [0 x i8]** %11, align 8, !dbg !5932
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !5932
  store i64 %self.1, i64* %12, align 8, !dbg !5932
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !5951, metadata !DIExpression()), !dbg !5952
  %13 = bitcast { i64, i64 }* %_19 to i64*, !dbg !5952
  store i64 0, i64* %13, align 8, !dbg !5952
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_19, i32 0, i32 1, !dbg !5952
  store i64 %self, i64* %14, align 8, !dbg !5952
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_19, i32 0, i32 0, !dbg !5952
  %16 = load i64, i64* %15, align 8, !dbg !5952
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_19, i32 0, i32 1, !dbg !5952
  %18 = load i64, i64* %17, align 8, !dbg !5952
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %19 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h311cd6c79c217910E"(i64 %16, i64 %18, [0 x i8]* align 1 %self.0, i64 %self.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc528 to %"core::panic::location::Location"*)), !dbg !5952
  %_13.0 = extractvalue { [0 x i8]*, i64 } %19, 0, !dbg !5952
  %_13.1 = extractvalue { [0 x i8]*, i64 } %19, 1, !dbg !5952
  br label %bb4, !dbg !5952

bb4:                                              ; preds = %bb2
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 0, !dbg !5954
  store [0 x i8]* %_13.0, [0 x i8]** %20, align 8, !dbg !5954
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 1, !dbg !5954
  store i64 %_13.1, i64* %21, align 8, !dbg !5954
  store { [0 x i8]*, i64 }* %_12, { [0 x i8]*, i64 }** %other.dbg.spill, align 8, !dbg !5954
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !5942, metadata !DIExpression()), !dbg !5943
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 0, !dbg !5943
  %_24.0 = load [0 x i8]*, [0 x i8]** %22, align 8, !dbg !5943, !nonnull !23, !align !445, !noundef !23
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %needle, i32 0, i32 1, !dbg !5943
  %_24.1 = load i64, i64* %23, align 8, !dbg !5943
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 0, !dbg !5943
  %_25.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !5943, !nonnull !23, !align !445, !noundef !23
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_12, i32 0, i32 1, !dbg !5943
  %_25.1 = load i64, i64* %25, align 8, !dbg !5943
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %_9 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he80a31ab2f1cfe97E"([0 x i8]* align 1 %_24.0, i64 %_24.1, [0 x i8]* align 1 %_25.0, i64 %_25.1), !dbg !5943
  br label %bb5, !dbg !5943

bb5:                                              ; preds = %bb4
  %26 = zext i1 %_9 to i8, !dbg !5936
  store i8 %26, i8* %2, align 1, !dbg !5936
  br label %bb3, !dbg !5936

bb3:                                              ; preds = %bb1, %bb5
  %27 = load i8, i8* %2, align 1, !dbg !5955, !range !512, !noundef !23
  %28 = trunc i8 %27 to i1, !dbg !5955
  ret i1 %28, !dbg !5955
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 !dbg !5956 {
start:
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5968, metadata !DIExpression()), !dbg !5970
  store i64 %mid, i64* %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %mid.dbg.spill, metadata !5969, metadata !DIExpression()), !dbg !5971
  %_4 = icmp ule i64 %mid, %self.1, !dbg !5972
  %_3 = xor i1 %_4, true, !dbg !5973
  br i1 %_3, label %bb1, label %bb2, !dbg !5973

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::split_at_mut_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h376dae06f056da4eE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid), !dbg !5974
  br label %bb3, !dbg !5974

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [35 x i8] }>* @alloc529 to [0 x i8]*), i64 35, %"core::panic::location::Location"* align 8 %1) #15, !dbg !5973
  unreachable, !dbg !5973

bb3:                                              ; preds = %bb2
  ret void, !dbg !5975
}

; core::slice::<impl [T]>::copy_from_slice
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %src.0, i64 %src.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #1 !dbg !5976 {
start:
  %count.dbg.spill = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>::{closure#0}]", align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !5980, metadata !DIExpression()), !dbg !5982
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !5981, metadata !DIExpression()), !dbg !5983
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>::{closure#0}]"* %runtime, metadata !5984, metadata !DIExpression()), !dbg !6005
  %_3 = icmp ne i64 %self.1, %src.1, !dbg !6007
  br i1 %_3, label %bb1, label %bb2, !dbg !6007

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !6008
  store [0 x i8]* %src.0, [0 x i8]** %5, align 8, !dbg !6008
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !6008
  store i64 %src.1, i64* %6, align 8, !dbg !6008
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !6009, metadata !DIExpression()), !dbg !6014
  %src = bitcast [0 x i8]* %src.0 to i8*, !dbg !6014
  store i8* %src, i8** %src.dbg.spill2, align 8, !dbg !6014
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill2, metadata !5993, metadata !DIExpression()), !dbg !6015
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !6016
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !6016
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !6016
  store i64 %self.1, i64* %8, align 8, !dbg !6016
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !6017, metadata !DIExpression()), !dbg !6022
  %dst = bitcast [0 x i8]* %self.0 to i8*, !dbg !6022
  store i8* %dst, i8** %dst.dbg.spill, align 8, !dbg !6022
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !5995, metadata !DIExpression()), !dbg !6015
  store i64 %self.1, i64* %count.dbg.spill, align 8, !dbg !6023
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !5996, metadata !DIExpression()), !dbg !6015
  %9 = mul i64 %self.1, 1, !dbg !6015
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 %9, i1 false), !dbg !6015
  ret void, !dbg !6024

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h19e3e22fb19335d6E"(i64 %self.1, i64 %src.1, %"core::panic::location::Location"* align 8 %0) #15, !dbg !6025
  unreachable, !dbg !6025
}

; core::slice::<impl [T]>::split_at_mut_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h376dae06f056da4eE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %0, [0 x i8]* align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 !dbg !6026 {
start:
  %metadata.dbg.spill16 = alloca i64, align 8
  %data_address.dbg.spill15 = alloca {}*, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %len.dbg.spill12 = alloca i64, align 8
  %data.dbg.spill11 = alloca i8*, align 8
  %len.dbg.spill10 = alloca i64, align 8
  %data.dbg.spill9 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill4 = alloca i64, align 8
  %data.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill2 = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill = alloca i64, align 8
  %mid.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_56 = alloca { i8*, i64 }, align 8
  %_55 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_33 = alloca { i8*, i64 }, align 8
  %_32 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6030, metadata !DIExpression()), !dbg !6044
  store i64 %mid, i64* %mid.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %mid.dbg.spill, metadata !6031, metadata !DIExpression()), !dbg !6045
  store i64 %self.1, i64* %len.dbg.spill, align 8, !dbg !6046
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !6032, metadata !DIExpression()), !dbg !6047
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !6048
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8, !dbg !6048
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !6048
  store i64 %self.1, i64* %5, align 8, !dbg !6048
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !6049, metadata !DIExpression()), !dbg !6052
  %ptr = bitcast [0 x i8]* %self.0 to i8*, !dbg !6052
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !6052
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !6034, metadata !DIExpression()), !dbg !6053
  store i8* %ptr, i8** %data.dbg.spill, align 8, !dbg !6054
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !6055, metadata !DIExpression()), !dbg !6070
  store i64 %mid, i64* %len.dbg.spill2, align 8, !dbg !6072
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill2, metadata !6061, metadata !DIExpression()), !dbg !6070
  store i8* %ptr, i8** %data.dbg.spill3, align 8, !dbg !6070
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill3, metadata !6073, metadata !DIExpression()), !dbg !6078
  store i64 %mid, i64* %len.dbg.spill4, align 8, !dbg !6070
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill4, metadata !6077, metadata !DIExpression()), !dbg !6078
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !6078
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !6080, metadata !DIExpression()), !dbg !6084
  %data_address = bitcast i8* %ptr to {}*, !dbg !6084
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6084
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6086, metadata !DIExpression()), !dbg !6091
  store i64 %mid, i64* %metadata.dbg.spill, align 8, !dbg !6078
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !6090, metadata !DIExpression()), !dbg !6091
  %6 = bitcast { i8*, i64 }* %_33 to {}**, !dbg !6091
  store {}* %data_address, {}** %6, align 8, !dbg !6091
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_33, i32 0, i32 1, !dbg !6091
  store i64 %mid, i64* %7, align 8, !dbg !6091
  %8 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_32 to { i8*, i64 }*, !dbg !6091
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_33, i32 0, i32 0, !dbg !6091
  %10 = load i8*, i8** %9, align 8, !dbg !6091
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_33, i32 0, i32 1, !dbg !6091
  %12 = load i64, i64* %11, align 8, !dbg !6091
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 0, !dbg !6091
  store i8* %10, i8** %13, align 8, !dbg !6091
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 1, !dbg !6091
  store i64 %12, i64* %14, align 8, !dbg !6091
  %15 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_32 to { [0 x i8]*, i64 }*, !dbg !6091
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0, !dbg !6091
  %_25.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !dbg !6091
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1, !dbg !6091
  %_25.1 = load i64, i64* %17, align 8, !dbg !6091
  store i8* %ptr, i8** %self.dbg.spill6, align 8, !dbg !6093
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !6094, metadata !DIExpression()), !dbg !6099
  store i64 %mid, i64* %count.dbg.spill, align 8, !dbg !6100
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6098, metadata !DIExpression()), !dbg !6099
  store i8* %ptr, i8** %self.dbg.spill7, align 8, !dbg !6099
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6101, metadata !DIExpression()), !dbg !6106
  store i64 %mid, i64* %count.dbg.spill8, align 8, !dbg !6099
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !6105, metadata !DIExpression()), !dbg !6106
  %18 = getelementptr inbounds i8, i8* %ptr, i64 %mid, !dbg !6106
  store i8* %18, i8** %1, align 8, !dbg !6106
  %_40 = load i8*, i8** %1, align 8, !dbg !6106
  br label %bb1, !dbg !6106

bb1:                                              ; preds = %start
  store i8* %_40, i8** %data.dbg.spill9, align 8, !dbg !6106
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill9, metadata !6108, metadata !DIExpression()), !dbg !6116
  %len = sub i64 %self.1, %mid, !dbg !6118
  store i64 %len, i64* %len.dbg.spill10, align 8, !dbg !6118
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill10, metadata !6112, metadata !DIExpression()), !dbg !6116
  store i8* %_40, i8** %data.dbg.spill11, align 8, !dbg !6116
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill11, metadata !6119, metadata !DIExpression()), !dbg !6124
  store i64 %len, i64* %len.dbg.spill12, align 8, !dbg !6116
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill12, metadata !6123, metadata !DIExpression()), !dbg !6124
  store i8* %_40, i8** %self.dbg.spill13, align 8, !dbg !6124
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !6126, metadata !DIExpression()), !dbg !6130
  %data_address14 = bitcast i8* %_40 to {}*, !dbg !6130
  store {}* %data_address14, {}** %data_address.dbg.spill15, align 8, !dbg !6130
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill15, metadata !6132, metadata !DIExpression()), !dbg !6137
  store i64 %len, i64* %metadata.dbg.spill16, align 8, !dbg !6124
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill16, metadata !6136, metadata !DIExpression()), !dbg !6137
  %19 = bitcast { i8*, i64 }* %_56 to {}**, !dbg !6137
  store {}* %data_address14, {}** %19, align 8, !dbg !6137
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_56, i32 0, i32 1, !dbg !6137
  store i64 %len, i64* %20, align 8, !dbg !6137
  %21 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_55 to { i8*, i64 }*, !dbg !6137
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_56, i32 0, i32 0, !dbg !6137
  %23 = load i8*, i8** %22, align 8, !dbg !6137
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_56, i32 0, i32 1, !dbg !6137
  %25 = load i64, i64* %24, align 8, !dbg !6137
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %21, i32 0, i32 0, !dbg !6137
  store i8* %23, i8** %26, align 8, !dbg !6137
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %21, i32 0, i32 1, !dbg !6137
  store i64 %25, i64* %27, align 8, !dbg !6137
  %28 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_55 to { [0 x i8]*, i64 }*, !dbg !6137
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 0, !dbg !6137
  %_48.0 = load [0 x i8]*, [0 x i8]** %29, align 8, !dbg !6137
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %28, i32 0, i32 1, !dbg !6137
  %_48.1 = load i64, i64* %30, align 8, !dbg !6137
  %31 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0 to { [0 x i8]*, i64 }*, !dbg !6139
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0, !dbg !6139
  store [0 x i8]* %_25.0, [0 x i8]** %32, align 8, !dbg !6139
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1, !dbg !6139
  store i64 %_25.1, i64* %33, align 8, !dbg !6139
  %34 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %0, i32 0, i32 1, !dbg !6139
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 0, !dbg !6139
  store [0 x i8]* %_48.0, [0 x i8]** %35, align 8, !dbg !6139
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 1, !dbg !6139
  store i64 %_48.1, i64* %36, align 8, !dbg !6139
  ret void, !dbg !6140
}

; core::slice::<impl [T]>::contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17hff584c436fe4b983E"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, { [0 x i8]*, i64 }* align 8 %x) unnamed_addr #0 !dbg !6141 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %self.0, [0 x { [0 x i8]*, i64 }]** %0, align 8
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !6145, metadata !DIExpression()), !dbg !6147
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !6146, metadata !DIExpression()), !dbg !6148
; call <T as core::slice::cmp::SliceContains>::slice_contains
  %2 = call zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17hae7d69e6e815e172E"({ [0 x i8]*, i64 }* align 8 %x, [0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1), !dbg !6149
  br label %bb1, !dbg !6149

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !6150
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he80a31ab2f1cfe97E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !6151 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6156, metadata !DIExpression()), !dbg !6158
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !6157, metadata !DIExpression()), !dbg !6159
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %4 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17he95f9a11ce31a4b6E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1), !dbg !6160
  br label %bb1, !dbg !6160

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !6161
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h09fc45be399bae52E"([0 x i8]* align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !6162 {
start:
  %ptr.dbg.spill10 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill9 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i8*, align 8
  %end = alloca i8*, align 8
  %3 = alloca { i8*, i8* }, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !6166, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.declare(metadata i8** %end, metadata !6169, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !6173, metadata !DIExpression()), !dbg !6178
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6187
  store [0 x i8]* %slice.0, [0 x i8]** %6, align 8, !dbg !6187
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6187
  store i64 %slice.1, i64* %7, align 8, !dbg !6187
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6188, metadata !DIExpression()), !dbg !6194
  %ptr = bitcast [0 x i8]* %slice.0 to i8*, !dbg !6194
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !6194
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !6167, metadata !DIExpression()), !dbg !6195
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !6186
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !6184, metadata !DIExpression()), !dbg !6196
  store i8* %ptr, i8** %self.dbg.spill2, align 8, !dbg !6196
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !6197, metadata !DIExpression()), !dbg !6202
  %8 = bitcast {}** %2 to i64*, !dbg !6204
  store i64 0, i64* %8, align 8, !dbg !6204
  %data_address = load {}*, {}** %2, align 8, !dbg !6204
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6204
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6177, metadata !DIExpression()), !dbg !6178
  br label %bb5, !dbg !6204

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !6178
  store {}* %data_address, {}** %9, align 8, !dbg !6178
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !6178
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !6178
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !6178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6178
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !6178
  %other = load i8*, i8** %13, align 8, !dbg !6178
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !6178
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6201, metadata !DIExpression()), !dbg !6202
  %14 = icmp eq i8* %ptr, %other, !dbg !6202
  %15 = zext i1 %14 to i8, !dbg !6202
  store i8 %15, i8* %1, align 1, !dbg !6202
  %16 = load i8, i8* %1, align 1, !dbg !6202, !range !512, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !6202
  br label %bb6, !dbg !6202

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !6210
  call void @llvm.assume(i1 %_5), !dbg !6211
  br label %bb1, !dbg !6211

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !6212

bb2:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill6, align 8, !dbg !6213
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !6214, metadata !DIExpression()), !dbg !6219
  store i64 %slice.1, i64* %count.dbg.spill7, align 8, !dbg !6220
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !6218, metadata !DIExpression()), !dbg !6219
  store i8* %ptr, i8** %self.dbg.spill8, align 8, !dbg !6219
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !6221, metadata !DIExpression()), !dbg !6226
  store i64 %slice.1, i64* %count.dbg.spill9, align 8, !dbg !6219
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill9, metadata !6225, metadata !DIExpression()), !dbg !6226
  %17 = getelementptr i8, i8* %ptr, i64 %slice.1, !dbg !6226
  store i8* %17, i8** %0, align 8, !dbg !6226
  %_10 = load i8*, i8** %0, align 8, !dbg !6226
  br label %bb7, !dbg !6226

bb3:                                              ; preds = %bb1
  store i8* %ptr, i8** %self.dbg.spill3, align 8, !dbg !6228
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !6229, metadata !DIExpression()), !dbg !6234
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !6235
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6233, metadata !DIExpression()), !dbg !6234
  store i8* %ptr, i8** %self.dbg.spill4, align 8, !dbg !6234
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !6236, metadata !DIExpression()), !dbg !6241
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !6234
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !6240, metadata !DIExpression()), !dbg !6241
  %18 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1, !dbg !6241
  store i8* %18, i8** %end, align 8, !dbg !6241
  br label %bb8, !dbg !6241

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !6243

bb4:                                              ; preds = %bb7, %bb8
  store i8* %ptr, i8** %ptr.dbg.spill10, align 8, !dbg !6244
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill10, metadata !6245, metadata !DIExpression()), !dbg !6249
  store i8* %ptr, i8** %_18, align 8, !dbg !6249
  %_21 = load i8*, i8** %end, align 8, !dbg !6251
  %19 = bitcast { i8*, i8* }* %3 to i8**, !dbg !6252
  %20 = load i8*, i8** %_18, align 8, !dbg !6252, !nonnull !23, !noundef !23
  store i8* %20, i8** %19, align 8, !dbg !6252
  %21 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !6252
  store i8* %_21, i8** %21, align 8, !dbg !6252
  %22 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0, !dbg !6253
  %23 = load i8*, i8** %22, align 8, !dbg !6253, !nonnull !23, !noundef !23
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !6253
  %25 = load i8*, i8** %24, align 8, !dbg !6253
  %26 = insertvalue { i8*, i8* } undef, i8* %23, 0, !dbg !6253
  %27 = insertvalue { i8*, i8* } %26, i8* %25, 1, !dbg !6253
  ret { i8*, i8* } %27, !dbg !6253

bb7:                                              ; preds = %bb2
  store i8* %_10, i8** %end, align 8, !dbg !6213
  br label %bb4, !dbg !6243
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h31444a6cf065ff14E"([0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !6254 {
start:
  %ptr.dbg.spill11 = alloca { [0 x i8]*, i64 }*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }*, align 8
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i64*, align 8
  %end = alloca { [0 x i8]*, i64 }*, align 8
  %3 = alloca { i64*, i64* }, align 8
  %4 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %4, align 8
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, metadata !6258, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %end, metadata !6261, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !6265, metadata !DIExpression()), !dbg !6270
  %6 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6281
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %6, align 8, !dbg !6281
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6281
  store i64 %slice.1, i64* %7, align 8, !dbg !6281
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !6282, metadata !DIExpression()), !dbg !6288
  %ptr = bitcast [0 x { [0 x i8]*, i64 }]* %slice.0 to { [0 x i8]*, i64 }*, !dbg !6288
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill, align 8, !dbg !6288
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill, metadata !6259, metadata !DIExpression()), !dbg !6289
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %self.dbg.spill1, align 8, !dbg !6280
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill1, metadata !6278, metadata !DIExpression()), !dbg !6290
  %self = bitcast { [0 x i8]*, i64 }* %ptr to i8*, !dbg !6290
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !6290
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !6291, metadata !DIExpression()), !dbg !6296
  %8 = bitcast {}** %2 to i64*, !dbg !6298
  store i64 0, i64* %8, align 8, !dbg !6298
  %data_address = load {}*, {}** %2, align 8, !dbg !6298
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6298
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6269, metadata !DIExpression()), !dbg !6270
  br label %bb5, !dbg !6298

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !6270
  store {}* %data_address, {}** %9, align 8, !dbg !6270
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !6270
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !6270
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !6270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6270
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !6270
  %other = load i8*, i8** %13, align 8, !dbg !6270
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !6270
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6295, metadata !DIExpression()), !dbg !6296
  %14 = icmp eq i8* %self, %other, !dbg !6296
  %15 = zext i1 %14 to i8, !dbg !6296
  store i8 %15, i8* %1, align 1, !dbg !6296
  %16 = load i8, i8* %1, align 1, !dbg !6296, !range !512, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !6296
  br label %bb6, !dbg !6296

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !6304
  call void @llvm.assume(i1 %_5), !dbg !6305
  br label %bb1, !dbg !6305

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !6306

bb2:                                              ; preds = %bb1
  %self6 = bitcast { [0 x i8]*, i64 }* %ptr to i8*, !dbg !6307
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !6307
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6308, metadata !DIExpression()), !dbg !6313
  store i64 %slice.1, i64* %count.dbg.spill8, align 8, !dbg !6314
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !6312, metadata !DIExpression()), !dbg !6313
  store i8* %self6, i8** %self.dbg.spill9, align 8, !dbg !6313
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !6315, metadata !DIExpression()), !dbg !6320
  store i64 %slice.1, i64* %count.dbg.spill10, align 8, !dbg !6313
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !6319, metadata !DIExpression()), !dbg !6320
  %17 = getelementptr i8, i8* %self6, i64 %slice.1, !dbg !6320
  store i8* %17, i8** %0, align 8, !dbg !6320
  %_10 = load i8*, i8** %0, align 8, !dbg !6320
  br label %bb7, !dbg !6320

bb3:                                              ; preds = %bb1
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %self.dbg.spill3, align 8, !dbg !6322
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill3, metadata !6323, metadata !DIExpression()), !dbg !6330
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !6331
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6329, metadata !DIExpression()), !dbg !6330
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %self.dbg.spill4, align 8, !dbg !6330
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill4, metadata !6332, metadata !DIExpression()), !dbg !6339
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !6330
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !6338, metadata !DIExpression()), !dbg !6339
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr, i64 %slice.1, !dbg !6339
  store { [0 x i8]*, i64 }* %18, { [0 x i8]*, i64 }** %end, align 8, !dbg !6339
  br label %bb8, !dbg !6339

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !6341

bb4:                                              ; preds = %bb7, %bb8
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %ptr.dbg.spill11, align 8, !dbg !6342
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill11, metadata !6343, metadata !DIExpression()), !dbg !6350
  %19 = bitcast i64** %_18 to { [0 x i8]*, i64 }**, !dbg !6350
  store { [0 x i8]*, i64 }* %ptr, { [0 x i8]*, i64 }** %19, align 8, !dbg !6350
  %_21 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %end, align 8, !dbg !6352
  %20 = bitcast { i64*, i64* }* %3 to i64**, !dbg !6353
  %21 = load i64*, i64** %_18, align 8, !dbg !6353, !nonnull !23, !noundef !23
  store i64* %21, i64** %20, align 8, !dbg !6353
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !6353
  %23 = bitcast i64** %22 to { [0 x i8]*, i64 }**, !dbg !6353
  store { [0 x i8]*, i64 }* %_21, { [0 x i8]*, i64 }** %23, align 8, !dbg !6353
  %24 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 0, !dbg !6354
  %25 = load i64*, i64** %24, align 8, !dbg !6354, !nonnull !23, !noundef !23
  %26 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !6354
  %27 = load i64*, i64** %26, align 8, !dbg !6354
  %28 = insertvalue { i64*, i64* } undef, i64* %25, 0, !dbg !6354
  %29 = insertvalue { i64*, i64* } %28, i64* %27, 1, !dbg !6354
  ret { i64*, i64* } %29, !dbg !6354

bb7:                                              ; preds = %bb2
  %30 = bitcast i8* %_10 to { [0 x i8]*, i64 }*, !dbg !6307
  store { [0 x i8]*, i64 }* %30, { [0 x i8]*, i64 }** %end, align 8, !dbg !6307
  br label %bb4, !dbg !6341
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7ac0c0a141adc480E"([0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* align 8 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !6355 {
start:
  %ptr.dbg.spill11 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %ptr.dbg.spill = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill = alloca { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i64*, align 8
  %end = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %3 = alloca { i64*, i64* }, align 8
  %4 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %slice.0, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** %4, align 8
  %5 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %slice.dbg.spill, metadata !6383, metadata !DIExpression()), !dbg !6388
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %end, metadata !6386, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !6390, metadata !DIExpression()), !dbg !6395
  %6 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6406
  store [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %slice.0, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** %6, align 8, !dbg !6406
  %7 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6406
  store i64 %slice.1, i64* %7, align 8, !dbg !6406
  call void @llvm.dbg.declare(metadata { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, metadata !6407, metadata !DIExpression()), !dbg !6413
  %ptr = bitcast [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %slice.0 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !6413
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill, align 8, !dbg !6413
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill, metadata !6384, metadata !DIExpression()), !dbg !6414
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill1, align 8, !dbg !6405
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill1, metadata !6403, metadata !DIExpression()), !dbg !6415
  %self = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr to i8*, !dbg !6415
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !6415
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !6416, metadata !DIExpression()), !dbg !6421
  %8 = bitcast {}** %2 to i64*, !dbg !6423
  store i64 0, i64* %8, align 8, !dbg !6423
  %data_address = load {}*, {}** %2, align 8, !dbg !6423
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6423
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6394, metadata !DIExpression()), !dbg !6395
  br label %bb5, !dbg !6423

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !6395
  store {}* %data_address, {}** %9, align 8, !dbg !6395
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !6395
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !6395
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !6395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6395
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !6395
  %other = load i8*, i8** %13, align 8, !dbg !6395
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !6395
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6420, metadata !DIExpression()), !dbg !6421
  %14 = icmp eq i8* %self, %other, !dbg !6421
  %15 = zext i1 %14 to i8, !dbg !6421
  store i8 %15, i8* %1, align 1, !dbg !6421
  %16 = load i8, i8* %1, align 1, !dbg !6421, !range !512, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !6421
  br label %bb6, !dbg !6421

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !6429
  call void @llvm.assume(i1 %_5), !dbg !6430
  br label %bb1, !dbg !6430

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !6431

bb2:                                              ; preds = %bb1
  %self6 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr to i8*, !dbg !6432
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !6432
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6433, metadata !DIExpression()), !dbg !6438
  store i64 %slice.1, i64* %count.dbg.spill8, align 8, !dbg !6439
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !6437, metadata !DIExpression()), !dbg !6438
  store i8* %self6, i8** %self.dbg.spill9, align 8, !dbg !6438
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !6440, metadata !DIExpression()), !dbg !6445
  store i64 %slice.1, i64* %count.dbg.spill10, align 8, !dbg !6438
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !6444, metadata !DIExpression()), !dbg !6445
  %17 = getelementptr i8, i8* %self6, i64 %slice.1, !dbg !6445
  store i8* %17, i8** %0, align 8, !dbg !6445
  %_10 = load i8*, i8** %0, align 8, !dbg !6445
  br label %bb7, !dbg !6445

bb3:                                              ; preds = %bb1
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill3, align 8, !dbg !6447
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill3, metadata !6448, metadata !DIExpression()), !dbg !6455
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !6456
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6454, metadata !DIExpression()), !dbg !6455
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill4, align 8, !dbg !6455
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill4, metadata !6457, metadata !DIExpression()), !dbg !6464
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !6455
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !6463, metadata !DIExpression()), !dbg !6464
  %18 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, i64 %slice.1, !dbg !6464
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %18, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %end, align 8, !dbg !6464
  br label %bb8, !dbg !6464

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !6466

bb4:                                              ; preds = %bb7, %bb8
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill11, align 8, !dbg !6467
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill11, metadata !6468, metadata !DIExpression()), !dbg !6475
  %19 = bitcast i64** %_18 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !6475
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %ptr, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %19, align 8, !dbg !6475
  %_21 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %end, align 8, !dbg !6477
  %20 = bitcast { i64*, i64* }* %3 to i64**, !dbg !6478
  %21 = load i64*, i64** %_18, align 8, !dbg !6478, !nonnull !23, !noundef !23
  store i64* %21, i64** %20, align 8, !dbg !6478
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !6478
  %23 = bitcast i64** %22 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !6478
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_21, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %23, align 8, !dbg !6478
  %24 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 0, !dbg !6479
  %25 = load i64*, i64** %24, align 8, !dbg !6479, !nonnull !23, !noundef !23
  %26 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %3, i32 0, i32 1, !dbg !6479
  %27 = load i64*, i64** %26, align 8, !dbg !6479
  %28 = insertvalue { i64*, i64* } undef, i64* %25, 0, !dbg !6479
  %29 = insertvalue { i64*, i64* } %28, i64* %27, 1, !dbg !6479
  ret { i64*, i64* } %29, !dbg !6479

bb7:                                              ; preds = %bb2
  %30 = bitcast i8* %_10 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !6432
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %30, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %end, align 8, !dbg !6432
  br label %bb4, !dbg !6466
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h95375ea80096db02E"([0 x i32]* align 4 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !6480 {
start:
  %ptr.dbg.spill11 = alloca i32*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i32*, align 8
  %end = alloca i32*, align 8
  %3 = alloca { i32*, i32* }, align 8
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i32]* %slice.0, [0 x i32]** %4, align 8
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !6502, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.declare(metadata i32** %end, metadata !6505, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !6509, metadata !DIExpression()), !dbg !6514
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6525
  store [0 x i32]* %slice.0, [0 x i32]** %6, align 8, !dbg !6525
  %7 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6525
  store i64 %slice.1, i64* %7, align 8, !dbg !6525
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !6526, metadata !DIExpression()), !dbg !6532
  %ptr = bitcast [0 x i32]* %slice.0 to i32*, !dbg !6532
  store i32* %ptr, i32** %ptr.dbg.spill, align 8, !dbg !6532
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !6503, metadata !DIExpression()), !dbg !6533
  store i32* %ptr, i32** %self.dbg.spill1, align 8, !dbg !6524
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !6522, metadata !DIExpression()), !dbg !6534
  %self = bitcast i32* %ptr to i8*, !dbg !6534
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !6534
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !6535, metadata !DIExpression()), !dbg !6540
  %8 = bitcast {}** %2 to i64*, !dbg !6542
  store i64 0, i64* %8, align 8, !dbg !6542
  %data_address = load {}*, {}** %2, align 8, !dbg !6542
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6542
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6513, metadata !DIExpression()), !dbg !6514
  br label %bb5, !dbg !6542

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !6514
  store {}* %data_address, {}** %9, align 8, !dbg !6514
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !6514
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !6514
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !6514
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !6514
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !6514
  %other = load i8*, i8** %13, align 8, !dbg !6514
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !6514
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !6539, metadata !DIExpression()), !dbg !6540
  %14 = icmp eq i8* %self, %other, !dbg !6540
  %15 = zext i1 %14 to i8, !dbg !6540
  store i8 %15, i8* %1, align 1, !dbg !6540
  %16 = load i8, i8* %1, align 1, !dbg !6540, !range !512, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !6540
  br label %bb6, !dbg !6540

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !6548
  call void @llvm.assume(i1 %_5), !dbg !6549
  br label %bb1, !dbg !6549

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !6550

bb2:                                              ; preds = %bb1
  %self6 = bitcast i32* %ptr to i8*, !dbg !6551
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !6551
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6552, metadata !DIExpression()), !dbg !6557
  store i64 %slice.1, i64* %count.dbg.spill8, align 8, !dbg !6558
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !6556, metadata !DIExpression()), !dbg !6557
  store i8* %self6, i8** %self.dbg.spill9, align 8, !dbg !6557
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !6559, metadata !DIExpression()), !dbg !6564
  store i64 %slice.1, i64* %count.dbg.spill10, align 8, !dbg !6557
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !6563, metadata !DIExpression()), !dbg !6564
  %17 = getelementptr i8, i8* %self6, i64 %slice.1, !dbg !6564
  store i8* %17, i8** %0, align 8, !dbg !6564
  %_10 = load i8*, i8** %0, align 8, !dbg !6564
  br label %bb7, !dbg !6564

bb3:                                              ; preds = %bb1
  store i32* %ptr, i32** %self.dbg.spill3, align 8, !dbg !6566
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !6567, metadata !DIExpression()), !dbg !6574
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !6575
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !6573, metadata !DIExpression()), !dbg !6574
  store i32* %ptr, i32** %self.dbg.spill4, align 8, !dbg !6574
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !6576, metadata !DIExpression()), !dbg !6583
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !6574
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !6582, metadata !DIExpression()), !dbg !6583
  %18 = getelementptr inbounds i32, i32* %ptr, i64 %slice.1, !dbg !6583
  store i32* %18, i32** %end, align 8, !dbg !6583
  br label %bb8, !dbg !6583

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !6585

bb4:                                              ; preds = %bb7, %bb8
  store i32* %ptr, i32** %ptr.dbg.spill11, align 8, !dbg !6586
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill11, metadata !6587, metadata !DIExpression()), !dbg !6594
  store i32* %ptr, i32** %_18, align 8, !dbg !6594
  %_21 = load i32*, i32** %end, align 8, !dbg !6596
  %19 = bitcast { i32*, i32* }* %3 to i32**, !dbg !6597
  %20 = load i32*, i32** %_18, align 8, !dbg !6597, !nonnull !23, !noundef !23
  store i32* %20, i32** %19, align 8, !dbg !6597
  %21 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 1, !dbg !6597
  store i32* %_21, i32** %21, align 8, !dbg !6597
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 0, !dbg !6598
  %23 = load i32*, i32** %22, align 8, !dbg !6598, !nonnull !23, !noundef !23
  %24 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 1, !dbg !6598
  %25 = load i32*, i32** %24, align 8, !dbg !6598
  %26 = insertvalue { i32*, i32* } undef, i32* %23, 0, !dbg !6598
  %27 = insertvalue { i32*, i32* } %26, i32* %25, 1, !dbg !6598
  ret { i32*, i32* } %27, !dbg !6598

bb7:                                              ; preds = %bb2
  %28 = bitcast i8* %_10 to i32*, !dbg !6551
  store i32* %28, i32** %end, align 8, !dbg !6551
  br label %bb4, !dbg !6585
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h95713962b8792772E"({ i8*, i8* }* align 8 %self) unnamed_addr #1 !dbg !6599 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill15 = alloca i8*, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %self.dbg.spill12 = alloca i64, align 8
  %1 = alloca i64, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %self.dbg.spill1 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_42 = alloca { i8*, i64 }, align 8
  %_41 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %len = alloca i64, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !6603, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.declare(metadata i64* %len, metadata !6605, metadata !DIExpression()), !dbg !6613
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill1, align 8, !dbg !6628
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill1, metadata !6617, metadata !DIExpression()), !dbg !6629
  %5 = bitcast { i8*, i8* }* %self to i8**, !dbg !6629
  %self2 = load i8*, i8** %5, align 8, !dbg !6629, !nonnull !23, !noundef !23
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !6629
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !6630, metadata !DIExpression()), !dbg !6634
  store i8* %self2, i8** %data.dbg.spill, align 8, !dbg !6629
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !6609, metadata !DIExpression()), !dbg !6613
  %6 = bitcast { i8*, i8* }* %self to i8**, !dbg !6629
  %start4 = load i8*, i8** %6, align 8, !dbg !6629, !nonnull !23, !noundef !23
  store i8* %start4, i8** %start.dbg.spill, align 8, !dbg !6629
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !6619, metadata !DIExpression()), !dbg !6636
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !6637
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !6622, metadata !DIExpression()), !dbg !6643
  br i1 false, label %bb1, label %bb2, !dbg !6643

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !6643
  %self9 = load i8*, i8** %7, align 8, !dbg !6643
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !6643
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !6644, metadata !DIExpression()), !dbg !6648
  %8 = bitcast i64* %1 to i8**, !dbg !6648
  store i8* %self9, i8** %8, align 8, !dbg !6648
  %self11 = load i64, i64* %1, align 8, !dbg !6648
  store i64 %self11, i64* %self.dbg.spill12, align 8, !dbg !6648
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill12, metadata !6650, metadata !DIExpression()), !dbg !6655
  br label %bb6, !dbg !6648

bb2:                                              ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !6643
  %self5 = load i8*, i8** %9, align 8, !dbg !6643
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !6643
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !6656, metadata !DIExpression()), !dbg !6660
  %10 = bitcast i64* %4 to i8**, !dbg !6660
  store i8* %self5, i8** %10, align 8, !dbg !6660
  %_17 = load i64, i64* %4, align 8, !dbg !6660
  br label %bb8, !dbg !6660

bb8:                                              ; preds = %bb2
  store i8* %start4, i8** %self.dbg.spill7, align 8, !dbg !6643
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !6662, metadata !DIExpression()), !dbg !6666
  store i8* %start4, i8** %self.dbg.spill8, align 8, !dbg !6666
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !6668, metadata !DIExpression()), !dbg !6672
  %11 = bitcast i64* %3 to i8**, !dbg !6672
  store i8* %start4, i8** %11, align 8, !dbg !6672
  %_19 = load i64, i64* %3, align 8, !dbg !6672
  br label %bb9, !dbg !6672

bb9:                                              ; preds = %bb8
  %12 = sub nuw i64 %_17, %_19, !dbg !6643
  store i64 %12, i64* %2, align 8, !dbg !6643
  %diff = load i64, i64* %2, align 8, !dbg !6643
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !6643
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !6625, metadata !DIExpression()), !dbg !6673
  br label %bb3, !dbg !6643

bb3:                                              ; preds = %bb9
  %13 = udiv exact i64 %diff, 1, !dbg !6673
  store i64 %13, i64* %len, align 8, !dbg !6673
  br label %bb4, !dbg !6673

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !6643

bb5:                                              ; preds = %bb7, %bb4
  store i8* %self2, i8** %data.dbg.spill15, align 8, !dbg !6613
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill15, metadata !6674, metadata !DIExpression()), !dbg !6679
  %len16 = load i64, i64* %len, align 8, !dbg !6613
  store i64 %len16, i64* %len.dbg.spill, align 8, !dbg !6613
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !6678, metadata !DIExpression()), !dbg !6679
  store i8* %self2, i8** %self.dbg.spill17, align 8, !dbg !6679
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !6681, metadata !DIExpression()), !dbg !6685
  %data_address = bitcast i8* %self2 to {}*, !dbg !6685
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !6685
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !6687, metadata !DIExpression()), !dbg !6692
  store i64 %len16, i64* %metadata.dbg.spill, align 8, !dbg !6679
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !6691, metadata !DIExpression()), !dbg !6692
  %14 = bitcast { i8*, i64 }* %_42 to {}**, !dbg !6692
  store {}* %data_address, {}** %14, align 8, !dbg !6692
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 1, !dbg !6692
  store i64 %len16, i64* %15, align 8, !dbg !6692
  %16 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_41 to { i8*, i64 }*, !dbg !6692
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 0, !dbg !6692
  %18 = load i8*, i8** %17, align 8, !dbg !6692
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_42, i32 0, i32 1, !dbg !6692
  %20 = load i64, i64* %19, align 8, !dbg !6692
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 0, !dbg !6692
  store i8* %18, i8** %21, align 8, !dbg !6692
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %16, i32 0, i32 1, !dbg !6692
  store i64 %20, i64* %22, align 8, !dbg !6692
  %23 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_41 to { [0 x i8]*, i64 }*, !dbg !6692
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 0, !dbg !6692
  %_34.0 = load [0 x i8]*, [0 x i8]** %24, align 8, !dbg !6692
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %23, i32 0, i32 1, !dbg !6692
  %_34.1 = load i64, i64* %25, align 8, !dbg !6692
  %26 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_34.0, 0, !dbg !6694
  %27 = insertvalue { [0 x i8]*, i64 } %26, i64 %_34.1, 1, !dbg !6694
  ret { [0 x i8]*, i64 } %27, !dbg !6694

bb6:                                              ; preds = %bb1
  store i8* %start4, i8** %self.dbg.spill13, align 8, !dbg !6643
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !6695, metadata !DIExpression()), !dbg !6699
  store i8* %start4, i8** %self.dbg.spill14, align 8, !dbg !6699
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !6701, metadata !DIExpression()), !dbg !6705
  %28 = bitcast i64* %0 to i8**, !dbg !6705
  store i8* %start4, i8** %28, align 8, !dbg !6705
  %rhs = load i64, i64* %0, align 8, !dbg !6705
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !6705
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !6654, metadata !DIExpression()), !dbg !6655
  br label %bb7, !dbg !6705

bb7:                                              ; preds = %bb6
  %29 = sub i64 %self11, %rhs, !dbg !6655
  store i64 %29, i64* %len, align 8, !dbg !6655
  br label %bb5, !dbg !6643
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h5182e53e41c67fe6E"([0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* align 8 %self.0, i64 %self.1) unnamed_addr #1 !dbg !6706 {
start:
  %self.dbg.spill1 = alloca { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %self.0, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** %0, align 8
  %1 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill, metadata !6709, metadata !DIExpression()), !dbg !6710
  %2 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !6711
  store [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* %self.0, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** %2, align 8, !dbg !6711
  %3 = getelementptr inbounds { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !6711
  store i64 %self.1, i64* %3, align 8, !dbg !6711
  call void @llvm.dbg.declare(metadata { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* %self.dbg.spill1, metadata !6712, metadata !DIExpression()), !dbg !6716
; call core::slice::iter::Iter<T>::new
  %4 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7ac0c0a141adc480E"([0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* align 8 %self.0, i64 %self.1), !dbg !6716
  %5 = extractvalue { i64*, i64* } %4, 0, !dbg !6716
  %6 = extractvalue { i64*, i64* } %4, 1, !dbg !6716
  br label %bb1, !dbg !6716

bb1:                                              ; preds = %start
  %7 = insertvalue { i64*, i64* } undef, i64* %5, 0, !dbg !6717
  %8 = insertvalue { i64*, i64* } %7, i64* %6, 1, !dbg !6717
  ret { i64*, i64* } %8, !dbg !6717
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define internal { i64*, i64* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h80661dbf99d720d9E"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1) unnamed_addr #1 !dbg !6718 {
start:
  %self.dbg.spill1 = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %self.0, [0 x { [0 x i8]*, i64 }]** %0, align 8
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !6720, metadata !DIExpression()), !dbg !6721
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !6722
  store [0 x { [0 x i8]*, i64 }]* %self.0, [0 x { [0 x i8]*, i64 }]** %2, align 8, !dbg !6722
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !6722
  store i64 %self.1, i64* %3, align 8, !dbg !6722
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, metadata !6723, metadata !DIExpression()), !dbg !6727
; call core::slice::iter::Iter<T>::new
  %4 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h31444a6cf065ff14E"([0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1), !dbg !6727
  %5 = extractvalue { i64*, i64* } %4, 0, !dbg !6727
  %6 = extractvalue { i64*, i64* } %4, 1, !dbg !6727
  br label %bb1, !dbg !6727

bb1:                                              ; preds = %start
  %7 = insertvalue { i64*, i64* } undef, i64* %5, 0, !dbg !6728
  %8 = insertvalue { i64*, i64* } %7, i64* %6, 1, !dbg !6728
  ret { i64*, i64* } %8, !dbg !6728
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5slice6memchr6memchr17h1a8f2df3e45c8f14E(i8 %0, [0 x i8]* align 1 %text.0, i64 %text.1) unnamed_addr #0 !dbg !6729 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %text.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_10 = alloca i8*, align 8
  %_8 = alloca { i8*, i8* }, align 8
  %1 = alloca { i64, i64 }, align 8
  %x = alloca i8, align 1
  store i8 %0, i8* %x, align 1
  call void @llvm.dbg.declare(metadata i8* %x, metadata !6735, metadata !DIExpression()), !dbg !6737
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %text.dbg.spill, i32 0, i32 0
  store [0 x i8]* %text.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %text.dbg.spill, i32 0, i32 1
  store i64 %text.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %text.dbg.spill, metadata !6736, metadata !DIExpression()), !dbg !6738
  %_3 = icmp ult i64 %text.1, 16, !dbg !6739
  br i1 %_3, label %bb1, label %bb3, !dbg !6739

bb3:                                              ; preds = %start
  %_12 = load i8, i8* %x, align 1, !dbg !6740
; call core::slice::memchr::memchr_general_case
  %4 = call { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h8d14ec4c11d8af08E(i8 %_12, [0 x i8]* align 1 %text.0, i64 %text.1), !dbg !6741
  store { i64, i64 } %4, { i64, i64 }* %1, align 8, !dbg !6741
  br label %bb4, !dbg !6741

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !6742
  store [0 x i8]* %text.0, [0 x i8]** %5, align 8, !dbg !6742
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !6742
  store i64 %text.1, i64* %6, align 8, !dbg !6742
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !6743, metadata !DIExpression()), !dbg !6747
; call core::slice::iter::Iter<T>::new
  %7 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h09fc45be399bae52E"([0 x i8]* align 1 %text.0, i64 %text.1), !dbg !6747
  store { i8*, i8* } %7, { i8*, i8* }* %_8, align 8, !dbg !6747
  br label %bb6, !dbg !6747

bb6:                                              ; preds = %bb1
  store i8* %x, i8** %_10, align 8, !dbg !6748
  %8 = load i8*, i8** %_10, align 8, !dbg !6742, !nonnull !23, !align !445, !noundef !23
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
  %9 = call { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h36f4baea55f29ac9E"({ i8*, i8* }* align 8 %_8, i8* align 1 %8), !dbg !6742
  store { i64, i64 } %9, { i64, i64 }* %1, align 8, !dbg !6742
  br label %bb2, !dbg !6742

bb2:                                              ; preds = %bb6
  br label %bb5, !dbg !6749

bb5:                                              ; preds = %bb4, %bb2
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !6749
  %11 = load i64, i64* %10, align 8, !dbg !6749, !range !3441, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !6749
  %13 = load i64, i64* %12, align 8, !dbg !6749
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !6749
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !6749
  ret { i64, i64 } %15, !dbg !6749

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !6749
}

; core::slice::memchr::memchr::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h7f548bbf06692784E"(i8** align 8 %_1, i8* align 1 %elt) unnamed_addr #0 !dbg !6750 {
start:
  %elt.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  %0 = load i8**, i8*** %_1.dbg.spill, align 8, !nonnull !23, !align !584, !noundef !23
  %1 = load i8*, i8** %0, align 8, !nonnull !23, !align !445, !noundef !23
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !6760, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !6761
  store i8* %elt, i8** %elt.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %elt.dbg.spill, metadata !6759, metadata !DIExpression()), !dbg !6762
  %_3 = load i8, i8* %elt, align 1, !dbg !6763
  %_5 = load i8*, i8** %_1, align 8, !dbg !6764, !nonnull !23, !align !445, !noundef !23
  %_4 = load i8, i8* %_5, align 1, !dbg !6764
  %2 = icmp eq i8 %_3, %_4, !dbg !6763
  ret i1 %2, !dbg !6765
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$3map17h3b6f6003e31e960bE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %0, i64* align 8 %1, i64* align 8 %f.0, i64* align 8 %f.1) unnamed_addr #0 !dbg !6766 {
start:
  %x.dbg.spill = alloca i64**, align 8
  %f.dbg.spill = alloca { i64*, i64* }, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca i64*, align 8
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %self = alloca i64*, align 8
  store i64* %1, i64** %self, align 8
  call void @llvm.dbg.declare(metadata i64** %self, metadata !6828, metadata !DIExpression()), !dbg !6835
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %f.dbg.spill, i32 0, i32 0
  store i64* %f.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %f.dbg.spill, i32 0, i32 1
  store i64* %f.1, i64** %3, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %f.dbg.spill, metadata !6829, metadata !DIExpression()), !dbg !6836
  store i8 1, i8* %_9, align 1, !dbg !6837
  %4 = bitcast i64** %self to {}**, !dbg !6837
  %5 = load {}*, {}** %4, align 8, !dbg !6837
  %6 = icmp eq {}* %5, null, !dbg !6837
  %_3 = select i1 %6, i64 0, i64 1, !dbg !6837
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6838

bb2:                                              ; preds = %start
  unreachable, !dbg !6837

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0, i32 0, i32 1, !dbg !6839
  store {}* null, {}** %7, align 8, !dbg !6839
  br label %bb7, !dbg !6839

bb3:                                              ; preds = %start
  %8 = bitcast i64** %self to i64***, !dbg !6840
  %x = load i64**, i64*** %8, align 8, !dbg !6840, !nonnull !23, !align !584, !noundef !23
  store i64** %x, i64*** %x.dbg.spill, align 8, !dbg !6840
  call void @llvm.dbg.declare(metadata i64*** %x.dbg.spill, metadata !6830, metadata !DIExpression()), !dbg !6841
  store i8 0, i8* %_9, align 1, !dbg !6842
  %9 = bitcast i64** %_7 to i64***, !dbg !6842
  store i64** %x, i64*** %9, align 8, !dbg !6842
  %10 = load i64*, i64** %_7, align 8, !dbg !6842, !nonnull !23, !align !584, !noundef !23
  %11 = bitcast i64* %10 to i64**, !dbg !6842
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend::{{closure}}
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend28_$u7b$$u7b$closure$u7d$$u7d$17hf3c8dba9ac9512d8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %_5, i64* align 8 %f.0, i64* align 8 %f.1, i64** align 8 %11), !dbg !6842
  br label %bb4, !dbg !6842

bb4:                                              ; preds = %bb3
  %12 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !6843
  %13 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %12 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !6843
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %13 to i8*, !dbg !6843
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*, !dbg !6843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !6843
  br label %bb7, !dbg !6844

bb7:                                              ; preds = %bb1, %bb4
  %16 = load i8, i8* %_9, align 1, !dbg !6845, !range !512, !noundef !23
  %17 = trunc i8 %16 to i1, !dbg !6845
  br i1 %17, label %bb6, label %bb5, !dbg !6845

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !6846

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6845
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h4f6218bb1bf4933aE"(i32 %0, i64* align 8 %f.0, i64* align 8 %f.1) unnamed_addr #0 !dbg !6847 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca { i64*, i64* }, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %1 = alloca { i64, i32 }, align 8
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  call void @llvm.dbg.declare(metadata i32* %self, metadata !6851, metadata !DIExpression()), !dbg !6858
  %2 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %f.dbg.spill, i32 0, i32 0
  store i64* %f.0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %f.dbg.spill, i32 0, i32 1
  store i64* %f.1, i64** %3, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %f.dbg.spill, metadata !6852, metadata !DIExpression()), !dbg !6859
  store i8 1, i8* %_9, align 1, !dbg !6860
  %4 = load i32, i32* %self, align 4, !dbg !6860, !range !582, !noundef !23
  %5 = sub i32 %4, 1114112, !dbg !6860
  %6 = icmp eq i32 %5, 0, !dbg !6860
  %_3 = select i1 %6, i64 0, i64 1, !dbg !6860
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6861

bb2:                                              ; preds = %start
  unreachable, !dbg !6860

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1, !dbg !6862
  store i32 1114112, i32* %7, align 8, !dbg !6862
  br label %bb7, !dbg !6862

bb3:                                              ; preds = %start
  %x = load i32, i32* %self, align 4, !dbg !6863, !range !667, !noundef !23
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !6863
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !6853, metadata !DIExpression()), !dbg !6864
  store i8 0, i8* %_9, align 1, !dbg !6865
  store i32 %x, i32* %_7, align 4, !dbg !6865
  %8 = load i32, i32* %_7, align 4, !dbg !6865, !range !667, !noundef !23
; call <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
  %9 = call { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h2f165d3b881e7820E"(i64* align 8 %f.0, i64* align 8 %f.1, i32 %8), !dbg !6865
  %_5.0 = extractvalue { i64, i32 } %9, 0, !dbg !6865
  %_5.1 = extractvalue { i64, i32 } %9, 1, !dbg !6865
  br label %bb4, !dbg !6865

bb4:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 0, !dbg !6866
  store i64 %_5.0, i64* %10, align 8, !dbg !6866
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1, !dbg !6866
  store i32 %_5.1, i32* %11, align 8, !dbg !6866
  br label %bb7, !dbg !6867

bb7:                                              ; preds = %bb1, %bb4
  %12 = load i8, i8* %_9, align 1, !dbg !6868, !range !512, !noundef !23
  %13 = trunc i8 %12 to i1, !dbg !6868
  br i1 %13, label %bb6, label %bb5, !dbg !6868

bb5:                                              ; preds = %bb6, %bb7
  %14 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 0, !dbg !6869
  %15 = load i64, i64* %14, align 8, !dbg !6869
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %1, i32 0, i32 1, !dbg !6869
  %17 = load i32, i32* %16, align 8, !dbg !6869, !range !582, !noundef !23
  %18 = insertvalue { i64, i32 } undef, i64 %15, 0, !dbg !6869
  %19 = insertvalue { i64, i32 } %18, i32 %17, 1, !dbg !6869
  ret { i64, i32 } %19, !dbg !6869

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6868
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core6option15Option$LT$T$GT$3map17h54d2ab215f40a2d9E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !6870 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !6876, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]"* %f.dbg.spill, metadata !6877, metadata !DIExpression()), !dbg !6884
  store i8 1, i8* %_9, align 1, !dbg !6885
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !6885
  %6 = load i32, i32* %5, align 4, !dbg !6885, !range !4194, !noundef !23
  %_3 = zext i32 %6 to i64, !dbg !6885
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6886

bb2:                                              ; preds = %start
  unreachable, !dbg !6885

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4, !dbg !6887
  br label %bb7, !dbg !6887

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !6888
  %x = load i32, i32* %7, align 4, !dbg !6888
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !6888
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !6878, metadata !DIExpression()), !dbg !6889
  store i8 0, i8* %_9, align 1, !dbg !6890
  store i32 %x, i32* %_7, align 4, !dbg !6890
  %8 = load i32, i32* %_7, align 4, !dbg !6890
; call <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
  %_5 = call i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h529587772334d22fE"(i32 %8), !dbg !6890, !range !667
  br label %bb4, !dbg !6890

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4, !dbg !6891
  br label %bb7, !dbg !6892

bb7:                                              ; preds = %bb1, %bb4
  %9 = load i8, i8* %_9, align 1, !dbg !6893, !range !512, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !6893
  br i1 %10, label %bb6, label %bb5, !dbg !6893

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i32, i32* %2, align 4, !dbg !6894, !range !582, !noundef !23
  ret i32 %11, !dbg !6894

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6893
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc747a901facfa698E"(i64* align 8 %0, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %f) unnamed_addr #0 !dbg !6895 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca i64*, align 8
  %1 = alloca { i8*, i64 }, align 8
  %self = alloca i64*, align 8
  store i64* %0, i64** %self, align 8
  call void @llvm.dbg.declare(metadata i64** %self, metadata !6923, metadata !DIExpression()), !dbg !6930
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %f, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %f.dbg.spill, metadata !6924, metadata !DIExpression()), !dbg !6931
  store i8 1, i8* %_9, align 1, !dbg !6932
  %2 = bitcast i64** %self to {}**, !dbg !6932
  %3 = load {}*, {}** %2, align 8, !dbg !6932
  %4 = icmp eq {}* %3, null, !dbg !6932
  %_3 = select i1 %4, i64 0, i64 1, !dbg !6932
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6933

bb2:                                              ; preds = %start
  unreachable, !dbg !6932

bb1:                                              ; preds = %start
  %5 = bitcast { i8*, i64 }* %1 to {}**, !dbg !6934
  store {}* null, {}** %5, align 8, !dbg !6934
  br label %bb7, !dbg !6934

bb3:                                              ; preds = %start
  %6 = bitcast i64** %self to { [0 x i8]*, i64 }**, !dbg !6935
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %6, align 8, !dbg !6935, !nonnull !23, !align !584, !noundef !23
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8, !dbg !6935
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !6925, metadata !DIExpression()), !dbg !6936
  store i8 0, i8* %_9, align 1, !dbg !6937
  %7 = bitcast i64** %_7 to { [0 x i8]*, i64 }**, !dbg !6937
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %7, align 8, !dbg !6937
  %8 = load i64*, i64** %_7, align 8, !dbg !6937, !nonnull !23, !align !584, !noundef !23
  %9 = bitcast i64* %8 to { [0 x i8]*, i64 }*, !dbg !6937
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %10 = call { [0 x i8]*, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h707c8e4717864377E"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %f, { [0 x i8]*, i64 }* align 8 %9), !dbg !6937
  %_5.0 = extractvalue { [0 x i8]*, i64 } %10, 0, !dbg !6937
  %_5.1 = extractvalue { [0 x i8]*, i64 } %10, 1, !dbg !6937
  br label %bb4, !dbg !6937

bb4:                                              ; preds = %bb3
  %11 = bitcast { i8*, i64 }* %1 to { [0 x i8]*, i64 }*, !dbg !6938
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !6938
  store [0 x i8]* %_5.0, [0 x i8]** %12, align 8, !dbg !6938
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !6938
  store i64 %_5.1, i64* %13, align 8, !dbg !6938
  br label %bb7, !dbg !6939

bb7:                                              ; preds = %bb1, %bb4
  %14 = load i8, i8* %_9, align 1, !dbg !6940, !range !512, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !6940
  br i1 %15, label %bb6, label %bb5, !dbg !6940

bb5:                                              ; preds = %bb6, %bb7
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !6941
  %17 = load i8*, i8** %16, align 8, !dbg !6941, !align !445
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !6941
  %19 = load i64, i64* %18, align 8, !dbg !6941
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0, !dbg !6941
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1, !dbg !6941
  ret { i8*, i64 } %21, !dbg !6941

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6940
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core6option15Option$LT$T$GT$3map17hd3cf823748f92406E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !6942 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !6949, metadata !DIExpression()), !dbg !6955
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %f.dbg.spill, metadata !6950, metadata !DIExpression()), !dbg !6956
  store i8 1, i8* %_9, align 1, !dbg !6957
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !6957
  %6 = load i32, i32* %5, align 4, !dbg !6957, !range !4194, !noundef !23
  %_3 = zext i32 %6 to i64, !dbg !6957
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6958

bb2:                                              ; preds = %start
  unreachable, !dbg !6957

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4, !dbg !6959
  br label %bb7, !dbg !6959

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !6960
  %x = load i32, i32* %7, align 4, !dbg !6960
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !6960
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !6951, metadata !DIExpression()), !dbg !6961
  store i8 0, i8* %_9, align 1, !dbg !6962
  store i32 %x, i32* %_7, align 4, !dbg !6962
  %8 = load i32, i32* %_7, align 4, !dbg !6962
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hda4272c37b6cef10E"(i32 %8), !dbg !6962, !range !667
  br label %bb4, !dbg !6962

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4, !dbg !6963
  br label %bb7, !dbg !6964

bb7:                                              ; preds = %bb1, %bb4
  %9 = load i8, i8* %_9, align 1, !dbg !6965, !range !512, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !6965
  br i1 %10, label %bb6, label %bb5, !dbg !6965

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i32, i32* %2, align 4, !dbg !6966, !range !582, !noundef !23
  ret i32 %11, !dbg !6966

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6965
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h6b3fe0e75b710255E"(%"core::result::Result<&str, usize>"* sret(%"core::result::Result<&str, usize>") %0, i8* align 1 %1, i64 %2, i64 %err) unnamed_addr #0 !dbg !6967 {
start:
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %err.dbg.spill = alloca i64, align 8
  %_7 = alloca i8, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !6985, metadata !DIExpression()), !dbg !6989
  store i64 %err, i64* %err.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %err.dbg.spill, metadata !6986, metadata !DIExpression()), !dbg !6990
  store i8 1, i8* %_7, align 1, !dbg !6991
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !6991
  %6 = load {}*, {}** %5, align 8, !dbg !6991
  %7 = icmp eq {}* %6, null, !dbg !6991
  %_3 = select i1 %7, i64 0, i64 1, !dbg !6991
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !6992

bb2:                                              ; preds = %start
  unreachable, !dbg !6991

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !6993
  %8 = bitcast %"core::result::Result<&str, usize>"* %0 to %"core::result::Result<&str, usize>::Err"*, !dbg !6994
  %9 = getelementptr inbounds %"core::result::Result<&str, usize>::Err", %"core::result::Result<&str, usize>::Err"* %8, i32 0, i32 1, !dbg !6994
  store i64 %err, i64* %9, align 8, !dbg !6994
  %10 = bitcast %"core::result::Result<&str, usize>"* %0 to i64*, !dbg !6994
  store i64 1, i64* %10, align 8, !dbg !6994
  br label %bb6, !dbg !6995

bb3:                                              ; preds = %start
  %11 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !6996
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !6996
  %v.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !6996, !nonnull !23, !align !445, !noundef !23
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !6996
  %v.1 = load i64, i64* %13, align 8, !dbg !6996
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !6996
  store [0 x i8]* %v.0, [0 x i8]** %14, align 8, !dbg !6996
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !6996
  store i64 %v.1, i64* %15, align 8, !dbg !6996
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !6987, metadata !DIExpression()), !dbg !6997
  %16 = bitcast %"core::result::Result<&str, usize>"* %0 to %"core::result::Result<&str, usize>::Ok"*, !dbg !6998
  %17 = getelementptr inbounds %"core::result::Result<&str, usize>::Ok", %"core::result::Result<&str, usize>::Ok"* %16, i32 0, i32 1, !dbg !6998
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !6998
  store [0 x i8]* %v.0, [0 x i8]** %18, align 8, !dbg !6998
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !6998
  store i64 %v.1, i64* %19, align 8, !dbg !6998
  %20 = bitcast %"core::result::Result<&str, usize>"* %0 to i64*, !dbg !6998
  store i64 0, i64* %20, align 8, !dbg !6998
  br label %bb6, !dbg !6999

bb6:                                              ; preds = %bb1, %bb3
  %21 = load i8, i8* %_7, align 1, !dbg !7000, !range !512, !noundef !23
  %22 = trunc i8 %21 to i1, !dbg !7000
  br i1 %22, label %bb5, label %bb4, !dbg !7000

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !7001

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7000
}

; core::option::Option<T>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6option15Option$LT$T$GT$6expect17h7993371ccbea4fd2E"(%"std::ffi::os_str::OsString"* sret(%"std::ffi::os_str::OsString") %val, %"core::option::Option<std::ffi::os_str::OsString>"* %self, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 !dbg !7002 {
start:
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8, !dbg !7010
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"* %val, metadata !7008, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::ffi::os_str::OsString>"* %self, metadata !7006, metadata !DIExpression()), !dbg !7011
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !7007, metadata !DIExpression()), !dbg !7012
  %3 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %self to {}**, !dbg !7013
  %4 = load {}*, {}** %3, align 8, !dbg !7013
  %5 = icmp eq {}* %4, null, !dbg !7013
  %_3 = select i1 %5, i64 0, i64 1, !dbg !7013
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7014

bb2:                                              ; preds = %start
  unreachable, !dbg !7013

bb1:                                              ; preds = %start
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17hfe812f345eb8521fE([0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %0) #15, !dbg !7015
  unreachable, !dbg !7015

bb3:                                              ; preds = %start
  %6 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %self to %"core::option::Option<std::ffi::os_str::OsString>::Some"*, !dbg !7016
  %7 = bitcast %"core::option::Option<std::ffi::os_str::OsString>::Some"* %6 to %"std::ffi::os_str::OsString"*, !dbg !7016
  %8 = bitcast %"std::ffi::os_str::OsString"* %val to i8*, !dbg !7016
  %9 = bitcast %"std::ffi::os_str::OsString"* %7 to i8*, !dbg !7016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !7016
  ret void, !dbg !7017
}

; core::option::Option<T>::map_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17hfbe3db815de80057E"(i8* align 1 %0, i64 %1, i1 zeroext %default) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7018 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %t.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:239:45: 239:50]", align 1
  %default.dbg.spill = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_7 = alloca { i8*, i64 }, align 8
  %3 = alloca i8, align 1
  %self = alloca { i8*, i64 }, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7025, metadata !DIExpression()), !dbg !7033
  %6 = zext i1 %default to i8
  store i8 %6, i8* %default.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %default.dbg.spill, metadata !7026, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:239:45: 239:50]"* %f.dbg.spill, metadata !7027, metadata !DIExpression()), !dbg !7035
  store i8 1, i8* %_10, align 1, !dbg !7036
  store i8 1, i8* %_9, align 1, !dbg !7036
  %7 = bitcast { i8*, i64 }* %self to {}**, !dbg !7036
  %8 = load {}*, {}** %7, align 8, !dbg !7036
  %9 = icmp eq {}* %8, null, !dbg !7036
  %_4 = select i1 %9, i64 0, i64 1, !dbg !7036
  switch i64 %_4, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7037

bb2:                                              ; preds = %start
  unreachable, !dbg !7036

bb1:                                              ; preds = %start
  store i8 0, i8* %_10, align 1, !dbg !7038
  %10 = zext i1 %default to i8, !dbg !7038
  store i8 %10, i8* %3, align 1, !dbg !7038
  br label %bb9, !dbg !7038

bb3:                                              ; preds = %start
  %11 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !7039
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !7039
  %t.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !7039, !nonnull !23, !align !445, !noundef !23
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !7039
  %t.1 = load i64, i64* %13, align 8, !dbg !7039
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !7039
  store [0 x i8]* %t.0, [0 x i8]** %14, align 8, !dbg !7039
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !7039
  store i64 %t.1, i64* %15, align 8, !dbg !7039
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %t.dbg.spill, metadata !7028, metadata !DIExpression()), !dbg !7040
  store i8 0, i8* %_9, align 1, !dbg !7041
  %16 = bitcast { i8*, i64 }* %_7 to { [0 x i8]*, i64 }*, !dbg !7041
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0, !dbg !7041
  store [0 x i8]* %t.0, [0 x i8]** %17, align 8, !dbg !7041
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1, !dbg !7041
  store i64 %t.1, i64* %18, align 8, !dbg !7041
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 0, !dbg !7041
  %20 = load i8*, i8** %19, align 8, !dbg !7041, !nonnull !23, !align !445, !noundef !23
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_7, i32 0, i32 1, !dbg !7041
  %22 = load i64, i64* %21, align 8, !dbg !7041
  %23 = bitcast i8* %20 to [0 x i8]*, !dbg !7041
; invoke build_script_build::rustc_minor_nightly::{{closure}}
  %24 = invoke zeroext i1 @"_ZN18build_script_build19rustc_minor_nightly28_$u7b$$u7b$closure$u7d$$u7d$17hec1514df9de4aa18E"([0 x i8]* align 1 %23, i64 %22)
          to label %bb4 unwind label %cleanup, !dbg !7041

bb12:                                             ; preds = %cleanup
  %25 = load i8, i8* %_10, align 1, !dbg !7042, !range !512, !noundef !23
  %26 = trunc i8 %25 to i1, !dbg !7042
  br i1 %26, label %bb11, label %bb7, !dbg !7042

cleanup:                                          ; preds = %bb3
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  %30 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %29, i32* %31, align 8
  br label %bb12

bb4:                                              ; preds = %bb3
  %32 = zext i1 %24 to i8, !dbg !7041
  store i8 %32, i8* %3, align 1, !dbg !7041
  br label %bb9, !dbg !7043

bb9:                                              ; preds = %bb1, %bb4
  %33 = load i8, i8* %_9, align 1, !dbg !7042, !range !512, !noundef !23
  %34 = trunc i8 %33 to i1, !dbg !7042
  br i1 %34, label %bb8, label %bb5, !dbg !7042

bb5:                                              ; preds = %bb8, %bb9
  %35 = load i8, i8* %_10, align 1, !dbg !7042, !range !512, !noundef !23
  %36 = trunc i8 %35 to i1, !dbg !7042
  br i1 %36, label %bb10, label %bb6, !dbg !7042

bb8:                                              ; preds = %bb9
  br label %bb5, !dbg !7042

bb7:                                              ; preds = %bb11, %bb12
  %37 = bitcast { i8*, i32 }* %2 to i8**, !dbg !7044
  %38 = load i8*, i8** %37, align 8, !dbg !7044
  %39 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !7044
  %40 = load i32, i32* %39, align 8, !dbg !7044
  %41 = insertvalue { i8*, i32 } undef, i8* %38, 0, !dbg !7044
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1, !dbg !7044
  resume { i8*, i32 } %42, !dbg !7044

bb11:                                             ; preds = %bb12
  br label %bb7, !dbg !7042

bb6:                                              ; preds = %bb10, %bb5
  %43 = load i8, i8* %3, align 1, !dbg !7045, !range !512, !noundef !23
  %44 = trunc i8 %43 to i1, !dbg !7045
  ret i1 %44, !dbg !7045

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !7042
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h5c7f1dae6f5ed549E"(i64 %0, i64 %1, i64* align 8 %f.0, i64 %f.1) unnamed_addr #0 !dbg !7046 {
start:
  %x.dbg.spill = alloca i64, align 8
  %f.dbg.spill = alloca { i64*, i64 }, align 8
  %_8 = alloca i8, align 1
  %_6 = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7053, metadata !DIExpression()), !dbg !7060
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %f.dbg.spill, i32 0, i32 0
  store i64* %f.0, i64** %5, align 8
  %6 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %f.dbg.spill, i32 0, i32 1
  store i64 %f.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %f.dbg.spill, metadata !7054, metadata !DIExpression()), !dbg !7061
  store i8 1, i8* %_8, align 1, !dbg !7062
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !7062
  %_3 = load i64, i64* %7, align 8, !dbg !7062, !range !3441, !noundef !23
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7063

bb2:                                              ; preds = %start
  unreachable, !dbg !7062

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !7064
  store i64 0, i64* %8, align 8, !dbg !7064
  br label %bb7, !dbg !7064

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7065
  %x = load i64, i64* %9, align 8, !dbg !7065
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !7065
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !7055, metadata !DIExpression()), !dbg !7066
  store i8 0, i8* %_8, align 1, !dbg !7067
  store i64 %x, i64* %_6, align 8, !dbg !7067
  %10 = load i64, i64* %_6, align 8, !dbg !7067
; call alloc::str::join_generic_copy::{{closure}}
  %11 = call { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hb06c30b16be46e74E"(i64* align 8 %f.0, i64 %f.1, i64 %10), !dbg !7067
  store { i64, i64 } %11, { i64, i64 }* %2, align 8, !dbg !7067
  br label %bb4, !dbg !7067

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !7068

bb7:                                              ; preds = %bb1, %bb4
  %12 = load i8, i8* %_8, align 1, !dbg !7069, !range !512, !noundef !23
  %13 = trunc i8 %12 to i1, !dbg !7069
  br i1 %13, label %bb6, label %bb5, !dbg !7069

bb5:                                              ; preds = %bb6, %bb7
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7070
  %15 = load i64, i64* %14, align 8, !dbg !7070, !range !3441, !noundef !23
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7070
  %17 = load i64, i64* %16, align 8, !dbg !7070
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0, !dbg !7070
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1, !dbg !7070
  ret { i64, i64 } %19, !dbg !7070

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7069
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h76b539b5430f215aE"(i8* align 1 %0, i64 %1) unnamed_addr #0 !dbg !7071 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:286:40: 286:43]", align 1
  %_8 = alloca i8, align 1
  %_6 = alloca { i8*, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7089, metadata !DIExpression()), !dbg !7096
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:286:40: 286:43]"* %f.dbg.spill, metadata !7090, metadata !DIExpression()), !dbg !7097
  store i8 1, i8* %_8, align 1, !dbg !7098
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7098
  %6 = load {}*, {}** %5, align 8, !dbg !7098
  %7 = icmp eq {}* %6, null, !dbg !7098
  %_3 = select i1 %7, i64 0, i64 1, !dbg !7098
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7099

bb2:                                              ; preds = %start
  unreachable, !dbg !7098

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !7100
  store i64 0, i64* %8, align 8, !dbg !7100
  br label %bb7, !dbg !7100

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !7101
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !7101
  %x.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !7101, !nonnull !23, !align !445, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !7101
  %x.1 = load i64, i64* %11, align 8, !dbg !7101
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !7101
  store [0 x i8]* %x.0, [0 x i8]** %12, align 8, !dbg !7101
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !7101
  store i64 %x.1, i64* %13, align 8, !dbg !7101
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !7091, metadata !DIExpression()), !dbg !7102
  store i8 0, i8* %_8, align 1, !dbg !7103
  %14 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !7103
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !7103
  store [0 x i8]* %x.0, [0 x i8]** %15, align 8, !dbg !7103
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !7103
  store i64 %x.1, i64* %16, align 8, !dbg !7103
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !7103
  %18 = load i8*, i8** %17, align 8, !dbg !7103, !nonnull !23, !align !445, !noundef !23
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !7103
  %20 = load i64, i64* %19, align 8, !dbg !7103
  %21 = bitcast i8* %18 to [0 x i8]*, !dbg !7103
; call build_script_build::emcc_version_code::{{closure}}
  %22 = call { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h929c6ddb3af8e2bfE"([0 x i8]* align 1 %21, i64 %20), !dbg !7103
  store { i64, i64 } %22, { i64, i64 }* %2, align 8, !dbg !7103
  br label %bb4, !dbg !7103

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !7104

bb7:                                              ; preds = %bb1, %bb4
  %23 = load i8, i8* %_8, align 1, !dbg !7105, !range !512, !noundef !23
  %24 = trunc i8 %23 to i1, !dbg !7105
  br i1 %24, label %bb6, label %bb5, !dbg !7105

bb5:                                              ; preds = %bb6, %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7106
  %26 = load i64, i64* %25, align 8, !dbg !7106, !range !3441, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7106
  %28 = load i64, i64* %27, align 8, !dbg !7106
  %29 = insertvalue { i64, i64 } undef, i64 %26, 0, !dbg !7106
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1, !dbg !7106
  ret { i64, i64 } %30, !dbg !7106

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7105
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h7746da4fdaf699a1E"(i8* align 1 %0, i64 %1) unnamed_addr #0 !dbg !7107 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:285:40: 285:43]", align 1
  %_8 = alloca i8, align 1
  %_6 = alloca { i8*, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7112, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:285:40: 285:43]"* %f.dbg.spill, metadata !7113, metadata !DIExpression()), !dbg !7119
  store i8 1, i8* %_8, align 1, !dbg !7120
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7120
  %6 = load {}*, {}** %5, align 8, !dbg !7120
  %7 = icmp eq {}* %6, null, !dbg !7120
  %_3 = select i1 %7, i64 0, i64 1, !dbg !7120
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7121

bb2:                                              ; preds = %start
  unreachable, !dbg !7120

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !7122
  store i64 0, i64* %8, align 8, !dbg !7122
  br label %bb7, !dbg !7122

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !7123
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !7123
  %x.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !7123, !nonnull !23, !align !445, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !7123
  %x.1 = load i64, i64* %11, align 8, !dbg !7123
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !7123
  store [0 x i8]* %x.0, [0 x i8]** %12, align 8, !dbg !7123
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !7123
  store i64 %x.1, i64* %13, align 8, !dbg !7123
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !7114, metadata !DIExpression()), !dbg !7124
  store i8 0, i8* %_8, align 1, !dbg !7125
  %14 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !7125
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !7125
  store [0 x i8]* %x.0, [0 x i8]** %15, align 8, !dbg !7125
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !7125
  store i64 %x.1, i64* %16, align 8, !dbg !7125
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !7125
  %18 = load i8*, i8** %17, align 8, !dbg !7125, !nonnull !23, !align !445, !noundef !23
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !7125
  %20 = load i64, i64* %19, align 8, !dbg !7125
  %21 = bitcast i8* %18 to [0 x i8]*, !dbg !7125
; call build_script_build::emcc_version_code::{{closure}}
  %22 = call { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17he794c5a67bef406fE"([0 x i8]* align 1 %21, i64 %20), !dbg !7125
  store { i64, i64 } %22, { i64, i64 }* %2, align 8, !dbg !7125
  br label %bb4, !dbg !7125

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !7126

bb7:                                              ; preds = %bb1, %bb4
  %23 = load i8, i8* %_8, align 1, !dbg !7127, !range !512, !noundef !23
  %24 = trunc i8 %23 to i1, !dbg !7127
  br i1 %24, label %bb6, label %bb5, !dbg !7127

bb5:                                              ; preds = %bb6, %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7128
  %26 = load i64, i64* %25, align 8, !dbg !7128, !range !3441, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7128
  %28 = load i64, i64* %27, align 8, !dbg !7128
  %29 = insertvalue { i64, i64 } undef, i64 %26, 0, !dbg !7128
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1, !dbg !7128
  ret { i64, i64 } %30, !dbg !7128

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7127
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hdee32727e12964cfE"(i8* align 1 %0, i64 %1) unnamed_addr #0 !dbg !7129 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:284:40: 284:43]", align 1
  %_8 = alloca i8, align 1
  %_6 = alloca { i8*, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7134, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:284:40: 284:43]"* %f.dbg.spill, metadata !7135, metadata !DIExpression()), !dbg !7141
  store i8 1, i8* %_8, align 1, !dbg !7142
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7142
  %6 = load {}*, {}** %5, align 8, !dbg !7142
  %7 = icmp eq {}* %6, null, !dbg !7142
  %_3 = select i1 %7, i64 0, i64 1, !dbg !7142
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7143

bb2:                                              ; preds = %start
  unreachable, !dbg !7142

bb1:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !7144
  store i64 0, i64* %8, align 8, !dbg !7144
  br label %bb7, !dbg !7144

bb3:                                              ; preds = %start
  %9 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !7145
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !7145
  %x.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !7145, !nonnull !23, !align !445, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !7145
  %x.1 = load i64, i64* %11, align 8, !dbg !7145
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !7145
  store [0 x i8]* %x.0, [0 x i8]** %12, align 8, !dbg !7145
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !7145
  store i64 %x.1, i64* %13, align 8, !dbg !7145
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !7136, metadata !DIExpression()), !dbg !7146
  store i8 0, i8* %_8, align 1, !dbg !7147
  %14 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !7147
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 0, !dbg !7147
  store [0 x i8]* %x.0, [0 x i8]** %15, align 8, !dbg !7147
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %14, i32 0, i32 1, !dbg !7147
  store i64 %x.1, i64* %16, align 8, !dbg !7147
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !7147
  %18 = load i8*, i8** %17, align 8, !dbg !7147, !nonnull !23, !align !445, !noundef !23
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !7147
  %20 = load i64, i64* %19, align 8, !dbg !7147
  %21 = bitcast i8* %18 to [0 x i8]*, !dbg !7147
; call build_script_build::emcc_version_code::{{closure}}
  %22 = call { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17hd3cda77f24883d13E"([0 x i8]* align 1 %21, i64 %20), !dbg !7147
  store { i64, i64 } %22, { i64, i64 }* %2, align 8, !dbg !7147
  br label %bb4, !dbg !7147

bb4:                                              ; preds = %bb3
  br label %bb7, !dbg !7148

bb7:                                              ; preds = %bb1, %bb4
  %23 = load i8, i8* %_8, align 1, !dbg !7149, !range !512, !noundef !23
  %24 = trunc i8 %23 to i1, !dbg !7149
  br i1 %24, label %bb6, label %bb5, !dbg !7149

bb5:                                              ; preds = %bb6, %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7150
  %26 = load i64, i64* %25, align 8, !dbg !7150, !range !3441, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7150
  %28 = load i64, i64* %27, align 8, !dbg !7150
  %29 = insertvalue { i64, i64 } undef, i64 %26, 0, !dbg !7150
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1, !dbg !7150
  ret { i64, i64 } %30, !dbg !7150

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7149
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h85f97c45e735c0d6E"(i32 %0, i32 %1, i32 %default) unnamed_addr #0 !dbg !7151 {
start:
  %x.dbg.spill = alloca i32, align 4
  %default.dbg.spill = alloca i32, align 4
  %_5 = alloca i8, align 1
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !7155, metadata !DIExpression()), !dbg !7159
  store i32 %default, i32* %default.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %default.dbg.spill, metadata !7156, metadata !DIExpression()), !dbg !7160
  store i8 1, i8* %_5, align 1, !dbg !7161
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !7161
  %6 = load i32, i32* %5, align 4, !dbg !7161, !range !4194, !noundef !23
  %_3 = zext i32 %6 to i64, !dbg !7161
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7162

bb2:                                              ; preds = %start
  unreachable, !dbg !7161

bb1:                                              ; preds = %start
  store i8 0, i8* %_5, align 1, !dbg !7163
  store i32 %default, i32* %2, align 4, !dbg !7163
  br label %bb6, !dbg !7163

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !7164
  %x = load i32, i32* %7, align 4, !dbg !7164
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !7164
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !7157, metadata !DIExpression()), !dbg !7165
  store i32 %x, i32* %2, align 4, !dbg !7166
  br label %bb6, !dbg !7167

bb6:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_5, align 1, !dbg !7168, !range !512, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !7168
  br i1 %9, label %bb5, label %bb4, !dbg !7168

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i32, i32* %2, align 4, !dbg !7169
  ret i32 %10, !dbg !7169

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7168
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hbd4e8fa013b1794aE"(i64 %0, i64 %1, i64 %default) unnamed_addr #0 !dbg !7170 {
start:
  %x.dbg.spill = alloca i64, align 8
  %default.dbg.spill = alloca i64, align 8
  %_5 = alloca i8, align 1
  %2 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7174, metadata !DIExpression()), !dbg !7178
  store i64 %default, i64* %default.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %default.dbg.spill, metadata !7175, metadata !DIExpression()), !dbg !7179
  store i8 1, i8* %_5, align 1, !dbg !7180
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !7180
  %_3 = load i64, i64* %5, align 8, !dbg !7180, !range !3441, !noundef !23
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !7181

bb2:                                              ; preds = %start
  unreachable, !dbg !7180

bb1:                                              ; preds = %start
  store i8 0, i8* %_5, align 1, !dbg !7182
  store i64 %default, i64* %2, align 8, !dbg !7182
  br label %bb6, !dbg !7182

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7183
  %x = load i64, i64* %6, align 8, !dbg !7183
  store i64 %x, i64* %x.dbg.spill, align 8, !dbg !7183
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill, metadata !7176, metadata !DIExpression()), !dbg !7184
  store i64 %x, i64* %2, align 8, !dbg !7185
  br label %bb6, !dbg !7186

bb6:                                              ; preds = %bb1, %bb3
  %7 = load i8, i8* %_5, align 1, !dbg !7187, !range !512, !noundef !23
  %8 = trunc i8 %7 to i1, !dbg !7187
  br i1 %8, label %bb5, label %bb4, !dbg !7187

bb4:                                              ; preds = %bb5, %bb6
  %9 = load i64, i64* %2, align 8, !dbg !7188
  ret i64 %9, !dbg !7188

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7187
}

; core::result::Result<T,E>::unwrap_or_default
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17h622dd751d82944c7E"(%"alloc::string::String"* sret(%"alloc::string::String") %0, %"core::result::Result<alloc::string::String, std::env::VarError>"* %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7189 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %x = alloca %"alloc::string::String", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::string::String, std::env::VarError>"* %self, metadata !7193, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %x, metadata !7194, metadata !DIExpression()), !dbg !7197
  %2 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %self to i64*, !dbg !7198
  %_2 = load i64, i64* %2, align 8, !dbg !7198, !range !3441, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7199

bb2:                                              ; preds = %start
  unreachable, !dbg !7198

bb3:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %self to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !7200
  %4 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %3, i32 0, i32 1, !dbg !7200
  %5 = bitcast %"alloc::string::String"* %x to i8*, !dbg !7200
  %6 = bitcast %"alloc::string::String"* %4 to i8*, !dbg !7200
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !7200
  %7 = bitcast %"alloc::string::String"* %0 to i8*, !dbg !7201
  %8 = bitcast %"alloc::string::String"* %x to i8*, !dbg !7201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !7201
  br label %bb7, !dbg !7202

bb1:                                              ; preds = %start
; invoke <alloc::string::String as core::default::Default>::default
  invoke void @"_ZN64_$LT$alloc..string..String$u20$as$u20$core..default..Default$GT$7default17h769a922eb9f1dd50E"(%"alloc::string::String"* sret(%"alloc::string::String") %0)
          to label %bb10 unwind label %cleanup, !dbg !7203

bb9:                                              ; preds = %cleanup
  %9 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %self to i64*, !dbg !7204
  %_5 = load i64, i64* %9, align 8, !dbg !7204, !range !3441, !noundef !23
  %10 = icmp eq i64 %_5, 0, !dbg !7204
  br i1 %10, label %bb4, label %bb8, !dbg !7204

cleanup:                                          ; preds = %bb1
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb9

bb10:                                             ; preds = %bb1
  br label %bb7, !dbg !7203

bb4:                                              ; preds = %bb8, %bb9
  %16 = bitcast { i8*, i32 }* %1 to i8**, !dbg !7205
  %17 = load i8*, i8** %16, align 8, !dbg !7205
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !7205
  %19 = load i32, i32* %18, align 8, !dbg !7205
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !7205
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !7205
  resume { i8*, i32 } %21, !dbg !7205

bb8:                                              ; preds = %bb9
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %self) #16
          to label %bb4 unwind label %abort, !dbg !7204

abort:                                            ; preds = %bb8
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !7205
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !7205
  unreachable, !dbg !7205

bb7:                                              ; preds = %bb3, %bb10
  %23 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %self to i64*, !dbg !7204
  %_4 = load i64, i64* %23, align 8, !dbg !7204, !range !3441, !noundef !23
  %24 = icmp eq i64 %_4, 0, !dbg !7204
  br i1 %24, label %bb5, label %bb6, !dbg !7204

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7206

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %self), !dbg !7204
  br label %bb5, !dbg !7204
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h03881c7d0850af22E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* %self) unnamed_addr #0 !dbg !7207 {
start:
  %x.dbg.spill2 = alloca i64, align 8
  %x.dbg.spill = alloca i8, align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<u64, core::num::error::ParseIntError>"* %self, metadata !7211, metadata !DIExpression()), !dbg !7216
  %1 = bitcast %"core::result::Result<u64, core::num::error::ParseIntError>"* %self to i8*, !dbg !7217
  %2 = load i8, i8* %1, align 8, !dbg !7217, !range !512, !noundef !23
  %3 = trunc i8 %2 to i1, !dbg !7217
  %_2 = zext i1 %3 to i64, !dbg !7217
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7218

bb2:                                              ; preds = %start
  unreachable, !dbg !7217

bb3:                                              ; preds = %start
  %4 = bitcast %"core::result::Result<u64, core::num::error::ParseIntError>"* %self to %"core::result::Result<u64, core::num::error::ParseIntError>::Ok"*, !dbg !7219
  %5 = getelementptr inbounds %"core::result::Result<u64, core::num::error::ParseIntError>::Ok", %"core::result::Result<u64, core::num::error::ParseIntError>::Ok"* %4, i32 0, i32 1, !dbg !7219
  %x1 = load i64, i64* %5, align 8, !dbg !7219
  store i64 %x1, i64* %x.dbg.spill2, align 8, !dbg !7219
  call void @llvm.dbg.declare(metadata i64* %x.dbg.spill2, metadata !7212, metadata !DIExpression()), !dbg !7220
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !7221
  store i64 %x1, i64* %6, align 8, !dbg !7221
  %7 = bitcast { i64, i64 }* %0 to i64*, !dbg !7221
  store i64 1, i64* %7, align 8, !dbg !7221
  br label %bb5, !dbg !7222

bb1:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<u64, core::num::error::ParseIntError>"* %self to %"core::result::Result<u64, core::num::error::ParseIntError>::Err"*, !dbg !7223
  %9 = getelementptr inbounds %"core::result::Result<u64, core::num::error::ParseIntError>::Err", %"core::result::Result<u64, core::num::error::ParseIntError>::Err"* %8, i32 0, i32 1, !dbg !7223
  %x = load i8, i8* %9, align 1, !dbg !7223, !range !7224, !noundef !23
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !7223
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !7214, metadata !DIExpression()), !dbg !7225
  %10 = bitcast { i64, i64 }* %0 to i64*, !dbg !7226
  store i64 0, i64* %10, align 8, !dbg !7226
  br label %bb4, !dbg !7227

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7227

bb5:                                              ; preds = %bb3, %bb4
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !7228
  %12 = load i64, i64* %11, align 8, !dbg !7228, !range !3441, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !7228
  %14 = load i64, i64* %13, align 8, !dbg !7228
  %15 = insertvalue { i64, i64 } undef, i64 %12, 0, !dbg !7228
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !7228
  ret { i64, i64 } %16, !dbg !7228
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h0c6429ce610f4340E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %0, %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self) unnamed_addr #0 !dbg !7229 {
start:
  %x1 = alloca %"alloc::string::FromUtf8Error", align 8
  %_4 = alloca %"alloc::string::String", align 8
  %x = alloca %"alloc::string::String", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self, metadata !7259, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %x, metadata !7260, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.declare(metadata %"alloc::string::FromUtf8Error"* %x1, metadata !7262, metadata !DIExpression()), !dbg !7266
  %1 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self to i64*, !dbg !7267
  %_2 = load i64, i64* %1, align 8, !dbg !7267, !range !3441, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7268

bb2:                                              ; preds = %start
  unreachable, !dbg !7267

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self to %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok"*, !dbg !7269
  %3 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok", %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok"* %2, i32 0, i32 1, !dbg !7269
  %4 = bitcast %"alloc::string::String"* %x to i8*, !dbg !7269
  %5 = bitcast %"alloc::string::String"* %3 to i8*, !dbg !7269
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !7269
  %6 = bitcast %"alloc::string::String"* %_4 to i8*, !dbg !7270
  %7 = bitcast %"alloc::string::String"* %x to i8*, !dbg !7270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !7270
  %8 = bitcast %"core::option::Option<alloc::string::String>"* %0 to %"core::option::Option<alloc::string::String>::Some"*, !dbg !7271
  %9 = bitcast %"core::option::Option<alloc::string::String>::Some"* %8 to %"alloc::string::String"*, !dbg !7271
  %10 = bitcast %"alloc::string::String"* %9 to i8*, !dbg !7271
  %11 = bitcast %"alloc::string::String"* %_4 to i8*, !dbg !7271
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !7271
  br label %bb5, !dbg !7272

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %self to %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err"*, !dbg !7273
  %13 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err", %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err"* %12, i32 0, i32 1, !dbg !7273
  %14 = bitcast %"alloc::string::FromUtf8Error"* %x1 to i8*, !dbg !7273
  %15 = bitcast %"alloc::string::FromUtf8Error"* %13 to i8*, !dbg !7273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false), !dbg !7273
  %16 = bitcast %"core::option::Option<alloc::string::String>"* %0 to {}**, !dbg !7274
  store {}* null, {}** %16, align 8, !dbg !7274
; call core::ptr::drop_in_place<alloc::string::FromUtf8Error>
  call void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17hd8c00ca92f8a6ec7E"(%"alloc::string::FromUtf8Error"* %x1), !dbg !7275
  br label %bb4, !dbg !7275

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7275

bb5:                                              ; preds = %bb3, %bb4
  ret void, !dbg !7276
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h2c74aa5141d8442dE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %self) unnamed_addr #0 !dbg !7277 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %x = alloca %"core::str::error::Utf8Error", align 8
  %0 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<&str, core::str::error::Utf8Error>"* %self, metadata !7296, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.declare(metadata %"core::str::error::Utf8Error"* %x, metadata !7299, metadata !DIExpression()), !dbg !7302
  %1 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to i64*, !dbg !7303
  %_2 = load i64, i64* %1, align 8, !dbg !7303, !range !3441, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7304

bb2:                                              ; preds = %start
  unreachable, !dbg !7303

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"*, !dbg !7305
  %3 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Ok", %"core::result::Result<&str, core::str::error::Utf8Error>::Ok"* %2, i32 0, i32 1, !dbg !7305
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !7305
  %x.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !dbg !7305, !nonnull !23, !align !445, !noundef !23
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !7305
  %x.1 = load i64, i64* %5, align 8, !dbg !7305
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0, !dbg !7305
  store [0 x i8]* %x.0, [0 x i8]** %6, align 8, !dbg !7305
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1, !dbg !7305
  store i64 %x.1, i64* %7, align 8, !dbg !7305
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !7297, metadata !DIExpression()), !dbg !7306
  %8 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !7307
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 0, !dbg !7307
  store [0 x i8]* %x.0, [0 x i8]** %9, align 8, !dbg !7307
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %8, i32 0, i32 1, !dbg !7307
  store i64 %x.1, i64* %10, align 8, !dbg !7307
  br label %bb5, !dbg !7308

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %self to %"core::result::Result<&str, core::str::error::Utf8Error>::Err"*, !dbg !7309
  %12 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", %"core::result::Result<&str, core::str::error::Utf8Error>::Err"* %11, i32 0, i32 1, !dbg !7309
  %13 = bitcast %"core::str::error::Utf8Error"* %x to i8*, !dbg !7309
  %14 = bitcast %"core::str::error::Utf8Error"* %12 to i8*, !dbg !7309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false), !dbg !7309
  %15 = bitcast { i8*, i64 }* %0 to {}**, !dbg !7310
  store {}* null, {}** %15, align 8, !dbg !7310
  br label %bb4, !dbg !7311

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7311

bb5:                                              ; preds = %bb3, %bb4
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !7312
  %17 = load i8*, i8** %16, align 8, !dbg !7312, !align !445
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !7312
  %19 = load i64, i64* %18, align 8, !dbg !7312
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0, !dbg !7312
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1, !dbg !7312
  ret { i8*, i64 } %21, !dbg !7312
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h876130cb320f98ebE"(i64 %0) unnamed_addr #0 !dbg !7313 {
start:
  %x.dbg.spill2 = alloca i32, align 4
  %x.dbg.spill = alloca i8, align 1
  %1 = alloca { i32, i32 }, align 4
  %2 = alloca i64, align 8
  %self = alloca %"core::result::Result<u32, core::num::error::ParseIntError>", align 4
  store i64 %0, i64* %2, align 8
  %3 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  call void @llvm.dbg.declare(metadata %"core::result::Result<u32, core::num::error::ParseIntError>"* %self, metadata !7317, metadata !DIExpression()), !dbg !7322
  %5 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to i8*, !dbg !7323
  %6 = load i8, i8* %5, align 4, !dbg !7323, !range !512, !noundef !23
  %7 = trunc i8 %6 to i1, !dbg !7323
  %_2 = zext i1 %7 to i64, !dbg !7323
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7324

bb2:                                              ; preds = %start
  unreachable, !dbg !7323

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to %"core::result::Result<u32, core::num::error::ParseIntError>::Ok"*, !dbg !7325
  %9 = getelementptr inbounds %"core::result::Result<u32, core::num::error::ParseIntError>::Ok", %"core::result::Result<u32, core::num::error::ParseIntError>::Ok"* %8, i32 0, i32 1, !dbg !7325
  %x1 = load i32, i32* %9, align 4, !dbg !7325
  store i32 %x1, i32* %x.dbg.spill2, align 4, !dbg !7325
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill2, metadata !7318, metadata !DIExpression()), !dbg !7326
  %10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !7327
  store i32 %x1, i32* %10, align 4, !dbg !7327
  %11 = bitcast { i32, i32 }* %1 to i32*, !dbg !7327
  store i32 1, i32* %11, align 4, !dbg !7327
  br label %bb5, !dbg !7328

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %self to %"core::result::Result<u32, core::num::error::ParseIntError>::Err"*, !dbg !7329
  %13 = getelementptr inbounds %"core::result::Result<u32, core::num::error::ParseIntError>::Err", %"core::result::Result<u32, core::num::error::ParseIntError>::Err"* %12, i32 0, i32 1, !dbg !7329
  %x = load i8, i8* %13, align 1, !dbg !7329, !range !7224, !noundef !23
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !7329
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !7320, metadata !DIExpression()), !dbg !7330
  %14 = bitcast { i32, i32 }* %1 to i32*, !dbg !7331
  store i32 0, i32* %14, align 4, !dbg !7331
  br label %bb4, !dbg !7332

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7332

bb5:                                              ; preds = %bb3, %bb4
  %15 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0, !dbg !7333
  %16 = load i32, i32* %15, align 4, !dbg !7333, !range !4194, !noundef !23
  %17 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !7333
  %18 = load i32, i32* %17, align 4, !dbg !7333
  %19 = insertvalue { i32, i32 } undef, i32 %16, 0, !dbg !7333
  %20 = insertvalue { i32, i32 } %19, i32 %18, 1, !dbg !7333
  ret { i32, i32 } %20, !dbg !7333
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h9fdab479f3bb0927E"(%"core::option::Option<std::process::Output>"* sret(%"core::option::Option<std::process::Output>") %0, %"core::result::Result<std::process::Output, std::io::error::Error>"* %self) unnamed_addr #0 !dbg !7334 {
start:
  %x1 = alloca i8*, align 8
  %_4 = alloca %"std::process::Output", align 8
  %x = alloca %"std::process::Output", align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<std::process::Output, std::io::error::Error>"* %self, metadata !7364, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %x, metadata !7365, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.declare(metadata i8** %x1, metadata !7367, metadata !DIExpression()), !dbg !7371
  %1 = bitcast %"core::result::Result<std::process::Output, std::io::error::Error>"* %self to i64*, !dbg !7372
  %_2 = load i64, i64* %1, align 8, !dbg !7372, !range !3441, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7373

bb2:                                              ; preds = %start
  unreachable, !dbg !7372

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<std::process::Output, std::io::error::Error>"* %self to %"core::result::Result<std::process::Output, std::io::error::Error>::Ok"*, !dbg !7374
  %3 = getelementptr inbounds %"core::result::Result<std::process::Output, std::io::error::Error>::Ok", %"core::result::Result<std::process::Output, std::io::error::Error>::Ok"* %2, i32 0, i32 1, !dbg !7374
  %4 = bitcast %"std::process::Output"* %x to i8*, !dbg !7374
  %5 = bitcast %"std::process::Output"* %3 to i8*, !dbg !7374
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 56, i1 false), !dbg !7374
  %6 = bitcast %"std::process::Output"* %_4 to i8*, !dbg !7375
  %7 = bitcast %"std::process::Output"* %x to i8*, !dbg !7375
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 56, i1 false), !dbg !7375
  %8 = bitcast %"core::option::Option<std::process::Output>"* %0 to %"core::option::Option<std::process::Output>::Some"*, !dbg !7376
  %9 = bitcast %"core::option::Option<std::process::Output>::Some"* %8 to %"std::process::Output"*, !dbg !7376
  %10 = bitcast %"std::process::Output"* %9 to i8*, !dbg !7376
  %11 = bitcast %"std::process::Output"* %_4 to i8*, !dbg !7376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 56, i1 false), !dbg !7376
  br label %bb5, !dbg !7377

bb1:                                              ; preds = %start
  %12 = bitcast %"core::result::Result<std::process::Output, std::io::error::Error>"* %self to %"core::result::Result<std::process::Output, std::io::error::Error>::Err"*, !dbg !7378
  %13 = getelementptr inbounds %"core::result::Result<std::process::Output, std::io::error::Error>::Err", %"core::result::Result<std::process::Output, std::io::error::Error>::Err"* %12, i32 0, i32 1, !dbg !7378
  %14 = load i8*, i8** %13, align 8, !dbg !7378, !nonnull !23, !noundef !23
  store i8* %14, i8** %x1, align 8, !dbg !7378
  %15 = bitcast %"core::option::Option<std::process::Output>"* %0 to {}**, !dbg !7379
  store {}* null, {}** %15, align 8, !dbg !7379
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hb5924639660c528dE"(i8** %x1), !dbg !7380
  br label %bb4, !dbg !7380

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !7380

bb5:                                              ; preds = %bb3, %bb4
  ret void, !dbg !7381
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h9da37263fe3ff58fE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %self) unnamed_addr #0 !dbg !7382 {
start:
  %self.dbg.spill = alloca %"core::result::Result<alloc::string::String, std::env::VarError>"*, align 8
  %0 = alloca i8, align 1
  store %"core::result::Result<alloc::string::String, std::env::VarError>"* %self, %"core::result::Result<alloc::string::String, std::env::VarError>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::string::String, std::env::VarError>"** %self.dbg.spill, metadata !7387, metadata !DIExpression()), !dbg !7388
  %1 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %self to i64*, !dbg !7389
  %_2 = load i64, i64* %1, align 8, !dbg !7389, !range !3441, !noundef !23
  %2 = icmp eq i64 %_2, 0, !dbg !7390
  br i1 %2, label %bb2, label %bb1, !dbg !7390

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !7390
  br label %bb3, !dbg !7390

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !7390
  br label %bb3, !dbg !7390

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, i8* %0, align 1, !dbg !7391, !range !512, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !7391
  ret i1 %4, !dbg !7391
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9a2e106caa59c20fE"(%"std::process::Output"* sret(%"std::process::Output") %t, %"core::result::Result<std::process::Output, std::io::error::Error>"* %self, [0 x i8]* align 1 %msg.0, i64 %msg.1, %"core::panic::location::Location"* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7392 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %t, metadata !7398, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.declare(metadata %"core::result::Result<std::process::Output, std::io::error::Error>"* %self, metadata !7396, metadata !DIExpression()), !dbg !7403
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !7397, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.declare(metadata i8** %e, metadata !7400, metadata !DIExpression()), !dbg !7405
  %4 = bitcast %"core::result::Result<std::process::Output, std::io::error::Error>"* %self to i64*, !dbg !7406
  %_3 = load i64, i64* %4, align 8, !dbg !7406, !range !3441, !noundef !23
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7407

bb2:                                              ; preds = %start
  unreachable, !dbg !7406

bb3:                                              ; preds = %start
  %5 = bitcast %"core::result::Result<std::process::Output, std::io::error::Error>"* %self to %"core::result::Result<std::process::Output, std::io::error::Error>::Ok"*, !dbg !7408
  %6 = getelementptr inbounds %"core::result::Result<std::process::Output, std::io::error::Error>::Ok", %"core::result::Result<std::process::Output, std::io::error::Error>::Ok"* %5, i32 0, i32 1, !dbg !7408
  %7 = bitcast %"std::process::Output"* %t to i8*, !dbg !7408
  %8 = bitcast %"std::process::Output"* %6 to i8*, !dbg !7408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 56, i1 false), !dbg !7408
  ret void, !dbg !7409

bb1:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<std::process::Output, std::io::error::Error>"* %self to %"core::result::Result<std::process::Output, std::io::error::Error>::Err"*, !dbg !7410
  %10 = getelementptr inbounds %"core::result::Result<std::process::Output, std::io::error::Error>::Err", %"core::result::Result<std::process::Output, std::io::error::Error>::Err"* %9, i32 0, i32 1, !dbg !7410
  %11 = load i8*, i8** %10, align 8, !dbg !7410, !nonnull !23, !noundef !23
  store i8* %11, i8** %e, align 8, !dbg !7410
  %_7.0 = bitcast i8** %e to {}*, !dbg !7411
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 %msg.0, i64 %msg.1, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.1 to [3 x i64]*), %"core::panic::location::Location"* align 8 %0) #15
          to label %unreachable unwind label %cleanup, !dbg !7412

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hb5924639660c528dE"(i8** %e) #16
          to label %bb5 unwind label %abort, !dbg !7413

cleanup:                                          ; preds = %bb1
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

abort:                                            ; preds = %bb4
  %17 = landingpad { i8*, i32 }
          cleanup, !dbg !7414
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !7414
  unreachable, !dbg !7414

bb5:                                              ; preds = %bb4
  %18 = bitcast { i8*, i32 }* %1 to i8**, !dbg !7414
  %19 = load i8*, i8** %18, align 8, !dbg !7414
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !7414
  %21 = load i32, i32* %20, align 8, !dbg !7414
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !7414
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !7414
  resume { i8*, i32 } %23, !dbg !7414
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h61fe4ee0445d998bE"(i64 %0, %"core::panic::location::Location"* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7415 {
start:
  %t.dbg.spill = alloca i32, align 4
  %2 = alloca { i8*, i32 }, align 8
  %e = alloca i8, align 1
  %3 = alloca i64, align 8
  %self = alloca %"core::result::Result<i32, core::num::error::ParseIntError>", align 4
  store i64 %0, i64* %3, align 8
  %4 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to i8*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %5, i64 8, i1 false)
  call void @llvm.dbg.declare(metadata %"core::result::Result<i32, core::num::error::ParseIntError>"* %self, metadata !7419, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.declare(metadata i8* %e, metadata !7422, metadata !DIExpression()), !dbg !7425
  %6 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to i8*, !dbg !7426
  %7 = load i8, i8* %6, align 4, !dbg !7426, !range !512, !noundef !23
  %8 = trunc i8 %7 to i1, !dbg !7426
  %_2 = zext i1 %8 to i64, !dbg !7426
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7427

bb2:                                              ; preds = %start
  unreachable, !dbg !7426

bb3:                                              ; preds = %start
  %9 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to %"core::result::Result<i32, core::num::error::ParseIntError>::Ok"*, !dbg !7428
  %10 = getelementptr inbounds %"core::result::Result<i32, core::num::error::ParseIntError>::Ok", %"core::result::Result<i32, core::num::error::ParseIntError>::Ok"* %9, i32 0, i32 1, !dbg !7428
  %t = load i32, i32* %10, align 4, !dbg !7428
  store i32 %t, i32* %t.dbg.spill, align 4, !dbg !7428
  call void @llvm.dbg.declare(metadata i32* %t.dbg.spill, metadata !7420, metadata !DIExpression()), !dbg !7429
  ret i32 %t, !dbg !7430

bb1:                                              ; preds = %start
  %11 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %self to %"core::result::Result<i32, core::num::error::ParseIntError>::Err"*, !dbg !7431
  %12 = getelementptr inbounds %"core::result::Result<i32, core::num::error::ParseIntError>::Err", %"core::result::Result<i32, core::num::error::ParseIntError>::Err"* %11, i32 0, i32 1, !dbg !7431
  %13 = load i8, i8* %12, align 1, !dbg !7431, !range !7224, !noundef !23
  store i8 %13, i8* %e, align 1, !dbg !7431
  %_7.0 = bitcast i8* %e to {}*, !dbg !7432
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc533 to [0 x i8]*), i64 43, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), %"core::panic::location::Location"* align 8 %1) #15
          to label %unreachable unwind label %cleanup, !dbg !7433

bb4:                                              ; preds = %cleanup
  br label %bb5, !dbg !7434

cleanup:                                          ; preds = %bb1
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %16, i32* %18, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb5:                                              ; preds = %bb4
  %19 = bitcast { i8*, i32 }* %2 to i8**, !dbg !7435
  %20 = load i8*, i8** %19, align 8, !dbg !7435
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !7435
  %22 = load i32, i32* %21, align 8, !dbg !7435
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0, !dbg !7435
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1, !dbg !7435
  resume { i8*, i32 } %24, !dbg !7435
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h332add955f1124a8E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !7436 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7457, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !7458, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !7461, metadata !DIExpression()), !dbg !7468
  store i8 1, i8* %_11, align 1, !dbg !7469
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7469
  %6 = load i64, i64* %5, align 8, !dbg !7469, !range !1795, !noundef !23
  %7 = icmp eq i64 %6, 0, !dbg !7469
  %_3 = select i1 %7, i64 1, i64 0, !dbg !7469
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7470

bb2:                                              ; preds = %start
  unreachable, !dbg !7469

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !7471
  %t.0 = load i64, i64* %8, align 8, !dbg !7471
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7471
  %t.1 = load i64, i64* %9, align 8, !dbg !7471, !range !5559, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !7471
  store i64 %t.0, i64* %10, align 8, !dbg !7471
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !7471
  store i64 %t.1, i64* %11, align 8, !dbg !7471
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !7459, metadata !DIExpression()), !dbg !7472
  %12 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !7473
  %13 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !7473
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !7473
  store i64 %t.0, i64* %14, align 8, !dbg !7473
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !7473
  store i64 %t.1, i64* %15, align 8, !dbg !7473
  %16 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !7473
  store i64 0, i64* %16, align 8, !dbg !7473
  br label %bb7, !dbg !7474

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !7475
  %17 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*, !dbg !7475
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h07e7c4c910121c76E"(), !dbg !7475
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !7475
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !7475
  br label %bb4, !dbg !7475

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !7476
  %20 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !7476
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !7476
  store i64 %_7.0, i64* %21, align 8, !dbg !7476
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !7476
  store i64 %_7.1, i64* %22, align 8, !dbg !7476
  %23 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !7476
  store i64 1, i64* %23, align 8, !dbg !7476
  br label %bb7, !dbg !7477

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !7478, !range !512, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !7478
  br i1 %25, label %bb6, label %bb5, !dbg !7478

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7479

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7478
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17haa50c8f3ab854e05E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %1, i64 %2, i64* align 8 %op) unnamed_addr #0 !dbg !7480 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !7523, metadata !DIExpression()), !dbg !7532
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !7524, metadata !DIExpression()), !dbg !7533
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !7527, metadata !DIExpression()), !dbg !7534
  store i8 1, i8* %_11, align 1, !dbg !7535
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !7535
  %6 = load {}*, {}** %5, align 8, !dbg !7535
  %7 = icmp eq {}* %6, null, !dbg !7535
  %_3 = select i1 %7, i64 1, i64 0, !dbg !7535
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7536

bb2:                                              ; preds = %start
  unreachable, !dbg !7535

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !7537
  %t.0 = load i8*, i8** %8, align 8, !dbg !7537, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !7537
  %t.1 = load i64, i64* %9, align 8, !dbg !7537
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !7537
  store i8* %t.0, i8** %10, align 8, !dbg !7537
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !7537
  store i64 %t.1, i64* %11, align 8, !dbg !7537
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !7525, metadata !DIExpression()), !dbg !7538
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !7539
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !7539
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !7539
  store i8* %t.0, i8** %14, align 8, !dbg !7539
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !7539
  store i64 %t.1, i64* %15, align 8, !dbg !7539
  %16 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !7539
  store i64 0, i64* %16, align 8, !dbg !7539
  br label %bb7, !dbg !7540

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !7541
  %17 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*, !dbg !7541
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h3934b48ad60c67afE"(i64* align 8 %op), !dbg !7541
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !7541
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !7541
  br label %bb4, !dbg !7541

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !7542
  %20 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !7542
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !7542
  store i64 %_7.0, i64* %21, align 8, !dbg !7542
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !7542
  store i64 %_7.1, i64* %22, align 8, !dbg !7542
  %23 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !7542
  store i64 1, i64* %23, align 8, !dbg !7542
  br label %bb7, !dbg !7543

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !7544, !range !512, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !7544
  br i1 %25, label %bb6, label %bb5, !dbg !7544

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !7545

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7544
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd2a527fdb6f06cc9E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !7546 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !7580, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !7581, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !7582, metadata !DIExpression()), !dbg !7590
  store i8 1, i8* %_11, align 1, !dbg !7591
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7591
  %6 = load i64, i64* %5, align 8, !dbg !7591, !range !7592, !noundef !23
  %7 = sub i64 %6, -9223372036854775807, !dbg !7591
  %8 = icmp eq i64 %7, 0, !dbg !7591
  %_3 = select i1 %8, i64 0, i64 1, !dbg !7591
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !7593

bb2:                                              ; preds = %start
  unreachable, !dbg !7591

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !7594
  %10 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %9 to {}*, !dbg !7594
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7594
  store i64 -9223372036854775807, i64* %11, align 8, !dbg !7594
  br label %bb7, !dbg !7595

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !7596
  %e.0 = load i64, i64* %12, align 8, !dbg !7596
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !7596
  %e.1 = load i64, i64* %13, align 8, !dbg !7596, !range !1795, !noundef !23
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !7596
  store i64 %e.0, i64* %14, align 8, !dbg !7596
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !7596
  store i64 %e.1, i64* %15, align 8, !dbg !7596
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !7584, metadata !DIExpression()), !dbg !7597
  store i8 0, i8* %_11, align 1, !dbg !7598
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !7598
  store i64 %e.0, i64* %16, align 8, !dbg !7598
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !7598
  store i64 %e.1, i64* %17, align 8, !dbg !7598
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !7598
  %19 = load i64, i64* %18, align 8, !dbg !7598
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !7598
  %21 = load i64, i64* %20, align 8, !dbg !7598, !range !1795, !noundef !23
; call alloc::raw_vec::handle_reserve::{{closure}}
  %22 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h647e2068a8dc7d5bE"(i64 %19, i64 %21), !dbg !7598
  %_7.0 = extractvalue { i64, i64 } %22, 0, !dbg !7598
  %_7.1 = extractvalue { i64, i64 } %22, 1, !dbg !7598
  br label %bb4, !dbg !7598

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7599
  store i64 %_7.0, i64* %23, align 8, !dbg !7599
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7599
  store i64 %_7.1, i64* %24, align 8, !dbg !7599
  br label %bb7, !dbg !7600

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !dbg !7601, !range !512, !noundef !23
  %26 = trunc i8 %25 to i1, !dbg !7601
  br i1 %26, label %bb6, label %bb5, !dbg !7601

bb5:                                              ; preds = %bb6, %bb7
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !7602
  %28 = load i64, i64* %27, align 8, !dbg !7602
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !7602
  %30 = load i64, i64* %29, align 8, !dbg !7602, !range !7592, !noundef !23
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0, !dbg !7602
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1, !dbg !7602
  ret { i64, i64 } %32, !dbg !7602

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !7601
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17hf6275b1d0fa3bb9bE(i8 %kind, { i8*, i64 }* align 8 %0, { i8*, i64 }* align 8 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !7603 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca { i8*, i64 }*, align 8
  %left = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %0, { i8*, i64 }** %left, align 8
  store { i8*, i64 }* %1, { i8*, i64 }** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !7621, metadata !DIExpression()), !dbg !7627
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %left, metadata !7622, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %right, metadata !7623, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !7624, metadata !DIExpression()), !dbg !7630
  %_7.0 = bitcast { i8*, i64 }** %left to {}*, !dbg !7631
  %_10.0 = bitcast { i8*, i64 }** %right to {}*, !dbg !7632
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !7633
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !7633
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !7633
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #15, !dbg !7634
  unreachable, !dbg !7634
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h63aa8f047ad2503cE"() unnamed_addr #1 !dbg !7635 {
start:
  %t.dbg.spill = alloca %"core::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %t.dbg.spill, metadata !7641, metadata !DIExpression()), !dbg !7644
  ret void, !dbg !7645
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8e1a809c19999ecbE"(i64 %t.0, i64 %t.1) unnamed_addr #1 !dbg !7646 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !7650, metadata !DIExpression()), !dbg !7653
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !7654
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !7654
  ret { i64, i64 } %3, !dbg !7654
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h92de53f2d292b24cE"(i64 %t) unnamed_addr #1 !dbg !7655 {
start:
  %t.dbg.spill = alloca i64, align 8
  store i64 %t, i64* %t.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %t.dbg.spill, metadata !7659, metadata !DIExpression()), !dbg !7660
  ret i64 %t, !dbg !7661
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha8e0a4e0ca4129a2E"() unnamed_addr #1 !dbg !7662 {
start:
  %t.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %t.dbg.spill, metadata !7666, metadata !DIExpression()), !dbg !7669
  ret void, !dbg !7670
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h0fef2e7ad346ada8E"(i8* %self) unnamed_addr #1 !dbg !7671 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !7674, metadata !DIExpression()), !dbg !7678
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h235423854f80c95bE"(i8* %self), !dbg !7679
  br label %bb1, !dbg !7679

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !7680
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb9ad3db51038b09fE"(i64 %self.0, i64 %self.1) unnamed_addr #1 !dbg !7681 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !7683, metadata !DIExpression()), !dbg !7687
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h546a7d4f068a885bE"(i64 %self.0, i64 %self.1), !dbg !7688
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !7688
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !7688
  br label %bb1, !dbg !7688

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !7689
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !7689
  ret { i64, i64 } %6, !dbg !7689
}

; <T as core::borrow::Borrow<T>>::borrow
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h27c9f61f5eb5cfddE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !7690 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !7697, metadata !DIExpression()), !dbg !7698
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0, !dbg !7699
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !7699
  ret { [0 x i8]*, i64 } %3, !dbg !7699
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h0e053acafbe28eb4E"(%"core::str::pattern::CharSearcher"* sret(%"core::str::pattern::CharSearcher") %0, i32 %self, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !7700 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %utf8_size.dbg.spill = alloca i64, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %dst.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca i32, align 4
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i32, align 4
  %_16 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !7705, metadata !DIExpression()), !dbg !7711
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !7706, metadata !DIExpression()), !dbg !7712
  call void @llvm.dbg.declare(metadata [4 x i8]* %utf8_encoded, metadata !7707, metadata !DIExpression()), !dbg !7713
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %utf8_encoded, i64 0, i64 0, !dbg !7714
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 4, i1 false), !dbg !7714
  store i32 %self, i32* %self.dbg.spill1, align 4, !dbg !7715
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill1, metadata !7716, metadata !DIExpression()), !dbg !7727
  %dst.0 = bitcast [4 x i8]* %utf8_encoded to [0 x i8]*, !dbg !7728
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 0, !dbg !7728
  store [0 x i8]* %dst.0, [0 x i8]** %6, align 8, !dbg !7728
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %dst.dbg.spill, i32 0, i32 1, !dbg !7728
  store i64 4, i64* %7, align 8, !dbg !7728
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %dst.dbg.spill, metadata !7726, metadata !DIExpression()), !dbg !7727
; call core::char::methods::encode_utf8_raw
  %8 = call { [0 x i8]*, i64 } @_ZN4core4char7methods15encode_utf8_raw17h5a0cf1b4e242d71cE(i32 %self, [0 x i8]* align 1 %dst.0, i64 4), !dbg !7727
  %_21.0 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !7727
  %_21.1 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !7727
  br label %bb1, !dbg !7727

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !7727
  store [0 x i8]* %_21.0, [0 x i8]** %9, align 8, !dbg !7727
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !7727
  store i64 %_21.1, i64* %10, align 8, !dbg !7727
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !7729, metadata !DIExpression()), !dbg !7735
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !7715
  store [0 x i8]* %_21.0, [0 x i8]** %11, align 8, !dbg !7715
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !7715
  store i64 %_21.1, i64* %12, align 8, !dbg !7715
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !7737, metadata !DIExpression()), !dbg !7741
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !7741
  store [0 x i8]* %_21.0, [0 x i8]** %13, align 8, !dbg !7741
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !7741
  store i64 %_21.1, i64* %14, align 8, !dbg !7741
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !7742, metadata !DIExpression()), !dbg !7746
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !7746
  store [0 x i8]* %_21.0, [0 x i8]** %15, align 8, !dbg !7746
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !7746
  store i64 %_21.1, i64* %16, align 8, !dbg !7746
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !7746
  %_31.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !dbg !7746, !nonnull !23, !align !445, !noundef !23
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !7746
  %_31.1 = load i64, i64* %18, align 8, !dbg !7746
  br label %bb2, !dbg !7746

bb2:                                              ; preds = %bb1
  store i64 %_31.1, i64* %utf8_size.dbg.spill, align 8, !dbg !7741
  call void @llvm.dbg.declare(metadata i64* %utf8_size.dbg.spill, metadata !7709, metadata !DIExpression()), !dbg !7748
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !7749
  store [0 x i8]* %haystack.0, [0 x i8]** %19, align 8, !dbg !7749
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !7749
  store i64 %haystack.1, i64* %20, align 8, !dbg !7749
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !7750, metadata !DIExpression()), !dbg !7754
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !7754
  store [0 x i8]* %haystack.0, [0 x i8]** %21, align 8, !dbg !7754
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !7754
  store i64 %haystack.1, i64* %22, align 8, !dbg !7754
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !7755, metadata !DIExpression()), !dbg !7759
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7759
  store [0 x i8]* %haystack.0, [0 x i8]** %23, align 8, !dbg !7759
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7759
  store i64 %haystack.1, i64* %24, align 8, !dbg !7759
  %25 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7759
  %_35.0 = load [0 x i8]*, [0 x i8]** %25, align 8, !dbg !7759, !nonnull !23, !align !445, !noundef !23
  %26 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7759
  %_35.1 = load i64, i64* %26, align 8, !dbg !7759
  br label %bb3, !dbg !7759

bb3:                                              ; preds = %bb2
  %27 = bitcast [4 x i8]* %_16 to i8*, !dbg !7761
  %28 = bitcast [4 x i8]* %utf8_encoded to i8*, !dbg !7761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %28, i64 4, i1 false), !dbg !7761
  %29 = bitcast %"core::str::pattern::CharSearcher"* %0 to { [0 x i8]*, i64 }*, !dbg !7762
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 0, !dbg !7762
  store [0 x i8]* %haystack.0, [0 x i8]** %30, align 8, !dbg !7762
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %29, i32 0, i32 1, !dbg !7762
  store i64 %haystack.1, i64* %31, align 8, !dbg !7762
  %32 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 1, !dbg !7762
  store i64 0, i64* %32, align 8, !dbg !7762
  %33 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 2, !dbg !7762
  store i64 %_35.1, i64* %33, align 8, !dbg !7762
  %34 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 4, !dbg !7762
  store i32 %self, i32* %34, align 8, !dbg !7762
  %35 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 3, !dbg !7762
  store i64 %_31.1, i64* %35, align 8, !dbg !7762
  %36 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %0, i32 0, i32 5, !dbg !7762
  %37 = bitcast [4 x i8]* %36 to i8*, !dbg !7762
  %38 = bitcast [4 x i8]* %_16 to i8*, !dbg !7762
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 1 %38, i64 4, i1 false), !dbg !7762
  ret void, !dbg !7763
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hdc36e925302422e0E"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %self, i32 %c) unnamed_addr #0 !dbg !7764 {
start:
  %c.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca %"[closure@core::str::<impl str>::trim::{closure#0}]"*, align 8
  %_4 = alloca i32, align 4
  store %"[closure@core::str::<impl str>::trim::{closure#0}]"* %self, %"[closure@core::str::<impl str>::trim::{closure#0}]"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::str::<impl str>::trim::{closure#0}]"** %self.dbg.spill, metadata !7770, metadata !DIExpression()), !dbg !7772
  store i32 %c, i32* %c.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !7771, metadata !DIExpression()), !dbg !7773
  store i32 %c, i32* %_4, align 4, !dbg !7774
  %0 = load i32, i32* %_4, align 4, !dbg !7774, !range !667, !noundef !23
; call core::str::<impl str>::trim::{{closure}}
  %1 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim28_$u7b$$u7b$closure$u7d$$u7d$17h143a3bc07e2984ccE"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %self, i32 %0), !dbg !7774
  br label %bb1, !dbg !7774

bb1:                                              ; preds = %start
  ret i1 %1, !dbg !7775
}

; <T as core::slice::cmp::SliceContains>::slice_contains
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17hae7d69e6e815e172E"({ [0 x i8]*, i64 }* align 8 %self, [0 x { [0 x i8]*, i64 }]* align 8 %x.0, i64 %x.1) unnamed_addr #1 !dbg !7776 {
start:
  %self.dbg.spill1 = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %x.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_6 = alloca i64*, align 8
  %_4 = alloca { i64*, i64* }, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !7781, metadata !DIExpression()), !dbg !7783
  %0 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %x.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %x.0, [0 x { [0 x i8]*, i64 }]** %0, align 8
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %x.dbg.spill, i32 0, i32 1
  store i64 %x.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %x.dbg.spill, metadata !7782, metadata !DIExpression()), !dbg !7784
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !7785
  store [0 x { [0 x i8]*, i64 }]* %x.0, [0 x { [0 x i8]*, i64 }]** %2, align 8, !dbg !7785
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !7785
  store i64 %x.1, i64* %3, align 8, !dbg !7785
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill1, metadata !7786, metadata !DIExpression()), !dbg !7790
; call core::slice::iter::Iter<T>::new
  %4 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h31444a6cf065ff14E"([0 x { [0 x i8]*, i64 }]* align 8 %x.0, i64 %x.1), !dbg !7790
  store { i64*, i64* } %4, { i64*, i64* }* %_4, align 8, !dbg !7790
  br label %bb2, !dbg !7790

bb2:                                              ; preds = %start
  %5 = bitcast i64** %_6 to { [0 x i8]*, i64 }**, !dbg !7791
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %5, align 8, !dbg !7791
  %6 = load i64*, i64** %_6, align 8, !dbg !7785, !nonnull !23, !align !584, !noundef !23
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %7 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hffabf1f380f522a1E"({ i64*, i64* }* align 8 %_4, i64* align 8 %6), !dbg !7785
  br label %bb1, !dbg !7785

bb1:                                              ; preds = %bb2
  ret i1 %7, !dbg !7792
}

; <T as core::slice::cmp::SliceContains>::slice_contains::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains28_$u7b$$u7b$closure$u7d$$u7d$17h8be92fc8e0a57246E"(i64** align 8 %_1, { [0 x i8]*, i64 }* align 8 %y) unnamed_addr #0 !dbg !7793 {
start:
  %y.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  %0 = load i64**, i64*** %_1.dbg.spill, align 8, !nonnull !23, !align !584, !noundef !23
  %1 = bitcast i64** %0 to { [0 x i8]*, i64 }**
  %2 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8, !nonnull !23, !align !584, !noundef !23
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !7803, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !7804
  store { [0 x i8]*, i64 }* %y, { [0 x i8]*, i64 }** %y.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %y.dbg.spill, metadata !7802, metadata !DIExpression()), !dbg !7805
  %3 = bitcast i64** %_1 to { [0 x i8]*, i64 }**, !dbg !7806
  %_5 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %3, align 8, !dbg !7806, !nonnull !23, !align !584, !noundef !23
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %4 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h9ee33d899d15c81dE"({ [0 x i8]*, i64 }* align 8 %y, { [0 x i8]*, i64 }* align 8 %_5), !dbg !7807
  br label %bb1, !dbg !7807

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !7808
}

; <() as std::process::Termination>::report
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h9670bdbbde5b6d51E"() unnamed_addr #0 !dbg !7809 {
start:
  %self.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %self.dbg.spill, metadata !7814, metadata !DIExpression()), !dbg !7815
  ret i8 0, !dbg !7816
}

; <&T as core::borrow::Borrow<T>>::borrow
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h41fc1c2d47f6d610E"({ [0 x i8]*, i64 }* align 8 %self) unnamed_addr #1 !dbg !7817 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !7822, metadata !DIExpression()), !dbg !7823
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !7824
  %_2.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !7824, !nonnull !23, !align !445, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !7824
  %_2.1 = load i64, i64* %1, align 8, !dbg !7824
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0, !dbg !7825
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %_2.1, 1, !dbg !7825
  ret { [0 x i8]*, i64 } %3, !dbg !7825
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h8095b91f3bd8cf5dE"({ [0 x i8]*, i64 }* align 8 %self) unnamed_addr #0 !dbg !7826 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !7831, metadata !DIExpression()), !dbg !7834
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !7835
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !7835, !nonnull !23, !align !445, !noundef !23
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !7835
  %_3.1 = load i64, i64* %1, align 8, !dbg !7835
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %2 = call { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h710673d6632e9c0eE"([0 x i8]* align 1 %_3.0, i64 %_3.1), !dbg !7836
  %3 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %2, 0, !dbg !7836
  %4 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %2, 1, !dbg !7836
  br label %bb1, !dbg !7836

bb1:                                              ; preds = %start
  %5 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %3, 0, !dbg !7837
  %6 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %5, i64 %4, 1, !dbg !7837
  ret { %"std::ffi::os_str::OsStr"*, i64 } %6, !dbg !7837
}

; <&str as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hd1805ba1b6eb2660E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !7838 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !7841, metadata !DIExpression()), !dbg !7843
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !7842, metadata !DIExpression()), !dbg !7844
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !7845
  store [0 x i8]* %haystack.0, [0 x i8]** %6, align 8, !dbg !7845
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !7845
  store i64 %haystack.1, i64* %7, align 8, !dbg !7845
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !7846, metadata !DIExpression()), !dbg !7850
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7850
  store [0 x i8]* %haystack.0, [0 x i8]** %8, align 8, !dbg !7850
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7850
  store i64 %haystack.1, i64* %9, align 8, !dbg !7850
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !7850
  %_4.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !7850, !nonnull !23, !align !445, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !7850
  %_4.1 = load i64, i64* %11, align 8, !dbg !7850
  br label %bb2, !dbg !7850

bb2:                                              ; preds = %start
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !7851
  store [0 x i8]* %self.0, [0 x i8]** %12, align 8, !dbg !7851
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !7851
  store i64 %self.1, i64* %13, align 8, !dbg !7851
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !7852, metadata !DIExpression()), !dbg !7856
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !7856
  store [0 x i8]* %self.0, [0 x i8]** %14, align 8, !dbg !7856
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !7856
  store i64 %self.1, i64* %15, align 8, !dbg !7856
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !7856
  %_7.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !dbg !7856, !nonnull !23, !align !445, !noundef !23
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !7856
  %_7.1 = load i64, i64* %17, align 8, !dbg !7856
  br label %bb3, !dbg !7856

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::starts_with
  %18 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h648456b66418bed4E"([0 x i8]* align 1 %_4.0, i64 %_4.1, [0 x i8]* align 1 %_7.0, i64 %_7.1), !dbg !7845
  br label %bb1, !dbg !7845

bb1:                                              ; preds = %bb3
  ret i1 %18, !dbg !7857
}

; <alloc::alloc::Global as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h6ba0f722ea16ada6E"(%"alloc::alloc::Global"* align 1 %self) unnamed_addr #0 !dbg !7858 {
start:
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !7865, metadata !DIExpression()), !dbg !7866
  ret void, !dbg !7867
}

; alloc::collections::btree::map::IntoIter<K,V,A>::dying_next
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h4f1bfc4fa54278c4E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>") %0, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #1 !dbg !7868 {
start:
  %self.dbg.spill = alloca %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  store %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !7885, metadata !DIExpression()), !dbg !7886
  %1 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, i32 0, i32 2, !dbg !7887
  %_2 = load i64, i64* %1, align 8, !dbg !7887
  %2 = icmp eq i64 %_2, 0, !dbg !7887
  br i1 %2, label %bb1, label %bb4, !dbg !7887

bb1:                                              ; preds = %start
  %_4 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !7888
  %_6 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"alloc::alloc::Global"*, !dbg !7889
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h6ba0f722ea16ada6E"(%"alloc::alloc::Global"* align 1 %_6), !dbg !7889
  br label %bb2, !dbg !7889

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, i32 0, i32 2, !dbg !7890
  %4 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, i32 0, i32 2, !dbg !7890
  %5 = load i64, i64* %4, align 8, !dbg !7890
  %6 = sub i64 %5, 1, !dbg !7890
  store i64 %6, i64* %3, align 8, !dbg !7890
  %_8 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !7891
  %_10 = bitcast %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"alloc::alloc::Global"*, !dbg !7892
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h6ba0f722ea16ada6E"(%"alloc::alloc::Global"* align 1 %_10), !dbg !7892
  br label %bb5, !dbg !7892

bb5:                                              ; preds = %bb4
; call alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_next_unchecked
  call void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$27deallocating_next_unchecked17hfef80dde6c665133E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %_7, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_8), !dbg !7891
  br label %bb6, !dbg !7891

bb6:                                              ; preds = %bb5
  %7 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"*, !dbg !7893
  %8 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"* %7 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !7893
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %8 to i8*, !dbg !7893
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_7 to i8*, !dbg !7893
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !7893
  br label %bb7, !dbg !7894

bb7:                                              ; preds = %bb3, %bb6
  ret void, !dbg !7895

bb2:                                              ; preds = %bb1
; call alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_end
  call void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$16deallocating_end17hcac9195533f97ea8E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_4), !dbg !7888
  br label %bb3, !dbg !7888

bb3:                                              ; preds = %bb2
  %11 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %0, i32 0, i32 1, !dbg !7896
  store {}* null, {}** %11, align 8, !dbg !7896
  br label %bb7, !dbg !7894
}

; alloc::collections::btree::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc11collections5btree3mem7replace17h3bb8a3090da09082E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %ret, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 %v) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !7897 {
start:
  %dst.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*, align 8
  %src.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %value.dbg.spill = alloca %"alloc::collections::btree::mem::replace::PanicGuard", align 1
  %t.dbg.spill = alloca %"alloc::collections::btree::mem::replace::PanicGuard", align 1
  %change.dbg.spill = alloca %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]", align 1
  %v.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %self = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_15 = alloca i8, align 1
  %src = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }, align 8
  %_7 = alloca { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, align 8
  %new_value = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %value = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %guard = alloca %"alloc::collections::btree::mem::replace::PanicGuard", align 1
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %ret, metadata !7916, metadata !DIExpression()), !dbg !7921
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %v.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %v.dbg.spill, metadata !7908, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.declare(metadata %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]"* %change.dbg.spill, metadata !7909, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::mem::replace::PanicGuard"* %guard, metadata !7910, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %value, metadata !7912, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %new_value, metadata !7914, metadata !DIExpression()), !dbg !7926
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src, metadata !7927, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::mem::replace::PanicGuard"* %t.dbg.spill, metadata !7938, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp, metadata !7946, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self, metadata !7965, metadata !DIExpression()), !dbg !7971
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %slot, metadata !7973, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::mem::replace::PanicGuard"* %value.dbg.spill, metadata !7981, metadata !DIExpression()), !dbg !7988
  store i8 1, i8* %_15, align 1, !dbg !7990
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %src.dbg.spill, align 8, !dbg !7991
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %src.dbg.spill, metadata !7954, metadata !DIExpression()), !dbg !7992
  %1 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to {}*, !dbg !7993
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"** %self.dbg.spill, align 8, !dbg !7963
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"** %self.dbg.spill, metadata !7999, metadata !DIExpression()), !dbg !8006
  %_18 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !8006
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_18 to i8*, !dbg !7963
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v to i8*, !dbg !7963
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !7963
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self to i8*, !dbg !7963
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %tmp to i8*, !dbg !7963
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !7963
  br label %bb7, !dbg !7971

bb7:                                              ; preds = %start
  %6 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %self to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"*, !dbg !7971
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %slot to i8*, !dbg !7971
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %6 to i8*, !dbg !7971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !7971
  %9 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %slot to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !7979
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %value to i8*, !dbg !7979
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %9 to i8*, !dbg !7979
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !7979
  store i8 0, i8* %_15, align 1, !dbg !8008
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_10 to i8*, !dbg !8009
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %value to i8*, !dbg !8009
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !8009
  %14 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }* %_9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !8008
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %14 to i8*, !dbg !8008
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_10 to i8*, !dbg !8008
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !8008
  %17 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }* %_9 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !8008
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::{{closure}}
  invoke void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hac7949a33984b5a4E"({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* sret({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }) %_7, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %17)
          to label %bb1 unwind label %cleanup, !dbg !8008

bb5:                                              ; preds = %cleanup
  br i1 true, label %bb4, label %bb2, !dbg !8010

cleanup:                                          ; preds = %bb7
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb5

bb1:                                              ; preds = %bb7
  %23 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_7 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !8011
  %24 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %new_value to i8*, !dbg !8011
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %23 to i8*, !dbg !8011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false), !dbg !8011
  %26 = getelementptr inbounds { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_7, i32 0, i32 1, !dbg !8012
  %27 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %ret to i8*, !dbg !8012
  %28 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %26 to i8*, !dbg !8012
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false), !dbg !8012
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %dst.dbg.spill, align 8, !dbg !8013
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %dst.dbg.spill, metadata !7934, metadata !DIExpression()), !dbg !7936
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src to i8*, !dbg !8014
  %30 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %new_value to i8*, !dbg !8014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false), !dbg !8014
  %31 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %v to i8*, !dbg !7936
  %32 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %src to i8*, !dbg !7936
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false), !dbg !7936
  ret void, !dbg !8015

bb2:                                              ; preds = %bb4, %bb5
  %33 = load i8, i8* %_15, align 1, !dbg !8010, !range !512, !noundef !23
  %34 = trunc i8 %33 to i1, !dbg !8010
  br i1 %34, label %bb6, label %bb3, !dbg !8010

bb4:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<alloc::collections::btree::mem::replace::PanicGuard>
  invoke void @"_ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17h622122c3e0caab8dE"(%"alloc::collections::btree::mem::replace::PanicGuard"* %guard) #16
          to label %bb2 unwind label %abort, !dbg !8010

abort:                                            ; preds = %bb4
  %35 = landingpad { i8*, i32 }
          cleanup, !dbg !8016
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !8016
  unreachable, !dbg !8016

bb3:                                              ; preds = %bb6, %bb2
  %36 = bitcast { i8*, i32 }* %0 to i8**, !dbg !8016
  %37 = load i8*, i8** %36, align 8, !dbg !8016
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !8016
  %39 = load i32, i32* %38, align 8, !dbg !8016
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !8016
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !8016
  resume { i8*, i32 } %41, !dbg !8016

bb6:                                              ; preds = %bb2
  br label %bb3, !dbg !8010
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17hf48d8970239e4d49E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %ret, i64 %self.0, i64* %self.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !8017 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill7 = alloca i64, align 8
  %size.dbg.spill6 = alloca i64, align 8
  %1 = alloca i64, align 8
  %align.dbg.spill5 = alloca i64, align 8
  %align.dbg.spill4 = alloca i64, align 8
  %size.dbg.spill3 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill1 = alloca i64*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %node.dbg.spill = alloca i64*, align 8
  %height.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %_16 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %x = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_11 = alloca { i64, i64 }, align 8
  %_9 = alloca i8*, align 8
  %self = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %ret, metadata !8028, metadata !DIExpression()), !dbg !8030
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8022, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !8023, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.declare(metadata %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %self, metadata !8033, metadata !DIExpression()), !dbg !8060
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x, metadata !8054, metadata !DIExpression()), !dbg !8062
  store i64 %self.0, i64* %height.dbg.spill, align 8, !dbg !8063
  call void @llvm.dbg.declare(metadata i64* %height.dbg.spill, metadata !8024, metadata !DIExpression()), !dbg !8064
  store i64* %self.1, i64** %node.dbg.spill, align 8, !dbg !8065
  call void @llvm.dbg.declare(metadata i64** %node.dbg.spill, metadata !8026, metadata !DIExpression()), !dbg !8066
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
  invoke void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h08ab5990556580afE"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>") %self, i64 %self.0, i64* %self.1)
          to label %bb1 unwind label %cleanup, !dbg !8061

bb8:                                              ; preds = %cleanup
  br label %bb9, !dbg !8067

cleanup:                                          ; preds = %bb5, %bb4, %bb3, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %10 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %self to i64*, !dbg !8060
  %_14 = load i64, i64* %10, align 8, !dbg !8060, !range !3441, !noundef !23
  switch i64 %_14, label %bb11 [
    i64 0, label %bb12
    i64 1, label %bb10
  ], !dbg !8060

bb11:                                             ; preds = %bb1
  unreachable, !dbg !8060

bb12:                                             ; preds = %bb1
  %11 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %self to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"*, !dbg !8060
  %12 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"* %11, i32 0, i32 1, !dbg !8060
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*, !dbg !8060
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %12 to i8*, !dbg !8060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !8060
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_16 to i8*, !dbg !8062
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %x to i8*, !dbg !8062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !8062
  %17 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %ret to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !8062
  %18 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %17 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !8062
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %18 to i8*, !dbg !8062
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_16 to i8*, !dbg !8062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !dbg !8062
  br label %bb2, !dbg !8060

bb10:                                             ; preds = %bb1
  %21 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %ret, i32 0, i32 1, !dbg !8068
  store {}* null, {}** %21, align 8, !dbg !8068
  br label %bb2, !dbg !8060

bb2:                                              ; preds = %bb12, %bb10
  store i64* %self.1, i64** %self.dbg.spill1, align 8, !dbg !8069
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill1, metadata !8070, metadata !DIExpression()), !dbg !8077
  store i64* %self.1, i64** %self.dbg.spill2, align 8, !dbg !8077
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !8078, metadata !DIExpression()), !dbg !8085
  %_21 = bitcast i64* %self.1 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8085
  %ptr = bitcast %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_21 to i8*, !dbg !8077
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !8077
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !8087, metadata !DIExpression()), !dbg !8091
  store i8* %ptr, i8** %_9, align 8, !dbg !8091
  %_12 = icmp ugt i64 %self.0, 0, !dbg !8093
  br i1 %_12, label %bb3, label %bb4, !dbg !8093

bb4:                                              ; preds = %bb2
; invoke core::alloc::layout::size_align
  %22 = invoke { i64, i64 } @_ZN4core5alloc6layout10size_align17ha9ef1132169c015aE()
          to label %bb15 unwind label %cleanup, !dbg !8094

bb3:                                              ; preds = %bb2
; invoke core::alloc::layout::size_align
  %23 = invoke { i64, i64 } @_ZN4core5alloc6layout10size_align17h6b8cb00642389332E()
          to label %bb13 unwind label %cleanup, !dbg !8105

bb13:                                             ; preds = %bb3
  %_27.0 = extractvalue { i64, i64 } %23, 0, !dbg !8105
  %_27.1 = extractvalue { i64, i64 } %23, 1, !dbg !8105
  store i64 %_27.0, i64* %size.dbg.spill, align 8, !dbg !8105
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !8109, metadata !DIExpression()), !dbg !8114
  store i64 %_27.1, i64* %align.dbg.spill, align 8, !dbg !8105
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !8112, metadata !DIExpression()), !dbg !8114
  store i64 %_27.0, i64* %size.dbg.spill3, align 8, !dbg !8114
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill3, metadata !8115, metadata !DIExpression()), !dbg !8122
  store i64 %_27.1, i64* %align.dbg.spill4, align 8, !dbg !8114
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill4, metadata !8121, metadata !DIExpression()), !dbg !8122
  store i64 %_27.1, i64* %align.dbg.spill5, align 8, !dbg !8122
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill5, metadata !8124, metadata !DIExpression()), !dbg !8131
  store i64 %_27.1, i64* %1, align 8, !dbg !8131
  %_31 = load i64, i64* %1, align 8, !dbg !8131, !range !5559, !noundef !23
  br label %bb14, !dbg !8131

bb14:                                             ; preds = %bb13
  %24 = bitcast { i64, i64 }* %_11 to i64*, !dbg !8122
  store i64 %_27.0, i64* %24, align 8, !dbg !8122
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !8122
  store i64 %_31, i64* %25, align 8, !dbg !8122
  br label %bb5, !dbg !8133

bb5:                                              ; preds = %bb16, %bb14
  %26 = load i8*, i8** %_9, align 8, !dbg !8135, !nonnull !23, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !8135
  %28 = load i64, i64* %27, align 8, !dbg !8135
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !8135
  %30 = load i64, i64* %29, align 8, !dbg !8135, !range !5559, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %26, i64 %28, i64 %30)
          to label %bb6 unwind label %cleanup, !dbg !8135

bb15:                                             ; preds = %bb4
  %_37.0 = extractvalue { i64, i64 } %22, 0, !dbg !8094
  %_37.1 = extractvalue { i64, i64 } %22, 1, !dbg !8094
  store i64 %_37.0, i64* %size.dbg.spill6, align 8, !dbg !8094
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill6, metadata !8100, metadata !DIExpression()), !dbg !8136
  store i64 %_37.1, i64* %align.dbg.spill7, align 8, !dbg !8094
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill7, metadata !8103, metadata !DIExpression()), !dbg !8136
  store i64 %_37.0, i64* %size.dbg.spill8, align 8, !dbg !8136
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !8137, metadata !DIExpression()), !dbg !8142
  store i64 %_37.1, i64* %align.dbg.spill9, align 8, !dbg !8136
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !8141, metadata !DIExpression()), !dbg !8142
  store i64 %_37.1, i64* %align.dbg.spill10, align 8, !dbg !8142
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !8144, metadata !DIExpression()), !dbg !8151
  store i64 %_37.1, i64* %0, align 8, !dbg !8151
  %_41 = load i64, i64* %0, align 8, !dbg !8151, !range !5559, !noundef !23
  br label %bb16, !dbg !8151

bb16:                                             ; preds = %bb15
  %31 = bitcast { i64, i64 }* %_11 to i64*, !dbg !8142
  store i64 %_37.0, i64* %31, align 8, !dbg !8142
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !8142
  store i64 %_41, i64* %32, align 8, !dbg !8142
  br label %bb5, !dbg !8133

bb6:                                              ; preds = %bb5
  br label %bb7, !dbg !8067

bb9:                                              ; preds = %bb8
  %33 = bitcast { i8*, i32 }* %2 to i8**, !dbg !8153
  %34 = load i8*, i8** %33, align 8, !dbg !8153
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !8153
  %36 = load i32, i32* %35, align 8, !dbg !8153
  %37 = insertvalue { i8*, i32 } undef, i8* %34, 0, !dbg !8153
  %38 = insertvalue { i8*, i32 } %37, i32 %36, 1, !dbg !8153
  resume { i8*, i32 } %38, !dbg !8153

bb7:                                              ; preds = %bb6
  ret void, !dbg !8154
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h11a7443e9d73e3a2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #1 !dbg !8155 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8165, metadata !DIExpression()), !dbg !8168
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*, !dbg !8169
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8169
  %_2.0 = load i64, i64* %2, align 8, !dbg !8169
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8169
  %_2.1 = load i64*, i64** %3, align 8, !dbg !8169, !nonnull !23, !noundef !23
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8170
  %_4 = load i64, i64* %4, align 8, !dbg !8170
  %_3 = add i64 %_4, 1, !dbg !8170
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h2b48121291ed2af2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_2.0, i64* %_2.1, i64 %_3), !dbg !8171
  br label %bb1, !dbg !8171

bb1:                                              ; preds = %start
  ret void, !dbg !8172
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h7762fe9aa2a1c8a5E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #1 !dbg !8173 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8183, metadata !DIExpression()), !dbg !8186
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*, !dbg !8187
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8187
  %_2.0 = load i64, i64* %2, align 8, !dbg !8187
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8187
  %_2.1 = load i64*, i64** %3, align 8, !dbg !8187, !nonnull !23, !noundef !23
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8188
  %_4 = load i64, i64* %4, align 8, !dbg !8188
  %_3 = add i64 %_4, 1, !dbg !8188
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17he31595c9024fa9f9E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_2.0, i64* %_2.1, i64 %_3), !dbg !8189
  br label %bb1, !dbg !8189

bb1:                                              ; preds = %start
  ret void, !dbg !8190
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h6661977f691b4155E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, i64 %node.0, i64* %node.1, i64 %idx) unnamed_addr #1 !dbg !8191 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0
  store i64 %node.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1
  store i64* %node.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8195, metadata !DIExpression()), !dbg !8199
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !8196, metadata !DIExpression()), !dbg !8200
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0 to { i64, i64* }*, !dbg !8201
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 0, !dbg !8201
  store i64 %node.0, i64* %4, align 8, !dbg !8201
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 1, !dbg !8201
  store i64* %node.1, i64** %5, align 8, !dbg !8201
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %0, i32 0, i32 2, !dbg !8201
  store i64 %idx, i64* %6, align 8, !dbg !8201
  ret void, !dbg !8202
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h2b48121291ed2af2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %node.0, i64* %node.1, i64 %idx) unnamed_addr #1 !dbg !8203 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0
  store i64 %node.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1
  store i64* %node.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8207, metadata !DIExpression()), !dbg !8209
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !8208, metadata !DIExpression()), !dbg !8210
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*, !dbg !8211
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 0, !dbg !8211
  store i64 %node.0, i64* %4, align 8, !dbg !8211
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 1, !dbg !8211
  store i64* %node.1, i64** %5, align 8, !dbg !8211
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 2, !dbg !8211
  store i64 %idx, i64* %6, align 8, !dbg !8211
  ret void, !dbg !8212
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6057b94c63512452E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %node.0, i64* %node.1, i64 %idx) unnamed_addr #1 !dbg !8213 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0
  store i64 %node.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1
  store i64* %node.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8223, metadata !DIExpression()), !dbg !8225
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !8224, metadata !DIExpression()), !dbg !8226
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*, !dbg !8227
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 0, !dbg !8227
  store i64 %node.0, i64* %4, align 8, !dbg !8227
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 1, !dbg !8227
  store i64* %node.1, i64** %5, align 8, !dbg !8227
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 2, !dbg !8227
  store i64 %idx, i64* %6, align 8, !dbg !8227
  ret void, !dbg !8228
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17he31595c9024fa9f9E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %node.0, i64* %node.1, i64 %idx) unnamed_addr #1 !dbg !8229 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0
  store i64 %node.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1
  store i64* %node.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8233, metadata !DIExpression()), !dbg !8235
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !8234, metadata !DIExpression()), !dbg !8236
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*, !dbg !8237
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 0, !dbg !8237
  store i64 %node.0, i64* %4, align 8, !dbg !8237
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %3, i32 0, i32 1, !dbg !8237
  store i64* %node.1, i64** %5, align 8, !dbg !8237
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 2, !dbg !8237
  store i64 %idx, i64* %6, align 8, !dbg !8237
  ret void, !dbg !8238
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17hbe45476ad7de42bfE"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #1 !dbg !8239 {
start:
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8258, metadata !DIExpression()), !dbg !8259
  %1 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8260
  %_3 = load i64, i64* %1, align 8, !dbg !8260
  %_5 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8261
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
  %_4 = call i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h93522a4947139affE"({ i64, i64* }* align 8 %_5), !dbg !8261
  br label %bb1, !dbg !8261

bb1:                                              ; preds = %start
  %_2 = icmp ult i64 %_3, %_4, !dbg !8260
  br i1 %_2, label %bb2, label %bb4, !dbg !8260

bb4:                                              ; preds = %bb1
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*, !dbg !8262
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to i8*, !dbg !8262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !8262
  %4 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"*, !dbg !8263
  %5 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"* %4, i32 0, i32 1, !dbg !8263
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %5 to i8*, !dbg !8263
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_9 to i8*, !dbg !8263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !8263
  %8 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*, !dbg !8263
  store i64 1, i64* %8, align 8, !dbg !8263
  br label %bb5, !dbg !8264

bb2:                                              ; preds = %bb1
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8265
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 0, !dbg !8265
  %_7.0 = load i64, i64* %10, align 8, !dbg !8265
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 1, !dbg !8265
  %_7.1 = load i64*, i64** %11, align 8, !dbg !8265, !nonnull !23, !noundef !23
  %12 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8266
  %_8 = load i64, i64* %12, align 8, !dbg !8266
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::new_kv
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h6661977f691b4155E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %_6, i64 %_7.0, i64* %_7.1, i64 %_8), !dbg !8267
  br label %bb3, !dbg !8267

bb3:                                              ; preds = %bb2
  %13 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"*, !dbg !8268
  %14 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"* %13, i32 0, i32 1, !dbg !8268
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %14 to i8*, !dbg !8268
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*, !dbg !8268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !8268
  %17 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %0 to i64*, !dbg !8268
  store i64 0, i64* %17, align 8, !dbg !8268
  br label %bb5, !dbg !8264

bb5:                                              ; preds = %bb4, %bb3
  ret void, !dbg !8269
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,Type>::force
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node145Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$Type$GT$5force17hfbd0a9b1230b8ee9E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #1 !dbg !8270 {
start:
  %node.dbg.spill3 = alloca { i64, i64* }, align 8
  %node.dbg.spill = alloca { i64, i64* }, align 8
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8290, metadata !DIExpression()), !dbg !8296
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*, !dbg !8297
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8297
  %_3.0 = load i64, i64* %2, align 8, !dbg !8297
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8297
  %_3.1 = load i64*, i64** %3, align 8, !dbg !8297, !nonnull !23, !noundef !23
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17hb27daaa292335ffcE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>") %_2, i64 %_3.0, i64* %_3.1), !dbg !8297
  br label %bb1, !dbg !8297

bb1:                                              ; preds = %start
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to i64*, !dbg !8297
  %_4 = load i64, i64* %4, align 8, !dbg !8297, !range !3441, !noundef !23
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !8298

bb3:                                              ; preds = %bb1
  unreachable, !dbg !8297

bb4:                                              ; preds = %bb1
  %5 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*, !dbg !8299
  %6 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %5, i32 0, i32 1, !dbg !8299
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 0, !dbg !8299
  %node.01 = load i64, i64* %7, align 8, !dbg !8299
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 1, !dbg !8299
  %node.12 = load i64*, i64** %8, align 8, !dbg !8299, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill3, i32 0, i32 0, !dbg !8299
  store i64 %node.01, i64* %9, align 8, !dbg !8299
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill3, i32 0, i32 1, !dbg !8299
  store i64* %node.12, i64** %10, align 8, !dbg !8299
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill3, metadata !8291, metadata !DIExpression()), !dbg !8300
  %11 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8301
  %_8 = load i64, i64* %11, align 8, !dbg !8301
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to { i64, i64* }*, !dbg !8302
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %12, i32 0, i32 0, !dbg !8302
  store i64 %node.01, i64* %13, align 8, !dbg !8302
  %14 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %12, i32 0, i32 1, !dbg !8302
  store i64* %node.12, i64** %14, align 8, !dbg !8302
  %15 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6, i32 0, i32 2, !dbg !8302
  store i64 %_8, i64* %15, align 8, !dbg !8302
  %16 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"*, !dbg !8303
  %17 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"* %16, i32 0, i32 1, !dbg !8303
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %17 to i8*, !dbg !8303
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*, !dbg !8303
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false), !dbg !8303
  %20 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to i64*, !dbg !8303
  store i64 0, i64* %20, align 8, !dbg !8303
  br label %bb5, !dbg !8304

bb2:                                              ; preds = %bb1
  %21 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*, !dbg !8305
  %22 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %21, i32 0, i32 1, !dbg !8305
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %22, i32 0, i32 0, !dbg !8305
  %node.0 = load i64, i64* %23, align 8, !dbg !8305
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %22, i32 0, i32 1, !dbg !8305
  %node.1 = load i64*, i64** %24, align 8, !dbg !8305, !nonnull !23, !noundef !23
  %25 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 0, !dbg !8305
  store i64 %node.0, i64* %25, align 8, !dbg !8305
  %26 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node.dbg.spill, i32 0, i32 1, !dbg !8305
  store i64* %node.1, i64** %26, align 8, !dbg !8305
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node.dbg.spill, metadata !8293, metadata !DIExpression()), !dbg !8306
  %27 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8307
  %_12 = load i64, i64* %27, align 8, !dbg !8307
  %28 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10 to { i64, i64* }*, !dbg !8308
  %29 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %28, i32 0, i32 0, !dbg !8308
  store i64 %node.0, i64* %29, align 8, !dbg !8308
  %30 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %28, i32 0, i32 1, !dbg !8308
  store i64* %node.1, i64** %30, align 8, !dbg !8308
  %31 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10, i32 0, i32 2, !dbg !8308
  store i64 %_12, i64* %31, align 8, !dbg !8308
  %32 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"*, !dbg !8309
  %33 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"* %32, i32 0, i32 1, !dbg !8309
  %34 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %33 to i8*, !dbg !8309
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_10 to i8*, !dbg !8309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false), !dbg !8309
  %36 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %0 to i64*, !dbg !8309
  store i64 1, i64* %36, align 8, !dbg !8309
  br label %bb5, !dbg !8310

bb5:                                              ; preds = %bb4, %bb2
  ret void, !dbg !8311
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::drop_key_val
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h7334a7c41f34b097E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #0 !dbg !8312 {
start:
  %0 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8, !dbg !8321
  %count.dbg.spill18 = alloca i64, align 8, !dbg !8321
  %self.dbg.spill17 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8, !dbg !8321
  %count.dbg.spill16 = alloca i64, align 8, !dbg !8321
  %self.dbg.spill15 = alloca %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, align 8, !dbg !8321
  %self.dbg.spill13 = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, align 8, !dbg !8321
  %slice.dbg.spill12 = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, align 8, !dbg !8321
  %self.dbg.spill11 = alloca i64, align 8, !dbg !8321
  %index.dbg.spill10 = alloca i64, align 8, !dbg !8321
  %self.dbg.spill8 = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, align 8, !dbg !8321
  %1 = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8, !dbg !8321
  %count.dbg.spill6 = alloca i64, align 8, !dbg !8321
  %self.dbg.spill5 = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8, !dbg !8321
  %count.dbg.spill = alloca i64, align 8, !dbg !8321
  %self.dbg.spill4 = alloca %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, align 8, !dbg !8321
  %self.dbg.spill2 = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, align 8, !dbg !8321
  %slice.dbg.spill = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, align 8, !dbg !8321
  %self.dbg.spill1 = alloca i64, align 8, !dbg !8321
  %index.dbg.spill = alloca i64, align 8, !dbg !8321
  %self.dbg.spill = alloca { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, align 8, !dbg !8321
  %leaf.dbg.spill = alloca %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8, !dbg !8321
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8316, metadata !DIExpression()), !dbg !8321
  %_3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to { i64, i64* }*, !dbg !8322
; call alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,Type>::as_leaf_dying
  %leaf = call align 8 %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$Type$GT$13as_leaf_dying17ha27af114b5719aefE"({ i64, i64* }* align 8 %_3), !dbg !8322
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %leaf, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf.dbg.spill, align 8, !dbg !8322
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf.dbg.spill, metadata !8317, metadata !DIExpression()), !dbg !8323
  br label %bb1, !dbg !8322

bb1:                                              ; preds = %start
  %_8 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %leaf, i32 0, i32 1, !dbg !8324
  %self.0 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %_8 to [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, !dbg !8324
  %2 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !8324
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %self.0, [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]** %2, align 8, !dbg !8324
  %3 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !8324
  store i64 11, i64* %3, align 8, !dbg !8324
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill, metadata !8325, metadata !DIExpression()), !dbg !8340
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8341
  %index = load i64, i64* %4, align 8, !dbg !8341
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !8341
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !8336, metadata !DIExpression()), !dbg !8340
  store i64 %index, i64* %self.dbg.spill1, align 8, !dbg !8340
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !8342, metadata !DIExpression()), !dbg !8365
  %5 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !8340
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %self.0, [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]** %5, align 8, !dbg !8340
  %6 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !8340
  store i64 11, i64* %6, align 8, !dbg !8340
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %slice.dbg.spill, metadata !8354, metadata !DIExpression()), !dbg !8365
  %7 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !8365
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %self.0, [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]** %7, align 8, !dbg !8365
  %8 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !8365
  store i64 11, i64* %8, align 8, !dbg !8365
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]*, i64 }* %self.dbg.spill2, metadata !8367, metadata !DIExpression()), !dbg !8373
  %self3 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"]* %self.0 to %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, !dbg !8373
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self3, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill4, align 8, !dbg !8373
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill4, metadata !8375, metadata !DIExpression()), !dbg !8382
  store i64 %index, i64* %count.dbg.spill, align 8, !dbg !8365
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !8381, metadata !DIExpression()), !dbg !8382
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self3, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill5, align 8, !dbg !8382
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %self.dbg.spill5, metadata !8383, metadata !DIExpression()), !dbg !8390
  store i64 %index, i64* %count.dbg.spill6, align 8, !dbg !8382
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !8389, metadata !DIExpression()), !dbg !8390
  %9 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>", %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %self3, i64 %index, !dbg !8390
  store %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* %9, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %1, align 8, !dbg !8390
  %_30 = load %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"*, %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"** %1, align 8, !dbg !8390
  br label %bb4, !dbg !8390

bb4:                                              ; preds = %bb1
; call core::mem::maybe_uninit::MaybeUninit<T>::assume_init_drop
  call void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17hea943d09be3c0b44E"(%"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"* align 8 %_30), !dbg !8324
  br label %bb2, !dbg !8324

bb2:                                              ; preds = %bb4
  %_14 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %leaf, i32 0, i32 2, !dbg !8392
  %self.07 = bitcast [11 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %_14 to [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, !dbg !8392
  %10 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill8, i32 0, i32 0, !dbg !8392
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %self.07, [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]** %10, align 8, !dbg !8392
  %11 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill8, i32 0, i32 1, !dbg !8392
  store i64 11, i64* %11, align 8, !dbg !8392
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill8, metadata !8393, metadata !DIExpression()), !dbg !8407
  %12 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, i32 0, i32 2, !dbg !8408
  %index9 = load i64, i64* %12, align 8, !dbg !8408
  store i64 %index9, i64* %index.dbg.spill10, align 8, !dbg !8408
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill10, metadata !8404, metadata !DIExpression()), !dbg !8407
  store i64 %index9, i64* %self.dbg.spill11, align 8, !dbg !8407
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill11, metadata !8409, metadata !DIExpression()), !dbg !8430
  %13 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %slice.dbg.spill12, i32 0, i32 0, !dbg !8407
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %self.07, [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]** %13, align 8, !dbg !8407
  %14 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %slice.dbg.spill12, i32 0, i32 1, !dbg !8407
  store i64 11, i64* %14, align 8, !dbg !8407
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %slice.dbg.spill12, metadata !8420, metadata !DIExpression()), !dbg !8430
  %15 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !8430
  store [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %self.07, [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]** %15, align 8, !dbg !8430
  %16 = getelementptr inbounds { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }, { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !8430
  store i64 11, i64* %16, align 8, !dbg !8430
  call void @llvm.dbg.declare(metadata { [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]*, i64 }* %self.dbg.spill13, metadata !8432, metadata !DIExpression()), !dbg !8438
  %self14 = bitcast [0 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"]* %self.07 to %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8438
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self14, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill15, align 8, !dbg !8438
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill15, metadata !8440, metadata !DIExpression()), !dbg !8447
  store i64 %index9, i64* %count.dbg.spill16, align 8, !dbg !8430
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill16, metadata !8446, metadata !DIExpression()), !dbg !8447
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self14, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill17, align 8, !dbg !8447
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill17, metadata !8448, metadata !DIExpression()), !dbg !8455
  store i64 %index9, i64* %count.dbg.spill18, align 8, !dbg !8447
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill18, metadata !8454, metadata !DIExpression()), !dbg !8455
  %17 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>", %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %self14, i64 %index9, !dbg !8455
  store %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* %17, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %0, align 8, !dbg !8455
  %_48 = load %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"*, %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"** %0, align 8, !dbg !8455
  br label %bb5, !dbg !8455

bb5:                                              ; preds = %bb2
; call core::mem::maybe_uninit::MaybeUninit<T>::assume_init_drop
  call void @"_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17h4da2b390b04c8ad3E"(%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"* align 8 %_48), !dbg !8392
  br label %bb3, !dbg !8392

bb3:                                              ; preds = %bb5
  ret void, !dbg !8457
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::forget_node_type
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hb1330551cb6ab415E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #1 !dbg !8458 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8462, metadata !DIExpression()), !dbg !8463
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8464
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8464
  %_3.0 = load i64, i64* %2, align 8, !dbg !8464
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8464
  %_3.1 = load i64*, i64** %3, align 8, !dbg !8464, !nonnull !23, !noundef !23
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>::forget_type
  %4 = call { i64, i64* } @"_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17hf51b02f27d1fa84aE"(i64 %_3.0, i64* %_3.1), !dbg !8464
  %_2.0 = extractvalue { i64, i64* } %4, 0, !dbg !8464
  %_2.1 = extractvalue { i64, i64* } %4, 1, !dbg !8464
  br label %bb1, !dbg !8464

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8465
  %_4 = load i64, i64* %5, align 8, !dbg !8465
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6057b94c63512452E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_2.0, i64* %_2.1, i64 %_4), !dbg !8466
  br label %bb2, !dbg !8466

bb2:                                              ; preds = %bb1
  ret void, !dbg !8467
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::forget_node_type
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h3889dc7713b976adE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #1 !dbg !8468 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8472, metadata !DIExpression()), !dbg !8473
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8474
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8474
  %_3.0 = load i64, i64* %2, align 8, !dbg !8474
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8474
  %_3.1 = load i64*, i64** %3, align 8, !dbg !8474, !nonnull !23, !noundef !23
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::forget_type
  %4 = call { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17hd17b7de4779fd967E"(i64 %_3.0, i64* %_3.1), !dbg !8474
  %_2.0 = extractvalue { i64, i64* } %4, 0, !dbg !8474
  %_2.1 = extractvalue { i64, i64* } %4, 1, !dbg !8474
  br label %bb1, !dbg !8474

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8475
  %_4 = load i64, i64* %5, align 8, !dbg !8475
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6057b94c63512452E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_2.0, i64* %_2.1, i64 %_4), !dbg !8476
  br label %bb2, !dbg !8476

bb2:                                              ; preds = %bb1
  ret void, !dbg !8477
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17he451cd67fde09695E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #1 !dbg !8478 {
start:
  %node.dbg.spill = alloca i64*, align 8
  %slot.dbg.spill = alloca i64*, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %self.dbg.spill11 = alloca i8**, align 8
  %src.dbg.spill = alloca i64**, align 8
  %self.dbg.spill10 = alloca i64**, align 8
  %self.dbg.spill8 = alloca i8**, align 8
  %self.dbg.spill7 = alloca i8**, align 8
  %0 = alloca i8**, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8**, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill4 = alloca i8**, align 8
  %self.dbg.spill2 = alloca { [0 x i8*]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8*]*, i64 }, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8*]*, i64 }, align 8
  %parent_ptr.dbg.spill = alloca %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %tmp = alloca i8*, align 8
  %1 = alloca { i64, i64* }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8482, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !8489, metadata !DIExpression()), !dbg !8499
  br i1 false, label %bb1, label %bb2, !dbg !8514

bb2:                                              ; preds = %start
  %_6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8515
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_ptr
  %parent_ptr = call %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_ptr17h62e6265bd368e9f6E"({ i64, i64* }* align 8 %_6), !dbg !8516
  store %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %parent_ptr, %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %parent_ptr.dbg.spill, align 8, !dbg !8516
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %parent_ptr.dbg.spill, metadata !8483, metadata !DIExpression()), !dbg !8517
  br label %bb3, !dbg !8516

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [47 x i8] }>* @alloc543 to [0 x i8]*), i64 47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc542 to %"core::panic::location::Location"*)) #15, !dbg !8514
  unreachable, !dbg !8514

bb3:                                              ; preds = %bb2
  %_11 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %parent_ptr, i32 0, i32 1, !dbg !8513
  %self.0 = bitcast [12 x i8*]* %_11 to [0 x i8*]*, !dbg !8513
  %2 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !8513
  store [0 x i8*]* %self.0, [0 x i8*]** %2, align 8, !dbg !8513
  %3 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !8513
  store i64 12, i64* %3, align 8, !dbg !8513
  call void @llvm.dbg.declare(metadata { [0 x i8*]*, i64 }* %self.dbg.spill, metadata !8518, metadata !DIExpression()), !dbg !8532
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self, i32 0, i32 2, !dbg !8533
  %index = load i64, i64* %4, align 8, !dbg !8533
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !8533
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !8529, metadata !DIExpression()), !dbg !8532
  store i64 %index, i64* %self.dbg.spill1, align 8, !dbg !8532
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !8534, metadata !DIExpression()), !dbg !8556
  %5 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !8532
  store [0 x i8*]* %self.0, [0 x i8*]** %5, align 8, !dbg !8532
  %6 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !8532
  store i64 12, i64* %6, align 8, !dbg !8532
  call void @llvm.dbg.declare(metadata { [0 x i8*]*, i64 }* %slice.dbg.spill, metadata !8545, metadata !DIExpression()), !dbg !8556
  %7 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !8556
  store [0 x i8*]* %self.0, [0 x i8*]** %7, align 8, !dbg !8556
  %8 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !8556
  store i64 12, i64* %8, align 8, !dbg !8556
  call void @llvm.dbg.declare(metadata { [0 x i8*]*, i64 }* %self.dbg.spill2, metadata !8558, metadata !DIExpression()), !dbg !8564
  %self3 = bitcast [0 x i8*]* %self.0 to i8**, !dbg !8564
  store i8** %self3, i8*** %self.dbg.spill4, align 8, !dbg !8564
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill4, metadata !8566, metadata !DIExpression()), !dbg !8573
  store i64 %index, i64* %count.dbg.spill, align 8, !dbg !8556
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !8572, metadata !DIExpression()), !dbg !8573
  store i8** %self3, i8*** %self.dbg.spill5, align 8, !dbg !8573
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill5, metadata !8574, metadata !DIExpression()), !dbg !8581
  store i64 %index, i64* %count.dbg.spill6, align 8, !dbg !8573
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !8580, metadata !DIExpression()), !dbg !8581
  %9 = getelementptr inbounds i8*, i8** %self3, i64 %index, !dbg !8581
  store i8** %9, i8*** %0, align 8, !dbg !8581
  %_16 = load i8**, i8*** %0, align 8, !dbg !8581
  br label %bb4, !dbg !8581

bb4:                                              ; preds = %bb3
  store i8** %_16, i8*** %self.dbg.spill7, align 8, !dbg !8513
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill7, metadata !8511, metadata !DIExpression()), !dbg !8583
  br label %bb5, !dbg !8583

bb5:                                              ; preds = %bb4
  store i8** %_16, i8*** %self.dbg.spill8, align 8, !dbg !8583
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill8, metadata !8584, metadata !DIExpression()), !dbg !8590
  %self9 = bitcast i8** %_16 to i64**, !dbg !8590
  store i64** %self9, i64*** %self.dbg.spill10, align 8, !dbg !8590
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill10, metadata !8503, metadata !DIExpression()), !dbg !8591
  store i64** %self9, i64*** %src.dbg.spill, align 8, !dbg !8591
  call void @llvm.dbg.declare(metadata i64*** %src.dbg.spill, metadata !8497, metadata !DIExpression()), !dbg !8592
  %10 = bitcast i8** %tmp to {}*, !dbg !8593
  store i8** %tmp, i8*** %self.dbg.spill11, align 8, !dbg !8499
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill11, metadata !8599, metadata !DIExpression()), !dbg !8607
  %_37 = bitcast i8** %tmp to i64**, !dbg !8607
  %11 = bitcast i64** %_37 to i8*, !dbg !8499
  %12 = bitcast i64** %self9 to i8*, !dbg !8499
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !8499
  %self12 = load i8*, i8** %tmp, align 8, !dbg !8499
  store i8* %self12, i8** %self.dbg.spill13, align 8, !dbg !8499
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !8609, metadata !DIExpression()), !dbg !8615
  br label %bb6, !dbg !8615

bb6:                                              ; preds = %bb5
  %slot = bitcast i8* %self12 to i64*, !dbg !8615
  store i64* %slot, i64** %slot.dbg.spill, align 8, !dbg !8615
  call void @llvm.dbg.declare(metadata i64** %slot.dbg.spill, metadata !8617, metadata !DIExpression()), !dbg !8623
  store i64* %slot, i64** %node.dbg.spill, align 8, !dbg !8623
  call void @llvm.dbg.declare(metadata i64** %node.dbg.spill, metadata !8486, metadata !DIExpression()), !dbg !8625
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8626
  %14 = bitcast { i64, i64* }* %13 to i64*, !dbg !8626
  %_15 = load i64, i64* %14, align 8, !dbg !8626
  %_14 = sub i64 %_15, 1, !dbg !8626
  %15 = bitcast { i64, i64* }* %1 to i64*, !dbg !8627
  store i64 %_14, i64* %15, align 8, !dbg !8627
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8627
  store i64* %slot, i64** %16, align 8, !dbg !8627
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 0, !dbg !8628
  %18 = load i64, i64* %17, align 8, !dbg !8628
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %1, i32 0, i32 1, !dbg !8628
  %20 = load i64*, i64** %19, align 8, !dbg !8628, !nonnull !23, !noundef !23
  %21 = insertvalue { i64, i64* } undef, i64 %18, 0, !dbg !8628
  %22 = insertvalue { i64, i64* } %21, i64* %20, 1, !dbg !8628
  ret { i64, i64* } %22, !dbg !8628
}

; alloc::collections::btree::node::Handle<Node,Type>::into_node
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h00b80403e15e9ff8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #1 !dbg !8629 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !8633, metadata !DIExpression()), !dbg !8634
  %0 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %self to { i64, i64* }*, !dbg !8635
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8635
  %2 = load i64, i64* %1, align 8, !dbg !8635
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8635
  %4 = load i64*, i64** %3, align 8, !dbg !8635, !nonnull !23, !noundef !23
  %5 = insertvalue { i64, i64* } undef, i64 %2, 0, !dbg !8636
  %6 = insertvalue { i64, i64* } %5, i64* %4, 1, !dbg !8636
  ret { i64, i64* } %6, !dbg !8636
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h663d4712bd803cc4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1) unnamed_addr #1 !dbg !8637 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8641, metadata !DIExpression()), !dbg !8642
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h2b48121291ed2af2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1, i64 0), !dbg !8643
  br label %bb1, !dbg !8643

bb1:                                              ; preds = %start
  ret void, !dbg !8644
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h73ec67a7a97f73a8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1) unnamed_addr #1 !dbg !8645 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8649, metadata !DIExpression()), !dbg !8650
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::new_edge
  call void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17he31595c9024fa9f9E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1, i64 0), !dbg !8651
  br label %bb1, !dbg !8651

bb1:                                              ; preds = %start
  ret void, !dbg !8652
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
; Function Attrs: nonlazybind uwtable
define internal %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17h0d2da2bbcc039e67E"({ i64, i64* }* align 8 %this) unnamed_addr #1 !dbg !8653 {
start:
  %self.dbg.spill = alloca i64*, align 8
  %this.dbg.spill = alloca { i64, i64* }*, align 8
  store { i64, i64* }* %this, { i64, i64* }** %this.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %this.dbg.spill, metadata !8658, metadata !DIExpression()), !dbg !8659
  %0 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %this, i32 0, i32 1, !dbg !8660
  %self = load i64*, i64** %0, align 8, !dbg !8660, !nonnull !23, !noundef !23
  store i64* %self, i64** %self.dbg.spill, align 8, !dbg !8660
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !8661, metadata !DIExpression()), !dbg !8665
  %_3 = bitcast i64* %self to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8665
  ret %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_3, !dbg !8666
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::len
; Function Attrs: nonlazybind uwtable
define internal i64 @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h93522a4947139affE"({ i64, i64* }* align 8 %self) unnamed_addr #1 !dbg !8667 {
start:
  %small.dbg.spill = alloca i16, align 2
  %self.dbg.spill = alloca { i64, i64* }*, align 8
  store { i64, i64* }* %self, { i64, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %self.dbg.spill, metadata !8671, metadata !DIExpression()), !dbg !8672
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
  %_3 = call %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17h0d2da2bbcc039e67E"({ i64, i64* }* align 8 %self), !dbg !8673
  br label %bb1, !dbg !8673

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_3, i32 0, i32 4, !dbg !8674
  %small = load i16, i16* %0, align 2, !dbg !8674
  store i16 %small, i16* %small.dbg.spill, align 2, !dbg !8674
  call void @llvm.dbg.declare(metadata i16* %small.dbg.spill, metadata !8675, metadata !DIExpression()), !dbg !8684
  %1 = zext i16 %small to i64, !dbg !8684
  ret i64 %1, !dbg !8686
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h08ab5990556580afE"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>") %0, i64 %1, i64* %2) unnamed_addr #1 !dbg !8687 {
start:
  %err.dbg.spill = alloca { i64, i64* }, align 8
  %x.dbg.spill = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %_21 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %v = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_12 = alloca { i64*, i64* }, align 8
  %_11 = alloca i64*, align 8
  %_9 = alloca i64*, align 8
  %self1 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %leaf_ptr = alloca %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %self = alloca { i64, i64* }, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  store i64* %2, i64** %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self, metadata !8691, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf_ptr, metadata !8692, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self1, metadata !8696, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %v, metadata !8703, metadata !DIExpression()), !dbg !8708
  br i1 false, label %bb1, label %bb2, !dbg !8709

bb2:                                              ; preds = %start
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
  %_5 = call %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17h0d2da2bbcc039e67E"({ i64, i64* }* align 8 %self), !dbg !8710
  br label %bb3, !dbg !8710

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [47 x i8] }>* @alloc543 to [0 x i8]*), i64 47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc545 to %"core::panic::location::Location"*)) #15, !dbg !8709
  unreachable, !dbg !8709

bb3:                                              ; preds = %bb2
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_5, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf_ptr, align 8, !dbg !8710
  %5 = load %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf_ptr, align 8, !dbg !8711
  %6 = bitcast %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %5 to i64**, !dbg !8711
  %7 = load i64*, i64** %6, align 8, !dbg !8711
  store i64* %7, i64** %_11, align 8, !dbg !8711
  store i64** %_11, i64*** %self.dbg.spill, align 8, !dbg !8707
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !8712, metadata !DIExpression()), !dbg !8722
  %8 = bitcast i64** %_11 to {}**, !dbg !8722
  %9 = load {}*, {}** %8, align 8, !dbg !8722
  %10 = icmp eq {}* %9, null, !dbg !8722
  %_16 = select i1 %10, i64 0, i64 1, !dbg !8722
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !8722

bb7:                                              ; preds = %bb3
  unreachable, !dbg !8722

bb6:                                              ; preds = %bb3
  %11 = bitcast i64** %_9 to {}**, !dbg !8722
  store {}* null, {}** %11, align 8, !dbg !8722
  br label %bb4, !dbg !8722

bb8:                                              ; preds = %bb3
  store i64** %_11, i64*** %x.dbg.spill, align 8, !dbg !8722
  call void @llvm.dbg.declare(metadata i64*** %x.dbg.spill, metadata !8719, metadata !DIExpression()), !dbg !8723
  %12 = bitcast i64** %_9 to i64***, !dbg !8723
  store i64** %_11, i64*** %12, align 8, !dbg !8723
  br label %bb4, !dbg !8722

bb4:                                              ; preds = %bb6, %bb8
  %_13 = bitcast { i64, i64* }* %self to i64*, !dbg !8724
  %13 = bitcast { i64*, i64* }* %_12 to i64**, !dbg !8724
  store i64* %_13, i64** %13, align 8, !dbg !8724
  %14 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 1, !dbg !8724
  %15 = bitcast i64** %14 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"***, !dbg !8724
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %leaf_ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*** %15, align 8, !dbg !8724
  %16 = load i64*, i64** %_9, align 8, !dbg !8707, !align !584
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 0, !dbg !8707
  %18 = load i64*, i64** %17, align 8, !dbg !8707, !nonnull !23, !align !584, !noundef !23
  %19 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_12, i32 0, i32 1, !dbg !8707
  %20 = load i64*, i64** %19, align 8, !dbg !8707, !nonnull !23, !align !584, !noundef !23
; call core::option::Option<T>::map
  call void @"_ZN4core6option15Option$LT$T$GT$3map17h3b6f6003e31e960bE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %self1, i64* align 8 %16, i64* align 8 %18, i64* align 8 %20), !dbg !8707
  br label %bb5, !dbg !8707

bb5:                                              ; preds = %bb4
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0, !dbg !8725
  %err.0 = load i64, i64* %21, align 8, !dbg !8725
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1, !dbg !8725
  %err.1 = load i64*, i64** %22, align 8, !dbg !8725, !nonnull !23, !noundef !23
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %err.dbg.spill, i32 0, i32 0, !dbg !8725
  store i64 %err.0, i64* %23, align 8, !dbg !8725
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %err.dbg.spill, i32 0, i32 1, !dbg !8725
  store i64* %err.1, i64** %24, align 8, !dbg !8725
  call void @llvm.dbg.declare(metadata { i64, i64* }* %err.dbg.spill, metadata !8702, metadata !DIExpression()), !dbg !8706
  %25 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self1, i32 0, i32 1, !dbg !8706
  %26 = load {}*, {}** %25, align 8, !dbg !8706
  %27 = icmp eq {}* %26, null, !dbg !8706
  %_19 = select i1 %27, i64 0, i64 1, !dbg !8706
  switch i64 %_19, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !8706

bb10:                                             ; preds = %bb5
  unreachable, !dbg !8706

bb9:                                              ; preds = %bb5
  %28 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err"*, !dbg !8706
  %29 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err"* %28, i32 0, i32 1, !dbg !8706
  %30 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %29, i32 0, i32 0, !dbg !8706
  store i64 %err.0, i64* %30, align 8, !dbg !8706
  %31 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %29, i32 0, i32 1, !dbg !8706
  store i64* %err.1, i64** %31, align 8, !dbg !8706
  %32 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to i64*, !dbg !8706
  store i64 1, i64* %32, align 8, !dbg !8706
  br label %bb12, !dbg !8706

bb11:                                             ; preds = %bb5
  %33 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %self1 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !8706
  %34 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %33 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !8706
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %v to i8*, !dbg !8706
  %36 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %34 to i8*, !dbg !8706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false), !dbg !8706
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_21 to i8*, !dbg !8708
  %38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %v to i8*, !dbg !8708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false), !dbg !8708
  %39 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"*, !dbg !8708
  %40 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Ok"* %39, i32 0, i32 1, !dbg !8708
  %41 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %40 to i8*, !dbg !8708
  %42 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_21 to i8*, !dbg !8708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false), !dbg !8708
  %43 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>"* %0 to i64*, !dbg !8708
  store i64 0, i64* %43, align 8, !dbg !8708
  br label %bb12, !dbg !8706

bb12:                                             ; preds = %bb9, %bb11
  ret void, !dbg !8726
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend28_$u7b$$u7b$closure$u7d$$u7d$17hf3c8dba9ac9512d8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %0, i64* align 8 %1, i64* align 8 %2, i64** align 8 %parent) unnamed_addr #0 !dbg !8727 {
start:
  %small.dbg.spill = alloca i16, align 2
  %slot.dbg.spill = alloca i16, align 2
  %self.dbg.spill = alloca i16, align 2
  %parent.dbg.spill = alloca i64**, align 8
  %_1 = alloca { i64*, i64* }, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 0
  store i64* %1, i64** %3, align 8
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
  store i64* %2, i64** %4, align 8
  %5 = bitcast { i64*, i64* }* %_1 to i64**
  %6 = load i64*, i64** %5, align 8, !nonnull !23, !align !584, !noundef !23
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_1, metadata !8732, metadata !DIExpression(DW_OP_deref)), !dbg !8734
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1
  %8 = bitcast i64** %7 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"***
  %9 = load %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*** %8, align 8, !nonnull !23, !align !584, !noundef !23
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_1, metadata !8733, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref)), !dbg !8735
  store i64** %parent, i64*** %parent.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %parent.dbg.spill, metadata !8731, metadata !DIExpression()), !dbg !8736
  %_4 = load i64*, i64** %parent, align 8, !dbg !8737, !nonnull !23, !noundef !23
  %10 = bitcast { i64*, i64* }* %_1 to i64**, !dbg !8738
  %_10 = load i64*, i64** %10, align 8, !dbg !8738, !nonnull !23, !align !584, !noundef !23
  %_6 = load i64, i64* %_10, align 8, !dbg !8738
  %_5 = add i64 %_6, 1, !dbg !8738
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::from_internal
  %11 = call { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$13from_internal17ha18b6c4c4c0a22adE"(i64* %_4, i64 %_5), !dbg !8739
  %_3.0 = extractvalue { i64, i64* } %11, 0, !dbg !8739
  %_3.1 = extractvalue { i64, i64* } %11, 1, !dbg !8739
  br label %bb1, !dbg !8739

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_1, i32 0, i32 1, !dbg !8740
  %13 = bitcast i64** %12 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"***, !dbg !8740
  %_11 = load %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*** %13, align 8, !dbg !8740, !nonnull !23, !align !584, !noundef !23
  %_12 = load %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %_11, align 8, !dbg !8740
  %14 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_12, i32 0, i32 3, !dbg !8740
  %self = load i16, i16* %14, align 8, !dbg !8740
  store i16 %self, i16* %self.dbg.spill, align 2, !dbg !8740
  call void @llvm.dbg.declare(metadata i16* %self.dbg.spill, metadata !8741, metadata !DIExpression()), !dbg !8747
  br label %bb2, !dbg !8747

bb2:                                              ; preds = %bb1
  store i16 %self, i16* %slot.dbg.spill, align 2, !dbg !8747
  call void @llvm.dbg.declare(metadata i16* %slot.dbg.spill, metadata !8748, metadata !DIExpression()), !dbg !8754
  store i16 %self, i16* %small.dbg.spill, align 2, !dbg !8754
  call void @llvm.dbg.declare(metadata i16* %small.dbg.spill, metadata !8756, metadata !DIExpression()), !dbg !8760
  %_7 = zext i16 %self to i64, !dbg !8760
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0 to { i64, i64* }*, !dbg !8762
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 0, !dbg !8762
  store i64 %_3.0, i64* %16, align 8, !dbg !8762
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 1, !dbg !8762
  store i64* %_3.1, i64** %17, align 8, !dbg !8762
  %18 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %0, i32 0, i32 2, !dbg !8762
  store i64 %_7, i64* %18, align 8, !dbg !8762
  ret void, !dbg !8763
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,Type>::as_leaf_dying
; Function Attrs: nonlazybind uwtable
define internal align 8 %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$Type$GT$13as_leaf_dying17ha27af114b5719aefE"({ i64, i64* }* align 8 %self) unnamed_addr #1 !dbg !8764 {
start:
  %ptr.dbg.spill = alloca %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %self.dbg.spill = alloca { i64, i64* }*, align 8
  store { i64, i64* }* %self, { i64, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %self.dbg.spill, metadata !8769, metadata !DIExpression()), !dbg !8773
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::as_leaf_ptr
  %ptr = call %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17h0d2da2bbcc039e67E"({ i64, i64* }* align 8 %self), !dbg !8774
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %ptr.dbg.spill, align 8, !dbg !8774
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %ptr.dbg.spill, metadata !8770, metadata !DIExpression()), !dbg !8775
  br label %bb1, !dbg !8774

bb1:                                              ; preds = %start
  ret %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %ptr, !dbg !8776
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,Type>::into_dying
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$Type$GT$10into_dying17h6029ad7cda11e823E"(i64 %self.0, i64* %self.1) unnamed_addr #1 !dbg !8777 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %0 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8781, metadata !DIExpression()), !dbg !8782
  %3 = bitcast { i64, i64* }* %0 to i64*, !dbg !8783
  store i64 %self.0, i64* %3, align 8, !dbg !8783
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8783
  store i64* %self.1, i64** %4, align 8, !dbg !8783
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8784
  %6 = load i64, i64* %5, align 8, !dbg !8784
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8784
  %8 = load i64*, i64** %7, align 8, !dbg !8784, !nonnull !23, !noundef !23
  %9 = insertvalue { i64, i64* } undef, i64 %6, 0, !dbg !8784
  %10 = insertvalue { i64, i64* } %9, i64* %8, 1, !dbg !8784
  ret { i64, i64* } %10, !dbg !8784
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>::forget_type
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17hf51b02f27d1fa84aE"(i64 %self.0, i64* %self.1) unnamed_addr #1 !dbg !8785 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %0 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8789, metadata !DIExpression()), !dbg !8790
  %3 = bitcast { i64, i64* }* %0 to i64*, !dbg !8791
  store i64 %self.0, i64* %3, align 8, !dbg !8791
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8791
  store i64* %self.1, i64** %4, align 8, !dbg !8791
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8792
  %6 = load i64, i64* %5, align 8, !dbg !8792
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8792
  %8 = load i64*, i64** %7, align 8, !dbg !8792, !nonnull !23, !noundef !23
  %9 = insertvalue { i64, i64* } undef, i64 %6, 0, !dbg !8792
  %10 = insertvalue { i64, i64* } %9, i64* %8, 1, !dbg !8792
  ret { i64, i64* } %10, !dbg !8792
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::forget_type
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17hd17b7de4779fd967E"(i64 %self.0, i64* %self.1) unnamed_addr #1 !dbg !8793 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %0 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8797, metadata !DIExpression()), !dbg !8798
  %3 = bitcast { i64, i64* }* %0 to i64*, !dbg !8799
  store i64 %self.0, i64* %3, align 8, !dbg !8799
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8799
  store i64* %self.1, i64** %4, align 8, !dbg !8799
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8800
  %6 = load i64, i64* %5, align 8, !dbg !8800
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8800
  %8 = load i64*, i64** %7, align 8, !dbg !8800, !nonnull !23, !noundef !23
  %9 = insertvalue { i64, i64* } undef, i64 %6, 0, !dbg !8800
  %10 = insertvalue { i64, i64* } %9, i64* %8, 1, !dbg !8800
  ret { i64, i64* } %10, !dbg !8800
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::from_internal
; Function Attrs: nonlazybind uwtable
define internal { i64, i64* } @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$13from_internal17ha18b6c4c4c0a22adE"(i64* %node, i64 %height) unnamed_addr #1 !dbg !8801 {
start:
  %ptr.dbg.spill = alloca %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %self.dbg.spill1 = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %height.dbg.spill = alloca i64, align 8
  %node.dbg.spill = alloca i64*, align 8
  %_4 = alloca i64*, align 8
  %0 = alloca { i64, i64* }, align 8
  store i64* %node, i64** %node.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %node.dbg.spill, metadata !8805, metadata !DIExpression()), !dbg !8807
  store i64 %height, i64* %height.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %height.dbg.spill, metadata !8806, metadata !DIExpression()), !dbg !8808
  store i64* %node, i64** %self.dbg.spill, align 8, !dbg !8809
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !8810, metadata !DIExpression()), !dbg !8818
  store i64* %node, i64** %self.dbg.spill1, align 8, !dbg !8818
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill1, metadata !8819, metadata !DIExpression()), !dbg !8825
  %_9 = bitcast i64* %node to %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8825
  %ptr = bitcast %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_9 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8818
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %ptr.dbg.spill, align 8, !dbg !8818
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %ptr.dbg.spill, metadata !8827, metadata !DIExpression()), !dbg !8833
  %1 = bitcast i64** %_4 to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, !dbg !8833
  store %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %ptr, %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %1, align 8, !dbg !8833
  %2 = bitcast { i64, i64* }* %0 to i64*, !dbg !8835
  store i64 %height, i64* %2, align 8, !dbg !8835
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8835
  %4 = load i64*, i64** %_4, align 8, !dbg !8835, !nonnull !23, !noundef !23
  store i64* %4, i64** %3, align 8, !dbg !8835
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 0, !dbg !8836
  %6 = load i64, i64* %5, align 8, !dbg !8836
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %0, i32 0, i32 1, !dbg !8836
  %8 = load i64*, i64** %7, align 8, !dbg !8836, !nonnull !23, !noundef !23
  %9 = insertvalue { i64, i64* } undef, i64 %6, 0, !dbg !8836
  %10 = insertvalue { i64, i64* } %9, i64* %8, 1, !dbg !8836
  ret { i64, i64* } %10, !dbg !8836
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>::as_internal_ptr
; Function Attrs: nonlazybind uwtable
define internal %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* @"_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_ptr17h62e6265bd368e9f6E"({ i64, i64* }* align 8 %this) unnamed_addr #1 !dbg !8837 {
start:
  %self.dbg.spill = alloca i64*, align 8
  %this.dbg.spill = alloca { i64, i64* }*, align 8
  store { i64, i64* }* %this, { i64, i64* }** %this.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }** %this.dbg.spill, metadata !8842, metadata !DIExpression()), !dbg !8843
  %0 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %this, i32 0, i32 1, !dbg !8844
  %self = load i64*, i64** %0, align 8, !dbg !8844, !nonnull !23, !noundef !23
  store i64* %self, i64** %self.dbg.spill, align 8, !dbg !8844
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !8845, metadata !DIExpression()), !dbg !8849
  %_4 = bitcast i64* %self to %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8849
  %1 = bitcast %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_4 to %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8844
  ret %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %1, !dbg !8850
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17hb27daaa292335ffcE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>") %0, i64 %self.0, i64* %self.1) unnamed_addr #1 !dbg !8851 {
start:
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %_6 = alloca { i64, i64* }, align 8
  %_3 = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8871, metadata !DIExpression()), !dbg !8872
  %3 = icmp eq i64 %self.0, 0, !dbg !8873
  br i1 %3, label %bb1, label %bb2, !dbg !8873

bb1:                                              ; preds = %start
  %4 = bitcast { i64, i64* }* %_3 to i64*, !dbg !8874
  store i64 %self.0, i64* %4, align 8, !dbg !8874
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_3, i32 0, i32 1, !dbg !8874
  store i64* %self.1, i64** %5, align 8, !dbg !8874
  %6 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*, !dbg !8875
  %7 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %6, i32 0, i32 1, !dbg !8875
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_3, i32 0, i32 0, !dbg !8875
  %9 = load i64, i64* %8, align 8, !dbg !8875
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_3, i32 0, i32 1, !dbg !8875
  %11 = load i64*, i64** %10, align 8, !dbg !8875, !nonnull !23, !noundef !23
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %7, i32 0, i32 0, !dbg !8875
  store i64 %9, i64* %12, align 8, !dbg !8875
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %7, i32 0, i32 1, !dbg !8875
  store i64* %11, i64** %13, align 8, !dbg !8875
  %14 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*, !dbg !8875
  store i64 0, i64* %14, align 8, !dbg !8875
  br label %bb3, !dbg !8876

bb2:                                              ; preds = %start
  %15 = bitcast { i64, i64* }* %_6 to i64*, !dbg !8877
  store i64 %self.0, i64* %15, align 8, !dbg !8877
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_6, i32 0, i32 1, !dbg !8877
  store i64* %self.1, i64** %16, align 8, !dbg !8877
  %17 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*, !dbg !8878
  %18 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %17, i32 0, i32 1, !dbg !8878
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_6, i32 0, i32 0, !dbg !8878
  %20 = load i64, i64* %19, align 8, !dbg !8878
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %_6, i32 0, i32 1, !dbg !8878
  %22 = load i64*, i64** %21, align 8, !dbg !8878, !nonnull !23, !noundef !23
  %23 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %18, i32 0, i32 0, !dbg !8878
  store i64 %20, i64* %23, align 8, !dbg !8878
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %18, i32 0, i32 1, !dbg !8878
  store i64* %22, i64** %24, align 8, !dbg !8878
  %25 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %0 to i64*, !dbg !8878
  store i64 1, i64* %25, align 8, !dbg !8878
  br label %bb3, !dbg !8876

bb3:                                              ; preds = %bb1, %bb2
  ret void, !dbg !8879
}

; alloc::collections::btree::navigate::full_range
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc11collections5btree8navigate10full_range17h20ca7ef6d3fed0bfE(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0, i64 %root1.0, i64* %root1.1, i64 %root2.0, i64* %root2.1) unnamed_addr #1 !dbg !8880 {
start:
  %root2.dbg.spill = alloca { i64, i64* }, align 8
  %root1.dbg.spill = alloca { i64, i64* }, align 8
  %_7 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_6 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_4 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_3 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root1.dbg.spill, i32 0, i32 0
  store i64 %root1.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root1.dbg.spill, i32 0, i32 1
  store i64* %root1.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %root1.dbg.spill, metadata !8885, metadata !DIExpression()), !dbg !8887
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root2.dbg.spill, i32 0, i32 0
  store i64 %root2.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root2.dbg.spill, i32 0, i32 1
  store i64* %root2.1, i64** %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %root2.dbg.spill, metadata !8886, metadata !DIExpression()), !dbg !8888
  %5 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_4 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"*, !dbg !8889
  %6 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"* %5, i32 0, i32 1, !dbg !8889
  %7 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 0, !dbg !8889
  store i64 %root1.0, i64* %7, align 8, !dbg !8889
  %8 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %6, i32 0, i32 1, !dbg !8889
  store i64* %root1.1, i64** %8, align 8, !dbg !8889
  %9 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_4 to i64*, !dbg !8889
  store i64 0, i64* %9, align 8, !dbg !8889
  %10 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !8890
  %11 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %10 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8890
  %12 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %11 to i8*, !dbg !8890
  %13 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_4 to i8*, !dbg !8890
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 32, i1 false), !dbg !8890
  %14 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"*, !dbg !8891
  %15 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"* %14, i32 0, i32 1, !dbg !8891
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 0, !dbg !8891
  store i64 %root2.0, i64* %16, align 8, !dbg !8891
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 1, !dbg !8891
  store i64* %root2.1, i64** %17, align 8, !dbg !8891
  %18 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i64*, !dbg !8891
  store i64 0, i64* %18, align 8, !dbg !8891
  %19 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_6 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !8892
  %20 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %19 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !8892
  %21 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %20 to i8*, !dbg !8892
  %22 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i8*, !dbg !8892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false), !dbg !8892
  %23 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !8893
  %24 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %23 to i8*, !dbg !8893
  %25 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to i8*, !dbg !8893
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false), !dbg !8893
  %26 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0, i32 0, i32 1, !dbg !8893
  %27 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %26 to i8*, !dbg !8893
  %28 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_6 to i8*, !dbg !8893
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 32, i1 false), !dbg !8893
  ret void, !dbg !8894
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h5eb8f82c7c9fed12E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %self.0, i64* %self.1) unnamed_addr #0 !dbg !8895 {
start:
  %leaf.dbg.spill = alloca { i64, i64* }, align 8
  %internal.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill = alloca { i64, i64* }, align 8
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_3 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>", align 8
  %node = alloca { i64, i64* }, align 8
  %1 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self.dbg.spill, i32 0, i32 1
  store i64* %self.1, i64** %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self.dbg.spill, metadata !8899, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.declare(metadata { i64, i64* }* %node, metadata !8900, metadata !DIExpression()), !dbg !8907
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0, !dbg !8908
  store i64 %self.0, i64* %3, align 8, !dbg !8908
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1, !dbg !8908
  store i64* %self.1, i64** %4, align 8, !dbg !8908
  br label %bb1, !dbg !8909

bb1:                                              ; preds = %bb8, %start
  %5 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0, !dbg !8910
  %_4.0 = load i64, i64* %5, align 8, !dbg !8910
  %6 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1, !dbg !8910
  %_4.1 = load i64*, i64** %6, align 8, !dbg !8910, !nonnull !23, !noundef !23
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::force
  call void @"_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17hb27daaa292335ffcE"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>") %_3, i64 %_4.0, i64* %_4.1), !dbg !8910
  br label %bb2, !dbg !8910

bb2:                                              ; preds = %bb1
  %7 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_3 to i64*, !dbg !8910
  %_5 = load i64, i64* %7, align 8, !dbg !8910, !range !3441, !noundef !23
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb3
  ], !dbg !8911

bb4:                                              ; preds = %bb2
  unreachable, !dbg !8910

bb5:                                              ; preds = %bb2
  %8 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_3 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"*, !dbg !8912
  %9 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf"* %8, i32 0, i32 1, !dbg !8912
  %10 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 0, !dbg !8912
  %leaf.0 = load i64, i64* %10, align 8, !dbg !8912
  %11 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %9, i32 0, i32 1, !dbg !8912
  %leaf.1 = load i64*, i64** %11, align 8, !dbg !8912, !nonnull !23, !noundef !23
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %leaf.dbg.spill, i32 0, i32 0, !dbg !8912
  store i64 %leaf.0, i64* %12, align 8, !dbg !8912
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %leaf.dbg.spill, i32 0, i32 1, !dbg !8912
  store i64* %leaf.1, i64** %13, align 8, !dbg !8912
  call void @llvm.dbg.declare(metadata { i64, i64* }* %leaf.dbg.spill, metadata !8902, metadata !DIExpression()), !dbg !8913
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h73ec67a7a97f73a8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %leaf.0, i64* %leaf.1), !dbg !8914
  br label %bb6, !dbg !8914

bb3:                                              ; preds = %bb2
  %14 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>"* %_3 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"*, !dbg !8915
  %15 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal"* %14, i32 0, i32 1, !dbg !8915
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 0, !dbg !8915
  %internal.0 = load i64, i64* %16, align 8, !dbg !8915
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %15, i32 0, i32 1, !dbg !8915
  %internal.1 = load i64*, i64** %17, align 8, !dbg !8915, !nonnull !23, !noundef !23
  %18 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %internal.dbg.spill, i32 0, i32 0, !dbg !8915
  store i64 %internal.0, i64* %18, align 8, !dbg !8915
  %19 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %internal.dbg.spill, i32 0, i32 1, !dbg !8915
  store i64* %internal.1, i64** %19, align 8, !dbg !8915
  call void @llvm.dbg.declare(metadata { i64, i64* }* %internal.dbg.spill, metadata !8904, metadata !DIExpression()), !dbg !8916
; call alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::first_edge
  call void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h663d4712bd803cc4E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %_10, i64 %internal.0, i64* %internal.1), !dbg !8917
  br label %bb7, !dbg !8917

bb7:                                              ; preds = %bb3
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  %20 = call { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17he451cd67fde09695E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_10), !dbg !8917
  %_9.0 = extractvalue { i64, i64* } %20, 0, !dbg !8917
  %_9.1 = extractvalue { i64, i64* } %20, 1, !dbg !8917
  br label %bb8, !dbg !8917

bb8:                                              ; preds = %bb7
  %21 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 0, !dbg !8918
  store i64 %_9.0, i64* %21, align 8, !dbg !8918
  %22 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %node, i32 0, i32 1, !dbg !8918
  store i64* %_9.1, i64** %22, align 8, !dbg !8918
  br label %bb1, !dbg !8909

bb6:                                              ; preds = %bb5
  ret void, !dbg !8919
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::full_range
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate178_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$10full_range17h09990fc7236fc009E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0, i64 %1, i64* %2) unnamed_addr #1 !dbg !8920 {
start:
  %self2.dbg.spill = alloca { i64, i64* }, align 8
  %slot.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill1 = alloca { i64, i8* }, align 8
  %self.dbg.spill = alloca { i64, i8* }*, align 8
  %src.dbg.spill = alloca { i64, i64* }*, align 8
  %tmp = alloca { i64, i8* }, align 8
  %self = alloca { i64, i64* }, align 8
  %3 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1
  store i64* %2, i64** %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self, metadata !8924, metadata !DIExpression()), !dbg !8927
  call void @llvm.dbg.declare(metadata { i64, i8* }* %tmp, metadata !8928, metadata !DIExpression()), !dbg !8947
  store { i64, i64* }* %self, { i64, i64* }** %src.dbg.spill, align 8, !dbg !8949
  call void @llvm.dbg.declare(metadata { i64, i64* }** %src.dbg.spill, metadata !8936, metadata !DIExpression()), !dbg !8950
  %5 = bitcast { i64, i8* }* %tmp to {}*, !dbg !8951
  store { i64, i8* }* %tmp, { i64, i8* }** %self.dbg.spill, align 8, !dbg !8947
  call void @llvm.dbg.declare(metadata { i64, i8* }** %self.dbg.spill, metadata !8957, metadata !DIExpression()), !dbg !8965
  %_9 = bitcast { i64, i8* }* %tmp to { i64, i64* }*, !dbg !8965
  %6 = bitcast { i64, i64* }* %_9 to i8*, !dbg !8947
  %7 = bitcast { i64, i64* }* %self to i8*, !dbg !8947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false), !dbg !8947
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0, !dbg !8947
  %self.0 = load i64, i64* %8, align 8, !dbg !8947
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1, !dbg !8947
  %self.1 = load i8*, i8** %9, align 8, !dbg !8947
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill1, i32 0, i32 0, !dbg !8947
  store i64 %self.0, i64* %10, align 8, !dbg !8947
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill1, i32 0, i32 1, !dbg !8947
  store i8* %self.1, i8** %11, align 8, !dbg !8947
  call void @llvm.dbg.declare(metadata { i64, i8* }* %self.dbg.spill1, metadata !8967, metadata !DIExpression()), !dbg !8973
  br label %bb2, !dbg !8973

bb2:                                              ; preds = %start
  %slot.1 = bitcast i8* %self.1 to i64*, !dbg !8973
  %12 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 0, !dbg !8973
  store i64 %self.0, i64* %12, align 8, !dbg !8973
  %13 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 1, !dbg !8973
  store i64* %slot.1, i64** %13, align 8, !dbg !8973
  call void @llvm.dbg.declare(metadata { i64, i64* }* %slot.dbg.spill, metadata !8975, metadata !DIExpression()), !dbg !8981
  %14 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self2.dbg.spill, i32 0, i32 0, !dbg !8981
  store i64 %self.0, i64* %14, align 8, !dbg !8981
  %15 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self2.dbg.spill, i32 0, i32 1, !dbg !8981
  store i64* %slot.1, i64** %15, align 8, !dbg !8981
  call void @llvm.dbg.declare(metadata { i64, i64* }* %self2.dbg.spill, metadata !8925, metadata !DIExpression()), !dbg !8983
  %16 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 0, !dbg !8984
  %_5.0 = load i64, i64* %16, align 8, !dbg !8984
  %17 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %self, i32 0, i32 1, !dbg !8984
  %_5.1 = load i64*, i64** %17, align 8, !dbg !8984, !nonnull !23, !noundef !23
; call alloc::collections::btree::navigate::full_range
  call void @_ZN5alloc11collections5btree8navigate10full_range17h20ca7ef6d3fed0bfE(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0, i64 %_5.0, i64* %_5.1, i64 %self.0, i64* %slot.1), !dbg !8985
  br label %bb1, !dbg !8985

bb1:                                              ; preds = %bb2
  ret void, !dbg !8986
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::next_leaf_edge
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17h0e84692745fae49cE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self) unnamed_addr #1 !dbg !8987 {
start:
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %next_internal_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %internal_kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_6 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %leaf_kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_3 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self, metadata !8991, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %leaf_kv, metadata !8992, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %internal_kv, metadata !8994, metadata !DIExpression()), !dbg !9000
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %next_internal_edge, metadata !8996, metadata !DIExpression()), !dbg !9001
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_3 to i8*, !dbg !9002
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %self to i8*, !dbg !9002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !9002
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,Type>::force
  call void @"_ZN5alloc11collections5btree4node145Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$Type$GT$5force17hfbd0a9b1230b8ee9E"(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>") %_2, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_3), !dbg !9002
  br label %bb1, !dbg !9002

bb1:                                              ; preds = %start
  %3 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %_2 to i64*, !dbg !9002
  %_4 = load i64, i64* %3, align 8, !dbg !9002, !range !3441, !noundef !23
  switch i64 %_4, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !9003

bb3:                                              ; preds = %bb1
  unreachable, !dbg !9002

bb4:                                              ; preds = %bb1
  %4 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"*, !dbg !9004
  %5 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf"* %4, i32 0, i32 1, !dbg !9004
  %6 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %leaf_kv to i8*, !dbg !9004
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %5 to i8*, !dbg !9004
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !9004
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6 to i8*, !dbg !9005
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %leaf_kv to i8*, !dbg !9005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !9005
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h7762fe9aa2a1c8a5E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>"* %_6), !dbg !9005
  br label %bb5, !dbg !9005

bb2:                                              ; preds = %bb1
  %10 = bitcast %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"*, !dbg !9006
  %11 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal", %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal"* %10, i32 0, i32 1, !dbg !9006
  %12 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %internal_kv to i8*, !dbg !9006
  %13 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %11 to i8*, !dbg !9006
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !9006
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_9 to i8*, !dbg !9007
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %internal_kv to i8*, !dbg !9007
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !9007
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::right_edge
  call void @"_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h11a7443e9d73e3a2E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>") %next_internal_edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>"* %_9), !dbg !9007
  br label %bb6, !dbg !9007

bb6:                                              ; preds = %bb2
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_11 to i8*, !dbg !9008
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %next_internal_edge to i8*, !dbg !9008
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false), !dbg !9008
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::descend
  %18 = call { i64, i64* } @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17he451cd67fde09695E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_11), !dbg !9008
  %_10.0 = extractvalue { i64, i64* } %18, 0, !dbg !9008
  %_10.1 = extractvalue { i64, i64* } %18, 1, !dbg !9008
  br label %bb7, !dbg !9008

bb7:                                              ; preds = %bb6
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h5eb8f82c7c9fed12E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %0, i64 %_10.0, i64* %_10.1), !dbg !9008
  br label %bb8, !dbg !9008

bb8:                                              ; preds = %bb7
  br label %bb9, !dbg !9009

bb9:                                              ; preds = %bb5, %bb8
  ret void, !dbg !9010

bb5:                                              ; preds = %bb4
  br label %bb9, !dbg !9011
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_end
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$16deallocating_end17h70842e389ae01b60E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9012 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_13 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %parent_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_5 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !9016, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !9017, metadata !DIExpression()), !dbg !9023
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge, metadata !9018, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge, metadata !9020, metadata !DIExpression()), !dbg !9025
  %1 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*, !dbg !9026
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to i8*, !dbg !9026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !9026
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  invoke void @"_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hb1330551cb6ab415E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4)
          to label %bb1 unwind label %cleanup, !dbg !9026

bb10:                                             ; preds = %cleanup
  br label %bb11, !dbg !9027

cleanup:                                          ; preds = %bb6, %bb4, %bb3, %bb2, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb10

bb1:                                              ; preds = %start
  br label %bb2, !dbg !9028

bb2:                                              ; preds = %bb7, %bb1
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_7 to i8*, !dbg !9029
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9029
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !9029
; invoke alloc::collections::btree::node::Handle<Node,Type>::into_node
  %10 = invoke { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h00b80403e15e9ff8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_7)
          to label %bb3 unwind label %cleanup, !dbg !9029

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { i64, i64* } %10, 0, !dbg !9029
  %_6.1 = extractvalue { i64, i64* } %10, 1, !dbg !9029
; invoke <alloc::alloc::Global as core::clone::Clone>::clone
  invoke void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h6ba0f722ea16ada6E"(%"alloc::alloc::Global"* align 1 %alloc)
          to label %bb4 unwind label %cleanup, !dbg !9030

bb4:                                              ; preds = %bb3
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
  invoke void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17hf48d8970239e4d49E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %_5, i64 %_6.0, i64* %_6.1)
          to label %bb5 unwind label %cleanup, !dbg !9029

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_5, i32 0, i32 1, !dbg !9031
  %12 = load {}*, {}** %11, align 8, !dbg !9031
  %13 = icmp eq {}* %12, null, !dbg !9031
  %_10 = select i1 %13, i64 0, i64 1, !dbg !9031
  %14 = icmp eq i64 %_10, 1, !dbg !9031
  br i1 %14, label %bb6, label %bb8, !dbg !9031

bb6:                                              ; preds = %bb5
  %15 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_5 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !9025
  %16 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %15 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9025
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge to i8*, !dbg !9025
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %16 to i8*, !dbg !9025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !9025
  %19 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_13 to i8*, !dbg !9032
  %20 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge to i8*, !dbg !9032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !dbg !9032
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  invoke void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h3889dc7713b976adE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %_12, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_13)
          to label %bb7 unwind label %cleanup, !dbg !9032

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !9027

bb9:                                              ; preds = %bb8
  ret void, !dbg !9033

bb7:                                              ; preds = %bb6
  %21 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9034
  %22 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_12 to i8*, !dbg !9034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false), !dbg !9034
  br label %bb2, !dbg !9028

bb11:                                             ; preds = %bb10
  %23 = bitcast { i8*, i32 }* %0 to i8**, !dbg !9035
  %24 = load i8*, i8** %23, align 8, !dbg !9035
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !9035
  %26 = load i32, i32* %25, align 8, !dbg !9035
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0, !dbg !9035
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1, !dbg !9035
  resume { i8*, i32 } %28, !dbg !9035
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$17deallocating_next17hcb30adc3deea874fE"(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* sret(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9036 {
start:
  %self.dbg.spill = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"*, align 8
  %src.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  %self1 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  %_24 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %parent_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_19 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_17 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %last_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_15 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_10 = alloca { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, metadata !9057, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !9058, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge, metadata !9059, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv, metadata !9061, metadata !DIExpression()), !dbg !9070
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %last_edge, metadata !9063, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge, metadata !9065, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp, metadata !9073, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %self1, metadata !9092, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %slot, metadata !9100, metadata !DIExpression()), !dbg !9106
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*, !dbg !9108
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self to i8*, !dbg !9108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !9108
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  invoke void @"_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hb1330551cb6ab415E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4)
          to label %bb1 unwind label %cleanup, !dbg !9108

bb17:                                             ; preds = %cleanup
  br label %bb18, !dbg !9109

cleanup:                                          ; preds = %bb19, %bb13, %bb9, %bb8, %bb4, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb17

bb1:                                              ; preds = %start
  br label %bb2, !dbg !9110

bb2:                                              ; preds = %bb14, %bb1
  %9 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_7 to i8*, !dbg !9111
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !9111
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,NodeType>,alloc::collections::btree::node::marker::Edge>::right_kv
  invoke void @"_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17hbe45476ad7de42bfE"(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>") %_6, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_7)
          to label %bb3 unwind label %cleanup, !dbg !9111

bb3:                                              ; preds = %bb2
  %11 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %_6 to i64*, !dbg !9111
  %_8 = load i64, i64* %11, align 8, !dbg !9111, !range !3441, !noundef !23
  switch i64 %_8, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !9112

bb5:                                              ; preds = %bb3
  unreachable, !dbg !9111

bb6:                                              ; preds = %bb3
  %12 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %_6 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"*, !dbg !9113
  %13 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok"* %12, i32 0, i32 1, !dbg !9113
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !9113
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %13 to i8*, !dbg !9113
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !9113
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"** %src.dbg.spill, align 8, !dbg !9114
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"** %src.dbg.spill, metadata !9081, metadata !DIExpression()), !dbg !9115
  %16 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp to {}*, !dbg !9116
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"** %self.dbg.spill, align 8, !dbg !9090
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"** %self.dbg.spill, metadata !9122, metadata !DIExpression()), !dbg !9130
  %_27 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !9130
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_27 to i8*, !dbg !9090
  %18 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !9090
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !9090
  %19 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %self1 to i8*, !dbg !9090
  %20 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %tmp to i8*, !dbg !9090
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !dbg !9090
  br label %bb19, !dbg !9098

bb4:                                              ; preds = %bb3
  %21 = bitcast %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>"* %_6 to %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"*, !dbg !9132
  %22 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err", %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err"* %21, i32 0, i32 1, !dbg !9132
  %23 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %last_edge to i8*, !dbg !9132
  %24 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %22 to i8*, !dbg !9132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false), !dbg !9132
  %25 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_19 to i8*, !dbg !9133
  %26 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %last_edge to i8*, !dbg !9133
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !9133
; invoke alloc::collections::btree::node::Handle<Node,Type>::into_node
  %27 = invoke { i64, i64* } @"_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h00b80403e15e9ff8E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_19)
          to label %bb8 unwind label %cleanup, !dbg !9133

bb8:                                              ; preds = %bb4
  %_18.0 = extractvalue { i64, i64* } %27, 0, !dbg !9133
  %_18.1 = extractvalue { i64, i64* } %27, 1, !dbg !9133
; invoke <alloc::alloc::Global as core::clone::Clone>::clone
  invoke void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h6ba0f722ea16ada6E"(%"alloc::alloc::Global"* align 1 %alloc)
          to label %bb9 unwind label %cleanup, !dbg !9134

bb9:                                              ; preds = %bb8
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
  invoke void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17hf48d8970239e4d49E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") %_17, i64 %_18.0, i64* %_18.1)
          to label %bb10 unwind label %cleanup, !dbg !9133

bb10:                                             ; preds = %bb9
  %28 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_17, i32 0, i32 1, !dbg !9135
  %29 = load {}*, {}** %28, align 8, !dbg !9135
  %30 = icmp eq {}* %29, null, !dbg !9135
  %_22 = select i1 %30, i64 0, i64 1, !dbg !9135
  switch i64 %_22, label %bb12 [
    i64 0, label %bb11
    i64 1, label %bb13
  ], !dbg !9136

bb12:                                             ; preds = %bb10
  unreachable, !dbg !9135

bb11:                                             ; preds = %bb10
  %31 = getelementptr inbounds %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %0, i32 0, i32 1, !dbg !9137
  store {}* null, {}** %31, align 8, !dbg !9137
  br label %bb15, !dbg !9138

bb13:                                             ; preds = %bb10
  %32 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>"* %_17 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !9140
  %33 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>::Some"* %32 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9140
  %34 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge to i8*, !dbg !9140
  %35 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %33 to i8*, !dbg !9140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false), !dbg !9140
  %36 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_24 to i8*, !dbg !9141
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %parent_edge to i8*, !dbg !9141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false), !dbg !9141
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::forget_node_type
  invoke void @"_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h3889dc7713b976adE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>") %_5, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>"* %_24)
          to label %bb14 unwind label %cleanup, !dbg !9141

bb14:                                             ; preds = %bb13
  %38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9142
  %39 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>"* %_5 to i8*, !dbg !9142
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false), !dbg !9142
  br label %bb2, !dbg !9110

bb15:                                             ; preds = %bb7, %bb11
  br label %bb16, !dbg !9109

bb19:                                             ; preds = %bb6
  %40 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %self1 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"*, !dbg !9098
  %41 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %slot to i8*, !dbg !9098
  %42 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %40 to i8*, !dbg !9098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false), !dbg !9098
  %43 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %slot to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !9106
  %44 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_12 to i8*, !dbg !9106
  %45 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %43 to i8*, !dbg !9106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false), !dbg !9106
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::next_leaf_edge
  invoke void @"_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17h0e84692745fae49cE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %_11, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_12)
          to label %bb7 unwind label %cleanup, !dbg !9143

bb7:                                              ; preds = %bb19
  %46 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_15 to i8*, !dbg !9144
  %47 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !9144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false), !dbg !9144
  %48 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_10 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9145
  %49 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %48 to i8*, !dbg !9145
  %50 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_11 to i8*, !dbg !9145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false), !dbg !9145
  %51 = getelementptr inbounds { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_10, i32 0, i32 1, !dbg !9145
  %52 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %51 to i8*, !dbg !9145
  %53 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_15 to i8*, !dbg !9145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false), !dbg !9145
  %54 = bitcast %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %0 to %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some"*, !dbg !9146
  %55 = bitcast %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some"* %54 to { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }*, !dbg !9146
  %56 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %55 to i8*, !dbg !9146
  %57 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %_10 to i8*, !dbg !9146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 48, i1 false), !dbg !9146
  br label %bb15, !dbg !9138

bb18:                                             ; preds = %bb17
  %58 = bitcast { i8*, i32 }* %1 to i8**, !dbg !9147
  %59 = load i8*, i8** %58, align 8, !dbg !9147
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !9147
  %61 = load i32, i32* %60, align 8, !dbg !9147
  %62 = insertvalue { i8*, i32 } undef, i8* %59, 0, !dbg !9147
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1, !dbg !9147
  resume { i8*, i32 } %63, !dbg !9147

bb16:                                             ; preds = %bb15
  ret void, !dbg !9148
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked17h24b1d1a4f23493ffE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 %self) unnamed_addr #1 !dbg !9149 {
start:
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %self.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %_4 = alloca %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]", align 1
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %self, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %self.dbg.spill, metadata !9153, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !9154, metadata !DIExpression()), !dbg !9156
  %1 = bitcast %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]"* %_4 to %"alloc::alloc::Global"*, !dbg !9157
; call alloc::collections::btree::mem::replace
  call void @_ZN5alloc11collections5btree3mem7replace17h3bb8a3090da09082E(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 %self), !dbg !9158
  br label %bb1, !dbg !9158

bb1:                                              ; preds = %start
  ret void, !dbg !9159
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hac7949a33984b5a4E"({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* sret({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }) %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf_edge) unnamed_addr #0 !dbg !9160 {
start:
  %_1.dbg.spill = alloca %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]", align 1
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %self = alloca %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", align 8
  %1 = bitcast %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill to %"alloc::alloc::Global"*
  call void @llvm.dbg.declare(metadata %"[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !9165, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf_edge, metadata !9164, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.declare(metadata %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %self, metadata !9168, metadata !DIExpression()), !dbg !9177
  %2 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4 to i8*, !dbg !9178
  %3 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %leaf_edge to i8*, !dbg !9178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !9178
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next
  call void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$17deallocating_next17hcb30adc3deea874fE"(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* sret(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>") %self, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_4), !dbg !9178
  br label %bb1, !dbg !9178

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %self, i32 0, i32 1, !dbg !9177
  %5 = load {}*, {}** %4, align 8, !dbg !9177
  %6 = icmp eq {}* %5, null, !dbg !9177
  %_6 = select i1 %6, i64 0, i64 1, !dbg !9177
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !9177

bb3:                                              ; preds = %bb1
  unreachable, !dbg !9177

bb2:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc549 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc548 to %"core::panic::location::Location"*)) #15, !dbg !9177
  unreachable, !dbg !9177

bb4:                                              ; preds = %bb1
  %7 = bitcast %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>"* %self to %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some"*, !dbg !9177
  %8 = bitcast %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>::Some"* %7 to { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }*, !dbg !9177
  %9 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %0 to i8*, !dbg !9177
  %10 = bitcast { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }* %8 to i8*, !dbg !9177
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 48, i1 false), !dbg !9177
  ret void, !dbg !9179
}

; alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::init_front
; Function Attrs: nonlazybind uwtable
define internal align 8 i64* @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$10init_front17h051ab7ea3f748fdaE"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #1 !dbg !9180 {
start:
  %edge.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %slot.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill2 = alloca { i64, i8* }, align 8
  %self.dbg.spill1 = alloca { i64, i8* }*, align 8
  %src.dbg.spill = alloca { i64, i64* }*, align 8
  %root.dbg.spill = alloca { i64, i64* }*, align 8
  %self.dbg.spill = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %tmp = alloca { i64, i8* }, align 8
  %_8 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_7 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_6 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %0 = alloca i64*, align 8
  store %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !9198, metadata !DIExpression()), !dbg !9203
  call void @llvm.dbg.declare(metadata { i64, i8* }* %tmp, metadata !9204, metadata !DIExpression()), !dbg !9211
  %_2 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9213
  %1 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to i64*, !dbg !9214
  %2 = load i64, i64* %1, align 8, !dbg !9214, !range !4936, !noundef !23
  %3 = sub i64 %2, 2, !dbg !9214
  %4 = icmp eq i64 %3, 0, !dbg !9214
  %_4 = select i1 %4, i64 0, i64 1, !dbg !9214
  %5 = icmp eq i64 %_4, 1, !dbg !9214
  br i1 %5, label %bb1, label %bb4, !dbg !9214

bb1:                                              ; preds = %start
  %6 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9214
  %7 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %6 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9214
  %8 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %7 to i64*, !dbg !9214
  %_3 = load i64, i64* %8, align 8, !dbg !9214, !range !3441, !noundef !23
  %9 = icmp eq i64 %_3, 0, !dbg !9214
  br i1 %9, label %bb2, label %bb4, !dbg !9214

bb4:                                              ; preds = %bb3, %bb1, %start
  %_11 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9215
  %10 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_11 to i64*, !dbg !9215
  %11 = load i64, i64* %10, align 8, !dbg !9215, !range !4936, !noundef !23
  %12 = sub i64 %11, 2, !dbg !9215
  %13 = icmp eq i64 %12, 0, !dbg !9215
  %_13 = select i1 %13, i64 0, i64 1, !dbg !9215
  switch i64 %_13, label %bb7 [
    i64 0, label %bb8
    i64 1, label %bb5
  ], !dbg !9216

bb2:                                              ; preds = %bb1
  %14 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9217
  %15 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %14 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9217
  %16 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %15 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"*, !dbg !9217
  %root = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"* %16, i32 0, i32 1, !dbg !9217
  store { i64, i64* }* %root, { i64, i64* }** %root.dbg.spill, align 8, !dbg !9217
  call void @llvm.dbg.declare(metadata { i64, i64* }** %root.dbg.spill, metadata !9199, metadata !DIExpression()), !dbg !9217
  store { i64, i64* }* %root, { i64, i64* }** %src.dbg.spill, align 8, !dbg !9218
  call void @llvm.dbg.declare(metadata { i64, i64* }** %src.dbg.spill, metadata !9209, metadata !DIExpression()), !dbg !9219
  %17 = bitcast { i64, i8* }* %tmp to {}*, !dbg !9220
  store { i64, i8* }* %tmp, { i64, i8* }** %self.dbg.spill1, align 8, !dbg !9211
  call void @llvm.dbg.declare(metadata { i64, i8* }** %self.dbg.spill1, metadata !9224, metadata !DIExpression()), !dbg !9228
  %_18 = bitcast { i64, i8* }* %tmp to { i64, i64* }*, !dbg !9228
  %18 = bitcast { i64, i64* }* %_18 to i8*, !dbg !9211
  %19 = bitcast { i64, i64* }* %root to i8*, !dbg !9211
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !dbg !9211
  %20 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0, !dbg !9211
  %self.0 = load i64, i64* %20, align 8, !dbg !9211
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1, !dbg !9211
  %self.1 = load i8*, i8** %21, align 8, !dbg !9211
  %22 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill2, i32 0, i32 0, !dbg !9211
  store i64 %self.0, i64* %22, align 8, !dbg !9211
  %23 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %self.dbg.spill2, i32 0, i32 1, !dbg !9211
  store i8* %self.1, i8** %23, align 8, !dbg !9211
  call void @llvm.dbg.declare(metadata { i64, i8* }* %self.dbg.spill2, metadata !9230, metadata !DIExpression()), !dbg !9234
  br label %bb11, !dbg !9234

bb11:                                             ; preds = %bb2
  %slot.1 = bitcast i8* %self.1 to i64*, !dbg !9234
  %24 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 0, !dbg !9234
  store i64 %self.0, i64* %24, align 8, !dbg !9234
  %25 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %slot.dbg.spill, i32 0, i32 1, !dbg !9234
  store i64* %slot.1, i64** %25, align 8, !dbg !9234
  call void @llvm.dbg.declare(metadata { i64, i64* }* %slot.dbg.spill, metadata !9236, metadata !DIExpression()), !dbg !9240
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h5eb8f82c7c9fed12E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %_8, i64 %self.0, i64* %slot.1), !dbg !9242
  br label %bb3, !dbg !9242

bb3:                                              ; preds = %bb11
  %26 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"*, !dbg !9243
  %27 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"* %26, i32 0, i32 1, !dbg !9243
  %28 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %27 to i8*, !dbg !9243
  %29 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_8 to i8*, !dbg !9243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false), !dbg !9243
  %30 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i64*, !dbg !9243
  store i64 1, i64* %30, align 8, !dbg !9243
  %31 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_6 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9244
  %32 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %31 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9244
  %33 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %32 to i8*, !dbg !9244
  %34 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i8*, !dbg !9244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 32, i1 false), !dbg !9244
  %35 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9245
  %36 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %35 to i8*, !dbg !9245
  %37 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_6 to i8*, !dbg !9245
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 32, i1 false), !dbg !9245
  br label %bb4, !dbg !9246

bb7:                                              ; preds = %bb5, %bb4
  unreachable, !dbg !9215

bb8:                                              ; preds = %bb4
  %38 = bitcast i64** %0 to {}**, !dbg !9247
  store {}* null, {}** %38, align 8, !dbg !9247
  br label %bb10, !dbg !9247

bb5:                                              ; preds = %bb4
  %39 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_11 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9215
  %40 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %39 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9215
  %41 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %40 to i64*, !dbg !9215
  %_12 = load i64, i64* %41, align 8, !dbg !9215, !range !3441, !noundef !23
  switch i64 %_12, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb9
  ], !dbg !9216

bb6:                                              ; preds = %bb5
  unreachable, !dbg !9248

bb9:                                              ; preds = %bb5
  %42 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_11 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9252
  %43 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %42 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9252
  %44 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %43 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"*, !dbg !9252
  %edge = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"* %44, i32 0, i32 1, !dbg !9252
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %edge.dbg.spill, align 8, !dbg !9252
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %edge.dbg.spill, metadata !9201, metadata !DIExpression()), !dbg !9253
  %45 = bitcast i64** %0 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"**, !dbg !9254
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %45, align 8, !dbg !9254
  br label %bb10, !dbg !9255

bb10:                                             ; preds = %bb8, %bb9
  %46 = load i64*, i64** %0, align 8, !dbg !9256, !align !584
  ret i64* %46, !dbg !9256
}

; alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::none
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$4none17h695ba281fab6cef3E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %0) unnamed_addr #1 !dbg !9257 {
start:
  %_2 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_1 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %1 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_1 to i64*, !dbg !9260
  store i64 2, i64* %1, align 8, !dbg !9260
  %2 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to i64*, !dbg !9261
  store i64 2, i64* %2, align 8, !dbg !9261
  %3 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9262
  %4 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %3 to i8*, !dbg !9262
  %5 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_1 to i8*, !dbg !9262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 32, i1 false), !dbg !9262
  %6 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %0, i32 0, i32 1, !dbg !9262
  %7 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %6 to i8*, !dbg !9262
  %8 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_2 to i8*, !dbg !9262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false), !dbg !9262
  ret void, !dbg !9263
}

; alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::take_front
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$10take_front17hab82452c2cbf074cE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>") %0, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #1 !dbg !9264 {
start:
  %root.dbg.spill = alloca { i64, i64* }, align 8
  %self.dbg.spill4 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %residual.dbg.spill2 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_20 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %v = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_17 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_15 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_12 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %val = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %self1 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_3 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_2 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  store %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !9279, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1, metadata !9289, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !9280, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill2, metadata !9316, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %val, metadata !9282, metadata !DIExpression()), !dbg !9324
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge, metadata !9286, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %v, metadata !9310, metadata !DIExpression()), !dbg !9326
  %self3 = bitcast %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !9314
  store %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self3, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill4, align 8, !dbg !9314
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill4, metadata !9327, metadata !DIExpression()), !dbg !9333
  %1 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_17 to i64*, !dbg !9333
  store i64 2, i64* %1, align 8, !dbg !9333
; call core::mem::replace
  call void @_ZN4core3mem7replace17hda57ce3c37e1415dE(%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* sret(%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>") %self1, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* align 8 %self3, %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_17), !dbg !9333
  br label %bb11, !dbg !9333

bb11:                                             ; preds = %start
  %2 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1 to i64*, !dbg !9313
  %3 = load i64, i64* %2, align 8, !dbg !9313, !range !4936, !noundef !23
  %4 = sub i64 %3, 2, !dbg !9313
  %5 = icmp eq i64 %4, 0, !dbg !9313
  %_18 = select i1 %5, i64 0, i64 1, !dbg !9313
  switch i64 %_18, label %bb13 [
    i64 0, label %bb12
    i64 1, label %bb14
  ], !dbg !9313

bb13:                                             ; preds = %bb11
  unreachable, !dbg !9313

bb12:                                             ; preds = %bb11
  %6 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to i64*, !dbg !9313
  store i64 2, i64* %6, align 8, !dbg !9313
  br label %bb1, !dbg !9313

bb14:                                             ; preds = %bb11
  %7 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1 to %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"*, !dbg !9313
  %8 = bitcast %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some"* %7 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9313
  %9 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %v to i8*, !dbg !9313
  %10 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %8 to i8*, !dbg !9313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 32, i1 false), !dbg !9313
  %11 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_20 to i8*, !dbg !9326
  %12 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %v to i8*, !dbg !9326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 32, i1 false), !dbg !9326
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue"*, !dbg !9326
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue"* %13 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9326
  %15 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %14 to i8*, !dbg !9326
  %16 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_20 to i8*, !dbg !9326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 32, i1 false), !dbg !9326
  br label %bb1, !dbg !9313

bb1:                                              ; preds = %bb12, %bb14
  %17 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to i64*, !dbg !9314
  %18 = load i64, i64* %17, align 8, !dbg !9314, !range !4936, !noundef !23
  %19 = sub i64 %18, 2, !dbg !9314
  %20 = icmp eq i64 %19, 0, !dbg !9314
  %_6 = select i1 %20, i64 1, i64 0, !dbg !9314
  switch i64 %_6, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !9314

bb3:                                              ; preds = %bb1
  unreachable, !dbg !9314

bb2:                                              ; preds = %bb1
  %21 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %_3 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue"*, !dbg !9314
  %22 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue"* %21 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !9314
  %23 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %val to i8*, !dbg !9314
  %24 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %22 to i8*, !dbg !9314
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 32, i1 false), !dbg !9314
  %25 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_2 to i8*, !dbg !9324
  %26 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %val to i8*, !dbg !9324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false), !dbg !9324
  %27 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_2 to i64*, !dbg !9314
  %_10 = load i64, i64* %27, align 8, !dbg !9314, !range !3441, !noundef !23
  switch i64 %_10, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ], !dbg !9334

bb4:                                              ; preds = %bb1
  %28 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0, i32 0, i32 1, !dbg !9322
  store {}* null, {}** %28, align 8, !dbg !9322
  br label %bb10, !dbg !9335

bb10:                                             ; preds = %bb9, %bb4
  ret void, !dbg !9335

bb6:                                              ; preds = %bb2
  unreachable, !dbg !9314

bb7:                                              ; preds = %bb2
  %29 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_2 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"*, !dbg !9336
  %30 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root"* %29, i32 0, i32 1, !dbg !9336
  %31 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %30, i32 0, i32 0, !dbg !9336
  %root.0 = load i64, i64* %31, align 8, !dbg !9336
  %32 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %30, i32 0, i32 1, !dbg !9336
  %root.1 = load i64*, i64** %32, align 8, !dbg !9336, !nonnull !23, !noundef !23
  %33 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root.dbg.spill, i32 0, i32 0, !dbg !9336
  store i64 %root.0, i64* %33, align 8, !dbg !9336
  %34 = getelementptr inbounds { i64, i64* }, { i64, i64* }* %root.dbg.spill, i32 0, i32 1, !dbg !9336
  store i64* %root.1, i64** %34, align 8, !dbg !9336
  call void @llvm.dbg.declare(metadata { i64, i64* }* %root.dbg.spill, metadata !9284, metadata !DIExpression()), !dbg !9337
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h5eb8f82c7c9fed12E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") %_12, i64 %root.0, i64* %root.1), !dbg !9338
  br label %bb8, !dbg !9338

bb5:                                              ; preds = %bb2
  %35 = bitcast %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_2 to %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"*, !dbg !9339
  %36 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge", %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Edge"* %35, i32 0, i32 1, !dbg !9339
  %37 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9339
  %38 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %36 to i8*, !dbg !9339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false), !dbg !9339
  %39 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_15 to i8*, !dbg !9340
  %40 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %edge to i8*, !dbg !9340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false), !dbg !9340
  %41 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !9341
  %42 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %41 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9341
  %43 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %42 to i8*, !dbg !9341
  %44 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_15 to i8*, !dbg !9341
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false), !dbg !9341
  br label %bb9, !dbg !9342

bb9:                                              ; preds = %bb8, %bb5
  br label %bb10, !dbg !9335

bb8:                                              ; preds = %bb7
  %45 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %0 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !9343
  %46 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %45 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9343
  %47 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %46 to i8*, !dbg !9343
  %48 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_12 to i8*, !dbg !9343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false), !dbg !9343
  br label %bb9, !dbg !9344
}

; alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_end
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$16deallocating_end17hcac9195533f97ea8E"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9345 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %self.dbg.spill = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_9 = alloca i8, align 1
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %front = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_3 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  store %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !9349, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !9350, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front, metadata !9351, metadata !DIExpression()), !dbg !9355
  store i8 1, i8* %_9, align 1, !dbg !9356
; invoke alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::take_front
  invoke void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$10take_front17hab82452c2cbf074cE"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>") %_3, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self)
          to label %bb1 unwind label %cleanup, !dbg !9356

bb9:                                              ; preds = %cleanup
  %1 = load i8, i8* %_9, align 1, !dbg !9357, !range !512, !noundef !23
  %2 = trunc i8 %1 to i1, !dbg !9357
  br i1 %2, label %bb8, label %bb6, !dbg !9357

cleanup:                                          ; preds = %bb2, %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb9

bb1:                                              ; preds = %start
  %8 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_3, i32 0, i32 1, !dbg !9358
  %9 = load {}*, {}** %8, align 8, !dbg !9358
  %10 = icmp eq {}* %9, null, !dbg !9358
  %_5 = select i1 %10, i64 0, i64 1, !dbg !9358
  %11 = icmp eq i64 %_5, 1, !dbg !9358
  br i1 %11, label %bb2, label %bb4, !dbg !9358

bb2:                                              ; preds = %bb1
  %12 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>"* %_3 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"*, !dbg !9355
  %13 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::Some"* %12 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, !dbg !9355
  %14 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front to i8*, !dbg !9355
  %15 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %13 to i8*, !dbg !9355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !9355
  %16 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_7 to i8*, !dbg !9359
  %17 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front to i8*, !dbg !9359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false), !dbg !9359
  store i8 0, i8* %_9, align 1, !dbg !9360
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_end
  invoke void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$16deallocating_end17h70842e389ae01b60E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %_7)
          to label %bb3 unwind label %cleanup, !dbg !9359

bb4:                                              ; preds = %bb3, %bb1
  %18 = load i8, i8* %_9, align 1, !dbg !9357, !range !512, !noundef !23
  %19 = trunc i8 %18 to i1, !dbg !9357
  br i1 %19, label %bb7, label %bb5, !dbg !9357

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !9361

bb6:                                              ; preds = %bb8, %bb9
  %20 = bitcast { i8*, i32 }* %0 to i8**, !dbg !9362
  %21 = load i8*, i8** %20, align 8, !dbg !9362
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !9362
  %23 = load i32, i32* %22, align 8, !dbg !9362
  %24 = insertvalue { i8*, i32 } undef, i8* %21, 0, !dbg !9362
  %25 = insertvalue { i8*, i32 } %24, i32 %23, 1, !dbg !9362
  resume { i8*, i32 } %25, !dbg !9362

bb8:                                              ; preds = %bb9
  br label %bb6, !dbg !9357

bb5:                                              ; preds = %bb7, %bb4
  ret void, !dbg !9363

bb7:                                              ; preds = %bb4
  br label %bb5, !dbg !9357
}

; alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_next_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$27deallocating_next_unchecked17hfef80dde6c665133E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9364 {
start:
  %front.dbg.spill = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %self.dbg.spill = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_9 = alloca i8, align 1
  %self1 = alloca i64*, align 8
  store %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !9368, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !9369, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.declare(metadata i64** %self1, metadata !9374, metadata !DIExpression()), !dbg !9383
  store i8 1, i8* %_9, align 1, !dbg !9385
; invoke alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::init_front
  %2 = invoke align 8 i64* @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$10init_front17h051ab7ea3f748fdaE"(%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self)
          to label %bb1 unwind label %cleanup, !dbg !9384

bb5:                                              ; preds = %cleanup
  %3 = load i8, i8* %_9, align 1, !dbg !9386, !range !512, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !9386
  br i1 %4, label %bb4, label %bb3, !dbg !9386

cleanup:                                          ; preds = %bb6, %bb8, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i64* %2, i64** %self1, align 8, !dbg !9384
  %10 = bitcast i64** %self1 to {}**, !dbg !9383
  %11 = load {}*, {}** %10, align 8, !dbg !9383
  %12 = icmp eq {}* %11, null, !dbg !9383
  %_10 = select i1 %12, i64 0, i64 1, !dbg !9383
  switch i64 %_10, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !9383

bb7:                                              ; preds = %bb1
  unreachable, !dbg !9383

bb6:                                              ; preds = %bb1
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast (<{ [43 x i8] }>* @alloc549 to [0 x i8]*), i64 43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc551 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !9383

bb8:                                              ; preds = %bb1
  %13 = bitcast i64** %self1 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"**, !dbg !9383
  %front = load %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"*, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %13, align 8, !dbg !9383, !nonnull !23, !align !584, !noundef !23
  store %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* %front, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %front.dbg.spill, align 8, !dbg !9383
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %front.dbg.spill, metadata !9370, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"** %front.dbg.spill, metadata !9380, metadata !DIExpression()), !dbg !9388
  store i8 0, i8* %_9, align 1, !dbg !9389
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked
  invoke void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked17h24b1d1a4f23493ffE"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") %0, %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>"* align 8 %front)
          to label %bb2 unwind label %cleanup, !dbg !9390

bb2:                                              ; preds = %bb8
  ret void, !dbg !9391

unreachable:                                      ; preds = %bb6
  unreachable

bb3:                                              ; preds = %bb4, %bb5
  %14 = bitcast { i8*, i32 }* %1 to i8**, !dbg !9392
  %15 = load i8*, i8** %14, align 8, !dbg !9392
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !9392
  %17 = load i32, i32* %16, align 8, !dbg !9392
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !9392
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !9392
  resume { i8*, i32 } %19, !dbg !9392

bb4:                                              ; preds = %bb5
  br label %bb3, !dbg !9386
}

; alloc::str::join_generic_copy
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc3str17join_generic_copy17h8f737c87c8b13d55E(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %0, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, [0 x i8]* align 1 %sep.0, i64 %sep.1) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !9393 {
start:
  %new_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill182 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %result_len.dbg.spill = alloca i64, align 8
  %self.dbg.spill181 = alloca { [0 x i8]*, i64 }, align 8
  %remain.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill180 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill177 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill174 = alloca i64, align 8
  %self.dbg.spill172 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill171 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill168 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill165 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill162 = alloca i64, align 8
  %self.dbg.spill160 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill159 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill156 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill155 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill154 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill151 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill148 = alloca i64, align 8
  %self.dbg.spill146 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill145 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill142 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill139 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill136 = alloca i64, align 8
  %self.dbg.spill134 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill133 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill130 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill129 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill128 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill125 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill122 = alloca i64, align 8
  %self.dbg.spill120 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill119 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill116 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill113 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill110 = alloca i64, align 8
  %self.dbg.spill108 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill107 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill104 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill103 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill102 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill99 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill96 = alloca i64, align 8
  %self.dbg.spill94 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill93 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill90 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill87 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill84 = alloca i64, align 8
  %self.dbg.spill82 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill81 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill78 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill77 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill76 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill73 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill70 = alloca i64, align 8
  %self.dbg.spill68 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill67 = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill64 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill61 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill58 = alloca i64, align 8
  %self.dbg.spill56 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill55 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill52 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill51 = alloca { i64*, i64* }, align 8
  %tail.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill47 = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill44 = alloca i64, align 8
  %self.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %content_bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %tail.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %head.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %len.dbg.spill41 = alloca i64, align 8
  %self.dbg.spill39 = alloca { [0 x i8]*, i64 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill38 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill37 = alloca { i64*, i64* }, align 8
  %self.dbg.spill36 = alloca { [0 x i8]*, i64 }, align 8
  %sep_bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %iter.dbg.spill = alloca { i64*, i64* }, align 8
  %iter_uninit.dbg.spill = alloca { i64*, i64* }, align 8
  %self.dbg.spill35 = alloca { i64*, i64* }, align 8
  %sep_uninit.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill34 = alloca i8*, align 8
  %len.dbg.spill33 = alloca i64, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill31 = alloca { [0 x i8]*, i64 }, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill30 = alloca i8*, align 8
  %self.dbg.spill28 = alloca { [0 x i8]*, i64 }, align 8
  %target.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill27 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill26 = alloca i64, align 8
  %self.dbg.spill24 = alloca { [0 x i8]*, i64 }, align 8
  %pos.dbg.spill = alloca i64, align 8
  %self.dbg.spill23 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill22 = alloca i64, align 8
  %capacity.dbg.spill21 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %reserved_len.dbg.spill = alloca i64, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill20 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill19 = alloca i64*, align 8
  %self.dbg.spill18 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca { [0 x i8]*, i64 }*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill14 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill13 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %self.dbg.spill12 = alloca { [0 x i8]*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64*, align 8
  %self.dbg.spill9 = alloca { i64*, i64* }*, align 8
  %first.dbg.spill8 = alloca { [0 x i8]*, i64 }*, align 8
  %first.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %sep_len.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill7 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]", align 1
  %sep.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_390 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_388 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_386 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_381 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_379 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_374 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_372 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_367 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_365 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_360 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_358 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_353 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_351 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_346 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_341 = alloca { i8*, i64 }, align 8
  %_340 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_330 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_325 = alloca { i64, i64 }, align 8
  %_316 = alloca i8, align 1
  %_266 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_250 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_241 = alloca { i8*, i64 }, align 8
  %iter6 = alloca { i64*, i64* }, align 8
  %_230 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_214 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_205 = alloca { i8*, i64 }, align 8
  %iter5 = alloca { i64*, i64* }, align 8
  %_194 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_178 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_169 = alloca { i8*, i64 }, align 8
  %iter4 = alloca { i64*, i64* }, align 8
  %_158 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_142 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_133 = alloca { i8*, i64 }, align 8
  %iter3 = alloca { i64*, i64* }, align 8
  %_122 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_106 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_97 = alloca { i8*, i64 }, align 8
  %iter2 = alloca { i64*, i64* }, align 8
  %_86 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_70 = alloca { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, align 8
  %_61 = alloca { i8*, i64 }, align 8
  %iter1 = alloca { i64*, i64* }, align 8
  %target = alloca { [0 x i8]*, i64 }, align 8
  %index = alloca i64, align 8
  %result = alloca %"alloc::vec::Vec<u8>", align 8
  %_18 = alloca { i64*, i64 }, align 8
  %_16 = alloca i64, align 8
  %self = alloca { i64, i64 }, align 8
  %_8 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %7, align 8
  %8 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, metadata !9398, metadata !DIExpression()), !dbg !9527
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 0
  store [0 x i8]* %sep.0, [0 x i8]** %9, align 8
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 1
  store i64 %sep.1, i64* %10, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep.dbg.spill, metadata !9399, metadata !DIExpression()), !dbg !9528
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter, metadata !9402, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !9530, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %result, metadata !9410, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.declare(metadata i64* %index, metadata !9543, metadata !DIExpression()), !dbg !9551
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %f.dbg.spill, metadata !9553, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %target, metadata !9422, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter1, metadata !9428, metadata !DIExpression()), !dbg !9563
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter2, metadata !9444, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter3, metadata !9460, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter4, metadata !9476, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter5, metadata !9492, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter6, metadata !9508, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !9569, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill7, metadata !9585, metadata !DIExpression()), !dbg !9593
  store i64 %sep.1, i64* %sep_len.dbg.spill, align 8, !dbg !9595
  call void @llvm.dbg.declare(metadata i64* %sep_len.dbg.spill, metadata !9400, metadata !DIExpression()), !dbg !9596
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !9597
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %11, align 8, !dbg !9597
  %12 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !9597
  store i64 %slice.1, i64* %12, align 8, !dbg !9597
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !9598, metadata !DIExpression()), !dbg !9602
; call core::slice::iter::Iter<T>::new
  %13 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h31444a6cf065ff14E"([0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1), !dbg !9602
  store { i64*, i64* } %13, { i64*, i64* }* %iter, align 8, !dbg !9602
  br label %bb80, !dbg !9602

bb80:                                             ; preds = %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %14 = call align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %iter), !dbg !9603
  store i64* %14, i64** %_8, align 8, !dbg !9603
  br label %bb1, !dbg !9603

bb1:                                              ; preds = %bb80
  %15 = bitcast i64** %_8 to {}**, !dbg !9603
  %16 = load {}*, {}** %15, align 8, !dbg !9603
  %17 = icmp eq {}* %16, null, !dbg !9603
  %_10 = select i1 %17, i64 0, i64 1, !dbg !9603
  switch i64 %_10, label %bb2 [
    i64 0, label %bb81
    i64 1, label %bb3
  ], !dbg !9604

bb2:                                              ; preds = %bb1
  unreachable, !dbg !9603

bb81:                                             ; preds = %bb1
  %_281.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !9605, !nonnull !23, !noundef !23
  %_281.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !9605
  %18 = bitcast %"alloc::vec::Vec<u8>"* %0 to { i8*, i64 }*, !dbg !9605
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 0, !dbg !9605
  store i8* %_281.0, i8** %19, align 8, !dbg !9605
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %18, i32 0, i32 1, !dbg !9605
  store i64 %_281.1, i64* %20, align 8, !dbg !9605
  %21 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %0, i32 0, i32 1, !dbg !9605
  store i64 0, i64* %21, align 8, !dbg !9605
  br label %bb77, !dbg !9613

bb3:                                              ; preds = %bb1
  %22 = bitcast i64** %_8 to { [0 x i8]*, i64 }**, !dbg !9614
  %first = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %22, align 8, !dbg !9614, !nonnull !23, !align !584, !noundef !23
  store { [0 x i8]*, i64 }* %first, { [0 x i8]*, i64 }** %first.dbg.spill, align 8, !dbg !9614
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %first.dbg.spill, metadata !9406, metadata !DIExpression()), !dbg !9615
  store { [0 x i8]*, i64 }* %first, { [0 x i8]*, i64 }** %first.dbg.spill8, align 8, !dbg !9616
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %first.dbg.spill8, metadata !9404, metadata !DIExpression()), !dbg !9617
  store { i64*, i64* }* %iter, { i64*, i64* }** %self.dbg.spill9, align 8, !dbg !9618
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill9, metadata !9619, metadata !DIExpression()), !dbg !9635
  %23 = bitcast { i64*, i64* }* %iter to i64**, !dbg !9635
  %start10 = load i64*, i64** %23, align 8, !dbg !9635, !nonnull !23, !noundef !23
  store i64* %start10, i64** %start.dbg.spill, align 8, !dbg !9635
  call void @llvm.dbg.declare(metadata i64** %start.dbg.spill, metadata !9626, metadata !DIExpression()), !dbg !9636
  store i64 16, i64* %size.dbg.spill, align 8, !dbg !9637
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !9629, metadata !DIExpression()), !dbg !9645
  br i1 false, label %bb82, label %bb83, !dbg !9645

bb82:                                             ; preds = %bb3
  %24 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1, !dbg !9645
  %25 = bitcast i64** %24 to { [0 x i8]*, i64 }**, !dbg !9645
  %self15 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %25, align 8, !dbg !9645
  store { [0 x i8]*, i64 }* %self15, { [0 x i8]*, i64 }** %self.dbg.spill16, align 8, !dbg !9645
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill16, metadata !9646, metadata !DIExpression()), !dbg !9650
  %26 = bitcast i64* %3 to { [0 x i8]*, i64 }**, !dbg !9650
  store { [0 x i8]*, i64 }* %self15, { [0 x i8]*, i64 }** %26, align 8, !dbg !9650
  %self17 = load i64, i64* %3, align 8, !dbg !9650
  store i64 %self17, i64* %self.dbg.spill18, align 8, !dbg !9650
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill18, metadata !9652, metadata !DIExpression()), !dbg !9657
  br label %bb87, !dbg !9650

bb83:                                             ; preds = %bb3
  %27 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1, !dbg !9645
  %28 = bitcast i64** %27 to { [0 x i8]*, i64 }**, !dbg !9645
  %self11 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %28, align 8, !dbg !9645
  store { [0 x i8]*, i64 }* %self11, { [0 x i8]*, i64 }** %self.dbg.spill12, align 8, !dbg !9645
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill12, metadata !9658, metadata !DIExpression()), !dbg !9662
  %29 = bitcast i64* %6 to { [0 x i8]*, i64 }**, !dbg !9662
  store { [0 x i8]*, i64 }* %self11, { [0 x i8]*, i64 }** %29, align 8, !dbg !9662
  %_292 = load i64, i64* %6, align 8, !dbg !9662
  br label %bb89, !dbg !9662

bb89:                                             ; preds = %bb83
  store i64* %start10, i64** %self.dbg.spill13, align 8, !dbg !9645
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill13, metadata !9664, metadata !DIExpression()), !dbg !9670
  %_305 = bitcast i64* %start10 to { [0 x i8]*, i64 }*, !dbg !9670
  store { [0 x i8]*, i64 }* %_305, { [0 x i8]*, i64 }** %self.dbg.spill14, align 8, !dbg !9670
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill14, metadata !9672, metadata !DIExpression()), !dbg !9678
  %30 = bitcast i64* %5 to { [0 x i8]*, i64 }**, !dbg !9678
  store { [0 x i8]*, i64 }* %_305, { [0 x i8]*, i64 }** %30, align 8, !dbg !9678
  %_294 = load i64, i64* %5, align 8, !dbg !9678
  br label %bb90, !dbg !9678

bb90:                                             ; preds = %bb89
  %31 = sub nuw i64 %_292, %_294, !dbg !9645
  store i64 %31, i64* %4, align 8, !dbg !9645
  %diff = load i64, i64* %4, align 8, !dbg !9645
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !9645
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !9632, metadata !DIExpression()), !dbg !9679
  br label %bb84, !dbg !9645

bb84:                                             ; preds = %bb90
  %32 = udiv exact i64 %diff, 16, !dbg !9679
  store i64 %32, i64* %_16, align 8, !dbg !9679
  br label %bb85, !dbg !9679

bb85:                                             ; preds = %bb84
  br label %bb86, !dbg !9645

bb86:                                             ; preds = %bb88, %bb85
  %33 = load i64, i64* %_16, align 8, !dbg !9541
; call core::num::<impl usize>::checked_mul
  %34 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3032ae0d07eed7eaE"(i64 %sep.1, i64 %33), !dbg !9541
  %_14.0 = extractvalue { i64, i64 } %34, 0, !dbg !9541
  %_14.1 = extractvalue { i64, i64 } %34, 1, !dbg !9541
  br label %bb4, !dbg !9541

bb87:                                             ; preds = %bb82
  store i64* %start10, i64** %self.dbg.spill19, align 8, !dbg !9645
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill19, metadata !9680, metadata !DIExpression()), !dbg !9684
  %_300 = bitcast i64* %start10 to { [0 x i8]*, i64 }*, !dbg !9684
  store { [0 x i8]*, i64 }* %_300, { [0 x i8]*, i64 }** %self.dbg.spill20, align 8, !dbg !9684
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill20, metadata !9686, metadata !DIExpression()), !dbg !9690
  %35 = bitcast i64* %2 to { [0 x i8]*, i64 }**, !dbg !9690
  store { [0 x i8]*, i64 }* %_300, { [0 x i8]*, i64 }** %35, align 8, !dbg !9690
  %rhs = load i64, i64* %2, align 8, !dbg !9690
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !9690
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !9656, metadata !DIExpression()), !dbg !9657
  br label %bb88, !dbg !9690

bb88:                                             ; preds = %bb87
  %36 = sub i64 %self17, %rhs, !dbg !9657
  store i64 %36, i64* %_16, align 8, !dbg !9657
  br label %bb86, !dbg !9645

bb4:                                              ; preds = %bb86
  %37 = bitcast { i64*, i64 }* %_18 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !9691
  %38 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %37, i32 0, i32 0, !dbg !9691
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %38, align 8, !dbg !9691
  %39 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %37, i32 0, i32 1, !dbg !9691
  store i64 %slice.1, i64* %39, align 8, !dbg !9691
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_18, i32 0, i32 0, !dbg !9541
  %41 = load i64*, i64** %40, align 8, !dbg !9541, !nonnull !23, !align !584, !noundef !23
  %42 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_18, i32 0, i32 1, !dbg !9541
  %43 = load i64, i64* %42, align 8, !dbg !9541
; call core::option::Option<T>::and_then
  %44 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h5c7f1dae6f5ed549E"(i64 %_14.0, i64 %_14.1, i64* align 8 %41, i64 %43), !dbg !9541
  store { i64, i64 } %44, { i64, i64 }* %self, align 8, !dbg !9541
  br label %bb5, !dbg !9541

bb5:                                              ; preds = %bb4
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0, !dbg !9692
  store [0 x i8]* bitcast (<{ [53 x i8] }>* @alloc552 to [0 x i8]*), [0 x i8]** %45, align 8, !dbg !9692
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1, !dbg !9692
  store i64 53, i64* %46, align 8, !dbg !9692
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !9536, metadata !DIExpression()), !dbg !9540
  %47 = bitcast { i64, i64 }* %self to i64*, !dbg !9540
  %_307 = load i64, i64* %47, align 8, !dbg !9540, !range !3441, !noundef !23
  switch i64 %_307, label %bb92 [
    i64 0, label %bb91
    i64 1, label %bb93
  ], !dbg !9540

bb92:                                             ; preds = %bb5
  unreachable, !dbg !9540

bb91:                                             ; preds = %bb5
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17hfe812f345eb8521fE([0 x i8]* align 1 bitcast (<{ [53 x i8] }>* @alloc552 to [0 x i8]*), i64 53, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc556 to %"core::panic::location::Location"*)) #15, !dbg !9540
  unreachable, !dbg !9540

bb93:                                             ; preds = %bb5
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !9540
  %reserved_len = load i64, i64* %48, align 8, !dbg !9540
  store i64 %reserved_len, i64* %reserved_len.dbg.spill, align 8, !dbg !9540
  call void @llvm.dbg.declare(metadata i64* %reserved_len.dbg.spill, metadata !9408, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.declare(metadata i64* %reserved_len.dbg.spill, metadata !9537, metadata !DIExpression()), !dbg !9694
  store i64 %reserved_len, i64* %capacity.dbg.spill, align 8, !dbg !9695
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !9582, metadata !DIExpression()), !dbg !9696
  store i64 %reserved_len, i64* %capacity.dbg.spill21, align 8, !dbg !9696
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill21, metadata !9575, metadata !DIExpression()), !dbg !9576
  store i64 %reserved_len, i64* %capacity.dbg.spill22, align 8, !dbg !9576
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill22, metadata !9592, metadata !DIExpression()), !dbg !9593
  store i8 0, i8* %_316, align 1, !dbg !9593
  %49 = load i8, i8* %_316, align 1, !dbg !9593, !range !512, !noundef !23
  %50 = trunc i8 %49 to i1, !dbg !9593
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %51 = call { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hdee41fa7d0ae0decE"(i64 %reserved_len, i1 zeroext %50), !dbg !9593
  %_312.0 = extractvalue { i8*, i64 } %51, 0, !dbg !9593
  %_312.1 = extractvalue { i8*, i64 } %51, 1, !dbg !9593
  br label %bb94, !dbg !9593

bb94:                                             ; preds = %bb93
  %52 = bitcast %"alloc::vec::Vec<u8>"* %result to { i8*, i64 }*, !dbg !9576
  %53 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %52, i32 0, i32 0, !dbg !9576
  store i8* %_312.0, i8** %53, align 8, !dbg !9576
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %52, i32 0, i32 1, !dbg !9576
  store i64 %_312.1, i64* %54, align 8, !dbg !9576
  %55 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %result, i32 0, i32 1, !dbg !9576
  store i64 0, i64* %55, align 8, !dbg !9576
; invoke <&T as core::borrow::Borrow<T>>::borrow
  %56 = invoke { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h41fc1c2d47f6d610E"({ [0 x i8]*, i64 }* align 8 %first)
          to label %bb6 unwind label %cleanup, !dbg !9697

bb78:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %result) #16
          to label %bb79 unwind label %abort, !dbg !9698

cleanup:                                          ; preds = %bb20, %bb19, %bb18, %bb17, %bb16, %bb13, %bb97, %bb12, %bb31, %bb30, %bb29, %bb28, %bb27, %bb24, %bb99, %bb23, %bb42, %bb41, %bb40, %bb39, %bb38, %bb35, %bb101, %bb34, %bb53, %bb52, %bb51, %bb50, %bb49, %bb46, %bb103, %bb45, %bb64, %bb63, %bb62, %bb61, %bb60, %bb57, %bb105, %bb56, %bb74, %bb73, %bb72, %bb71, %bb70, %bb67, %bb107, %bb66, %bb95, %bb9, %bb8, %bb7, %bb6, %bb94
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  %59 = extractvalue { i8*, i32 } %57, 1
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %58, i8** %60, align 8
  %61 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %59, i32* %61, align 8
  br label %bb78

bb6:                                              ; preds = %bb94
  %_30.0 = extractvalue { [0 x i8]*, i64 } %56, 0, !dbg !9697
  %_30.1 = extractvalue { [0 x i8]*, i64 } %56, 1, !dbg !9697
; invoke core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %62 = invoke { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17ha3be070eaf30319eE"([0 x i8]* align 1 %_30.0, i64 %_30.1)
          to label %bb7 unwind label %cleanup, !dbg !9697

bb7:                                              ; preds = %bb6
  %_28.0 = extractvalue { [0 x i8]*, i64 } %62, 0, !dbg !9697
  %_28.1 = extractvalue { [0 x i8]*, i64 } %62, 1, !dbg !9697
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h9dbb13095de8647bE"(%"alloc::vec::Vec<u8>"* align 8 %result, [0 x i8]* align 1 %_28.0, i64 %_28.1)
          to label %bb8 unwind label %cleanup, !dbg !9699

bb8:                                              ; preds = %bb7
  store %"alloc::vec::Vec<u8>"* %result, %"alloc::vec::Vec<u8>"** %self.dbg.spill23, align 8, !dbg !9700
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill23, metadata !9701, metadata !DIExpression()), !dbg !9707
  %63 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %result, i32 0, i32 1, !dbg !9707
  %pos = load i64, i64* %63, align 8, !dbg !9707
  store i64 %pos, i64* %pos.dbg.spill, align 8, !dbg !9707
  call void @llvm.dbg.declare(metadata i64* %pos.dbg.spill, metadata !9412, metadata !DIExpression()), !dbg !9708
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %64 = invoke { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hbcd51560ec106435E"(%"alloc::vec::Vec<u8>"* align 8 %result)
          to label %bb9 unwind label %cleanup, !dbg !9552

bb9:                                              ; preds = %bb8
  %_36.0 = extractvalue { [0 x i8]*, i64 } %64, 0, !dbg !9552
  %_36.1 = extractvalue { [0 x i8]*, i64 } %64, 1, !dbg !9552
  %65 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill24, i32 0, i32 0, !dbg !9552
  store [0 x i8]* %_36.0, [0 x i8]** %65, align 8, !dbg !9552
  %66 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill24, i32 0, i32 1, !dbg !9552
  store i64 %_36.1, i64* %66, align 8, !dbg !9552
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill24, metadata !9549, metadata !DIExpression()), !dbg !9551
  %_39 = sub i64 %reserved_len, %pos, !dbg !9709
  store i64 %_39, i64* %index, align 8, !dbg !9710
  %self25 = load i64, i64* %index, align 8, !dbg !9551
  store i64 %self25, i64* %self.dbg.spill26, align 8, !dbg !9551
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill26, metadata !9711, metadata !DIExpression()), !dbg !9718
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill27, i32 0, i32 0, !dbg !9551
  store [0 x i8]* %_36.0, [0 x i8]** %67, align 8, !dbg !9551
  %68 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill27, i32 0, i32 1, !dbg !9551
  store i64 %_36.1, i64* %68, align 8, !dbg !9551
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill27, metadata !9717, metadata !DIExpression()), !dbg !9718
  %69 = bitcast { i64, i64 }* %_325 to i64*, !dbg !9718
  store i64 0, i64* %69, align 8, !dbg !9718
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_325, i32 0, i32 1, !dbg !9718
  store i64 %self25, i64* %70, align 8, !dbg !9718
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_325, i32 0, i32 0, !dbg !9718
  %72 = load i64, i64* %71, align 8, !dbg !9718
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_325, i32 0, i32 1, !dbg !9718
  %74 = load i64, i64* %73, align 8, !dbg !9718
; invoke <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %75 = invoke { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hcb8e7252e399a07dE"(i64 %72, i64 %74, [0 x i8]* %_36.0, i64 %_36.1)
          to label %bb95 unwind label %cleanup, !dbg !9718

bb95:                                             ; preds = %bb9
  %_322.0 = extractvalue { [0 x i8]*, i64 } %75, 0, !dbg !9718
  %_322.1 = extractvalue { [0 x i8]*, i64 } %75, 1, !dbg !9718
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target.dbg.spill, i32 0, i32 0, !dbg !9551
  store [0 x i8]* %_322.0, [0 x i8]** %76, align 8, !dbg !9551
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target.dbg.spill, i32 0, i32 1, !dbg !9551
  store i64 %_322.1, i64* %77, align 8, !dbg !9551
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %target.dbg.spill, metadata !9414, metadata !DIExpression()), !dbg !9720
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill28, i32 0, i32 0, !dbg !9721
  store [0 x i8]* %sep.0, [0 x i8]** %78, align 8, !dbg !9721
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill28, i32 0, i32 1, !dbg !9721
  store i64 %sep.1, i64* %79, align 8, !dbg !9721
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill28, metadata !9722, metadata !DIExpression()), !dbg !9726
  %self29 = bitcast [0 x i8]* %sep.0 to i8*, !dbg !9726
  store i8* %self29, i8** %self.dbg.spill30, align 8, !dbg !9726
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill30, metadata !9727, metadata !DIExpression()), !dbg !9735
  store i8* %self29, i8** %data.dbg.spill, align 8, !dbg !9735
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !9736, metadata !DIExpression()), !dbg !9750
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill31, i32 0, i32 0, !dbg !9752
  store [0 x i8]* %sep.0, [0 x i8]** %80, align 8, !dbg !9752
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill31, i32 0, i32 1, !dbg !9752
  store i64 %sep.1, i64* %81, align 8, !dbg !9752
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill31, metadata !9753, metadata !DIExpression()), !dbg !9759
  %82 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_330 to { [0 x i8]*, i64 }*, !dbg !9759
  %83 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %82, i32 0, i32 0, !dbg !9759
  store [0 x i8]* %sep.0, [0 x i8]** %83, align 8, !dbg !9759
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %82, i32 0, i32 1, !dbg !9759
  store i64 %sep.1, i64* %84, align 8, !dbg !9759
  %85 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_330 to { i8*, i64 }*, !dbg !9759
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %85, i32 0, i32 1, !dbg !9759
  %len = load i64, i64* %86, align 8, !dbg !9759
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !9759
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !9742, metadata !DIExpression()), !dbg !9750
  store i8* %self29, i8** %data.dbg.spill32, align 8, !dbg !9750
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !9760, metadata !DIExpression()), !dbg !9771
  store i64 %len, i64* %len.dbg.spill33, align 8, !dbg !9750
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill33, metadata !9770, metadata !DIExpression()), !dbg !9771
  store i8* %self29, i8** %self.dbg.spill34, align 8, !dbg !9771
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill34, metadata !9773, metadata !DIExpression()), !dbg !9779
  %data_address = bitcast i8* %self29 to {}*, !dbg !9779
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !9779
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !9781, metadata !DIExpression()), !dbg !9788
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !9771
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !9787, metadata !DIExpression()), !dbg !9788
  %87 = bitcast { i8*, i64 }* %_341 to {}**, !dbg !9788
  store {}* %data_address, {}** %87, align 8, !dbg !9788
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_341, i32 0, i32 1, !dbg !9788
  store i64 %len, i64* %88, align 8, !dbg !9788
  %89 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_340 to { i8*, i64 }*, !dbg !9788
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_341, i32 0, i32 0, !dbg !9788
  %91 = load i8*, i8** %90, align 8, !dbg !9788
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_341, i32 0, i32 1, !dbg !9788
  %93 = load i64, i64* %92, align 8, !dbg !9788
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %89, i32 0, i32 0, !dbg !9788
  store i8* %91, i8** %94, align 8, !dbg !9788
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %89, i32 0, i32 1, !dbg !9788
  store i64 %93, i64* %95, align 8, !dbg !9788
  %96 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_340 to { [0 x i8]*, i64 }*, !dbg !9788
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %96, i32 0, i32 0, !dbg !9788
  %_333.0 = load [0 x i8]*, [0 x i8]** %97, align 8, !dbg !9788
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %96, i32 0, i32 1, !dbg !9788
  %_333.1 = load i64, i64* %98, align 8, !dbg !9788
  %99 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep_uninit.dbg.spill, i32 0, i32 0, !dbg !9750
  store [0 x i8]* %_333.0, [0 x i8]** %99, align 8, !dbg !9750
  %100 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep_uninit.dbg.spill, i32 0, i32 1, !dbg !9750
  store i64 %_333.1, i64* %100, align 8, !dbg !9750
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep_uninit.dbg.spill, metadata !9416, metadata !DIExpression()), !dbg !9790
  %101 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0, !dbg !9561
  %self.0 = load i64*, i64** %101, align 8, !dbg !9561, !nonnull !23, !noundef !23
  %102 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1, !dbg !9561
  %self.1 = load i64*, i64** %102, align 8, !dbg !9561
  %103 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill35, i32 0, i32 0, !dbg !9561
  store i64* %self.0, i64** %103, align 8, !dbg !9561
  %104 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill35, i32 0, i32 1, !dbg !9561
  store i64* %self.1, i64** %104, align 8, !dbg !9561
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill35, metadata !9557, metadata !DIExpression()), !dbg !9560
; invoke core::iter::adapters::map::Map<I,F>::new
  %105 = invoke { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17ha3a3b0f9d46f12b4E"(i64* %self.0, i64* %self.1)
          to label %bb96 unwind label %cleanup, !dbg !9560

bb96:                                             ; preds = %bb95
  %iter_uninit.0 = extractvalue { i64*, i64* } %105, 0, !dbg !9560
  %iter_uninit.1 = extractvalue { i64*, i64* } %105, 1, !dbg !9560
  %106 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter_uninit.dbg.spill, i32 0, i32 0, !dbg !9560
  store i64* %iter_uninit.0, i64** %106, align 8, !dbg !9560
  %107 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter_uninit.dbg.spill, i32 0, i32 1, !dbg !9560
  store i64* %iter_uninit.1, i64** %107, align 8, !dbg !9560
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter_uninit.dbg.spill, metadata !9418, metadata !DIExpression()), !dbg !9791
  %108 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9792
  store [0 x i8]* %_322.0, [0 x i8]** %108, align 8, !dbg !9792
  %109 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9792
  store i64 %_322.1, i64* %109, align 8, !dbg !9792
  %110 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 0, !dbg !9793
  store i64* %iter_uninit.0, i64** %110, align 8, !dbg !9793
  %111 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter.dbg.spill, i32 0, i32 1, !dbg !9793
  store i64* %iter_uninit.1, i64** %111, align 8, !dbg !9793
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter.dbg.spill, metadata !9424, metadata !DIExpression()), !dbg !9794
  %112 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep_bytes.dbg.spill, i32 0, i32 0, !dbg !9795
  store [0 x i8]* %_333.0, [0 x i8]** %112, align 8, !dbg !9795
  %113 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep_bytes.dbg.spill, i32 0, i32 1, !dbg !9795
  store i64 %_333.1, i64* %113, align 8, !dbg !9795
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep_bytes.dbg.spill, metadata !9426, metadata !DIExpression()), !dbg !9796
  %114 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill36, i32 0, i32 0, !dbg !9796
  store [0 x i8]* %_333.0, [0 x i8]** %114, align 8, !dbg !9796
  %115 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill36, i32 0, i32 1, !dbg !9796
  store i64 %_333.1, i64* %115, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill36, metadata !9797, metadata !DIExpression()), !dbg !9803
  %116 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_346 to { [0 x i8]*, i64 }*, !dbg !9803
  %117 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %116, i32 0, i32 0, !dbg !9803
  store [0 x i8]* %_333.0, [0 x i8]** %117, align 8, !dbg !9803
  %118 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %116, i32 0, i32 1, !dbg !9803
  store i64 %_333.1, i64* %118, align 8, !dbg !9803
  %119 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_346 to { i8*, i64 }*, !dbg !9803
  %120 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %119, i32 0, i32 1, !dbg !9803
  %_56 = load i64, i64* %120, align 8, !dbg !9803
  switch i64 %_56, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb22
    i64 2, label %bb33
    i64 3, label %bb44
    i64 4, label %bb55
  ], !dbg !9796

bb10:                                             ; preds = %bb96
  %121 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill37, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %121, align 8, !dbg !9796
  %122 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill37, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %122, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill37, metadata !9805, metadata !DIExpression()), !dbg !9813
  %123 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter6, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %123, align 8, !dbg !9796
  %124 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter6, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %124, align 8, !dbg !9796
  br label %bb66, !dbg !9568

bb11:                                             ; preds = %bb96
  %125 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill155, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %125, align 8, !dbg !9796
  %126 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill155, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %126, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill155, metadata !9815, metadata !DIExpression()), !dbg !9819
  %127 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %127, align 8, !dbg !9796
  %128 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter1, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %128, align 8, !dbg !9796
  br label %bb12, !dbg !9563

bb22:                                             ; preds = %bb96
  %129 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill129, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %129, align 8, !dbg !9796
  %130 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill129, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %130, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill129, metadata !9821, metadata !DIExpression()), !dbg !9825
  %131 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter2, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %131, align 8, !dbg !9796
  %132 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter2, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %132, align 8, !dbg !9796
  br label %bb23, !dbg !9564

bb33:                                             ; preds = %bb96
  %133 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill103, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %133, align 8, !dbg !9796
  %134 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill103, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %134, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill103, metadata !9826, metadata !DIExpression()), !dbg !9830
  %135 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter3, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %135, align 8, !dbg !9796
  %136 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter3, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %136, align 8, !dbg !9796
  br label %bb34, !dbg !9565

bb44:                                             ; preds = %bb96
  %137 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill77, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %137, align 8, !dbg !9796
  %138 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill77, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %138, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill77, metadata !9831, metadata !DIExpression()), !dbg !9835
  %139 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter4, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %139, align 8, !dbg !9796
  %140 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter4, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %140, align 8, !dbg !9796
  br label %bb45, !dbg !9566

bb55:                                             ; preds = %bb96
  %141 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill51, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %141, align 8, !dbg !9796
  %142 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill51, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %142, align 8, !dbg !9796
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill51, metadata !9836, metadata !DIExpression()), !dbg !9840
  %143 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter5, i32 0, i32 0, !dbg !9796
  store i64* %iter_uninit.0, i64** %143, align 8, !dbg !9796
  %144 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter5, i32 0, i32 1, !dbg !9796
  store i64* %iter_uninit.1, i64** %144, align 8, !dbg !9796
  br label %bb56, !dbg !9567

bb66:                                             ; preds = %bb75, %bb10
  store { i64*, i64* }* %iter6, { i64*, i64* }** %self.dbg.spill38, align 8, !dbg !9568
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill38, metadata !9841, metadata !DIExpression()), !dbg !9849
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_383 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %iter6)
          to label %bb107 unwind label %cleanup, !dbg !9849

bb107:                                            ; preds = %bb66
  %_385 = bitcast { i64*, i64* }* %iter6 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9849
; invoke core::option::Option<T>::map
  %145 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc747a901facfa698E"(i64* align 8 %_383, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_385)
          to label %bb108 unwind label %cleanup, !dbg !9849

bb108:                                            ; preds = %bb107
  store { i8*, i64 } %145, { i8*, i64 }* %_241, align 8, !dbg !9849
  %146 = bitcast { i8*, i64 }* %_241 to {}**, !dbg !9568
  %147 = load {}*, {}** %146, align 8, !dbg !9568
  %148 = icmp eq {}* %147, null, !dbg !9568
  %_244 = select i1 %148, i64 0, i64 1, !dbg !9568
  switch i64 %_244, label %bb68 [
    i64 0, label %bb69
    i64 1, label %bb67
  ], !dbg !9568

bb68:                                             ; preds = %bb108
  unreachable, !dbg !9568

bb69:                                             ; preds = %bb108
  br label %bb76, !dbg !9796

bb67:                                             ; preds = %bb108
  %149 = bitcast { i8*, i64 }* %_241 to { [0 x i8]*, i64 }*, !dbg !9568
  %150 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %149, i32 0, i32 0, !dbg !9568
  %s.0 = load [0 x i8]*, [0 x i8]** %150, align 8, !dbg !9568, !nonnull !23, !align !445, !noundef !23
  %151 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %149, i32 0, i32 1, !dbg !9568
  %s.1 = load i64, i64* %151, align 8, !dbg !9568
  %152 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !9568
  store [0 x i8]* %s.0, [0 x i8]** %152, align 8, !dbg !9568
  %153 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !9568
  store i64 %s.1, i64* %153, align 8, !dbg !9568
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !9510, metadata !DIExpression()), !dbg !9851
  %154 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill39, i32 0, i32 0, !dbg !9851
  store [0 x i8]* %_333.0, [0 x i8]** %154, align 8, !dbg !9851
  %155 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill39, i32 0, i32 1, !dbg !9851
  store i64 %_333.1, i64* %155, align 8, !dbg !9851
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill39, metadata !9852, metadata !DIExpression()), !dbg !9856
  %156 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_386 to { [0 x i8]*, i64 }*, !dbg !9856
  %157 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %156, i32 0, i32 0, !dbg !9856
  store [0 x i8]* %_333.0, [0 x i8]** %157, align 8, !dbg !9856
  %158 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %156, i32 0, i32 1, !dbg !9856
  store i64 %_333.1, i64* %158, align 8, !dbg !9856
  %159 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_386 to { i8*, i64 }*, !dbg !9856
  %160 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %159, i32 0, i32 1, !dbg !9856
  %len40 = load i64, i64* %160, align 8, !dbg !9856
  store i64 %len40, i64* %len.dbg.spill41, align 8, !dbg !9856
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill41, metadata !9512, metadata !DIExpression()), !dbg !9858
  %161 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9858
  %_252.0 = load [0 x i8]*, [0 x i8]** %161, align 8, !dbg !9858, !nonnull !23, !align !445, !noundef !23
  %162 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9858
  %_252.1 = load i64, i64* %162, align 8, !dbg !9858
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_250, [0 x i8]* align 1 %_252.0, i64 %_252.1, i64 %len40, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb70 unwind label %cleanup, !dbg !9858

bb70:                                             ; preds = %bb67
  %163 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_250 to { [0 x i8]*, i64 }*, !dbg !9858
  %164 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %163, i32 0, i32 0, !dbg !9858
  %head.0 = load [0 x i8]*, [0 x i8]** %164, align 8, !dbg !9858, !nonnull !23, !align !445, !noundef !23
  %165 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %163, i32 0, i32 1, !dbg !9858
  %head.1 = load i64, i64* %165, align 8, !dbg !9858
  %166 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill, i32 0, i32 0, !dbg !9858
  store [0 x i8]* %head.0, [0 x i8]** %166, align 8, !dbg !9858
  %167 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill, i32 0, i32 1, !dbg !9858
  store i64 %head.1, i64* %167, align 8, !dbg !9858
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill, metadata !9514, metadata !DIExpression()), !dbg !9859
  %168 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_250, i32 0, i32 1, !dbg !9858
  %169 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %168, i32 0, i32 0, !dbg !9858
  %tail.0 = load [0 x i8]*, [0 x i8]** %169, align 8, !dbg !9858, !nonnull !23, !align !445, !noundef !23
  %170 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %168, i32 0, i32 1, !dbg !9858
  %tail.1 = load i64, i64* %170, align 8, !dbg !9858
  %171 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill, i32 0, i32 0, !dbg !9858
  store [0 x i8]* %tail.0, [0 x i8]** %171, align 8, !dbg !9858
  %172 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill, i32 0, i32 1, !dbg !9858
  store i64 %tail.1, i64* %172, align 8, !dbg !9858
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill, metadata !9516, metadata !DIExpression()), !dbg !9859
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.0, i64 %head.1, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb71 unwind label %cleanup, !dbg !9859

bb71:                                             ; preds = %bb70
  %173 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9859
  store [0 x i8]* %tail.0, [0 x i8]** %173, align 8, !dbg !9859
  %174 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9859
  store i64 %tail.1, i64* %174, align 8, !dbg !9859
; invoke <T as core::borrow::Borrow<T>>::borrow
  %175 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h27c9f61f5eb5cfddE"([0 x i8]* align 1 %s.0, i64 %s.1)
          to label %bb72 unwind label %cleanup, !dbg !9859

bb72:                                             ; preds = %bb71
  %_260.0 = extractvalue { [0 x i8]*, i64 } %175, 0, !dbg !9859
  %_260.1 = extractvalue { [0 x i8]*, i64 } %175, 1, !dbg !9859
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %176 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h85593544e4cde7c2E"([0 x i8]* align 1 %_260.0, i64 %_260.1)
          to label %bb73 unwind label %cleanup, !dbg !9859

bb73:                                             ; preds = %bb72
  %content_bytes.0 = extractvalue { [0 x i8]*, i64 } %176, 0, !dbg !9859
  %content_bytes.1 = extractvalue { [0 x i8]*, i64 } %176, 1, !dbg !9859
  %177 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill, i32 0, i32 0, !dbg !9859
  store [0 x i8]* %content_bytes.0, [0 x i8]** %177, align 8, !dbg !9859
  %178 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill, i32 0, i32 1, !dbg !9859
  store i64 %content_bytes.1, i64* %178, align 8, !dbg !9859
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill, metadata !9517, metadata !DIExpression()), !dbg !9860
  %179 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill42, i32 0, i32 0, !dbg !9860
  store [0 x i8]* %content_bytes.0, [0 x i8]** %179, align 8, !dbg !9860
  %180 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill42, i32 0, i32 1, !dbg !9860
  store i64 %content_bytes.1, i64* %180, align 8, !dbg !9860
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill42, metadata !9861, metadata !DIExpression()), !dbg !9865
  %181 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_388 to { [0 x i8]*, i64 }*, !dbg !9865
  %182 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %181, i32 0, i32 0, !dbg !9865
  store [0 x i8]* %content_bytes.0, [0 x i8]** %182, align 8, !dbg !9865
  %183 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %181, i32 0, i32 1, !dbg !9865
  store i64 %content_bytes.1, i64* %183, align 8, !dbg !9865
  %184 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_388 to { i8*, i64 }*, !dbg !9865
  %185 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %184, i32 0, i32 1, !dbg !9865
  %len43 = load i64, i64* %185, align 8, !dbg !9865
  store i64 %len43, i64* %len.dbg.spill44, align 8, !dbg !9865
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill44, metadata !9519, metadata !DIExpression()), !dbg !9867
  %186 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9867
  %_268.0 = load [0 x i8]*, [0 x i8]** %186, align 8, !dbg !9867, !nonnull !23, !align !445, !noundef !23
  %187 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9867
  %_268.1 = load i64, i64* %187, align 8, !dbg !9867
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_266, [0 x i8]* align 1 %_268.0, i64 %_268.1, i64 %len43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb74 unwind label %cleanup, !dbg !9867

bb74:                                             ; preds = %bb73
  %188 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_266 to { [0 x i8]*, i64 }*, !dbg !9867
  %189 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %188, i32 0, i32 0, !dbg !9867
  %head.045 = load [0 x i8]*, [0 x i8]** %189, align 8, !dbg !9867, !nonnull !23, !align !445, !noundef !23
  %190 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %188, i32 0, i32 1, !dbg !9867
  %head.146 = load i64, i64* %190, align 8, !dbg !9867
  %191 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill47, i32 0, i32 0, !dbg !9867
  store [0 x i8]* %head.045, [0 x i8]** %191, align 8, !dbg !9867
  %192 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill47, i32 0, i32 1, !dbg !9867
  store i64 %head.146, i64* %192, align 8, !dbg !9867
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill47, metadata !9521, metadata !DIExpression()), !dbg !9868
  %193 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_266, i32 0, i32 1, !dbg !9867
  %194 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %193, i32 0, i32 0, !dbg !9867
  %tail.048 = load [0 x i8]*, [0 x i8]** %194, align 8, !dbg !9867, !nonnull !23, !align !445, !noundef !23
  %195 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %193, i32 0, i32 1, !dbg !9867
  %tail.149 = load i64, i64* %195, align 8, !dbg !9867
  %196 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill50, i32 0, i32 0, !dbg !9867
  store [0 x i8]* %tail.048, [0 x i8]** %196, align 8, !dbg !9867
  %197 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill50, i32 0, i32 1, !dbg !9867
  store i64 %tail.149, i64* %197, align 8, !dbg !9867
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill50, metadata !9523, metadata !DIExpression()), !dbg !9868
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.045, i64 %head.146, [0 x i8]* align 1 %content_bytes.0, i64 %content_bytes.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb75 unwind label %cleanup, !dbg !9868

bb75:                                             ; preds = %bb74
  %198 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9868
  store [0 x i8]* %tail.048, [0 x i8]** %198, align 8, !dbg !9868
  %199 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9868
  store i64 %tail.149, i64* %199, align 8, !dbg !9868
  br label %bb66, !dbg !9568

bb76:                                             ; preds = %bb15, %bb26, %bb37, %bb48, %bb59, %bb69
  %200 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9796
  %_52.0 = load [0 x i8]*, [0 x i8]** %200, align 8, !dbg !9796, !nonnull !23, !align !445, !noundef !23
  %201 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9796
  %_52.1 = load i64, i64* %201, align 8, !dbg !9796
  %202 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %remain.dbg.spill, i32 0, i32 0, !dbg !9869
  store [0 x i8]* %_52.0, [0 x i8]** %202, align 8, !dbg !9869
  %203 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %remain.dbg.spill, i32 0, i32 1, !dbg !9869
  store i64 %_52.1, i64* %203, align 8, !dbg !9869
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %remain.dbg.spill, metadata !9420, metadata !DIExpression()), !dbg !9870
  %204 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill181, i32 0, i32 0, !dbg !9871
  store [0 x i8]* %_52.0, [0 x i8]** %204, align 8, !dbg !9871
  %205 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill181, i32 0, i32 1, !dbg !9871
  store i64 %_52.1, i64* %205, align 8, !dbg !9871
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill181, metadata !9872, metadata !DIExpression()), !dbg !9876
  %206 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_390 to { [0 x i8]*, i64 }*, !dbg !9876
  %207 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %206, i32 0, i32 0, !dbg !9876
  store [0 x i8]* %_52.0, [0 x i8]** %207, align 8, !dbg !9876
  %208 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %206, i32 0, i32 1, !dbg !9876
  store i64 %_52.1, i64* %208, align 8, !dbg !9876
  %209 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_390 to { i8*, i64 }*, !dbg !9876
  %210 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %209, i32 0, i32 1, !dbg !9876
  %_276 = load i64, i64* %210, align 8, !dbg !9876
  %result_len = sub i64 %reserved_len, %_276, !dbg !9877
  store i64 %result_len, i64* %result_len.dbg.spill, align 8, !dbg !9877
  call void @llvm.dbg.declare(metadata i64* %result_len.dbg.spill, metadata !9524, metadata !DIExpression()), !dbg !9878
  store %"alloc::vec::Vec<u8>"* %result, %"alloc::vec::Vec<u8>"** %self.dbg.spill182, align 8, !dbg !9879
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill182, metadata !9880, metadata !DIExpression()), !dbg !9887
  store i64 %result_len, i64* %new_len.dbg.spill, align 8, !dbg !9888
  call void @llvm.dbg.declare(metadata i64* %new_len.dbg.spill, metadata !9886, metadata !DIExpression()), !dbg !9887
  %211 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %result, i32 0, i32 1, !dbg !9887
  store i64 %result_len, i64* %211, align 8, !dbg !9887
  %212 = bitcast %"alloc::vec::Vec<u8>"* %0 to i8*, !dbg !9889
  %213 = bitcast %"alloc::vec::Vec<u8>"* %result to i8*, !dbg !9889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 24, i1 false), !dbg !9889
  br label %bb77, !dbg !9613

bb56:                                             ; preds = %bb65, %bb55
  store { i64*, i64* }* %iter5, { i64*, i64* }** %self.dbg.spill52, align 8, !dbg !9567
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill52, metadata !9890, metadata !DIExpression()), !dbg !9894
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_376 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %iter5)
          to label %bb105 unwind label %cleanup, !dbg !9894

bb105:                                            ; preds = %bb56
  %_378 = bitcast { i64*, i64* }* %iter5 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9894
; invoke core::option::Option<T>::map
  %214 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc747a901facfa698E"(i64* align 8 %_376, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_378)
          to label %bb106 unwind label %cleanup, !dbg !9894

bb106:                                            ; preds = %bb105
  store { i8*, i64 } %214, { i8*, i64 }* %_205, align 8, !dbg !9894
  %215 = bitcast { i8*, i64 }* %_205 to {}**, !dbg !9567
  %216 = load {}*, {}** %215, align 8, !dbg !9567
  %217 = icmp eq {}* %216, null, !dbg !9567
  %_208 = select i1 %217, i64 0, i64 1, !dbg !9567
  switch i64 %_208, label %bb58 [
    i64 0, label %bb59
    i64 1, label %bb57
  ], !dbg !9567

bb58:                                             ; preds = %bb106
  unreachable, !dbg !9567

bb59:                                             ; preds = %bb106
  br label %bb76, !dbg !9796

bb57:                                             ; preds = %bb106
  %218 = bitcast { i8*, i64 }* %_205 to { [0 x i8]*, i64 }*, !dbg !9567
  %219 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %218, i32 0, i32 0, !dbg !9567
  %s.053 = load [0 x i8]*, [0 x i8]** %219, align 8, !dbg !9567, !nonnull !23, !align !445, !noundef !23
  %220 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %218, i32 0, i32 1, !dbg !9567
  %s.154 = load i64, i64* %220, align 8, !dbg !9567
  %221 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill55, i32 0, i32 0, !dbg !9567
  store [0 x i8]* %s.053, [0 x i8]** %221, align 8, !dbg !9567
  %222 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill55, i32 0, i32 1, !dbg !9567
  store i64 %s.154, i64* %222, align 8, !dbg !9567
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill55, metadata !9494, metadata !DIExpression()), !dbg !9896
  %223 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill56, i32 0, i32 0, !dbg !9896
  store [0 x i8]* %_333.0, [0 x i8]** %223, align 8, !dbg !9896
  %224 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill56, i32 0, i32 1, !dbg !9896
  store i64 %_333.1, i64* %224, align 8, !dbg !9896
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill56, metadata !9897, metadata !DIExpression()), !dbg !9901
  %225 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_379 to { [0 x i8]*, i64 }*, !dbg !9901
  %226 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %225, i32 0, i32 0, !dbg !9901
  store [0 x i8]* %_333.0, [0 x i8]** %226, align 8, !dbg !9901
  %227 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %225, i32 0, i32 1, !dbg !9901
  store i64 %_333.1, i64* %227, align 8, !dbg !9901
  %228 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_379 to { i8*, i64 }*, !dbg !9901
  %229 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %228, i32 0, i32 1, !dbg !9901
  %len57 = load i64, i64* %229, align 8, !dbg !9901
  store i64 %len57, i64* %len.dbg.spill58, align 8, !dbg !9901
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill58, metadata !9496, metadata !DIExpression()), !dbg !9903
  %230 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9903
  %_216.0 = load [0 x i8]*, [0 x i8]** %230, align 8, !dbg !9903, !nonnull !23, !align !445, !noundef !23
  %231 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9903
  %_216.1 = load i64, i64* %231, align 8, !dbg !9903
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_214, [0 x i8]* align 1 %_216.0, i64 %_216.1, i64 %len57, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb60 unwind label %cleanup, !dbg !9903

bb60:                                             ; preds = %bb57
  %232 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_214 to { [0 x i8]*, i64 }*, !dbg !9903
  %233 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %232, i32 0, i32 0, !dbg !9903
  %head.059 = load [0 x i8]*, [0 x i8]** %233, align 8, !dbg !9903, !nonnull !23, !align !445, !noundef !23
  %234 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %232, i32 0, i32 1, !dbg !9903
  %head.160 = load i64, i64* %234, align 8, !dbg !9903
  %235 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill61, i32 0, i32 0, !dbg !9903
  store [0 x i8]* %head.059, [0 x i8]** %235, align 8, !dbg !9903
  %236 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill61, i32 0, i32 1, !dbg !9903
  store i64 %head.160, i64* %236, align 8, !dbg !9903
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill61, metadata !9498, metadata !DIExpression()), !dbg !9904
  %237 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_214, i32 0, i32 1, !dbg !9903
  %238 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %237, i32 0, i32 0, !dbg !9903
  %tail.062 = load [0 x i8]*, [0 x i8]** %238, align 8, !dbg !9903, !nonnull !23, !align !445, !noundef !23
  %239 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %237, i32 0, i32 1, !dbg !9903
  %tail.163 = load i64, i64* %239, align 8, !dbg !9903
  %240 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill64, i32 0, i32 0, !dbg !9903
  store [0 x i8]* %tail.062, [0 x i8]** %240, align 8, !dbg !9903
  %241 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill64, i32 0, i32 1, !dbg !9903
  store i64 %tail.163, i64* %241, align 8, !dbg !9903
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill64, metadata !9500, metadata !DIExpression()), !dbg !9904
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.059, i64 %head.160, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb61 unwind label %cleanup, !dbg !9904

bb61:                                             ; preds = %bb60
  %242 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9904
  store [0 x i8]* %tail.062, [0 x i8]** %242, align 8, !dbg !9904
  %243 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9904
  store i64 %tail.163, i64* %243, align 8, !dbg !9904
; invoke <T as core::borrow::Borrow<T>>::borrow
  %244 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h27c9f61f5eb5cfddE"([0 x i8]* align 1 %s.053, i64 %s.154)
          to label %bb62 unwind label %cleanup, !dbg !9904

bb62:                                             ; preds = %bb61
  %_224.0 = extractvalue { [0 x i8]*, i64 } %244, 0, !dbg !9904
  %_224.1 = extractvalue { [0 x i8]*, i64 } %244, 1, !dbg !9904
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %245 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h85593544e4cde7c2E"([0 x i8]* align 1 %_224.0, i64 %_224.1)
          to label %bb63 unwind label %cleanup, !dbg !9904

bb63:                                             ; preds = %bb62
  %content_bytes.065 = extractvalue { [0 x i8]*, i64 } %245, 0, !dbg !9904
  %content_bytes.166 = extractvalue { [0 x i8]*, i64 } %245, 1, !dbg !9904
  %246 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill67, i32 0, i32 0, !dbg !9904
  store [0 x i8]* %content_bytes.065, [0 x i8]** %246, align 8, !dbg !9904
  %247 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill67, i32 0, i32 1, !dbg !9904
  store i64 %content_bytes.166, i64* %247, align 8, !dbg !9904
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill67, metadata !9501, metadata !DIExpression()), !dbg !9905
  %248 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill68, i32 0, i32 0, !dbg !9905
  store [0 x i8]* %content_bytes.065, [0 x i8]** %248, align 8, !dbg !9905
  %249 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill68, i32 0, i32 1, !dbg !9905
  store i64 %content_bytes.166, i64* %249, align 8, !dbg !9905
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill68, metadata !9906, metadata !DIExpression()), !dbg !9910
  %250 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_381 to { [0 x i8]*, i64 }*, !dbg !9910
  %251 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %250, i32 0, i32 0, !dbg !9910
  store [0 x i8]* %content_bytes.065, [0 x i8]** %251, align 8, !dbg !9910
  %252 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %250, i32 0, i32 1, !dbg !9910
  store i64 %content_bytes.166, i64* %252, align 8, !dbg !9910
  %253 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_381 to { i8*, i64 }*, !dbg !9910
  %254 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %253, i32 0, i32 1, !dbg !9910
  %len69 = load i64, i64* %254, align 8, !dbg !9910
  store i64 %len69, i64* %len.dbg.spill70, align 8, !dbg !9910
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill70, metadata !9503, metadata !DIExpression()), !dbg !9912
  %255 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9912
  %_232.0 = load [0 x i8]*, [0 x i8]** %255, align 8, !dbg !9912, !nonnull !23, !align !445, !noundef !23
  %256 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9912
  %_232.1 = load i64, i64* %256, align 8, !dbg !9912
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_230, [0 x i8]* align 1 %_232.0, i64 %_232.1, i64 %len69, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb64 unwind label %cleanup, !dbg !9912

bb64:                                             ; preds = %bb63
  %257 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_230 to { [0 x i8]*, i64 }*, !dbg !9912
  %258 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %257, i32 0, i32 0, !dbg !9912
  %head.071 = load [0 x i8]*, [0 x i8]** %258, align 8, !dbg !9912, !nonnull !23, !align !445, !noundef !23
  %259 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %257, i32 0, i32 1, !dbg !9912
  %head.172 = load i64, i64* %259, align 8, !dbg !9912
  %260 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill73, i32 0, i32 0, !dbg !9912
  store [0 x i8]* %head.071, [0 x i8]** %260, align 8, !dbg !9912
  %261 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill73, i32 0, i32 1, !dbg !9912
  store i64 %head.172, i64* %261, align 8, !dbg !9912
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill73, metadata !9505, metadata !DIExpression()), !dbg !9913
  %262 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_230, i32 0, i32 1, !dbg !9912
  %263 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %262, i32 0, i32 0, !dbg !9912
  %tail.074 = load [0 x i8]*, [0 x i8]** %263, align 8, !dbg !9912, !nonnull !23, !align !445, !noundef !23
  %264 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %262, i32 0, i32 1, !dbg !9912
  %tail.175 = load i64, i64* %264, align 8, !dbg !9912
  %265 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill76, i32 0, i32 0, !dbg !9912
  store [0 x i8]* %tail.074, [0 x i8]** %265, align 8, !dbg !9912
  %266 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill76, i32 0, i32 1, !dbg !9912
  store i64 %tail.175, i64* %266, align 8, !dbg !9912
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill76, metadata !9507, metadata !DIExpression()), !dbg !9913
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.071, i64 %head.172, [0 x i8]* align 1 %content_bytes.065, i64 %content_bytes.166, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb65 unwind label %cleanup, !dbg !9913

bb65:                                             ; preds = %bb64
  %267 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9913
  store [0 x i8]* %tail.074, [0 x i8]** %267, align 8, !dbg !9913
  %268 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9913
  store i64 %tail.175, i64* %268, align 8, !dbg !9913
  br label %bb56, !dbg !9567

bb45:                                             ; preds = %bb54, %bb44
  store { i64*, i64* }* %iter4, { i64*, i64* }** %self.dbg.spill78, align 8, !dbg !9566
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill78, metadata !9914, metadata !DIExpression()), !dbg !9918
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_369 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %iter4)
          to label %bb103 unwind label %cleanup, !dbg !9918

bb103:                                            ; preds = %bb45
  %_371 = bitcast { i64*, i64* }* %iter4 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9918
; invoke core::option::Option<T>::map
  %269 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc747a901facfa698E"(i64* align 8 %_369, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_371)
          to label %bb104 unwind label %cleanup, !dbg !9918

bb104:                                            ; preds = %bb103
  store { i8*, i64 } %269, { i8*, i64 }* %_169, align 8, !dbg !9918
  %270 = bitcast { i8*, i64 }* %_169 to {}**, !dbg !9566
  %271 = load {}*, {}** %270, align 8, !dbg !9566
  %272 = icmp eq {}* %271, null, !dbg !9566
  %_172 = select i1 %272, i64 0, i64 1, !dbg !9566
  switch i64 %_172, label %bb47 [
    i64 0, label %bb48
    i64 1, label %bb46
  ], !dbg !9566

bb47:                                             ; preds = %bb104
  unreachable, !dbg !9566

bb48:                                             ; preds = %bb104
  br label %bb76, !dbg !9796

bb46:                                             ; preds = %bb104
  %273 = bitcast { i8*, i64 }* %_169 to { [0 x i8]*, i64 }*, !dbg !9566
  %274 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %273, i32 0, i32 0, !dbg !9566
  %s.079 = load [0 x i8]*, [0 x i8]** %274, align 8, !dbg !9566, !nonnull !23, !align !445, !noundef !23
  %275 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %273, i32 0, i32 1, !dbg !9566
  %s.180 = load i64, i64* %275, align 8, !dbg !9566
  %276 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill81, i32 0, i32 0, !dbg !9566
  store [0 x i8]* %s.079, [0 x i8]** %276, align 8, !dbg !9566
  %277 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill81, i32 0, i32 1, !dbg !9566
  store i64 %s.180, i64* %277, align 8, !dbg !9566
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill81, metadata !9478, metadata !DIExpression()), !dbg !9920
  %278 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill82, i32 0, i32 0, !dbg !9920
  store [0 x i8]* %_333.0, [0 x i8]** %278, align 8, !dbg !9920
  %279 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill82, i32 0, i32 1, !dbg !9920
  store i64 %_333.1, i64* %279, align 8, !dbg !9920
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill82, metadata !9921, metadata !DIExpression()), !dbg !9925
  %280 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_372 to { [0 x i8]*, i64 }*, !dbg !9925
  %281 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %280, i32 0, i32 0, !dbg !9925
  store [0 x i8]* %_333.0, [0 x i8]** %281, align 8, !dbg !9925
  %282 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %280, i32 0, i32 1, !dbg !9925
  store i64 %_333.1, i64* %282, align 8, !dbg !9925
  %283 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_372 to { i8*, i64 }*, !dbg !9925
  %284 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %283, i32 0, i32 1, !dbg !9925
  %len83 = load i64, i64* %284, align 8, !dbg !9925
  store i64 %len83, i64* %len.dbg.spill84, align 8, !dbg !9925
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill84, metadata !9480, metadata !DIExpression()), !dbg !9927
  %285 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9927
  %_180.0 = load [0 x i8]*, [0 x i8]** %285, align 8, !dbg !9927, !nonnull !23, !align !445, !noundef !23
  %286 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9927
  %_180.1 = load i64, i64* %286, align 8, !dbg !9927
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_178, [0 x i8]* align 1 %_180.0, i64 %_180.1, i64 %len83, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb49 unwind label %cleanup, !dbg !9927

bb49:                                             ; preds = %bb46
  %287 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_178 to { [0 x i8]*, i64 }*, !dbg !9927
  %288 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %287, i32 0, i32 0, !dbg !9927
  %head.085 = load [0 x i8]*, [0 x i8]** %288, align 8, !dbg !9927, !nonnull !23, !align !445, !noundef !23
  %289 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %287, i32 0, i32 1, !dbg !9927
  %head.186 = load i64, i64* %289, align 8, !dbg !9927
  %290 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill87, i32 0, i32 0, !dbg !9927
  store [0 x i8]* %head.085, [0 x i8]** %290, align 8, !dbg !9927
  %291 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill87, i32 0, i32 1, !dbg !9927
  store i64 %head.186, i64* %291, align 8, !dbg !9927
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill87, metadata !9482, metadata !DIExpression()), !dbg !9928
  %292 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_178, i32 0, i32 1, !dbg !9927
  %293 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %292, i32 0, i32 0, !dbg !9927
  %tail.088 = load [0 x i8]*, [0 x i8]** %293, align 8, !dbg !9927, !nonnull !23, !align !445, !noundef !23
  %294 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %292, i32 0, i32 1, !dbg !9927
  %tail.189 = load i64, i64* %294, align 8, !dbg !9927
  %295 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill90, i32 0, i32 0, !dbg !9927
  store [0 x i8]* %tail.088, [0 x i8]** %295, align 8, !dbg !9927
  %296 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill90, i32 0, i32 1, !dbg !9927
  store i64 %tail.189, i64* %296, align 8, !dbg !9927
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill90, metadata !9484, metadata !DIExpression()), !dbg !9928
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.085, i64 %head.186, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb50 unwind label %cleanup, !dbg !9928

bb50:                                             ; preds = %bb49
  %297 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9928
  store [0 x i8]* %tail.088, [0 x i8]** %297, align 8, !dbg !9928
  %298 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9928
  store i64 %tail.189, i64* %298, align 8, !dbg !9928
; invoke <T as core::borrow::Borrow<T>>::borrow
  %299 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h27c9f61f5eb5cfddE"([0 x i8]* align 1 %s.079, i64 %s.180)
          to label %bb51 unwind label %cleanup, !dbg !9928

bb51:                                             ; preds = %bb50
  %_188.0 = extractvalue { [0 x i8]*, i64 } %299, 0, !dbg !9928
  %_188.1 = extractvalue { [0 x i8]*, i64 } %299, 1, !dbg !9928
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %300 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h85593544e4cde7c2E"([0 x i8]* align 1 %_188.0, i64 %_188.1)
          to label %bb52 unwind label %cleanup, !dbg !9928

bb52:                                             ; preds = %bb51
  %content_bytes.091 = extractvalue { [0 x i8]*, i64 } %300, 0, !dbg !9928
  %content_bytes.192 = extractvalue { [0 x i8]*, i64 } %300, 1, !dbg !9928
  %301 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill93, i32 0, i32 0, !dbg !9928
  store [0 x i8]* %content_bytes.091, [0 x i8]** %301, align 8, !dbg !9928
  %302 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill93, i32 0, i32 1, !dbg !9928
  store i64 %content_bytes.192, i64* %302, align 8, !dbg !9928
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill93, metadata !9485, metadata !DIExpression()), !dbg !9929
  %303 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill94, i32 0, i32 0, !dbg !9929
  store [0 x i8]* %content_bytes.091, [0 x i8]** %303, align 8, !dbg !9929
  %304 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill94, i32 0, i32 1, !dbg !9929
  store i64 %content_bytes.192, i64* %304, align 8, !dbg !9929
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill94, metadata !9930, metadata !DIExpression()), !dbg !9934
  %305 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_374 to { [0 x i8]*, i64 }*, !dbg !9934
  %306 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %305, i32 0, i32 0, !dbg !9934
  store [0 x i8]* %content_bytes.091, [0 x i8]** %306, align 8, !dbg !9934
  %307 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %305, i32 0, i32 1, !dbg !9934
  store i64 %content_bytes.192, i64* %307, align 8, !dbg !9934
  %308 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_374 to { i8*, i64 }*, !dbg !9934
  %309 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %308, i32 0, i32 1, !dbg !9934
  %len95 = load i64, i64* %309, align 8, !dbg !9934
  store i64 %len95, i64* %len.dbg.spill96, align 8, !dbg !9934
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill96, metadata !9487, metadata !DIExpression()), !dbg !9936
  %310 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9936
  %_196.0 = load [0 x i8]*, [0 x i8]** %310, align 8, !dbg !9936, !nonnull !23, !align !445, !noundef !23
  %311 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9936
  %_196.1 = load i64, i64* %311, align 8, !dbg !9936
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_194, [0 x i8]* align 1 %_196.0, i64 %_196.1, i64 %len95, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb53 unwind label %cleanup, !dbg !9936

bb53:                                             ; preds = %bb52
  %312 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_194 to { [0 x i8]*, i64 }*, !dbg !9936
  %313 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %312, i32 0, i32 0, !dbg !9936
  %head.097 = load [0 x i8]*, [0 x i8]** %313, align 8, !dbg !9936, !nonnull !23, !align !445, !noundef !23
  %314 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %312, i32 0, i32 1, !dbg !9936
  %head.198 = load i64, i64* %314, align 8, !dbg !9936
  %315 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill99, i32 0, i32 0, !dbg !9936
  store [0 x i8]* %head.097, [0 x i8]** %315, align 8, !dbg !9936
  %316 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill99, i32 0, i32 1, !dbg !9936
  store i64 %head.198, i64* %316, align 8, !dbg !9936
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill99, metadata !9489, metadata !DIExpression()), !dbg !9937
  %317 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_194, i32 0, i32 1, !dbg !9936
  %318 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %317, i32 0, i32 0, !dbg !9936
  %tail.0100 = load [0 x i8]*, [0 x i8]** %318, align 8, !dbg !9936, !nonnull !23, !align !445, !noundef !23
  %319 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %317, i32 0, i32 1, !dbg !9936
  %tail.1101 = load i64, i64* %319, align 8, !dbg !9936
  %320 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill102, i32 0, i32 0, !dbg !9936
  store [0 x i8]* %tail.0100, [0 x i8]** %320, align 8, !dbg !9936
  %321 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill102, i32 0, i32 1, !dbg !9936
  store i64 %tail.1101, i64* %321, align 8, !dbg !9936
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill102, metadata !9491, metadata !DIExpression()), !dbg !9937
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.097, i64 %head.198, [0 x i8]* align 1 %content_bytes.091, i64 %content_bytes.192, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb54 unwind label %cleanup, !dbg !9937

bb54:                                             ; preds = %bb53
  %322 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9937
  store [0 x i8]* %tail.0100, [0 x i8]** %322, align 8, !dbg !9937
  %323 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9937
  store i64 %tail.1101, i64* %323, align 8, !dbg !9937
  br label %bb45, !dbg !9566

bb34:                                             ; preds = %bb43, %bb33
  store { i64*, i64* }* %iter3, { i64*, i64* }** %self.dbg.spill104, align 8, !dbg !9565
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill104, metadata !9938, metadata !DIExpression()), !dbg !9942
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_362 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %iter3)
          to label %bb101 unwind label %cleanup, !dbg !9942

bb101:                                            ; preds = %bb34
  %_364 = bitcast { i64*, i64* }* %iter3 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9942
; invoke core::option::Option<T>::map
  %324 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc747a901facfa698E"(i64* align 8 %_362, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_364)
          to label %bb102 unwind label %cleanup, !dbg !9942

bb102:                                            ; preds = %bb101
  store { i8*, i64 } %324, { i8*, i64 }* %_133, align 8, !dbg !9942
  %325 = bitcast { i8*, i64 }* %_133 to {}**, !dbg !9565
  %326 = load {}*, {}** %325, align 8, !dbg !9565
  %327 = icmp eq {}* %326, null, !dbg !9565
  %_136 = select i1 %327, i64 0, i64 1, !dbg !9565
  switch i64 %_136, label %bb36 [
    i64 0, label %bb37
    i64 1, label %bb35
  ], !dbg !9565

bb36:                                             ; preds = %bb102
  unreachable, !dbg !9565

bb37:                                             ; preds = %bb102
  br label %bb76, !dbg !9796

bb35:                                             ; preds = %bb102
  %328 = bitcast { i8*, i64 }* %_133 to { [0 x i8]*, i64 }*, !dbg !9565
  %329 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %328, i32 0, i32 0, !dbg !9565
  %s.0105 = load [0 x i8]*, [0 x i8]** %329, align 8, !dbg !9565, !nonnull !23, !align !445, !noundef !23
  %330 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %328, i32 0, i32 1, !dbg !9565
  %s.1106 = load i64, i64* %330, align 8, !dbg !9565
  %331 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill107, i32 0, i32 0, !dbg !9565
  store [0 x i8]* %s.0105, [0 x i8]** %331, align 8, !dbg !9565
  %332 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill107, i32 0, i32 1, !dbg !9565
  store i64 %s.1106, i64* %332, align 8, !dbg !9565
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill107, metadata !9462, metadata !DIExpression()), !dbg !9944
  %333 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill108, i32 0, i32 0, !dbg !9944
  store [0 x i8]* %_333.0, [0 x i8]** %333, align 8, !dbg !9944
  %334 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill108, i32 0, i32 1, !dbg !9944
  store i64 %_333.1, i64* %334, align 8, !dbg !9944
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill108, metadata !9945, metadata !DIExpression()), !dbg !9949
  %335 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_365 to { [0 x i8]*, i64 }*, !dbg !9949
  %336 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %335, i32 0, i32 0, !dbg !9949
  store [0 x i8]* %_333.0, [0 x i8]** %336, align 8, !dbg !9949
  %337 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %335, i32 0, i32 1, !dbg !9949
  store i64 %_333.1, i64* %337, align 8, !dbg !9949
  %338 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_365 to { i8*, i64 }*, !dbg !9949
  %339 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %338, i32 0, i32 1, !dbg !9949
  %len109 = load i64, i64* %339, align 8, !dbg !9949
  store i64 %len109, i64* %len.dbg.spill110, align 8, !dbg !9949
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill110, metadata !9464, metadata !DIExpression()), !dbg !9951
  %340 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9951
  %_144.0 = load [0 x i8]*, [0 x i8]** %340, align 8, !dbg !9951, !nonnull !23, !align !445, !noundef !23
  %341 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9951
  %_144.1 = load i64, i64* %341, align 8, !dbg !9951
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_142, [0 x i8]* align 1 %_144.0, i64 %_144.1, i64 %len109, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb38 unwind label %cleanup, !dbg !9951

bb38:                                             ; preds = %bb35
  %342 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_142 to { [0 x i8]*, i64 }*, !dbg !9951
  %343 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %342, i32 0, i32 0, !dbg !9951
  %head.0111 = load [0 x i8]*, [0 x i8]** %343, align 8, !dbg !9951, !nonnull !23, !align !445, !noundef !23
  %344 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %342, i32 0, i32 1, !dbg !9951
  %head.1112 = load i64, i64* %344, align 8, !dbg !9951
  %345 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill113, i32 0, i32 0, !dbg !9951
  store [0 x i8]* %head.0111, [0 x i8]** %345, align 8, !dbg !9951
  %346 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill113, i32 0, i32 1, !dbg !9951
  store i64 %head.1112, i64* %346, align 8, !dbg !9951
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill113, metadata !9466, metadata !DIExpression()), !dbg !9952
  %347 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_142, i32 0, i32 1, !dbg !9951
  %348 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %347, i32 0, i32 0, !dbg !9951
  %tail.0114 = load [0 x i8]*, [0 x i8]** %348, align 8, !dbg !9951, !nonnull !23, !align !445, !noundef !23
  %349 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %347, i32 0, i32 1, !dbg !9951
  %tail.1115 = load i64, i64* %349, align 8, !dbg !9951
  %350 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill116, i32 0, i32 0, !dbg !9951
  store [0 x i8]* %tail.0114, [0 x i8]** %350, align 8, !dbg !9951
  %351 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill116, i32 0, i32 1, !dbg !9951
  store i64 %tail.1115, i64* %351, align 8, !dbg !9951
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill116, metadata !9468, metadata !DIExpression()), !dbg !9952
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.0111, i64 %head.1112, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb39 unwind label %cleanup, !dbg !9952

bb39:                                             ; preds = %bb38
  %352 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9952
  store [0 x i8]* %tail.0114, [0 x i8]** %352, align 8, !dbg !9952
  %353 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9952
  store i64 %tail.1115, i64* %353, align 8, !dbg !9952
; invoke <T as core::borrow::Borrow<T>>::borrow
  %354 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h27c9f61f5eb5cfddE"([0 x i8]* align 1 %s.0105, i64 %s.1106)
          to label %bb40 unwind label %cleanup, !dbg !9952

bb40:                                             ; preds = %bb39
  %_152.0 = extractvalue { [0 x i8]*, i64 } %354, 0, !dbg !9952
  %_152.1 = extractvalue { [0 x i8]*, i64 } %354, 1, !dbg !9952
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %355 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h85593544e4cde7c2E"([0 x i8]* align 1 %_152.0, i64 %_152.1)
          to label %bb41 unwind label %cleanup, !dbg !9952

bb41:                                             ; preds = %bb40
  %content_bytes.0117 = extractvalue { [0 x i8]*, i64 } %355, 0, !dbg !9952
  %content_bytes.1118 = extractvalue { [0 x i8]*, i64 } %355, 1, !dbg !9952
  %356 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill119, i32 0, i32 0, !dbg !9952
  store [0 x i8]* %content_bytes.0117, [0 x i8]** %356, align 8, !dbg !9952
  %357 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill119, i32 0, i32 1, !dbg !9952
  store i64 %content_bytes.1118, i64* %357, align 8, !dbg !9952
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill119, metadata !9469, metadata !DIExpression()), !dbg !9953
  %358 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill120, i32 0, i32 0, !dbg !9953
  store [0 x i8]* %content_bytes.0117, [0 x i8]** %358, align 8, !dbg !9953
  %359 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill120, i32 0, i32 1, !dbg !9953
  store i64 %content_bytes.1118, i64* %359, align 8, !dbg !9953
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill120, metadata !9954, metadata !DIExpression()), !dbg !9958
  %360 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_367 to { [0 x i8]*, i64 }*, !dbg !9958
  %361 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %360, i32 0, i32 0, !dbg !9958
  store [0 x i8]* %content_bytes.0117, [0 x i8]** %361, align 8, !dbg !9958
  %362 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %360, i32 0, i32 1, !dbg !9958
  store i64 %content_bytes.1118, i64* %362, align 8, !dbg !9958
  %363 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_367 to { i8*, i64 }*, !dbg !9958
  %364 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %363, i32 0, i32 1, !dbg !9958
  %len121 = load i64, i64* %364, align 8, !dbg !9958
  store i64 %len121, i64* %len.dbg.spill122, align 8, !dbg !9958
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill122, metadata !9471, metadata !DIExpression()), !dbg !9960
  %365 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9960
  %_160.0 = load [0 x i8]*, [0 x i8]** %365, align 8, !dbg !9960, !nonnull !23, !align !445, !noundef !23
  %366 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9960
  %_160.1 = load i64, i64* %366, align 8, !dbg !9960
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_158, [0 x i8]* align 1 %_160.0, i64 %_160.1, i64 %len121, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb42 unwind label %cleanup, !dbg !9960

bb42:                                             ; preds = %bb41
  %367 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_158 to { [0 x i8]*, i64 }*, !dbg !9960
  %368 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %367, i32 0, i32 0, !dbg !9960
  %head.0123 = load [0 x i8]*, [0 x i8]** %368, align 8, !dbg !9960, !nonnull !23, !align !445, !noundef !23
  %369 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %367, i32 0, i32 1, !dbg !9960
  %head.1124 = load i64, i64* %369, align 8, !dbg !9960
  %370 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill125, i32 0, i32 0, !dbg !9960
  store [0 x i8]* %head.0123, [0 x i8]** %370, align 8, !dbg !9960
  %371 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill125, i32 0, i32 1, !dbg !9960
  store i64 %head.1124, i64* %371, align 8, !dbg !9960
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill125, metadata !9473, metadata !DIExpression()), !dbg !9961
  %372 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_158, i32 0, i32 1, !dbg !9960
  %373 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %372, i32 0, i32 0, !dbg !9960
  %tail.0126 = load [0 x i8]*, [0 x i8]** %373, align 8, !dbg !9960, !nonnull !23, !align !445, !noundef !23
  %374 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %372, i32 0, i32 1, !dbg !9960
  %tail.1127 = load i64, i64* %374, align 8, !dbg !9960
  %375 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill128, i32 0, i32 0, !dbg !9960
  store [0 x i8]* %tail.0126, [0 x i8]** %375, align 8, !dbg !9960
  %376 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill128, i32 0, i32 1, !dbg !9960
  store i64 %tail.1127, i64* %376, align 8, !dbg !9960
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill128, metadata !9475, metadata !DIExpression()), !dbg !9961
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.0123, i64 %head.1124, [0 x i8]* align 1 %content_bytes.0117, i64 %content_bytes.1118, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb43 unwind label %cleanup, !dbg !9961

bb43:                                             ; preds = %bb42
  %377 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9961
  store [0 x i8]* %tail.0126, [0 x i8]** %377, align 8, !dbg !9961
  %378 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9961
  store i64 %tail.1127, i64* %378, align 8, !dbg !9961
  br label %bb34, !dbg !9565

bb23:                                             ; preds = %bb32, %bb22
  store { i64*, i64* }* %iter2, { i64*, i64* }** %self.dbg.spill130, align 8, !dbg !9564
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill130, metadata !9962, metadata !DIExpression()), !dbg !9966
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_355 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %iter2)
          to label %bb99 unwind label %cleanup, !dbg !9966

bb99:                                             ; preds = %bb23
  %_357 = bitcast { i64*, i64* }* %iter2 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9966
; invoke core::option::Option<T>::map
  %379 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc747a901facfa698E"(i64* align 8 %_355, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_357)
          to label %bb100 unwind label %cleanup, !dbg !9966

bb100:                                            ; preds = %bb99
  store { i8*, i64 } %379, { i8*, i64 }* %_97, align 8, !dbg !9966
  %380 = bitcast { i8*, i64 }* %_97 to {}**, !dbg !9564
  %381 = load {}*, {}** %380, align 8, !dbg !9564
  %382 = icmp eq {}* %381, null, !dbg !9564
  %_100 = select i1 %382, i64 0, i64 1, !dbg !9564
  switch i64 %_100, label %bb25 [
    i64 0, label %bb26
    i64 1, label %bb24
  ], !dbg !9564

bb25:                                             ; preds = %bb100
  unreachable, !dbg !9564

bb26:                                             ; preds = %bb100
  br label %bb76, !dbg !9796

bb24:                                             ; preds = %bb100
  %383 = bitcast { i8*, i64 }* %_97 to { [0 x i8]*, i64 }*, !dbg !9564
  %384 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %383, i32 0, i32 0, !dbg !9564
  %s.0131 = load [0 x i8]*, [0 x i8]** %384, align 8, !dbg !9564, !nonnull !23, !align !445, !noundef !23
  %385 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %383, i32 0, i32 1, !dbg !9564
  %s.1132 = load i64, i64* %385, align 8, !dbg !9564
  %386 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill133, i32 0, i32 0, !dbg !9564
  store [0 x i8]* %s.0131, [0 x i8]** %386, align 8, !dbg !9564
  %387 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill133, i32 0, i32 1, !dbg !9564
  store i64 %s.1132, i64* %387, align 8, !dbg !9564
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill133, metadata !9446, metadata !DIExpression()), !dbg !9968
  %388 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill134, i32 0, i32 0, !dbg !9968
  store [0 x i8]* %_333.0, [0 x i8]** %388, align 8, !dbg !9968
  %389 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill134, i32 0, i32 1, !dbg !9968
  store i64 %_333.1, i64* %389, align 8, !dbg !9968
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill134, metadata !9969, metadata !DIExpression()), !dbg !9973
  %390 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_358 to { [0 x i8]*, i64 }*, !dbg !9973
  %391 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %390, i32 0, i32 0, !dbg !9973
  store [0 x i8]* %_333.0, [0 x i8]** %391, align 8, !dbg !9973
  %392 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %390, i32 0, i32 1, !dbg !9973
  store i64 %_333.1, i64* %392, align 8, !dbg !9973
  %393 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_358 to { i8*, i64 }*, !dbg !9973
  %394 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %393, i32 0, i32 1, !dbg !9973
  %len135 = load i64, i64* %394, align 8, !dbg !9973
  store i64 %len135, i64* %len.dbg.spill136, align 8, !dbg !9973
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill136, metadata !9448, metadata !DIExpression()), !dbg !9975
  %395 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9975
  %_108.0 = load [0 x i8]*, [0 x i8]** %395, align 8, !dbg !9975, !nonnull !23, !align !445, !noundef !23
  %396 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9975
  %_108.1 = load i64, i64* %396, align 8, !dbg !9975
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_106, [0 x i8]* align 1 %_108.0, i64 %_108.1, i64 %len135, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb27 unwind label %cleanup, !dbg !9975

bb27:                                             ; preds = %bb24
  %397 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_106 to { [0 x i8]*, i64 }*, !dbg !9975
  %398 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %397, i32 0, i32 0, !dbg !9975
  %head.0137 = load [0 x i8]*, [0 x i8]** %398, align 8, !dbg !9975, !nonnull !23, !align !445, !noundef !23
  %399 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %397, i32 0, i32 1, !dbg !9975
  %head.1138 = load i64, i64* %399, align 8, !dbg !9975
  %400 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill139, i32 0, i32 0, !dbg !9975
  store [0 x i8]* %head.0137, [0 x i8]** %400, align 8, !dbg !9975
  %401 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill139, i32 0, i32 1, !dbg !9975
  store i64 %head.1138, i64* %401, align 8, !dbg !9975
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill139, metadata !9450, metadata !DIExpression()), !dbg !9976
  %402 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_106, i32 0, i32 1, !dbg !9975
  %403 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %402, i32 0, i32 0, !dbg !9975
  %tail.0140 = load [0 x i8]*, [0 x i8]** %403, align 8, !dbg !9975, !nonnull !23, !align !445, !noundef !23
  %404 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %402, i32 0, i32 1, !dbg !9975
  %tail.1141 = load i64, i64* %404, align 8, !dbg !9975
  %405 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill142, i32 0, i32 0, !dbg !9975
  store [0 x i8]* %tail.0140, [0 x i8]** %405, align 8, !dbg !9975
  %406 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill142, i32 0, i32 1, !dbg !9975
  store i64 %tail.1141, i64* %406, align 8, !dbg !9975
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill142, metadata !9452, metadata !DIExpression()), !dbg !9976
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.0137, i64 %head.1138, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb28 unwind label %cleanup, !dbg !9976

bb28:                                             ; preds = %bb27
  %407 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9976
  store [0 x i8]* %tail.0140, [0 x i8]** %407, align 8, !dbg !9976
  %408 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9976
  store i64 %tail.1141, i64* %408, align 8, !dbg !9976
; invoke <T as core::borrow::Borrow<T>>::borrow
  %409 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h27c9f61f5eb5cfddE"([0 x i8]* align 1 %s.0131, i64 %s.1132)
          to label %bb29 unwind label %cleanup, !dbg !9976

bb29:                                             ; preds = %bb28
  %_116.0 = extractvalue { [0 x i8]*, i64 } %409, 0, !dbg !9976
  %_116.1 = extractvalue { [0 x i8]*, i64 } %409, 1, !dbg !9976
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %410 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h85593544e4cde7c2E"([0 x i8]* align 1 %_116.0, i64 %_116.1)
          to label %bb30 unwind label %cleanup, !dbg !9976

bb30:                                             ; preds = %bb29
  %content_bytes.0143 = extractvalue { [0 x i8]*, i64 } %410, 0, !dbg !9976
  %content_bytes.1144 = extractvalue { [0 x i8]*, i64 } %410, 1, !dbg !9976
  %411 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill145, i32 0, i32 0, !dbg !9976
  store [0 x i8]* %content_bytes.0143, [0 x i8]** %411, align 8, !dbg !9976
  %412 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill145, i32 0, i32 1, !dbg !9976
  store i64 %content_bytes.1144, i64* %412, align 8, !dbg !9976
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill145, metadata !9453, metadata !DIExpression()), !dbg !9977
  %413 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill146, i32 0, i32 0, !dbg !9977
  store [0 x i8]* %content_bytes.0143, [0 x i8]** %413, align 8, !dbg !9977
  %414 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill146, i32 0, i32 1, !dbg !9977
  store i64 %content_bytes.1144, i64* %414, align 8, !dbg !9977
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill146, metadata !9978, metadata !DIExpression()), !dbg !9982
  %415 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_360 to { [0 x i8]*, i64 }*, !dbg !9982
  %416 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %415, i32 0, i32 0, !dbg !9982
  store [0 x i8]* %content_bytes.0143, [0 x i8]** %416, align 8, !dbg !9982
  %417 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %415, i32 0, i32 1, !dbg !9982
  store i64 %content_bytes.1144, i64* %417, align 8, !dbg !9982
  %418 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_360 to { i8*, i64 }*, !dbg !9982
  %419 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %418, i32 0, i32 1, !dbg !9982
  %len147 = load i64, i64* %419, align 8, !dbg !9982
  store i64 %len147, i64* %len.dbg.spill148, align 8, !dbg !9982
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill148, metadata !9455, metadata !DIExpression()), !dbg !9984
  %420 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9984
  %_124.0 = load [0 x i8]*, [0 x i8]** %420, align 8, !dbg !9984, !nonnull !23, !align !445, !noundef !23
  %421 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9984
  %_124.1 = load i64, i64* %421, align 8, !dbg !9984
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_122, [0 x i8]* align 1 %_124.0, i64 %_124.1, i64 %len147, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb31 unwind label %cleanup, !dbg !9984

bb31:                                             ; preds = %bb30
  %422 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_122 to { [0 x i8]*, i64 }*, !dbg !9984
  %423 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %422, i32 0, i32 0, !dbg !9984
  %head.0149 = load [0 x i8]*, [0 x i8]** %423, align 8, !dbg !9984, !nonnull !23, !align !445, !noundef !23
  %424 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %422, i32 0, i32 1, !dbg !9984
  %head.1150 = load i64, i64* %424, align 8, !dbg !9984
  %425 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill151, i32 0, i32 0, !dbg !9984
  store [0 x i8]* %head.0149, [0 x i8]** %425, align 8, !dbg !9984
  %426 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill151, i32 0, i32 1, !dbg !9984
  store i64 %head.1150, i64* %426, align 8, !dbg !9984
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill151, metadata !9457, metadata !DIExpression()), !dbg !9985
  %427 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_122, i32 0, i32 1, !dbg !9984
  %428 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %427, i32 0, i32 0, !dbg !9984
  %tail.0152 = load [0 x i8]*, [0 x i8]** %428, align 8, !dbg !9984, !nonnull !23, !align !445, !noundef !23
  %429 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %427, i32 0, i32 1, !dbg !9984
  %tail.1153 = load i64, i64* %429, align 8, !dbg !9984
  %430 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill154, i32 0, i32 0, !dbg !9984
  store [0 x i8]* %tail.0152, [0 x i8]** %430, align 8, !dbg !9984
  %431 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill154, i32 0, i32 1, !dbg !9984
  store i64 %tail.1153, i64* %431, align 8, !dbg !9984
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill154, metadata !9459, metadata !DIExpression()), !dbg !9985
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.0149, i64 %head.1150, [0 x i8]* align 1 %content_bytes.0143, i64 %content_bytes.1144, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb32 unwind label %cleanup, !dbg !9985

bb32:                                             ; preds = %bb31
  %432 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9985
  store [0 x i8]* %tail.0152, [0 x i8]** %432, align 8, !dbg !9985
  %433 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9985
  store i64 %tail.1153, i64* %433, align 8, !dbg !9985
  br label %bb23, !dbg !9564

bb12:                                             ; preds = %bb21, %bb11
  store { i64*, i64* }* %iter1, { i64*, i64* }** %self.dbg.spill156, align 8, !dbg !9563
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill156, metadata !9986, metadata !DIExpression()), !dbg !9990
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_348 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %iter1)
          to label %bb97 unwind label %cleanup, !dbg !9990

bb97:                                             ; preds = %bb12
  %_350 = bitcast { i64*, i64* }* %iter1 to %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, !dbg !9990
; invoke core::option::Option<T>::map
  %434 = invoke { i8*, i64 } @"_ZN4core6option15Option$LT$T$GT$3map17hc747a901facfa698E"(i64* align 8 %_348, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_350)
          to label %bb98 unwind label %cleanup, !dbg !9990

bb98:                                             ; preds = %bb97
  store { i8*, i64 } %434, { i8*, i64 }* %_61, align 8, !dbg !9990
  %435 = bitcast { i8*, i64 }* %_61 to {}**, !dbg !9563
  %436 = load {}*, {}** %435, align 8, !dbg !9563
  %437 = icmp eq {}* %436, null, !dbg !9563
  %_64 = select i1 %437, i64 0, i64 1, !dbg !9563
  switch i64 %_64, label %bb14 [
    i64 0, label %bb15
    i64 1, label %bb13
  ], !dbg !9563

bb14:                                             ; preds = %bb98
  unreachable, !dbg !9563

bb15:                                             ; preds = %bb98
  br label %bb76, !dbg !9796

bb13:                                             ; preds = %bb98
  %438 = bitcast { i8*, i64 }* %_61 to { [0 x i8]*, i64 }*, !dbg !9563
  %439 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %438, i32 0, i32 0, !dbg !9563
  %s.0157 = load [0 x i8]*, [0 x i8]** %439, align 8, !dbg !9563, !nonnull !23, !align !445, !noundef !23
  %440 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %438, i32 0, i32 1, !dbg !9563
  %s.1158 = load i64, i64* %440, align 8, !dbg !9563
  %441 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill159, i32 0, i32 0, !dbg !9563
  store [0 x i8]* %s.0157, [0 x i8]** %441, align 8, !dbg !9563
  %442 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill159, i32 0, i32 1, !dbg !9563
  store i64 %s.1158, i64* %442, align 8, !dbg !9563
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill159, metadata !9430, metadata !DIExpression()), !dbg !9992
  %443 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill160, i32 0, i32 0, !dbg !9992
  store [0 x i8]* %_333.0, [0 x i8]** %443, align 8, !dbg !9992
  %444 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill160, i32 0, i32 1, !dbg !9992
  store i64 %_333.1, i64* %444, align 8, !dbg !9992
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill160, metadata !9993, metadata !DIExpression()), !dbg !9997
  %445 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_351 to { [0 x i8]*, i64 }*, !dbg !9997
  %446 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %445, i32 0, i32 0, !dbg !9997
  store [0 x i8]* %_333.0, [0 x i8]** %446, align 8, !dbg !9997
  %447 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %445, i32 0, i32 1, !dbg !9997
  store i64 %_333.1, i64* %447, align 8, !dbg !9997
  %448 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_351 to { i8*, i64 }*, !dbg !9997
  %449 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %448, i32 0, i32 1, !dbg !9997
  %len161 = load i64, i64* %449, align 8, !dbg !9997
  store i64 %len161, i64* %len.dbg.spill162, align 8, !dbg !9997
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill162, metadata !9432, metadata !DIExpression()), !dbg !9999
  %450 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !9999
  %_72.0 = load [0 x i8]*, [0 x i8]** %450, align 8, !dbg !9999, !nonnull !23, !align !445, !noundef !23
  %451 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !9999
  %_72.1 = load i64, i64* %451, align 8, !dbg !9999
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_70, [0 x i8]* align 1 %_72.0, i64 %_72.1, i64 %len161, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb16 unwind label %cleanup, !dbg !9999

bb16:                                             ; preds = %bb13
  %452 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_70 to { [0 x i8]*, i64 }*, !dbg !9999
  %453 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %452, i32 0, i32 0, !dbg !9999
  %head.0163 = load [0 x i8]*, [0 x i8]** %453, align 8, !dbg !9999, !nonnull !23, !align !445, !noundef !23
  %454 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %452, i32 0, i32 1, !dbg !9999
  %head.1164 = load i64, i64* %454, align 8, !dbg !9999
  %455 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill165, i32 0, i32 0, !dbg !9999
  store [0 x i8]* %head.0163, [0 x i8]** %455, align 8, !dbg !9999
  %456 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill165, i32 0, i32 1, !dbg !9999
  store i64 %head.1164, i64* %456, align 8, !dbg !9999
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill165, metadata !9434, metadata !DIExpression()), !dbg !10000
  %457 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_70, i32 0, i32 1, !dbg !9999
  %458 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %457, i32 0, i32 0, !dbg !9999
  %tail.0166 = load [0 x i8]*, [0 x i8]** %458, align 8, !dbg !9999, !nonnull !23, !align !445, !noundef !23
  %459 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %457, i32 0, i32 1, !dbg !9999
  %tail.1167 = load i64, i64* %459, align 8, !dbg !9999
  %460 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill168, i32 0, i32 0, !dbg !9999
  store [0 x i8]* %tail.0166, [0 x i8]** %460, align 8, !dbg !9999
  %461 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill168, i32 0, i32 1, !dbg !9999
  store i64 %tail.1167, i64* %461, align 8, !dbg !9999
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill168, metadata !9436, metadata !DIExpression()), !dbg !10000
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.0163, i64 %head.1164, [0 x i8]* align 1 %_333.0, i64 %_333.1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb17 unwind label %cleanup, !dbg !10000

bb17:                                             ; preds = %bb16
  %462 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !10000
  store [0 x i8]* %tail.0166, [0 x i8]** %462, align 8, !dbg !10000
  %463 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !10000
  store i64 %tail.1167, i64* %463, align 8, !dbg !10000
; invoke <T as core::borrow::Borrow<T>>::borrow
  %464 = invoke { [0 x i8]*, i64 } @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h27c9f61f5eb5cfddE"([0 x i8]* align 1 %s.0157, i64 %s.1158)
          to label %bb18 unwind label %cleanup, !dbg !10000

bb18:                                             ; preds = %bb17
  %_80.0 = extractvalue { [0 x i8]*, i64 } %464, 0, !dbg !10000
  %_80.1 = extractvalue { [0 x i8]*, i64 } %464, 1, !dbg !10000
; invoke <[T] as core::convert::AsRef<[T]>>::as_ref
  %465 = invoke { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h85593544e4cde7c2E"([0 x i8]* align 1 %_80.0, i64 %_80.1)
          to label %bb19 unwind label %cleanup, !dbg !10000

bb19:                                             ; preds = %bb18
  %content_bytes.0169 = extractvalue { [0 x i8]*, i64 } %465, 0, !dbg !10000
  %content_bytes.1170 = extractvalue { [0 x i8]*, i64 } %465, 1, !dbg !10000
  %466 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill171, i32 0, i32 0, !dbg !10000
  store [0 x i8]* %content_bytes.0169, [0 x i8]** %466, align 8, !dbg !10000
  %467 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %content_bytes.dbg.spill171, i32 0, i32 1, !dbg !10000
  store i64 %content_bytes.1170, i64* %467, align 8, !dbg !10000
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %content_bytes.dbg.spill171, metadata !9437, metadata !DIExpression()), !dbg !10001
  %468 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill172, i32 0, i32 0, !dbg !10001
  store [0 x i8]* %content_bytes.0169, [0 x i8]** %468, align 8, !dbg !10001
  %469 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill172, i32 0, i32 1, !dbg !10001
  store i64 %content_bytes.1170, i64* %469, align 8, !dbg !10001
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill172, metadata !10002, metadata !DIExpression()), !dbg !10006
  %470 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_353 to { [0 x i8]*, i64 }*, !dbg !10006
  %471 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %470, i32 0, i32 0, !dbg !10006
  store [0 x i8]* %content_bytes.0169, [0 x i8]** %471, align 8, !dbg !10006
  %472 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %470, i32 0, i32 1, !dbg !10006
  store i64 %content_bytes.1170, i64* %472, align 8, !dbg !10006
  %473 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_353 to { i8*, i64 }*, !dbg !10006
  %474 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %473, i32 0, i32 1, !dbg !10006
  %len173 = load i64, i64* %474, align 8, !dbg !10006
  store i64 %len173, i64* %len.dbg.spill174, align 8, !dbg !10006
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill174, metadata !9439, metadata !DIExpression()), !dbg !10008
  %475 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !10008
  %_88.0 = load [0 x i8]*, [0 x i8]** %475, align 8, !dbg !10008, !nonnull !23, !align !445, !noundef !23
  %476 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !10008
  %_88.1 = load i64, i64* %476, align 8, !dbg !10008
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE"({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* sret({ { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }) %_86, [0 x i8]* align 1 %_88.0, i64 %_88.1, i64 %len173, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb20 unwind label %cleanup, !dbg !10008

bb20:                                             ; preds = %bb19
  %477 = bitcast { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_86 to { [0 x i8]*, i64 }*, !dbg !10008
  %478 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %477, i32 0, i32 0, !dbg !10008
  %head.0175 = load [0 x i8]*, [0 x i8]** %478, align 8, !dbg !10008, !nonnull !23, !align !445, !noundef !23
  %479 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %477, i32 0, i32 1, !dbg !10008
  %head.1176 = load i64, i64* %479, align 8, !dbg !10008
  %480 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill177, i32 0, i32 0, !dbg !10008
  store [0 x i8]* %head.0175, [0 x i8]** %480, align 8, !dbg !10008
  %481 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %head.dbg.spill177, i32 0, i32 1, !dbg !10008
  store i64 %head.1176, i64* %481, align 8, !dbg !10008
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %head.dbg.spill177, metadata !9441, metadata !DIExpression()), !dbg !10009
  %482 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x i8]*, i64 } }* %_86, i32 0, i32 1, !dbg !10008
  %483 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %482, i32 0, i32 0, !dbg !10008
  %tail.0178 = load [0 x i8]*, [0 x i8]** %483, align 8, !dbg !10008, !nonnull !23, !align !445, !noundef !23
  %484 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %482, i32 0, i32 1, !dbg !10008
  %tail.1179 = load i64, i64* %484, align 8, !dbg !10008
  %485 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill180, i32 0, i32 0, !dbg !10008
  store [0 x i8]* %tail.0178, [0 x i8]** %485, align 8, !dbg !10008
  %486 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %tail.dbg.spill180, i32 0, i32 1, !dbg !10008
  store i64 %tail.1179, i64* %486, align 8, !dbg !10008
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %tail.dbg.spill180, metadata !9443, metadata !DIExpression()), !dbg !10009
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE"([0 x i8]* align 1 %head.0175, i64 %head.1176, [0 x i8]* align 1 %content_bytes.0169, i64 %content_bytes.1170, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc554 to %"core::panic::location::Location"*))
          to label %bb21 unwind label %cleanup, !dbg !10009

bb21:                                             ; preds = %bb20
  %487 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 0, !dbg !10009
  store [0 x i8]* %tail.0178, [0 x i8]** %487, align 8, !dbg !10009
  %488 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %target, i32 0, i32 1, !dbg !10009
  store i64 %tail.1179, i64* %488, align 8, !dbg !10009
  br label %bb12, !dbg !9563

abort:                                            ; preds = %bb78
  %489 = landingpad { i8*, i32 }
          cleanup, !dbg !10010
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !10010
  unreachable, !dbg !10010

bb79:                                             ; preds = %bb78
  %490 = bitcast { i8*, i32 }* %1 to i8**, !dbg !10010
  %491 = load i8*, i8** %490, align 8, !dbg !10010
  %492 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !10010
  %493 = load i32, i32* %492, align 8, !dbg !10010
  %494 = insertvalue { i8*, i32 } undef, i8* %491, 0, !dbg !10010
  %495 = insertvalue { i8*, i32 } %494, i32 %493, 1, !dbg !10010
  resume { i8*, i32 } %495, !dbg !10010

bb77:                                             ; preds = %bb81, %bb76
  ret void, !dbg !9613
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h2d47737fcc58c300E"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* align 1 %_1, { [0 x i8]*, i64 }* align 8 %it) unnamed_addr #0 !dbg !10011 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %len.dbg.spill4 = alloca i64, align 8
  %data.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %it.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %it.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"*, align 8
  %_23 = alloca { i8*, i64 }, align 8
  %_22 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"* %_1, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}]"** %_1.dbg.spill, metadata !10016, metadata !DIExpression()), !dbg !10017
  store { [0 x i8]*, i64 }* %it, { [0 x i8]*, i64 }** %it.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %it.dbg.spill, metadata !10013, metadata !DIExpression()), !dbg !10018
; call <&T as core::borrow::Borrow<T>>::borrow
  %0 = call { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h41fc1c2d47f6d610E"({ [0 x i8]*, i64 }* align 8 %it), !dbg !10019
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !10019
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !10019
  br label %bb1, !dbg !10019

bb1:                                              ; preds = %start
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17ha3be070eaf30319eE"([0 x i8]* align 1 %_5.0, i64 %_5.1), !dbg !10019
  %it.0 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !10019
  %it.1 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !10019
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %it.dbg.spill1, i32 0, i32 0, !dbg !10019
  store [0 x i8]* %it.0, [0 x i8]** %2, align 8, !dbg !10019
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %it.dbg.spill1, i32 0, i32 1, !dbg !10019
  store i64 %it.1, i64* %3, align 8, !dbg !10019
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %it.dbg.spill1, metadata !10014, metadata !DIExpression()), !dbg !10020
  br label %bb2, !dbg !10019

bb2:                                              ; preds = %bb1
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !10021
  store [0 x i8]* %it.0, [0 x i8]** %4, align 8, !dbg !10021
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !10021
  store i64 %it.1, i64* %5, align 8, !dbg !10021
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !10022, metadata !DIExpression()), !dbg !10026
  %self = bitcast [0 x i8]* %it.0 to i8*, !dbg !10026
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !10026
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !10027, metadata !DIExpression()), !dbg !10031
  store i8* %self, i8** %data.dbg.spill, align 8, !dbg !10031
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !10032, metadata !DIExpression()), !dbg !10040
  store i64 %it.1, i64* %len.dbg.spill, align 8, !dbg !10042
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10036, metadata !DIExpression()), !dbg !10040
  store i8* %self, i8** %data.dbg.spill3, align 8, !dbg !10040
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill3, metadata !10043, metadata !DIExpression()), !dbg !10048
  store i64 %it.1, i64* %len.dbg.spill4, align 8, !dbg !10040
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill4, metadata !10047, metadata !DIExpression()), !dbg !10048
  store i8* %self, i8** %self.dbg.spill5, align 8, !dbg !10048
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !10050, metadata !DIExpression()), !dbg !10054
  %data_address = bitcast i8* %self to {}*, !dbg !10054
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10054
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10056, metadata !DIExpression()), !dbg !10061
  store i64 %it.1, i64* %metadata.dbg.spill, align 8, !dbg !10048
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !10060, metadata !DIExpression()), !dbg !10061
  %6 = bitcast { i8*, i64 }* %_23 to {}**, !dbg !10061
  store {}* %data_address, {}** %6, align 8, !dbg !10061
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_23, i32 0, i32 1, !dbg !10061
  store i64 %it.1, i64* %7, align 8, !dbg !10061
  %8 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_22 to { i8*, i64 }*, !dbg !10061
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_23, i32 0, i32 0, !dbg !10061
  %10 = load i8*, i8** %9, align 8, !dbg !10061
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_23, i32 0, i32 1, !dbg !10061
  %12 = load i64, i64* %11, align 8, !dbg !10061
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 0, !dbg !10061
  store i8* %10, i8** %13, align 8, !dbg !10061
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %8, i32 0, i32 1, !dbg !10061
  store i64 %12, i64* %14, align 8, !dbg !10061
  %15 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_22 to { [0 x i8]*, i64 }*, !dbg !10061
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 0, !dbg !10061
  %_15.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !dbg !10061
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %15, i32 0, i32 1, !dbg !10061
  %_15.1 = load i64, i64* %17, align 8, !dbg !10061
  %18 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0, !dbg !10063
  %19 = insertvalue { [0 x i8]*, i64 } %18, i64 %_15.1, 1, !dbg !10063
  ret { [0 x i8]*, i64 } %19, !dbg !10063
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hb06c30b16be46e74E"(i64* align 8 %0, i64 %1, i64 %n) unnamed_addr #0 !dbg !10064 {
start:
  %self.dbg.spill1 = alloca { i64*, i64* }, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %f.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]", align 1
  %n.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64*, i64* }, align 8
  %_1 = alloca { i64*, i64 }, align 8
  %2 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_1, i32 0, i32 0
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_1, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  %4 = bitcast { i64*, i64 }* %_1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*
  %5 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 0
  %6 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %5, align 8, !nonnull !23, !align !584, !noundef !23
  %7 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %4, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %_1, metadata !10069, metadata !DIExpression(DW_OP_deref)), !dbg !10070
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !10068, metadata !DIExpression()), !dbg !10071
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %f.dbg.spill, metadata !10072, metadata !DIExpression()), !dbg !10078
  %9 = bitcast { i64*, i64 }* %_1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !10079
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !10079
  %_9.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !10079, !nonnull !23, !align !584, !noundef !23
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !10079
  %_9.1 = load i64, i64* %11, align 8, !dbg !10079
  %12 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !10079
  store [0 x { [0 x i8]*, i64 }]* %_9.0, [0 x { [0 x i8]*, i64 }]** %12, align 8, !dbg !10079
  %13 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !10079
  store i64 %_9.1, i64* %13, align 8, !dbg !10079
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !10080, metadata !DIExpression()), !dbg !10084
; call core::slice::iter::Iter<T>::new
  %14 = call { i64*, i64* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h31444a6cf065ff14E"([0 x { [0 x i8]*, i64 }]* align 8 %_9.0, i64 %_9.1), !dbg !10084
  %self.0 = extractvalue { i64*, i64* } %14, 0, !dbg !10084
  %self.1 = extractvalue { i64*, i64* } %14, 1, !dbg !10084
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill1, i32 0, i32 0, !dbg !10084
  store i64* %self.0, i64** %15, align 8, !dbg !10084
  %16 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self.dbg.spill1, i32 0, i32 1, !dbg !10084
  store i64* %self.1, i64** %16, align 8, !dbg !10084
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %self.dbg.spill1, metadata !10076, metadata !DIExpression()), !dbg !10078
  br label %bb2, !dbg !10084

bb2:                                              ; preds = %start
; call core::iter::adapters::map::Map<I,F>::new
  %17 = call { i64*, i64* } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hc92e239c89dd940dE"(i64* %self.0, i64* %self.1), !dbg !10078
  store { i64*, i64* } %17, { i64*, i64* }* %_4, align 8, !dbg !10078
  br label %bb3, !dbg !10078

bb3:                                              ; preds = %bb2
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::try_fold
  %18 = call { i64, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h8de37ed017eb7085E"({ i64*, i64* }* align 8 %_4, i64 %n), !dbg !10079
  %19 = extractvalue { i64, i64 } %18, 0, !dbg !10079
  %20 = extractvalue { i64, i64 } %18, 1, !dbg !10079
  br label %bb1, !dbg !10079

bb1:                                              ; preds = %bb3
  %21 = insertvalue { i64, i64 } undef, i64 %19, 0, !dbg !10085
  %22 = insertvalue { i64, i64 } %21, i64 %20, 1, !dbg !10085
  ret { i64, i64 } %22, !dbg !10085
}

; alloc::str::join_generic_copy::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h9c4954e6196e7c1dE"(%"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* align 1 %_1, { [0 x i8]*, i64 }* align 8 %s) unnamed_addr #0 !dbg !10086 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"*, align 8
  store %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"* %_1, %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]"** %_1.dbg.spill, metadata !10091, metadata !DIExpression()), !dbg !10092
  store { [0 x i8]*, i64 }* %s, { [0 x i8]*, i64 }** %s.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %s.dbg.spill, metadata !10090, metadata !DIExpression()), !dbg !10093
; call <&T as core::borrow::Borrow<T>>::borrow
  %0 = call { [0 x i8]*, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h41fc1c2d47f6d610E"({ [0 x i8]*, i64 }* align 8 %s), !dbg !10094
  %_6.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !10094
  %_6.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !10094
  br label %bb1, !dbg !10094

bb1:                                              ; preds = %start
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { [0 x i8]*, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17ha3be070eaf30319eE"([0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !10094
  %_4.0 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !10094
  %_4.1 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !10094
  br label %bb2, !dbg !10094

bb2:                                              ; preds = %bb1
  ret i64 %_4.1, !dbg !10095
}

; alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h651595d769c8765eE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, [0 x i8]* align 1 %sep.0, i64 %sep.1) unnamed_addr #1 !dbg !10096 {
start:
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %sep.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_9 = alloca %"alloc::vec::Vec<u8>", align 8
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %slice.0, [0 x { [0 x i8]*, i64 }]** %2, align 8
  %3 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %slice.dbg.spill, metadata !10101, metadata !DIExpression()), !dbg !10103
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 0
  store [0 x i8]* %sep.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 1
  store i64 %sep.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep.dbg.spill, metadata !10102, metadata !DIExpression()), !dbg !10104
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %bytes, metadata !10105, metadata !DIExpression()), !dbg !10111
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !10113
  store [0 x i8]* %sep.0, [0 x i8]** %6, align 8, !dbg !10113
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !10113
  store i64 %sep.1, i64* %7, align 8, !dbg !10113
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !10114, metadata !DIExpression()), !dbg !10118
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !10118
  store [0 x i8]* %sep.0, [0 x i8]** %8, align 8, !dbg !10118
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !10118
  store i64 %sep.1, i64* %9, align 8, !dbg !10118
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !10118
  %_6.0 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !10118, !nonnull !23, !align !445, !noundef !23
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !10118
  %_6.1 = load i64, i64* %11, align 8, !dbg !10118
  br label %bb2, !dbg !10118

bb2:                                              ; preds = %start
; call alloc::str::join_generic_copy
  call void @_ZN5alloc3str17join_generic_copy17h8f737c87c8b13d55E(%"alloc::vec::Vec<u8>"* sret(%"alloc::vec::Vec<u8>") %bytes, [0 x { [0 x i8]*, i64 }]* align 8 %slice.0, i64 %slice.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !10119
  br label %bb1, !dbg !10119

bb1:                                              ; preds = %bb2
  %12 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !10111
  %13 = bitcast %"alloc::vec::Vec<u8>"* %bytes to i8*, !dbg !10111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !10111
  %14 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*, !dbg !10111
  %15 = bitcast %"alloc::vec::Vec<u8>"* %14 to i8*, !dbg !10111
  %16 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !10111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !10111
  ret void, !dbg !10120
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79436617013f5de6E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !10121 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10125, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10129, metadata !DIExpression()), !dbg !10134
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !10143
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !10143
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !10144, metadata !DIExpression()), !dbg !10151
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !10151
  %self3 = load i8*, i8** %2, align 8, !dbg !10151, !nonnull !23, !noundef !23
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !10151
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !10152, metadata !DIExpression()), !dbg !10156
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !10156
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !10158, metadata !DIExpression()), !dbg !10162
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !10162
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10126, metadata !DIExpression()), !dbg !10164
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !10142
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !10140, metadata !DIExpression()), !dbg !10165
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !10165
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !10166, metadata !DIExpression()), !dbg !10171
  %3 = bitcast {}** %1 to i64*, !dbg !10173
  store i64 0, i64* %3, align 8, !dbg !10173
  %data_address = load {}*, {}** %1, align 8, !dbg !10173
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10173
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10133, metadata !DIExpression()), !dbg !10134
  br label %bb2, !dbg !10173

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !10134
  store {}* %data_address, {}** %4, align 8, !dbg !10134
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10134
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10134
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !10134
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10134
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !10134
  %other = load i8*, i8** %8, align 8, !dbg !10134
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10134
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10170, metadata !DIExpression()), !dbg !10171
  %9 = icmp eq i8* %self3, %other, !dbg !10171
  %10 = zext i1 %9 to i8, !dbg !10171
  store i8 %10, i8* %0, align 1, !dbg !10171
  %11 = load i8, i8* %0, align 1, !dbg !10171, !range !512, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !10171
  br label %bb3, !dbg !10171

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !10179
  call void @llvm.assume(i1 %_4), !dbg !10180
  br label %bb1, !dbg !10180

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !10181
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h910caaf7abb314fcE"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* align 8 %self) unnamed_addr #0 !dbg !10182 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca { i8*, i64 }*, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::ffi::c_str::CString>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %self, %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %self.dbg.spill, metadata !10187, metadata !DIExpression()), !dbg !10190
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10191, metadata !DIExpression()), !dbg !10196
  %self1 = bitcast %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %self to { i64*, i64 }*, !dbg !10207
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !10207
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !10208, metadata !DIExpression()), !dbg !10215
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !10215
  %self3 = load i64*, i64** %2, align 8, !dbg !10215, !nonnull !23, !noundef !23
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !10215
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !10216, metadata !DIExpression()), !dbg !10222
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !10222
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !10224, metadata !DIExpression()), !dbg !10230
  %_9 = bitcast i64* %self3 to { i8*, i64 }*, !dbg !10230
  store { i8*, i64 }* %_9, { i8*, i64 }** %ptr.dbg.spill, align 8, !dbg !10230
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %ptr.dbg.spill, metadata !10188, metadata !DIExpression()), !dbg !10232
  store { i8*, i64 }* %_9, { i8*, i64 }** %self.dbg.spill6, align 8, !dbg !10206
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill6, metadata !10204, metadata !DIExpression()), !dbg !10233
  %self7 = bitcast { i8*, i64 }* %_9 to i8*, !dbg !10233
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !10233
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !10234, metadata !DIExpression()), !dbg !10239
  %3 = bitcast {}** %1 to i64*, !dbg !10241
  store i64 0, i64* %3, align 8, !dbg !10241
  %data_address = load {}*, {}** %1, align 8, !dbg !10241
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10241
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10195, metadata !DIExpression()), !dbg !10196
  br label %bb2, !dbg !10241

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !10196
  store {}* %data_address, {}** %4, align 8, !dbg !10196
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10196
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10196
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !10196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10196
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !10196
  %other = load i8*, i8** %8, align 8, !dbg !10196
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10196
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10238, metadata !DIExpression()), !dbg !10239
  %9 = icmp eq i8* %self7, %other, !dbg !10239
  %10 = zext i1 %9 to i8, !dbg !10239
  store i8 %10, i8* %0, align 1, !dbg !10239
  %11 = load i8, i8* %0, align 1, !dbg !10239, !range !512, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !10239
  br label %bb3, !dbg !10239

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !10247
  call void @llvm.assume(i1 %_4), !dbg !10248
  br label %bb1, !dbg !10248

bb1:                                              ; preds = %bb3
  ret { i8*, i64 }* %_9, !dbg !10249
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8** @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hca17794ebab158c9E"(%"alloc::vec::Vec<*const i8>"* align 8 %self) unnamed_addr #0 !dbg !10250 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8**, align 8
  %ptr.dbg.spill = alloca i8**, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<*const i8>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<*const i8>"* %self, %"alloc::vec::Vec<*const i8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<*const i8>"** %self.dbg.spill, metadata !10256, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10260, metadata !DIExpression()), !dbg !10265
  %self1 = bitcast %"alloc::vec::Vec<*const i8>"* %self to { i64*, i64 }*, !dbg !10276
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !10276
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !10277, metadata !DIExpression()), !dbg !10284
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !10284
  %self3 = load i64*, i64** %2, align 8, !dbg !10284, !nonnull !23, !noundef !23
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !10284
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !10285, metadata !DIExpression()), !dbg !10291
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !10291
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !10293, metadata !DIExpression()), !dbg !10299
  %_9 = bitcast i64* %self3 to i8**, !dbg !10299
  store i8** %_9, i8*** %ptr.dbg.spill, align 8, !dbg !10299
  call void @llvm.dbg.declare(metadata i8*** %ptr.dbg.spill, metadata !10257, metadata !DIExpression()), !dbg !10301
  store i8** %_9, i8*** %self.dbg.spill6, align 8, !dbg !10275
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill6, metadata !10273, metadata !DIExpression()), !dbg !10302
  %self7 = bitcast i8** %_9 to i8*, !dbg !10302
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !10302
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !10303, metadata !DIExpression()), !dbg !10308
  %3 = bitcast {}** %1 to i64*, !dbg !10310
  store i64 0, i64* %3, align 8, !dbg !10310
  %data_address = load {}*, {}** %1, align 8, !dbg !10310
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10310
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10264, metadata !DIExpression()), !dbg !10265
  br label %bb2, !dbg !10310

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !10265
  store {}* %data_address, {}** %4, align 8, !dbg !10265
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10265
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10265
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !10265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10265
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !10265
  %other = load i8*, i8** %8, align 8, !dbg !10265
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10265
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10307, metadata !DIExpression()), !dbg !10308
  %9 = icmp eq i8* %self7, %other, !dbg !10308
  %10 = zext i1 %9 to i8, !dbg !10308
  store i8 %10, i8* %0, align 1, !dbg !10308
  %11 = load i8, i8* %0, align 1, !dbg !10308, !range !512, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !10308
  br label %bb3, !dbg !10308

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !10316
  call void @llvm.assume(i1 %_4), !dbg !10317
  br label %bb1, !dbg !10317

bb1:                                              ; preds = %bb3
  ret i8** %_9, !dbg !10318
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal { {}*, [3 x i64]* }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hfef026a6d1b36ffcE"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* align 8 %self) unnamed_addr #0 !dbg !10319 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca { {}*, [3 x i64]* }*, align 8
  %ptr.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill2 = alloca { i64*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %self, %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %self.dbg.spill, metadata !10324, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10328, metadata !DIExpression()), !dbg !10333
  %self1 = bitcast %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %self to { i64*, i64 }*, !dbg !10344
  store { i64*, i64 }* %self1, { i64*, i64 }** %self.dbg.spill2, align 8, !dbg !10344
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill2, metadata !10345, metadata !DIExpression()), !dbg !10352
  %2 = bitcast { i64*, i64 }* %self1 to i64**, !dbg !10352
  %self3 = load i64*, i64** %2, align 8, !dbg !10352, !nonnull !23, !noundef !23
  store i64* %self3, i64** %self.dbg.spill4, align 8, !dbg !10352
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !10353, metadata !DIExpression()), !dbg !10359
  store i64* %self3, i64** %self.dbg.spill5, align 8, !dbg !10359
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !10361, metadata !DIExpression()), !dbg !10367
  %_9 = bitcast i64* %self3 to { {}*, [3 x i64]* }*, !dbg !10367
  store { {}*, [3 x i64]* }* %_9, { {}*, [3 x i64]* }** %ptr.dbg.spill, align 8, !dbg !10367
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %ptr.dbg.spill, metadata !10325, metadata !DIExpression()), !dbg !10369
  store { {}*, [3 x i64]* }* %_9, { {}*, [3 x i64]* }** %self.dbg.spill6, align 8, !dbg !10343
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %self.dbg.spill6, metadata !10341, metadata !DIExpression()), !dbg !10370
  %self7 = bitcast { {}*, [3 x i64]* }* %_9 to i8*, !dbg !10370
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !10370
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !10371, metadata !DIExpression()), !dbg !10376
  %3 = bitcast {}** %1 to i64*, !dbg !10378
  store i64 0, i64* %3, align 8, !dbg !10378
  %data_address = load {}*, {}** %1, align 8, !dbg !10378
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10378
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10332, metadata !DIExpression()), !dbg !10333
  br label %bb2, !dbg !10378

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !10333
  store {}* %data_address, {}** %4, align 8, !dbg !10333
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10333
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10333
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !10333
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10333
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !10333
  %other = load i8*, i8** %8, align 8, !dbg !10333
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10333
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10375, metadata !DIExpression()), !dbg !10376
  %9 = icmp eq i8* %self7, %other, !dbg !10376
  %10 = zext i1 %9 to i8, !dbg !10376
  store i8 %10, i8* %0, align 1, !dbg !10376
  %11 = load i8, i8* %0, align 1, !dbg !10376, !range !512, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !10376
  br label %bb3, !dbg !10376

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !10384
  call void @llvm.assume(i1 %_4), !dbg !10385
  br label %bb1, !dbg !10385

bb1:                                              ; preds = %bb3
  ret { {}*, [3 x i64]* }* %_9, !dbg !10386
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hb0491b9b26179efeE"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* %other.0, i64 %other.1) unnamed_addr #0 !dbg !10387 {
start:
  %count.dbg.spill7 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill6 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %src.dbg.spill = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %count.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10391, metadata !DIExpression()), !dbg !10397
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !10392, metadata !DIExpression()), !dbg !10398
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !10399, metadata !DIExpression()), !dbg !10416
  store i64 %other.1, i64* %count.dbg.spill, align 8, !dbg !10418
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !10393, metadata !DIExpression()), !dbg !10419
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hd863dc2932758bc4E"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %other.1), !dbg !10420
  br label %bb1, !dbg !10420

bb1:                                              ; preds = %start
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !10421
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !10422, metadata !DIExpression()), !dbg !10425
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10425
  %len = load i64, i64* %3, align 8, !dbg !10425
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !10425
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10395, metadata !DIExpression()), !dbg !10426
  %src = bitcast [0 x i8]* %other.0 to i8*, !dbg !10427
  store i8* %src, i8** %src.dbg.spill, align 8, !dbg !10427
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !10406, metadata !DIExpression()), !dbg !10428
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %self2 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79436617013f5de6E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !10429
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !10429
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !10430, metadata !DIExpression()), !dbg !10435
  br label %bb2, !dbg !10429

bb2:                                              ; preds = %bb1
  store i64 %len, i64* %count.dbg.spill4, align 8, !dbg !10436
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !10434, metadata !DIExpression()), !dbg !10435
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !10435
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !10437, metadata !DIExpression()), !dbg !10442
  store i64 %len, i64* %count.dbg.spill6, align 8, !dbg !10435
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill6, metadata !10441, metadata !DIExpression()), !dbg !10442
  %4 = getelementptr inbounds i8, i8* %self2, i64 %len, !dbg !10442
  store i8* %4, i8** %0, align 8, !dbg !10442
  %_21 = load i8*, i8** %0, align 8, !dbg !10442
  br label %bb3, !dbg !10442

bb3:                                              ; preds = %bb2
  store i8* %_21, i8** %dst.dbg.spill, align 8, !dbg !10442
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !10408, metadata !DIExpression()), !dbg !10428
  store i64 %other.1, i64* %count.dbg.spill7, align 8, !dbg !10444
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !10409, metadata !DIExpression()), !dbg !10428
  %5 = mul i64 %other.1, 1, !dbg !10428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_21, i8* align 1 %src, i64 %5, i1 false), !dbg !10428
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10445
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10445
  %8 = load i64, i64* %7, align 8, !dbg !10445
  %9 = add i64 %8, %other.1, !dbg !10445
  store i64 %9, i64* %6, align 8, !dbg !10445
  ret void, !dbg !10446
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h9dbb13095de8647bE"(%"alloc::vec::Vec<u8>"* align 8 %self, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !10447 {
start:
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10451, metadata !DIExpression()), !dbg !10453
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !10452, metadata !DIExpression()), !dbg !10454
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !10455
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8, !dbg !10455
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !10455
  store i64 %other.1, i64* %3, align 8, !dbg !10455
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !10456, metadata !DIExpression()), !dbg !10460
; call core::slice::iter::Iter<T>::new
  %4 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h09fc45be399bae52E"([0 x i8]* align 1 %other.0, i64 %other.1), !dbg !10460
  %_4.0 = extractvalue { i8*, i8* } %4, 0, !dbg !10460
  %_4.1 = extractvalue { i8*, i8* } %4, 1, !dbg !10460
  br label %bb2, !dbg !10460

bb2:                                              ; preds = %start
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hfa10ff63240d453dE"(%"alloc::vec::Vec<u8>"* align 8 %self, i8* %_4.0, i8* %_4.1), !dbg !10461
  br label %bb1, !dbg !10461

bb1:                                              ; preds = %bb2
  ret void, !dbg !10462
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hbcd51560ec106435E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !10463 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %len.dbg.spill8 = alloca i64, align 8
  %data.dbg.spill7 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill6 = alloca { i8*, i64 }*, align 8
  %data.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill4 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_34 = alloca { i8*, i64 }, align 8
  %_33 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_11 = alloca i64, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10467, metadata !DIExpression()), !dbg !10468
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %self1 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79436617013f5de6E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !10469
  store i8* %self1, i8** %self.dbg.spill2, align 8, !dbg !10469
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !10470, metadata !DIExpression()), !dbg !10475
  br label %bb1, !dbg !10469

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10476
  %count = load i64, i64* %1, align 8, !dbg !10476
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !10476
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !10474, metadata !DIExpression()), !dbg !10475
  store i8* %self1, i8** %self.dbg.spill3, align 8, !dbg !10475
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !10477, metadata !DIExpression()), !dbg !10482
  store i64 %count, i64* %count.dbg.spill4, align 8, !dbg !10475
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill4, metadata !10481, metadata !DIExpression()), !dbg !10482
  %2 = getelementptr inbounds i8, i8* %self1, i64 %count, !dbg !10482
  store i8* %2, i8** %0, align 8, !dbg !10482
  %_17 = load i8*, i8** %0, align 8, !dbg !10482
  br label %bb3, !dbg !10482

bb3:                                              ; preds = %bb1
  store i8* %_17, i8** %data.dbg.spill, align 8, !dbg !10469
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !10484, metadata !DIExpression()), !dbg !10492
  %self5 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !10494
  store { i8*, i64 }* %self5, { i8*, i64 }** %self.dbg.spill6, align 8, !dbg !10494
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill6, metadata !10495, metadata !DIExpression()), !dbg !10501
  br i1 false, label %bb4, label %bb5, !dbg !10501

bb4:                                              ; preds = %bb3
  store i64 -1, i64* %_11, align 8, !dbg !10501
  br label %bb2, !dbg !10501

bb5:                                              ; preds = %bb3
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self5, i32 0, i32 1, !dbg !10501
  %4 = load i64, i64* %3, align 8, !dbg !10501
  store i64 %4, i64* %_11, align 8, !dbg !10501
  br label %bb2, !dbg !10501

bb2:                                              ; preds = %bb4, %bb5
  %5 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10502
  %_13 = load i64, i64* %5, align 8, !dbg !10502
  %6 = load i64, i64* %_11, align 8, !dbg !10494
  %len = sub i64 %6, %_13, !dbg !10494
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !10494
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10488, metadata !DIExpression()), !dbg !10492
  store i8* %_17, i8** %data.dbg.spill7, align 8, !dbg !10492
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill7, metadata !10503, metadata !DIExpression()), !dbg !10508
  store i64 %len, i64* %len.dbg.spill8, align 8, !dbg !10492
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill8, metadata !10507, metadata !DIExpression()), !dbg !10508
  store i8* %_17, i8** %self.dbg.spill9, align 8, !dbg !10508
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !10510, metadata !DIExpression()), !dbg !10514
  %data_address = bitcast i8* %_17 to {}*, !dbg !10514
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10514
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10516, metadata !DIExpression()), !dbg !10521
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !10508
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !10520, metadata !DIExpression()), !dbg !10521
  %7 = bitcast { i8*, i64 }* %_34 to {}**, !dbg !10521
  store {}* %data_address, {}** %7, align 8, !dbg !10521
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_34, i32 0, i32 1, !dbg !10521
  store i64 %len, i64* %8, align 8, !dbg !10521
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_33 to { i8*, i64 }*, !dbg !10521
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_34, i32 0, i32 0, !dbg !10521
  %11 = load i8*, i8** %10, align 8, !dbg !10521
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_34, i32 0, i32 1, !dbg !10521
  %13 = load i64, i64* %12, align 8, !dbg !10521
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 0, !dbg !10521
  store i8* %11, i8** %14, align 8, !dbg !10521
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 1, !dbg !10521
  store i64 %13, i64* %15, align 8, !dbg !10521
  %16 = bitcast %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>"* %_33 to { [0 x i8]*, i64 }*, !dbg !10521
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 0, !dbg !10521
  %_26.0 = load [0 x i8]*, [0 x i8]** %17, align 8, !dbg !10521
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %16, i32 0, i32 1, !dbg !10521
  %_26.1 = load i64, i64* %18, align 8, !dbg !10521
  %19 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_26.0, 0, !dbg !10523
  %20 = insertvalue { [0 x i8]*, i64 } %19, i64 %_26.1, 1, !dbg !10523
  ret { [0 x i8]*, i64 } %20, !dbg !10523
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hcda8ebe428aaf363E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !10524 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_20 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_19 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10528, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !10532, metadata !DIExpression()), !dbg !10537
  %self1 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !10546
  store { i8*, i64 }* %self1, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !10546
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !10547, metadata !DIExpression()), !dbg !10551
  %2 = bitcast { i8*, i64 }* %self1 to i8**, !dbg !10551
  %self3 = load i8*, i8** %2, align 8, !dbg !10551, !nonnull !23, !noundef !23
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !10551
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !10552, metadata !DIExpression()), !dbg !10556
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !10556
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !10558, metadata !DIExpression()), !dbg !10562
  store i8* %self3, i8** %ptr.dbg.spill, align 8, !dbg !10562
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10529, metadata !DIExpression()), !dbg !10564
  store i8* %self3, i8** %self.dbg.spill6, align 8, !dbg !10545
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !10543, metadata !DIExpression()), !dbg !10565
  store i8* %self3, i8** %self.dbg.spill7, align 8, !dbg !10565
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !10566, metadata !DIExpression()), !dbg !10571
  %3 = bitcast {}** %1 to i64*, !dbg !10573
  store i64 0, i64* %3, align 8, !dbg !10573
  %data_address = load {}*, {}** %1, align 8, !dbg !10573
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10573
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10536, metadata !DIExpression()), !dbg !10537
  br label %bb2, !dbg !10573

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to {}**, !dbg !10537
  store {}* %data_address, {}** %4, align 8, !dbg !10537
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !10537
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !10537
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_20 to i8*, !dbg !10537
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !10537
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_19 to i8**, !dbg !10537
  %other = load i8*, i8** %8, align 8, !dbg !10537
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !10537
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !10570, metadata !DIExpression()), !dbg !10571
  %9 = icmp eq i8* %self3, %other, !dbg !10571
  %10 = zext i1 %9 to i8, !dbg !10571
  store i8 %10, i8* %0, align 1, !dbg !10571
  %11 = load i8, i8* %0, align 1, !dbg !10571, !range !512, !noundef !23
  %_6 = trunc i8 %11 to i1, !dbg !10571
  br label %bb3, !dbg !10571

bb3:                                              ; preds = %bb2
  %_5 = xor i1 %_6, true, !dbg !10579
  call void @llvm.assume(i1 %_5), !dbg !10580
  br label %bb1, !dbg !10580

bb1:                                              ; preds = %bb3
  ret i8* %self3, !dbg !10581
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hd863dc2932758bc4E"(%"alloc::vec::Vec<u8>"* align 8 %self, i64 %additional) unnamed_addr #1 !dbg !10582 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10584, metadata !DIExpression()), !dbg !10586
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !10585, metadata !DIExpression()), !dbg !10587
  %_4 = bitcast %"alloc::vec::Vec<u8>"* %self to { i8*, i64 }*, !dbg !10588
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10589
  %_5 = load i64, i64* %0, align 8, !dbg !10589
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h1c09bbfa83d176d6E"({ i8*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !10588
  br label %bb1, !dbg !10588

bb1:                                              ; preds = %start
  ret void, !dbg !10590
}

; alloc::vec::Vec<T,A>::as_slice
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h06c2d6b0b8cceaa7E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !10591 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_15 = alloca { i8*, i64 }, align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !10593, metadata !DIExpression()), !dbg !10594
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !10595
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !10596, metadata !DIExpression()), !dbg !10599
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hcda8ebe428aaf363E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !10599
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !10599
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !10600, metadata !DIExpression()), !dbg !10608
  br label %bb1, !dbg !10599

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !10599
  %len = load i64, i64* %0, align 8, !dbg !10599
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !10599
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10604, metadata !DIExpression()), !dbg !10608
  store i8* %data, i8** %data.dbg.spill2, align 8, !dbg !10608
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill2, metadata !10610, metadata !DIExpression()), !dbg !10615
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !10608
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !10614, metadata !DIExpression()), !dbg !10615
  store i8* %data, i8** %self.dbg.spill4, align 8, !dbg !10615
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !10617, metadata !DIExpression()), !dbg !10621
  %data_address = bitcast i8* %data to {}*, !dbg !10621
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10621
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10623, metadata !DIExpression()), !dbg !10628
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !10615
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !10627, metadata !DIExpression()), !dbg !10628
  %1 = bitcast { i8*, i64 }* %_15 to {}**, !dbg !10628
  store {}* %data_address, {}** %1, align 8, !dbg !10628
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_15, i32 0, i32 1, !dbg !10628
  store i64 %len, i64* %2, align 8, !dbg !10628
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_14 to { i8*, i64 }*, !dbg !10628
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_15, i32 0, i32 0, !dbg !10628
  %5 = load i8*, i8** %4, align 8, !dbg !10628
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_15, i32 0, i32 1, !dbg !10628
  %7 = load i64, i64* %6, align 8, !dbg !10628
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !10628
  store i8* %5, i8** %8, align 8, !dbg !10628
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !10628
  store i64 %7, i64* %9, align 8, !dbg !10628
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_14 to { [0 x i8]*, i64 }*, !dbg !10628
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !10628
  %_7.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !10628
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !10628
  %_7.1 = load i64, i64* %12, align 8, !dbg !10628
  %13 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_7.0, 0, !dbg !10630
  %14 = insertvalue { [0 x i8]*, i64 } %13, i64 %_7.1, 1, !dbg !10630
  ret { [0 x i8]*, i64 } %14, !dbg !10630
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he3827ab2a2518c8dE(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !10631 {
start:
  %ptr.dbg.spill38 = alloca { [0 x i8]*, i64 }, align 8
  %data_address.dbg.spill35 = alloca {}*, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %self.dbg.spill31 = alloca i8*, align 8
  %ptr.dbg.spill29 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill25 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %len.dbg.spill23 = alloca i64, align 8
  %data.dbg.spill22 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill20 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %n.dbg.spill18 = alloca i64, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %self.dbg.spill16 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill15 = alloca { i64, i64 }*, align 8
  %self.dbg.spill14 = alloca { i64, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %self.dbg.spill13 = alloca { i64, i64 }*, align 8
  %e.dbg.spill12 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %_94 = alloca { i8*, i64 }, align 8
  %_93 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %_51 = alloca { i8*, i64 }, align 8
  %_50 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self7 = alloca i64, align 8
  %self6 = alloca i64, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout2 = alloca { i64, i64 }, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %raw_ptr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !10635, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !10636, metadata !DIExpression()), !dbg !10662
  %6 = zext i1 %zeroed to i8
  store i8 %6, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !10637, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.declare(metadata i8** %data, metadata !10664, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !10640, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !10674, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout2, metadata !10681, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !10686, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !10730, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !10736, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !10644, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !10742, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !10755, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !10775, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !10780, metadata !DIExpression()), !dbg !10784
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !10791, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !10796, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !10807, metadata !DIExpression()), !dbg !10811
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !10725, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill12, metadata !10748, metadata !DIExpression()), !dbg !10813
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill13, align 8, !dbg !10814
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill13, metadata !10815, metadata !DIExpression()), !dbg !10819
  %7 = bitcast { i64, i64 }* %layout to i64*, !dbg !10819
  %_4 = load i64, i64* %7, align 8, !dbg !10819
  %8 = icmp eq i64 %_4, 0, !dbg !10820
  br i1 %8, label %bb2, label %bb1, !dbg !10820

bb2:                                              ; preds = %start
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !10774
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !10772, metadata !DIExpression()), !dbg !10821
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !10821
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !10765, metadata !DIExpression()), !dbg !10822
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10822
  %10 = load i64, i64* %9, align 8, !dbg !10822, !range !5559, !noundef !23
  store i64 %10, i64* %self7, align 8, !dbg !10822
  %_33 = load i64, i64* %self7, align 8, !dbg !10779, !range !5559, !noundef !23
  store i64 %_33, i64* %n.dbg.spill28, align 8, !dbg !10779
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !10823, metadata !DIExpression()), !dbg !10830
  store i64 %_33, i64* %self6, align 8, !dbg !10830
  %addr = load i64, i64* %self6, align 8, !dbg !10759
  store i64 %addr, i64* %addr.dbg.spill, align 8, !dbg !10759
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !10832, metadata !DIExpression()), !dbg !10838
  %11 = bitcast i8** %2 to i64*, !dbg !10838
  store i64 %addr, i64* %11, align 8, !dbg !10838
  %ptr = load i8*, i8** %2, align 8, !dbg !10838
  store i8* %ptr, i8** %ptr.dbg.spill29, align 8, !dbg !10838
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill29, metadata !10840, metadata !DIExpression()), !dbg !10844
  br label %bb13, !dbg !10838

bb1:                                              ; preds = %start
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !10846
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !10638, metadata !DIExpression()), !dbg !10847
  br i1 %zeroed, label %bb3, label %bb4, !dbg !10848

bb4:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !10849
  %13 = load i64, i64* %12, align 8, !dbg !10849
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10849
  %15 = load i64, i64* %14, align 8, !dbg !10849, !range !5559, !noundef !23
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 0, !dbg !10849
  store i64 %13, i64* %16, align 8, !dbg !10849
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !10849
  store i64 %15, i64* %17, align 8, !dbg !10849
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill16, align 8, !dbg !10684
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill16, metadata !10850, metadata !DIExpression()), !dbg !10854
  %18 = bitcast { i64, i64 }* %layout2 to i64*, !dbg !10854
  %_67 = load i64, i64* %18, align 8, !dbg !10854
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !10684
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !10804, metadata !DIExpression()), !dbg !10856
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !10856
  %20 = load i64, i64* %19, align 8, !dbg !10856, !range !5559, !noundef !23
  store i64 %20, i64* %self11, align 8, !dbg !10856
  %_74 = load i64, i64* %self11, align 8, !dbg !10811, !range !5559, !noundef !23
  store i64 %_74, i64* %n.dbg.spill18, align 8, !dbg !10811
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill18, metadata !10857, metadata !DIExpression()), !dbg !10864
  store i64 %_74, i64* %self10, align 8, !dbg !10864
  %_69 = load i64, i64* %self10, align 8, !dbg !10800
  %21 = call i8* @__rust_alloc(i64 %_67, i64 %_69) #18, !dbg !10684
  store i8* %21, i8** %raw_ptr, align 8, !dbg !10684
  br label %bb15, !dbg !10684

bb3:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !10866
  %23 = load i64, i64* %22, align 8, !dbg !10866
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !10866
  %25 = load i64, i64* %24, align 8, !dbg !10866, !range !5559, !noundef !23
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !10866
  store i64 %23, i64* %26, align 8, !dbg !10866
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !10866
  store i64 %25, i64* %27, align 8, !dbg !10866
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill14, align 8, !dbg !10679
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill14, metadata !10867, metadata !DIExpression()), !dbg !10871
  %28 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !10871
  %_57 = load i64, i64* %28, align 8, !dbg !10871
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill15, align 8, !dbg !10679
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill15, metadata !10788, metadata !DIExpression()), !dbg !10873
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !10873
  %30 = load i64, i64* %29, align 8, !dbg !10873, !range !5559, !noundef !23
  store i64 %30, i64* %self9, align 8, !dbg !10873
  %_64 = load i64, i64* %self9, align 8, !dbg !10795, !range !5559, !noundef !23
  store i64 %_64, i64* %n.dbg.spill, align 8, !dbg !10795
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !10874, metadata !DIExpression()), !dbg !10881
  store i64 %_64, i64* %self8, align 8, !dbg !10881
  %_59 = load i64, i64* %self8, align 8, !dbg !10784
  %31 = call i8* @__rust_alloc_zeroed(i64 %_57, i64 %_59) #18, !dbg !10679
  store i8* %31, i8** %raw_ptr, align 8, !dbg !10679
  br label %bb14, !dbg !10679

bb14:                                             ; preds = %bb3
  br label %bb5, !dbg !10883

bb5:                                              ; preds = %bb15, %bb14
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !10884
; call core::ptr::non_null::NonNull<T>::new
  %32 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h3ca09ae8930ef9efE"(i8* %_18), !dbg !10729
  store i8* %32, i8** %self4, align 8, !dbg !10729
  br label %bb6, !dbg !10729

bb15:                                             ; preds = %bb4
  br label %bb5, !dbg !10883

bb6:                                              ; preds = %bb5
  %33 = bitcast i8** %self4 to {}**, !dbg !10740
  %34 = load {}*, {}** %33, align 8, !dbg !10740
  %35 = icmp eq {}* %34, null, !dbg !10740
  %_77 = select i1 %35, i64 0, i64 1, !dbg !10740
  switch i64 %_77, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !10740

bb17:                                             ; preds = %bb6
  unreachable, !dbg !10740

bb16:                                             ; preds = %bb6
  %36 = bitcast i8** %self3 to {}**, !dbg !10740
  store {}* null, {}** %36, align 8, !dbg !10740
  br label %bb19, !dbg !10740

bb18:                                             ; preds = %bb6
  %v = load i8*, i8** %self4, align 8, !dbg !10740, !nonnull !23, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !10740
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !10737, metadata !DIExpression()), !dbg !10885
  store i8* %v, i8** %self3, align 8, !dbg !10885
  br label %bb19, !dbg !10740

bb19:                                             ; preds = %bb16, %bb18
  %37 = bitcast i8** %self3 to {}**, !dbg !10728
  %38 = load {}*, {}** %37, align 8, !dbg !10728
  %39 = icmp eq {}* %38, null, !dbg !10728
  %_80 = select i1 %39, i64 1, i64 0, !dbg !10728
  switch i64 %_80, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !10728

bb21:                                             ; preds = %bb19
  unreachable, !dbg !10728

bb22:                                             ; preds = %bb19
  %v19 = load i8*, i8** %self3, align 8, !dbg !10728, !nonnull !23, !noundef !23
  store i8* %v19, i8** %v.dbg.spill20, align 8, !dbg !10728
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill20, metadata !10722, metadata !DIExpression()), !dbg !10886
  store i8* %v19, i8** %_15, align 8, !dbg !10886
  br label %bb7, !dbg !10728

bb20:                                             ; preds = %bb19
  %40 = bitcast i8** %_15 to {}**, !dbg !10812
  store {}* null, {}** %40, align 8, !dbg !10812
  br label %bb7, !dbg !10728

bb7:                                              ; preds = %bb22, %bb20
  %41 = bitcast i8** %_15 to {}**, !dbg !10729
  %42 = load {}*, {}** %41, align 8, !dbg !10729
  %43 = icmp eq {}* %42, null, !dbg !10729
  %_20 = select i1 %43, i64 1, i64 0, !dbg !10729
  switch i64 %_20, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !10729

bb9:                                              ; preds = %bb7
  unreachable, !dbg !10729

bb8:                                              ; preds = %bb7
  %val = load i8*, i8** %_15, align 8, !dbg !10729, !nonnull !23, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !10729
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !10659, metadata !DIExpression()), !dbg !10887
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !10887
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10642, metadata !DIExpression()), !dbg !10888
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !10889
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !10890, metadata !DIExpression()), !dbg !10895
  store i64 %_4, i64* %len.dbg.spill, align 8, !dbg !10897
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !10894, metadata !DIExpression()), !dbg !10895
  store i8* %val, i8** %self.dbg.spill21, align 8, !dbg !10895
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !10898, metadata !DIExpression()), !dbg !10902
  store i8* %val, i8** %data.dbg.spill22, align 8, !dbg !10902
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill22, metadata !10904, metadata !DIExpression()), !dbg !10909
  store i64 %_4, i64* %len.dbg.spill23, align 8, !dbg !10895
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill23, metadata !10908, metadata !DIExpression()), !dbg !10909
  store i8* %val, i8** %self.dbg.spill24, align 8, !dbg !10909
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !10911, metadata !DIExpression()), !dbg !10915
  %data_address = bitcast i8* %val to {}*, !dbg !10915
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !10915
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !10917, metadata !DIExpression()), !dbg !10922
  store i64 %_4, i64* %metadata.dbg.spill, align 8, !dbg !10909
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !10921, metadata !DIExpression()), !dbg !10922
  %44 = bitcast { i8*, i64 }* %_94 to {}**, !dbg !10922
  store {}* %data_address, {}** %44, align 8, !dbg !10922
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !10922
  store i64 %_4, i64* %45, align 8, !dbg !10922
  %46 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { i8*, i64 }*, !dbg !10922
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 0, !dbg !10922
  %48 = load i8*, i8** %47, align 8, !dbg !10922
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !10922
  %50 = load i64, i64* %49, align 8, !dbg !10922
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0, !dbg !10922
  store i8* %48, i8** %51, align 8, !dbg !10922
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1, !dbg !10922
  store i64 %50, i64* %52, align 8, !dbg !10922
  %53 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { [0 x i8]*, i64 }*, !dbg !10922
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0, !dbg !10922
  %ptr.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !dbg !10922
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1, !dbg !10922
  %ptr.1 = load i64, i64* %55, align 8, !dbg !10922
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 0, !dbg !10922
  store [0 x i8]* %ptr.0, [0 x i8]** %56, align 8, !dbg !10922
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 1, !dbg !10922
  store i64 %ptr.1, i64* %57, align 8, !dbg !10922
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill25, metadata !10924, metadata !DIExpression()), !dbg !10930
  %58 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !10930
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0, !dbg !10930
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !10930
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1, !dbg !10930
  store i64 %ptr.1, i64* %60, align 8, !dbg !10930
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !10932
  %62 = load i8*, i8** %61, align 8, !dbg !10932, !nonnull !23, !noundef !23
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !10932
  %64 = load i64, i64* %63, align 8, !dbg !10932
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !10932
  store i8* %62, i8** %65, align 8, !dbg !10932
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !10932
  store i64 %64, i64* %66, align 8, !dbg !10932
  br label %bb11, !dbg !10933

bb10:                                             ; preds = %bb7
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h63aa8f047ad2503cE"(), !dbg !10813
  br label %bb23, !dbg !10813

bb23:                                             ; preds = %bb10
  %67 = bitcast { i8*, i64 }* %3 to {}**, !dbg !10813
  store {}* null, {}** %67, align 8, !dbg !10813
  br label %bb12, !dbg !10934

bb12:                                             ; preds = %bb11, %bb23
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !10934
  %69 = load i8*, i8** %68, align 8, !dbg !10934
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !10934
  %71 = load i64, i64* %70, align 8, !dbg !10934
  %72 = insertvalue { i8*, i64 } undef, i8* %69, 0, !dbg !10934
  %73 = insertvalue { i8*, i64 } %72, i64 %71, 1, !dbg !10934
  ret { i8*, i64 } %73, !dbg !10934

bb11:                                             ; preds = %bb13, %bb8
  br label %bb12, !dbg !10934

bb13:                                             ; preds = %bb2
  store i8* %ptr, i8** %data, align 8, !dbg !10844
  %self30 = load i8*, i8** %data, align 8, !dbg !10671, !nonnull !23, !noundef !23
  store i8* %self30, i8** %self.dbg.spill31, align 8, !dbg !10671
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill31, metadata !10935, metadata !DIExpression()), !dbg !10939
  store i8* %self30, i8** %data.dbg.spill32, align 8, !dbg !10939
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !10941, metadata !DIExpression()), !dbg !10946
  store i8* %self30, i8** %self.dbg.spill33, align 8, !dbg !10946
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !10948, metadata !DIExpression()), !dbg !10952
  %data_address34 = bitcast i8* %self30 to {}*, !dbg !10952
  store {}* %data_address34, {}** %data_address.dbg.spill35, align 8, !dbg !10952
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill35, metadata !10954, metadata !DIExpression()), !dbg !10959
  %74 = bitcast { i8*, i64 }* %_51 to {}**, !dbg !10959
  store {}* %data_address34, {}** %74, align 8, !dbg !10959
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !10959
  store i64 0, i64* %75, align 8, !dbg !10959
  %76 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { i8*, i64 }*, !dbg !10959
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 0, !dbg !10959
  %78 = load i8*, i8** %77, align 8, !dbg !10959
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !10959
  %80 = load i64, i64* %79, align 8, !dbg !10959
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 0, !dbg !10959
  store i8* %78, i8** %81, align 8, !dbg !10959
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 1, !dbg !10959
  store i64 %80, i64* %82, align 8, !dbg !10959
  %83 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { [0 x i8]*, i64 }*, !dbg !10959
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 0, !dbg !10959
  %ptr.036 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !10959
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 1, !dbg !10959
  %ptr.137 = load i64, i64* %85, align 8, !dbg !10959
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 0, !dbg !10959
  store [0 x i8]* %ptr.036, [0 x i8]** %86, align 8, !dbg !10959
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 1, !dbg !10959
  store i64 %ptr.137, i64* %87, align 8, !dbg !10959
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill38, metadata !10961, metadata !DIExpression()), !dbg !10965
  %88 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !10965
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0, !dbg !10965
  store [0 x i8]* %ptr.036, [0 x i8]** %89, align 8, !dbg !10965
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1, !dbg !10965
  store i64 %ptr.137, i64* %90, align 8, !dbg !10965
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !10967
  %92 = load i8*, i8** %91, align 8, !dbg !10967, !nonnull !23, !noundef !23
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !10967
  %94 = load i64, i64* %93, align 8, !dbg !10967
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !10967
  store i8* %92, i8** %95, align 8, !dbg !10967
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !10967
  store i64 %94, i64* %96, align 8, !dbg !10967
  br label %bb11, !dbg !10968
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h18238a86a3089a62E(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !10969 {
start:
  %count.dbg.spill54 = alloca i64, align 8
  %dst.dbg.spill53 = alloca i8*, align 8
  %ptr.dbg.spill52 = alloca i8*, align 8
  %self.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill49 = alloca { i8*, i64 }, align 8
  %self.dbg.spill48 = alloca { i8*, i64 }, align 8
  %self.dbg.spill47 = alloca { i8*, i64 }, align 8
  %src.dbg.spill = alloca i8*, align 8
  %self.dbg.spill46 = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill45 = alloca { i8*, i64 }, align 8
  %v.dbg.spill44 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill43 = alloca i64, align 8
  %ptr.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill41 = alloca i8*, align 8
  %len.dbg.spill40 = alloca i64, align 8
  %data.dbg.spill39 = alloca i8*, align 8
  %self.dbg.spill38 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %count.dbg.spill37 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %count.dbg.spill36 = alloca i64, align 8
  %self.dbg.spill35 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill34 = alloca i64, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill32 = alloca i8*, align 8
  %ptr.dbg.spill31 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill30 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill25 = alloca i64, align 8
  %ptr.dbg.spill24 = alloca i8*, align 8
  %self.dbg.spill23 = alloca i8*, align 8
  %self.dbg.spill22 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %old_size.dbg.spill = alloca i64, align 8
  %n.dbg.spill20 = alloca i64, align 8
  %self.dbg.spill19 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill18 = alloca { i64, i64 }*, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %e.dbg.spill15 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill14 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill13 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %self16 = alloca i8*, align 8
  %_135 = alloca { i8*, i64 }, align 8
  %_134 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self12 = alloca i64, align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %self7 = alloca i64, align 8
  %self4 = alloca { i8*, i64 }, align 8
  %_55 = alloca { i8*, i64 }, align 8
  %_50 = alloca { i8*, i64 }, align 8
  %self2 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_33 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !10973, metadata !DIExpression()), !dbg !10999
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !10974, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !10975, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !10976, metadata !DIExpression()), !dbg !11002
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !10977, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11004, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !11013, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !11025, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !11029, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !10987, metadata !DIExpression()), !dbg !11034
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill3, metadata !11035, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self4, metadata !11044, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !10995, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill6, metadata !11074, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !11083, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !11094, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !11099, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !11110, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !11115, metadata !DIExpression()), !dbg !11119
  call void @llvm.dbg.declare(metadata i64* %self12, metadata !11126, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !11020, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill13, metadata !11039, metadata !DIExpression()), !dbg !11132
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill14, metadata !11068, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill15, metadata !11078, metadata !DIExpression()), !dbg !11134
  call void @llvm.dbg.declare(metadata i8** %self16, metadata !11135, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !11148, metadata !DIExpression()), !dbg !11157
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !11159
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !11160, metadata !DIExpression()), !dbg !11164
  %11 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !11164
  %_8 = load i64, i64* %11, align 8, !dbg !11164
  %12 = icmp eq i64 %_8, 0, !dbg !11165
  br i1 %12, label %bb1, label %bb3, !dbg !11165

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !11166
  %_11.0 = load i64, i64* %13, align 8, !dbg !11166
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !11166
  %_11.1 = load i64, i64* %14, align 8, !dbg !11166, !range !5559, !noundef !23
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he3827ab2a2518c8dE(%"alloc::alloc::Global"* align 1 %self, i64 %_11.0, i64 %_11.1, i1 zeroext %zeroed), !dbg !11167
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8, !dbg !11167
  br label %bb2, !dbg !11167

bb3:                                              ; preds = %start
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill18, align 8, !dbg !11093
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill18, metadata !11091, metadata !DIExpression()), !dbg !11168
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !11168
  %17 = load i64, i64* %16, align 8, !dbg !11168, !range !5559, !noundef !23
  store i64 %17, i64* %self8, align 8, !dbg !11168
  %_78 = load i64, i64* %self8, align 8, !dbg !11098, !range !5559, !noundef !23
  store i64 %_78, i64* %n.dbg.spill, align 8, !dbg !11098
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !11169, metadata !DIExpression()), !dbg !11176
  store i64 %_78, i64* %self7, align 8, !dbg !11176
  %_16 = load i64, i64* %self7, align 8, !dbg !11087
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill19, align 8, !dbg !11109
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill19, metadata !11107, metadata !DIExpression()), !dbg !11178
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !11178
  %19 = load i64, i64* %18, align 8, !dbg !11178, !range !5559, !noundef !23
  store i64 %19, i64* %self10, align 8, !dbg !11178
  %_84 = load i64, i64* %self10, align 8, !dbg !11114, !range !5559, !noundef !23
  store i64 %_84, i64* %n.dbg.spill20, align 8, !dbg !11114
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill20, metadata !11179, metadata !DIExpression()), !dbg !11186
  store i64 %_84, i64* %self9, align 8, !dbg !11186
  %_18 = load i64, i64* %self9, align 8, !dbg !11103
  %_15 = icmp eq i64 %_16, %_18, !dbg !11093
  br i1 %_15, label %bb4, label %bb5, !dbg !11093

bb5:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill43, align 8, !dbg !11188
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill43, metadata !10991, metadata !DIExpression()), !dbg !11189
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !11190
  %_58.0 = load i64, i64* %20, align 8, !dbg !11190
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !11190
  %_58.1 = load i64, i64* %21, align 8, !dbg !11190, !range !5559, !noundef !23
; call alloc::alloc::Global::alloc_impl
  %22 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he3827ab2a2518c8dE(%"alloc::alloc::Global"* align 1 %self, i64 %_58.0, i64 %_58.1, i1 zeroext %zeroed), !dbg !11072
  store { i8*, i64 } %22, { i8*, i64 }* %self4, align 8, !dbg !11072
  br label %bb14, !dbg !11072

bb4:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill, align 8, !dbg !11191
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !10978, metadata !DIExpression()), !dbg !11192
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !11193
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !11194, metadata !DIExpression()), !dbg !11198
  %23 = bitcast { i64, i64 }* %new_layout to i64*, !dbg !11198
  %new_size = load i64, i64* %23, align 8, !dbg !11198
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !11198
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !10981, metadata !DIExpression()), !dbg !11199
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill22, align 8, !dbg !11200
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill22, metadata !11201, metadata !DIExpression()), !dbg !11205
  %24 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !11205
  %_25 = load i64, i64* %24, align 8, !dbg !11205
  %_23 = icmp uge i64 %new_size, %_25, !dbg !11206
  call void @llvm.assume(i1 %_23), !dbg !11207
  br label %bb6, !dbg !11207

bb6:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill23, align 8, !dbg !11208
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !11209, metadata !DIExpression()), !dbg !11213
  store i8* %ptr, i8** %ptr.dbg.spill24, align 8, !dbg !11213
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill24, metadata !11009, metadata !DIExpression()), !dbg !11011
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !11214
  %26 = load i64, i64* %25, align 8, !dbg !11214
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !11214
  %28 = load i64, i64* %27, align 8, !dbg !11214, !range !5559, !noundef !23
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !11214
  store i64 %26, i64* %29, align 8, !dbg !11214
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11214
  store i64 %28, i64* %30, align 8, !dbg !11214
  store i64 %new_size, i64* %new_size.dbg.spill25, align 8, !dbg !11215
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill25, metadata !11010, metadata !DIExpression()), !dbg !11011
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !11011
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !11216, metadata !DIExpression()), !dbg !11220
  %31 = bitcast { i64, i64 }* %layout to i64*, !dbg !11220
  %_89 = load i64, i64* %31, align 8, !dbg !11220
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !11011
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !11123, metadata !DIExpression()), !dbg !11222
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11222
  %33 = load i64, i64* %32, align 8, !dbg !11222, !range !5559, !noundef !23
  store i64 %33, i64* %self12, align 8, !dbg !11222
  %_97 = load i64, i64* %self12, align 8, !dbg !11130, !range !5559, !noundef !23
  store i64 %_97, i64* %n.dbg.spill28, align 8, !dbg !11130
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !11223, metadata !DIExpression()), !dbg !11230
  store i64 %_97, i64* %self11, align 8, !dbg !11230
  %_91 = load i64, i64* %self11, align 8, !dbg !11119
  %raw_ptr = call i8* @__rust_realloc(i8* %ptr, i64 %_89, i64 %_91, i64 %new_size) #18, !dbg !11011
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !11011
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !10983, metadata !DIExpression()), !dbg !11232
  br label %bb23, !dbg !11011

bb23:                                             ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::new
  %34 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h3ca09ae8930ef9efE"(i8* %raw_ptr), !dbg !11024
  store i8* %34, i8** %self2, align 8, !dbg !11024
  br label %bb7, !dbg !11024

bb7:                                              ; preds = %bb23
  %35 = bitcast i8** %self2 to {}**, !dbg !11033
  %36 = load {}*, {}** %35, align 8, !dbg !11033
  %37 = icmp eq {}* %36, null, !dbg !11033
  %_100 = select i1 %37, i64 0, i64 1, !dbg !11033
  switch i64 %_100, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ], !dbg !11033

bb25:                                             ; preds = %bb7
  unreachable, !dbg !11033

bb24:                                             ; preds = %bb7
  %38 = bitcast i8** %self1 to {}**, !dbg !11033
  store {}* null, {}** %38, align 8, !dbg !11033
  br label %bb27, !dbg !11033

bb26:                                             ; preds = %bb7
  %v = load i8*, i8** %self2, align 8, !dbg !11033, !nonnull !23, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !11033
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !11030, metadata !DIExpression()), !dbg !11233
  store i8* %v, i8** %self1, align 8, !dbg !11233
  br label %bb27, !dbg !11033

bb27:                                             ; preds = %bb24, %bb26
  %39 = bitcast i8** %self1 to {}**, !dbg !11023
  %40 = load {}*, {}** %39, align 8, !dbg !11023
  %41 = icmp eq {}* %40, null, !dbg !11023
  %_103 = select i1 %41, i64 1, i64 0, !dbg !11023
  switch i64 %_103, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !11023

bb29:                                             ; preds = %bb27
  unreachable, !dbg !11023

bb30:                                             ; preds = %bb27
  %v29 = load i8*, i8** %self1, align 8, !dbg !11023, !nonnull !23, !noundef !23
  store i8* %v29, i8** %v.dbg.spill30, align 8, !dbg !11023
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill30, metadata !11017, metadata !DIExpression()), !dbg !11234
  store i8* %v29, i8** %_33, align 8, !dbg !11234
  br label %bb8, !dbg !11023

bb28:                                             ; preds = %bb27
  %42 = bitcast i8** %_33 to {}**, !dbg !11131
  store {}* null, {}** %42, align 8, !dbg !11131
  br label %bb8, !dbg !11023

bb8:                                              ; preds = %bb30, %bb28
  %43 = bitcast i8** %_33 to {}**, !dbg !11024
  %44 = load {}*, {}** %43, align 8, !dbg !11024
  %45 = icmp eq {}* %44, null, !dbg !11024
  %_38 = select i1 %45, i64 1, i64 0, !dbg !11024
  switch i64 %_38, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !11024

bb10:                                             ; preds = %bb8
  unreachable, !dbg !11024

bb9:                                              ; preds = %bb8
  %val = load i8*, i8** %_33, align 8, !dbg !11024, !nonnull !23, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !11024
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !10989, metadata !DIExpression()), !dbg !11235
  store i8* %val, i8** %ptr.dbg.spill31, align 8, !dbg !11235
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill31, metadata !10985, metadata !DIExpression()), !dbg !11236
  br i1 %zeroed, label %bb12, label %bb13, !dbg !11237

bb11:                                             ; preds = %bb8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h63aa8f047ad2503cE"(), !dbg !11132
  br label %bb31, !dbg !11132

bb31:                                             ; preds = %bb11
  %46 = bitcast { i8*, i64 }* %5 to {}**, !dbg !11132
  store {}* null, {}** %46, align 8, !dbg !11132
  br label %bb21, !dbg !11238

bb21:                                             ; preds = %bb37, %bb31
  br label %bb22, !dbg !11240

bb13:                                             ; preds = %bb33, %bb9
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !11241
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !11242, metadata !DIExpression()), !dbg !11247
  store i64 %new_size, i64* %len.dbg.spill, align 8, !dbg !11249
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !11246, metadata !DIExpression()), !dbg !11247
  store i8* %val, i8** %self.dbg.spill38, align 8, !dbg !11247
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill38, metadata !11250, metadata !DIExpression()), !dbg !11254
  store i8* %val, i8** %data.dbg.spill39, align 8, !dbg !11254
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill39, metadata !11256, metadata !DIExpression()), !dbg !11261
  store i64 %new_size, i64* %len.dbg.spill40, align 8, !dbg !11247
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill40, metadata !11260, metadata !DIExpression()), !dbg !11261
  store i8* %val, i8** %self.dbg.spill41, align 8, !dbg !11261
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill41, metadata !11263, metadata !DIExpression()), !dbg !11267
  %data_address = bitcast i8* %val to {}*, !dbg !11267
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !11267
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !11269, metadata !DIExpression()), !dbg !11274
  store i64 %new_size, i64* %metadata.dbg.spill, align 8, !dbg !11261
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !11273, metadata !DIExpression()), !dbg !11274
  %47 = bitcast { i8*, i64 }* %_135 to {}**, !dbg !11274
  store {}* %data_address, {}** %47, align 8, !dbg !11274
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !11274
  store i64 %new_size, i64* %48, align 8, !dbg !11274
  %49 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { i8*, i64 }*, !dbg !11274
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 0, !dbg !11274
  %51 = load i8*, i8** %50, align 8, !dbg !11274
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !11274
  %53 = load i64, i64* %52, align 8, !dbg !11274
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 0, !dbg !11274
  store i8* %51, i8** %54, align 8, !dbg !11274
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 1, !dbg !11274
  store i64 %53, i64* %55, align 8, !dbg !11274
  %56 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { [0 x i8]*, i64 }*, !dbg !11274
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0, !dbg !11274
  %ptr.0 = load [0 x i8]*, [0 x i8]** %57, align 8, !dbg !11274
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1, !dbg !11274
  %ptr.1 = load i64, i64* %58, align 8, !dbg !11274
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 0, !dbg !11274
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !11274
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 1, !dbg !11274
  store i64 %ptr.1, i64* %60, align 8, !dbg !11274
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill42, metadata !11276, metadata !DIExpression()), !dbg !11280
  %61 = bitcast { i8*, i64 }* %_50 to { [0 x i8]*, i64 }*, !dbg !11280
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0, !dbg !11280
  store [0 x i8]* %ptr.0, [0 x i8]** %62, align 8, !dbg !11280
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1, !dbg !11280
  store i64 %ptr.1, i64* %63, align 8, !dbg !11280
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 0, !dbg !11282
  %65 = load i8*, i8** %64, align 8, !dbg !11282, !nonnull !23, !noundef !23
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 1, !dbg !11282
  %67 = load i64, i64* %66, align 8, !dbg !11282
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !11282
  store i8* %65, i8** %68, align 8, !dbg !11282
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !11282
  store i64 %67, i64* %69, align 8, !dbg !11282
  br label %bb20, !dbg !11283

bb12:                                             ; preds = %bb9
  store i8* %raw_ptr, i8** %self.dbg.spill32, align 8, !dbg !11284
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill32, metadata !11285, metadata !DIExpression()), !dbg !11290
  store i64 %_8, i64* %count.dbg.spill, align 8, !dbg !11291
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !11289, metadata !DIExpression()), !dbg !11290
  store i8* %raw_ptr, i8** %self.dbg.spill33, align 8, !dbg !11290
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !11292, metadata !DIExpression()), !dbg !11297
  store i64 %_8, i64* %count.dbg.spill34, align 8, !dbg !11290
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill34, metadata !11296, metadata !DIExpression()), !dbg !11297
  %70 = getelementptr inbounds i8, i8* %raw_ptr, i64 %_8, !dbg !11297
  store i8* %70, i8** %4, align 8, !dbg !11297
  %_113 = load i8*, i8** %4, align 8, !dbg !11297
  br label %bb32, !dbg !11297

bb32:                                             ; preds = %bb12
  store i8* %_113, i8** %self.dbg.spill35, align 8, !dbg !11297
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill35, metadata !11299, metadata !DIExpression()), !dbg !11307
  %count = sub i64 %new_size, %_8, !dbg !11308
  store i64 %count, i64* %count.dbg.spill36, align 8, !dbg !11308
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill36, metadata !11306, metadata !DIExpression()), !dbg !11307
  store i8* %_113, i8** %dst.dbg.spill, align 8, !dbg !11307
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !11309, metadata !DIExpression()), !dbg !11322
  store i64 %count, i64* %count.dbg.spill37, align 8, !dbg !11307
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill37, metadata !11314, metadata !DIExpression()), !dbg !11322
  %71 = mul i64 1, %count, !dbg !11322
  call void @llvm.memset.p0i8.i64(i8* align 1 %_113, i8 0, i64 %71, i1 false), !dbg !11322
  br label %bb33, !dbg !11322

bb33:                                             ; preds = %bb32
  br label %bb13, !dbg !11324

bb20:                                             ; preds = %bb2, %bb19, %bb13
  br label %bb22, !dbg !11240

bb14:                                             ; preds = %bb5
  %72 = bitcast { i8*, i64 }* %self4 to {}**, !dbg !11071
  %73 = load {}*, {}** %72, align 8, !dbg !11071
  %74 = icmp eq {}* %73, null, !dbg !11071
  %_142 = select i1 %74, i64 1, i64 0, !dbg !11071
  switch i64 %_142, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !11071

bb35:                                             ; preds = %bb14
  unreachable, !dbg !11071

bb36:                                             ; preds = %bb14
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 0, !dbg !11071
  %v.0 = load i8*, i8** %75, align 8, !dbg !11071, !nonnull !23, !noundef !23
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 1, !dbg !11071
  %v.1 = load i64, i64* %76, align 8, !dbg !11071
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 0, !dbg !11071
  store i8* %v.0, i8** %77, align 8, !dbg !11071
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 1, !dbg !11071
  store i64 %v.1, i64* %78, align 8, !dbg !11071
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill44, metadata !11065, metadata !DIExpression()), !dbg !11325
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !11325
  store i8* %v.0, i8** %79, align 8, !dbg !11325
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !11325
  store i64 %v.1, i64* %80, align 8, !dbg !11325
  br label %bb15, !dbg !11071

bb34:                                             ; preds = %bb14
  %81 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !11133
  store {}* null, {}** %81, align 8, !dbg !11133
  br label %bb15, !dbg !11071

bb15:                                             ; preds = %bb36, %bb34
  %82 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !11072
  %83 = load {}*, {}** %82, align 8, !dbg !11072
  %84 = icmp eq {}* %83, null, !dbg !11072
  %_60 = select i1 %84, i64 1, i64 0, !dbg !11072
  switch i64 %_60, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !11072

bb17:                                             ; preds = %bb15
  unreachable, !dbg !11072

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !11072
  %val.0 = load i8*, i8** %85, align 8, !dbg !11072, !nonnull !23, !noundef !23
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !11072
  %val.1 = load i64, i64* %86, align 8, !dbg !11072
  %87 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 0, !dbg !11072
  store i8* %val.0, i8** %87, align 8, !dbg !11072
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 1, !dbg !11072
  store i64 %val.1, i64* %88, align 8, !dbg !11072
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill45, metadata !10997, metadata !DIExpression()), !dbg !11326
  %89 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !11326
  store i8* %val.0, i8** %89, align 8, !dbg !11326
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !11326
  store i64 %val.1, i64* %90, align 8, !dbg !11326
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !10993, metadata !DIExpression()), !dbg !11327
  store i8* %ptr, i8** %self.dbg.spill46, align 8, !dbg !11328
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill46, metadata !11329, metadata !DIExpression()), !dbg !11333
  store i8* %ptr, i8** %src.dbg.spill, align 8, !dbg !11328
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !11153, metadata !DIExpression()), !dbg !11334
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 0, !dbg !11147
  store i8* %val.0, i8** %91, align 8, !dbg !11147
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 1, !dbg !11147
  store i64 %val.1, i64* %92, align 8, !dbg !11147
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill47, metadata !11145, metadata !DIExpression()), !dbg !11335
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 0, !dbg !11335
  store i8* %val.0, i8** %93, align 8, !dbg !11335
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 1, !dbg !11335
  store i64 %val.1, i64* %94, align 8, !dbg !11335
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill48, metadata !11336, metadata !DIExpression()), !dbg !11342
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 0, !dbg !11342
  store i8* %val.0, i8** %95, align 8, !dbg !11342
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 1, !dbg !11342
  store i64 %val.1, i64* %96, align 8, !dbg !11342
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill49, metadata !11343, metadata !DIExpression()), !dbg !11349
  %_155.0 = bitcast i8* %val.0 to [0 x i8]*, !dbg !11349
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 0, !dbg !11349
  store [0 x i8]* %_155.0, [0 x i8]** %97, align 8, !dbg !11349
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 1, !dbg !11349
  store i64 %val.1, i64* %98, align 8, !dbg !11349
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill50, metadata !11351, metadata !DIExpression()), !dbg !11355
  %ptr51 = bitcast [0 x i8]* %_155.0 to i8*, !dbg !11355
  store i8* %ptr51, i8** %ptr.dbg.spill52, align 8, !dbg !11355
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill52, metadata !11356, metadata !DIExpression()), !dbg !11360
  store i8* %ptr51, i8** %self16, align 8, !dbg !11360
  %_160 = load i8*, i8** %self16, align 8, !dbg !11139
  store i8* %_160, i8** %dst.dbg.spill53, align 8, !dbg !11139
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill53, metadata !11155, metadata !DIExpression()), !dbg !11334
  store i64 %_8, i64* %count.dbg.spill54, align 8, !dbg !11362
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill54, metadata !11156, metadata !DIExpression()), !dbg !11334
  %99 = mul i64 %_8, 1, !dbg !11334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_160, i8* align 1 %ptr, i64 %99, i1 false), !dbg !11334
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !11363
  %_73.0 = load i64, i64* %100, align 8, !dbg !11363
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !11363
  %_73.1 = load i64, i64* %101, align 8, !dbg !11363, !range !5559, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %_73.0, i64 %_73.1), !dbg !11364
  br label %bb19, !dbg !11364

bb18:                                             ; preds = %bb15
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h63aa8f047ad2503cE"(), !dbg !11134
  br label %bb37, !dbg !11134

bb37:                                             ; preds = %bb18
  %102 = bitcast { i8*, i64 }* %5 to {}**, !dbg !11134
  store {}* null, {}** %102, align 8, !dbg !11134
  br label %bb21, !dbg !11238

bb22:                                             ; preds = %bb20, %bb21
  %103 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !11240
  %104 = load i8*, i8** %103, align 8, !dbg !11240
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !11240
  %106 = load i64, i64* %105, align 8, !dbg !11240
  %107 = insertvalue { i8*, i64 } undef, i8* %104, 0, !dbg !11240
  %108 = insertvalue { i8*, i64 } %107, i64 %106, 1, !dbg !11240
  ret { i8*, i64 } %108, !dbg !11240

bb19:                                             ; preds = %bb16
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !11365
  store i8* %val.0, i8** %109, align 8, !dbg !11365
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !11365
  store i64 %val.1, i64* %110, align 8, !dbg !11365
  br label %bb20, !dbg !11366

bb2:                                              ; preds = %bb1
  br label %bb20, !dbg !11367
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h4b1fc673c5cb9615E(i32* %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11368 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i32*, i64 }, align 8
  %self.dbg.spill14 = alloca { i32*, i64 }, align 8
  %self.dbg.spill13 = alloca { i32*, i64 }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i32*, i64 }, align 8
  %self.dbg.spill4 = alloca { i32*, i64 }*, align 8
  %self.dbg.spill3 = alloca { i32*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }, align 8
  %self.dbg.spill1 = alloca { i32*, i64 }*, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i32*, i64 }, align 8
  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 0
  store i32* %0, i32** %6, align 8
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %ptr, metadata !11384, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !11385, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11390, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !11396, metadata !DIExpression()), !dbg !11400
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !11402, metadata !DIExpression()), !dbg !11409
  store { i32*, i64 }* %ptr, { i32*, i64 }** %self.dbg.spill, align 8, !dbg !11419
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !11420, metadata !DIExpression()), !dbg !11431
  store { i32*, i64 }* %ptr, { i32*, i64 }** %self.dbg.spill1, align 8, !dbg !11431
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill1, metadata !11432, metadata !DIExpression()), !dbg !11439
  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 0, !dbg !11439
  %self.0 = load i32*, i32** %8, align 8, !dbg !11439, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 1, !dbg !11439
  %self.1 = load i64, i64* %9, align 8, !dbg !11439
  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !11439
  store i32* %self.0, i32** %10, align 8, !dbg !11439
  %11 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !11439
  store i64 %self.1, i64* %11, align 8, !dbg !11439
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill2, metadata !11441, metadata !DIExpression()), !dbg !11451
  %_22.0 = bitcast i32* %self.0 to [0 x i32]*, !dbg !11451
  %12 = mul nsw i64 %self.1, 4, !dbg !11453
  store i64 %12, i64* %5, align 8, !dbg !11453
  %size = load i64, i64* %5, align 8, !dbg !11453
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !11453
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !11386, metadata !DIExpression()), !dbg !11454
  br label %bb1, !dbg !11453

bb1:                                              ; preds = %start
  store { i32*, i64 }* %ptr, { i32*, i64 }** %self.dbg.spill3, align 8, !dbg !11455
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill3, metadata !11456, metadata !DIExpression()), !dbg !11460
  store { i32*, i64 }* %ptr, { i32*, i64 }** %self.dbg.spill4, align 8, !dbg !11460
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill4, metadata !11461, metadata !DIExpression()), !dbg !11465
  %13 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 0, !dbg !11465
  %self.05 = load i32*, i32** %13, align 8, !dbg !11465, !nonnull !23, !noundef !23
  %14 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 1, !dbg !11465
  %self.16 = load i64, i64* %14, align 8, !dbg !11465
  %15 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !11465
  store i32* %self.05, i32** %15, align 8, !dbg !11465
  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !11465
  store i64 %self.16, i64* %16, align 8, !dbg !11465
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill7, metadata !11467, metadata !DIExpression()), !dbg !11471
  %_26.0 = bitcast i32* %self.05 to [0 x i32]*, !dbg !11471
  %17 = mul nsw i64 %self.16, 4, !dbg !11473
  store i64 4, i64* %4, align 8, !dbg !11473
  %align = load i64, i64* %4, align 8, !dbg !11473
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !11473
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !11388, metadata !DIExpression()), !dbg !11474
  br label %bb2, !dbg !11473

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !11475
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !11476, metadata !DIExpression()), !dbg !11481
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !11483
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !11480, metadata !DIExpression()), !dbg !11481
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !11481
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !11484, metadata !DIExpression()), !dbg !11491
  store i64 %align, i64* %3, align 8, !dbg !11491
  %_28 = load i64, i64* %3, align 8, !dbg !11491, !range !5559, !noundef !23
  br label %bb7, !dbg !11491

bb7:                                              ; preds = %bb2
  %18 = bitcast { i64, i64 }* %layout to i64*, !dbg !11481
  store i64 %size, i64* %18, align 8, !dbg !11481
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11481
  store i64 %_28, i64* %19, align 8, !dbg !11481
  %20 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 0, !dbg !11418
  %self.011 = load i32*, i32** %20, align 8, !dbg !11418, !nonnull !23, !noundef !23
  %21 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %ptr, i32 0, i32 1, !dbg !11418
  %self.112 = load i64, i64* %21, align 8, !dbg !11418
  %22 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !11418
  store i32* %self.011, i32** %22, align 8, !dbg !11418
  %23 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !11418
  store i64 %self.112, i64* %23, align 8, !dbg !11418
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill13, metadata !11415, metadata !DIExpression()), !dbg !11493
  %24 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !11493
  store i32* %self.011, i32** %24, align 8, !dbg !11493
  %25 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !11493
  store i64 %self.112, i64* %25, align 8, !dbg !11493
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill14, metadata !11494, metadata !DIExpression()), !dbg !11500
  %26 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill15, i32 0, i32 0, !dbg !11500
  store i32* %self.011, i32** %26, align 8, !dbg !11500
  %27 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self.dbg.spill15, i32 0, i32 1, !dbg !11500
  store i64 %self.112, i64* %27, align 8, !dbg !11500
  call void @llvm.dbg.declare(metadata { i32*, i64 }* %self.dbg.spill15, metadata !11502, metadata !DIExpression()), !dbg !11506
  %_37.0 = bitcast i32* %self.011 to [0 x i32]*, !dbg !11506
  %ptr16 = bitcast [0 x i32]* %_37.0 to i8*, !dbg !11500
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !11500
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11508, metadata !DIExpression()), !dbg !11512
  store i8* %ptr16, i8** %pointer, align 8, !dbg !11512
  %_41 = load i8*, i8** %pointer, align 8, !dbg !11409, !nonnull !23, !noundef !23
  store i8* %_41, i8** %unique, align 8, !dbg !11409
  %self = load i8*, i8** %unique, align 8, !dbg !11400, !nonnull !23, !noundef !23
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !11400
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !11514, metadata !DIExpression()), !dbg !11518
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !11518
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !11520, metadata !DIExpression()), !dbg !11524
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !11524
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !11526, metadata !DIExpression()), !dbg !11530
  store i8* %self, i8** %_15, align 8, !dbg !11530
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !11532
  %_18.0 = load i64, i64* %28, align 8, !dbg !11532
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11532
  %_18.1 = load i64, i64* %29, align 8, !dbg !11532, !range !5559, !noundef !23
  %30 = load i8*, i8** %_15, align 8, !dbg !11533, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %30, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !11533

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !11534

cleanup:                                          ; preds = %bb7
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !11534

bb6:                                              ; preds = %bb5
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !11535
  %37 = load i8*, i8** %36, align 8, !dbg !11535
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !11535
  %39 = load i32, i32* %38, align 8, !dbg !11535
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !11535
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !11535
  resume { i8*, i32 } %41, !dbg !11535

bb4:                                              ; preds = %bb3
  ret void, !dbg !11536
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17h703b187b3615a7b3E(i8* %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11537 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64* }, align 8
  %self.dbg.spill14 = alloca { i8*, i64* }, align 8
  %self.dbg.spill13 = alloca { i8*, i64* }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64* }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %ptr, metadata !11553, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !11554, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11559, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !11565, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !11571, metadata !DIExpression()), !dbg !11575
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !11585
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !11586, metadata !DIExpression()), !dbg !11597
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill1, align 8, !dbg !11597
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill1, metadata !11598, metadata !DIExpression()), !dbg !11605
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11605
  %self.0 = load i8*, i8** %8, align 8, !dbg !11605, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11605
  %self.1 = load i64*, i64** %9, align 8, !dbg !11605, !nonnull !23, !align !584, !noundef !23
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !11605
  store i8* %self.0, i8** %10, align 8, !dbg !11605
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !11605
  store i64* %self.1, i64** %11, align 8, !dbg !11605
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !11607, metadata !DIExpression()), !dbg !11613
  %_22.0 = bitcast i8* %self.0 to {}*, !dbg !11613
  %_22.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !11613
  %12 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !11615
  %13 = getelementptr inbounds i64, i64* %12, i64 1, !dbg !11615
  %14 = load i64, i64* %13, align 8, !dbg !11615, !invariant.load !23
  %15 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !11615
  %16 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !11615
  %17 = load i64, i64* %16, align 8, !dbg !11615, !range !11616, !invariant.load !23
  store i64 %14, i64* %5, align 8, !dbg !11615
  %size = load i64, i64* %5, align 8, !dbg !11615
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !11615
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !11555, metadata !DIExpression()), !dbg !11617
  br label %bb1, !dbg !11615

bb1:                                              ; preds = %start
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill3, align 8, !dbg !11618
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill3, metadata !11619, metadata !DIExpression()), !dbg !11623
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill4, align 8, !dbg !11623
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill4, metadata !11624, metadata !DIExpression()), !dbg !11628
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11628
  %self.05 = load i8*, i8** %18, align 8, !dbg !11628, !nonnull !23, !noundef !23
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11628
  %self.16 = load i64*, i64** %19, align 8, !dbg !11628, !nonnull !23, !align !584, !noundef !23
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 0, !dbg !11628
  store i8* %self.05, i8** %20, align 8, !dbg !11628
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 1, !dbg !11628
  store i64* %self.16, i64** %21, align 8, !dbg !11628
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill7, metadata !11630, metadata !DIExpression()), !dbg !11634
  %_26.0 = bitcast i8* %self.05 to {}*, !dbg !11634
  %_26.1 = bitcast i64* %self.16 to [3 x i64]*, !dbg !11634
  %22 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !11636
  %23 = getelementptr inbounds i64, i64* %22, i64 1, !dbg !11636
  %24 = load i64, i64* %23, align 8, !dbg !11636, !invariant.load !23
  %25 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !11636
  %26 = getelementptr inbounds i64, i64* %25, i64 2, !dbg !11636
  %27 = load i64, i64* %26, align 8, !dbg !11636, !range !11616, !invariant.load !23
  store i64 %27, i64* %4, align 8, !dbg !11636
  %align = load i64, i64* %4, align 8, !dbg !11636
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !11636
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !11557, metadata !DIExpression()), !dbg !11637
  br label %bb2, !dbg !11636

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !11638
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !11639, metadata !DIExpression()), !dbg !11644
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !11646
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !11643, metadata !DIExpression()), !dbg !11644
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !11644
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !11647, metadata !DIExpression()), !dbg !11654
  store i64 %align, i64* %3, align 8, !dbg !11654
  %_28 = load i64, i64* %3, align 8, !dbg !11654, !range !5559, !noundef !23
  br label %bb7, !dbg !11654

bb7:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %layout to i64*, !dbg !11644
  store i64 %size, i64* %28, align 8, !dbg !11644
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11644
  store i64 %_28, i64* %29, align 8, !dbg !11644
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11584
  %self.011 = load i8*, i8** %30, align 8, !dbg !11584, !nonnull !23, !noundef !23
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11584
  %self.112 = load i64*, i64** %31, align 8, !dbg !11584, !nonnull !23, !align !584, !noundef !23
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 0, !dbg !11584
  store i8* %self.011, i8** %32, align 8, !dbg !11584
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 1, !dbg !11584
  store i64* %self.112, i64** %33, align 8, !dbg !11584
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill13, metadata !11581, metadata !DIExpression()), !dbg !11656
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 0, !dbg !11656
  store i8* %self.011, i8** %34, align 8, !dbg !11656
  %35 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 1, !dbg !11656
  store i64* %self.112, i64** %35, align 8, !dbg !11656
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill14, metadata !11657, metadata !DIExpression()), !dbg !11663
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 0, !dbg !11663
  store i8* %self.011, i8** %36, align 8, !dbg !11663
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 1, !dbg !11663
  store i64* %self.112, i64** %37, align 8, !dbg !11663
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill15, metadata !11665, metadata !DIExpression()), !dbg !11669
  %_37.0 = bitcast i8* %self.011 to {}*, !dbg !11669
  %_37.1 = bitcast i64* %self.112 to [3 x i64]*, !dbg !11669
  %ptr16 = bitcast {}* %_37.0 to i8*, !dbg !11663
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !11663
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11671, metadata !DIExpression()), !dbg !11675
  store i8* %ptr16, i8** %pointer, align 8, !dbg !11675
  %_41 = load i8*, i8** %pointer, align 8, !dbg !11575, !nonnull !23, !noundef !23
  store i8* %_41, i8** %unique, align 8, !dbg !11575
  %self = load i8*, i8** %unique, align 8, !dbg !11569, !nonnull !23, !noundef !23
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !11569
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !11677, metadata !DIExpression()), !dbg !11681
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !11681
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !11683, metadata !DIExpression()), !dbg !11687
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !11687
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !11689, metadata !DIExpression()), !dbg !11693
  store i8* %self, i8** %_15, align 8, !dbg !11693
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !11695
  %_18.0 = load i64, i64* %38, align 8, !dbg !11695
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11695
  %_18.1 = load i64, i64* %39, align 8, !dbg !11695, !range !5559, !noundef !23
  %40 = load i8*, i8** %_15, align 8, !dbg !11696, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %40, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !11696

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !11697

cleanup:                                          ; preds = %bb7
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !11697

bb6:                                              ; preds = %bb5
  %46 = bitcast { i8*, i32 }* %2 to i8**, !dbg !11698
  %47 = load i8*, i8** %46, align 8, !dbg !11698
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !11698
  %49 = load i32, i32* %48, align 8, !dbg !11698
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !11698
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !11698
  resume { i8*, i32 } %51, !dbg !11698

bb4:                                              ; preds = %bb3
  ret void, !dbg !11699
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17he04ba104dc105ff4E(i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11700 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill13 = alloca i64*, align 8
  %self.dbg.spill12 = alloca i64*, align 8
  %self.dbg.spill11 = alloca i64*, align 8
  %2 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %align.dbg.spill8 = alloca i64, align 8
  %size.dbg.spill7 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill6 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64**, align 8
  %self.dbg.spill3 = alloca i64**, align 8
  %size.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill2 = alloca i64*, align 8
  %self.dbg.spill1 = alloca i64**, align 8
  %self.dbg.spill = alloca i64**, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca i64*, align 8
  store i64* %0, i64** %ptr, align 8
  call void @llvm.dbg.declare(metadata i64** %ptr, metadata !11713, metadata !DIExpression()), !dbg !11722
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !11714, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11719, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !11725, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !11731, metadata !DIExpression()), !dbg !11735
  store i64** %ptr, i64*** %self.dbg.spill, align 8, !dbg !11745
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !11746, metadata !DIExpression()), !dbg !11754
  store i64** %ptr, i64*** %self.dbg.spill1, align 8, !dbg !11754
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill1, metadata !11755, metadata !DIExpression()), !dbg !11762
  %self = load i64*, i64** %ptr, align 8, !dbg !11762, !nonnull !23, !noundef !23
  store i64* %self, i64** %self.dbg.spill2, align 8, !dbg !11762
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill2, metadata !11764, metadata !DIExpression()), !dbg !11770
  %_22 = bitcast i64* %self to %"std::io::error::Custom"*, !dbg !11770
  store i64 24, i64* %4, align 8, !dbg !11772
  %size = load i64, i64* %4, align 8, !dbg !11772
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !11772
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !11715, metadata !DIExpression()), !dbg !11773
  br label %bb1, !dbg !11772

bb1:                                              ; preds = %start
  store i64** %ptr, i64*** %self.dbg.spill3, align 8, !dbg !11774
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill3, metadata !11775, metadata !DIExpression()), !dbg !11779
  store i64** %ptr, i64*** %self.dbg.spill4, align 8, !dbg !11779
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill4, metadata !11780, metadata !DIExpression()), !dbg !11784
  %self5 = load i64*, i64** %ptr, align 8, !dbg !11784, !nonnull !23, !noundef !23
  store i64* %self5, i64** %self.dbg.spill6, align 8, !dbg !11784
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill6, metadata !11786, metadata !DIExpression()), !dbg !11790
  %_26 = bitcast i64* %self5 to %"std::io::error::Custom"*, !dbg !11790
  store i64 8, i64* %3, align 8, !dbg !11792
  %align = load i64, i64* %3, align 8, !dbg !11792
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !11792
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !11717, metadata !DIExpression()), !dbg !11793
  br label %bb2, !dbg !11792

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill7, align 8, !dbg !11794
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill7, metadata !11795, metadata !DIExpression()), !dbg !11800
  store i64 %align, i64* %align.dbg.spill8, align 8, !dbg !11802
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill8, metadata !11799, metadata !DIExpression()), !dbg !11800
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !11800
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !11803, metadata !DIExpression()), !dbg !11810
  store i64 %align, i64* %2, align 8, !dbg !11810
  %_28 = load i64, i64* %2, align 8, !dbg !11810, !range !5559, !noundef !23
  br label %bb7, !dbg !11810

bb7:                                              ; preds = %bb2
  %5 = bitcast { i64, i64 }* %layout to i64*, !dbg !11800
  store i64 %size, i64* %5, align 8, !dbg !11800
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11800
  store i64 %_28, i64* %6, align 8, !dbg !11800
  %self10 = load i64*, i64** %ptr, align 8, !dbg !11744, !nonnull !23, !noundef !23
  store i64* %self10, i64** %self.dbg.spill11, align 8, !dbg !11744
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill11, metadata !11741, metadata !DIExpression()), !dbg !11812
  store i64* %self10, i64** %self.dbg.spill12, align 8, !dbg !11812
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill12, metadata !11813, metadata !DIExpression()), !dbg !11819
  store i64* %self10, i64** %self.dbg.spill13, align 8, !dbg !11819
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill13, metadata !11821, metadata !DIExpression()), !dbg !11825
  %_37 = bitcast i64* %self10 to %"std::io::error::Custom"*, !dbg !11825
  %ptr14 = bitcast %"std::io::error::Custom"* %_37 to i8*, !dbg !11819
  store i8* %ptr14, i8** %ptr.dbg.spill, align 8, !dbg !11819
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11827, metadata !DIExpression()), !dbg !11831
  store i8* %ptr14, i8** %pointer, align 8, !dbg !11831
  %_41 = load i8*, i8** %pointer, align 8, !dbg !11735, !nonnull !23, !noundef !23
  store i8* %_41, i8** %unique, align 8, !dbg !11735
  %self15 = load i8*, i8** %unique, align 8, !dbg !11729, !nonnull !23, !noundef !23
  store i8* %self15, i8** %self.dbg.spill16, align 8, !dbg !11729
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !11833, metadata !DIExpression()), !dbg !11837
  store i8* %self15, i8** %self.dbg.spill17, align 8, !dbg !11837
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !11839, metadata !DIExpression()), !dbg !11843
  store i8* %self15, i8** %ptr.dbg.spill18, align 8, !dbg !11843
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill18, metadata !11845, metadata !DIExpression()), !dbg !11849
  store i8* %self15, i8** %_15, align 8, !dbg !11849
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !11851
  %_18.0 = load i64, i64* %7, align 8, !dbg !11851
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11851
  %_18.1 = load i64, i64* %8, align 8, !dbg !11851, !range !5559, !noundef !23
  %9 = load i8*, i8** %_15, align 8, !dbg !11852, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %9, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !11852

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !11853

cleanup:                                          ; preds = %bb7
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !11853

bb6:                                              ; preds = %bb5
  %15 = bitcast { i8*, i32 }* %1 to i8**, !dbg !11854
  %16 = load i8*, i8** %15, align 8, !dbg !11854
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !11854
  %18 = load i32, i32* %17, align 8, !dbg !11854
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !11854
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !11854
  resume { i8*, i32 } %20, !dbg !11854

bb4:                                              ; preds = %bb3
  ret void, !dbg !11855
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hf5ecefe57bddb78cE(i8* %0, i64* align 8 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !11856 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64* }, align 8
  %self.dbg.spill14 = alloca { i8*, i64* }, align 8
  %self.dbg.spill13 = alloca { i8*, i64* }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64* }, align 8
  %self.dbg.spill4 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64* }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64* }, align 8
  %self.dbg.spill1 = alloca { i8*, i64* }*, align 8
  %self.dbg.spill = alloca { i8*, i64* }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64* }, align 8
  %6 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1
  store i64* %1, i64** %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %ptr, metadata !11872, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !11873, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !11878, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !11884, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !11890, metadata !DIExpression()), !dbg !11894
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill, align 8, !dbg !11904
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill, metadata !11905, metadata !DIExpression()), !dbg !11916
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill1, align 8, !dbg !11916
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill1, metadata !11917, metadata !DIExpression()), !dbg !11924
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11924
  %self.0 = load i8*, i8** %8, align 8, !dbg !11924, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11924
  %self.1 = load i64*, i64** %9, align 8, !dbg !11924, !nonnull !23, !align !584, !noundef !23
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 0, !dbg !11924
  store i8* %self.0, i8** %10, align 8, !dbg !11924
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill2, i32 0, i32 1, !dbg !11924
  store i64* %self.1, i64** %11, align 8, !dbg !11924
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill2, metadata !11926, metadata !DIExpression()), !dbg !11932
  %_22.0 = bitcast i8* %self.0 to {}*, !dbg !11932
  %_22.1 = bitcast i64* %self.1 to [3 x i64]*, !dbg !11932
  %12 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !11934
  %13 = getelementptr inbounds i64, i64* %12, i64 1, !dbg !11934
  %14 = load i64, i64* %13, align 8, !dbg !11934, !invariant.load !23
  %15 = bitcast [3 x i64]* %_22.1 to i64*, !dbg !11934
  %16 = getelementptr inbounds i64, i64* %15, i64 2, !dbg !11934
  %17 = load i64, i64* %16, align 8, !dbg !11934, !range !11616, !invariant.load !23
  store i64 %14, i64* %5, align 8, !dbg !11934
  %size = load i64, i64* %5, align 8, !dbg !11934
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !11934
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !11874, metadata !DIExpression()), !dbg !11935
  br label %bb1, !dbg !11934

bb1:                                              ; preds = %start
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill3, align 8, !dbg !11936
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill3, metadata !11937, metadata !DIExpression()), !dbg !11941
  store { i8*, i64* }* %ptr, { i8*, i64* }** %self.dbg.spill4, align 8, !dbg !11941
  call void @llvm.dbg.declare(metadata { i8*, i64* }** %self.dbg.spill4, metadata !11942, metadata !DIExpression()), !dbg !11946
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11946
  %self.05 = load i8*, i8** %18, align 8, !dbg !11946, !nonnull !23, !noundef !23
  %19 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11946
  %self.16 = load i64*, i64** %19, align 8, !dbg !11946, !nonnull !23, !align !584, !noundef !23
  %20 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 0, !dbg !11946
  store i8* %self.05, i8** %20, align 8, !dbg !11946
  %21 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill7, i32 0, i32 1, !dbg !11946
  store i64* %self.16, i64** %21, align 8, !dbg !11946
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill7, metadata !11948, metadata !DIExpression()), !dbg !11952
  %_26.0 = bitcast i8* %self.05 to {}*, !dbg !11952
  %_26.1 = bitcast i64* %self.16 to [3 x i64]*, !dbg !11952
  %22 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !11954
  %23 = getelementptr inbounds i64, i64* %22, i64 1, !dbg !11954
  %24 = load i64, i64* %23, align 8, !dbg !11954, !invariant.load !23
  %25 = bitcast [3 x i64]* %_26.1 to i64*, !dbg !11954
  %26 = getelementptr inbounds i64, i64* %25, i64 2, !dbg !11954
  %27 = load i64, i64* %26, align 8, !dbg !11954, !range !11616, !invariant.load !23
  store i64 %27, i64* %4, align 8, !dbg !11954
  %align = load i64, i64* %4, align 8, !dbg !11954
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !11954
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !11876, metadata !DIExpression()), !dbg !11955
  br label %bb2, !dbg !11954

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !11956
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !11957, metadata !DIExpression()), !dbg !11962
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !11964
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !11961, metadata !DIExpression()), !dbg !11962
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !11962
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !11965, metadata !DIExpression()), !dbg !11972
  store i64 %align, i64* %3, align 8, !dbg !11972
  %_28 = load i64, i64* %3, align 8, !dbg !11972, !range !5559, !noundef !23
  br label %bb7, !dbg !11972

bb7:                                              ; preds = %bb2
  %28 = bitcast { i64, i64 }* %layout to i64*, !dbg !11962
  store i64 %size, i64* %28, align 8, !dbg !11962
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !11962
  store i64 %_28, i64* %29, align 8, !dbg !11962
  %30 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 0, !dbg !11903
  %self.011 = load i8*, i8** %30, align 8, !dbg !11903, !nonnull !23, !noundef !23
  %31 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %ptr, i32 0, i32 1, !dbg !11903
  %self.112 = load i64*, i64** %31, align 8, !dbg !11903, !nonnull !23, !align !584, !noundef !23
  %32 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 0, !dbg !11903
  store i8* %self.011, i8** %32, align 8, !dbg !11903
  %33 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill13, i32 0, i32 1, !dbg !11903
  store i64* %self.112, i64** %33, align 8, !dbg !11903
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill13, metadata !11900, metadata !DIExpression()), !dbg !11974
  %34 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 0, !dbg !11974
  store i8* %self.011, i8** %34, align 8, !dbg !11974
  %35 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill14, i32 0, i32 1, !dbg !11974
  store i64* %self.112, i64** %35, align 8, !dbg !11974
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill14, metadata !11975, metadata !DIExpression()), !dbg !11981
  %36 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 0, !dbg !11981
  store i8* %self.011, i8** %36, align 8, !dbg !11981
  %37 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %self.dbg.spill15, i32 0, i32 1, !dbg !11981
  store i64* %self.112, i64** %37, align 8, !dbg !11981
  call void @llvm.dbg.declare(metadata { i8*, i64* }* %self.dbg.spill15, metadata !11983, metadata !DIExpression()), !dbg !11987
  %_37.0 = bitcast i8* %self.011 to {}*, !dbg !11987
  %_37.1 = bitcast i64* %self.112 to [3 x i64]*, !dbg !11987
  %ptr16 = bitcast {}* %_37.0 to i8*, !dbg !11981
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !11981
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !11989, metadata !DIExpression()), !dbg !11993
  store i8* %ptr16, i8** %pointer, align 8, !dbg !11993
  %_41 = load i8*, i8** %pointer, align 8, !dbg !11894, !nonnull !23, !noundef !23
  store i8* %_41, i8** %unique, align 8, !dbg !11894
  %self = load i8*, i8** %unique, align 8, !dbg !11888, !nonnull !23, !noundef !23
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !11888
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !11995, metadata !DIExpression()), !dbg !11999
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !11999
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !12001, metadata !DIExpression()), !dbg !12005
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !12005
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !12007, metadata !DIExpression()), !dbg !12011
  store i8* %self, i8** %_15, align 8, !dbg !12011
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !12013
  %_18.0 = load i64, i64* %38, align 8, !dbg !12013
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !12013
  %_18.1 = load i64, i64* %39, align 8, !dbg !12013, !range !5559, !noundef !23
  %40 = load i8*, i8** %_15, align 8, !dbg !12014, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %40, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !12014

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !12015

cleanup:                                          ; preds = %bb7
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  %43 = extractvalue { i8*, i32 } %41, 1
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %43, i32* %45, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !12015

bb6:                                              ; preds = %bb5
  %46 = bitcast { i8*, i32 }* %2 to i8**, !dbg !12016
  %47 = load i8*, i8** %46, align 8, !dbg !12016
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !12016
  %49 = load i32, i32* %48, align 8, !dbg !12016
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !12016
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !12016
  resume { i8*, i32 } %51, !dbg !12016

bb4:                                              ; preds = %bb3
  ret void, !dbg !12017
}

; alloc::alloc::box_free
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc5alloc8box_free17hfb2cd30f7e79faf9E(i8* %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12018 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill19 = alloca i8*, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i64 }, align 8
  %self.dbg.spill14 = alloca { i8*, i64 }, align 8
  %self.dbg.spill13 = alloca { i8*, i64 }, align 8
  %3 = alloca i64, align 8
  %align.dbg.spill10 = alloca i64, align 8
  %align.dbg.spill9 = alloca i64, align 8
  %size.dbg.spill8 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill7 = alloca { i8*, i64 }, align 8
  %self.dbg.spill4 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %unique = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %ptr = alloca { i8*, i64 }, align 8
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr, metadata !12027, metadata !DIExpression()), !dbg !12035
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !12028, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !12033, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.declare(metadata i8** %unique, metadata !12038, metadata !DIExpression()), !dbg !12042
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !12044, metadata !DIExpression()), !dbg !12048
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill, align 8, !dbg !12058
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !12059, metadata !DIExpression()), !dbg !12066
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !12066
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !12067, metadata !DIExpression()), !dbg !12074
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !12074
  %self.0 = load i8*, i8** %8, align 8, !dbg !12074, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !12074
  %self.1 = load i64, i64* %9, align 8, !dbg !12074
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !12074
  store i8* %self.0, i8** %10, align 8, !dbg !12074
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !12074
  store i64 %self.1, i64* %11, align 8, !dbg !12074
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !12076, metadata !DIExpression()), !dbg !12080
  %_22.0 = bitcast i8* %self.0 to [0 x i8]*, !dbg !12080
  %12 = mul nsw i64 %self.1, 1, !dbg !12082
  store i64 %12, i64* %5, align 8, !dbg !12082
  %size = load i64, i64* %5, align 8, !dbg !12082
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !12082
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !12029, metadata !DIExpression()), !dbg !12083
  br label %bb1, !dbg !12082

bb1:                                              ; preds = %start
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill3, align 8, !dbg !12084
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill3, metadata !12085, metadata !DIExpression()), !dbg !12089
  store { i8*, i64 }* %ptr, { i8*, i64 }** %self.dbg.spill4, align 8, !dbg !12089
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill4, metadata !12090, metadata !DIExpression()), !dbg !12094
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !12094
  %self.05 = load i8*, i8** %13, align 8, !dbg !12094, !nonnull !23, !noundef !23
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !12094
  %self.16 = load i64, i64* %14, align 8, !dbg !12094
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !12094
  store i8* %self.05, i8** %15, align 8, !dbg !12094
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !12094
  store i64 %self.16, i64* %16, align 8, !dbg !12094
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill7, metadata !12096, metadata !DIExpression()), !dbg !12100
  %_26.0 = bitcast i8* %self.05 to [0 x i8]*, !dbg !12100
  %17 = mul nsw i64 %self.16, 1, !dbg !12102
  store i64 1, i64* %4, align 8, !dbg !12102
  %align = load i64, i64* %4, align 8, !dbg !12102
  store i64 %align, i64* %align.dbg.spill, align 8, !dbg !12102
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !12031, metadata !DIExpression()), !dbg !12103
  br label %bb2, !dbg !12102

bb2:                                              ; preds = %bb1
  store i64 %size, i64* %size.dbg.spill8, align 8, !dbg !12104
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill8, metadata !12105, metadata !DIExpression()), !dbg !12110
  store i64 %align, i64* %align.dbg.spill9, align 8, !dbg !12112
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill9, metadata !12109, metadata !DIExpression()), !dbg !12110
  store i64 %align, i64* %align.dbg.spill10, align 8, !dbg !12110
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill10, metadata !12113, metadata !DIExpression()), !dbg !12120
  store i64 %align, i64* %3, align 8, !dbg !12120
  %_28 = load i64, i64* %3, align 8, !dbg !12120, !range !5559, !noundef !23
  br label %bb7, !dbg !12120

bb7:                                              ; preds = %bb2
  %18 = bitcast { i64, i64 }* %layout to i64*, !dbg !12110
  store i64 %size, i64* %18, align 8, !dbg !12110
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !12110
  store i64 %_28, i64* %19, align 8, !dbg !12110
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 0, !dbg !12057
  %self.011 = load i8*, i8** %20, align 8, !dbg !12057, !nonnull !23, !noundef !23
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr, i32 0, i32 1, !dbg !12057
  %self.112 = load i64, i64* %21, align 8, !dbg !12057
  %22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 0, !dbg !12057
  store i8* %self.011, i8** %22, align 8, !dbg !12057
  %23 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill13, i32 0, i32 1, !dbg !12057
  store i64 %self.112, i64* %23, align 8, !dbg !12057
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill13, metadata !12054, metadata !DIExpression()), !dbg !12122
  %24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 0, !dbg !12122
  store i8* %self.011, i8** %24, align 8, !dbg !12122
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill14, i32 0, i32 1, !dbg !12122
  store i64 %self.112, i64* %25, align 8, !dbg !12122
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill14, metadata !12123, metadata !DIExpression()), !dbg !12127
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 0, !dbg !12127
  store i8* %self.011, i8** %26, align 8, !dbg !12127
  %27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill15, i32 0, i32 1, !dbg !12127
  store i64 %self.112, i64* %27, align 8, !dbg !12127
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill15, metadata !12129, metadata !DIExpression()), !dbg !12133
  %_37.0 = bitcast i8* %self.011 to [0 x i8]*, !dbg !12133
  %ptr16 = bitcast [0 x i8]* %_37.0 to i8*, !dbg !12127
  store i8* %ptr16, i8** %ptr.dbg.spill, align 8, !dbg !12127
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12135, metadata !DIExpression()), !dbg !12139
  store i8* %ptr16, i8** %pointer, align 8, !dbg !12139
  %_41 = load i8*, i8** %pointer, align 8, !dbg !12048, !nonnull !23, !noundef !23
  store i8* %_41, i8** %unique, align 8, !dbg !12048
  %self = load i8*, i8** %unique, align 8, !dbg !12042, !nonnull !23, !noundef !23
  store i8* %self, i8** %self.dbg.spill17, align 8, !dbg !12042
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !12141, metadata !DIExpression()), !dbg !12145
  store i8* %self, i8** %self.dbg.spill18, align 8, !dbg !12145
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !12147, metadata !DIExpression()), !dbg !12151
  store i8* %self, i8** %ptr.dbg.spill19, align 8, !dbg !12151
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill19, metadata !12153, metadata !DIExpression()), !dbg !12157
  store i8* %self, i8** %_15, align 8, !dbg !12157
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !12159
  %_18.0 = load i64, i64* %28, align 8, !dbg !12159
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !12159
  %_18.1 = load i64, i64* %29, align 8, !dbg !12159, !range !5559, !noundef !23
  %30 = load i8*, i8** %_15, align 8, !dbg !12160, !nonnull !23, !noundef !23
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %30, i64 %_18.0, i64 %_18.1)
          to label %bb3 unwind label %cleanup, !dbg !12160

bb5:                                              ; preds = %cleanup
  br label %bb6, !dbg !12161

cleanup:                                          ; preds = %bb7
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb5

bb3:                                              ; preds = %bb7
  br label %bb4, !dbg !12161

bb6:                                              ; preds = %bb5
  %36 = bitcast { i8*, i32 }* %2 to i8**, !dbg !12162
  %37 = load i8*, i8** %36, align 8, !dbg !12162
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !12162
  %39 = load i32, i32* %38, align 8, !dbg !12162
  %40 = insertvalue { i8*, i32 } undef, i8* %37, 0, !dbg !12162
  %41 = insertvalue { i8*, i32 } %40, i32 %39, 1, !dbg !12162
  resume { i8*, i32 } %41, !dbg !12162

bb4:                                              ; preds = %bb3
  ret void, !dbg !12163
}

; alloc::slice::<impl [T]>::join
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17h867228384328236eE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, [0 x i8]* align 1 %sep.0, i64 %sep.1) unnamed_addr #1 !dbg !12164 {
start:
  %sep.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %self.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %self.dbg.spill, metadata !12169, metadata !DIExpression()), !dbg !12173
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 0
  store [0 x i8]* %sep.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %sep.dbg.spill, i32 0, i32 1
  store i64 %sep.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %sep.dbg.spill, metadata !12170, metadata !DIExpression()), !dbg !12174
; call alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
  call void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h651595d769c8765eE"(%"alloc::string::String"* sret(%"alloc::string::String") %0, [0 x { [0 x i8]*, i64 }]* align 8 %self.0, i64 %self.1, [0 x i8]* align 1 %sep.0, i64 %sep.1), !dbg !12175
  br label %bb1, !dbg !12175

bb1:                                              ; preds = %start
  ret void, !dbg !12176
}

; alloc::string::String::from_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String9from_utf817hd78bfefcdef25b62E(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* sret(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>") %0, %"alloc::vec::Vec<u8>"* %vec) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12177 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill2 = alloca i64, align 8
  %data.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_26 = alloca { i8*, i64 }, align 8
  %_25 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_13 = alloca %"core::str::error::Utf8Error", align 8
  %_12 = alloca %"alloc::vec::Vec<u8>", align 8
  %_11 = alloca %"alloc::string::FromUtf8Error", align 8
  %e = alloca %"core::str::error::Utf8Error", align 8
  %_9 = alloca %"alloc::vec::Vec<u8>", align 8
  %_8 = alloca %"alloc::string::String", align 8
  %_2 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"* %vec, metadata !12181, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.declare(metadata %"core::str::error::Utf8Error"* %e, metadata !12182, metadata !DIExpression()), !dbg !12185
  store %"alloc::vec::Vec<u8>"* %vec, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8, !dbg !12186
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !12187, metadata !DIExpression()), !dbg !12191
; invoke alloc::vec::Vec<T,A>::as_ptr
  %data = invoke i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hcda8ebe428aaf363E"(%"alloc::vec::Vec<u8>"* align 8 %vec)
          to label %bb8 unwind label %cleanup, !dbg !12191

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %vec) #16
          to label %bb7 unwind label %abort, !dbg !12192

cleanup:                                          ; preds = %bb8, %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb6

bb8:                                              ; preds = %start
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !12191
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !12193, metadata !DIExpression()), !dbg !12201
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %vec, i32 0, i32 1, !dbg !12191
  %len = load i64, i64* %7, align 8, !dbg !12191
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !12191
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !12197, metadata !DIExpression()), !dbg !12201
  store i8* %data, i8** %data.dbg.spill1, align 8, !dbg !12201
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill1, metadata !12203, metadata !DIExpression()), !dbg !12208
  store i64 %len, i64* %len.dbg.spill2, align 8, !dbg !12201
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill2, metadata !12207, metadata !DIExpression()), !dbg !12208
  store i8* %data, i8** %self.dbg.spill3, align 8, !dbg !12208
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !12210, metadata !DIExpression()), !dbg !12214
  %data_address = bitcast i8* %data to {}*, !dbg !12214
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !12214
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !12216, metadata !DIExpression()), !dbg !12221
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !12208
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !12220, metadata !DIExpression()), !dbg !12221
  %8 = bitcast { i8*, i64 }* %_26 to {}**, !dbg !12221
  store {}* %data_address, {}** %8, align 8, !dbg !12221
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !12221
  store i64 %len, i64* %9, align 8, !dbg !12221
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { i8*, i64 }*, !dbg !12221
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 0, !dbg !12221
  %12 = load i8*, i8** %11, align 8, !dbg !12221
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_26, i32 0, i32 1, !dbg !12221
  %14 = load i64, i64* %13, align 8, !dbg !12221
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 0, !dbg !12221
  store i8* %12, i8** %15, align 8, !dbg !12221
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %10, i32 0, i32 1, !dbg !12221
  store i64 %14, i64* %16, align 8, !dbg !12221
  %17 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_25 to { [0 x i8]*, i64 }*, !dbg !12221
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 0, !dbg !12221
  %_18.0 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !12221
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %17, i32 0, i32 1, !dbg !12221
  %_18.1 = load i64, i64* %19, align 8, !dbg !12221
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817h44aac8e9d8892328E(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_2, [0 x i8]* align 1 %_18.0, i64 %_18.1)
          to label %bb1 unwind label %cleanup, !dbg !12223

bb1:                                              ; preds = %bb8
  %20 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %_2 to i64*, !dbg !12223
  %_7 = load i64, i64* %20, align 8, !dbg !12223, !range !3441, !noundef !23
  switch i64 %_7, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !12224

abort:                                            ; preds = %bb6
  %21 = landingpad { i8*, i32 }
          cleanup, !dbg !12225
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !12225
  unreachable, !dbg !12225

bb7:                                              ; preds = %bb6
  %22 = bitcast { i8*, i32 }* %1 to i8**, !dbg !12225
  %23 = load i8*, i8** %22, align 8, !dbg !12225
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !12225
  %25 = load i32, i32* %24, align 8, !dbg !12225
  %26 = insertvalue { i8*, i32 } undef, i8* %23, 0, !dbg !12225
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1, !dbg !12225
  resume { i8*, i32 } %27, !dbg !12225

bb3:                                              ; preds = %bb1
  unreachable, !dbg !12223

bb4:                                              ; preds = %bb1
  %28 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !12226
  %29 = bitcast %"alloc::vec::Vec<u8>"* %vec to i8*, !dbg !12226
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false), !dbg !12226
  %30 = bitcast %"alloc::string::String"* %_8 to %"alloc::vec::Vec<u8>"*, !dbg !12227
  %31 = bitcast %"alloc::vec::Vec<u8>"* %30 to i8*, !dbg !12227
  %32 = bitcast %"alloc::vec::Vec<u8>"* %_9 to i8*, !dbg !12227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false), !dbg !12227
  %33 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %0 to %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok"*, !dbg !12228
  %34 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok", %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok"* %33, i32 0, i32 1, !dbg !12228
  %35 = bitcast %"alloc::string::String"* %34 to i8*, !dbg !12228
  %36 = bitcast %"alloc::string::String"* %_8 to i8*, !dbg !12228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false), !dbg !12228
  %37 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %0 to i64*, !dbg !12228
  store i64 0, i64* %37, align 8, !dbg !12228
  br label %bb5, !dbg !12229

bb2:                                              ; preds = %bb1
  %38 = bitcast %"core::result::Result<&str, core::str::error::Utf8Error>"* %_2 to %"core::result::Result<&str, core::str::error::Utf8Error>::Err"*, !dbg !12230
  %39 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", %"core::result::Result<&str, core::str::error::Utf8Error>::Err"* %38, i32 0, i32 1, !dbg !12230
  %40 = bitcast %"core::str::error::Utf8Error"* %e to i8*, !dbg !12230
  %41 = bitcast %"core::str::error::Utf8Error"* %39 to i8*, !dbg !12230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false), !dbg !12230
  %42 = bitcast %"alloc::vec::Vec<u8>"* %_12 to i8*, !dbg !12231
  %43 = bitcast %"alloc::vec::Vec<u8>"* %vec to i8*, !dbg !12231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false), !dbg !12231
  %44 = bitcast %"core::str::error::Utf8Error"* %_13 to i8*, !dbg !12232
  %45 = bitcast %"core::str::error::Utf8Error"* %e to i8*, !dbg !12232
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false), !dbg !12232
  %46 = bitcast %"alloc::string::FromUtf8Error"* %_11 to %"alloc::vec::Vec<u8>"*, !dbg !12233
  %47 = bitcast %"alloc::vec::Vec<u8>"* %46 to i8*, !dbg !12233
  %48 = bitcast %"alloc::vec::Vec<u8>"* %_12 to i8*, !dbg !12233
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false), !dbg !12233
  %49 = getelementptr inbounds %"alloc::string::FromUtf8Error", %"alloc::string::FromUtf8Error"* %_11, i32 0, i32 1, !dbg !12233
  %50 = bitcast %"core::str::error::Utf8Error"* %49 to i8*, !dbg !12233
  %51 = bitcast %"core::str::error::Utf8Error"* %_13 to i8*, !dbg !12233
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false), !dbg !12233
  %52 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %0 to %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err"*, !dbg !12234
  %53 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err", %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Err"* %52, i32 0, i32 1, !dbg !12234
  %54 = bitcast %"alloc::string::FromUtf8Error"* %53 to i8*, !dbg !12234
  %55 = bitcast %"alloc::string::FromUtf8Error"* %_11 to i8*, !dbg !12234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 40, i1 false), !dbg !12234
  %56 = bitcast %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %0 to i64*, !dbg !12234
  store i64 1, i64* %56, align 8, !dbg !12234
  br label %bb5, !dbg !12235

bb5:                                              ; preds = %bb4, %bb2
  ret void, !dbg !12236
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11finish_grow17hbe07facdea092d41E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, %"alloc::alloc::Global"* align 1 %alloc) unnamed_addr #2 !dbg !12237 {
start:
  %n.dbg.spill22 = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %e.dbg.spill20 = alloca { i64, i64 }, align 8
  %residual.dbg.spill17 = alloca { i64, i64 }, align 8
  %e.dbg.spill14 = alloca { i64, i64 }, align 8
  %val.dbg.spill11 = alloca { i64, i64 }, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill10 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill7 = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %self6 = alloca i64, align 8
  %self5 = alloca i64, align 8
  %self4 = alloca i64, align 8
  %self3 = alloca i64, align 8
  %_58 = alloca { i64, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_43 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %residual2 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !12259, metadata !DIExpression()), !dbg !12312
  call void @llvm.dbg.declare(metadata %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, metadata !12260, metadata !DIExpression()), !dbg !12313
  store %"alloc::alloc::Global"* %alloc, %"alloc::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %alloc.dbg.spill, metadata !12261, metadata !DIExpression()), !dbg !12314
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !12262, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self, metadata !12316, metadata !DIExpression()), !dbg !12344
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !12346, metadata !DIExpression()), !dbg !12356
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !12358, metadata !DIExpression()), !dbg !12385
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual2, metadata !12387, metadata !DIExpression()), !dbg !12397
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !12296, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !12298, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !12302, metadata !DIExpression()), !dbg !12401
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !12379, metadata !DIExpression()), !dbg !12402
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !12403, metadata !DIExpression()), !dbg !12407
  call void @llvm.dbg.declare(metadata i64* %self4, metadata !12414, metadata !DIExpression()), !dbg !12418
  call void @llvm.dbg.declare(metadata i64* %self5, metadata !12419, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !12430, metadata !DIExpression()), !dbg !12434
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h332add955f1124a8E"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %self, i64 %new_layout.0, i64 %new_layout.1), !dbg !12345
  br label %bb1, !dbg !12345

bb1:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*, !dbg !12344
  %_45 = load i64, i64* %3, align 8, !dbg !12344, !range !3441, !noundef !23
  switch i64 %_45, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ], !dbg !12344

bb20:                                             ; preds = %bb1
  unreachable, !dbg !12344

bb21:                                             ; preds = %bb1
  %4 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !12344
  %5 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %4, i32 0, i32 1, !dbg !12344
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !12344
  %v.0 = load i64, i64* %6, align 8, !dbg !12344
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !12344
  %v.1 = load i64, i64* %7, align 8, !dbg !12344, !range !5559, !noundef !23
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 0, !dbg !12344
  store i64 %v.0, i64* %8, align 8, !dbg !12344
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 1, !dbg !12344
  store i64 %v.1, i64* %9, align 8, !dbg !12344
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill7, metadata !12338, metadata !DIExpression()), !dbg !12435
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !12435
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %10, i32 0, i32 1, !dbg !12435
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !12435
  store i64 %v.0, i64* %12, align 8, !dbg !12435
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !12435
  store i64 %v.1, i64* %13, align 8, !dbg !12435
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !12435
  store i64 0, i64* %14, align 8, !dbg !12435
  br label %bb2, !dbg !12344

bb19:                                             ; preds = %bb1
  %15 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !12344
  %16 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %15, i32 0, i32 1, !dbg !12344
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !12344
  %e.0 = load i64, i64* %17, align 8, !dbg !12344
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !12344
  %e.1 = load i64, i64* %18, align 8, !dbg !12344, !range !1795, !noundef !23
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !12344
  store i64 %e.0, i64* %19, align 8, !dbg !12344
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !12344
  store i64 %e.1, i64* %20, align 8, !dbg !12344
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !12341, metadata !DIExpression()), !dbg !12436
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !12436
  store i64 %e.0, i64* %21, align 8, !dbg !12436
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !12436
  store i64 %e.1, i64* %22, align 8, !dbg !12436
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !12436
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %23, i32 0, i32 1, !dbg !12436
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !12436
  %26 = load i64, i64* %25, align 8, !dbg !12436
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !12436
  %28 = load i64, i64* %27, align 8, !dbg !12436, !range !1795, !noundef !23
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !12436
  store i64 %26, i64* %29, align 8, !dbg !12436
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !12436
  store i64 %28, i64* %30, align 8, !dbg !12436
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !12436
  store i64 1, i64* %31, align 8, !dbg !12436
  br label %bb2, !dbg !12344

bb2:                                              ; preds = %bb21, %bb19
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !12345
  %_9 = load i64, i64* %32, align 8, !dbg !12345, !range !3441, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !12345

bb4:                                              ; preds = %bb2
  unreachable, !dbg !12345

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !12345
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %33, i32 0, i32 1, !dbg !12345
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !12345
  %val.0 = load i64, i64* %35, align 8, !dbg !12345
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !12345
  %val.1 = load i64, i64* %36, align 8, !dbg !12345, !range !5559, !noundef !23
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 0, !dbg !12345
  store i64 %val.0, i64* %37, align 8, !dbg !12345
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 1, !dbg !12345
  store i64 %val.1, i64* %38, align 8, !dbg !12345
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill11, metadata !12279, metadata !DIExpression()), !dbg !12437
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !12437
  store i64 %val.0, i64* %39, align 8, !dbg !12437
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !12437
  store i64 %val.1, i64* %40, align 8, !dbg !12437
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12438
  store i64 -9223372036854775807, i64* %41, align 8, !dbg !12438
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12385
  %43 = load i64, i64* %42, align 8, !dbg !12385, !range !7592, !noundef !23
  %44 = sub i64 %43, -9223372036854775807, !dbg !12385
  %45 = icmp eq i64 %44, 0, !dbg !12385
  %_55 = select i1 %45, i64 0, i64 1, !dbg !12385
  switch i64 %_55, label %bb23 [
    i64 0, label %bb24
    i64 1, label %bb22
  ], !dbg !12385

bb5:                                              ; preds = %bb2
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !12444
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %46, i32 0, i32 1, !dbg !12444
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 0, !dbg !12444
  %residual.0 = load i64, i64* %48, align 8, !dbg !12444
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 1, !dbg !12444
  %residual.1 = load i64, i64* %49, align 8, !dbg !12444, !range !1795, !noundef !23
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !12444
  store i64 %residual.0, i64* %50, align 8, !dbg !12444
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !12444
  store i64 %residual.1, i64* %51, align 8, !dbg !12444
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !12264, metadata !DIExpression()), !dbg !12445
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !12445
  store i64 %residual.0, i64* %52, align 8, !dbg !12445
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !12445
  store i64 %residual.1, i64* %53, align 8, !dbg !12445
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !12356
  %e.08 = load i64, i64* %54, align 8, !dbg !12356
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !12356
  %e.19 = load i64, i64* %55, align 8, !dbg !12356, !range !1795, !noundef !23
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 0, !dbg !12356
  store i64 %e.08, i64* %56, align 8, !dbg !12356
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 1, !dbg !12356
  store i64 %e.19, i64* %57, align 8, !dbg !12356
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill10, metadata !12352, metadata !DIExpression()), !dbg !12446
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !12446
  store i64 %e.08, i64* %58, align 8, !dbg !12446
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !12446
  store i64 %e.19, i64* %59, align 8, !dbg !12446
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !12447, metadata !DIExpression()), !dbg !12451
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !12451
  store i64 %e.08, i64* %60, align 8, !dbg !12451
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !12451
  store i64 %e.19, i64* %61, align 8, !dbg !12451
  %62 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !12446
  %63 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %62, i32 0, i32 1, !dbg !12446
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !12446
  %65 = load i64, i64* %64, align 8, !dbg !12446
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !12446
  %67 = load i64, i64* %66, align 8, !dbg !12446, !range !1795, !noundef !23
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 0, !dbg !12446
  store i64 %65, i64* %68, align 8, !dbg !12446
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 1, !dbg !12446
  store i64 %67, i64* %69, align 8, !dbg !12446
  %70 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !12446
  store i64 1, i64* %70, align 8, !dbg !12446
  br label %bb17, !dbg !12453

bb17:                                             ; preds = %bb25, %bb5
  br label %bb18, !dbg !12455

bb23:                                             ; preds = %bb3
  unreachable, !dbg !12385

bb24:                                             ; preds = %bb3
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !12402
  store i64 -9223372036854775807, i64* %71, align 8, !dbg !12402
  br label %bb6, !dbg !12385

bb22:                                             ; preds = %bb3
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !12385
  %e.012 = load i64, i64* %72, align 8, !dbg !12385
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12385
  %e.113 = load i64, i64* %73, align 8, !dbg !12385, !range !1795, !noundef !23
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 0, !dbg !12385
  store i64 %e.012, i64* %74, align 8, !dbg !12385
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 1, !dbg !12385
  store i64 %e.113, i64* %75, align 8, !dbg !12385
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill14, metadata !12382, metadata !DIExpression()), !dbg !12456
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !12456
  store i64 %e.012, i64* %76, align 8, !dbg !12456
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !12456
  store i64 %e.113, i64* %77, align 8, !dbg !12456
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !12456
  %79 = load i64, i64* %78, align 8, !dbg !12456
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !12456
  %81 = load i64, i64* %80, align 8, !dbg !12456, !range !1795, !noundef !23
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !12456
  store i64 %79, i64* %82, align 8, !dbg !12456
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !12456
  store i64 %81, i64* %83, align 8, !dbg !12456
  br label %bb6, !dbg !12385

bb6:                                              ; preds = %bb24, %bb22
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !12386
  %85 = load i64, i64* %84, align 8, !dbg !12386, !range !7592, !noundef !23
  %86 = sub i64 %85, -9223372036854775807, !dbg !12386
  %87 = icmp eq i64 %86, 0, !dbg !12386
  %_17 = select i1 %87, i64 0, i64 1, !dbg !12386
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !12386

bb8:                                              ; preds = %bb6
  unreachable, !dbg !12386

bb7:                                              ; preds = %bb6
  %88 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, i32 0, i32 1, !dbg !12457
  %89 = load i64, i64* %88, align 8, !dbg !12457, !range !1795, !noundef !23
  %90 = icmp eq i64 %89, 0, !dbg !12457
  %_22 = select i1 %90, i64 0, i64 1, !dbg !12457
  %91 = icmp eq i64 %_22, 1, !dbg !12457
  br i1 %91, label %bb11, label %bb10, !dbg !12457

bb9:                                              ; preds = %bb6
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !12458
  %residual.015 = load i64, i64* %92, align 8, !dbg !12458
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !12458
  %residual.116 = load i64, i64* %93, align 8, !dbg !12458, !range !1795, !noundef !23
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 0, !dbg !12458
  store i64 %residual.015, i64* %94, align 8, !dbg !12458
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 1, !dbg !12458
  store i64 %residual.116, i64* %95, align 8, !dbg !12458
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill17, metadata !12281, metadata !DIExpression()), !dbg !12459
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !12459
  store i64 %residual.015, i64* %96, align 8, !dbg !12459
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !12459
  store i64 %residual.116, i64* %97, align 8, !dbg !12459
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !12397
  %e.018 = load i64, i64* %98, align 8, !dbg !12397
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !12397
  %e.119 = load i64, i64* %99, align 8, !dbg !12397, !range !1795, !noundef !23
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 0, !dbg !12397
  store i64 %e.018, i64* %100, align 8, !dbg !12397
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 1, !dbg !12397
  store i64 %e.119, i64* %101, align 8, !dbg !12397
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill20, metadata !12393, metadata !DIExpression()), !dbg !12460
; call <T as core::convert::From<T>>::from
  %102 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8e1a809c19999ecbE"(i64 %e.018, i64 %e.119), !dbg !12460
  %_61.0 = extractvalue { i64, i64 } %102, 0, !dbg !12460
  %_61.1 = extractvalue { i64, i64 } %102, 1, !dbg !12460
  br label %bb25, !dbg !12460

bb25:                                             ; preds = %bb9
  %103 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !12460
  %104 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %103, i32 0, i32 1, !dbg !12460
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 0, !dbg !12460
  store i64 %_61.0, i64* %105, align 8, !dbg !12460
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 1, !dbg !12460
  store i64 %_61.1, i64* %106, align 8, !dbg !12460
  %107 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !12460
  store i64 1, i64* %107, align 8, !dbg !12460
  br label %bb17, !dbg !12461

bb18:                                             ; preds = %bb16, %bb17
  ret void, !dbg !12455

bb11:                                             ; preds = %bb7
  %108 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12463
  %109 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %108 to { i8*, { i64, i64 } }*, !dbg !12463
  %110 = bitcast { i8*, { i64, i64 } }* %109 to i8**, !dbg !12463
  %ptr = load i8*, i8** %110, align 8, !dbg !12463, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !12463
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12300, metadata !DIExpression()), !dbg !12463
  %111 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12401
  %112 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %111 to { i8*, { i64, i64 } }*, !dbg !12401
  %113 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %112, i32 0, i32 1, !dbg !12401
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 0, !dbg !12401
  %115 = load i64, i64* %114, align 8, !dbg !12401
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 1, !dbg !12401
  %117 = load i64, i64* %116, align 8, !dbg !12401, !range !5559, !noundef !23
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !12401
  store i64 %115, i64* %118, align 8, !dbg !12401
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !12401
  store i64 %117, i64* %119, align 8, !dbg !12401
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill, align 8, !dbg !12413
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !12411, metadata !DIExpression()), !dbg !12464
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !12464
  %121 = load i64, i64* %120, align 8, !dbg !12464, !range !5559, !noundef !23
  store i64 %121, i64* %self4, align 8, !dbg !12464
  %_74 = load i64, i64* %self4, align 8, !dbg !12418, !range !5559, !noundef !23
  store i64 %_74, i64* %n.dbg.spill, align 8, !dbg !12418
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !12465, metadata !DIExpression()), !dbg !12472
  store i64 %_74, i64* %self3, align 8, !dbg !12472
  %_32 = load i64, i64* %self3, align 8, !dbg !12407
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !12429
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !12427, metadata !DIExpression()), !dbg !12474
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !12474
  %123 = load i64, i64* %122, align 8, !dbg !12474, !range !5559, !noundef !23
  store i64 %123, i64* %self6, align 8, !dbg !12474
  %_80 = load i64, i64* %self6, align 8, !dbg !12434, !range !5559, !noundef !23
  store i64 %_80, i64* %n.dbg.spill22, align 8, !dbg !12434
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill22, metadata !12475, metadata !DIExpression()), !dbg !12482
  store i64 %_80, i64* %self5, align 8, !dbg !12482
  %_34 = load i64, i64* %self5, align 8, !dbg !12423
  %_31 = icmp eq i64 %_32, %_34, !dbg !12413
  call void @llvm.assume(i1 %_31), !dbg !12484
  br label %bb12, !dbg !12484

bb10:                                             ; preds = %bb7
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !12485
  %_41.0 = load i64, i64* %124, align 8, !dbg !12485
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !12485
  %_41.1 = load i64, i64* %125, align 8, !dbg !12485, !range !5559, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %126 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h5362ef78c2fe951dE"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_41.0, i64 %_41.1), !dbg !12486
  store { i8*, i64 } %126, { i8*, i64 }* %memory, align 8, !dbg !12486
  br label %bb14, !dbg !12486

bb14:                                             ; preds = %bb10
  br label %bb15, !dbg !12487

bb15:                                             ; preds = %bb13, %bb14
  %127 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !12488
  %_42.0 = load i8*, i8** %127, align 8, !dbg !12488
  %128 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !12488
  %_42.1 = load i64, i64* %128, align 8, !dbg !12488
  %129 = bitcast i64** %_43 to { i64, i64 }**, !dbg !12489
  store { i64, i64 }* %new_layout, { i64, i64 }** %129, align 8, !dbg !12489
  %130 = load i64*, i64** %_43, align 8, !dbg !12488, !nonnull !23, !align !584, !noundef !23
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17haa50c8f3ab854e05E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %_42.0, i64 %_42.1, i64* align 8 %130), !dbg !12488
  br label %bb16, !dbg !12488

bb12:                                             ; preds = %bb11
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !12490
  %_38.0 = load i64, i64* %131, align 8, !dbg !12490
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !12490
  %_38.1 = load i64, i64* %132, align 8, !dbg !12490, !range !5559, !noundef !23
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !12491
  %_39.0 = load i64, i64* %133, align 8, !dbg !12491
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !12491
  %_39.1 = load i64, i64* %134, align 8, !dbg !12491, !range !5559, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %135 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h9d4d09305fd7e816E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %ptr, i64 %_38.0, i64 %_38.1, i64 %_39.0, i64 %_39.1), !dbg !12492
  store { i8*, i64 } %135, { i8*, i64 }* %memory, align 8, !dbg !12492
  br label %bb13, !dbg !12492

bb13:                                             ; preds = %bb12
  br label %bb15, !dbg !12487

bb16:                                             ; preds = %bb15
  br label %bb18, !dbg !12455
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h07e7c4c910121c76E"() unnamed_addr #0 !dbg !12493 {
start:
  %_2.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !12497, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %_2.dbg.spill, metadata !12498, metadata !DIExpression()), !dbg !12500
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !12501
  store i64 0, i64* %1, align 8, !dbg !12501
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !12502
  %3 = load i64, i64* %2, align 8, !dbg !12502
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !12502
  %5 = load i64, i64* %4, align 8, !dbg !12502, !range !1795, !noundef !23
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !12502
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !12502
  ret { i64, i64 } %7, !dbg !12502
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h3934b48ad60c67afE"(i64* align 8 %0) unnamed_addr #0 !dbg !12503 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_3 = alloca { i64, i64 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %1 = bitcast i64** %_1 to { i64, i64 }**
  %2 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !nonnull !23, !align !584, !noundef !23
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !12507, metadata !DIExpression(DW_OP_deref)), !dbg !12509
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %_2.dbg.spill, metadata !12508, metadata !DIExpression()), !dbg !12510
  %3 = bitcast i64** %_1 to { i64, i64 }**, !dbg !12511
  %_5 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !12511, !nonnull !23, !align !584, !noundef !23
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !12511
  %_4.0 = load i64, i64* %4, align 8, !dbg !12511
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !12511
  %_4.1 = load i64, i64* %5, align 8, !dbg !12511, !range !5559, !noundef !23
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !12512
  store i64 %_4.0, i64* %6, align 8, !dbg !12512
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !12512
  store i64 %_4.1, i64* %7, align 8, !dbg !12512
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !12512
  %9 = load i64, i64* %8, align 8, !dbg !12512
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !12512
  %11 = load i64, i64* %10, align 8, !dbg !12512, !range !1795, !noundef !23
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb9ad3db51038b09fE"(i64 %9, i64 %11), !dbg !12512
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !12512
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !12512
  br label %bb1, !dbg !12512

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !12513
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !12513
  ret { i64, i64 } %16, !dbg !12513
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17h794891bae32dc8a6E(i64 %result.0, i64 %result.1) unnamed_addr #0 !dbg !12514 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %result.dbg.spill = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 0
  store i64 %result.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 1
  store i64 %result.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %result.dbg.spill, metadata !12518, metadata !DIExpression()), !dbg !12521
; call core::result::Result<T,E>::map_err
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd2a527fdb6f06cc9E"(i64 %result.0, i64 %result.1), !dbg !12522
  store { i64, i64 } %2, { i64, i64 }* %_2, align 8, !dbg !12522
  br label %bb1, !dbg !12522

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !12522
  %4 = load i64, i64* %3, align 8, !dbg !12522, !range !7592, !noundef !23
  %5 = sub i64 %4, -9223372036854775807, !dbg !12522
  %6 = icmp eq i64 %5, 0, !dbg !12522
  %_6 = select i1 %6, i64 0, i64 1, !dbg !12522
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !12523

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !12522

bb2:                                              ; preds = %bb1
  ret void, !dbg !12524

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !12522
  %8 = load i64, i64* %7, align 8, !dbg !12522, !range !1795, !noundef !23
  %9 = icmp eq i64 %8, 0, !dbg !12522
  %_5 = select i1 %9, i64 0, i64 1, !dbg !12522
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !12523

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #15, !dbg !12525
  unreachable, !dbg !12525

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !12526
  %layout.0 = load i64, i64* %10, align 8, !dbg !12526
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !12526
  %layout.1 = load i64, i64* %11, align 8, !dbg !12526, !range !5559, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12526
  store i64 %layout.0, i64* %12, align 8, !dbg !12526
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12526
  store i64 %layout.1, i64* %13, align 8, !dbg !12526
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12519, metadata !DIExpression()), !dbg !12527
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #15, !dbg !12528
  unreachable, !dbg !12528
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h647e2068a8dc7d5bE"(i64 %0, i64 %1) unnamed_addr #0 !dbg !12529 {
start:
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill1 = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %2 = alloca { i64, i64 }, align 8
  %e = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !12534, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !12533, metadata !DIExpression()), !dbg !12536
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill, align 8, !dbg !12537
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !12538, metadata !DIExpression()), !dbg !12545
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill1, align 8, !dbg !12545
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill1, metadata !12546, metadata !DIExpression()), !dbg !12559
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !12559
  %6 = load i64, i64* %5, align 8, !dbg !12559, !range !1795, !noundef !23
  %7 = icmp eq i64 %6, 0, !dbg !12559
  %_5 = select i1 %7, i64 0, i64 1, !dbg !12559
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !12559

bb3:                                              ; preds = %start
  unreachable, !dbg !12559

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !12559
  store i64 0, i64* %8, align 8, !dbg !12559
  br label %bb1, !dbg !12559

bb2:                                              ; preds = %start
  store { i64, i64 }* %e, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !12559
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !12554, metadata !DIExpression()), !dbg !12561
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !12561
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !12562, metadata !DIExpression()), !dbg !12569
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0, !dbg !12569
  %_8.0 = load i64, i64* %9, align 8, !dbg !12569
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !12569
  %_8.1 = load i64, i64* %10, align 8, !dbg !12569, !range !5559, !noundef !23
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !12561
  store i64 %_8.0, i64* %11, align 8, !dbg !12561
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !12561
  store i64 %_8.1, i64* %12, align 8, !dbg !12561
  br label %bb1, !dbg !12559

bb1:                                              ; preds = %bb4, %bb2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !12571
  %14 = load i64, i64* %13, align 8, !dbg !12571
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !12571
  %16 = load i64, i64* %15, align 8, !dbg !12571, !range !1795, !noundef !23
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !12571
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !12571
  ret { i64, i64 } %18, !dbg !12571
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hdee41fa7d0ae0decE"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !12572 {
start:
  %ptr.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill5 = alloca i8*, align 8
  %ptr.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i8*, align 8
  %_37 = alloca i8, align 1
  %self = alloca i8*, align 8
  %_31 = alloca i8*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i8*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !12576, metadata !DIExpression()), !dbg !12589
  call void @llvm.dbg.declare(metadata i8* %init, metadata !12577, metadata !DIExpression()), !dbg !12590
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !12578, metadata !DIExpression()), !dbg !12591
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !12583, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.declare(metadata i8** %self, metadata !12593, metadata !DIExpression()), !dbg !12597
  store i8 1, i8* %_37, align 1, !dbg !12599
  br i1 false, label %bb1, label %bb2, !dbg !12599

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !12599
  br label %bb3, !dbg !12599

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !12600
  %4 = zext i1 %_6 to i8, !dbg !12599
  store i8 %4, i8* %_4, align 1, !dbg !12599
  br label %bb3, !dbg !12599

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !12599, !range !512, !noundef !23
  %6 = trunc i8 %5 to i1, !dbg !12599
  br i1 %6, label %bb4, label %bb6, !dbg !12599

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hc79c5268edc0cd65E(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !12601

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !12602
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h436abdc57eb7e83aE"()
          to label %bb5 unwind label %cleanup, !dbg !12603

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !12604, !range !512, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !12604
  br i1 %10, label %bb25, label %bb24, !dbg !12604

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i8*, i64 } %8, { i8*, i64 }* %2, align 8, !dbg !12603
  br label %bb23, !dbg !12605

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !12606
  %17 = load i8*, i8** %16, align 8, !dbg !12606, !nonnull !23, !noundef !23
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !12606
  %19 = load i64, i64* %18, align 8, !dbg !12606
  %20 = insertvalue { i8*, i64 } undef, i8* %17, 0, !dbg !12606
  %21 = insertvalue { i8*, i64 } %20, i64 %19, 1, !dbg !12606
  ret { i8*, i64 } %21, !dbg !12606

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !12601
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !12601
  %23 = load i64, i64* %22, align 8, !dbg !12601, !range !1795, !noundef !23
  %24 = icmp eq i64 %23, 0, !dbg !12601
  %_12 = select i1 %24, i64 1, i64 0, !dbg !12601
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !12607

bb9:                                              ; preds = %bb7
  unreachable, !dbg !12601

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !12608
  %layout.0 = load i64, i64* %25, align 8, !dbg !12608
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !12608
  %layout.1 = load i64, i64* %26, align 8, !dbg !12608, !range !5559, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12608
  store i64 %layout.0, i64* %27, align 8, !dbg !12608
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12608
  store i64 %layout.1, i64* %28, align 8, !dbg !12608
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12581, metadata !DIExpression()), !dbg !12609
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !12610
  store i64 %layout.0, i64* %29, align 8, !dbg !12610
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !12610
  store i64 %layout.1, i64* %30, align 8, !dbg !12610
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !12579, metadata !DIExpression()), !dbg !12611
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !12612
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !12612
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !12616
  %33 = load i64, i64* %32, align 8, !dbg !12616, !range !7592, !noundef !23
  %34 = sub i64 %33, -9223372036854775807, !dbg !12616
  %35 = icmp eq i64 %34, 0, !dbg !12616
  %_18 = select i1 %35, i64 0, i64 1, !dbg !12616
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !12617

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #15
          to label %unreachable unwind label %cleanup, !dbg !12618

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !12616

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !12619, !range !512, !noundef !23
  %37 = trunc i8 %36 to i1, !dbg !12619
  %_21 = zext i1 %37 to i64, !dbg !12619
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !12620

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #15
          to label %unreachable unwind label %cleanup, !dbg !12621

bb15:                                             ; preds = %bb13
  unreachable, !dbg !12619

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h5362ef78c2fe951dE"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !12622

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h53c6b5eb8ad323aeE"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !12623

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !12623
  br label %bb19, !dbg !12624

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !12625
  %41 = load {}*, {}** %40, align 8, !dbg !12625
  %42 = icmp eq {}* %41, null, !dbg !12625
  %_27 = select i1 %42, i64 1, i64 0, !dbg !12625
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !12626

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !12622
  br label %bb19, !dbg !12627

bb21:                                             ; preds = %bb19
  unreachable, !dbg !12625

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !12628
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !12628, !nonnull !23, !noundef !23
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !12628
  %ptr.1 = load i64, i64* %44, align 8, !dbg !12628
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !12628
  store i8* %ptr.0, i8** %45, align 8, !dbg !12628
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !12628
  store i64 %ptr.1, i64* %46, align 8, !dbg !12628
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !12587, metadata !DIExpression()), !dbg !12629
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !12630
  store i8* %ptr.0, i8** %47, align 8, !dbg !12630
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !12630
  store i64 %ptr.1, i64* %48, align 8, !dbg !12630
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !12585, metadata !DIExpression()), !dbg !12631
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !12598
  store i8* %ptr.0, i8** %49, align 8, !dbg !12598
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !12598
  store i64 %ptr.1, i64* %50, align 8, !dbg !12598
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !12632, metadata !DIExpression()), !dbg !12636
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !12636
  store i8* %ptr.0, i8** %51, align 8, !dbg !12636
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !12636
  store i64 %ptr.1, i64* %52, align 8, !dbg !12636
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !12637, metadata !DIExpression()), !dbg !12641
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !12641
  %ptr = bitcast [0 x i8]* %_41.0 to i8*, !dbg !12636
  store i8* %ptr, i8** %ptr.dbg.spill4, align 8, !dbg !12636
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill4, metadata !12643, metadata !DIExpression()), !dbg !12647
  store i8* %ptr, i8** %self, align 8, !dbg !12647
  %_45 = load i8*, i8** %self, align 8, !dbg !12597
  store i8* %_45, i8** %ptr.dbg.spill5, align 8, !dbg !12597
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill5, metadata !12649, metadata !DIExpression()), !dbg !12655
  store i8* %_45, i8** %ptr.dbg.spill6, align 8, !dbg !12655
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !12657, metadata !DIExpression()), !dbg !12661
  store i8* %_45, i8** %_46, align 8, !dbg !12661
  %53 = load i8*, i8** %_46, align 8, !dbg !12655, !nonnull !23, !noundef !23
  store i8* %53, i8** %_31, align 8, !dbg !12655
  %54 = bitcast { i8*, i64 }* %2 to i8**, !dbg !12663
  %55 = load i8*, i8** %_31, align 8, !dbg !12663, !nonnull !23, !noundef !23
  store i8* %55, i8** %54, align 8, !dbg !12663
  %56 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !12663
  store i64 %capacity, i64* %56, align 8, !dbg !12663
  %57 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !12663
  br label %bb23, !dbg !12605

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #15
          to label %unreachable unwind label %cleanup, !dbg !12664

bb24:                                             ; preds = %bb25, %bb26
  %58 = bitcast { i8*, i32 }* %1 to i8**, !dbg !12665
  %59 = load i8*, i8** %58, align 8, !dbg !12665
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !12665
  %61 = load i32, i32* %60, align 8, !dbg !12665
  %62 = insertvalue { i8*, i32 } undef, i8* %59, 0, !dbg !12665
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1, !dbg !12665
  resume { i8*, i32 } %63, !dbg !12665

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !12604
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h3d2d49d54f3a60bdE"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !12666 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !12670, metadata !DIExpression()), !dbg !12673
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !12671, metadata !DIExpression()), !dbg !12674
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !12672, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !12676, metadata !DIExpression()), !dbg !12681
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill2, align 8, !dbg !12682
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill2, metadata !12683, metadata !DIExpression()), !dbg !12686
  br i1 false, label %bb2, label %bb3, !dbg !12686

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !12686
  br label %bb1, !dbg !12686

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !12686
  %1 = load i64, i64* %0, align 8, !dbg !12686
  store i64 %1, i64* %self1, align 8, !dbg !12686
  br label %bb1, !dbg !12686

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !12687
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !12680, metadata !DIExpression()), !dbg !12681
  %_10 = load i64, i64* %self1, align 8, !dbg !12681
  %_5 = sub i64 %_10, %len, !dbg !12681
  %2 = icmp ugt i64 %additional, %_5, !dbg !12688
  ret i1 %2, !dbg !12689
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h0ded22c4c0f9d25fE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !12690 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !12694, metadata !DIExpression()), !dbg !12697
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !12698, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !12709, metadata !DIExpression()), !dbg !12713
  br i1 false, label %bb1, label %bb2, !dbg !12723

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !12723
  br label %bb3, !dbg !12723

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !12724
  %_5 = load i64, i64* %1, align 8, !dbg !12724
  %_4 = icmp eq i64 %_5, 0, !dbg !12724
  %2 = zext i1 %_4 to i8, !dbg !12723
  store i8 %2, i8* %_2, align 1, !dbg !12723
  br label %bb3, !dbg !12723

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !12723, !range !512, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !12723
  br i1 %4, label %bb4, label %bb5, !dbg !12723

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !12725
  %_8 = load i64, i64* %5, align 8, !dbg !12725
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h740ebd2248365eefE(i64 %_8), !dbg !12708
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !12708
  br label %bb6, !dbg !12708

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !12726
  store i64 0, i64* %7, align 8, !dbg !12726
  br label %bb8, !dbg !12727

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !12728

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12707
  %9 = load i64, i64* %8, align 8, !dbg !12707, !range !1795, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !12707
  %_15 = select i1 %10, i64 1, i64 0, !dbg !12707
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !12707

bb10:                                             ; preds = %bb6
  unreachable, !dbg !12707

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !12707
  %t.0 = load i64, i64* %11, align 8, !dbg !12707
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12707
  %t.1 = load i64, i64* %12, align 8, !dbg !12707, !range !5559, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !12707
  store i64 %t.0, i64* %13, align 8, !dbg !12707
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !12707
  store i64 %t.1, i64* %14, align 8, !dbg !12707
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !12704, metadata !DIExpression()), !dbg !12729
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12729
  store i64 %t.0, i64* %15, align 8, !dbg !12729
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12729
  store i64 %t.1, i64* %16, align 8, !dbg !12729
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12695, metadata !DIExpression()), !dbg !12730
  %17 = bitcast { i64*, i64 }* %self to i64**, !dbg !12722
  %self2 = load i64*, i64** %17, align 8, !dbg !12722, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !12722
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !12719, metadata !DIExpression()), !dbg !12731
  store i64* %self2, i64** %self.dbg.spill4, align 8, !dbg !12731
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !12732, metadata !DIExpression()), !dbg !12738
  store i64* %self2, i64** %self.dbg.spill5, align 8, !dbg !12738
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !12740, metadata !DIExpression()), !dbg !12744
  %_22 = bitcast i64* %self2 to { i8*, i64 }*, !dbg !12744
  %ptr = bitcast { i8*, i64 }* %_22 to i8*, !dbg !12738
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !12738
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12746, metadata !DIExpression()), !dbg !12750
  store i8* %ptr, i8** %pointer, align 8, !dbg !12750
  %_26 = load i8*, i8** %pointer, align 8, !dbg !12713, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !12713
  %18 = load i8*, i8** %_11, align 8, !dbg !12722, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h0fef2e7ad346ada8E"(i8* %18), !dbg !12722
  br label %bb7, !dbg !12722

bb9:                                              ; preds = %bb6
  unreachable, !dbg !12752

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !12756
  store i8* %_10, i8** %19, align 8, !dbg !12756
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !12756
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !12756
  store i64 %t.0, i64* %21, align 8, !dbg !12756
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !12756
  store i64 %t.1, i64* %22, align 8, !dbg !12756
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12757
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !12757
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !12757
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !12757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !12757
  br label %bb8, !dbg !12727
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5bcf1a131c06d2c2E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i8*, i64 }* align 8 %self) unnamed_addr #1 !dbg !12758 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !12762, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !12766, metadata !DIExpression()), !dbg !12773
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !12775, metadata !DIExpression()), !dbg !12779
  br i1 false, label %bb1, label %bb2, !dbg !12788

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !12788
  br label %bb3, !dbg !12788

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !12789
  %_5 = load i64, i64* %1, align 8, !dbg !12789
  %_4 = icmp eq i64 %_5, 0, !dbg !12789
  %2 = zext i1 %_4 to i8, !dbg !12788
  store i8 %2, i8* %_2, align 1, !dbg !12788
  br label %bb3, !dbg !12788

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !12788, !range !512, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !12788
  br i1 %4, label %bb4, label %bb5, !dbg !12788

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !12790
  %_8 = load i64, i64* %5, align 8, !dbg !12790
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hc79c5268edc0cd65E(i64 %_8), !dbg !12774
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !12774
  br label %bb6, !dbg !12774

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !12791
  store i64 0, i64* %7, align 8, !dbg !12791
  br label %bb8, !dbg !12792

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !12793

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12773
  %9 = load i64, i64* %8, align 8, !dbg !12773, !range !1795, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !12773
  %_15 = select i1 %10, i64 1, i64 0, !dbg !12773
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !12773

bb10:                                             ; preds = %bb6
  unreachable, !dbg !12773

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !12773
  %t.0 = load i64, i64* %11, align 8, !dbg !12773
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12773
  %t.1 = load i64, i64* %12, align 8, !dbg !12773, !range !5559, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !12773
  store i64 %t.0, i64* %13, align 8, !dbg !12773
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !12773
  store i64 %t.1, i64* %14, align 8, !dbg !12773
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !12770, metadata !DIExpression()), !dbg !12794
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12794
  store i64 %t.0, i64* %15, align 8, !dbg !12794
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12794
  store i64 %t.1, i64* %16, align 8, !dbg !12794
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12763, metadata !DIExpression()), !dbg !12795
  %17 = bitcast { i8*, i64 }* %self to i8**, !dbg !12787
  %self2 = load i8*, i8** %17, align 8, !dbg !12787, !nonnull !23, !noundef !23
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !12787
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !12785, metadata !DIExpression()), !dbg !12796
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !12796
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !12797, metadata !DIExpression()), !dbg !12803
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !12803
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !12805, metadata !DIExpression()), !dbg !12809
  store i8* %self2, i8** %ptr.dbg.spill, align 8, !dbg !12803
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12811, metadata !DIExpression()), !dbg !12815
  store i8* %self2, i8** %pointer, align 8, !dbg !12815
  %_26 = load i8*, i8** %pointer, align 8, !dbg !12779, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !12779
  %18 = load i8*, i8** %_11, align 8, !dbg !12787, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h0fef2e7ad346ada8E"(i8* %18), !dbg !12787
  br label %bb7, !dbg !12787

bb9:                                              ; preds = %bb6
  unreachable, !dbg !12817

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !12821
  store i8* %_10, i8** %19, align 8, !dbg !12821
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !12821
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !12821
  store i64 %t.0, i64* %21, align 8, !dbg !12821
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !12821
  store i64 %t.1, i64* %22, align 8, !dbg !12821
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12822
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !12822
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !12822
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !12822
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !12822
  br label %bb8, !dbg !12792
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66b2c208eef723b2E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !12823 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !12827, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !12831, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !12840, metadata !DIExpression()), !dbg !12844
  br i1 false, label %bb1, label %bb2, !dbg !12854

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !12854
  br label %bb3, !dbg !12854

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !12855
  %_5 = load i64, i64* %1, align 8, !dbg !12855
  %_4 = icmp eq i64 %_5, 0, !dbg !12855
  %2 = zext i1 %_4 to i8, !dbg !12854
  store i8 %2, i8* %_2, align 1, !dbg !12854
  br label %bb3, !dbg !12854

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !12854, !range !512, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !12854
  br i1 %4, label %bb4, label %bb5, !dbg !12854

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !12856
  %_8 = load i64, i64* %5, align 8, !dbg !12856
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17haf51b2e82c5094e2E(i64 %_8), !dbg !12839
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !12839
  br label %bb6, !dbg !12839

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !12857
  store i64 0, i64* %7, align 8, !dbg !12857
  br label %bb8, !dbg !12858

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !12859

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12838
  %9 = load i64, i64* %8, align 8, !dbg !12838, !range !1795, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !12838
  %_15 = select i1 %10, i64 1, i64 0, !dbg !12838
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !12838

bb10:                                             ; preds = %bb6
  unreachable, !dbg !12838

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !12838
  %t.0 = load i64, i64* %11, align 8, !dbg !12838
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12838
  %t.1 = load i64, i64* %12, align 8, !dbg !12838, !range !5559, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !12838
  store i64 %t.0, i64* %13, align 8, !dbg !12838
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !12838
  store i64 %t.1, i64* %14, align 8, !dbg !12838
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !12835, metadata !DIExpression()), !dbg !12860
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12860
  store i64 %t.0, i64* %15, align 8, !dbg !12860
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12860
  store i64 %t.1, i64* %16, align 8, !dbg !12860
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12828, metadata !DIExpression()), !dbg !12861
  %17 = bitcast { i64*, i64 }* %self to i64**, !dbg !12853
  %self2 = load i64*, i64** %17, align 8, !dbg !12853, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !12853
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !12850, metadata !DIExpression()), !dbg !12862
  store i64* %self2, i64** %self.dbg.spill4, align 8, !dbg !12862
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !12863, metadata !DIExpression()), !dbg !12869
  store i64* %self2, i64** %self.dbg.spill5, align 8, !dbg !12869
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !12871, metadata !DIExpression()), !dbg !12875
  %_22 = bitcast i64* %self2 to i8**, !dbg !12875
  %ptr = bitcast i8** %_22 to i8*, !dbg !12869
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !12869
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12877, metadata !DIExpression()), !dbg !12881
  store i8* %ptr, i8** %pointer, align 8, !dbg !12881
  %_26 = load i8*, i8** %pointer, align 8, !dbg !12844, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !12844
  %18 = load i8*, i8** %_11, align 8, !dbg !12853, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h0fef2e7ad346ada8E"(i8* %18), !dbg !12853
  br label %bb7, !dbg !12853

bb9:                                              ; preds = %bb6
  unreachable, !dbg !12883

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !12887
  store i8* %_10, i8** %19, align 8, !dbg !12887
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !12887
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !12887
  store i64 %t.0, i64* %21, align 8, !dbg !12887
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !12887
  store i64 %t.1, i64* %22, align 8, !dbg !12887
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12888
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !12888
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !12888
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !12888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !12888
  br label %bb8, !dbg !12858
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hcf5ccc989e11caaeE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !12889 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i64*, align 8
  %self.dbg.spill4 = alloca i64*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !12893, metadata !DIExpression()), !dbg !12896
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !12897, metadata !DIExpression()), !dbg !12904
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !12906, metadata !DIExpression()), !dbg !12910
  br i1 false, label %bb1, label %bb2, !dbg !12920

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !12920
  br label %bb3, !dbg !12920

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !12921
  %_5 = load i64, i64* %1, align 8, !dbg !12921
  %_4 = icmp eq i64 %_5, 0, !dbg !12921
  %2 = zext i1 %_4 to i8, !dbg !12920
  store i8 %2, i8* %_2, align 1, !dbg !12920
  br label %bb3, !dbg !12920

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !12920, !range !512, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !12920
  br i1 %4, label %bb4, label %bb5, !dbg !12920

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !12922
  %_8 = load i64, i64* %5, align 8, !dbg !12922
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h55a81e3824e5f6f7E(i64 %_8), !dbg !12905
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !12905
  br label %bb6, !dbg !12905

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !12923
  store i64 0, i64* %7, align 8, !dbg !12923
  br label %bb8, !dbg !12924

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !12925

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12904
  %9 = load i64, i64* %8, align 8, !dbg !12904, !range !1795, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !12904
  %_15 = select i1 %10, i64 1, i64 0, !dbg !12904
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !12904

bb10:                                             ; preds = %bb6
  unreachable, !dbg !12904

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !12904
  %t.0 = load i64, i64* %11, align 8, !dbg !12904
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !12904
  %t.1 = load i64, i64* %12, align 8, !dbg !12904, !range !5559, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !12904
  store i64 %t.0, i64* %13, align 8, !dbg !12904
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !12904
  store i64 %t.1, i64* %14, align 8, !dbg !12904
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !12901, metadata !DIExpression()), !dbg !12926
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !12926
  store i64 %t.0, i64* %15, align 8, !dbg !12926
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !12926
  store i64 %t.1, i64* %16, align 8, !dbg !12926
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !12894, metadata !DIExpression()), !dbg !12927
  %17 = bitcast { i64*, i64 }* %self to i64**, !dbg !12919
  %self2 = load i64*, i64** %17, align 8, !dbg !12919, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !12919
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !12916, metadata !DIExpression()), !dbg !12928
  store i64* %self2, i64** %self.dbg.spill4, align 8, !dbg !12928
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill4, metadata !12929, metadata !DIExpression()), !dbg !12935
  store i64* %self2, i64** %self.dbg.spill5, align 8, !dbg !12935
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill5, metadata !12937, metadata !DIExpression()), !dbg !12941
  %_22 = bitcast i64* %self2 to { {}*, [3 x i64]* }*, !dbg !12941
  %ptr = bitcast { {}*, [3 x i64]* }* %_22 to i8*, !dbg !12935
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !12935
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !12943, metadata !DIExpression()), !dbg !12947
  store i8* %ptr, i8** %pointer, align 8, !dbg !12947
  %_26 = load i8*, i8** %pointer, align 8, !dbg !12910, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !12910
  %18 = load i8*, i8** %_11, align 8, !dbg !12919, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h0fef2e7ad346ada8E"(i8* %18), !dbg !12919
  br label %bb7, !dbg !12919

bb9:                                              ; preds = %bb6
  unreachable, !dbg !12949

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !12953
  store i8* %_10, i8** %19, align 8, !dbg !12953
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !12953
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !12953
  store i64 %t.0, i64* %21, align 8, !dbg !12953
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !12953
  store i64 %t.1, i64* %22, align 8, !dbg !12953
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !12954
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !12954
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !12954
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !12954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !12954
  br label %bb8, !dbg !12924
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h3306748c6f3fc176E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !12955 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !12960, metadata !DIExpression()), !dbg !12981
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !12961, metadata !DIExpression()), !dbg !12982
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !12962, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !12984, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !13026, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !13032, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !13037, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !13049, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !13077, metadata !DIExpression()), !dbg !13087
  br i1 false, label %bb1, label %bb3, !dbg !13089

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !13090
  store i64 0, i64* %1, align 8, !dbg !13090
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !13090
  %3 = load i64, i64* %2, align 8, !dbg !13090
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !13090
  %5 = load i64, i64* %4, align 8, !dbg !13090, !range !1795, !noundef !23
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb9ad3db51038b09fE"(i64 %3, i64 %5), !dbg !13090
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !13090
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !13090
  br label %bb2, !dbg !13090

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3624cd181a4fd12eE"(i64 %len, i64 %additional), !dbg !13025
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !13025
  br label %bb4, !dbg !13025

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !13091
  store i64 0, i64* %8, align 8, !dbg !13091
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !13036
  %_42 = load i64, i64* %9, align 8, !dbg !13036, !range !3441, !noundef !23
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !13036

bb20:                                             ; preds = %bb4
  unreachable, !dbg !13036

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !13036
  %_45.0 = load i64, i64* %10, align 8, !dbg !13036
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !13036
  %_45.1 = load i64, i64* %11, align 8, !dbg !13036, !range !1795, !noundef !23
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !13036
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !13036
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !13036
  store i64 %_45.0, i64* %14, align 8, !dbg !13036
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !13036
  store i64 %_45.1, i64* %15, align 8, !dbg !13036
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !13036
  store i64 1, i64* %16, align 8, !dbg !13036
  br label %bb22, !dbg !13036

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !13036
  %v = load i64, i64* %17, align 8, !dbg !13036
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !13036
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !13033, metadata !DIExpression()), !dbg !13092
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !13092
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !13092
  store i64 %v, i64* %19, align 8, !dbg !13092
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !13092
  store i64 0, i64* %20, align 8, !dbg !13092
  br label %bb22, !dbg !13036

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !13024
  %_46 = load i64, i64* %21, align 8, !dbg !13024, !range !3441, !noundef !23
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !13024

bb24:                                             ; preds = %bb22
  unreachable, !dbg !13024

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !13024
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !13024
  %v5 = load i64, i64* %23, align 8, !dbg !13024
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !13024
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !13018, metadata !DIExpression()), !dbg !13093
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !13093
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !13093
  store i64 %v5, i64* %25, align 8, !dbg !13093
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !13093
  store i64 0, i64* %26, align 8, !dbg !13093
  br label %bb5, !dbg !13024

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !13024
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !13024
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !13024
  %e.0 = load i64, i64* %29, align 8, !dbg !13024
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !13024
  %e.1 = load i64, i64* %30, align 8, !dbg !13024, !range !1795, !noundef !23
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !13024
  store i64 %e.0, i64* %31, align 8, !dbg !13024
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !13024
  store i64 %e.1, i64* %32, align 8, !dbg !13024
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !13021, metadata !DIExpression()), !dbg !13094
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !13094
  store i64 %e.0, i64* %33, align 8, !dbg !13094
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !13094
  store i64 %e.1, i64* %34, align 8, !dbg !13094
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !13094
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !13094
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !13094
  %38 = load i64, i64* %37, align 8, !dbg !13094
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !13094
  %40 = load i64, i64* %39, align 8, !dbg !13094, !range !1795, !noundef !23
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !13094
  store i64 %38, i64* %41, align 8, !dbg !13094
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !13094
  store i64 %40, i64* %42, align 8, !dbg !13094
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !13094
  store i64 1, i64* %43, align 8, !dbg !13094
  br label %bb5, !dbg !13024

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !13025
  %_14 = load i64, i64* %44, align 8, !dbg !13025, !range !3441, !noundef !23
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !13025

bb7:                                              ; preds = %bb5
  unreachable, !dbg !13025

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !13025
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !13025
  %val = load i64, i64* %46, align 8, !dbg !13025
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !13025
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !12967, metadata !DIExpression()), !dbg !13095
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !13095
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !12963, metadata !DIExpression()), !dbg !13096
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !13097
  %_20 = load i64, i64* %47, align 8, !dbg !13097
  %v1 = mul i64 %_20, 2, !dbg !13097
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !13097
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !13098, metadata !DIExpression()), !dbg !13103
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !13105
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !13102, metadata !DIExpression()), !dbg !13103
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17h8a63a3f550b3945bE(i64 %v1, i64 %val), !dbg !13103
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !13103
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !12969, metadata !DIExpression()), !dbg !13106
  br label %bb26, !dbg !13103

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !13107
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !13107
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !13107
  %residual.0 = load i64, i64* %50, align 8, !dbg !13107
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !13107
  %residual.1 = load i64, i64* %51, align 8, !dbg !13107, !range !1795, !noundef !23
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !13107
  store i64 %residual.0, i64* %52, align 8, !dbg !13107
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !13107
  store i64 %residual.1, i64* %53, align 8, !dbg !13107
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !12965, metadata !DIExpression()), !dbg !13108
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !13108
  store i64 %residual.0, i64* %54, align 8, !dbg !13108
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !13108
  store i64 %residual.1, i64* %55, align 8, !dbg !13108
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !13047
  %e.07 = load i64, i64* %56, align 8, !dbg !13047
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !13047
  %e.18 = load i64, i64* %57, align 8, !dbg !13047, !range !1795, !noundef !23
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !13047
  store i64 %e.07, i64* %58, align 8, !dbg !13047
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !13047
  store i64 %e.18, i64* %59, align 8, !dbg !13047
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !13043, metadata !DIExpression()), !dbg !13109
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !13109
  store i64 %e.07, i64* %60, align 8, !dbg !13109
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !13109
  store i64 %e.18, i64* %61, align 8, !dbg !13109
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !13110, metadata !DIExpression()), !dbg !13114
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !13114
  store i64 %e.07, i64* %62, align 8, !dbg !13114
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !13114
  store i64 %e.18, i64* %63, align 8, !dbg !13114
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !13109
  %65 = load i64, i64* %64, align 8, !dbg !13109
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !13109
  %67 = load i64, i64* %66, align 8, !dbg !13109, !range !1795, !noundef !23
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13109
  store i64 %65, i64* %68, align 8, !dbg !13109
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13109
  store i64 %67, i64* %69, align 8, !dbg !13109
  br label %bb17, !dbg !13116

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !13116

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !13118
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !13119, metadata !DIExpression()), !dbg !13124
  store i64 8, i64* %v1.dbg.spill11, align 8, !dbg !13125
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !13123, metadata !DIExpression()), !dbg !13124
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17h8a63a3f550b3945bE(i64 8, i64 %cap), !dbg !13124
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !13124
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !12971, metadata !DIExpression()), !dbg !13126
  br label %bb27, !dbg !13124

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17hc79c5268edc0cd65E(i64 %cap12), !dbg !13127
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !13127
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !13127
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !13127
  store i64 %new_layout.0, i64* %71, align 8, !dbg !13127
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !13127
  store i64 %new_layout.1, i64* %72, align 8, !dbg !13127
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !12973, metadata !DIExpression()), !dbg !13128
  br label %bb9, !dbg !13127

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5bcf1a131c06d2c2E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i8*, i64 }* align 8 %self), !dbg !13129
  br label %bb10, !dbg !13129

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !13130
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17hbe07facdea092d41E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !13076
  br label %bb11, !dbg !13076

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !13075
  %_61 = load i64, i64* %73, align 8, !dbg !13075, !range !3441, !noundef !23
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !13075

bb29:                                             ; preds = %bb11
  unreachable, !dbg !13075

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !13075
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !13075
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !13075
  %v.0 = load i8*, i8** %76, align 8, !dbg !13075, !nonnull !23, !noundef !23
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !13075
  %v.1 = load i64, i64* %77, align 8, !dbg !13075
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !13075
  store i8* %v.0, i8** %78, align 8, !dbg !13075
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !13075
  store i64 %v.1, i64* %79, align 8, !dbg !13075
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !13069, metadata !DIExpression()), !dbg !13131
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !13131
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !13131
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !13131
  store i8* %v.0, i8** %82, align 8, !dbg !13131
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !13131
  store i64 %v.1, i64* %83, align 8, !dbg !13131
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !13131
  store i64 0, i64* %84, align 8, !dbg !13131
  br label %bb12, !dbg !13075

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !13075
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !13075
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !13075
  %e.014 = load i64, i64* %87, align 8, !dbg !13075
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !13075
  %e.115 = load i64, i64* %88, align 8, !dbg !13075, !range !1795, !noundef !23
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !13075
  store i64 %e.014, i64* %89, align 8, !dbg !13075
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !13075
  store i64 %e.115, i64* %90, align 8, !dbg !13075
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !13072, metadata !DIExpression()), !dbg !13132
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !13132
  store i64 %e.014, i64* %91, align 8, !dbg !13132
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !13132
  store i64 %e.115, i64* %92, align 8, !dbg !13132
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !13132
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !13132
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !13132
  %96 = load i64, i64* %95, align 8, !dbg !13132
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !13132
  %98 = load i64, i64* %97, align 8, !dbg !13132, !range !1795, !noundef !23
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !13132
  store i64 %96, i64* %99, align 8, !dbg !13132
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !13132
  store i64 %98, i64* %100, align 8, !dbg !13132
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !13132
  store i64 1, i64* %101, align 8, !dbg !13132
  br label %bb12, !dbg !13075

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !13076
  %_34 = load i64, i64* %102, align 8, !dbg !13076, !range !3441, !noundef !23
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !13076

bb14:                                             ; preds = %bb12
  unreachable, !dbg !13076

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !13076
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !13076
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !13076
  %val.0 = load i8*, i8** %105, align 8, !dbg !13076, !nonnull !23, !noundef !23
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !13076
  %val.1 = load i64, i64* %106, align 8, !dbg !13076
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !13076
  store i8* %val.0, i8** %107, align 8, !dbg !13076
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !13076
  store i64 %val.1, i64* %108, align 8, !dbg !13076
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !12979, metadata !DIExpression()), !dbg !13133
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !13133
  store i8* %val.0, i8** %109, align 8, !dbg !13133
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !13133
  store i64 %val.1, i64* %110, align 8, !dbg !13133
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !12975, metadata !DIExpression()), !dbg !13134
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h65020c8da3b106aaE"({ i8*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !13135
  br label %bb16, !dbg !13135

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !13136
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !13136
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !13136
  %residual.018 = load i64, i64* %113, align 8, !dbg !13136
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !13136
  %residual.119 = load i64, i64* %114, align 8, !dbg !13136, !range !1795, !noundef !23
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !13136
  store i64 %residual.018, i64* %115, align 8, !dbg !13136
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !13136
  store i64 %residual.119, i64* %116, align 8, !dbg !13136
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !12977, metadata !DIExpression()), !dbg !13137
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !13137
  store i64 %residual.018, i64* %117, align 8, !dbg !13137
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !13137
  store i64 %residual.119, i64* %118, align 8, !dbg !13137
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !13087
  %e.021 = load i64, i64* %119, align 8, !dbg !13087
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !13087
  %e.122 = load i64, i64* %120, align 8, !dbg !13087, !range !1795, !noundef !23
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !13087
  store i64 %e.021, i64* %121, align 8, !dbg !13087
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !13087
  store i64 %e.122, i64* %122, align 8, !dbg !13087
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !13083, metadata !DIExpression()), !dbg !13138
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8e1a809c19999ecbE"(i64 %e.021, i64 %e.122), !dbg !13138
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !13138
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !13138
  br label %bb31, !dbg !13138

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13138
  store i64 %_68.0, i64* %124, align 8, !dbg !13138
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13138
  store i64 %_68.1, i64* %125, align 8, !dbg !13138
  br label %bb17, !dbg !13139

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13141
  %127 = load i64, i64* %126, align 8, !dbg !13141
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13141
  %129 = load i64, i64* %128, align 8, !dbg !13141, !range !7592, !noundef !23
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !13141
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !13141
  ret { i64, i64 } %131, !dbg !13141

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13142
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !13142
  br label %bb18, !dbg !13141

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13143
  store i64 %_5.0, i64* %133, align 8, !dbg !13143
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13143
  store i64 %_5.1, i64* %134, align 8, !dbg !13143
  br label %bb18, !dbg !13116
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h65020c8da3b106aaE"({ i8*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #1 !dbg !13144 {
start:
  %ptr.dbg.spill6 = alloca i8*, align 8
  %ptr.dbg.spill5 = alloca i8*, align 8
  %ptr.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_17 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_4 = alloca i8*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13148, metadata !DIExpression()), !dbg !13151
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !13149, metadata !DIExpression()), !dbg !13152
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !13150, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !13154, metadata !DIExpression()), !dbg !13158
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !13159
  store i8* %ptr.0, i8** %2, align 8, !dbg !13159
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !13159
  store i64 %ptr.1, i64* %3, align 8, !dbg !13159
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !13160, metadata !DIExpression()), !dbg !13164
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !13164
  store i8* %ptr.0, i8** %4, align 8, !dbg !13164
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !13164
  store i64 %ptr.1, i64* %5, align 8, !dbg !13164
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !13165, metadata !DIExpression()), !dbg !13169
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !13169
  %ptr = bitcast [0 x i8]* %_12.0 to i8*, !dbg !13164
  store i8* %ptr, i8** %ptr.dbg.spill4, align 8, !dbg !13164
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill4, metadata !13171, metadata !DIExpression()), !dbg !13175
  store i8* %ptr, i8** %self1, align 8, !dbg !13175
  %_16 = load i8*, i8** %self1, align 8, !dbg !13158
  store i8* %_16, i8** %ptr.dbg.spill5, align 8, !dbg !13158
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill5, metadata !13177, metadata !DIExpression()), !dbg !13181
  store i8* %_16, i8** %ptr.dbg.spill6, align 8, !dbg !13181
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !13183, metadata !DIExpression()), !dbg !13187
  store i8* %_16, i8** %_17, align 8, !dbg !13187
  %6 = load i8*, i8** %_17, align 8, !dbg !13181, !nonnull !23, !noundef !23
  store i8* %6, i8** %_4, align 8, !dbg !13181
  %7 = bitcast { i8*, i64 }* %self to i8**, !dbg !13189
  %8 = load i8*, i8** %_4, align 8, !dbg !13189, !nonnull !23, !noundef !23
  store i8* %8, i8** %7, align 8, !dbg !13189
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !13190
  store i64 %cap, i64* %9, align 8, !dbg !13190
  ret void, !dbg !13191
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define internal { i8*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h436abdc57eb7e83aE"() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !13192 {
start:
  %ptr.dbg.spill1 = alloca i8*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i8*, align 8
  %_2 = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !13196, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !13198, metadata !DIExpression()), !dbg !13202
  store i64 1, i64* %addr.dbg.spill, align 8, !dbg !13208
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !13220, metadata !DIExpression()), !dbg !13224
  %3 = bitcast i8** %1 to i64*, !dbg !13224
  store i64 1, i64* %3, align 8, !dbg !13224
  %ptr = load i8*, i8** %1, align 8, !dbg !13224
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !13224
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13216, metadata !DIExpression()), !dbg !13226
  br label %bb3, !dbg !13224

bb3:                                              ; preds = %start
  store i8* %ptr, i8** %ptr.dbg.spill1, align 8, !dbg !13226
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill1, metadata !13227, metadata !DIExpression()), !dbg !13231
  store i8* %ptr, i8** %pointer, align 8, !dbg !13231
  %_12 = load i8*, i8** %pointer, align 8, !dbg !13202, !nonnull !23, !noundef !23
  store i8* %_12, i8** %_2, align 8, !dbg !13202
  %4 = bitcast { i8*, i64 }* %2 to i8**, !dbg !13233
  %5 = load i8*, i8** %_2, align 8, !dbg !13233, !nonnull !23, !noundef !23
  store i8* %5, i8** %4, align 8, !dbg !13233
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !13233
  store i64 0, i64* %6, align 8, !dbg !13233
  %7 = bitcast { i8*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !13233
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !13234
  %9 = load i8*, i8** %8, align 8, !dbg !13234, !nonnull !23, !noundef !23
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !13234
  %11 = load i64, i64* %10, align 8, !dbg !13234
  %12 = insertvalue { i8*, i64 } undef, i8* %9, 0, !dbg !13234
  %13 = insertvalue { i8*, i64 } %12, i64 %11, 1, !dbg !13234
  ret { i8*, i64 } %13, !dbg !13234

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !13235

bb2:                                              ; preds = %bb1
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !13236
  %15 = load i8*, i8** %14, align 8, !dbg !13236
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !13236
  %17 = load i32, i32* %16, align 8, !dbg !13236
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !13236
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !13236
  resume { i8*, i32 } %19, !dbg !13236
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h1c09bbfa83d176d6E"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !13237 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13241, metadata !DIExpression()), !dbg !13244
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13242, metadata !DIExpression()), !dbg !13245
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !13243, metadata !DIExpression()), !dbg !13246
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h3d2d49d54f3a60bdE"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !13247
  br label %bb1, !dbg !13247

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !13247

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !13248

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9e5fa404d7577aaeE"({ i8*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !13249
  br label %bb3, !dbg !13249

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !13250
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9e5fa404d7577aaeE"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #4 !dbg !13251 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %slf, { i8*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %slf.dbg.spill, metadata !13255, metadata !DIExpression()), !dbg !13258
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13256, metadata !DIExpression()), !dbg !13259
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !13257, metadata !DIExpression()), !dbg !13260
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h3306748c6f3fc176E"({ i8*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !13261
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !13261
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !13261
  br label %bb1, !dbg !13261

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17h794891bae32dc8a6E(i64 %_5.0, i64 %_5.1), !dbg !13262
  br label %bb2, !dbg !13262

bb2:                                              ; preds = %bb1
  ret void, !dbg !13263
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hcfbfb7ac5f978e32E"(%"alloc::string::String"* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !13264 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !13267, metadata !DIExpression()), !dbg !13269
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !13268, metadata !DIExpression()), !dbg !13270
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %self), !dbg !13271
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !13271
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !13271
  br label %bb1, !dbg !13271

bb1:                                              ; preds = %start
; call <str as core::fmt::Display>::fmt
  %1 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hde81f4d22eef4d42E"([0 x i8]* align 1 %_5.0, i64 %_5.1, %"core::fmt::Formatter"* align 8 %f), !dbg !13272
  br label %bb2, !dbg !13272

bb2:                                              ; preds = %bb1
  ret i1 %1, !dbg !13273
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !13274 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !13279, metadata !DIExpression()), !dbg !13282
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13280, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !13281, metadata !DIExpression()), !dbg !13284
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !13285, metadata !DIExpression()), !dbg !13291
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !13293, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !13304, metadata !DIExpression()), !dbg !13308
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !13309
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !13310, metadata !DIExpression()), !dbg !13314
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !13314
  %_4 = load i64, i64* %4, align 8, !dbg !13314
  %5 = icmp eq i64 %_4, 0, !dbg !13309
  br i1 %5, label %bb2, label %bb1, !dbg !13309

bb2:                                              ; preds = %start
  br label %bb3, !dbg !13315

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !13316
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !13317, metadata !DIExpression()), !dbg !13321
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !13321
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !13290, metadata !DIExpression()), !dbg !13291
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !13322
  %7 = load i64, i64* %6, align 8, !dbg !13322
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !13322
  %9 = load i64, i64* %8, align 8, !dbg !13322, !range !5559, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !13322
  store i64 %7, i64* %10, align 8, !dbg !13322
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !13322
  store i64 %9, i64* %11, align 8, !dbg !13322
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !13291
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !13323, metadata !DIExpression()), !dbg !13327
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !13327
  %_11 = load i64, i64* %12, align 8, !dbg !13327
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !13291
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !13301, metadata !DIExpression()), !dbg !13329
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !13329
  %14 = load i64, i64* %13, align 8, !dbg !13329, !range !5559, !noundef !23
  store i64 %14, i64* %self3, align 8, !dbg !13329
  %_18 = load i64, i64* %self3, align 8, !dbg !13308, !range !5559, !noundef !23
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !13308
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !13330, metadata !DIExpression()), !dbg !13337
  store i64 %_18, i64* %self2, align 8, !dbg !13337
  %_13 = load i64, i64* %self2, align 8, !dbg !13297
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #18, !dbg !13291
  br label %bb4, !dbg !13291

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !13315

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !13339
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h53c6b5eb8ad323aeE"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !13340 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !13344, metadata !DIExpression()), !dbg !13346
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !13345, metadata !DIExpression()), !dbg !13347
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he3827ab2a2518c8dE(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true), !dbg !13348
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !13348
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !13348
  br label %bb1, !dbg !13348

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !13349
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !13349
  ret { i8*, i64 } %6, !dbg !13349
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h9d4d09305fd7e816E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !13350 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !13354, metadata !DIExpression()), !dbg !13358
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13355, metadata !DIExpression()), !dbg !13359
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !13356, metadata !DIExpression()), !dbg !13360
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !13357, metadata !DIExpression()), !dbg !13361
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h18238a86a3089a62E(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !13362
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !13362
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !13362
  br label %bb1, !dbg !13362

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !13363
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !13363
  ret { i8*, i64 } %8, !dbg !13363
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h5362ef78c2fe951dE"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !13364 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !13366, metadata !DIExpression()), !dbg !13368
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !13367, metadata !DIExpression()), !dbg !13369
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17he3827ab2a2518c8dE(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !13370
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !13370
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !13370
  br label %bb1, !dbg !13370

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !13371
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !13371
  ret { i8*, i64 } %6, !dbg !13371
}

; <alloc::string::String as core::default::Default>::default
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN64_$LT$alloc..string..String$u20$as$u20$core..default..Default$GT$7default17h769a922eb9f1dd50E"(%"alloc::string::String"* sret(%"alloc::string::String") %0) unnamed_addr #0 !dbg !13372 {
start:
  %_1 = alloca %"alloc::vec::Vec<u8>", align 8
  %_2.0 = load i8*, i8** getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 0), align 8, !dbg !13376, !nonnull !23, !noundef !23
  %_2.1 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* bitcast (<{ [16 x i8] }>* @0 to { i8*, i64 }*), i32 0, i32 1), align 8, !dbg !13376
  %1 = bitcast %"alloc::vec::Vec<u8>"* %_1 to { i8*, i64 }*, !dbg !13376
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 0, !dbg !13376
  store i8* %_2.0, i8** %2, align 8, !dbg !13376
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %1, i32 0, i32 1, !dbg !13376
  store i64 %_2.1, i64* %3, align 8, !dbg !13376
  %4 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_1, i32 0, i32 1, !dbg !13376
  store i64 0, i64* %4, align 8, !dbg !13376
  %5 = bitcast %"alloc::string::String"* %0 to %"alloc::vec::Vec<u8>"*, !dbg !13382
  %6 = bitcast %"alloc::vec::Vec<u8>"* %5 to i8*, !dbg !13382
  %7 = bitcast %"alloc::vec::Vec<u8>"* %_1 to i8*, !dbg !13382
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !13382
  ret void, !dbg !13383
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %self) unnamed_addr #0 !dbg !13384 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %len.dbg.spill3 = alloca i64, align 8
  %data.dbg.spill2 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca %"alloc::vec::Vec<u8>"*, align 8
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  %_18 = alloca { i8*, i64 }, align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !13389, metadata !DIExpression()), !dbg !13390
  %_5 = bitcast %"alloc::string::String"* %self to %"alloc::vec::Vec<u8>"*, !dbg !13391
  store %"alloc::vec::Vec<u8>"* %_5, %"alloc::vec::Vec<u8>"** %self.dbg.spill1, align 8, !dbg !13391
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill1, metadata !13392, metadata !DIExpression()), !dbg !13396
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hcda8ebe428aaf363E"(%"alloc::vec::Vec<u8>"* align 8 %_5), !dbg !13396
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !13396
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !13397, metadata !DIExpression()), !dbg !13405
  br label %bb1, !dbg !13396

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %_5, i32 0, i32 1, !dbg !13396
  %len = load i64, i64* %1, align 8, !dbg !13396
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13396
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13401, metadata !DIExpression()), !dbg !13405
  store i8* %data, i8** %data.dbg.spill2, align 8, !dbg !13405
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill2, metadata !13407, metadata !DIExpression()), !dbg !13412
  store i64 %len, i64* %len.dbg.spill3, align 8, !dbg !13405
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill3, metadata !13411, metadata !DIExpression()), !dbg !13412
  store i8* %data, i8** %self.dbg.spill4, align 8, !dbg !13412
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !13414, metadata !DIExpression()), !dbg !13418
  %data_address = bitcast i8* %data to {}*, !dbg !13418
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13418
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13420, metadata !DIExpression()), !dbg !13425
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13412
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13424, metadata !DIExpression()), !dbg !13425
  %2 = bitcast { i8*, i64 }* %_18 to {}**, !dbg !13425
  store {}* %data_address, {}** %2, align 8, !dbg !13425
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 1, !dbg !13425
  store i64 %len, i64* %3, align 8, !dbg !13425
  %4 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_17 to { i8*, i64 }*, !dbg !13425
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 0, !dbg !13425
  %6 = load i8*, i8** %5, align 8, !dbg !13425
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_18, i32 0, i32 1, !dbg !13425
  %8 = load i64, i64* %7, align 8, !dbg !13425
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 0, !dbg !13425
  store i8* %6, i8** %9, align 8, !dbg !13425
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %4, i32 0, i32 1, !dbg !13425
  store i64 %8, i64* %10, align 8, !dbg !13425
  %11 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_17 to { [0 x i8]*, i64 }*, !dbg !13425
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !13425
  %_10.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !13425
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !13425
  %_10.1 = load i64, i64* %13, align 8, !dbg !13425
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !13391
  store [0 x i8]* %_10.0, [0 x i8]** %14, align 8, !dbg !13391
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !13391
  store i64 %_10.1, i64* %15, align 8, !dbg !13391
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !13427, metadata !DIExpression()), !dbg !13431
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !13431
  store [0 x i8]* %_10.0, [0 x i8]** %16, align 8, !dbg !13431
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !13431
  store i64 %_10.1, i64* %17, align 8, !dbg !13431
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !13431
  %19 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !13431, !nonnull !23, !align !445, !noundef !23
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !13431
  %21 = load i64, i64* %20, align 8, !dbg !13431
  br label %bb2, !dbg !13431

bb2:                                              ; preds = %bb1
  %22 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %19, 0, !dbg !13433
  %23 = insertvalue { [0 x i8]*, i64 } %22, i64 %21, 1, !dbg !13433
  ret { [0 x i8]*, i64 } %23, !dbg !13433
}

; <alloc::borrow::Cow<B> as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h0082b1a9c3918ff0E"(%"alloc::borrow::Cow<str>"* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !13434 {
start:
  %b.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %o.dbg.spill = alloca %"alloc::string::String"*, align 8
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"alloc::borrow::Cow<str>"*, align 8
  %0 = alloca i8, align 1
  store %"alloc::borrow::Cow<str>"* %self, %"alloc::borrow::Cow<str>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::borrow::Cow<str>"** %self.dbg.spill, metadata !13438, metadata !DIExpression()), !dbg !13444
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !13439, metadata !DIExpression()), !dbg !13445
  %1 = bitcast %"alloc::borrow::Cow<str>"* %self to i64*, !dbg !13446
  %_3 = load i64, i64* %1, align 8, !dbg !13446, !range !3441, !noundef !23
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !13447

bb2:                                              ; preds = %start
  unreachable, !dbg !13446

bb3:                                              ; preds = %start
  %2 = bitcast %"alloc::borrow::Cow<str>"* %self to %"alloc::borrow::Cow<str>::Borrowed"*, !dbg !13448
  %b = getelementptr inbounds %"alloc::borrow::Cow<str>::Borrowed", %"alloc::borrow::Cow<str>::Borrowed"* %2, i32 0, i32 1, !dbg !13448
  store { [0 x i8]*, i64 }* %b, { [0 x i8]*, i64 }** %b.dbg.spill, align 8, !dbg !13448
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %b.dbg.spill, metadata !13440, metadata !DIExpression()), !dbg !13449
; call <&T as core::fmt::Display>::fmt
  %3 = call zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h65542891b179a116E"({ [0 x i8]*, i64 }* align 8 %b, %"core::fmt::Formatter"* align 8 %f), !dbg !13450
  %4 = zext i1 %3 to i8, !dbg !13450
  store i8 %4, i8* %0, align 1, !dbg !13450
  br label %bb4, !dbg !13450

bb1:                                              ; preds = %start
  %5 = bitcast %"alloc::borrow::Cow<str>"* %self to %"alloc::borrow::Cow<str>::Owned"*, !dbg !13451
  %o = getelementptr inbounds %"alloc::borrow::Cow<str>::Owned", %"alloc::borrow::Cow<str>::Owned"* %5, i32 0, i32 1, !dbg !13451
  store %"alloc::string::String"* %o, %"alloc::string::String"** %o.dbg.spill, align 8, !dbg !13451
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %o.dbg.spill, metadata !13442, metadata !DIExpression()), !dbg !13452
; call <alloc::string::String as core::fmt::Display>::fmt
  %6 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hcfbfb7ac5f978e32E"(%"alloc::string::String"* align 8 %o, %"core::fmt::Formatter"* align 8 %f), !dbg !13453
  %7 = zext i1 %6 to i8, !dbg !13453
  store i8 %7, i8* %0, align 1, !dbg !13453
  br label %bb5, !dbg !13453

bb5:                                              ; preds = %bb1
  br label %bb6, !dbg !13454

bb6:                                              ; preds = %bb4, %bb5
  %8 = load i8, i8* %0, align 1, !dbg !13455, !range !512, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !13455
  ret i1 %9, !dbg !13455

bb4:                                              ; preds = %bb3
  br label %bb6, !dbg !13456
}

; <core::option::Option<T> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hefaa21c78fc9c5fbE"({ i8*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #1 !dbg !13457 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %__self_0 = alloca { [0 x i8]*, i64 }*, align 8
  %0 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13462, metadata !DIExpression()), !dbg !13466
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !13463, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %__self_0, metadata !13464, metadata !DIExpression()), !dbg !13467
  %1 = bitcast { i8*, i64 }* %self to {}**, !dbg !13466
  %2 = load {}*, {}** %1, align 8, !dbg !13466
  %3 = icmp eq {}* %2, null, !dbg !13466
  %_3 = select i1 %3, i64 0, i64 1, !dbg !13466
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !13466

bb2:                                              ; preds = %start
  unreachable, !dbg !13466

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17hd86e8e148609ddcbE(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc561 to [0 x i8]*), i64 4), !dbg !13466
  %5 = zext i1 %4 to i8, !dbg !13466
  store i8 %5, i8* %0, align 1, !dbg !13466
  br label %bb4, !dbg !13466

bb1:                                              ; preds = %start
  %6 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !13468
  store { [0 x i8]*, i64 }* %6, { [0 x i8]*, i64 }** %__self_0, align 8, !dbg !13468
  %_11.0 = bitcast { [0 x i8]*, i64 }** %__self_0 to {}*, !dbg !13467
; call core::fmt::Formatter::debug_tuple_field1_finish
  %7 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17hd6136acaab6696e6E(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc557 to [0 x i8]*), i64 4, {}* align 1 %_11.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*)), !dbg !13469
  %8 = zext i1 %7 to i8, !dbg !13469
  store i8 %8, i8* %0, align 1, !dbg !13469
  br label %bb5, !dbg !13469

bb5:                                              ; preds = %bb1
  br label %bb6, !dbg !13470

bb6:                                              ; preds = %bb4, %bb5
  %9 = load i8, i8* %0, align 1, !dbg !13471, !range !512, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !13471
  ret i1 %10, !dbg !13471

bb4:                                              ; preds = %bb3
  br label %bb6, !dbg !13470
}

; <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17he8a0e41e7ccbaa0aE"({ i8*, i64 }* align 8 %self) unnamed_addr #0 !dbg !13472 {
start:
  %0 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13479, metadata !DIExpression()), !dbg !13480
  %1 = bitcast { i8*, i64 }* %self to { [0 x i8]*, i64 }*, !dbg !13481
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !13481
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !13481, !nonnull !23, !align !445, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !13481
  %_4.1 = load i64, i64* %3, align 8, !dbg !13481
  %4 = bitcast [0 x i8]* %_4.0 to i8*, !dbg !13481
  %_5.0 = bitcast i8* %4 to [0 x i8]*, !dbg !13481
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !13481
  store [0 x i8]* %_5.0, [0 x i8]** %5, align 8, !dbg !13481
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !13481
  store i64 %_4.1, i64* %6, align 8, !dbg !13481
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !13482, metadata !DIExpression()), !dbg !13490
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !13490
  store [0 x i8]* %_5.0, [0 x i8]** %7, align 8, !dbg !13490
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !13490
  store i64 %_4.1, i64* %8, align 8, !dbg !13490
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !13491, metadata !DIExpression()), !dbg !13505
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !13505
  store [0 x i8]* %_5.0, [0 x i8]** %9, align 8, !dbg !13505
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !13505
  store i64 %_4.1, i64* %10, align 8, !dbg !13505
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !13507, metadata !DIExpression()), !dbg !13511
  %self3 = bitcast [0 x i8]* %_5.0 to i8*, !dbg !13511
  store i8* %self3, i8** %self.dbg.spill4, align 8, !dbg !13511
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !13513, metadata !DIExpression()), !dbg !13518
  store i8* %self3, i8** %self.dbg.spill5, align 8, !dbg !13518
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !13519, metadata !DIExpression()), !dbg !13524
  %11 = getelementptr inbounds i8, i8* %self3, i64 0, !dbg !13524
  store i8* %11, i8** %0, align 8, !dbg !13524
  %_20 = load i8*, i8** %0, align 8, !dbg !13524
  br label %bb1, !dbg !13524

bb1:                                              ; preds = %start
  store i8 0, i8* %_20, align 1, !dbg !13526
  ret void, !dbg !13527
}

; <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8a4c2bd86d948212E"(i32* align 4 %self) unnamed_addr #0 !dbg !13528 {
start:
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !13535, metadata !DIExpression()), !dbg !13536
  %_3 = load i32, i32* %self, align 4, !dbg !13537
  %_2 = call i32 @close(i32 %_3), !dbg !13538
  br label %bb1, !dbg !13538

bb1:                                              ; preds = %start
  ret void, !dbg !13539
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h01da44811e7732aeE"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #1 !dbg !13540 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !13545, metadata !DIExpression()), !dbg !13546
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79436617013f5de6E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !13547
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !13547
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !13548, metadata !DIExpression()), !dbg !13553
  br label %bb1, !dbg !13547

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !13555
  %len = load i64, i64* %0, align 8, !dbg !13555
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13555
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13552, metadata !DIExpression()), !dbg !13553
  store i8* %data, i8** %self.dbg.spill1, align 8, !dbg !13553
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !13556, metadata !DIExpression()), !dbg !13560
  %data_address = bitcast i8* %data to {}*, !dbg !13560
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13560
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13562, metadata !DIExpression()), !dbg !13567
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13553
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13566, metadata !DIExpression()), !dbg !13567
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !13567
  store {}* %data_address, {}** %1, align 8, !dbg !13567
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13567
  store i64 %len, i64* %2, align 8, !dbg !13567
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { i8*, i64 }*, !dbg !13567
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !13567
  %5 = load i8*, i8** %4, align 8, !dbg !13567
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13567
  %7 = load i64, i64* %6, align 8, !dbg !13567
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13567
  store i8* %5, i8** %8, align 8, !dbg !13567
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13567
  store i64 %7, i64* %9, align 8, !dbg !13567
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_10 to { [0 x i8]*, i64 }*, !dbg !13567
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !13567
  %_2.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !13567
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !13567
  %_2.1 = load i64, i64* %12, align 8, !dbg !13567
  br label %bb2, !dbg !13569

bb2:                                              ; preds = %bb1
  ret void, !dbg !13570
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h463cdfb33676b2f8E"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* align 8 %self) unnamed_addr #1 !dbg !13571 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca { {}*, [3 x i64]* }*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca { {}*, [3 x i64]* }*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>", align 8
  store %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %self, %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"** %self.dbg.spill, metadata !13575, metadata !DIExpression()), !dbg !13576
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call { {}*, [3 x i64]* }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hfef026a6d1b36ffcE"(%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* align 8 %self), !dbg !13577
  store { {}*, [3 x i64]* }* %data, { {}*, [3 x i64]* }** %data.dbg.spill, align 8, !dbg !13577
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %data.dbg.spill, metadata !13578, metadata !DIExpression()), !dbg !13585
  br label %bb1, !dbg !13577

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>", %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>"* %self, i32 0, i32 1, !dbg !13587
  %len = load i64, i64* %0, align 8, !dbg !13587
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13587
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13584, metadata !DIExpression()), !dbg !13585
  store { {}*, [3 x i64]* }* %data, { {}*, [3 x i64]* }** %self.dbg.spill1, align 8, !dbg !13585
  call void @llvm.dbg.declare(metadata { {}*, [3 x i64]* }** %self.dbg.spill1, metadata !13588, metadata !DIExpression()), !dbg !13595
  %data_address = bitcast { {}*, [3 x i64]* }* %data to {}*, !dbg !13595
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13595
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13597, metadata !DIExpression()), !dbg !13604
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13585
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13603, metadata !DIExpression()), !dbg !13604
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !13604
  store {}* %data_address, {}** %1, align 8, !dbg !13604
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13604
  store i64 %len, i64* %2, align 8, !dbg !13604
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>"* %_10 to { i8*, i64 }*, !dbg !13604
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !13604
  %5 = load i8*, i8** %4, align 8, !dbg !13604
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13604
  %7 = load i64, i64* %6, align 8, !dbg !13604
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13604
  store i8* %5, i8** %8, align 8, !dbg !13604
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13604
  store i64 %7, i64* %9, align 8, !dbg !13604
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>"* %_10 to { [0 x { {}*, [3 x i64]* }]*, i64 }*, !dbg !13604
  %11 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %10, i32 0, i32 0, !dbg !13604
  %_2.0 = load [0 x { {}*, [3 x i64]* }]*, [0 x { {}*, [3 x i64]* }]** %11, align 8, !dbg !13604
  %12 = getelementptr inbounds { [0 x { {}*, [3 x i64]* }]*, i64 }, { [0 x { {}*, [3 x i64]* }]*, i64 }* %10, i32 0, i32 1, !dbg !13604
  %_2.1 = load i64, i64* %12, align 8, !dbg !13604
; call core::ptr::drop_in_place<[alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>]>
  call void @"_ZN4core3ptr238drop_in_place$LT$$u5b$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u5d$$GT$17h4422a65083af32a9E"([0 x { {}*, [3 x i64]* }]* %_2.0, i64 %_2.1), !dbg !13606
  br label %bb2, !dbg !13606

bb2:                                              ; preds = %bb1
  ret void, !dbg !13607
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h511be7b7fe589a0eE"(%"alloc::vec::Vec<*const i8>"* align 8 %self) unnamed_addr #1 !dbg !13608 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8**, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8**, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<*const i8>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[*const i8]>", align 8
  store %"alloc::vec::Vec<*const i8>"* %self, %"alloc::vec::Vec<*const i8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<*const i8>"** %self.dbg.spill, metadata !13612, metadata !DIExpression()), !dbg !13613
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i8** @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hca17794ebab158c9E"(%"alloc::vec::Vec<*const i8>"* align 8 %self), !dbg !13614
  store i8** %data, i8*** %data.dbg.spill, align 8, !dbg !13614
  call void @llvm.dbg.declare(metadata i8*** %data.dbg.spill, metadata !13615, metadata !DIExpression()), !dbg !13627
  br label %bb1, !dbg !13614

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<*const i8>", %"alloc::vec::Vec<*const i8>"* %self, i32 0, i32 1, !dbg !13629
  %len = load i64, i64* %0, align 8, !dbg !13629
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13629
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13626, metadata !DIExpression()), !dbg !13627
  store i8** %data, i8*** %self.dbg.spill1, align 8, !dbg !13627
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill1, metadata !13630, metadata !DIExpression()), !dbg !13637
  %data_address = bitcast i8** %data to {}*, !dbg !13637
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13637
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13639, metadata !DIExpression()), !dbg !13646
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13627
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13645, metadata !DIExpression()), !dbg !13646
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !13646
  store {}* %data_address, {}** %1, align 8, !dbg !13646
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13646
  store i64 %len, i64* %2, align 8, !dbg !13646
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[*const i8]>"* %_10 to { i8*, i64 }*, !dbg !13646
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !13646
  %5 = load i8*, i8** %4, align 8, !dbg !13646
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13646
  %7 = load i64, i64* %6, align 8, !dbg !13646
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13646
  store i8* %5, i8** %8, align 8, !dbg !13646
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13646
  store i64 %7, i64* %9, align 8, !dbg !13646
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[*const i8]>"* %_10 to { [0 x i8*]*, i64 }*, !dbg !13646
  %11 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %10, i32 0, i32 0, !dbg !13646
  %_2.0 = load [0 x i8*]*, [0 x i8*]** %11, align 8, !dbg !13646
  %12 = getelementptr inbounds { [0 x i8*]*, i64 }, { [0 x i8*]*, i64 }* %10, i32 0, i32 1, !dbg !13646
  %_2.1 = load i64, i64* %12, align 8, !dbg !13646
  br label %bb2, !dbg !13648

bb2:                                              ; preds = %bb1
  ret void, !dbg !13649
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb5222ef95bf26be8E"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* align 8 %self) unnamed_addr #1 !dbg !13650 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca { i8*, i64 }*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<alloc::ffi::c_str::CString>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>", align 8
  store %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %self, %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<alloc::ffi::c_str::CString>"** %self.dbg.spill, metadata !13654, metadata !DIExpression()), !dbg !13655
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call { i8*, i64 }* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h910caaf7abb314fcE"(%"alloc::vec::Vec<alloc::ffi::c_str::CString>"* align 8 %self), !dbg !13656
  store { i8*, i64 }* %data, { i8*, i64 }** %data.dbg.spill, align 8, !dbg !13656
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %data.dbg.spill, metadata !13657, metadata !DIExpression()), !dbg !13664
  br label %bb1, !dbg !13656

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::ffi::c_str::CString>", %"alloc::vec::Vec<alloc::ffi::c_str::CString>"* %self, i32 0, i32 1, !dbg !13666
  %len = load i64, i64* %0, align 8, !dbg !13666
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13666
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13663, metadata !DIExpression()), !dbg !13664
  store { i8*, i64 }* %data, { i8*, i64 }** %self.dbg.spill1, align 8, !dbg !13664
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill1, metadata !13667, metadata !DIExpression()), !dbg !13674
  %data_address = bitcast { i8*, i64 }* %data to {}*, !dbg !13674
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13674
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13676, metadata !DIExpression()), !dbg !13683
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13664
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13682, metadata !DIExpression()), !dbg !13683
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !13683
  store {}* %data_address, {}** %1, align 8, !dbg !13683
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13683
  store i64 %len, i64* %2, align 8, !dbg !13683
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>"* %_10 to { i8*, i64 }*, !dbg !13683
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !13683
  %5 = load i8*, i8** %4, align 8, !dbg !13683
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !13683
  %7 = load i64, i64* %6, align 8, !dbg !13683
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13683
  store i8* %5, i8** %8, align 8, !dbg !13683
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13683
  store i64 %7, i64* %9, align 8, !dbg !13683
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>"* %_10 to { [0 x { i8*, i64 }]*, i64 }*, !dbg !13683
  %11 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %10, i32 0, i32 0, !dbg !13683
  %_2.0 = load [0 x { i8*, i64 }]*, [0 x { i8*, i64 }]** %11, align 8, !dbg !13683
  %12 = getelementptr inbounds { [0 x { i8*, i64 }]*, i64 }, { [0 x { i8*, i64 }]*, i64 }* %10, i32 0, i32 1, !dbg !13683
  %_2.1 = load i64, i64* %12, align 8, !dbg !13683
; call core::ptr::drop_in_place<[alloc::ffi::c_str::CString]>
  call void @"_ZN4core3ptr57drop_in_place$LT$$u5b$alloc..ffi..c_str..CString$u5d$$GT$17hdb4dd38c7432c3a5E"([0 x { i8*, i64 }]* %_2.0, i64 %_2.1), !dbg !13685
  br label %bb2, !dbg !13685

bb2:                                              ; preds = %bb1
  ret void, !dbg !13686
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hdc99657694d9fe4dE"({ i8*, i64 }* align 8 %self, { i8*, i64 }* align 8 %other) unnamed_addr #0 !dbg !13687 {
start:
  %__arg1_0.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %__self_0.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %__arg1_tag.dbg.spill = alloca i64, align 8
  %__self_tag.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { i8*, i64 }*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_11 = alloca { i64*, i64* }, align 8
  %_10 = alloca i8, align 1
  %0 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13692, metadata !DIExpression()), !dbg !13701
  store { i8*, i64 }* %other, { i8*, i64 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %other.dbg.spill, metadata !13693, metadata !DIExpression()), !dbg !13701
  %1 = bitcast { i8*, i64 }* %self to {}**, !dbg !13701
  %2 = load {}*, {}** %1, align 8, !dbg !13701
  %3 = icmp eq {}* %2, null, !dbg !13701
  %__self_tag = select i1 %3, i64 0, i64 1, !dbg !13701
  store i64 %__self_tag, i64* %__self_tag.dbg.spill, align 8, !dbg !13701
  call void @llvm.dbg.declare(metadata i64* %__self_tag.dbg.spill, metadata !13694, metadata !DIExpression()), !dbg !13702
  %4 = bitcast { i8*, i64 }* %other to {}**, !dbg !13702
  %5 = load {}*, {}** %4, align 8, !dbg !13702
  %6 = icmp eq {}* %5, null, !dbg !13702
  %__arg1_tag = select i1 %6, i64 0, i64 1, !dbg !13702
  store i64 %__arg1_tag, i64* %__arg1_tag.dbg.spill, align 8, !dbg !13702
  call void @llvm.dbg.declare(metadata i64* %__arg1_tag.dbg.spill, metadata !13696, metadata !DIExpression()), !dbg !13703
  %_7 = icmp eq i64 %__self_tag, %__arg1_tag, !dbg !13703
  br i1 %_7, label %bb2, label %bb1, !dbg !13703

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !13703
  br label %bb3, !dbg !13703

bb2:                                              ; preds = %start
  %7 = bitcast { i64*, i64* }* %_11 to { i8*, i64 }**, !dbg !13703
  store { i8*, i64 }* %self, { i8*, i64 }** %7, align 8, !dbg !13703
  %8 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_11, i32 0, i32 1, !dbg !13703
  %9 = bitcast i64** %8 to { i8*, i64 }**, !dbg !13703
  store { i8*, i64 }* %other, { i8*, i64 }** %9, align 8, !dbg !13703
  %10 = bitcast { i64*, i64* }* %_11 to { i8*, i64 }**, !dbg !13703
  %_20 = load { i8*, i64 }*, { i8*, i64 }** %10, align 8, !dbg !13703, !nonnull !23, !align !584, !noundef !23
  %11 = bitcast { i8*, i64 }* %_20 to {}**, !dbg !13703
  %12 = load {}*, {}** %11, align 8, !dbg !13703
  %13 = icmp eq {}* %12, null, !dbg !13703
  %_15 = select i1 %13, i64 0, i64 1, !dbg !13703
  %14 = icmp eq i64 %_15, 1, !dbg !13703
  br i1 %14, label %bb5, label %bb4, !dbg !13703

bb5:                                              ; preds = %bb2
  %15 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_11, i32 0, i32 1, !dbg !13703
  %16 = bitcast i64** %15 to { i8*, i64 }**, !dbg !13703
  %_21 = load { i8*, i64 }*, { i8*, i64 }** %16, align 8, !dbg !13703, !nonnull !23, !align !584, !noundef !23
  %17 = bitcast { i8*, i64 }* %_21 to {}**, !dbg !13703
  %18 = load {}*, {}** %17, align 8, !dbg !13703
  %19 = icmp eq {}* %18, null, !dbg !13703
  %_14 = select i1 %19, i64 0, i64 1, !dbg !13703
  %20 = icmp eq i64 %_14, 1, !dbg !13703
  br i1 %20, label %bb6, label %bb4, !dbg !13703

bb4:                                              ; preds = %bb5, %bb2
  store i8 1, i8* %_10, align 1, !dbg !13703
  br label %bb8, !dbg !13703

bb6:                                              ; preds = %bb5
  %21 = bitcast { i64*, i64* }* %_11 to { i8*, i64 }**, !dbg !13704
  %_22 = load { i8*, i64 }*, { i8*, i64 }** %21, align 8, !dbg !13704, !nonnull !23, !align !584, !noundef !23
  %__self_0 = bitcast { i8*, i64 }* %_22 to { [0 x i8]*, i64 }*, !dbg !13704
  store { [0 x i8]*, i64 }* %__self_0, { [0 x i8]*, i64 }** %__self_0.dbg.spill, align 8, !dbg !13704
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %__self_0.dbg.spill, metadata !13698, metadata !DIExpression()), !dbg !13705
  %22 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_11, i32 0, i32 1, !dbg !13704
  %23 = bitcast i64** %22 to { i8*, i64 }**, !dbg !13704
  %_23 = load { i8*, i64 }*, { i8*, i64 }** %23, align 8, !dbg !13704, !nonnull !23, !align !584, !noundef !23
  %__arg1_0 = bitcast { i8*, i64 }* %_23 to { [0 x i8]*, i64 }*, !dbg !13704
  store { [0 x i8]*, i64 }* %__arg1_0, { [0 x i8]*, i64 }** %__arg1_0.dbg.spill, align 8, !dbg !13704
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %__arg1_0.dbg.spill, metadata !13700, metadata !DIExpression()), !dbg !13705
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %24 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h9ee33d899d15c81dE"({ [0 x i8]*, i64 }* align 8 %__self_0, { [0 x i8]*, i64 }* align 8 %__arg1_0), !dbg !13705
  %25 = zext i1 %24 to i8, !dbg !13705
  store i8 %25, i8* %_10, align 1, !dbg !13705
  br label %bb7, !dbg !13705

bb8:                                              ; preds = %bb7, %bb4
  %26 = load i8, i8* %_10, align 1, !dbg !13703, !range !512, !noundef !23
  %27 = trunc i8 %26 to i1, !dbg !13703
  %28 = zext i1 %27 to i8, !dbg !13703
  store i8 %28, i8* %0, align 1, !dbg !13703
  br label %bb3, !dbg !13703

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !13706

bb3:                                              ; preds = %bb1, %bb8
  %29 = load i8, i8* %0, align 1, !dbg !13707, !range !512, !noundef !23
  %30 = trunc i8 %29 to i1, !dbg !13707
  ret i1 %30, !dbg !13707
}

; <std::ffi::os_str::OsString as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9daeb037d4eadd5cE"(%"std::ffi::os_str::OsString"* align 8 %self) unnamed_addr #0 !dbg !13708 {
start:
  %inner.dbg.spill = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %self.dbg.spill1 = alloca %"std::ffi::os_str::OsString"*, align 8
  %_index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca %"std::ffi::os_str::OsString"*, align 8
  store %"std::ffi::os_str::OsString"* %self, %"std::ffi::os_str::OsString"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %self.dbg.spill, metadata !13714, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %_index.dbg.spill, metadata !13716, metadata !DIExpression()), !dbg !13723
  store %"std::ffi::os_str::OsString"* %self, %"std::ffi::os_str::OsString"** %self.dbg.spill1, align 8, !dbg !13724
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %self.dbg.spill1, metadata !13722, metadata !DIExpression()), !dbg !13723
  %_7 = bitcast %"std::ffi::os_str::OsString"* %self to %"std::sys::unix::os_str::Buf"*, !dbg !13723
; call std::sys::unix::os_str::Buf::as_slice
  %0 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str3Buf8as_slice17h577f94a0cba317dcE(%"std::sys::unix::os_str::Buf"* align 8 %_7), !dbg !13723
  %_6.0 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 0, !dbg !13723
  %_6.1 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 1, !dbg !13723
  br label %bb1, !dbg !13723

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 0, !dbg !13723
  store %"std::sys::unix::os_str::Slice"* %_6.0, %"std::sys::unix::os_str::Slice"** %1, align 8, !dbg !13723
  %2 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 1, !dbg !13723
  store i64 %_6.1, i64* %2, align 8, !dbg !13723
  call void @llvm.dbg.declare(metadata { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, metadata !13725, metadata !DIExpression()), !dbg !13728
  %_8.0 = bitcast %"std::sys::unix::os_str::Slice"* %_6.0 to %"std::ffi::os_str::OsStr"*, !dbg !13728
  %3 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %_8.0, 0, !dbg !13730
  %4 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %3, i64 %_6.1, 1, !dbg !13730
  ret { %"std::ffi::os_str::OsStr"*, i64 } %4, !dbg !13730
}

; <[T] as core::convert::AsRef<[T]>>::as_ref
; Function Attrs: nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h85593544e4cde7c2E"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !13731 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !13734, metadata !DIExpression()), !dbg !13735
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0, !dbg !13736
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !13736
  ret { [0 x i8]*, i64 } %3, !dbg !13736
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2b77cc1908e440a5E"(%"alloc::vec::Vec<u8>"* align 8 %self) unnamed_addr #0 !dbg !13737 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %len.dbg.spill2 = alloca i64, align 8
  %data.dbg.spill1 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<u8>"*, align 8
  %_14 = alloca { i8*, i64 }, align 8
  %_13 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store %"alloc::vec::Vec<u8>"* %self, %"alloc::vec::Vec<u8>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<u8>"** %self.dbg.spill, metadata !13739, metadata !DIExpression()), !dbg !13740
; call alloc::vec::Vec<T,A>::as_ptr
  %data = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hcda8ebe428aaf363E"(%"alloc::vec::Vec<u8>"* align 8 %self), !dbg !13741
  store i8* %data, i8** %data.dbg.spill, align 8, !dbg !13741
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !13742, metadata !DIExpression()), !dbg !13750
  br label %bb1, !dbg !13741

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>"* %self, i32 0, i32 1, !dbg !13752
  %len = load i64, i64* %0, align 8, !dbg !13752
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !13752
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !13746, metadata !DIExpression()), !dbg !13750
  store i8* %data, i8** %data.dbg.spill1, align 8, !dbg !13750
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill1, metadata !13753, metadata !DIExpression()), !dbg !13758
  store i64 %len, i64* %len.dbg.spill2, align 8, !dbg !13750
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill2, metadata !13757, metadata !DIExpression()), !dbg !13758
  store i8* %data, i8** %self.dbg.spill3, align 8, !dbg !13758
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !13760, metadata !DIExpression()), !dbg !13764
  %data_address = bitcast i8* %data to {}*, !dbg !13764
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !13764
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !13766, metadata !DIExpression()), !dbg !13771
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !13758
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !13770, metadata !DIExpression()), !dbg !13771
  %1 = bitcast { i8*, i64 }* %_14 to {}**, !dbg !13771
  store {}* %data_address, {}** %1, align 8, !dbg !13771
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_14, i32 0, i32 1, !dbg !13771
  store i64 %len, i64* %2, align 8, !dbg !13771
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_13 to { i8*, i64 }*, !dbg !13771
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_14, i32 0, i32 0, !dbg !13771
  %5 = load i8*, i8** %4, align 8, !dbg !13771
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_14, i32 0, i32 1, !dbg !13771
  %7 = load i64, i64* %6, align 8, !dbg !13771
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !13771
  store i8* %5, i8** %8, align 8, !dbg !13771
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !13771
  store i64 %7, i64* %9, align 8, !dbg !13771
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_13 to { [0 x i8]*, i64 }*, !dbg !13771
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 0, !dbg !13771
  %_6.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !13771
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %10, i32 0, i32 1, !dbg !13771
  %_6.1 = load i64, i64* %12, align 8, !dbg !13771
  %13 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_6.0, 0, !dbg !13773
  %14 = insertvalue { [0 x i8]*, i64 } %13, i64 %_6.1, 1, !dbg !13773
  ret { [0 x i8]*, i64 } %14, !dbg !13773
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17he95f9a11ce31a4b6E"([0 x i8]* align 1 %self.0, i64 %self.1, [0 x i8]* align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !13774 {
start:
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %size.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca i8, align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !13777, metadata !DIExpression()), !dbg !13781
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !13778, metadata !DIExpression()), !dbg !13782
  %_3 = icmp ne i64 %self.1, %other.1, !dbg !13783
  br i1 %_3, label %bb1, label %bb2, !dbg !13783

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !13784
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !13784
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !13784
  store i64 %self.1, i64* %7, align 8, !dbg !13784
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !13785, metadata !DIExpression()), !dbg !13789
  %8 = mul nsw i64 %self.1, 1, !dbg !13789
  store i64 %8, i64* %0, align 8, !dbg !13789
  %size = load i64, i64* %0, align 8, !dbg !13789
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !13789
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !13779, metadata !DIExpression()), !dbg !13791
  br label %bb5, !dbg !13789

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1, !dbg !13792
  br label %bb4, !dbg !13793

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8, i8* %1, align 1, !dbg !13793, !range !512, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !13793
  ret i1 %10, !dbg !13793

bb5:                                              ; preds = %bb2
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !13794
  store [0 x i8]* %self.0, [0 x i8]** %11, align 8, !dbg !13794
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !13794
  store i64 %self.1, i64* %12, align 8, !dbg !13794
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !13795, metadata !DIExpression()), !dbg !13799
  %_12 = bitcast [0 x i8]* %self.0 to i8*, !dbg !13799
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !13800
  store [0 x i8]* %other.0, [0 x i8]** %13, align 8, !dbg !13800
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !13800
  store i64 %other.1, i64* %14, align 8, !dbg !13800
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !13801, metadata !DIExpression()), !dbg !13805
  %_15 = bitcast [0 x i8]* %other.0 to i8*, !dbg !13805
  %_10 = call i32 @memcmp(i8* %_12, i8* %_15, i64 %size), !dbg !13806
  br label %bb3, !dbg !13806

bb3:                                              ; preds = %bb5
  %15 = icmp eq i32 %_10, 0, !dbg !13806
  %16 = zext i1 %15 to i8, !dbg !13806
  store i8 %16, i8* %1, align 1, !dbg !13806
  br label %bb4, !dbg !13793
}

; <[char; N] as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN73_$LT$$u5b$char$u3b$$u20$N$u5d$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h8b847401d3708913E"(%"core::str::pattern::CharArraySearcher<2>"* sret(%"core::str::pattern::CharArraySearcher<2>") %0, i64 %1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 !dbg !13807 {
start:
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_5 = alloca [2 x i32], align 4
  %_4 = alloca %"core::str::pattern::MultiCharEqPattern<[char; 2]>", align 4
  %_3 = alloca %"core::str::pattern::MultiCharEqSearcher<[char; 2]>", align 8
  %2 = alloca i64, align 8
  %self = alloca [2 x i32], align 4
  store i64 %1, i64* %2, align 8
  %3 = bitcast [2 x i32]* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  call void @llvm.dbg.declare(metadata [2 x i32]* %self, metadata !13812, metadata !DIExpression()), !dbg !13814
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !13813, metadata !DIExpression()), !dbg !13815
  %7 = bitcast [2 x i32]* %_5 to i8*, !dbg !13816
  %8 = bitcast [2 x i32]* %self to i8*, !dbg !13816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 8, i1 false), !dbg !13816
  %9 = bitcast %"core::str::pattern::MultiCharEqPattern<[char; 2]>"* %_4 to [2 x i32]*, !dbg !13817
  %10 = bitcast [2 x i32]* %9 to i8*, !dbg !13817
  %11 = bitcast [2 x i32]* %_5 to i8*, !dbg !13817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 8, i1 false), !dbg !13817
  %12 = bitcast %"core::str::pattern::MultiCharEqPattern<[char; 2]>"* %_4 to i64*, !dbg !13817
  %13 = load i64, i64* %12, align 4, !dbg !13817
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h08ddf439b62a3decE"(%"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* sret(%"core::str::pattern::MultiCharEqSearcher<[char; 2]>") %_3, i64 %13, [0 x i8]* align 1 %haystack.0, i64 %haystack.1), !dbg !13817
  br label %bb1, !dbg !13817

bb1:                                              ; preds = %start
  %14 = bitcast %"core::str::pattern::CharArraySearcher<2>"* %0 to %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"*, !dbg !13818
  %15 = bitcast %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %14 to i8*, !dbg !13818
  %16 = bitcast %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %_3 to i8*, !dbg !13818
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 48, i1 false), !dbg !13818
  ret void, !dbg !13819
}

; <core::option::Option<T> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17ha57357068f46e474E"(i64 %output) unnamed_addr #0 !dbg !13820 {
start:
  %output.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %output, i64* %output.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %output.dbg.spill, metadata !13824, metadata !DIExpression()), !dbg !13825
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13826
  store i64 %output, i64* %1, align 8, !dbg !13826
  %2 = bitcast { i64, i64 }* %0 to i64*, !dbg !13826
  store i64 1, i64* %2, align 8, !dbg !13826
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !13827
  %4 = load i64, i64* %3, align 8, !dbg !13827, !range !3441, !noundef !23
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !13827
  %6 = load i64, i64* %5, align 8, !dbg !13827
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !13827
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !13827
  ret { i64, i64 } %8, !dbg !13827
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8616beab22fb2dd3E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !13828 {
start:
  %v.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !13846, metadata !DIExpression()), !dbg !13849
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !13850
  %_2 = load i64, i64* %5, align 8, !dbg !13850, !range !3441, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !13851

bb2:                                              ; preds = %start
  unreachable, !dbg !13850

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*, !dbg !13852
  store i64 1, i64* %6, align 8, !dbg !13852
  br label %bb4, !dbg !13853

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !13854
  %v = load i64, i64* %7, align 8, !dbg !13854
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !13854
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !13847, metadata !DIExpression()), !dbg !13855
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !13856
  store i64 %v, i64* %8, align 8, !dbg !13856
  %9 = bitcast { i64, i64 }* %2 to i64*, !dbg !13856
  store i64 0, i64* %9, align 8, !dbg !13856
  br label %bb4, !dbg !13857

bb4:                                              ; preds = %bb1, %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !13858
  %11 = load i64, i64* %10, align 8, !dbg !13858, !range !3441, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !13858
  %13 = load i64, i64* %12, align 8, !dbg !13858
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !13858
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !13858
  ret { i64, i64 } %15, !dbg !13858
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd35e8556e45aa856E"(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>"* sret(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>") %0, %"core::option::Option<std::process::Output>"* %self) unnamed_addr #0 !dbg !13859 {
start:
  %_4 = alloca %"std::process::Output", align 8
  %v = alloca %"std::process::Output", align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<std::process::Output>"* %self, metadata !13878, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %v, metadata !13879, metadata !DIExpression()), !dbg !13882
  %1 = bitcast %"core::option::Option<std::process::Output>"* %self to {}**, !dbg !13883
  %2 = load {}*, {}** %1, align 8, !dbg !13883
  %3 = icmp eq {}* %2, null, !dbg !13883
  %_2 = select i1 %3, i64 0, i64 1, !dbg !13883
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !13884

bb2:                                              ; preds = %start
  unreachable, !dbg !13883

bb1:                                              ; preds = %start
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>"* %0 to {}**, !dbg !13885
  store {}* null, {}** %4, align 8, !dbg !13885
  br label %bb4, !dbg !13886

bb3:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<std::process::Output>"* %self to %"core::option::Option<std::process::Output>::Some"*, !dbg !13887
  %6 = bitcast %"core::option::Option<std::process::Output>::Some"* %5 to %"std::process::Output"*, !dbg !13887
  %7 = bitcast %"std::process::Output"* %v to i8*, !dbg !13887
  %8 = bitcast %"std::process::Output"* %6 to i8*, !dbg !13887
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 56, i1 false), !dbg !13887
  %9 = bitcast %"std::process::Output"* %_4 to i8*, !dbg !13888
  %10 = bitcast %"std::process::Output"* %v to i8*, !dbg !13888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 56, i1 false), !dbg !13888
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>"* %0 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>::Continue"*, !dbg !13889
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>::Continue"* %11 to %"std::process::Output"*, !dbg !13889
  %13 = bitcast %"std::process::Output"* %12 to i8*, !dbg !13889
  %14 = bitcast %"std::process::Output"* %_4 to i8*, !dbg !13889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 56, i1 false), !dbg !13889
  br label %bb4, !dbg !13890

bb4:                                              ; preds = %bb1, %bb3
  ret void, !dbg !13891
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf5332cef795be0afE"(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>"* sret(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>") %0, %"core::option::Option<alloc::string::String>"* %self) unnamed_addr #0 !dbg !13892 {
start:
  %_4 = alloca %"alloc::string::String", align 8
  %v = alloca %"alloc::string::String", align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<alloc::string::String>"* %self, metadata !13911, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %v, metadata !13912, metadata !DIExpression()), !dbg !13915
  %1 = bitcast %"core::option::Option<alloc::string::String>"* %self to {}**, !dbg !13916
  %2 = load {}*, {}** %1, align 8, !dbg !13916
  %3 = icmp eq {}* %2, null, !dbg !13916
  %_2 = select i1 %3, i64 0, i64 1, !dbg !13916
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !13917

bb2:                                              ; preds = %start
  unreachable, !dbg !13916

bb1:                                              ; preds = %start
  %4 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>"* %0 to {}**, !dbg !13918
  store {}* null, {}** %4, align 8, !dbg !13918
  br label %bb4, !dbg !13919

bb3:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<alloc::string::String>"* %self to %"core::option::Option<alloc::string::String>::Some"*, !dbg !13920
  %6 = bitcast %"core::option::Option<alloc::string::String>::Some"* %5 to %"alloc::string::String"*, !dbg !13920
  %7 = bitcast %"alloc::string::String"* %v to i8*, !dbg !13920
  %8 = bitcast %"alloc::string::String"* %6 to i8*, !dbg !13920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !13920
  %9 = bitcast %"alloc::string::String"* %_4 to i8*, !dbg !13921
  %10 = bitcast %"alloc::string::String"* %v to i8*, !dbg !13921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !13921
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>"* %0 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>::Continue"*, !dbg !13922
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>::Continue"* %11 to %"alloc::string::String"*, !dbg !13922
  %13 = bitcast %"alloc::string::String"* %12 to i8*, !dbg !13922
  %14 = bitcast %"alloc::string::String"* %_4 to i8*, !dbg !13922
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !13922
  br label %bb4, !dbg !13923

bb4:                                              ; preds = %bb1, %bb3
  ret void, !dbg !13924
}

; <[char; N] as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN77_$LT$$u5b$char$u3b$$u20$N$u5d$$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h5dbf005c64097323E"([2 x i32]* align 4 %self, i32 %0) unnamed_addr #0 !dbg !13925 {
start:
  %self.dbg.spill1 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill = alloca [2 x i32]*, align 8
  %_7 = alloca i32*, align 8
  %_4 = alloca { i32*, i32* }, align 8
  %c = alloca i32, align 4
  store i32 %0, i32* %c, align 4
  store [2 x i32]* %self, [2 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i32]** %self.dbg.spill, metadata !13931, metadata !DIExpression()), !dbg !13933
  call void @llvm.dbg.declare(metadata i32* %c, metadata !13932, metadata !DIExpression()), !dbg !13934
  %self.0 = bitcast [2 x i32]* %self to [0 x i32]*, !dbg !13935
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !13935
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !13935
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !13935
  store i64 2, i64* %2, align 8, !dbg !13935
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill1, metadata !13936, metadata !DIExpression()), !dbg !13940
; call core::slice::iter::Iter<T>::new
  %3 = call { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h95375ea80096db02E"([0 x i32]* align 4 %self.0, i64 2), !dbg !13940
  store { i32*, i32* } %3, { i32*, i32* }* %_4, align 8, !dbg !13940
  br label %bb2, !dbg !13940

bb2:                                              ; preds = %start
  store i32* %c, i32** %_7, align 8, !dbg !13941
  %4 = load i32*, i32** %_7, align 8, !dbg !13935, !nonnull !23, !align !13942, !noundef !23
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %5 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h3b6fe6445cd4211cE"({ i32*, i32* }* align 8 %_4, i32* align 4 %4), !dbg !13935
  br label %bb1, !dbg !13935

bb1:                                              ; preds = %bb2
  ret i1 %5, !dbg !13943
}

; <[char; N] as core::str::pattern::MultiCharEq>::matches::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN77_$LT$$u5b$char$u3b$$u20$N$u5d$$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches28_$u7b$$u7b$closure$u7d$$u7d$17h83d846dc05fc2a5dE"(i32** align 8 %_1, i32* align 4 %_2) unnamed_addr #0 !dbg !13944 {
start:
  %m.dbg.spill = alloca i32, align 4
  %_2.dbg.spill = alloca i32*, align 8
  %_1.dbg.spill = alloca i32**, align 8
  store i32** %_1, i32*** %_1.dbg.spill, align 8
  %0 = load i32**, i32*** %_1.dbg.spill, align 8, !nonnull !23, !align !584, !noundef !23
  %1 = load i32*, i32** %0, align 8, !nonnull !23, !align !13942, !noundef !23
  call void @llvm.dbg.declare(metadata i32*** %_1.dbg.spill, metadata !13953, metadata !DIExpression(DW_OP_deref, DW_OP_deref)), !dbg !13957
  store i32* %_2, i32** %_2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %_2.dbg.spill, metadata !13956, metadata !DIExpression()), !dbg !13958
  %m = load i32, i32* %_2, align 4, !dbg !13959, !range !667, !noundef !23
  store i32 %m, i32* %m.dbg.spill, align 4, !dbg !13959
  call void @llvm.dbg.declare(metadata i32* %m.dbg.spill, metadata !13954, metadata !DIExpression()), !dbg !13960
  %_6 = load i32*, i32** %_1, align 8, !dbg !13961, !nonnull !23, !align !13942, !noundef !23
  %_5 = load i32, i32* %_6, align 4, !dbg !13961, !range !667, !noundef !23
  %2 = icmp eq i32 %m, %_5, !dbg !13962
  ret i1 %2, !dbg !13963
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h42b6e46e2ad84c19E"({ i8*, i64 }* align 8 %self) unnamed_addr #1 !dbg !13964 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !13969, metadata !DIExpression()), !dbg !13973
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5bcf1a131c06d2c2E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i8*, i64 }* align 8 %self), !dbg !13974
  br label %bb1, !dbg !13974

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !13975
  %1 = load i64, i64* %0, align 8, !dbg !13975, !range !1795, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !13975
  %_4 = select i1 %2, i64 0, i64 1, !dbg !13975
  %3 = icmp eq i64 %_4, 1, !dbg !13975
  br i1 %3, label %bb2, label %bb4, !dbg !13975

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !13976
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !13976
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !13976
  %ptr = load i8*, i8** %6, align 8, !dbg !13976, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !13976
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13970, metadata !DIExpression()), !dbg !13976
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !13977
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !13977
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !13977
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !13977
  %layout.0 = load i64, i64* %10, align 8, !dbg !13977
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !13977
  %layout.1 = load i64, i64* %11, align 8, !dbg !13977, !range !5559, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !13977
  store i64 %layout.0, i64* %12, align 8, !dbg !13977
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !13977
  store i64 %layout.1, i64* %13, align 8, !dbg !13977
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !13972, metadata !DIExpression()), !dbg !13977
  %_7 = bitcast { i8*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !13978
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !13978
  br label %bb3, !dbg !13978

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !13979

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !13980
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h65dcb9afe758c0d8E"({ i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !13981 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !13986, metadata !DIExpression()), !dbg !13990
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66b2c208eef723b2E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self), !dbg !13991
  br label %bb1, !dbg !13991

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !13992
  %1 = load i64, i64* %0, align 8, !dbg !13992, !range !1795, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !13992
  %_4 = select i1 %2, i64 0, i64 1, !dbg !13992
  %3 = icmp eq i64 %_4, 1, !dbg !13992
  br i1 %3, label %bb2, label %bb4, !dbg !13992

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !13993
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !13993
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !13993
  %ptr = load i8*, i8** %6, align 8, !dbg !13993, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !13993
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !13987, metadata !DIExpression()), !dbg !13993
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !13994
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !13994
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !13994
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !13994
  %layout.0 = load i64, i64* %10, align 8, !dbg !13994
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !13994
  %layout.1 = load i64, i64* %11, align 8, !dbg !13994, !range !5559, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !13994
  store i64 %layout.0, i64* %12, align 8, !dbg !13994
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !13994
  store i64 %layout.1, i64* %13, align 8, !dbg !13994
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !13989, metadata !DIExpression()), !dbg !13994
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !13995
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !13995
  br label %bb3, !dbg !13995

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !13996

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !13997
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h97298da8e3a6412dE"({ i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !13998 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !14003, metadata !DIExpression()), !dbg !14007
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h0ded22c4c0f9d25fE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self), !dbg !14008
  br label %bb1, !dbg !14008

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !14009
  %1 = load i64, i64* %0, align 8, !dbg !14009, !range !1795, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !14009
  %_4 = select i1 %2, i64 0, i64 1, !dbg !14009
  %3 = icmp eq i64 %_4, 1, !dbg !14009
  br i1 %3, label %bb2, label %bb4, !dbg !14009

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14010
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !14010
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !14010
  %ptr = load i8*, i8** %6, align 8, !dbg !14010, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !14010
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !14004, metadata !DIExpression()), !dbg !14010
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14011
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !14011
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !14011
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !14011
  %layout.0 = load i64, i64* %10, align 8, !dbg !14011
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !14011
  %layout.1 = load i64, i64* %11, align 8, !dbg !14011, !range !5559, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !14011
  store i64 %layout.0, i64* %12, align 8, !dbg !14011
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !14011
  store i64 %layout.1, i64* %13, align 8, !dbg !14011
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !14006, metadata !DIExpression()), !dbg !14011
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !14012
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !14012
  br label %bb3, !dbg !14012

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !14013

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !14014
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hacdcb6083e4f06ffE"({ i64*, i64 }* align 8 %self) unnamed_addr #1 !dbg !14015 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !14020, metadata !DIExpression()), !dbg !14024
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hcf5ccc989e11caaeE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i64*, i64 }* align 8 %self), !dbg !14025
  br label %bb1, !dbg !14025

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !14026
  %1 = load i64, i64* %0, align 8, !dbg !14026, !range !1795, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !14026
  %_4 = select i1 %2, i64 0, i64 1, !dbg !14026
  %3 = icmp eq i64 %_4, 1, !dbg !14026
  br i1 %3, label %bb2, label %bb4, !dbg !14026

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14027
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !14027
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !14027
  %ptr = load i8*, i8** %6, align 8, !dbg !14027, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !14027
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !14021, metadata !DIExpression()), !dbg !14027
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !14028
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !14028
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !14028
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !14028
  %layout.0 = load i64, i64* %10, align 8, !dbg !14028
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !14028
  %layout.1 = load i64, i64* %11, align 8, !dbg !14028, !range !5559, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !14028
  store i64 %layout.0, i64* %12, align 8, !dbg !14028
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !14028
  store i64 %layout.1, i64* %13, align 8, !dbg !14028
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !14023, metadata !DIExpression()), !dbg !14028
  %_7 = bitcast { i64*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !14029
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !14029
  br label %bb3, !dbg !14029

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !14030

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !14031
}

; <alloc::string::String as core::cmp::PartialEq<&str>>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2eq17hfc18d38ccd5a719eE"(%"alloc::string::String"* align 8 %self, { [0 x i8]*, i64 }* align 8 %other) unnamed_addr #0 !dbg !14032 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !14037, metadata !DIExpression()), !dbg !14039
  store { [0 x i8]*, i64 }* %other, { [0 x i8]*, i64 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !14038, metadata !DIExpression()), !dbg !14040
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !14041, metadata !DIExpression()), !dbg !14050
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill1, metadata !14052, metadata !DIExpression()), !dbg !14060
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %0 = call { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h7d8c747932610c4dE"(%"alloc::string::String"* align 8 %self, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc563 to %"core::panic::location::Location"*)), !dbg !14062
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !14062
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !14062
  br label %bb1, !dbg !14062

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0, !dbg !14051
  %_13.0 = load [0 x i8]*, [0 x i8]** %1, align 8, !dbg !14051, !nonnull !23, !align !445, !noundef !23
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1, !dbg !14051
  %_13.1 = load i64, i64* %2, align 8, !dbg !14051
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !14051
  store [0 x i8]* %_13.0, [0 x i8]** %3, align 8, !dbg !14051
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !14051
  store i64 %_13.1, i64* %4, align 8, !dbg !14051
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !14048, metadata !DIExpression()), !dbg !14050
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !14050
  store [0 x i8]* %_13.0, [0 x i8]** %5, align 8, !dbg !14050
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !14050
  store i64 %_13.1, i64* %6, align 8, !dbg !14050
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !14059, metadata !DIExpression()), !dbg !14060
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %7 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h09592fa3aa826ce9E"([0 x i8]* align 1 %_5.0, i64 %_5.1, [0 x i8]* align 1 %_13.0, i64 %_13.1), !dbg !14063
  br label %bb2, !dbg !14063

bb2:                                              ; preds = %bb1
  ret i1 %7, !dbg !14064
}

; <alloc::string::String as core::cmp::PartialEq<&str>>::ne
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2ne17hf4f082ba020c7022E"(%"alloc::string::String"* align 8 %self, { [0 x i8]*, i64 }* align 8 %other) unnamed_addr #0 !dbg !14065 {
start:
  %other.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca %"alloc::string::String"*, align 8
  store %"alloc::string::String"* %self, %"alloc::string::String"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %self.dbg.spill, metadata !14067, metadata !DIExpression()), !dbg !14069
  store { [0 x i8]*, i64 }* %other, { [0 x i8]*, i64 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !14068, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !14071, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill1, metadata !14078, metadata !DIExpression()), !dbg !14083
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFull>>::index
  %0 = call { [0 x i8]*, i64 } @"_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h7d8c747932610c4dE"(%"alloc::string::String"* align 8 %self, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc563 to %"core::panic::location::Location"*)), !dbg !14085
  %_5.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !14085
  %_5.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !14085
  br label %bb1, !dbg !14085

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !14086
  store [0 x i8]* %_5.0, [0 x i8]** %1, align 8, !dbg !14086
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !14086
  store i64 %_5.1, i64* %2, align 8, !dbg !14086
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !14087, metadata !DIExpression()), !dbg !14092
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0, !dbg !14077
  %_13.0 = load [0 x i8]*, [0 x i8]** %3, align 8, !dbg !14077, !nonnull !23, !align !445, !noundef !23
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1, !dbg !14077
  %_13.1 = load i64, i64* %4, align 8, !dbg !14077
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !14077
  store [0 x i8]* %_13.0, [0 x i8]** %5, align 8, !dbg !14077
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !14077
  store i64 %_13.1, i64* %6, align 8, !dbg !14077
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !14075, metadata !DIExpression()), !dbg !14076
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !14076
  store [0 x i8]* %_13.0, [0 x i8]** %7, align 8, !dbg !14076
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !14076
  store i64 %_13.1, i64* %8, align 8, !dbg !14076
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !14082, metadata !DIExpression()), !dbg !14083
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill4, i32 0, i32 0, !dbg !14094
  store [0 x i8]* %_13.0, [0 x i8]** %9, align 8, !dbg !14094
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill4, i32 0, i32 1, !dbg !14094
  store i64 %_13.1, i64* %10, align 8, !dbg !14094
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill4, metadata !14091, metadata !DIExpression()), !dbg !14092
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_16 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h09592fa3aa826ce9E"([0 x i8]* align 1 %_5.0, i64 %_5.1, [0 x i8]* align 1 %_13.0, i64 %_13.1), !dbg !14092
  br label %bb2, !dbg !14092

bb2:                                              ; preds = %bb1
  %11 = xor i1 %_16, true, !dbg !14092
  ret i1 %11, !dbg !14095
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h65a8325589ab0e8aE"(i8** align 8 %self) unnamed_addr #0 !dbg !14096 {
start:
  %self.dbg.spill = alloca i8**, align 8
  %_2 = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>", align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !14101, metadata !DIExpression()), !dbg !14102
  %_3 = load i8*, i8** %self, align 8, !dbg !14103, !nonnull !23, !noundef !23
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17hcd0e3b9b5356dd58E(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") %_2, i8* %_3), !dbg !14104
  br label %bb1, !dbg !14104

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17hd88a457266cabe3aE"(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>"* %_2), !dbg !14105
  br label %bb2, !dbg !14105

bb2:                                              ; preds = %bb1
  ret void, !dbg !14106
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 %"std::io::error::Custom"* @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h216229d3035f3cdbE"(%"std::io::error::Custom"* %p) unnamed_addr #0 !dbg !14107 {
start:
  %ptr.dbg.spill2 = alloca %"std::io::error::Custom"*, align 8
  %ptr.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %raw.dbg.spill1 = alloca %"std::io::error::Custom"*, align 8
  %raw.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %p.dbg.spill = alloca %"std::io::error::Custom"*, align 8
  %_1.dbg.spill = alloca %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]", align 1
  %_8 = alloca i64*, align 8
  %_6 = alloca i64*, align 8
  %0 = alloca %"std::io::error::Custom"*, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{closure#0}]"* %_1.dbg.spill, metadata !14112, metadata !DIExpression()), !dbg !14113
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %p.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %p.dbg.spill, metadata !14111, metadata !DIExpression()), !dbg !14114
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !14115, metadata !DIExpression()), !dbg !14125
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %raw.dbg.spill, align 8, !dbg !14135
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %raw.dbg.spill, metadata !14132, metadata !DIExpression()), !dbg !14136
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %raw.dbg.spill1, align 8, !dbg !14136
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %raw.dbg.spill1, metadata !14124, metadata !DIExpression()), !dbg !14125
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %ptr.dbg.spill, align 8, !dbg !14125
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %ptr.dbg.spill, metadata !14137, metadata !DIExpression()), !dbg !14143
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %ptr.dbg.spill2, align 8, !dbg !14143
  call void @llvm.dbg.declare(metadata %"std::io::error::Custom"** %ptr.dbg.spill2, metadata !14145, metadata !DIExpression()), !dbg !14151
  %1 = bitcast i64** %_8 to %"std::io::error::Custom"**, !dbg !14151
  store %"std::io::error::Custom"* %p, %"std::io::error::Custom"** %1, align 8, !dbg !14151
  %2 = load i64*, i64** %_8, align 8, !dbg !14143, !nonnull !23, !noundef !23
  store i64* %2, i64** %_6, align 8, !dbg !14143
  %3 = bitcast %"std::io::error::Custom"** %0 to i64**, !dbg !14125
  %4 = load i64*, i64** %_6, align 8, !dbg !14125, !nonnull !23, !noundef !23
  store i64* %4, i64** %3, align 8, !dbg !14125
  %5 = load %"std::io::error::Custom"*, %"std::io::error::Custom"** %0, align 8, !dbg !14153, !nonnull !23, !align !584, !noundef !23
  ret %"std::io::error::Custom"* %5, !dbg !14153
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb030faf09e4c671cE"(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>") %0, %"core::result::Result<&str, usize>"* %self) unnamed_addr #0 !dbg !14154 {
start:
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e.dbg.spill = alloca i64, align 8
  %_6 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata %"core::result::Result<&str, usize>"* %self, metadata !14174, metadata !DIExpression()), !dbg !14179
  %1 = bitcast %"core::result::Result<&str, usize>"* %self to i64*, !dbg !14180
  %_2 = load i64, i64* %1, align 8, !dbg !14180, !range !3441, !noundef !23
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !14181

bb2:                                              ; preds = %start
  unreachable, !dbg !14180

bb3:                                              ; preds = %start
  %2 = bitcast %"core::result::Result<&str, usize>"* %self to %"core::result::Result<&str, usize>::Ok"*, !dbg !14182
  %3 = getelementptr inbounds %"core::result::Result<&str, usize>::Ok", %"core::result::Result<&str, usize>::Ok"* %2, i32 0, i32 1, !dbg !14182
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !14182
  %v.0 = load [0 x i8]*, [0 x i8]** %4, align 8, !dbg !14182, !nonnull !23, !align !445, !noundef !23
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !14182
  %v.1 = load i64, i64* %5, align 8, !dbg !14182
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !14182
  store [0 x i8]* %v.0, [0 x i8]** %6, align 8, !dbg !14182
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !14182
  store i64 %v.1, i64* %7, align 8, !dbg !14182
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !14175, metadata !DIExpression()), !dbg !14183
  %8 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue"*, !dbg !14184
  %9 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Continue"* %8, i32 0, i32 1, !dbg !14184
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !14184
  store [0 x i8]* %v.0, [0 x i8]** %10, align 8, !dbg !14184
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !14184
  store i64 %v.1, i64* %11, align 8, !dbg !14184
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %0 to i64*, !dbg !14184
  store i64 0, i64* %12, align 8, !dbg !14184
  br label %bb4, !dbg !14185

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<&str, usize>"* %self to %"core::result::Result<&str, usize>::Err"*, !dbg !14186
  %14 = getelementptr inbounds %"core::result::Result<&str, usize>::Err", %"core::result::Result<&str, usize>::Err"* %13, i32 0, i32 1, !dbg !14186
  %e = load i64, i64* %14, align 8, !dbg !14186
  store i64 %e, i64* %e.dbg.spill, align 8, !dbg !14186
  call void @llvm.dbg.declare(metadata i64* %e.dbg.spill, metadata !14177, metadata !DIExpression()), !dbg !14187
  store i64 %e, i64* %_6, align 8, !dbg !14188
  %15 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %0 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break"*, !dbg !14189
  %16 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>::Break"* %15, i32 0, i32 1, !dbg !14189
  %17 = load i64, i64* %_6, align 8, !dbg !14189
  store i64 %17, i64* %16, align 8, !dbg !14189
  %18 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>"* %0 to i64*, !dbg !14189
  store i64 1, i64* %18, align 8, !dbg !14189
  br label %bb4, !dbg !14190

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !14191
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hda4272c37b6cef10E"(i32 %ch) unnamed_addr #0 !dbg !14192 {
start:
  %0 = alloca i32, align 4
  %i.dbg.spill1 = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{closure#0}]"* %_1.dbg.spill, metadata !14197, metadata !DIExpression()), !dbg !14198
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !14196, metadata !DIExpression()), !dbg !14199
  store i32 %ch, i32* %i.dbg.spill, align 4, !dbg !14200
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !14201, metadata !DIExpression()), !dbg !14208
  store i32 %ch, i32* %i.dbg.spill1, align 4, !dbg !14208
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill1, metadata !14210, metadata !DIExpression()), !dbg !14216
  store i32 %ch, i32* %0, align 4, !dbg !14216
  %1 = load i32, i32* %0, align 4, !dbg !14216, !range !667, !noundef !23
  br label %bb1, !dbg !14216

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !14218
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hbac8f4cc31f9a4ccE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharSearcher"* align 8 %self) unnamed_addr #0 !dbg !14219 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %index.dbg.spill23 = alloca { i64, i64 }, align 8
  %self.dbg.spill22 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill21 = alloca [4 x i8]*, align 8
  %self.dbg.spill19 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill18 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill17 = alloca { [0 x i8]*, i64 }, align 8
  %found_char.dbg.spill = alloca i64, align 8
  %index.dbg.spill16 = alloca i64, align 8
  %last_byte.dbg.spill = alloca i8, align 1
  %2 = alloca i8*, align 8
  %count.dbg.spill14 = alloca i64, align 8
  %self.dbg.spill13 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill12 = alloca i8*, align 8
  %self.dbg.spill10 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %bytes.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill6 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %residual.dbg.spill2 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca %"core::str::pattern::CharSearcher"*, align 8
  %_51 = alloca { i64, i64 }, align 8
  %index4 = alloca { i64, i64 }, align 8
  %_46 = alloca { [0 x i8]*, i64 }, align 8
  %slice = alloca { [0 x i8]*, i64 }, align 8
  %index3 = alloca { i64, i64 }, align 8
  %_34 = alloca { i8*, i64 }, align 8
  %_21 = alloca { i64, i64 }, align 8
  %index = alloca { i64, i64 }, align 8
  %self1 = alloca { i8*, i64 }, align 8
  %_3 = alloca { i8*, i64 }, align 8
  store %"core::str::pattern::CharSearcher"* %self, %"core::str::pattern::CharSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharSearcher"** %self.dbg.spill, metadata !14225, metadata !DIExpression()), !dbg !14240
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self1, metadata !14241, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index, metadata !14267, metadata !DIExpression()), !dbg !14275
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !14228, metadata !DIExpression()), !dbg !14276
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill2, metadata !14277, metadata !DIExpression()), !dbg !14283
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index3, metadata !14285, metadata !DIExpression()), !dbg !14290
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice, metadata !14238, metadata !DIExpression()), !dbg !14292
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index4, metadata !14293, metadata !DIExpression()), !dbg !14304
  br label %bb1, !dbg !14306

bb1:                                              ; preds = %bb13, %start
  %4 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !14266
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 0, !dbg !14266
  %_55.0 = load [0 x i8]*, [0 x i8]** %5, align 8, !dbg !14266, !nonnull !23, !align !445, !noundef !23
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %4, i32 0, i32 1, !dbg !14266
  %_55.1 = load i64, i64* %6, align 8, !dbg !14266
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 0, !dbg !14266
  store [0 x i8]* %_55.0, [0 x i8]** %7, align 8, !dbg !14266
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill5, i32 0, i32 1, !dbg !14266
  store i64 %_55.1, i64* %8, align 8, !dbg !14266
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill5, metadata !14307, metadata !DIExpression()), !dbg !14311
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !14311
  store [0 x i8]* %_55.0, [0 x i8]** %9, align 8, !dbg !14311
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !14311
  store i64 %_55.1, i64* %10, align 8, !dbg !14311
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !14311
  %_6.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !14311, !nonnull !23, !align !445, !noundef !23
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !14311
  %_6.1 = load i64, i64* %12, align 8, !dbg !14311
  br label %bb17, !dbg !14311

bb17:                                             ; preds = %bb1
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 0, !dbg !14266
  store [0 x i8]* %_6.0, [0 x i8]** %13, align 8, !dbg !14266
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill6, i32 0, i32 1, !dbg !14266
  store i64 %_6.1, i64* %14, align 8, !dbg !14266
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill6, metadata !14273, metadata !DIExpression()), !dbg !14275
  %15 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14312
  %_9 = load i64, i64* %15, align 8, !dbg !14312
  %16 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2, !dbg !14313
  %_10 = load i64, i64* %16, align 8, !dbg !14313
  %17 = bitcast { i64, i64 }* %index to i64*, !dbg !14312
  store i64 %_9, i64* %17, align 8, !dbg !14312
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !14312
  store i64 %_10, i64* %18, align 8, !dbg !14312
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 0, !dbg !14275
  %_58.0 = load i64, i64* %19, align 8, !dbg !14275
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index, i32 0, i32 1, !dbg !14275
  %_58.1 = load i64, i64* %20, align 8, !dbg !14275
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %21 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hf345357b5c64d268E"(i64 %_58.0, i64 %_58.1, [0 x i8]* align 1 %_6.0, i64 %_6.1), !dbg !14275
  store { i8*, i64 } %21, { i8*, i64 }* %self1, align 8, !dbg !14275
  br label %bb18, !dbg !14275

bb18:                                             ; preds = %bb17
  %22 = bitcast { i8*, i64 }* %self1 to {}**, !dbg !14265
  %23 = load {}*, {}** %22, align 8, !dbg !14265
  %24 = icmp eq {}* %23, null, !dbg !14265
  %_60 = select i1 %24, i64 0, i64 1, !dbg !14265
  switch i64 %_60, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !14265

bb20:                                             ; preds = %bb18
  unreachable, !dbg !14265

bb19:                                             ; preds = %bb18
  %25 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !14265
  store {}* null, {}** %25, align 8, !dbg !14265
  br label %bb2, !dbg !14265

bb21:                                             ; preds = %bb18
  %26 = bitcast { i8*, i64 }* %self1 to { [0 x i8]*, i64 }*, !dbg !14265
  %27 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 0, !dbg !14265
  %v.0 = load [0 x i8]*, [0 x i8]** %27, align 8, !dbg !14265, !nonnull !23, !align !445, !noundef !23
  %28 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %26, i32 0, i32 1, !dbg !14265
  %v.1 = load i64, i64* %28, align 8, !dbg !14265
  %29 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !14265
  store [0 x i8]* %v.0, [0 x i8]** %29, align 8, !dbg !14265
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !14265
  store i64 %v.1, i64* %30, align 8, !dbg !14265
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !14262, metadata !DIExpression()), !dbg !14314
  %31 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !14314
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 0, !dbg !14314
  store [0 x i8]* %v.0, [0 x i8]** %32, align 8, !dbg !14314
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %31, i32 0, i32 1, !dbg !14314
  store i64 %v.1, i64* %33, align 8, !dbg !14314
  br label %bb2, !dbg !14265

bb2:                                              ; preds = %bb19, %bb21
  %34 = bitcast { i8*, i64 }* %_3 to {}**, !dbg !14266
  %35 = load {}*, {}** %34, align 8, !dbg !14266
  %36 = icmp eq {}* %35, null, !dbg !14266
  %_11 = select i1 %36, i64 1, i64 0, !dbg !14266
  switch i64 %_11, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !14266

bb4:                                              ; preds = %bb2
  unreachable, !dbg !14266

bb3:                                              ; preds = %bb2
  %37 = bitcast { i8*, i64 }* %_3 to { [0 x i8]*, i64 }*, !dbg !14266
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 0, !dbg !14266
  %val.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !14266, !nonnull !23, !align !445, !noundef !23
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %37, i32 0, i32 1, !dbg !14266
  %val.1 = load i64, i64* %39, align 8, !dbg !14266
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !14266
  store [0 x i8]* %val.0, [0 x i8]** %40, align 8, !dbg !14266
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !14266
  store i64 %val.1, i64* %41, align 8, !dbg !14266
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !14230, metadata !DIExpression()), !dbg !14315
  %42 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 0, !dbg !14315
  store [0 x i8]* %val.0, [0 x i8]** %42, align 8, !dbg !14315
  %43 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %bytes.dbg.spill, i32 0, i32 1, !dbg !14315
  store i64 %val.1, i64* %43, align 8, !dbg !14315
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %bytes.dbg.spill, metadata !14226, metadata !DIExpression()), !dbg !14316
  %_18 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5, !dbg !14317
  %self.0 = bitcast [4 x i8]* %_18 to [0 x i8]*, !dbg !14317
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 0, !dbg !14317
  store [0 x i8]* %self.0, [0 x i8]** %44, align 8, !dbg !14317
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill7, i32 0, i32 1, !dbg !14317
  store i64 4, i64* %45, align 8, !dbg !14317
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill7, metadata !14318, metadata !DIExpression()), !dbg !14325
  %46 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !14326
  %_20 = load i64, i64* %46, align 8, !dbg !14326
  %index8 = sub i64 %_20, 1, !dbg !14326
  store i64 %index8, i64* %index.dbg.spill, align 8, !dbg !14326
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !14324, metadata !DIExpression()), !dbg !14325
  store i64 %index8, i64* %self.dbg.spill9, align 8, !dbg !14325
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !14327, metadata !DIExpression()), !dbg !14341
  %47 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !14325
  store [0 x i8]* %self.0, [0 x i8]** %47, align 8, !dbg !14325
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !14325
  store i64 4, i64* %48, align 8, !dbg !14325
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !14333, metadata !DIExpression()), !dbg !14341
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 0, !dbg !14341
  store [0 x i8]* %self.0, [0 x i8]** %49, align 8, !dbg !14341
  %50 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill10, i32 0, i32 1, !dbg !14341
  store i64 4, i64* %50, align 8, !dbg !14341
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill10, metadata !14343, metadata !DIExpression()), !dbg !14347
  %self11 = bitcast [0 x i8]* %self.0 to i8*, !dbg !14347
  store i8* %self11, i8** %self.dbg.spill12, align 8, !dbg !14347
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill12, metadata !14349, metadata !DIExpression()), !dbg !14354
  store i64 %index8, i64* %count.dbg.spill, align 8, !dbg !14341
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !14353, metadata !DIExpression()), !dbg !14354
  store i8* %self11, i8** %self.dbg.spill13, align 8, !dbg !14354
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill13, metadata !14355, metadata !DIExpression()), !dbg !14360
  store i64 %index8, i64* %count.dbg.spill14, align 8, !dbg !14354
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill14, metadata !14359, metadata !DIExpression()), !dbg !14360
  %51 = getelementptr inbounds i8, i8* %self11, i64 %index8, !dbg !14360
  store i8* %51, i8** %2, align 8, !dbg !14360
  %_63 = load i8*, i8** %2, align 8, !dbg !14360
  br label %bb22, !dbg !14360

bb5:                                              ; preds = %bb2
  %52 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !14283
  store i64 0, i64* %52, align 8, !dbg !14283
  br label %bb16, !dbg !14362

bb16:                                             ; preds = %bb15, %bb5
  ret void, !dbg !14364

bb22:                                             ; preds = %bb3
  %last_byte = load i8, i8* %_63, align 1, !dbg !14365
  store i8 %last_byte, i8* %last_byte.dbg.spill, align 1, !dbg !14365
  call void @llvm.dbg.declare(metadata i8* %last_byte.dbg.spill, metadata !14232, metadata !DIExpression()), !dbg !14366
; call core::slice::memchr::memchr
  %53 = call { i64, i64 } @_ZN4core5slice6memchr6memchr17h1a8f2df3e45c8f14E(i8 %last_byte, [0 x i8]* align 1 %val.0, i64 %val.1), !dbg !14367
  store { i64, i64 } %53, { i64, i64 }* %_21, align 8, !dbg !14367
  br label %bb6, !dbg !14367

bb6:                                              ; preds = %bb22
  %54 = bitcast { i64, i64 }* %_21 to i64*, !dbg !14368
  %_24 = load i64, i64* %54, align 8, !dbg !14368, !range !3441, !noundef !23
  %55 = icmp eq i64 %_24, 1, !dbg !14368
  br i1 %55, label %bb7, label %bb14, !dbg !14368

bb7:                                              ; preds = %bb6
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_21, i32 0, i32 1, !dbg !14369
  %index15 = load i64, i64* %56, align 8, !dbg !14369
  store i64 %index15, i64* %index.dbg.spill16, align 8, !dbg !14369
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill16, metadata !14234, metadata !DIExpression()), !dbg !14369
  %_26 = add i64 %index15, 1, !dbg !14370
  %57 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14371
  %58 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14371
  %59 = load i64, i64* %58, align 8, !dbg !14371
  %60 = add i64 %59, %_26, !dbg !14371
  store i64 %60, i64* %57, align 8, !dbg !14371
  %61 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14372
  %_29 = load i64, i64* %61, align 8, !dbg !14372
  %62 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !14373
  %_30 = load i64, i64* %62, align 8, !dbg !14373
  %_28 = icmp uge i64 %_29, %_30, !dbg !14372
  br i1 %_28, label %bb8, label %bb13, !dbg !14372

bb14:                                             ; preds = %bb6
  %63 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 2, !dbg !14374
  %_54 = load i64, i64* %63, align 8, !dbg !14374
  %64 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14375
  store i64 %_54, i64* %64, align 8, !dbg !14375
  %65 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !14376
  store i64 0, i64* %65, align 8, !dbg !14376
  br label %bb15, !dbg !14377

bb15:                                             ; preds = %bb10, %bb14
  br label %bb16, !dbg !14362

bb13:                                             ; preds = %bb12, %bb7
  br label %bb1, !dbg !14306

bb8:                                              ; preds = %bb7
  %66 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14378
  %_32 = load i64, i64* %66, align 8, !dbg !14378
  %67 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !14379
  %_33 = load i64, i64* %67, align 8, !dbg !14379
  %found_char = sub i64 %_32, %_33, !dbg !14378
  store i64 %found_char, i64* %found_char.dbg.spill, align 8, !dbg !14378
  call void @llvm.dbg.declare(metadata i64* %found_char.dbg.spill, metadata !14236, metadata !DIExpression()), !dbg !14380
  %68 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !14291
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 0, !dbg !14291
  %_56.0 = load [0 x i8]*, [0 x i8]** %69, align 8, !dbg !14291, !nonnull !23, !align !445, !noundef !23
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %68, i32 0, i32 1, !dbg !14291
  %_56.1 = load i64, i64* %70, align 8, !dbg !14291
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 0, !dbg !14291
  store [0 x i8]* %_56.0, [0 x i8]** %71, align 8, !dbg !14291
  %72 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill17, i32 0, i32 1, !dbg !14291
  store i64 %_56.1, i64* %72, align 8, !dbg !14291
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill17, metadata !14381, metadata !DIExpression()), !dbg !14385
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !14385
  store [0 x i8]* %_56.0, [0 x i8]** %73, align 8, !dbg !14385
  %74 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !14385
  store i64 %_56.1, i64* %74, align 8, !dbg !14385
  %75 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !14385
  %_36.0 = load [0 x i8]*, [0 x i8]** %75, align 8, !dbg !14385, !nonnull !23, !align !445, !noundef !23
  %76 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !14385
  %_36.1 = load i64, i64* %76, align 8, !dbg !14385
  br label %bb23, !dbg !14385

bb23:                                             ; preds = %bb8
  %77 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 0, !dbg !14291
  store [0 x i8]* %_36.0, [0 x i8]** %77, align 8, !dbg !14291
  %78 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill18, i32 0, i32 1, !dbg !14291
  store i64 %_36.1, i64* %78, align 8, !dbg !14291
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill18, metadata !14289, metadata !DIExpression()), !dbg !14290
  %79 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14386
  %_40 = load i64, i64* %79, align 8, !dbg !14386
  %80 = bitcast { i64, i64 }* %index3 to i64*, !dbg !14387
  store i64 %found_char, i64* %80, align 8, !dbg !14387
  %81 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 1, !dbg !14387
  store i64 %_40, i64* %81, align 8, !dbg !14387
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 0, !dbg !14290
  %_77.0 = load i64, i64* %82, align 8, !dbg !14290
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index3, i32 0, i32 1, !dbg !14290
  %_77.1 = load i64, i64* %83, align 8, !dbg !14290
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %84 = call { i8*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hf345357b5c64d268E"(i64 %_77.0, i64 %_77.1, [0 x i8]* align 1 %_36.0, i64 %_36.1), !dbg !14290
  store { i8*, i64 } %84, { i8*, i64 }* %_34, align 8, !dbg !14290
  br label %bb24, !dbg !14290

bb24:                                             ; preds = %bb23
  %85 = bitcast { i8*, i64 }* %_34 to {}**, !dbg !14388
  %86 = load {}*, {}** %85, align 8, !dbg !14388
  %87 = icmp eq {}* %86, null, !dbg !14388
  %_41 = select i1 %87, i64 0, i64 1, !dbg !14388
  %88 = icmp eq i64 %_41, 1, !dbg !14388
  br i1 %88, label %bb9, label %bb12, !dbg !14388

bb9:                                              ; preds = %bb24
  %89 = bitcast { i8*, i64 }* %_34 to { [0 x i8]*, i64 }*, !dbg !14292
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %89, i32 0, i32 0, !dbg !14292
  %91 = load [0 x i8]*, [0 x i8]** %90, align 8, !dbg !14292, !nonnull !23, !align !445, !noundef !23
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %89, i32 0, i32 1, !dbg !14292
  %93 = load i64, i64* %92, align 8, !dbg !14292
  %94 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0, !dbg !14292
  store [0 x i8]* %91, [0 x i8]** %94, align 8, !dbg !14292
  %95 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1, !dbg !14292
  store i64 %93, i64* %95, align 8, !dbg !14292
  store { [0 x i8]*, i64 }* %slice, { [0 x i8]*, i64 }** %self.dbg.spill19, align 8, !dbg !14389
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill19, metadata !14390, metadata !DIExpression()), !dbg !14395
  %self20 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 5, !dbg !14305
  store [4 x i8]* %self20, [4 x i8]** %self.dbg.spill21, align 8, !dbg !14305
  call void @llvm.dbg.declare(metadata [4 x i8]** %self.dbg.spill21, metadata !14303, metadata !DIExpression()), !dbg !14304
  %96 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 3, !dbg !14396
  %_50 = load i64, i64* %96, align 8, !dbg !14396
  %97 = bitcast { i64, i64 }* %index4 to i64*, !dbg !14397
  store i64 0, i64* %97, align 8, !dbg !14397
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 1, !dbg !14397
  store i64 %_50, i64* %98, align 8, !dbg !14397
  %_80.0 = bitcast [4 x i8]* %self20 to [0 x i8]*, !dbg !14304
  %99 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill22, i32 0, i32 0, !dbg !14304
  store [0 x i8]* %_80.0, [0 x i8]** %99, align 8, !dbg !14304
  %100 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill22, i32 0, i32 1, !dbg !14304
  store i64 4, i64* %100, align 8, !dbg !14304
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill22, metadata !14398, metadata !DIExpression()), !dbg !14405
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 0, !dbg !14304
  %index.0 = load i64, i64* %101, align 8, !dbg !14304
  %102 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index4, i32 0, i32 1, !dbg !14304
  %index.1 = load i64, i64* %102, align 8, !dbg !14304
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill23, i32 0, i32 0, !dbg !14304
  store i64 %index.0, i64* %103, align 8, !dbg !14304
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill23, i32 0, i32 1, !dbg !14304
  store i64 %index.1, i64* %104, align 8, !dbg !14304
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index.dbg.spill23, metadata !14404, metadata !DIExpression()), !dbg !14405
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %105 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h311cd6c79c217910E"(i64 %index.0, i64 %index.1, [0 x i8]* align 1 %_80.0, i64 4, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc565 to %"core::panic::location::Location"*)), !dbg !14405
  %_47.0 = extractvalue { [0 x i8]*, i64 } %105, 0, !dbg !14405
  %_47.1 = extractvalue { [0 x i8]*, i64 } %105, 1, !dbg !14405
  br label %bb25, !dbg !14405

bb12:                                             ; preds = %bb11, %bb24
  br label %bb13, !dbg !14407

bb25:                                             ; preds = %bb9
  %106 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0, !dbg !14408
  store [0 x i8]* %_47.0, [0 x i8]** %106, align 8, !dbg !14408
  %107 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1, !dbg !14408
  store i64 %_47.1, i64* %107, align 8, !dbg !14408
  store { [0 x i8]*, i64 }* %_46, { [0 x i8]*, i64 }** %other.dbg.spill, align 8, !dbg !14408
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !14394, metadata !DIExpression()), !dbg !14395
  %108 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 0, !dbg !14395
  %_87.0 = load [0 x i8]*, [0 x i8]** %108, align 8, !dbg !14395, !nonnull !23, !align !445, !noundef !23
  %109 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice, i32 0, i32 1, !dbg !14395
  %_87.1 = load i64, i64* %109, align 8, !dbg !14395
  %110 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 0, !dbg !14395
  %_88.0 = load [0 x i8]*, [0 x i8]** %110, align 8, !dbg !14395, !nonnull !23, !align !445, !noundef !23
  %111 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_46, i32 0, i32 1, !dbg !14395
  %_88.1 = load i64, i64* %111, align 8, !dbg !14395
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %_43 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he80a31ab2f1cfe97E"([0 x i8]* align 1 %_87.0, i64 %_87.1, [0 x i8]* align 1 %_88.0, i64 %_88.1), !dbg !14395
  br label %bb26, !dbg !14395

bb26:                                             ; preds = %bb25
  br i1 %_43, label %bb10, label %bb11, !dbg !14389

bb11:                                             ; preds = %bb26
  br label %bb12, !dbg !14409

bb10:                                             ; preds = %bb26
  %112 = getelementptr inbounds %"core::str::pattern::CharSearcher", %"core::str::pattern::CharSearcher"* %self, i32 0, i32 1, !dbg !14410
  %_53 = load i64, i64* %112, align 8, !dbg !14410
  %113 = bitcast { i64, i64 }* %_51 to i64*, !dbg !14411
  store i64 %found_char, i64* %113, align 8, !dbg !14411
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1, !dbg !14411
  store i64 %_53, i64* %114, align 8, !dbg !14411
  %115 = bitcast %"core::option::Option<(usize, usize)>"* %0 to %"core::option::Option<(usize, usize)>::Some"*, !dbg !14412
  %116 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", %"core::option::Option<(usize, usize)>::Some"* %115, i32 0, i32 1, !dbg !14412
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 0, !dbg !14412
  %118 = load i64, i64* %117, align 8, !dbg !14412
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_51, i32 0, i32 1, !dbg !14412
  %120 = load i64, i64* %119, align 8, !dbg !14412
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i32 0, i32 0, !dbg !14412
  store i64 %118, i64* %121, align 8, !dbg !14412
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %116, i32 0, i32 1, !dbg !14412
  store i64 %120, i64* %122, align 8, !dbg !14412
  %123 = bitcast %"core::option::Option<(usize, usize)>"* %0 to i64*, !dbg !14412
  store i64 1, i64* %123, align 8, !dbg !14412
  br label %bb15, !dbg !14413
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h5b45f91e8f6b6713E"(%"core::str::pattern::CharSearcher"* align 8 %self) unnamed_addr #0 !dbg !14415 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharSearcher"*, align 8
  store %"core::str::pattern::CharSearcher"* %self, %"core::str::pattern::CharSearcher"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharSearcher"** %self.dbg.spill, metadata !14420, metadata !DIExpression()), !dbg !14421
  %0 = bitcast %"core::str::pattern::CharSearcher"* %self to { [0 x i8]*, i64 }*, !dbg !14422
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !14422
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !dbg !14422, !nonnull !23, !align !445, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !14422
  %4 = load i64, i64* %3, align 8, !dbg !14422
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !14423
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1, !dbg !14423
  ret { [0 x i8]*, i64 } %6, !dbg !14423
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h063192d14cb62140E"() unnamed_addr #0 !dbg !14424 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !14428, metadata !DIExpression()), !dbg !14429
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !14430
  store i64 0, i64* %1, align 8, !dbg !14430
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !14431
  %3 = load i64, i64* %2, align 8, !dbg !14431, !range !3441, !noundef !23
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !14431
  %5 = load i64, i64* %4, align 8, !dbg !14431
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !14431
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !14431
  ret { i64, i64 } %7, !dbg !14431
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha2738e9bf57d9605E"() unnamed_addr #0 !dbg !14432 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %0 = alloca { i32, i32 }, align 4
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !14436, metadata !DIExpression()), !dbg !14437
  %1 = bitcast { i32, i32 }* %0 to i32*, !dbg !14438
  store i32 0, i32* %1, align 4, !dbg !14438
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !14439
  %3 = load i32, i32* %2, align 4, !dbg !14439, !range !4194, !noundef !23
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !14439
  %5 = load i32, i32* %4, align 4, !dbg !14439
  %6 = insertvalue { i32, i32 } undef, i32 %3, 0, !dbg !14439
  %7 = insertvalue { i32, i32 } %6, i32 %5, 1, !dbg !14439
  ret { i32, i32 } %7, !dbg !14439
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha6f2bf65a9752053E"() unnamed_addr #0 !dbg !14440 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !14444, metadata !DIExpression()), !dbg !14445
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !14446
  store i64 0, i64* %1, align 8, !dbg !14446
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !14447
  %3 = load i64, i64* %2, align 8, !dbg !14447, !range !3441, !noundef !23
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !14447
  %5 = load i64, i64* %4, align 8, !dbg !14447
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !14447
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !14447
  ret { i64, i64 } %7, !dbg !14447
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee517ea8e92987d3E"(%"core::str::iter::CharIndices"* align 8 %self) unnamed_addr #0 !dbg !14448 {
start:
  %len.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %diff.dbg.spill20 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill18 = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %size.dbg.spill14 = alloca i64, align 8
  %start.dbg.spill13 = alloca i8*, align 8
  %self.dbg.spill11 = alloca { i8*, i8* }*, align 8
  %index.dbg.spill = alloca i64, align 8
  %ch.dbg.spill = alloca i32, align 4
  %self.dbg.spill9 = alloca { i8*, i8* }*, align 8
  %pre_len.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %_14 = alloca { i64, i32 }, align 8
  %_4 = alloca i32, align 4
  %8 = alloca { i64, i32 }, align 8
  store %"core::str::iter::CharIndices"* %self, %"core::str::iter::CharIndices"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %self.dbg.spill, metadata !14451, metadata !DIExpression()), !dbg !14460
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !14461
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !14461
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !14462, metadata !DIExpression()), !dbg !14475
  %9 = bitcast { i8*, i8* }* %self1 to i8**, !dbg !14475
  %start3 = load i8*, i8** %9, align 8, !dbg !14475, !nonnull !23, !noundef !23
  store i8* %start3, i8** %start.dbg.spill, align 8, !dbg !14475
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !14466, metadata !DIExpression()), !dbg !14476
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !14477
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !14469, metadata !DIExpression()), !dbg !14483
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self1, i32 0, i32 1, !dbg !14483
  %self4 = load i8*, i8** %10, align 8, !dbg !14483
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !14483
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !14484, metadata !DIExpression()), !dbg !14488
  %11 = bitcast i64* %7 to i8**, !dbg !14488
  store i8* %self4, i8** %11, align 8, !dbg !14488
  %_26 = load i64, i64* %7, align 8, !dbg !14488
  br label %bb7, !dbg !14488

bb7:                                              ; preds = %start
  store i8* %start3, i8** %self.dbg.spill6, align 8, !dbg !14483
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !14490, metadata !DIExpression()), !dbg !14494
  store i8* %start3, i8** %self.dbg.spill7, align 8, !dbg !14494
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !14496, metadata !DIExpression()), !dbg !14500
  %12 = bitcast i64* %6 to i8**, !dbg !14500
  store i8* %start3, i8** %12, align 8, !dbg !14500
  %_28 = load i64, i64* %6, align 8, !dbg !14500
  br label %bb8, !dbg !14500

bb8:                                              ; preds = %bb7
  %13 = sub nuw i64 %_26, %_28, !dbg !14483
  store i64 %13, i64* %5, align 8, !dbg !14483
  %diff = load i64, i64* %5, align 8, !dbg !14483
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !14483
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !14472, metadata !DIExpression()), !dbg !14501
  br label %bb5, !dbg !14483

bb5:                                              ; preds = %bb8
  %14 = udiv exact i64 %diff, 1, !dbg !14501
  store i64 %14, i64* %4, align 8, !dbg !14501
  %pre_len = load i64, i64* %4, align 8, !dbg !14501
  store i64 %pre_len, i64* %pre_len.dbg.spill, align 8, !dbg !14501
  call void @llvm.dbg.declare(metadata i64* %pre_len.dbg.spill, metadata !14452, metadata !DIExpression()), !dbg !14502
  br label %bb6, !dbg !14501

bb6:                                              ; preds = %bb5
  %self8 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !14503
  store { i8*, i8* }* %self8, { i8*, i8* }** %self.dbg.spill9, align 8, !dbg !14503
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill9, metadata !14504, metadata !DIExpression()), !dbg !14507
; call core::str::validations::next_code_point
  %15 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17hd6a7a759b1fa4f00E({ i8*, i8* }* align 8 %self8), !dbg !14507
  %_36.0 = extractvalue { i32, i32 } %15, 0, !dbg !14507
  %_36.1 = extractvalue { i32, i32 } %15, 1, !dbg !14507
  br label %bb9, !dbg !14507

bb9:                                              ; preds = %bb6
; call core::option::Option<T>::map
  %16 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hd3cf823748f92406E"(i32 %_36.0, i32 %_36.1), !dbg !14507, !range !582
  store i32 %16, i32* %_4, align 4, !dbg !14507
  br label %bb10, !dbg !14507

bb10:                                             ; preds = %bb9
  %17 = load i32, i32* %_4, align 4, !dbg !14503, !range !582, !noundef !23
  %18 = sub i32 %17, 1114112, !dbg !14503
  %19 = icmp eq i32 %18, 0, !dbg !14503
  %_6 = select i1 %19, i64 0, i64 1, !dbg !14503
  switch i64 %_6, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !14508

bb2:                                              ; preds = %bb10
  unreachable, !dbg !14503

bb3:                                              ; preds = %bb10
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1, !dbg !14509
  store i32 1114112, i32* %20, align 8, !dbg !14509
  br label %bb4, !dbg !14509

bb1:                                              ; preds = %bb10
  %ch = load i32, i32* %_4, align 4, !dbg !14510, !range !667, !noundef !23
  store i32 %ch, i32* %ch.dbg.spill, align 4, !dbg !14510
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !14454, metadata !DIExpression()), !dbg !14511
  %21 = bitcast %"core::str::iter::CharIndices"* %self to i64*, !dbg !14512
  %index = load i64, i64* %21, align 8, !dbg !14512
  store i64 %index, i64* %index.dbg.spill, align 8, !dbg !14512
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !14456, metadata !DIExpression()), !dbg !14513
  %self10 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %self, i32 0, i32 1, !dbg !14514
  store { i8*, i8* }* %self10, { i8*, i8* }** %self.dbg.spill11, align 8, !dbg !14514
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill11, metadata !14515, metadata !DIExpression()), !dbg !14528
  %22 = bitcast { i8*, i8* }* %self10 to i8**, !dbg !14528
  %start12 = load i8*, i8** %22, align 8, !dbg !14528, !nonnull !23, !noundef !23
  store i8* %start12, i8** %start.dbg.spill13, align 8, !dbg !14528
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill13, metadata !14519, metadata !DIExpression()), !dbg !14529
  store i64 1, i64* %size.dbg.spill14, align 8, !dbg !14530
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill14, metadata !14522, metadata !DIExpression()), !dbg !14536
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self10, i32 0, i32 1, !dbg !14536
  %self15 = load i8*, i8** %23, align 8, !dbg !14536
  store i8* %self15, i8** %self.dbg.spill16, align 8, !dbg !14536
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !14537, metadata !DIExpression()), !dbg !14541
  %24 = bitcast i64* %3 to i8**, !dbg !14541
  store i8* %self15, i8** %24, align 8, !dbg !14541
  %_49 = load i64, i64* %3, align 8, !dbg !14541
  br label %bb13, !dbg !14541

bb13:                                             ; preds = %bb1
  store i8* %start12, i8** %self.dbg.spill17, align 8, !dbg !14536
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !14543, metadata !DIExpression()), !dbg !14547
  store i8* %start12, i8** %self.dbg.spill18, align 8, !dbg !14547
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill18, metadata !14549, metadata !DIExpression()), !dbg !14553
  %25 = bitcast i64* %2 to i8**, !dbg !14553
  store i8* %start12, i8** %25, align 8, !dbg !14553
  %_51 = load i64, i64* %2, align 8, !dbg !14553
  br label %bb14, !dbg !14553

bb14:                                             ; preds = %bb13
  %26 = sub nuw i64 %_49, %_51, !dbg !14536
  store i64 %26, i64* %1, align 8, !dbg !14536
  %diff19 = load i64, i64* %1, align 8, !dbg !14536
  store i64 %diff19, i64* %diff.dbg.spill20, align 8, !dbg !14536
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill20, metadata !14525, metadata !DIExpression()), !dbg !14554
  br label %bb11, !dbg !14536

bb11:                                             ; preds = %bb14
  %27 = udiv exact i64 %diff19, 1, !dbg !14554
  store i64 %27, i64* %0, align 8, !dbg !14554
  %len = load i64, i64* %0, align 8, !dbg !14554
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !14554
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !14458, metadata !DIExpression()), !dbg !14555
  br label %bb12, !dbg !14554

bb12:                                             ; preds = %bb11
  %_11 = sub i64 %pre_len, %len, !dbg !14556
  %28 = bitcast %"core::str::iter::CharIndices"* %self to i64*, !dbg !14557
  %29 = bitcast %"core::str::iter::CharIndices"* %self to i64*, !dbg !14557
  %30 = load i64, i64* %29, align 8, !dbg !14557
  %31 = add i64 %30, %_11, !dbg !14557
  store i64 %31, i64* %28, align 8, !dbg !14557
  %32 = bitcast { i64, i32 }* %_14 to i64*, !dbg !14558
  store i64 %index, i64* %32, align 8, !dbg !14558
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1, !dbg !14558
  store i32 %ch, i32* %33, align 8, !dbg !14558
  %34 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 0, !dbg !14559
  %35 = load i64, i64* %34, align 8, !dbg !14559
  %36 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_14, i32 0, i32 1, !dbg !14559
  %37 = load i32, i32* %36, align 8, !dbg !14559, !range !667, !noundef !23
  %38 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0, !dbg !14559
  store i64 %35, i64* %38, align 8, !dbg !14559
  %39 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1, !dbg !14559
  store i32 %37, i32* %39, align 8, !dbg !14559
  br label %bb4, !dbg !14560

bb4:                                              ; preds = %bb3, %bb12
  %40 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 0, !dbg !14561
  %41 = load i64, i64* %40, align 8, !dbg !14561
  %42 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %8, i32 0, i32 1, !dbg !14561
  %43 = load i32, i32* %42, align 8, !dbg !14561, !range !582, !noundef !23
  %44 = insertvalue { i64, i32 } undef, i64 %41, 0, !dbg !14561
  %45 = insertvalue { i64, i32 } %44, i32 %43, 1, !dbg !14561
  ret { i64, i32 } %45, !dbg !14561
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hf15cad5564cfbb15E"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !14562 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !14565, metadata !DIExpression()), !dbg !14568
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !14569
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !14570
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h9df645b2d77e9e3eE"(i64* align 8 %_3, i64* align 8 %_4), !dbg !14569
  br label %bb1, !dbg !14569

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !14569

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !14571
  store i64 0, i64* %1, align 8, !dbg !14571
  br label %bb7, !dbg !14572

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !14573
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h03ffcdbbede98532E"(i64* align 8 %_7), !dbg !14573
  br label %bb3, !dbg !14573

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h420a2c1e2dba794cE"(i64 %_6, i64 1), !dbg !14574
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !14574
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !14566, metadata !DIExpression()), !dbg !14575
  br label %bb4, !dbg !14574

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !14576
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h2fe7bc61199dfd35E(i64* align 8 %_10, i64 %n), !dbg !14577
  br label %bb5, !dbg !14577

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !14578
  store i64 %_8, i64* %2, align 8, !dbg !14578
  %3 = bitcast { i64, i64 }* %0 to i64*, !dbg !14578
  store i64 1, i64* %3, align 8, !dbg !14578
  br label %bb7, !dbg !14572

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !14579
  %5 = load i64, i64* %4, align 8, !dbg !14579, !range !3441, !noundef !23
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !14579
  %7 = load i64, i64* %6, align 8, !dbg !14579
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !14579
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !14579
  ret { i64, i64 } %9, !dbg !14579
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5ce0bf41ffb7e76aE"(%"core::str::iter::Split<char>"* align 8 %self) unnamed_addr #0 !dbg !14580 {
start:
  %self.dbg.spill = alloca %"core::str::iter::Split<char>"*, align 8
  store %"core::str::iter::Split<char>"* %self, %"core::str::iter::Split<char>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<char>"** %self.dbg.spill, metadata !14585, metadata !DIExpression()), !dbg !14586
  %_2 = bitcast %"core::str::iter::Split<char>"* %self to %"core::str::iter::SplitInternal<char>"*, !dbg !14587
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17ha5aaa9b52ec87b91E"(%"core::str::iter::SplitInternal<char>"* align 8 %_2), !dbg !14587
  %1 = extractvalue { i8*, i64 } %0, 0, !dbg !14587
  %2 = extractvalue { i8*, i64 } %0, 1, !dbg !14587
  br label %bb1, !dbg !14587

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0, !dbg !14588
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1, !dbg !14588
  ret { i8*, i64 } %4, !dbg !14588
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haffff965e8aa3b1fE"(%"core::str::iter::Split<[char; 2]>"* align 8 %self) unnamed_addr #0 !dbg !14589 {
start:
  %self.dbg.spill = alloca %"core::str::iter::Split<[char; 2]>"*, align 8
  store %"core::str::iter::Split<[char; 2]>"* %self, %"core::str::iter::Split<[char; 2]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<[char; 2]>"** %self.dbg.spill, metadata !14594, metadata !DIExpression()), !dbg !14595
  %_2 = bitcast %"core::str::iter::Split<[char; 2]>"* %self to %"core::str::iter::SplitInternal<[char; 2]>"*, !dbg !14596
; call core::str::iter::SplitInternal<P>::next
  %0 = call { i8*, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h6744161f5d751910E"(%"core::str::iter::SplitInternal<[char; 2]>"* align 8 %_2), !dbg !14596
  %1 = extractvalue { i8*, i64 } %0, 0, !dbg !14596
  %2 = extractvalue { i8*, i64 } %0, 1, !dbg !14596
  br label %bb1, !dbg !14596

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i64 } undef, i8* %1, 0, !dbg !14597
  %4 = insertvalue { i8*, i64 } %3, i64 %2, 1, !dbg !14597
  ret { i8*, i64 } %4, !dbg !14597
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h3b6fe6445cd4211cE"({ i32*, i32* }* align 8 %self, i32* align 4 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !14598 {
start:
  %x.dbg.spill = alloca i32*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca { i32*, i32* }*, align 8
  %_9 = alloca i32*, align 8
  %_3 = alloca i32*, align 8
  %2 = alloca i8, align 1
  %f = alloca i32*, align 8
  store i32* %0, i32** %f, align 8
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill, metadata !14604, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.declare(metadata i32** %f, metadata !14605, metadata !DIExpression()), !dbg !14611
  br label %bb1, !dbg !14612

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 4 i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he0f6905c7078f1f0E"({ i32*, i32* }* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !14613

bb9:                                              ; preds = %cleanup
  br label %bb10, !dbg !14614

cleanup:                                          ; preds = %bb3, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store i32* %3, i32** %_3, align 8, !dbg !14613
  %9 = bitcast i32** %_3 to {}**, !dbg !14615
  %10 = load {}*, {}** %9, align 8, !dbg !14615
  %11 = icmp eq {}* %10, null, !dbg !14615
  %_5 = select i1 %11, i64 0, i64 1, !dbg !14615
  %12 = icmp eq i64 %_5, 1, !dbg !14615
  br i1 %12, label %bb3, label %bb7, !dbg !14615

bb3:                                              ; preds = %bb2
  %x = load i32*, i32** %_3, align 8, !dbg !14616, !nonnull !23, !align !13942, !noundef !23
  store i32* %x, i32** %x.dbg.spill, align 8, !dbg !14616
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill, metadata !14606, metadata !DIExpression()), !dbg !14616
  store i32* %x, i32** %_9, align 8, !dbg !14617
  %13 = load i32*, i32** %_9, align 8, !dbg !14617, !nonnull !23, !align !13942, !noundef !23
; invoke <[char; N] as core::str::pattern::MultiCharEq>::matches::{{closure}}
  %_7 = invoke zeroext i1 @"_ZN77_$LT$$u5b$char$u3b$$u20$N$u5d$$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches28_$u7b$$u7b$closure$u7d$$u7d$17h83d846dc05fc2a5dE"(i32** align 8 %f, i32* align 4 %13)
          to label %bb4 unwind label %cleanup, !dbg !14617

bb7:                                              ; preds = %bb2
  store i8 0, i8* %2, align 1, !dbg !14618
  br label %bb8, !dbg !14614

bb8:                                              ; preds = %bb5, %bb7
  %14 = load i8, i8* %2, align 1, !dbg !14619, !range !512, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !14619
  ret i1 %15, !dbg !14619

bb4:                                              ; preds = %bb3
  br i1 %_7, label %bb5, label %bb6, !dbg !14617

bb10:                                             ; preds = %bb9
  %16 = bitcast { i8*, i32 }* %1 to i8**, !dbg !14620
  %17 = load i8*, i8** %16, align 8, !dbg !14620
  %18 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !14620
  %19 = load i32, i32* %18, align 8, !dbg !14620
  %20 = insertvalue { i8*, i32 } undef, i8* %17, 0, !dbg !14620
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1, !dbg !14620
  resume { i8*, i32 } %21, !dbg !14620

bb6:                                              ; preds = %bb4
  br label %bb1, !dbg !14612

bb5:                                              ; preds = %bb4
  store i8 1, i8* %2, align 1, !dbg !14621
  br label %bb8, !dbg !14614
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hffabf1f380f522a1E"({ i64*, i64* }* align 8 %self, i64* align 8 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !14622 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_9 = alloca i64*, align 8
  %_3 = alloca i64*, align 8
  %2 = alloca i8, align 1
  %f = alloca i64*, align 8
  store i64* %0, i64** %f, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !14626, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.declare(metadata i64** %f, metadata !14627, metadata !DIExpression()), !dbg !14633
  br label %bb1, !dbg !14634

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !14635

bb9:                                              ; preds = %cleanup
  br label %bb10, !dbg !14636

cleanup:                                          ; preds = %bb3, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store i64* %3, i64** %_3, align 8, !dbg !14635
  %9 = bitcast i64** %_3 to {}**, !dbg !14637
  %10 = load {}*, {}** %9, align 8, !dbg !14637
  %11 = icmp eq {}* %10, null, !dbg !14637
  %_5 = select i1 %11, i64 0, i64 1, !dbg !14637
  %12 = icmp eq i64 %_5, 1, !dbg !14637
  br i1 %12, label %bb3, label %bb7, !dbg !14637

bb3:                                              ; preds = %bb2
  %13 = bitcast i64** %_3 to { [0 x i8]*, i64 }**, !dbg !14638
  %x = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %13, align 8, !dbg !14638, !nonnull !23, !align !584, !noundef !23
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %x.dbg.spill, align 8, !dbg !14638
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %x.dbg.spill, metadata !14628, metadata !DIExpression()), !dbg !14638
  %14 = bitcast i64** %_9 to { [0 x i8]*, i64 }**, !dbg !14639
  store { [0 x i8]*, i64 }* %x, { [0 x i8]*, i64 }** %14, align 8, !dbg !14639
  %15 = load i64*, i64** %_9, align 8, !dbg !14639, !nonnull !23, !align !584, !noundef !23
  %16 = bitcast i64* %15 to { [0 x i8]*, i64 }*, !dbg !14639
; invoke <T as core::slice::cmp::SliceContains>::slice_contains::{{closure}}
  %_7 = invoke zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains28_$u7b$$u7b$closure$u7d$$u7d$17h8be92fc8e0a57246E"(i64** align 8 %f, { [0 x i8]*, i64 }* align 8 %16)
          to label %bb4 unwind label %cleanup, !dbg !14639

bb7:                                              ; preds = %bb2
  store i8 0, i8* %2, align 1, !dbg !14640
  br label %bb8, !dbg !14636

bb8:                                              ; preds = %bb5, %bb7
  %17 = load i8, i8* %2, align 1, !dbg !14641, !range !512, !noundef !23
  %18 = trunc i8 %17 to i1, !dbg !14641
  ret i1 %18, !dbg !14641

bb4:                                              ; preds = %bb3
  br i1 %_7, label %bb5, label %bb6, !dbg !14639

bb10:                                             ; preds = %bb9
  %19 = bitcast { i8*, i32 }* %1 to i8**, !dbg !14642
  %20 = load i8*, i8** %19, align 8, !dbg !14642
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !14642
  %22 = load i32, i32* %21, align 8, !dbg !14642
  %23 = insertvalue { i8*, i32 } undef, i8* %20, 0, !dbg !14642
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1, !dbg !14642
  resume { i8*, i32 } %24, !dbg !14642

bb6:                                              ; preds = %bb4
  br label %bb1, !dbg !14634

bb5:                                              ; preds = %bb4
  store i8 1, i8* %2, align 1, !dbg !14643
  br label %bb8, !dbg !14636
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %self) unnamed_addr #0 !dbg !14644 {
start:
  %self.dbg.spill26 = alloca i64*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %1 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill22 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill21 = alloca i64*, align 8
  %old.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill19 = alloca i64*, align 8
  %self.dbg.spill17 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill16 = alloca i64*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill14 = alloca i8*, align 8
  %data_address.dbg.spill12 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill8 = alloca { [0 x i8]*, i64 }*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_62 = alloca i64*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca { [0 x i8]*, i64 }*, align 8
  %6 = alloca i64*, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !14648, metadata !DIExpression()), !dbg !14649
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !14650, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !14666, metadata !DIExpression()), !dbg !14671
  %7 = bitcast { i64*, i64* }* %self to i64**, !dbg !14665
  %self2 = load i64*, i64** %7, align 8, !dbg !14665, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !14665
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !14680, metadata !DIExpression()), !dbg !14684
  %_21 = bitcast i64* %self2 to { [0 x i8]*, i64 }*, !dbg !14684
  store { [0 x i8]*, i64 }* %_21, { [0 x i8]*, i64 }** %self.dbg.spill4, align 8, !dbg !14684
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill4, metadata !14663, metadata !DIExpression()), !dbg !14685
  %self5 = bitcast { [0 x i8]*, i64 }* %_21 to i8*, !dbg !14685
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !14685
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !14686, metadata !DIExpression()), !dbg !14691
  %8 = bitcast {}** %5 to i64*, !dbg !14693
  store i64 0, i64* %8, align 8, !dbg !14693
  %data_address = load {}*, {}** %5, align 8, !dbg !14693
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !14693
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !14654, metadata !DIExpression()), !dbg !14655
  br label %bb9, !dbg !14693

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !14655
  store {}* %data_address, {}** %9, align 8, !dbg !14655
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14655
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !14655
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !14655
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !14655
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !14655
  %other = load i8*, i8** %13, align 8, !dbg !14655
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !14655
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !14690, metadata !DIExpression()), !dbg !14691
  %14 = icmp eq i8* %self5, %other, !dbg !14691
  %15 = zext i1 %14 to i8, !dbg !14691
  store i8 %15, i8* %4, align 1, !dbg !14691
  %16 = load i8, i8* %4, align 1, !dbg !14691, !range !512, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !14691
  br label %bb10, !dbg !14691

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !14699
  call void @llvm.assume(i1 %_3), !dbg !14700
  br label %bb1, !dbg !14700

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !14701

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !14702

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14679
  %18 = bitcast i64** %17 to { [0 x i8]*, i64 }**, !dbg !14679
  %self7 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %18, align 8, !dbg !14679
  store { [0 x i8]*, i64 }* %self7, { [0 x i8]*, i64 }** %self.dbg.spill8, align 8, !dbg !14679
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill8, metadata !14677, metadata !DIExpression()), !dbg !14703
  %self9 = bitcast { [0 x i8]*, i64 }* %self7 to i8*, !dbg !14703
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !14703
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !14704, metadata !DIExpression()), !dbg !14709
  %19 = bitcast {}** %3 to i64*, !dbg !14711
  store i64 0, i64* %19, align 8, !dbg !14711
  %data_address11 = load {}*, {}** %3, align 8, !dbg !14711
  store {}* %data_address11, {}** %data_address.dbg.spill12, align 8, !dbg !14711
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill12, metadata !14670, metadata !DIExpression()), !dbg !14671
  br label %bb11, !dbg !14711

bb11:                                             ; preds = %bb2
  %20 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !14671
  store {}* %data_address11, {}** %20, align 8, !dbg !14671
  %21 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14671
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %21 to i8*, !dbg !14671
  %23 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !14671
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 8, i1 false), !dbg !14671
  %24 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !14671
  %other13 = load i8*, i8** %24, align 8, !dbg !14671
  store i8* %other13, i8** %other.dbg.spill14, align 8, !dbg !14671
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill14, metadata !14708, metadata !DIExpression()), !dbg !14709
  %25 = icmp eq i8* %self9, %other13, !dbg !14709
  %26 = zext i1 %25 to i8, !dbg !14709
  store i8 %26, i8* %2, align 1, !dbg !14709
  %27 = load i8, i8* %2, align 1, !dbg !14709, !range !512, !noundef !23
  %_10 = trunc i8 %27 to i1, !dbg !14709
  br label %bb12, !dbg !14709

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !14717
  call void @llvm.assume(i1 %_9), !dbg !14718
  br label %bb3, !dbg !14718

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !14702

bb5:                                              ; preds = %bb4, %bb3
  %28 = bitcast { i64*, i64* }* %self to i64**, !dbg !14719
  %self15 = load i64*, i64** %28, align 8, !dbg !14719, !nonnull !23, !noundef !23
  store i64* %self15, i64** %self.dbg.spill16, align 8, !dbg !14719
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill16, metadata !14720, metadata !DIExpression()), !dbg !14724
  %_51 = bitcast i64* %self15 to { [0 x i8]*, i64 }*, !dbg !14724
  %29 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14719
  %30 = bitcast i64** %29 to { [0 x i8]*, i64 }**, !dbg !14719
  %_16 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %30, align 8, !dbg !14719
  %_12 = icmp eq { [0 x i8]*, i64 }* %_51, %_16, !dbg !14719
  br i1 %_12, label %bb6, label %bb7, !dbg !14719

bb7:                                              ; preds = %bb5
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill17, align 8, !dbg !14726
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill17, metadata !14727, metadata !DIExpression()), !dbg !14735
  br i1 false, label %bb13, label %bb14, !dbg !14735

bb6:                                              ; preds = %bb5
  %31 = bitcast i64** %6 to {}**, !dbg !14737
  store {}* null, {}** %31, align 8, !dbg !14737
  br label %bb8, !dbg !14738

bb8:                                              ; preds = %bb15, %bb6
  %32 = load i64*, i64** %6, align 8, !dbg !14739, !align !584
  ret i64* %32, !dbg !14739

bb13:                                             ; preds = %bb7
  %33 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14735
  %34 = bitcast i64** %33 to { [0 x i8]*, i64 }**, !dbg !14735
  %_56 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %34, align 8, !dbg !14735
  %self23 = bitcast { [0 x i8]*, i64 }* %_56 to i8*, !dbg !14735
  store i8* %self23, i8** %self.dbg.spill24, align 8, !dbg !14735
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !14740, metadata !DIExpression()), !dbg !14745
  %35 = getelementptr i8, i8* %self23, i64 -1, !dbg !14745
  store i8* %35, i8** %0, align 8, !dbg !14745
  %_54 = load i8*, i8** %0, align 8, !dbg !14745
  br label %bb16, !dbg !14745

bb14:                                             ; preds = %bb7
  %36 = bitcast { i64*, i64* }* %self to i64**, !dbg !14735
  %self18 = load i64*, i64** %36, align 8, !dbg !14735, !nonnull !23, !noundef !23
  store i64* %self18, i64** %self.dbg.spill19, align 8, !dbg !14735
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill19, metadata !14747, metadata !DIExpression()), !dbg !14751
  %_71 = bitcast i64* %self18 to { [0 x i8]*, i64 }*, !dbg !14751
  store { [0 x i8]*, i64 }* %_71, { [0 x i8]*, i64 }** %old.dbg.spill, align 8, !dbg !14751
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %old.dbg.spill, metadata !14733, metadata !DIExpression()), !dbg !14753
  %37 = bitcast { i64*, i64* }* %self to i64**, !dbg !14753
  %self20 = load i64*, i64** %37, align 8, !dbg !14753, !nonnull !23, !noundef !23
  store i64* %self20, i64** %self.dbg.spill21, align 8, !dbg !14753
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill21, metadata !14754, metadata !DIExpression()), !dbg !14758
  %_72 = bitcast i64* %self20 to { [0 x i8]*, i64 }*, !dbg !14758
  store { [0 x i8]*, i64 }* %_72, { [0 x i8]*, i64 }** %self.dbg.spill22, align 8, !dbg !14758
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill22, metadata !14760, metadata !DIExpression()), !dbg !14767
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %_72, i64 1, !dbg !14767
  store { [0 x i8]*, i64 }* %38, { [0 x i8]*, i64 }** %1, align 8, !dbg !14767
  %_73 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8, !dbg !14767
  br label %bb17, !dbg !14767

bb17:                                             ; preds = %bb14
  store { [0 x i8]*, i64 }* %_73, { [0 x i8]*, i64 }** %ptr.dbg.spill, align 8, !dbg !14767
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %ptr.dbg.spill, metadata !14768, metadata !DIExpression()), !dbg !14772
  %39 = bitcast i64** %_62 to { [0 x i8]*, i64 }**, !dbg !14772
  store { [0 x i8]*, i64 }* %_73, { [0 x i8]*, i64 }** %39, align 8, !dbg !14772
  %40 = bitcast { i64*, i64* }* %self to i64**, !dbg !14753
  %41 = load i64*, i64** %_62, align 8, !dbg !14753, !nonnull !23, !noundef !23
  store i64* %41, i64** %40, align 8, !dbg !14753
  store { [0 x i8]*, i64 }* %_71, { [0 x i8]*, i64 }** %_19, align 8, !dbg !14753
  br label %bb15, !dbg !14735

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %_19, align 8, !dbg !14726
  %42 = bitcast i64** %6 to { [0 x i8]*, i64 }**, !dbg !14774
  store { [0 x i8]*, i64 }* %_18, { [0 x i8]*, i64 }** %42, align 8, !dbg !14774
  br label %bb8, !dbg !14738

bb16:                                             ; preds = %bb13
  %43 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14735
  %44 = bitcast i64** %43 to { [0 x i8]*, i64 }**, !dbg !14735
  %45 = bitcast i8* %_54 to { [0 x i8]*, i64 }*, !dbg !14735
  store { [0 x i8]*, i64 }* %45, { [0 x i8]*, i64 }** %44, align 8, !dbg !14735
  %46 = bitcast { i64*, i64* }* %self to i64**, !dbg !14735
  %self25 = load i64*, i64** %46, align 8, !dbg !14735, !nonnull !23, !noundef !23
  store i64* %self25, i64** %self.dbg.spill26, align 8, !dbg !14735
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill26, metadata !14775, metadata !DIExpression()), !dbg !14779
  %_70 = bitcast i64* %self25 to { [0 x i8]*, i64 }*, !dbg !14779
  store { [0 x i8]*, i64 }* %_70, { [0 x i8]*, i64 }** %_19, align 8, !dbg !14735
  br label %bb15, !dbg !14735
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha8eecab141ec909bE"({ i64*, i64* }* align 8 %self) unnamed_addr #0 !dbg !14781 {
start:
  %self.dbg.spill26 = alloca i64*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %ptr.dbg.spill = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %1 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill22 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill21 = alloca i64*, align 8
  %old.dbg.spill = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill19 = alloca i64*, align 8
  %self.dbg.spill17 = alloca { i64*, i64* }*, align 8
  %self.dbg.spill16 = alloca i64*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill14 = alloca i8*, align 8
  %data_address.dbg.spill12 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill8 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %self.dbg.spill3 = alloca i64*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i64*, i64* }*, align 8
  %_62 = alloca i64*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, align 8
  %6 = alloca i64*, align 8
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill, metadata !14797, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !14799, metadata !DIExpression()), !dbg !14804
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !14815, metadata !DIExpression()), !dbg !14820
  %7 = bitcast { i64*, i64* }* %self to i64**, !dbg !14814
  %self2 = load i64*, i64** %7, align 8, !dbg !14814, !nonnull !23, !noundef !23
  store i64* %self2, i64** %self.dbg.spill3, align 8, !dbg !14814
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill3, metadata !14829, metadata !DIExpression()), !dbg !14835
  %_21 = bitcast i64* %self2 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !14835
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_21, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill4, align 8, !dbg !14835
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill4, metadata !14812, metadata !DIExpression()), !dbg !14836
  %self5 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_21 to i8*, !dbg !14836
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !14836
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !14837, metadata !DIExpression()), !dbg !14842
  %8 = bitcast {}** %5 to i64*, !dbg !14844
  store i64 0, i64* %8, align 8, !dbg !14844
  %data_address = load {}*, {}** %5, align 8, !dbg !14844
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !14844
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !14803, metadata !DIExpression()), !dbg !14804
  br label %bb9, !dbg !14844

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !14804
  store {}* %data_address, {}** %9, align 8, !dbg !14804
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14804
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !14804
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !14804
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !14804
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !14804
  %other = load i8*, i8** %13, align 8, !dbg !14804
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !14804
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !14841, metadata !DIExpression()), !dbg !14842
  %14 = icmp eq i8* %self5, %other, !dbg !14842
  %15 = zext i1 %14 to i8, !dbg !14842
  store i8 %15, i8* %4, align 1, !dbg !14842
  %16 = load i8, i8* %4, align 1, !dbg !14842, !range !512, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !14842
  br label %bb10, !dbg !14842

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !14850
  call void @llvm.assume(i1 %_3), !dbg !14851
  br label %bb1, !dbg !14851

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !14852

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !14853

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14828
  %18 = bitcast i64** %17 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !14828
  %self7 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %18, align 8, !dbg !14828
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %self7, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill8, align 8, !dbg !14828
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill8, metadata !14826, metadata !DIExpression()), !dbg !14854
  %self9 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %self7 to i8*, !dbg !14854
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !14854
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !14855, metadata !DIExpression()), !dbg !14860
  %19 = bitcast {}** %3 to i64*, !dbg !14862
  store i64 0, i64* %19, align 8, !dbg !14862
  %data_address11 = load {}*, {}** %3, align 8, !dbg !14862
  store {}* %data_address11, {}** %data_address.dbg.spill12, align 8, !dbg !14862
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill12, metadata !14819, metadata !DIExpression()), !dbg !14820
  br label %bb11, !dbg !14862

bb11:                                             ; preds = %bb2
  %20 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !14820
  store {}* %data_address11, {}** %20, align 8, !dbg !14820
  %21 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14820
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %21 to i8*, !dbg !14820
  %23 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !14820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 8, i1 false), !dbg !14820
  %24 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !14820
  %other13 = load i8*, i8** %24, align 8, !dbg !14820
  store i8* %other13, i8** %other.dbg.spill14, align 8, !dbg !14820
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill14, metadata !14859, metadata !DIExpression()), !dbg !14860
  %25 = icmp eq i8* %self9, %other13, !dbg !14860
  %26 = zext i1 %25 to i8, !dbg !14860
  store i8 %26, i8* %2, align 1, !dbg !14860
  %27 = load i8, i8* %2, align 1, !dbg !14860, !range !512, !noundef !23
  %_10 = trunc i8 %27 to i1, !dbg !14860
  br label %bb12, !dbg !14860

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !14868
  call void @llvm.assume(i1 %_9), !dbg !14869
  br label %bb3, !dbg !14869

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !14853

bb5:                                              ; preds = %bb4, %bb3
  %28 = bitcast { i64*, i64* }* %self to i64**, !dbg !14870
  %self15 = load i64*, i64** %28, align 8, !dbg !14870, !nonnull !23, !noundef !23
  store i64* %self15, i64** %self.dbg.spill16, align 8, !dbg !14870
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill16, metadata !14871, metadata !DIExpression()), !dbg !14875
  %_51 = bitcast i64* %self15 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !14875
  %29 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14870
  %30 = bitcast i64** %29 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !14870
  %_16 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %30, align 8, !dbg !14870
  %_12 = icmp eq { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_51, %_16, !dbg !14870
  br i1 %_12, label %bb6, label %bb7, !dbg !14870

bb7:                                              ; preds = %bb5
  store { i64*, i64* }* %self, { i64*, i64* }** %self.dbg.spill17, align 8, !dbg !14877
  call void @llvm.dbg.declare(metadata { i64*, i64* }** %self.dbg.spill17, metadata !14878, metadata !DIExpression()), !dbg !14886
  br i1 false, label %bb13, label %bb14, !dbg !14886

bb6:                                              ; preds = %bb5
  %31 = bitcast i64** %6 to {}**, !dbg !14888
  store {}* null, {}** %31, align 8, !dbg !14888
  br label %bb8, !dbg !14889

bb8:                                              ; preds = %bb15, %bb6
  %32 = load i64*, i64** %6, align 8, !dbg !14890, !align !584
  ret i64* %32, !dbg !14890

bb13:                                             ; preds = %bb7
  %33 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14886
  %34 = bitcast i64** %33 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !14886
  %_56 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %34, align 8, !dbg !14886
  %self23 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_56 to i8*, !dbg !14886
  store i8* %self23, i8** %self.dbg.spill24, align 8, !dbg !14886
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !14891, metadata !DIExpression()), !dbg !14896
  %35 = getelementptr i8, i8* %self23, i64 -1, !dbg !14896
  store i8* %35, i8** %0, align 8, !dbg !14896
  %_54 = load i8*, i8** %0, align 8, !dbg !14896
  br label %bb16, !dbg !14896

bb14:                                             ; preds = %bb7
  %36 = bitcast { i64*, i64* }* %self to i64**, !dbg !14886
  %self18 = load i64*, i64** %36, align 8, !dbg !14886, !nonnull !23, !noundef !23
  store i64* %self18, i64** %self.dbg.spill19, align 8, !dbg !14886
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill19, metadata !14898, metadata !DIExpression()), !dbg !14902
  %_71 = bitcast i64* %self18 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !14902
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_71, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %old.dbg.spill, align 8, !dbg !14902
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %old.dbg.spill, metadata !14884, metadata !DIExpression()), !dbg !14904
  %37 = bitcast { i64*, i64* }* %self to i64**, !dbg !14904
  %self20 = load i64*, i64** %37, align 8, !dbg !14904, !nonnull !23, !noundef !23
  store i64* %self20, i64** %self.dbg.spill21, align 8, !dbg !14904
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill21, metadata !14905, metadata !DIExpression()), !dbg !14909
  %_72 = bitcast i64* %self20 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !14909
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_72, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill22, align 8, !dbg !14909
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %self.dbg.spill22, metadata !14911, metadata !DIExpression()), !dbg !14918
  %38 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_72, i64 1, !dbg !14918
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %38, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %1, align 8, !dbg !14918
  %_73 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %1, align 8, !dbg !14918
  br label %bb17, !dbg !14918

bb17:                                             ; preds = %bb14
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_73, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill, align 8, !dbg !14918
  call void @llvm.dbg.declare(metadata { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %ptr.dbg.spill, metadata !14919, metadata !DIExpression()), !dbg !14923
  %39 = bitcast i64** %_62 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !14923
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_73, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %39, align 8, !dbg !14923
  %40 = bitcast { i64*, i64* }* %self to i64**, !dbg !14904
  %41 = load i64*, i64** %_62, align 8, !dbg !14904, !nonnull !23, !noundef !23
  store i64* %41, i64** %40, align 8, !dbg !14904
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_71, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %_19, align 8, !dbg !14904
  br label %bb15, !dbg !14886

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %_19, align 8, !dbg !14877
  %42 = bitcast i64** %6 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !14925
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_18, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %42, align 8, !dbg !14925
  br label %bb8, !dbg !14889

bb16:                                             ; preds = %bb13
  %43 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %self, i32 0, i32 1, !dbg !14886
  %44 = bitcast i64** %43 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !14886
  %45 = bitcast i8* %_54 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !14886
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %45, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %44, align 8, !dbg !14886
  %46 = bitcast { i64*, i64* }* %self to i64**, !dbg !14886
  %self25 = load i64*, i64** %46, align 8, !dbg !14886, !nonnull !23, !noundef !23
  store i64* %self25, i64** %self.dbg.spill26, align 8, !dbg !14886
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill26, metadata !14926, metadata !DIExpression()), !dbg !14930
  %_70 = bitcast i64* %self25 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, !dbg !14930
  store { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_70, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %_19, align 8, !dbg !14886
  br label %bb15, !dbg !14886
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hccc9d4a4f7ed0572E"({ i8*, i8* }* align 8 %self) unnamed_addr #0 !dbg !14932 {
start:
  %self.dbg.spill23 = alloca i8*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill20 = alloca i8*, align 8
  %self.dbg.spill19 = alloca i8*, align 8
  %old.dbg.spill = alloca i8*, align 8
  %self.dbg.spill17 = alloca i8*, align 8
  %self.dbg.spill15 = alloca { i8*, i8* }*, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill12 = alloca i8*, align 8
  %data_address.dbg.spill10 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_62 = alloca i8*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !14934, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !14936, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !14950, metadata !DIExpression()), !dbg !14955
  %7 = bitcast { i8*, i8* }* %self to i8**, !dbg !14949
  %self2 = load i8*, i8** %7, align 8, !dbg !14949, !nonnull !23, !noundef !23
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !14949
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !14964, metadata !DIExpression()), !dbg !14968
  store i8* %self2, i8** %self.dbg.spill4, align 8, !dbg !14968
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !14947, metadata !DIExpression()), !dbg !14969
  store i8* %self2, i8** %self.dbg.spill5, align 8, !dbg !14969
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !14970, metadata !DIExpression()), !dbg !14975
  %8 = bitcast {}** %5 to i64*, !dbg !14977
  store i64 0, i64* %8, align 8, !dbg !14977
  %data_address = load {}*, {}** %5, align 8, !dbg !14977
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !14977
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !14940, metadata !DIExpression()), !dbg !14941
  br label %bb9, !dbg !14977

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !14941
  store {}* %data_address, {}** %9, align 8, !dbg !14941
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14941
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !14941
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !14941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !14941
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !14941
  %other = load i8*, i8** %13, align 8, !dbg !14941
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !14941
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !14974, metadata !DIExpression()), !dbg !14975
  %14 = icmp eq i8* %self2, %other, !dbg !14975
  %15 = zext i1 %14 to i8, !dbg !14975
  store i8 %15, i8* %4, align 1, !dbg !14975
  %16 = load i8, i8* %4, align 1, !dbg !14975, !range !512, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !14975
  br label %bb10, !dbg !14975

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !14983
  call void @llvm.assume(i1 %_3), !dbg !14984
  br label %bb1, !dbg !14984

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !14985

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !14986

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !14963
  %self6 = load i8*, i8** %17, align 8, !dbg !14963
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !14963
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !14961, metadata !DIExpression()), !dbg !14987
  store i8* %self6, i8** %self.dbg.spill8, align 8, !dbg !14987
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !14988, metadata !DIExpression()), !dbg !14993
  %18 = bitcast {}** %3 to i64*, !dbg !14995
  store i64 0, i64* %18, align 8, !dbg !14995
  %data_address9 = load {}*, {}** %3, align 8, !dbg !14995
  store {}* %data_address9, {}** %data_address.dbg.spill10, align 8, !dbg !14995
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill10, metadata !14954, metadata !DIExpression()), !dbg !14955
  br label %bb11, !dbg !14995

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !14955
  store {}* %data_address9, {}** %19, align 8, !dbg !14955
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !14955
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !14955
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !14955
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !14955
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !14955
  %other11 = load i8*, i8** %23, align 8, !dbg !14955
  store i8* %other11, i8** %other.dbg.spill12, align 8, !dbg !14955
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill12, metadata !14992, metadata !DIExpression()), !dbg !14993
  %24 = icmp eq i8* %self6, %other11, !dbg !14993
  %25 = zext i1 %24 to i8, !dbg !14993
  store i8 %25, i8* %2, align 1, !dbg !14993
  %26 = load i8, i8* %2, align 1, !dbg !14993, !range !512, !noundef !23
  %_10 = trunc i8 %26 to i1, !dbg !14993
  br label %bb12, !dbg !14993

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !15001
  call void @llvm.assume(i1 %_9), !dbg !15002
  br label %bb3, !dbg !15002

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !14986

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i8*, i8* }* %self to i8**, !dbg !15003
  %self13 = load i8*, i8** %27, align 8, !dbg !15003, !nonnull !23, !noundef !23
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !15003
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !15004, metadata !DIExpression()), !dbg !15008
  %28 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !15003
  %_16 = load i8*, i8** %28, align 8, !dbg !15003
  %_12 = icmp eq i8* %self13, %_16, !dbg !15003
  br i1 %_12, label %bb6, label %bb7, !dbg !15003

bb7:                                              ; preds = %bb5
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill15, align 8, !dbg !15010
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill15, metadata !15011, metadata !DIExpression()), !dbg !15017
  br i1 false, label %bb13, label %bb14, !dbg !15017

bb6:                                              ; preds = %bb5
  %29 = bitcast i8** %6 to {}**, !dbg !15019
  store {}* null, {}** %29, align 8, !dbg !15019
  br label %bb8, !dbg !15020

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i8*, i8** %6, align 8, !dbg !15021, !align !445
  ret i8* %30, !dbg !15021

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !15017
  %_56 = load i8*, i8** %31, align 8, !dbg !15017
  store i8* %_56, i8** %self.dbg.spill21, align 8, !dbg !15017
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !15022, metadata !DIExpression()), !dbg !15027
  %32 = getelementptr i8, i8* %_56, i64 -1, !dbg !15027
  store i8* %32, i8** %0, align 8, !dbg !15027
  %_54 = load i8*, i8** %0, align 8, !dbg !15027
  br label %bb16, !dbg !15027

bb14:                                             ; preds = %bb7
  %33 = bitcast { i8*, i8* }* %self to i8**, !dbg !15017
  %self16 = load i8*, i8** %33, align 8, !dbg !15017, !nonnull !23, !noundef !23
  store i8* %self16, i8** %self.dbg.spill17, align 8, !dbg !15017
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill17, metadata !15029, metadata !DIExpression()), !dbg !15033
  store i8* %self16, i8** %old.dbg.spill, align 8, !dbg !15033
  call void @llvm.dbg.declare(metadata i8** %old.dbg.spill, metadata !15015, metadata !DIExpression()), !dbg !15035
  %34 = bitcast { i8*, i8* }* %self to i8**, !dbg !15035
  %self18 = load i8*, i8** %34, align 8, !dbg !15035, !nonnull !23, !noundef !23
  store i8* %self18, i8** %self.dbg.spill19, align 8, !dbg !15035
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill19, metadata !15036, metadata !DIExpression()), !dbg !15040
  store i8* %self18, i8** %self.dbg.spill20, align 8, !dbg !15040
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill20, metadata !15042, metadata !DIExpression()), !dbg !15047
  %35 = getelementptr inbounds i8, i8* %self18, i64 1, !dbg !15047
  store i8* %35, i8** %1, align 8, !dbg !15047
  %_73 = load i8*, i8** %1, align 8, !dbg !15047
  br label %bb17, !dbg !15047

bb17:                                             ; preds = %bb14
  store i8* %_73, i8** %ptr.dbg.spill, align 8, !dbg !15047
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !15048, metadata !DIExpression()), !dbg !15052
  store i8* %_73, i8** %_62, align 8, !dbg !15052
  %36 = bitcast { i8*, i8* }* %self to i8**, !dbg !15035
  %37 = load i8*, i8** %_62, align 8, !dbg !15035, !nonnull !23, !noundef !23
  store i8* %37, i8** %36, align 8, !dbg !15035
  store i8* %self16, i8** %_19, align 8, !dbg !15035
  br label %bb15, !dbg !15017

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i8*, i8** %_19, align 8, !dbg !15010
  store i8* %_18, i8** %6, align 8, !dbg !15054
  br label %bb8, !dbg !15020

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !15017
  store i8* %_54, i8** %38, align 8, !dbg !15017
  %39 = bitcast { i8*, i8* }* %self to i8**, !dbg !15017
  %self22 = load i8*, i8** %39, align 8, !dbg !15017, !nonnull !23, !noundef !23
  store i8* %self22, i8** %self.dbg.spill23, align 8, !dbg !15017
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !15055, metadata !DIExpression()), !dbg !15059
  store i8* %self22, i8** %_19, align 8, !dbg !15017
  br label %bb15, !dbg !15017
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 4 i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he0f6905c7078f1f0E"({ i32*, i32* }* align 8 %self) unnamed_addr #0 !dbg !15061 {
start:
  %self.dbg.spill26 = alloca i32*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %self.dbg.spill22 = alloca i32*, align 8
  %self.dbg.spill21 = alloca i32*, align 8
  %old.dbg.spill = alloca i32*, align 8
  %self.dbg.spill19 = alloca i32*, align 8
  %self.dbg.spill17 = alloca { i32*, i32* }*, align 8
  %self.dbg.spill16 = alloca i32*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill14 = alloca i8*, align 8
  %data_address.dbg.spill12 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill8 = alloca i32*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i32*, i32* }*, align 8
  %_62 = alloca i32*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill, metadata !15076, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !15078, metadata !DIExpression()), !dbg !15083
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !15094, metadata !DIExpression()), !dbg !15099
  %7 = bitcast { i32*, i32* }* %self to i32**, !dbg !15093
  %self2 = load i32*, i32** %7, align 8, !dbg !15093, !nonnull !23, !noundef !23
  store i32* %self2, i32** %self.dbg.spill3, align 8, !dbg !15093
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !15108, metadata !DIExpression()), !dbg !15114
  store i32* %self2, i32** %self.dbg.spill4, align 8, !dbg !15114
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !15091, metadata !DIExpression()), !dbg !15115
  %self5 = bitcast i32* %self2 to i8*, !dbg !15115
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !15115
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !15116, metadata !DIExpression()), !dbg !15121
  %8 = bitcast {}** %5 to i64*, !dbg !15123
  store i64 0, i64* %8, align 8, !dbg !15123
  %data_address = load {}*, {}** %5, align 8, !dbg !15123
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !15123
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !15082, metadata !DIExpression()), !dbg !15083
  br label %bb9, !dbg !15123

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !15083
  store {}* %data_address, {}** %9, align 8, !dbg !15083
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !15083
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !15083
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !15083
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !15083
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !15083
  %other = load i8*, i8** %13, align 8, !dbg !15083
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !15083
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !15120, metadata !DIExpression()), !dbg !15121
  %14 = icmp eq i8* %self5, %other, !dbg !15121
  %15 = zext i1 %14 to i8, !dbg !15121
  store i8 %15, i8* %4, align 1, !dbg !15121
  %16 = load i8, i8* %4, align 1, !dbg !15121, !range !512, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !15121
  br label %bb10, !dbg !15121

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !15129
  call void @llvm.assume(i1 %_3), !dbg !15130
  br label %bb1, !dbg !15130

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !15131

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !15132

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !15107
  %self7 = load i32*, i32** %17, align 8, !dbg !15107
  store i32* %self7, i32** %self.dbg.spill8, align 8, !dbg !15107
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill8, metadata !15105, metadata !DIExpression()), !dbg !15133
  %self9 = bitcast i32* %self7 to i8*, !dbg !15133
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !15133
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !15134, metadata !DIExpression()), !dbg !15139
  %18 = bitcast {}** %3 to i64*, !dbg !15141
  store i64 0, i64* %18, align 8, !dbg !15141
  %data_address11 = load {}*, {}** %3, align 8, !dbg !15141
  store {}* %data_address11, {}** %data_address.dbg.spill12, align 8, !dbg !15141
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill12, metadata !15098, metadata !DIExpression()), !dbg !15099
  br label %bb11, !dbg !15141

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !15099
  store {}* %data_address11, {}** %19, align 8, !dbg !15099
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !15099
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !15099
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !15099
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !15099
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !15099
  %other13 = load i8*, i8** %23, align 8, !dbg !15099
  store i8* %other13, i8** %other.dbg.spill14, align 8, !dbg !15099
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill14, metadata !15138, metadata !DIExpression()), !dbg !15139
  %24 = icmp eq i8* %self9, %other13, !dbg !15139
  %25 = zext i1 %24 to i8, !dbg !15139
  store i8 %25, i8* %2, align 1, !dbg !15139
  %26 = load i8, i8* %2, align 1, !dbg !15139, !range !512, !noundef !23
  %_10 = trunc i8 %26 to i1, !dbg !15139
  br label %bb12, !dbg !15139

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !15147
  call void @llvm.assume(i1 %_9), !dbg !15148
  br label %bb3, !dbg !15148

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !15132

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i32*, i32* }* %self to i32**, !dbg !15149
  %self15 = load i32*, i32** %27, align 8, !dbg !15149, !nonnull !23, !noundef !23
  store i32* %self15, i32** %self.dbg.spill16, align 8, !dbg !15149
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill16, metadata !15150, metadata !DIExpression()), !dbg !15154
  %28 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !15149
  %_16 = load i32*, i32** %28, align 8, !dbg !15149
  %_12 = icmp eq i32* %self15, %_16, !dbg !15149
  br i1 %_12, label %bb6, label %bb7, !dbg !15149

bb7:                                              ; preds = %bb5
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill17, align 8, !dbg !15156
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill17, metadata !15157, metadata !DIExpression()), !dbg !15165
  br i1 false, label %bb13, label %bb14, !dbg !15165

bb6:                                              ; preds = %bb5
  %29 = bitcast i32** %6 to {}**, !dbg !15167
  store {}* null, {}** %29, align 8, !dbg !15167
  br label %bb8, !dbg !15168

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i32*, i32** %6, align 8, !dbg !15169, !align !13942
  ret i32* %30, !dbg !15169

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !15165
  %_56 = load i32*, i32** %31, align 8, !dbg !15165
  %self23 = bitcast i32* %_56 to i8*, !dbg !15165
  store i8* %self23, i8** %self.dbg.spill24, align 8, !dbg !15165
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !15170, metadata !DIExpression()), !dbg !15175
  %32 = getelementptr i8, i8* %self23, i64 -1, !dbg !15175
  store i8* %32, i8** %0, align 8, !dbg !15175
  %_54 = load i8*, i8** %0, align 8, !dbg !15175
  br label %bb16, !dbg !15175

bb14:                                             ; preds = %bb7
  %33 = bitcast { i32*, i32* }* %self to i32**, !dbg !15165
  %self18 = load i32*, i32** %33, align 8, !dbg !15165, !nonnull !23, !noundef !23
  store i32* %self18, i32** %self.dbg.spill19, align 8, !dbg !15165
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill19, metadata !15177, metadata !DIExpression()), !dbg !15181
  store i32* %self18, i32** %old.dbg.spill, align 8, !dbg !15181
  call void @llvm.dbg.declare(metadata i32** %old.dbg.spill, metadata !15163, metadata !DIExpression()), !dbg !15183
  %34 = bitcast { i32*, i32* }* %self to i32**, !dbg !15183
  %self20 = load i32*, i32** %34, align 8, !dbg !15183, !nonnull !23, !noundef !23
  store i32* %self20, i32** %self.dbg.spill21, align 8, !dbg !15183
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill21, metadata !15184, metadata !DIExpression()), !dbg !15188
  store i32* %self20, i32** %self.dbg.spill22, align 8, !dbg !15188
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill22, metadata !15190, metadata !DIExpression()), !dbg !15197
  %35 = getelementptr inbounds i32, i32* %self20, i64 1, !dbg !15197
  store i32* %35, i32** %1, align 8, !dbg !15197
  %_73 = load i32*, i32** %1, align 8, !dbg !15197
  br label %bb17, !dbg !15197

bb17:                                             ; preds = %bb14
  store i32* %_73, i32** %ptr.dbg.spill, align 8, !dbg !15197
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !15198, metadata !DIExpression()), !dbg !15202
  store i32* %_73, i32** %_62, align 8, !dbg !15202
  %36 = bitcast { i32*, i32* }* %self to i32**, !dbg !15183
  %37 = load i32*, i32** %_62, align 8, !dbg !15183, !nonnull !23, !noundef !23
  store i32* %37, i32** %36, align 8, !dbg !15183
  store i32* %self18, i32** %_19, align 8, !dbg !15183
  br label %bb15, !dbg !15165

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i32*, i32** %_19, align 8, !dbg !15156
  store i32* %_18, i32** %6, align 8, !dbg !15204
  br label %bb8, !dbg !15168

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !15165
  %39 = bitcast i8* %_54 to i32*, !dbg !15165
  store i32* %39, i32** %38, align 8, !dbg !15165
  %40 = bitcast { i32*, i32* }* %self to i32**, !dbg !15165
  %self25 = load i32*, i32** %40, align 8, !dbg !15165, !nonnull !23, !noundef !23
  store i32* %self25, i32** %self.dbg.spill26, align 8, !dbg !15165
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill26, metadata !15205, metadata !DIExpression()), !dbg !15209
  store i32* %self25, i32** %_19, align 8, !dbg !15165
  br label %bb15, !dbg !15165
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h36f4baea55f29ac9E"({ i8*, i8* }* align 8 %self, i8* align 1 %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15211 {
start:
  %x.dbg.spill = alloca i8*, align 8
  %1 = alloca { i8*, i32 }, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %2 = alloca i64, align 8
  %self.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill9 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %self.dbg.spill3 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_28 = alloca i8*, align 8
  %_22 = alloca i8*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %7 = alloca { i64, i64 }, align 8
  %predicate = alloca i8*, align 8
  store i8* %0, i8** %predicate, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !15215, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.declare(metadata i8** %predicate, metadata !15216, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15217, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15225, metadata !DIExpression()), !dbg !15234
  %8 = bitcast { i8*, i8* }* %self to i8**, !dbg !15235
  %start1 = load i8*, i8** %8, align 8, !dbg !15235, !nonnull !23, !noundef !23
  store i8* %start1, i8** %start.dbg.spill, align 8, !dbg !15235
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !15219, metadata !DIExpression()), !dbg !15236
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !15237
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !15221, metadata !DIExpression()), !dbg !15243
  br i1 false, label %bb1, label %bb2, !dbg !15243

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !15243
  %self6 = load i8*, i8** %9, align 8, !dbg !15243
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !15243
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !15244, metadata !DIExpression()), !dbg !15248
  %10 = bitcast i64* %3 to i8**, !dbg !15248
  store i8* %self6, i8** %10, align 8, !dbg !15248
  %self8 = load i64, i64* %3, align 8, !dbg !15248
  store i64 %self8, i64* %self.dbg.spill9, align 8, !dbg !15248
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill9, metadata !15250, metadata !DIExpression()), !dbg !15255
  br label %bb18, !dbg !15248

bb2:                                              ; preds = %start
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !15243
  %self2 = load i8*, i8** %11, align 8, !dbg !15243
  store i8* %self2, i8** %self.dbg.spill3, align 8, !dbg !15243
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill3, metadata !15256, metadata !DIExpression()), !dbg !15260
  %12 = bitcast i64* %6 to i8**, !dbg !15260
  store i8* %self2, i8** %12, align 8, !dbg !15260
  %_14 = load i64, i64* %6, align 8, !dbg !15260
  br label %bb20, !dbg !15260

bb20:                                             ; preds = %bb2
  store i8* %start1, i8** %self.dbg.spill4, align 8, !dbg !15243
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill4, metadata !15262, metadata !DIExpression()), !dbg !15266
  store i8* %start1, i8** %self.dbg.spill5, align 8, !dbg !15266
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !15268, metadata !DIExpression()), !dbg !15272
  %13 = bitcast i64* %5 to i8**, !dbg !15272
  store i8* %start1, i8** %13, align 8, !dbg !15272
  %_16 = load i64, i64* %5, align 8, !dbg !15272
  br label %bb21, !dbg !15272

bb21:                                             ; preds = %bb20
  %14 = sub nuw i64 %_14, %_16, !dbg !15243
  store i64 %14, i64* %4, align 8, !dbg !15243
  %diff = load i64, i64* %4, align 8, !dbg !15243
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !15243
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !15223, metadata !DIExpression()), !dbg !15273
  br label %bb3, !dbg !15243

bb3:                                              ; preds = %bb21
  %15 = udiv exact i64 %diff, 1, !dbg !15273
  store i64 %15, i64* %n, align 8, !dbg !15273
  br label %bb4, !dbg !15273

bb4:                                              ; preds = %bb3
  br label %bb5, !dbg !15243

bb5:                                              ; preds = %bb19, %bb4
  store i64 0, i64* %i, align 8, !dbg !15274
  br label %bb6, !dbg !15275

bb18:                                             ; preds = %bb1
  store i8* %start1, i8** %self.dbg.spill10, align 8, !dbg !15243
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !15276, metadata !DIExpression()), !dbg !15280
  store i8* %start1, i8** %self.dbg.spill11, align 8, !dbg !15280
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill11, metadata !15282, metadata !DIExpression()), !dbg !15286
  %16 = bitcast i64* %2 to i8**, !dbg !15286
  store i8* %start1, i8** %16, align 8, !dbg !15286
  %rhs = load i64, i64* %2, align 8, !dbg !15286
  store i64 %rhs, i64* %rhs.dbg.spill, align 8, !dbg !15286
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !15254, metadata !DIExpression()), !dbg !15255
  br label %bb19, !dbg !15286

bb19:                                             ; preds = %bb18
  %17 = sub i64 %self8, %rhs, !dbg !15255
  store i64 %17, i64* %n, align 8, !dbg !15255
  br label %bb5, !dbg !15243

bb6:                                              ; preds = %bb13, %bb5
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %18 = invoke align 1 i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hccc9d4a4f7ed0572E"({ i8*, i8* }* align 8 %self)
          to label %bb7 unwind label %cleanup, !dbg !15287

bb16:                                             ; preds = %cleanup
  br label %bb17, !dbg !15288

cleanup:                                          ; preds = %panic, %bb8, %bb6
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb16

bb7:                                              ; preds = %bb6
  store i8* %18, i8** %_22, align 8, !dbg !15287
  %24 = bitcast i8** %_22 to {}**, !dbg !15289
  %25 = load {}*, {}** %24, align 8, !dbg !15289
  %26 = icmp eq {}* %25, null, !dbg !15289
  %_24 = select i1 %26, i64 0, i64 1, !dbg !15289
  %27 = icmp eq i64 %_24, 1, !dbg !15289
  br i1 %27, label %bb8, label %bb14, !dbg !15289

bb8:                                              ; preds = %bb7
  %x = load i8*, i8** %_22, align 8, !dbg !15290, !nonnull !23, !align !445, !noundef !23
  store i8* %x, i8** %x.dbg.spill, align 8, !dbg !15290
  call void @llvm.dbg.declare(metadata i8** %x.dbg.spill, metadata !15227, metadata !DIExpression()), !dbg !15290
  store i8* %x, i8** %_28, align 8, !dbg !15291
  %28 = load i8*, i8** %_28, align 8, !dbg !15291, !nonnull !23, !align !445, !noundef !23
; invoke core::slice::memchr::memchr::{{closure}}
  %_26 = invoke zeroext i1 @"_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h7f548bbf06692784E"(i8** align 8 %predicate, i8* align 1 %28)
          to label %bb9 unwind label %cleanup, !dbg !15291

bb14:                                             ; preds = %bb7
  %29 = bitcast { i64, i64 }* %7 to i64*, !dbg !15292
  store i64 0, i64* %29, align 8, !dbg !15292
  br label %bb15, !dbg !15288

bb15:                                             ; preds = %bb11, %bb14
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !15293
  %31 = load i64, i64* %30, align 8, !dbg !15293, !range !3441, !noundef !23
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !15293
  %33 = load i64, i64* %32, align 8, !dbg !15293
  %34 = insertvalue { i64, i64 } undef, i64 %31, 0, !dbg !15293
  %35 = insertvalue { i64, i64 } %34, i64 %33, 1, !dbg !15293
  ret { i64, i64 } %35, !dbg !15293

bb9:                                              ; preds = %bb8
  br i1 %_26, label %bb10, label %bb12, !dbg !15291

bb12:                                             ; preds = %bb9
  %36 = load i64, i64* %i, align 8, !dbg !15294
  %37 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %36, i64 1), !dbg !15294
  %_35.0 = extractvalue { i64, i1 } %37, 0, !dbg !15294
  %_35.1 = extractvalue { i64, i1 } %37, 1, !dbg !15294
  %38 = call i1 @llvm.expect.i1(i1 %_35.1, i1 false), !dbg !15294
  br i1 %38, label %panic, label %bb13, !dbg !15294

bb10:                                             ; preds = %bb9
  %_32 = load i64, i64* %i, align 8, !dbg !15295
  %_33 = load i64, i64* %n, align 8, !dbg !15296
  %_31 = icmp ult i64 %_32, %_33, !dbg !15295
  call void @llvm.assume(i1 %_31), !dbg !15297
  br label %bb11, !dbg !15297

bb11:                                             ; preds = %bb10
  %_34 = load i64, i64* %i, align 8, !dbg !15298
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !15299
  store i64 %_34, i64* %39, align 8, !dbg !15299
  %40 = bitcast { i64, i64 }* %7 to i64*, !dbg !15299
  store i64 1, i64* %40, align 8, !dbg !15299
  br label %bb15, !dbg !15288

bb13:                                             ; preds = %bb12
  store i64 %_35.0, i64* %i, align 8, !dbg !15294
  br label %bb6, !dbg !15275

panic:                                            ; preds = %bb12
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc567 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !15294

unreachable:                                      ; preds = %panic
  unreachable

bb17:                                             ; preds = %bb16
  %41 = bitcast { i8*, i32 }* %1 to i8**, !dbg !15300
  %42 = load i8*, i8** %41, align 8, !dbg !15300
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !15300
  %44 = load i32, i32* %43, align 8, !dbg !15300
  %45 = insertvalue { i8*, i32 } undef, i8* %42, 0, !dbg !15300
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1, !dbg !15300
  resume { i8*, i32 } %46, !dbg !15300
}

; <core::str::pattern::CharArraySearcher<_> as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN95_$LT$core..str..pattern..CharArraySearcher$LT$_$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h54af7edd65943b5eE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharArraySearcher<2>"* align 8 %self) unnamed_addr #0 !dbg !15301 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharArraySearcher<2>"*, align 8
  store %"core::str::pattern::CharArraySearcher<2>"* %self, %"core::str::pattern::CharArraySearcher<2>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharArraySearcher<2>"** %self.dbg.spill, metadata !15307, metadata !DIExpression()), !dbg !15308
  %_2 = bitcast %"core::str::pattern::CharArraySearcher<2>"* %self to %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"*, !dbg !15309
; call core::str::pattern::Searcher::next_match
  call void @_ZN4core3str7pattern8Searcher10next_match17hf80201f6cbe5aab5E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* align 8 %_2), !dbg !15309
  br label %bb1, !dbg !15309

bb1:                                              ; preds = %start
  ret void, !dbg !15310
}

; <core::str::pattern::CharArraySearcher<_> as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { [0 x i8]*, i64 } @"_ZN95_$LT$core..str..pattern..CharArraySearcher$LT$_$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hd2ef0c83d6342879E"(%"core::str::pattern::CharArraySearcher<2>"* align 8 %self) unnamed_addr #0 !dbg !15311 {
start:
  %self.dbg.spill2 = alloca %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::CharArraySearcher<2>"*, align 8
  store %"core::str::pattern::CharArraySearcher<2>"* %self, %"core::str::pattern::CharArraySearcher<2>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharArraySearcher<2>"** %self.dbg.spill, metadata !15316, metadata !DIExpression()), !dbg !15317
  %self1 = bitcast %"core::str::pattern::CharArraySearcher<2>"* %self to %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"*, !dbg !15318
  store %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %self1, %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"** %self.dbg.spill2, align 8, !dbg !15318
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"** %self.dbg.spill2, metadata !15319, metadata !DIExpression()), !dbg !15326
  %0 = bitcast %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %self1 to { [0 x i8]*, i64 }*, !dbg !15326
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !15326
  %2 = load [0 x i8]*, [0 x i8]** %1, align 8, !dbg !15326, !nonnull !23, !align !445, !noundef !23
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !15326
  %4 = load i64, i64* %3, align 8, !dbg !15326
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !15327
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %4, 1, !dbg !15327
  ret { [0 x i8]*, i64 } %6, !dbg !15327
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h08ddf439b62a3decE"(%"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* sret(%"core::str::pattern::MultiCharEqSearcher<[char; 2]>") %0, i64 %1, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15328 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { i8*, i8* }, align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
  %_4 = alloca [2 x i32], align 4
  %4 = alloca i64, align 8
  %self = alloca %"core::str::pattern::MultiCharEqPattern<[char; 2]>", align 4
  store i64 %1, i64* %4, align 8
  %5 = bitcast %"core::str::pattern::MultiCharEqPattern<[char; 2]>"* %self to i8*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false)
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqPattern<[char; 2]>"* %self, metadata !15336, metadata !DIExpression()), !dbg !15338
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %7, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %8, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !15337, metadata !DIExpression()), !dbg !15339
  %9 = bitcast %"core::str::pattern::MultiCharEqPattern<[char; 2]>"* %self to [2 x i32]*, !dbg !15340
  %10 = bitcast [2 x i32]* %_4 to i8*, !dbg !15340
  %11 = bitcast [2 x i32]* %9 to i8*, !dbg !15340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 8, i1 false), !dbg !15340
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !15341
  store [0 x i8]* %haystack.0, [0 x i8]** %12, align 8, !dbg !15341
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !15341
  store i64 %haystack.1, i64* %13, align 8, !dbg !15341
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !15342, metadata !DIExpression()), !dbg !15348
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !15348
  store [0 x i8]* %haystack.0, [0 x i8]** %14, align 8, !dbg !15348
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !15348
  store i64 %haystack.1, i64* %15, align 8, !dbg !15348
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !15349, metadata !DIExpression()), !dbg !15355
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !15355
  store [0 x i8]* %haystack.0, [0 x i8]** %16, align 8, !dbg !15355
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !15355
  store i64 %haystack.1, i64* %17, align 8, !dbg !15355
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !15357, metadata !DIExpression()), !dbg !15361
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !15361
  store [0 x i8]* %haystack.0, [0 x i8]** %18, align 8, !dbg !15361
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !15361
  store i64 %haystack.1, i64* %19, align 8, !dbg !15361
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !15361
  %_11.0 = load [0 x i8]*, [0 x i8]** %20, align 8, !dbg !15361, !nonnull !23, !align !445, !noundef !23
  %21 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !15361
  %_11.1 = load i64, i64* %21, align 8, !dbg !15361
  br label %bb3, !dbg !15361

bb3:                                              ; preds = %start
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !15355
  store [0 x i8]* %_11.0, [0 x i8]** %22, align 8, !dbg !15355
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !15355
  store i64 %_11.1, i64* %23, align 8, !dbg !15355
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !15363, metadata !DIExpression()), !dbg !15367
; invoke core::slice::iter::Iter<T>::new
  %24 = invoke { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h09fc45be399bae52E"([0 x i8]* align 1 %_11.0, i64 %_11.1)
          to label %bb4 unwind label %cleanup, !dbg !15367

bb1:                                              ; preds = %cleanup
  br label %bb2, !dbg !15368

cleanup:                                          ; preds = %bb3
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb1

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { i8*, i8* } %24, 0, !dbg !15367
  %_9.1 = extractvalue { i8*, i8* } %24, 1, !dbg !15367
  %30 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 0, !dbg !15355
  store i8* %_9.0, i8** %30, align 8, !dbg !15355
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 1, !dbg !15355
  store i8* %_9.1, i8** %31, align 8, !dbg !15355
  %32 = bitcast %"core::str::iter::CharIndices"* %_5 to i64*, !dbg !15348
  store i64 0, i64* %32, align 8, !dbg !15348
  %33 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %_5, i32 0, i32 1, !dbg !15348
  %34 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 0, !dbg !15348
  %35 = load i8*, i8** %34, align 8, !dbg !15348, !nonnull !23, !noundef !23
  %36 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 1, !dbg !15348
  %37 = load i8*, i8** %36, align 8, !dbg !15348
  %38 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %33, i32 0, i32 0, !dbg !15348
  store i8* %35, i8** %38, align 8, !dbg !15348
  %39 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %33, i32 0, i32 1, !dbg !15348
  store i8* %37, i8** %39, align 8, !dbg !15348
  %40 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[char; 2]>", %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %0, i32 0, i32 2, !dbg !15369
  %41 = bitcast [2 x i32]* %40 to i8*, !dbg !15369
  %42 = bitcast [2 x i32]* %_4 to i8*, !dbg !15369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 4 %42, i64 8, i1 false), !dbg !15369
  %43 = bitcast %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %0 to { [0 x i8]*, i64 }*, !dbg !15369
  %44 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 0, !dbg !15369
  store [0 x i8]* %haystack.0, [0 x i8]** %44, align 8, !dbg !15369
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %43, i32 0, i32 1, !dbg !15369
  store i64 %haystack.1, i64* %45, align 8, !dbg !15369
  %46 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[char; 2]>", %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %0, i32 0, i32 1, !dbg !15369
  %47 = bitcast %"core::str::iter::CharIndices"* %46 to i8*, !dbg !15369
  %48 = bitcast %"core::str::iter::CharIndices"* %_5 to i8*, !dbg !15369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false), !dbg !15369
  ret void, !dbg !15370

bb2:                                              ; preds = %bb1
  %49 = bitcast { i8*, i32 }* %2 to i8**, !dbg !15371
  %50 = load i8*, i8** %49, align 8, !dbg !15371
  %51 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !15371
  %52 = load i32, i32* %51, align 8, !dbg !15371
  %53 = insertvalue { i8*, i32 } undef, i8* %50, 0, !dbg !15371
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1, !dbg !15371
  resume { i8*, i32 } %54, !dbg !15371
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h91860eee0c889734E"(%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* sret(%"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>") %0, [0 x i8]* align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15372 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %self.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill3 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill2 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %haystack.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>", align 1
  %_7 = alloca { i8*, i8* }, align 8
  %_5 = alloca %"core::str::iter::CharIndices", align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self.dbg.spill, metadata !15379, metadata !DIExpression()), !dbg !15381
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 0
  store [0 x i8]* %haystack.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %haystack.dbg.spill, i32 0, i32 1
  store i64 %haystack.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %haystack.dbg.spill, metadata !15380, metadata !DIExpression()), !dbg !15382
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !15383
  store [0 x i8]* %haystack.0, [0 x i8]** %5, align 8, !dbg !15383
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !15383
  store i64 %haystack.1, i64* %6, align 8, !dbg !15383
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill1, metadata !15384, metadata !DIExpression()), !dbg !15388
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !15388
  store [0 x i8]* %haystack.0, [0 x i8]** %7, align 8, !dbg !15388
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !15388
  store i64 %haystack.1, i64* %8, align 8, !dbg !15388
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill2, metadata !15389, metadata !DIExpression()), !dbg !15393
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !15393
  store [0 x i8]* %haystack.0, [0 x i8]** %9, align 8, !dbg !15393
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !15393
  store i64 %haystack.1, i64* %10, align 8, !dbg !15393
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill3, metadata !15395, metadata !DIExpression()), !dbg !15399
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !15399
  store [0 x i8]* %haystack.0, [0 x i8]** %11, align 8, !dbg !15399
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !15399
  store i64 %haystack.1, i64* %12, align 8, !dbg !15399
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !15399
  %_11.0 = load [0 x i8]*, [0 x i8]** %13, align 8, !dbg !15399, !nonnull !23, !align !445, !noundef !23
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !15399
  %_11.1 = load i64, i64* %14, align 8, !dbg !15399
  br label %bb3, !dbg !15399

bb3:                                              ; preds = %start
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !15393
  store [0 x i8]* %_11.0, [0 x i8]** %15, align 8, !dbg !15393
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !15393
  store i64 %_11.1, i64* %16, align 8, !dbg !15393
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill4, metadata !15401, metadata !DIExpression()), !dbg !15405
; invoke core::slice::iter::Iter<T>::new
  %17 = invoke { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h09fc45be399bae52E"([0 x i8]* align 1 %_11.0, i64 %_11.1)
          to label %bb4 unwind label %cleanup, !dbg !15405

bb1:                                              ; preds = %cleanup
  br label %bb2, !dbg !15406

cleanup:                                          ; preds = %bb3
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb1

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { i8*, i8* } %17, 0, !dbg !15405
  %_9.1 = extractvalue { i8*, i8* } %17, 1, !dbg !15405
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 0, !dbg !15393
  store i8* %_9.0, i8** %23, align 8, !dbg !15393
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 1, !dbg !15393
  store i8* %_9.1, i8** %24, align 8, !dbg !15393
  %25 = bitcast %"core::str::iter::CharIndices"* %_5 to i64*, !dbg !15388
  store i64 0, i64* %25, align 8, !dbg !15388
  %26 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %_5, i32 0, i32 1, !dbg !15388
  %27 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 0, !dbg !15388
  %28 = load i8*, i8** %27, align 8, !dbg !15388, !nonnull !23, !noundef !23
  %29 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_7, i32 0, i32 1, !dbg !15388
  %30 = load i8*, i8** %29, align 8, !dbg !15388
  %31 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %26, i32 0, i32 0, !dbg !15388
  store i8* %28, i8** %31, align 8, !dbg !15388
  %32 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %26, i32 0, i32 1, !dbg !15388
  store i8* %30, i8** %32, align 8, !dbg !15388
  %33 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %0 to %"[closure@core::str::<impl str>::trim::{closure#0}]"*, !dbg !15407
  %34 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %0 to { [0 x i8]*, i64 }*, !dbg !15407
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 0, !dbg !15407
  store [0 x i8]* %haystack.0, [0 x i8]** %35, align 8, !dbg !15407
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %34, i32 0, i32 1, !dbg !15407
  store i64 %haystack.1, i64* %36, align 8, !dbg !15407
  %37 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %0, i32 0, i32 2, !dbg !15407
  %38 = bitcast %"core::str::iter::CharIndices"* %37 to i8*, !dbg !15407
  %39 = bitcast %"core::str::iter::CharIndices"* %_5 to i8*, !dbg !15407
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false), !dbg !15407
  ret void, !dbg !15408

bb2:                                              ; preds = %bb1
  %40 = bitcast { i8*, i32 }* %1 to i8**, !dbg !15409
  %41 = load i8*, i8** %40, align 8, !dbg !15409
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !15409
  %43 = load i32, i32* %42, align 8, !dbg !15409
  %44 = insertvalue { i8*, i32 } undef, i8* %41, 0, !dbg !15409
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1, !dbg !15409
  resume { i8*, i32 } %45, !dbg !15409
}

; <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h529587772334d22fE"(i32 %ch) unnamed_addr #0 !dbg !15410 {
start:
  %0 = alloca i32, align 4
  %i.dbg.spill1 = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{closure#0}]"* %_1.dbg.spill, metadata !15415, metadata !DIExpression()), !dbg !15416
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !15414, metadata !DIExpression()), !dbg !15417
  store i32 %ch, i32* %i.dbg.spill, align 4, !dbg !15418
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !15419, metadata !DIExpression()), !dbg !15423
  store i32 %ch, i32* %i.dbg.spill1, align 4, !dbg !15423
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill1, metadata !15425, metadata !DIExpression()), !dbg !15429
  store i32 %ch, i32* %0, align 4, !dbg !15429
  %1 = load i32, i32* %0, align 4, !dbg !15429, !range !667, !noundef !23
  br label %bb1, !dbg !15429

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !15431
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h10d2da9364c3a8c8E"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* align 8 %self) unnamed_addr #0 !dbg !15432 {
start:
  %char_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %diff.dbg.spill18 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %self.dbg.spill15 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %size.dbg.spill12 = alloca i64, align 8
  %start.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill9 = alloca { i8*, i8* }*, align 8
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %pre_len.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %s.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"*, align 8
  %_5 = alloca { i64, i32 }, align 8
  store %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"** %self.dbg.spill, metadata !15436, metadata !DIExpression()), !dbg !15448
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[char; 2]>", %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %self, i32 0, i32 1, !dbg !15449
  store %"core::str::iter::CharIndices"* %s, %"core::str::iter::CharIndices"** %s.dbg.spill, align 8, !dbg !15449
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %s.dbg.spill, metadata !15437, metadata !DIExpression()), !dbg !15450
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !15451
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !15451
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !15452, metadata !DIExpression()), !dbg !15465
  %9 = bitcast { i8*, i8* }* %self1 to i8**, !dbg !15465
  %start3 = load i8*, i8** %9, align 8, !dbg !15465, !nonnull !23, !noundef !23
  store i8* %start3, i8** %start.dbg.spill, align 8, !dbg !15465
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !15456, metadata !DIExpression()), !dbg !15466
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !15467
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !15459, metadata !DIExpression()), !dbg !15473
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self1, i32 0, i32 1, !dbg !15473
  %self4 = load i8*, i8** %10, align 8, !dbg !15473
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !15473
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !15474, metadata !DIExpression()), !dbg !15478
  %11 = bitcast i64* %8 to i8**, !dbg !15478
  store i8* %self4, i8** %11, align 8, !dbg !15478
  %_35 = load i64, i64* %8, align 8, !dbg !15478
  br label %bb11, !dbg !15478

bb11:                                             ; preds = %start
  store i8* %start3, i8** %self.dbg.spill6, align 8, !dbg !15473
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !15480, metadata !DIExpression()), !dbg !15484
  store i8* %start3, i8** %self.dbg.spill7, align 8, !dbg !15484
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !15486, metadata !DIExpression()), !dbg !15490
  %12 = bitcast i64* %7 to i8**, !dbg !15490
  store i8* %start3, i8** %12, align 8, !dbg !15490
  %_37 = load i64, i64* %7, align 8, !dbg !15490
  br label %bb12, !dbg !15490

bb12:                                             ; preds = %bb11
  %13 = sub nuw i64 %_35, %_37, !dbg !15473
  store i64 %13, i64* %6, align 8, !dbg !15473
  %diff = load i64, i64* %6, align 8, !dbg !15473
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !15473
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !15462, metadata !DIExpression()), !dbg !15491
  br label %bb9, !dbg !15473

bb9:                                              ; preds = %bb12
  %14 = udiv exact i64 %diff, 1, !dbg !15491
  store i64 %14, i64* %5, align 8, !dbg !15491
  %pre_len = load i64, i64* %5, align 8, !dbg !15491
  store i64 %pre_len, i64* %pre_len.dbg.spill, align 8, !dbg !15491
  call void @llvm.dbg.declare(metadata i64* %pre_len.dbg.spill, metadata !15439, metadata !DIExpression()), !dbg !15492
  br label %bb10, !dbg !15491

bb10:                                             ; preds = %bb9
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %15 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee517ea8e92987d3E"(%"core::str::iter::CharIndices"* align 8 %s), !dbg !15493
  store { i64, i32 } %15, { i64, i32 }* %_5, align 8, !dbg !15493
  br label %bb1, !dbg !15493

bb1:                                              ; preds = %bb10
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !15494
  %17 = load i32, i32* %16, align 8, !dbg !15494, !range !582, !noundef !23
  %18 = sub i32 %17, 1114112, !dbg !15494
  %19 = icmp eq i32 %18, 0, !dbg !15494
  %_7 = select i1 %19, i64 0, i64 1, !dbg !15494
  %20 = icmp eq i64 %_7, 1, !dbg !15494
  br i1 %20, label %bb2, label %bb6, !dbg !15494

bb2:                                              ; preds = %bb1
  %21 = bitcast { i64, i32 }* %_5 to i64*, !dbg !15495
  %i = load i64, i64* %21, align 8, !dbg !15495
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !15495
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !15441, metadata !DIExpression()), !dbg !15495
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !15496
  %c = load i32, i32* %22, align 8, !dbg !15496, !range !667, !noundef !23
  store i32 %c, i32* %c.dbg.spill, align 4, !dbg !15496
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !15443, metadata !DIExpression()), !dbg !15496
  %self8 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !15497
  store { i8*, i8* }* %self8, { i8*, i8* }** %self.dbg.spill9, align 8, !dbg !15497
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill9, metadata !15498, metadata !DIExpression()), !dbg !15511
  %23 = bitcast { i8*, i8* }* %self8 to i8**, !dbg !15511
  %start10 = load i8*, i8** %23, align 8, !dbg !15511, !nonnull !23, !noundef !23
  store i8* %start10, i8** %start.dbg.spill11, align 8, !dbg !15511
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill11, metadata !15502, metadata !DIExpression()), !dbg !15512
  store i64 1, i64* %size.dbg.spill12, align 8, !dbg !15513
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill12, metadata !15505, metadata !DIExpression()), !dbg !15519
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self8, i32 0, i32 1, !dbg !15519
  %self13 = load i8*, i8** %24, align 8, !dbg !15519
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !15519
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !15520, metadata !DIExpression()), !dbg !15524
  %25 = bitcast i64* %4 to i8**, !dbg !15524
  store i8* %self13, i8** %25, align 8, !dbg !15524
  %_54 = load i64, i64* %4, align 8, !dbg !15524
  br label %bb15, !dbg !15524

bb6:                                              ; preds = %bb1
  %26 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15526
  store i64 2, i64* %26, align 8, !dbg !15526
  br label %bb8, !dbg !15527

bb8:                                              ; preds = %bb7, %bb6
  ret void, !dbg !15527

bb15:                                             ; preds = %bb2
  store i8* %start10, i8** %self.dbg.spill15, align 8, !dbg !15519
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill15, metadata !15528, metadata !DIExpression()), !dbg !15532
  store i8* %start10, i8** %self.dbg.spill16, align 8, !dbg !15532
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !15534, metadata !DIExpression()), !dbg !15538
  %27 = bitcast i64* %3 to i8**, !dbg !15538
  store i8* %start10, i8** %27, align 8, !dbg !15538
  %_56 = load i64, i64* %3, align 8, !dbg !15538
  br label %bb16, !dbg !15538

bb16:                                             ; preds = %bb15
  %28 = sub nuw i64 %_54, %_56, !dbg !15519
  store i64 %28, i64* %2, align 8, !dbg !15519
  %diff17 = load i64, i64* %2, align 8, !dbg !15519
  store i64 %diff17, i64* %diff.dbg.spill18, align 8, !dbg !15519
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill18, metadata !15508, metadata !DIExpression()), !dbg !15539
  br label %bb13, !dbg !15519

bb13:                                             ; preds = %bb16
  %29 = udiv exact i64 %diff17, 1, !dbg !15539
  store i64 %29, i64* %1, align 8, !dbg !15539
  %len = load i64, i64* %1, align 8, !dbg !15539
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !15539
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !15444, metadata !DIExpression()), !dbg !15540
  br label %bb14, !dbg !15539

bb14:                                             ; preds = %bb13
  %char_len = sub i64 %pre_len, %len, !dbg !15541
  store i64 %char_len, i64* %char_len.dbg.spill, align 8, !dbg !15541
  call void @llvm.dbg.declare(metadata i64* %char_len.dbg.spill, metadata !15446, metadata !DIExpression()), !dbg !15542
  %_16 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[char; 2]>", %"core::str::pattern::MultiCharEqSearcher<[char; 2]>"* %self, i32 0, i32 2, !dbg !15543
; call <[char; N] as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN77_$LT$$u5b$char$u3b$$u20$N$u5d$$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h5dbf005c64097323E"([2 x i32]* align 4 %_16, i32 %c), !dbg !15543
  br label %bb3, !dbg !15543

bb3:                                              ; preds = %bb14
  br i1 %_15, label %bb4, label %bb5, !dbg !15543

bb5:                                              ; preds = %bb3
  %_23 = add i64 %i, %char_len, !dbg !15544
  %30 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !15545
  %31 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %30, i32 0, i32 1, !dbg !15545
  store i64 %i, i64* %31, align 8, !dbg !15545
  %32 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !15545
  %33 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %32, i32 0, i32 2, !dbg !15545
  store i64 %_23, i64* %33, align 8, !dbg !15545
  %34 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15545
  store i64 1, i64* %34, align 8, !dbg !15545
  br label %bb7, !dbg !15546

bb4:                                              ; preds = %bb3
  %_19 = add i64 %i, %char_len, !dbg !15547
  %35 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !15548
  %36 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %35, i32 0, i32 1, !dbg !15548
  store i64 %i, i64* %36, align 8, !dbg !15548
  %37 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !15548
  %38 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %37, i32 0, i32 2, !dbg !15548
  store i64 %_19, i64* %38, align 8, !dbg !15548
  %39 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15548
  store i64 0, i64* %39, align 8, !dbg !15548
  br label %bb7, !dbg !15549

bb7:                                              ; preds = %bb5, %bb4
  br label %bb8, !dbg !15527
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h716145b75f37cbccE"(%"core::str::pattern::SearchStep"* sret(%"core::str::pattern::SearchStep") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #0 !dbg !15550 {
start:
  %char_len.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %diff.dbg.spill18 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %self.dbg.spill16 = alloca i8*, align 8
  %self.dbg.spill15 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %self.dbg.spill14 = alloca i8*, align 8
  %size.dbg.spill12 = alloca i64, align 8
  %start.dbg.spill11 = alloca i8*, align 8
  %self.dbg.spill9 = alloca { i8*, i8* }*, align 8
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %pre_len.dbg.spill = alloca i64, align 8
  %5 = alloca i64, align 8
  %diff.dbg.spill = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill2 = alloca { i8*, i8* }*, align 8
  %s.dbg.spill = alloca %"core::str::iter::CharIndices"*, align 8
  %self.dbg.spill = alloca %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  %_5 = alloca { i64, i32 }, align 8
  store %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !15552, metadata !DIExpression()), !dbg !15564
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>", %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, i32 0, i32 2, !dbg !15565
  store %"core::str::iter::CharIndices"* %s, %"core::str::iter::CharIndices"** %s.dbg.spill, align 8, !dbg !15565
  call void @llvm.dbg.declare(metadata %"core::str::iter::CharIndices"** %s.dbg.spill, metadata !15553, metadata !DIExpression()), !dbg !15566
  %self1 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !15567
  store { i8*, i8* }* %self1, { i8*, i8* }** %self.dbg.spill2, align 8, !dbg !15567
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill2, metadata !15568, metadata !DIExpression()), !dbg !15581
  %9 = bitcast { i8*, i8* }* %self1 to i8**, !dbg !15581
  %start3 = load i8*, i8** %9, align 8, !dbg !15581, !nonnull !23, !noundef !23
  store i8* %start3, i8** %start.dbg.spill, align 8, !dbg !15581
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !15572, metadata !DIExpression()), !dbg !15582
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !15583
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !15575, metadata !DIExpression()), !dbg !15589
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self1, i32 0, i32 1, !dbg !15589
  %self4 = load i8*, i8** %10, align 8, !dbg !15589
  store i8* %self4, i8** %self.dbg.spill5, align 8, !dbg !15589
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !15590, metadata !DIExpression()), !dbg !15594
  %11 = bitcast i64* %8 to i8**, !dbg !15594
  store i8* %self4, i8** %11, align 8, !dbg !15594
  %_35 = load i64, i64* %8, align 8, !dbg !15594
  br label %bb11, !dbg !15594

bb11:                                             ; preds = %start
  store i8* %start3, i8** %self.dbg.spill6, align 8, !dbg !15589
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !15596, metadata !DIExpression()), !dbg !15600
  store i8* %start3, i8** %self.dbg.spill7, align 8, !dbg !15600
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !15602, metadata !DIExpression()), !dbg !15606
  %12 = bitcast i64* %7 to i8**, !dbg !15606
  store i8* %start3, i8** %12, align 8, !dbg !15606
  %_37 = load i64, i64* %7, align 8, !dbg !15606
  br label %bb12, !dbg !15606

bb12:                                             ; preds = %bb11
  %13 = sub nuw i64 %_35, %_37, !dbg !15589
  store i64 %13, i64* %6, align 8, !dbg !15589
  %diff = load i64, i64* %6, align 8, !dbg !15589
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !15589
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !15578, metadata !DIExpression()), !dbg !15607
  br label %bb9, !dbg !15589

bb9:                                              ; preds = %bb12
  %14 = udiv exact i64 %diff, 1, !dbg !15607
  store i64 %14, i64* %5, align 8, !dbg !15607
  %pre_len = load i64, i64* %5, align 8, !dbg !15607
  store i64 %pre_len, i64* %pre_len.dbg.spill, align 8, !dbg !15607
  call void @llvm.dbg.declare(metadata i64* %pre_len.dbg.spill, metadata !15555, metadata !DIExpression()), !dbg !15608
  br label %bb10, !dbg !15607

bb10:                                             ; preds = %bb9
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %15 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee517ea8e92987d3E"(%"core::str::iter::CharIndices"* align 8 %s), !dbg !15609
  store { i64, i32 } %15, { i64, i32 }* %_5, align 8, !dbg !15609
  br label %bb1, !dbg !15609

bb1:                                              ; preds = %bb10
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !15610
  %17 = load i32, i32* %16, align 8, !dbg !15610, !range !582, !noundef !23
  %18 = sub i32 %17, 1114112, !dbg !15610
  %19 = icmp eq i32 %18, 0, !dbg !15610
  %_7 = select i1 %19, i64 0, i64 1, !dbg !15610
  %20 = icmp eq i64 %_7, 1, !dbg !15610
  br i1 %20, label %bb2, label %bb6, !dbg !15610

bb2:                                              ; preds = %bb1
  %21 = bitcast { i64, i32 }* %_5 to i64*, !dbg !15611
  %i = load i64, i64* %21, align 8, !dbg !15611
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !15611
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !15557, metadata !DIExpression()), !dbg !15611
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_5, i32 0, i32 1, !dbg !15612
  %c = load i32, i32* %22, align 8, !dbg !15612, !range !667, !noundef !23
  store i32 %c, i32* %c.dbg.spill, align 4, !dbg !15612
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !15559, metadata !DIExpression()), !dbg !15612
  %self8 = getelementptr inbounds %"core::str::iter::CharIndices", %"core::str::iter::CharIndices"* %s, i32 0, i32 1, !dbg !15613
  store { i8*, i8* }* %self8, { i8*, i8* }** %self.dbg.spill9, align 8, !dbg !15613
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill9, metadata !15614, metadata !DIExpression()), !dbg !15627
  %23 = bitcast { i8*, i8* }* %self8 to i8**, !dbg !15627
  %start10 = load i8*, i8** %23, align 8, !dbg !15627, !nonnull !23, !noundef !23
  store i8* %start10, i8** %start.dbg.spill11, align 8, !dbg !15627
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill11, metadata !15618, metadata !DIExpression()), !dbg !15628
  store i64 1, i64* %size.dbg.spill12, align 8, !dbg !15629
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill12, metadata !15621, metadata !DIExpression()), !dbg !15635
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self8, i32 0, i32 1, !dbg !15635
  %self13 = load i8*, i8** %24, align 8, !dbg !15635
  store i8* %self13, i8** %self.dbg.spill14, align 8, !dbg !15635
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill14, metadata !15636, metadata !DIExpression()), !dbg !15640
  %25 = bitcast i64* %4 to i8**, !dbg !15640
  store i8* %self13, i8** %25, align 8, !dbg !15640
  %_54 = load i64, i64* %4, align 8, !dbg !15640
  br label %bb15, !dbg !15640

bb6:                                              ; preds = %bb1
  %26 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15642
  store i64 2, i64* %26, align 8, !dbg !15642
  br label %bb8, !dbg !15643

bb8:                                              ; preds = %bb7, %bb6
  ret void, !dbg !15643

bb15:                                             ; preds = %bb2
  store i8* %start10, i8** %self.dbg.spill15, align 8, !dbg !15635
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill15, metadata !15644, metadata !DIExpression()), !dbg !15648
  store i8* %start10, i8** %self.dbg.spill16, align 8, !dbg !15648
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill16, metadata !15650, metadata !DIExpression()), !dbg !15654
  %27 = bitcast i64* %3 to i8**, !dbg !15654
  store i8* %start10, i8** %27, align 8, !dbg !15654
  %_56 = load i64, i64* %3, align 8, !dbg !15654
  br label %bb16, !dbg !15654

bb16:                                             ; preds = %bb15
  %28 = sub nuw i64 %_54, %_56, !dbg !15635
  store i64 %28, i64* %2, align 8, !dbg !15635
  %diff17 = load i64, i64* %2, align 8, !dbg !15635
  store i64 %diff17, i64* %diff.dbg.spill18, align 8, !dbg !15635
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill18, metadata !15624, metadata !DIExpression()), !dbg !15655
  br label %bb13, !dbg !15635

bb13:                                             ; preds = %bb16
  %29 = udiv exact i64 %diff17, 1, !dbg !15655
  store i64 %29, i64* %1, align 8, !dbg !15655
  %len = load i64, i64* %1, align 8, !dbg !15655
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !15655
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !15560, metadata !DIExpression()), !dbg !15656
  br label %bb14, !dbg !15655

bb14:                                             ; preds = %bb13
  %char_len = sub i64 %pre_len, %len, !dbg !15657
  store i64 %char_len, i64* %char_len.dbg.spill, align 8, !dbg !15657
  call void @llvm.dbg.declare(metadata i64* %char_len.dbg.spill, metadata !15562, metadata !DIExpression()), !dbg !15658
  %_16 = bitcast %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self to %"[closure@core::str::<impl str>::trim::{closure#0}]"*, !dbg !15659
; call <F as core::str::pattern::MultiCharEq>::matches
  %_15 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hdc36e925302422e0E"(%"[closure@core::str::<impl str>::trim::{closure#0}]"* align 1 %_16, i32 %c), !dbg !15659
  br label %bb3, !dbg !15659

bb3:                                              ; preds = %bb14
  br i1 %_15, label %bb4, label %bb5, !dbg !15659

bb5:                                              ; preds = %bb3
  %_23 = add i64 %i, %char_len, !dbg !15660
  %30 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !15661
  %31 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %30, i32 0, i32 1, !dbg !15661
  store i64 %i, i64* %31, align 8, !dbg !15661
  %32 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Reject"*, !dbg !15661
  %33 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", %"core::str::pattern::SearchStep::Reject"* %32, i32 0, i32 2, !dbg !15661
  store i64 %_23, i64* %33, align 8, !dbg !15661
  %34 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15661
  store i64 1, i64* %34, align 8, !dbg !15661
  br label %bb7, !dbg !15662

bb4:                                              ; preds = %bb3
  %_19 = add i64 %i, %char_len, !dbg !15663
  %35 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !15664
  %36 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %35, i32 0, i32 1, !dbg !15664
  store i64 %i, i64* %36, align 8, !dbg !15664
  %37 = bitcast %"core::str::pattern::SearchStep"* %0 to %"core::str::pattern::SearchStep::Match"*, !dbg !15664
  %38 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", %"core::str::pattern::SearchStep::Match"* %37, i32 0, i32 2, !dbg !15664
  store i64 %_19, i64* %38, align 8, !dbg !15664
  %39 = bitcast %"core::str::pattern::SearchStep"* %0 to i64*, !dbg !15664
  store i64 0, i64* %39, align 8, !dbg !15664
  br label %bb7, !dbg !15665

bb7:                                              ; preds = %bb5, %bb4
  br label %bb8, !dbg !15643
}

; <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17hd9b985f827e3ffcaE"(%"std::ffi::os_str::OsString"* align 8 %self) unnamed_addr #0 !dbg !15666 {
start:
  %inner.dbg.spill = alloca { %"std::sys::unix::os_str::Slice"*, i64 }, align 8
  %self.dbg.spill2 = alloca %"std::ffi::os_str::OsString"*, align 8
  %self.dbg.spill1 = alloca %"std::ffi::os_str::OsString"*, align 8
  %_index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %self.dbg.spill = alloca %"std::ffi::os_str::OsString"*, align 8
  store %"std::ffi::os_str::OsString"* %self, %"std::ffi::os_str::OsString"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %self.dbg.spill, metadata !15669, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %_index.dbg.spill, metadata !15671, metadata !DIExpression()), !dbg !15675
  store %"std::ffi::os_str::OsString"* %self, %"std::ffi::os_str::OsString"** %self.dbg.spill1, align 8, !dbg !15680
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %self.dbg.spill1, metadata !15679, metadata !DIExpression()), !dbg !15681
  store %"std::ffi::os_str::OsString"* %self, %"std::ffi::os_str::OsString"** %self.dbg.spill2, align 8, !dbg !15681
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %self.dbg.spill2, metadata !15674, metadata !DIExpression()), !dbg !15675
  %_8 = bitcast %"std::ffi::os_str::OsString"* %self to %"std::sys::unix::os_str::Buf"*, !dbg !15675
; call std::sys::unix::os_str::Buf::as_slice
  %0 = call { %"std::sys::unix::os_str::Slice"*, i64 } @_ZN3std3sys4unix6os_str3Buf8as_slice17h577f94a0cba317dcE(%"std::sys::unix::os_str::Buf"* align 8 %_8), !dbg !15675
  %_7.0 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 0, !dbg !15675
  %_7.1 = extractvalue { %"std::sys::unix::os_str::Slice"*, i64 } %0, 1, !dbg !15675
  br label %bb1, !dbg !15675

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 0, !dbg !15675
  store %"std::sys::unix::os_str::Slice"* %_7.0, %"std::sys::unix::os_str::Slice"** %1, align 8, !dbg !15675
  %2 = getelementptr inbounds { %"std::sys::unix::os_str::Slice"*, i64 }, { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, i32 0, i32 1, !dbg !15675
  store i64 %_7.1, i64* %2, align 8, !dbg !15675
  call void @llvm.dbg.declare(metadata { %"std::sys::unix::os_str::Slice"*, i64 }* %inner.dbg.spill, metadata !15682, metadata !DIExpression()), !dbg !15685
  %_9.0 = bitcast %"std::sys::unix::os_str::Slice"* %_7.0 to %"std::ffi::os_str::OsStr"*, !dbg !15685
  %3 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } undef, %"std::ffi::os_str::OsStr"* %_9.0, 0, !dbg !15687
  %4 = insertvalue { %"std::ffi::os_str::OsStr"*, i64 } %3, i64 %_7.1, 1, !dbg !15687
  ret { %"std::ffi::os_str::OsStr"*, i64 } %4, !dbg !15687
}

; <alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN99_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9b975583e5441ae1E"(%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #1 !dbg !15688 {
start:
  %self.dbg.spill2 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, align 8
  %src.dbg.spill = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %self.dbg.spill = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %slot = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %self1 = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %tmp = alloca %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_3 = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_x = alloca %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  store %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !15693, metadata !DIExpression()), !dbg !15694
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_x, metadata !15695, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp, metadata !15703, metadata !DIExpression()), !dbg !15717
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1, metadata !15719, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.declare(metadata %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %slot, metadata !15727, metadata !DIExpression()), !dbg !15733
  store %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %src.dbg.spill, align 8, !dbg !15735
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %src.dbg.spill, metadata !15711, metadata !DIExpression()), !dbg !15736
  %0 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp to {}*, !dbg !15737
  store %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp, %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill2, align 8, !dbg !15717
  call void @llvm.dbg.declare(metadata %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"** %self.dbg.spill2, metadata !15743, metadata !DIExpression()), !dbg !15750
  %_7 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !15750
  %1 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_7 to i8*, !dbg !15717
  %2 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self to i8*, !dbg !15717
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !15717
  %3 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1 to i8*, !dbg !15717
  %4 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %tmp to i8*, !dbg !15717
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !dbg !15717
  br label %bb2, !dbg !15725

bb2:                                              ; preds = %start
  %5 = bitcast %"core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %self1 to %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"*, !dbg !15725
  %6 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %slot to i8*, !dbg !15725
  %7 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %5 to i8*, !dbg !15725
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !15725
  %8 = bitcast %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>"* %slot to %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, !dbg !15733
  %9 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_3 to i8*, !dbg !15733
  %10 = bitcast %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %8 to i8*, !dbg !15733
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !15733
; call <alloc::collections::btree::map::BTreeMap<K,V,A> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN119_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2b44944a4e45610fE"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* sret(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") %_x, %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_3), !dbg !15752
  br label %bb1, !dbg !15752

bb1:                                              ; preds = %bb2
; call core::ptr::drop_in_place<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
  call void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..IntoIter$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h818fbd173477ac4fE"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %_x), !dbg !15701
  br label %bb3, !dbg !15701

bb3:                                              ; preds = %bb1
  ret void, !dbg !15753
}

; <alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN99_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha7ce146287e506ffE"(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15754 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"*, align 8
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %guard = alloca i64*, align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  store %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %self.dbg.spill, metadata !15758, metadata !DIExpression()), !dbg !15763
  call void @llvm.dbg.declare(metadata %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv, metadata !15759, metadata !DIExpression()), !dbg !15764
  call void @llvm.dbg.declare(metadata i64** %guard, metadata !15761, metadata !DIExpression()), !dbg !15765
  br label %bb1, !dbg !15766

bb1:                                              ; preds = %bb4, %start
; call alloc::collections::btree::map::IntoIter<K,V,A>::dying_next
  call void @"_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h4f1bfc4fa54278c4E"(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>") %_2, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* align 8 %self), !dbg !15767
  br label %bb2, !dbg !15767

bb2:                                              ; preds = %bb1
  %1 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %_2, i32 0, i32 1, !dbg !15768
  %2 = load {}*, {}** %1, align 8, !dbg !15768
  %3 = icmp eq {}* %2, null, !dbg !15768
  %_4 = select i1 %3, i64 0, i64 1, !dbg !15768
  %4 = icmp eq i64 %_4, 1, !dbg !15768
  br i1 %4, label %bb3, label %bb5, !dbg !15768

bb3:                                              ; preds = %bb2
  %5 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>"* %_2 to %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"*, !dbg !15764
  %6 = bitcast %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>::Some"* %5 to %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"*, !dbg !15764
  %7 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !15764
  %8 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %6 to i8*, !dbg !15764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !15764
  %9 = bitcast i64** %guard to %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"**, !dbg !15769
  store %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"* %self, %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>"** %9, align 8, !dbg !15769
  %10 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_9 to i8*, !dbg !15770
  %11 = bitcast %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %kv to i8*, !dbg !15770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !15770
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::drop_key_val
  invoke void @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h7334a7c41f34b097E"(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>"* %_9)
          to label %bb4 unwind label %cleanup, !dbg !15770

bb5:                                              ; preds = %bb2
  ret void, !dbg !15771

bb8:                                              ; preds = %cleanup
  br i1 true, label %bb7, label %bb6, !dbg !15772

cleanup:                                          ; preds = %bb3
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %14, i32* %16, align 8
  br label %bb8

bb4:                                              ; preds = %bb3
  br label %bb1, !dbg !15766

bb6:                                              ; preds = %bb7, %bb8
  %17 = bitcast { i8*, i32 }* %0 to i8**, !dbg !15773
  %18 = load i8*, i8** %17, align 8, !dbg !15773
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !15773
  %20 = load i32, i32* %19, align 8, !dbg !15773
  %21 = insertvalue { i8*, i32 } undef, i8* %18, 0, !dbg !15773
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1, !dbg !15773
  resume { i8*, i32 } %22, !dbg !15773

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr250drop_in_place$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$C$alloc..alloc..Global$GT$$GT$17h029ebd041840b249E"(i64** %guard) #16
          to label %bb6 unwind label %abort, !dbg !15772

abort:                                            ; preds = %bb7
  %23 = landingpad { i8*, i32 }
          cleanup, !dbg !15773
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !15773
  unreachable, !dbg !15773
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$11next_reject17hd5a39d2be4573d4fE"(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %self) unnamed_addr #0 !dbg !15774 {
start:
  %self.dbg.spill = alloca %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, align 8
  store %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self, %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"** %self.dbg.spill, metadata !15777, metadata !DIExpression()), !dbg !15778
  %_2 = bitcast %"core::str::pattern::CharPredicateSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* %self to %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"*, !dbg !15779
; call core::str::pattern::Searcher::next_reject
  call void @_ZN4core3str7pattern8Searcher11next_reject17hc547f4bf1cf9f741E(%"core::option::Option<(usize, usize)>"* sret(%"core::option::Option<(usize, usize)>") %0, %"core::str::pattern::MultiCharEqSearcher<[closure@core::str::<impl str>::trim::{closure#0}]>"* align 8 %_2), !dbg !15779
  br label %bb1, !dbg !15779

bb1:                                              ; preds = %start
  ret void, !dbg !15780
}

; build_script_build::main
; Function Attrs: nonlazybind uwtable
define internal void @_ZN18build_script_build4main17hb5f2302d848edaccE() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15781 {
start:
  %values.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %val.dbg.spill28 = alloca %"alloc::string::String"*, align 8
  %val.dbg.spill24 = alloca %"alloc::string::String"*, align 8
  %val.dbg.spill21 = alloca %"alloc::string::String"*, align 8
  %val.dbg.spill = alloca %"alloc::string::String"*, align 8
  %linux_time_bits64.dbg.spill = alloca i8, align 1
  %musl_v1_2_3.dbg.spill = alloca i8, align 1
  %v.dbg.spill14 = alloca i64, align 8
  %v.dbg.spill = alloca i64*, align 8
  %x.dbg.spill12 = alloca i32, align 4
  %x.dbg.spill = alloca i32*, align 8
  %0 = alloca i64, align 8
  %libc_ci.dbg.spill = alloca i8, align 1
  %rustc_dep_of_std.dbg.spill = alloca i8, align 1
  %1 = alloca { i8*, i32 }, align 8
  %_is_nightly.dbg.spill = alloca i8, align 1
  %rustc_minor_ver.dbg.spill = alloca i32, align 4
  %_345 = alloca i8, align 1
  %_344 = alloca i8, align 1
  %_343 = alloca i8, align 1
  %_300 = alloca [2 x { i8*, i64* }], align 8
  %_293 = alloca %"core::fmt::Arguments", align 8
  %_285 = alloca [2 x { i8*, i64* }], align 8
  %_278 = alloca %"core::fmt::Arguments", align 8
  %values = alloca %"alloc::string::String", align 8
  %name = alloca { [0 x i8]*, i64 }, align 8
  %_265 = alloca i64*, align 8
  %iter4 = alloca { i64*, i64* }, align 8
  %_259 = alloca [1 x { i8*, i64* }], align 8
  %_252 = alloca %"core::fmt::Arguments", align 8
  %_247 = alloca [1 x { i8*, i64* }], align 8
  %_240 = alloca %"core::fmt::Arguments", align 8
  %cfg = alloca { [0 x i8]*, i64 }*, align 8
  %_232 = alloca i64*, align 8
  %iter = alloca { i64*, i64* }, align 8
  %_210 = alloca %"core::fmt::Arguments", align 8
  %val3 = alloca %"alloc::string::String", align 8
  %val2 = alloca %"alloc::string::String", align 8
  %_194 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_187 = alloca %"core::fmt::Arguments", align 8
  %val1 = alloca %"alloc::string::String", align 8
  %val = alloca %"alloc::string::String", align 8
  %_165 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_149 = alloca i8, align 1
  %_148 = alloca i8, align 1
  %_147 = alloca i8, align 1
  %_146 = alloca i8, align 1
  %_139 = alloca %"core::fmt::Arguments", align 8
  %_131 = alloca %"core::fmt::Arguments", align 8
  %_119 = alloca %"core::fmt::Arguments", align 8
  %_117 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_104 = alloca i8, align 1
  %_103 = alloca i8, align 1
  %_96 = alloca %"core::fmt::Arguments", align 8
  %_94 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_84 = alloca { i64, i64 }, align 8
  %_64 = alloca %"core::fmt::Arguments", align 8
  %_51 = alloca [1 x { i8*, i64* }], align 8
  %_44 = alloca %"core::fmt::Arguments", align 8
  %_39 = alloca %"core::result::Result<i32, core::num::error::ParseIntError>", align 4
  %vers = alloca i32, align 4
  %version = alloca %"alloc::string::String", align 8
  %_35 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %which_freebsd = alloca i32, align 4
  %_27 = alloca %"core::fmt::Arguments", align 8
  %_25 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %target_arch = alloca %"alloc::string::String", align 8
  %_23 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %target_ptr_width = alloca %"alloc::string::String", align 8
  %_21 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %target_os = alloca %"alloc::string::String", align 8
  %_19 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %target_env = alloca %"alloc::string::String", align 8
  %_17 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_14 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_2 = alloca %"core::fmt::Arguments", align 8
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %target_env, metadata !15790, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %target_os, metadata !15792, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %target_ptr_width, metadata !15794, metadata !DIExpression()), !dbg !15840
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %target_arch, metadata !15796, metadata !DIExpression()), !dbg !15841
  call void @llvm.dbg.declare(metadata i32* %which_freebsd, metadata !15798, metadata !DIExpression()), !dbg !15842
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %version, metadata !15800, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.declare(metadata i32* %vers, metadata !15802, metadata !DIExpression()), !dbg !15844
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %val, metadata !15815, metadata !DIExpression()), !dbg !15845
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %val1, metadata !15818, metadata !DIExpression()), !dbg !15846
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %val2, metadata !15821, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %val3, metadata !15824, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter, metadata !15827, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %cfg, metadata !15829, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %iter4, metadata !15831, metadata !DIExpression()), !dbg !15851
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %name, metadata !15833, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %values, metadata !15836, metadata !DIExpression()), !dbg !15853
  store i8 0, i8* %_343, align 1, !dbg !15854
  store i8 0, i8* %_344, align 1, !dbg !15854
  store i8 0, i8* %_345, align 1, !dbg !15854
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_2, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc53 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0), !dbg !15854
  br label %bb1, !dbg !15854

bb1:                                              ; preds = %start
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_2), !dbg !15854
  br label %bb2, !dbg !15854

bb2:                                              ; preds = %bb1
; call build_script_build::rustc_minor_nightly
  %2 = call { i32, i8 } @_ZN18build_script_build19rustc_minor_nightly17hb15468b437acd172E(), !dbg !15855
  %_11.0 = extractvalue { i32, i8 } %2, 0, !dbg !15855
  %3 = extractvalue { i32, i8 } %2, 1, !dbg !15855
  %_11.1 = trunc i8 %3 to i1, !dbg !15855
  br label %bb3, !dbg !15855

bb3:                                              ; preds = %bb2
  store i32 %_11.0, i32* %rustc_minor_ver.dbg.spill, align 4, !dbg !15856
  call void @llvm.dbg.declare(metadata i32* %rustc_minor_ver.dbg.spill, metadata !15783, metadata !DIExpression()), !dbg !15857
  %4 = zext i1 %_11.1 to i8, !dbg !15858
  store i8 %4, i8* %_is_nightly.dbg.spill, align 1, !dbg !15858
  call void @llvm.dbg.declare(metadata i8* %_is_nightly.dbg.spill, metadata !15785, metadata !DIExpression()), !dbg !15859
; call std::env::var
  call void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_14, [0 x i8]* align 1 bitcast (<{ [30 x i8] }>* @alloc568 to [0 x i8]*), i64 30), !dbg !15860
  br label %bb4, !dbg !15860

bb4:                                              ; preds = %bb3
; invoke core::result::Result<T,E>::is_ok
  %rustc_dep_of_std = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h9da37263fe3ff58fE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_14)
          to label %bb5 unwind label %cleanup, !dbg !15860

bb165:                                            ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_14) #16
          to label %bb166 unwind label %abort, !dbg !15861

cleanup:                                          ; preds = %bb4
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb165

bb5:                                              ; preds = %bb4
  %10 = zext i1 %rustc_dep_of_std to i8, !dbg !15860
  store i8 %10, i8* %rustc_dep_of_std.dbg.spill, align 1, !dbg !15860
  call void @llvm.dbg.declare(metadata i8* %rustc_dep_of_std.dbg.spill, metadata !15786, metadata !DIExpression()), !dbg !15862
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_14), !dbg !15861
  br label %bb6, !dbg !15861

abort:                                            ; preds = %bb163, %bb162, %bb161, %bb160, %bb152, %bb187, %bb188, %bb183, %bb184, %bb153, %bb154, %bb155, %bb156, %bb157, %bb158, %bb191, %bb192, %bb159, %bb164, %bb165
  %11 = landingpad { i8*, i32 }
          cleanup, !dbg !15863
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !15863
  unreachable, !dbg !15863

bb166:                                            ; preds = %bb163, %bb164, %bb165
  %12 = bitcast { i8*, i32 }* %1 to i8**, !dbg !15863
  %13 = load i8*, i8** %12, align 8, !dbg !15863
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !15863
  %15 = load i32, i32* %14, align 8, !dbg !15863
  %16 = insertvalue { i8*, i32 } undef, i8* %13, 0, !dbg !15863
  %17 = insertvalue { i8*, i32 } %16, i32 %15, 1, !dbg !15863
  resume { i8*, i32 } %17, !dbg !15863

bb6:                                              ; preds = %bb5
; call std::env::var
  call void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_17, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc569 to [0 x i8]*), i64 7), !dbg !15864
  br label %bb7, !dbg !15864

bb7:                                              ; preds = %bb6
; invoke core::result::Result<T,E>::is_ok
  %libc_ci = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h9da37263fe3ff58fE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_17)
          to label %bb8 unwind label %cleanup5, !dbg !15864

bb164:                                            ; preds = %cleanup5
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_17) #16
          to label %bb166 unwind label %abort, !dbg !15865

cleanup5:                                         ; preds = %bb7
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %20, i32* %22, align 8
  br label %bb164

bb8:                                              ; preds = %bb7
  %23 = zext i1 %libc_ci to i8, !dbg !15864
  store i8 %23, i8* %libc_ci.dbg.spill, align 1, !dbg !15864
  call void @llvm.dbg.declare(metadata i8* %libc_ci.dbg.spill, metadata !15788, metadata !DIExpression()), !dbg !15866
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_17), !dbg !15865
  br label %bb9, !dbg !15865

bb9:                                              ; preds = %bb8
; call std::env::var
  call void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_19, [0 x i8]* align 1 bitcast (<{ [20 x i8] }>* @alloc570 to [0 x i8]*), i64 20), !dbg !15867
  br label %bb10, !dbg !15867

bb10:                                             ; preds = %bb9
; call core::result::Result<T,E>::unwrap_or_default
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17h622dd751d82944c7E"(%"alloc::string::String"* sret(%"alloc::string::String") %target_env, %"core::result::Result<alloc::string::String, std::env::VarError>"* %_19), !dbg !15867
  br label %bb11, !dbg !15867

bb11:                                             ; preds = %bb10
; invoke std::env::var
  invoke void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_21, [0 x i8]* align 1 bitcast (<{ [19 x i8] }>* @alloc571 to [0 x i8]*), i64 19)
          to label %bb12 unwind label %cleanup6, !dbg !15868

bb163:                                            ; preds = %bb162, %cleanup6
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %target_env) #16
          to label %bb166 unwind label %abort, !dbg !15869

cleanup6:                                         ; preds = %bb149, %bb12, %bb11
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  %26 = extractvalue { i8*, i32 } %24, 1
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %26, i32* %28, align 8
  br label %bb163

bb12:                                             ; preds = %bb11
; invoke core::result::Result<T,E>::unwrap_or_default
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17h622dd751d82944c7E"(%"alloc::string::String"* sret(%"alloc::string::String") %target_os, %"core::result::Result<alloc::string::String, std::env::VarError>"* %_21)
          to label %bb13 unwind label %cleanup6, !dbg !15868

bb13:                                             ; preds = %bb12
; invoke std::env::var
  invoke void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_23, [0 x i8]* align 1 bitcast (<{ [30 x i8] }>* @alloc572 to [0 x i8]*), i64 30)
          to label %bb14 unwind label %cleanup7, !dbg !15870

bb162:                                            ; preds = %bb161, %cleanup7
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %target_os) #16
          to label %bb163 unwind label %abort, !dbg !15871

cleanup7:                                         ; preds = %bb148, %bb14, %bb13
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  br label %bb162

bb14:                                             ; preds = %bb13
; invoke core::result::Result<T,E>::unwrap_or_default
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17h622dd751d82944c7E"(%"alloc::string::String"* sret(%"alloc::string::String") %target_ptr_width, %"core::result::Result<alloc::string::String, std::env::VarError>"* %_23)
          to label %bb15 unwind label %cleanup7, !dbg !15870

bb15:                                             ; preds = %bb14
; invoke std::env::var
  invoke void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_25, [0 x i8]* align 1 bitcast (<{ [21 x i8] }>* @alloc573 to [0 x i8]*), i64 21)
          to label %bb16 unwind label %cleanup8, !dbg !15872

bb161:                                            ; preds = %bb160, %cleanup8
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %target_ptr_width) #16
          to label %bb162 unwind label %abort, !dbg !15873

cleanup8:                                         ; preds = %bb147, %bb16, %bb15
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  %36 = extractvalue { i8*, i32 } %34, 1
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %36, i32* %38, align 8
  br label %bb161

bb16:                                             ; preds = %bb15
; invoke core::result::Result<T,E>::unwrap_or_default
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17h622dd751d82944c7E"(%"alloc::string::String"* sret(%"alloc::string::String") %target_arch, %"core::result::Result<alloc::string::String, std::env::VarError>"* %_25)
          to label %bb17 unwind label %cleanup8, !dbg !15872

bb17:                                             ; preds = %bb16
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_27, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc64 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb18 unwind label %cleanup9, !dbg !15874

bb160:                                            ; preds = %bb152, %bb187, %bb186, %bb188, %bb157, %bb158, %bb191, %bb190, %bb192, %cleanup9
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %target_arch) #16
          to label %bb161 unwind label %abort, !dbg !15875

cleanup9:                                         ; preds = %bb146, %bb135, %bb133, %bb125, %bb131, %bb130, %bb129, %bb128, %bb127, %bb126, %bb121, %bb119, %bb117, %bb116, %bb114, %bb179, %bb180, %bb91, %bb75, %bb78, %bb81, %bb84, %bb73, %bb72, %bb71, %bb70, %bb69, %bb68, %bb66, %bb65, %bb64, %bb62, %bb61, %bb54, %bb57, %bb51, %bb50, %bb49, %bb47, %bb46, %bb43, %bb38, %bb39, %bb40, %bb41, %bb42, %bb34, %bb37, %bb35, %bb169, %bb170, %bb19, %bb18, %bb17
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  %41 = extractvalue { i8*, i32 } %39, 1
  %42 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %41, i32* %43, align 8
  br label %bb160

bb18:                                             ; preds = %bb17
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_27)
          to label %bb19 unwind label %cleanup9, !dbg !15874

bb19:                                             ; preds = %bb18
; invoke std::env::var
  invoke void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_35, [0 x i8]* align 1 bitcast (<{ [34 x i8] }>* @alloc574 to [0 x i8]*), i64 34)
          to label %bb20 unwind label %cleanup9, !dbg !15876

bb20:                                             ; preds = %bb19
  store i8 1, i8* %_343, align 1, !dbg !15877
  %44 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_35 to i64*, !dbg !15877
  %_36 = load i64, i64* %44, align 8, !dbg !15877, !range !3441, !noundef !23
  %45 = icmp eq i64 %_36, 0, !dbg !15877
  br i1 %45, label %bb21, label %bb28, !dbg !15877

bb21:                                             ; preds = %bb20
  store i8 0, i8* %_343, align 1, !dbg !15843
  %46 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_35 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15843
  %47 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %46, i32 0, i32 1, !dbg !15843
  %48 = bitcast %"alloc::string::String"* %version to i8*, !dbg !15843
  %49 = bitcast %"alloc::string::String"* %47 to i8*, !dbg !15843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false), !dbg !15843
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %50 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %version)
          to label %bb22 unwind label %cleanup11, !dbg !15878

bb28:                                             ; preds = %bb20
  br i1 %libc_ci, label %bb29, label %bb31, !dbg !15879

bb31:                                             ; preds = %bb28
  br i1 %rustc_dep_of_std, label %bb32, label %bb33, !dbg !15880

bb29:                                             ; preds = %bb28
; invoke build_script_build::which_freebsd
  %51 = invoke { i32, i32 } @_ZN18build_script_build13which_freebsd17h13ef436e259eb0a7E()
          to label %bb30 unwind label %cleanup10, !dbg !15881

bb193:                                            ; preds = %bb159, %cleanup10
  %52 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_35 to i64*, !dbg !15882
  %_351 = load i64, i64* %52, align 8, !dbg !15882, !range !3441, !noundef !23
  %53 = icmp eq i64 %_351, 0, !dbg !15882
  br i1 %53, label %bb190, label %bb192, !dbg !15882

cleanup10:                                        ; preds = %bb27, %bb30, %bb29
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  %56 = extractvalue { i8*, i32 } %54, 1
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %55, i8** %57, align 8
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %56, i32* %58, align 8
  br label %bb193

bb30:                                             ; preds = %bb29
  %_56.0 = extractvalue { i32, i32 } %51, 0, !dbg !15881
  %_56.1 = extractvalue { i32, i32 } %51, 1, !dbg !15881
; invoke core::option::Option<T>::unwrap_or
  %59 = invoke i32 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h85f97c45e735c0d6E"(i32 %_56.0, i32 %_56.1, i32 11)
          to label %bb194 unwind label %cleanup10, !dbg !15881

bb194:                                            ; preds = %bb30
  store i32 %59, i32* %which_freebsd, align 4, !dbg !15881
  br label %bb171, !dbg !15881

bb171:                                            ; preds = %bb27, %bb33, %bb32, %bb194
  %60 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_35 to i64*, !dbg !15882
  %_346 = load i64, i64* %60, align 8, !dbg !15882, !range !3441, !noundef !23
  %61 = icmp eq i64 %_346, 0, !dbg !15882
  br i1 %61, label %bb168, label %bb170, !dbg !15882

bb33:                                             ; preds = %bb31
  store i32 11, i32* %which_freebsd, align 4, !dbg !15883
  br label %bb171, !dbg !15884

bb32:                                             ; preds = %bb31
  store i32 12, i32* %which_freebsd, align 4, !dbg !15885
  br label %bb171, !dbg !15884

bb159:                                            ; preds = %cleanup11
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %version) #16
          to label %bb193 unwind label %abort, !dbg !15886

cleanup11:                                        ; preds = %bb26, %bb25, %bb24, %bb23, %bb22, %bb21
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  %64 = extractvalue { i8*, i32 } %62, 1
  %65 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %63, i8** %65, align 8
  %66 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %64, i32* %66, align 8
  br label %bb159

bb22:                                             ; preds = %bb21
  %_41.0 = extractvalue { [0 x i8]*, i64 } %50, 0, !dbg !15878
  %_41.1 = extractvalue { [0 x i8]*, i64 } %50, 1, !dbg !15878
; invoke core::str::<impl str>::parse
  %67 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h05dd069edc62a978E"([0 x i8]* align 1 %_41.0, i64 %_41.1)
          to label %bb23 unwind label %cleanup11, !dbg !15878

bb23:                                             ; preds = %bb22
  store i64 %67, i64* %0, align 8, !dbg !15878
  %68 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %_39 to i8*, !dbg !15878
  %69 = bitcast i64* %0 to i8*, !dbg !15878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 8 %69, i64 8, i1 false), !dbg !15878
  %70 = bitcast %"core::result::Result<i32, core::num::error::ParseIntError>"* %_39 to i64*, !dbg !15878
  %71 = load i64, i64* %70, align 4, !dbg !15878
; invoke core::result::Result<T,E>::unwrap
  %72 = invoke i32 @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h61fe4ee0445d998bE"(i64 %71, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc576 to %"core::panic::location::Location"*))
          to label %bb24 unwind label %cleanup11, !dbg !15878

bb24:                                             ; preds = %bb23
  store i32 %72, i32* %vers, align 4, !dbg !15878
; invoke core::fmt::ArgumentV1::new_display
  %73 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hca781f09679ab152E(i32* align 4 %vers)
          to label %bb25 unwind label %cleanup11, !dbg !15887

bb25:                                             ; preds = %bb24
  %_52.0 = extractvalue { i8*, i64* } %73, 0, !dbg !15887
  %_52.1 = extractvalue { i8*, i64* } %73, 1, !dbg !15887
  %74 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_51, i64 0, i64 0, !dbg !15887
  %75 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 0, !dbg !15887
  store i8* %_52.0, i8** %75, align 8, !dbg !15887
  %76 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %74, i32 0, i32 1, !dbg !15887
  store i64* %_52.1, i64** %76, align 8, !dbg !15887
  %_48.0 = bitcast [1 x { i8*, i64* }]* %_51 to [0 x { i8*, i64* }]*, !dbg !15887
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_44, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc70 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_48.0, i64 1)
          to label %bb26 unwind label %cleanup11, !dbg !15887

bb26:                                             ; preds = %bb25
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_44)
          to label %bb27 unwind label %cleanup11, !dbg !15887

bb27:                                             ; preds = %bb26
  %77 = load i32, i32* %vers, align 4, !dbg !15888
  store i32 %77, i32* %which_freebsd, align 4, !dbg !15888
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %version)
          to label %bb171 unwind label %cleanup10, !dbg !15886

bb190:                                            ; preds = %bb193
  %78 = load i8, i8* %_343, align 1, !dbg !15882, !range !512, !noundef !23
  %79 = trunc i8 %78 to i1, !dbg !15882
  br i1 %79, label %bb191, label %bb160, !dbg !15882

bb192:                                            ; preds = %bb193
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_35) #16
          to label %bb160 unwind label %abort, !dbg !15882

bb191:                                            ; preds = %bb190
  %80 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_35 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15882
  %81 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %80, i32 0, i32 1, !dbg !15882
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %81) #16
          to label %bb160 unwind label %abort, !dbg !15882

bb168:                                            ; preds = %bb171
  %82 = load i8, i8* %_343, align 1, !dbg !15882, !range !512, !noundef !23
  %83 = trunc i8 %82 to i1, !dbg !15882
  br i1 %83, label %bb169, label %bb167, !dbg !15882

bb170:                                            ; preds = %bb171
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_35)
          to label %bb167 unwind label %cleanup9, !dbg !15882

bb167:                                            ; preds = %bb169, %bb168, %bb170
  store i8 0, i8* %_343, align 1, !dbg !15882
  store i32* %which_freebsd, i32** %x.dbg.spill, align 8, !dbg !15889
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill, metadata !15806, metadata !DIExpression()), !dbg !15890
  %_62 = load i32, i32* %which_freebsd, align 4, !dbg !15891
  %_61 = icmp slt i32 %_62, 10, !dbg !15891
  br i1 %_61, label %bb35, label %bb36, !dbg !15891

bb169:                                            ; preds = %bb168
  %84 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_35 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15882
  %85 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %84, i32 0, i32 1, !dbg !15882
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %85)
          to label %bb167 unwind label %cleanup9, !dbg !15882

bb36:                                             ; preds = %bb167
  %86 = load i32, i32* %which_freebsd, align 4, !dbg !15892
  switch i32 %86, label %bb34 [
    i32 10, label %bb38
    i32 11, label %bb39
    i32 12, label %bb40
    i32 13, label %bb41
    i32 14, label %bb42
  ], !dbg !15892

bb35:                                             ; preds = %bb167
  %x = load i32, i32* %which_freebsd, align 4, !dbg !15889
  store i32 %x, i32* %x.dbg.spill12, align 4, !dbg !15889
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill12, metadata !15804, metadata !DIExpression()), !dbg !15890
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_64, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc76 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb37 unwind label %cleanup9, !dbg !15893

bb37:                                             ; preds = %bb35
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_64, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc578 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup9, !dbg !15893

unreachable:                                      ; preds = %bb112, %bb103, %bb37
  unreachable

bb34:                                             ; preds = %bb36
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc11 to [0 x i8]*), i64 9)
          to label %bb195 unwind label %cleanup9, !dbg !15894

bb38:                                             ; preds = %bb36
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc6 to [0 x i8]*), i64 9)
          to label %bb196 unwind label %cleanup9, !dbg !15895

bb39:                                             ; preds = %bb36
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc7 to [0 x i8]*), i64 9)
          to label %bb197 unwind label %cleanup9, !dbg !15896

bb40:                                             ; preds = %bb36
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc8 to [0 x i8]*), i64 9)
          to label %bb198 unwind label %cleanup9, !dbg !15897

bb41:                                             ; preds = %bb36
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc9 to [0 x i8]*), i64 9)
          to label %bb199 unwind label %cleanup9, !dbg !15898

bb42:                                             ; preds = %bb36
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc10 to [0 x i8]*), i64 9)
          to label %bb200 unwind label %cleanup9, !dbg !15899

bb195:                                            ; preds = %bb34
  br label %bb43, !dbg !15894

bb43:                                             ; preds = %bb196, %bb197, %bb198, %bb199, %bb200, %bb195
; invoke build_script_build::emcc_version_code
  %87 = invoke { i64, i64 } @_ZN18build_script_build17emcc_version_code17haf23270efa161601E()
          to label %bb44 unwind label %cleanup9, !dbg !15900

bb200:                                            ; preds = %bb42
  br label %bb43, !dbg !15899

bb199:                                            ; preds = %bb41
  br label %bb43, !dbg !15898

bb198:                                            ; preds = %bb40
  br label %bb43, !dbg !15897

bb197:                                            ; preds = %bb39
  br label %bb43, !dbg !15896

bb196:                                            ; preds = %bb38
  br label %bb43, !dbg !15895

bb44:                                             ; preds = %bb43
  store { i64, i64 } %87, { i64, i64 }* %_84, align 8, !dbg !15900
  %88 = bitcast { i64, i64 }* %_84 to i64*, !dbg !15900
  %_85 = load i64, i64* %88, align 8, !dbg !15900, !range !3441, !noundef !23
  %89 = icmp eq i64 %_85, 1, !dbg !15901
  br i1 %89, label %bb45, label %bb47, !dbg !15901

bb45:                                             ; preds = %bb44
  %v = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_84, i32 0, i32 1, !dbg !15902
  store i64* %v, i64** %v.dbg.spill, align 8, !dbg !15902
  call void @llvm.dbg.declare(metadata i64** %v.dbg.spill, metadata !15809, metadata !DIExpression()), !dbg !15903
  %_89 = load i64, i64* %v, align 8, !dbg !15904
  %_88 = icmp ult i64 %_89, 30142, !dbg !15905
  br i1 %_88, label %bb46, label %bb47, !dbg !15905

bb47:                                             ; preds = %bb201, %bb45, %bb44
; invoke std::env::var
  invoke void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_94, [0 x i8]* align 1 bitcast (<{ [30 x i8] }>* @alloc586 to [0 x i8]*), i64 30)
          to label %bb48 unwind label %cleanup9, !dbg !15906

bb46:                                             ; preds = %bb45
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_84, i32 0, i32 1, !dbg !15902
  %v13 = load i64, i64* %90, align 8, !dbg !15902
  store i64 %v13, i64* %v.dbg.spill14, align 8, !dbg !15902
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill14, metadata !15807, metadata !DIExpression()), !dbg !15903
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [23 x i8] }>* @alloc3 to [0 x i8]*), i64 23)
          to label %bb201 unwind label %cleanup9, !dbg !15907

bb201:                                            ; preds = %bb46
  br label %bb47, !dbg !15907

bb48:                                             ; preds = %bb47
; invoke core::result::Result<T,E>::is_ok
  %musl_v1_2_3 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h9da37263fe3ff58fE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_94)
          to label %bb49 unwind label %cleanup15, !dbg !15906

bb158:                                            ; preds = %cleanup15
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_94) #16
          to label %bb160 unwind label %abort, !dbg !15908

cleanup15:                                        ; preds = %bb48
  %91 = landingpad { i8*, i32 }
          cleanup
  %92 = extractvalue { i8*, i32 } %91, 0
  %93 = extractvalue { i8*, i32 } %91, 1
  %94 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %92, i8** %94, align 8
  %95 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %93, i32* %95, align 8
  br label %bb158

bb49:                                             ; preds = %bb48
  %96 = zext i1 %musl_v1_2_3 to i8, !dbg !15906
  store i8 %96, i8* %musl_v1_2_3.dbg.spill, align 1, !dbg !15906
  call void @llvm.dbg.declare(metadata i8* %musl_v1_2_3.dbg.spill, metadata !15811, metadata !DIExpression()), !dbg !15909
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_94)
          to label %bb50 unwind label %cleanup9, !dbg !15908

bb50:                                             ; preds = %bb49
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_96, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc94 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb51 unwind label %cleanup9, !dbg !15910

bb51:                                             ; preds = %bb50
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_96)
          to label %bb52 unwind label %cleanup9, !dbg !15910

bb52:                                             ; preds = %bb51
  br i1 %musl_v1_2_3, label %bb56, label %bb57, !dbg !15911

bb57:                                             ; preds = %bb52
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::eq
  %_106 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2eq17hfc18d38ccd5a719eE"(%"alloc::string::String"* align 8 %target_arch, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc102 to { [0 x i8]*, i64 }*))
          to label %bb59 unwind label %cleanup9, !dbg !15912

bb56:                                             ; preds = %bb52
  store i8 1, i8* %_104, align 1, !dbg !15911
  br label %bb58, !dbg !15911

bb58:                                             ; preds = %bb59, %bb56
  %97 = load i8, i8* %_104, align 1, !dbg !15911, !range !512, !noundef !23
  %98 = trunc i8 %97 to i1, !dbg !15911
  br i1 %98, label %bb53, label %bb54, !dbg !15911

bb59:                                             ; preds = %bb57
  %99 = zext i1 %_106 to i8, !dbg !15911
  store i8 %99, i8* %_104, align 1, !dbg !15911
  br label %bb58, !dbg !15911

bb54:                                             ; preds = %bb58
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::eq
  %_109 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2eq17hfc18d38ccd5a719eE"(%"alloc::string::String"* align 8 %target_env, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc99 to { [0 x i8]*, i64 }*))
          to label %bb60 unwind label %cleanup9, !dbg !15913

bb53:                                             ; preds = %bb58
  store i8 1, i8* %_103, align 1, !dbg !15911
  br label %bb55, !dbg !15911

bb55:                                             ; preds = %bb60, %bb53
  %100 = load i8, i8* %_103, align 1, !dbg !15911, !range !512, !noundef !23
  %101 = trunc i8 %100 to i1, !dbg !15911
  br i1 %101, label %bb61, label %bb62, !dbg !15911

bb60:                                             ; preds = %bb54
  %102 = zext i1 %_109 to i8, !dbg !15911
  store i8 %102, i8* %_103, align 1, !dbg !15911
  br label %bb55, !dbg !15911

bb62:                                             ; preds = %bb202, %bb55
; invoke std::env::var
  invoke void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_117, [0 x i8]* align 1 bitcast (<{ [36 x i8] }>* @alloc588 to [0 x i8]*), i64 36)
          to label %bb63 unwind label %cleanup9, !dbg !15914

bb61:                                             ; preds = %bb55
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [11 x i8] }>* @alloc19 to [0 x i8]*), i64 11)
          to label %bb202 unwind label %cleanup9, !dbg !15915

bb202:                                            ; preds = %bb61
  br label %bb62, !dbg !15915

bb63:                                             ; preds = %bb62
; invoke core::result::Result<T,E>::is_ok
  %linux_time_bits64 = invoke zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h9da37263fe3ff58fE"(%"core::result::Result<alloc::string::String, std::env::VarError>"* align 8 %_117)
          to label %bb64 unwind label %cleanup16, !dbg !15914

bb157:                                            ; preds = %cleanup16
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_117) #16
          to label %bb160 unwind label %abort, !dbg !15916

cleanup16:                                        ; preds = %bb63
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  %105 = extractvalue { i8*, i32 } %103, 1
  %106 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %104, i8** %106, align 8
  %107 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %105, i32* %107, align 8
  br label %bb157

bb64:                                             ; preds = %bb63
  %108 = zext i1 %linux_time_bits64 to i8, !dbg !15914
  store i8 %108, i8* %linux_time_bits64.dbg.spill, align 1, !dbg !15914
  call void @llvm.dbg.declare(metadata i8* %linux_time_bits64.dbg.spill, metadata !15813, metadata !DIExpression()), !dbg !15917
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_117)
          to label %bb65 unwind label %cleanup9, !dbg !15916

bb65:                                             ; preds = %bb64
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_119, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc108 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb66 unwind label %cleanup9, !dbg !15918

bb66:                                             ; preds = %bb65
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_119)
          to label %bb67 unwind label %cleanup9, !dbg !15918

bb67:                                             ; preds = %bb66
  br i1 %linux_time_bits64, label %bb68, label %bb69, !dbg !15919

bb69:                                             ; preds = %bb203, %bb67
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_131, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc115 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb70 unwind label %cleanup9, !dbg !15920

bb68:                                             ; preds = %bb67
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [17 x i8] }>* @alloc18 to [0 x i8]*), i64 17)
          to label %bb203 unwind label %cleanup9, !dbg !15921

bb203:                                            ; preds = %bb68
  br label %bb69, !dbg !15921

bb70:                                             ; preds = %bb69
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_131)
          to label %bb71 unwind label %cleanup9, !dbg !15920

bb71:                                             ; preds = %bb70
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_139, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc120 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb72 unwind label %cleanup9, !dbg !15922

bb72:                                             ; preds = %bb71
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_139)
          to label %bb73 unwind label %cleanup9, !dbg !15922

bb73:                                             ; preds = %bb72
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::eq
  %_150 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2eq17hfc18d38ccd5a719eE"(%"alloc::string::String"* align 8 %target_env, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc125 to { [0 x i8]*, i64 }*))
          to label %bb86 unwind label %cleanup9, !dbg !15923

bb86:                                             ; preds = %bb73
  br i1 %_150, label %bb84, label %bb83, !dbg !15923

bb83:                                             ; preds = %bb86
  store i8 0, i8* %_149, align 1, !dbg !15923
  br label %bb85, !dbg !15923

bb84:                                             ; preds = %bb86
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::eq
  %_153 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2eq17hfc18d38ccd5a719eE"(%"alloc::string::String"* align 8 %target_os, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc137 to { [0 x i8]*, i64 }*))
          to label %bb87 unwind label %cleanup9, !dbg !15924

bb87:                                             ; preds = %bb84
  %109 = zext i1 %_153 to i8, !dbg !15923
  store i8 %109, i8* %_149, align 1, !dbg !15923
  br label %bb85, !dbg !15923

bb85:                                             ; preds = %bb83, %bb87
  %110 = load i8, i8* %_149, align 1, !dbg !15923, !range !512, !noundef !23
  %111 = trunc i8 %110 to i1, !dbg !15923
  br i1 %111, label %bb81, label %bb80, !dbg !15923

bb80:                                             ; preds = %bb85
  store i8 0, i8* %_148, align 1, !dbg !15923
  br label %bb82, !dbg !15923

bb81:                                             ; preds = %bb85
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::eq
  %_156 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2eq17hfc18d38ccd5a719eE"(%"alloc::string::String"* align 8 %target_ptr_width, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc164 to { [0 x i8]*, i64 }*))
          to label %bb88 unwind label %cleanup9, !dbg !15925

bb88:                                             ; preds = %bb81
  %112 = zext i1 %_156 to i8, !dbg !15923
  store i8 %112, i8* %_148, align 1, !dbg !15923
  br label %bb82, !dbg !15923

bb82:                                             ; preds = %bb80, %bb88
  %113 = load i8, i8* %_148, align 1, !dbg !15923, !range !512, !noundef !23
  %114 = trunc i8 %113 to i1, !dbg !15923
  br i1 %114, label %bb78, label %bb77, !dbg !15923

bb77:                                             ; preds = %bb82
  store i8 0, i8* %_147, align 1, !dbg !15923
  br label %bb79, !dbg !15923

bb78:                                             ; preds = %bb82
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::ne
  %_159 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2ne17hf4f082ba020c7022E"(%"alloc::string::String"* align 8 %target_arch, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc131 to { [0 x i8]*, i64 }*))
          to label %bb89 unwind label %cleanup9, !dbg !15926

bb89:                                             ; preds = %bb78
  %115 = zext i1 %_159 to i8, !dbg !15923
  store i8 %115, i8* %_147, align 1, !dbg !15923
  br label %bb79, !dbg !15923

bb79:                                             ; preds = %bb77, %bb89
  %116 = load i8, i8* %_147, align 1, !dbg !15923, !range !512, !noundef !23
  %117 = trunc i8 %116 to i1, !dbg !15923
  br i1 %117, label %bb75, label %bb74, !dbg !15923

bb74:                                             ; preds = %bb79
  store i8 0, i8* %_146, align 1, !dbg !15923
  br label %bb76, !dbg !15923

bb75:                                             ; preds = %bb79
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::ne
  %_162 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2ne17hf4f082ba020c7022E"(%"alloc::string::String"* align 8 %target_arch, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc128 to { [0 x i8]*, i64 }*))
          to label %bb90 unwind label %cleanup9, !dbg !15927

bb90:                                             ; preds = %bb75
  %118 = zext i1 %_162 to i8, !dbg !15923
  store i8 %118, i8* %_146, align 1, !dbg !15923
  br label %bb76, !dbg !15923

bb76:                                             ; preds = %bb74, %bb90
  %119 = load i8, i8* %_146, align 1, !dbg !15923, !range !512, !noundef !23
  %120 = trunc i8 %119 to i1, !dbg !15923
  br i1 %120, label %bb91, label %bb113, !dbg !15923

bb113:                                            ; preds = %bb177, %bb76
  br i1 %libc_ci, label %bb114, label %bb115, !dbg !15928

bb91:                                             ; preds = %bb76
; invoke std::env::var
  invoke void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_165, [0 x i8]* align 1 bitcast (<{ [32 x i8] }>* @alloc590 to [0 x i8]*), i64 32)
          to label %bb92 unwind label %cleanup9, !dbg !15929

bb92:                                             ; preds = %bb91
  store i8 1, i8* %_345, align 1, !dbg !15929
  %121 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_165 to i64*, !dbg !15929
  %_166 = load i64, i64* %121, align 8, !dbg !15929, !range !3441, !noundef !23
  %122 = icmp eq i64 %_166, 0, !dbg !15930
  br i1 %122, label %bb94, label %bb93, !dbg !15930

bb94:                                             ; preds = %bb92
  %123 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_165 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15931
  %val17 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %123, i32 0, i32 1, !dbg !15931
  store %"alloc::string::String"* %val17, %"alloc::string::String"** %val.dbg.spill, align 8, !dbg !15931
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %val.dbg.spill, metadata !15817, metadata !DIExpression()), !dbg !15845
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::eq
  %_169 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2eq17hfc18d38ccd5a719eE"(%"alloc::string::String"* align 8 %val17, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc159 to { [0 x i8]*, i64 }*))
          to label %bb95 unwind label %cleanup18, !dbg !15932

bb93:                                             ; preds = %bb101, %bb92
; invoke std::env::var
  invoke void @_ZN3std3env3var17h2dff9daebbbe2e5bE(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>") %_194, [0 x i8]* align 1 bitcast (<{ [39 x i8] }>* @alloc596 to [0 x i8]*), i64 39)
          to label %bb104 unwind label %cleanup18, !dbg !15933

bb189:                                            ; preds = %bb183, %bb182, %bb184, %bb155, %bb156, %cleanup18
  %124 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_165 to i64*, !dbg !15934
  %_350 = load i64, i64* %124, align 8, !dbg !15934, !range !3441, !noundef !23
  %125 = icmp eq i64 %_350, 0, !dbg !15934
  br i1 %125, label %bb186, label %bb188, !dbg !15934

cleanup18:                                        ; preds = %bb174, %bb175, %bb93, %bb97, %bb100, %bb94
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = extractvalue { i8*, i32 } %126, 0
  %128 = extractvalue { i8*, i32 } %126, 1
  %129 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %127, i8** %129, align 8
  %130 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %128, i32* %130, align 8
  br label %bb189

bb95:                                             ; preds = %bb94
  br i1 %_169, label %bb96, label %bb97, !dbg !15932

bb97:                                             ; preds = %bb95
  %131 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_165 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15935
  %val20 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %131, i32 0, i32 1, !dbg !15935
  store %"alloc::string::String"* %val20, %"alloc::string::String"** %val.dbg.spill21, align 8, !dbg !15935
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %val.dbg.spill21, metadata !15820, metadata !DIExpression()), !dbg !15846
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::ne
  %_183 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2ne17hf4f082ba020c7022E"(%"alloc::string::String"* align 8 %val20, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc164 to { [0 x i8]*, i64 }*))
          to label %bb101 unwind label %cleanup18, !dbg !15936

bb96:                                             ; preds = %bb95
  store i8 0, i8* %_345, align 1, !dbg !15931
  %132 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_165 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15931
  %133 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %132, i32 0, i32 1, !dbg !15931
  %134 = bitcast %"alloc::string::String"* %val to i8*, !dbg !15931
  %135 = bitcast %"alloc::string::String"* %133 to i8*, !dbg !15931
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 24, i1 false), !dbg !15931
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [22 x i8] }>* @alloc12 to [0 x i8]*), i64 22)
          to label %bb98 unwind label %cleanup19, !dbg !15937

bb156:                                            ; preds = %cleanup19
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %val) #16
          to label %bb189 unwind label %abort, !dbg !15938

cleanup19:                                        ; preds = %bb99, %bb98, %bb96
  %136 = landingpad { i8*, i32 }
          cleanup
  %137 = extractvalue { i8*, i32 } %136, 0
  %138 = extractvalue { i8*, i32 } %136, 1
  %139 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %137, i8** %139, align 8
  %140 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %138, i32* %140, align 8
  br label %bb156

bb98:                                             ; preds = %bb96
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [17 x i8] }>* @alloc18 to [0 x i8]*), i64 17)
          to label %bb99 unwind label %cleanup19, !dbg !15939

bb99:                                             ; preds = %bb98
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [15 x i8] }>* @alloc13 to [0 x i8]*), i64 15)
          to label %bb100 unwind label %cleanup19, !dbg !15940

bb100:                                            ; preds = %bb99
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %val)
          to label %bb181 unwind label %cleanup18, !dbg !15938

bb181:                                            ; preds = %bb172, %bb100
  %141 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_165 to i64*, !dbg !15934
  %_348 = load i64, i64* %141, align 8, !dbg !15934, !range !3441, !noundef !23
  %142 = icmp eq i64 %_348, 0, !dbg !15934
  br i1 %142, label %bb178, label %bb180, !dbg !15934

bb101:                                            ; preds = %bb97
  br i1 %_183, label %bb102, label %bb93, !dbg !15936

bb102:                                            ; preds = %bb101
  store i8 0, i8* %_345, align 1, !dbg !15935
  %143 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_165 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15935
  %144 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %143, i32 0, i32 1, !dbg !15935
  %145 = bitcast %"alloc::string::String"* %val1 to i8*, !dbg !15935
  %146 = bitcast %"alloc::string::String"* %144 to i8*, !dbg !15935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %146, i64 24, i1 false), !dbg !15935
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_187, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc154 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb103 unwind label %cleanup22, !dbg !15941

bb155:                                            ; preds = %cleanup22
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %val1) #16
          to label %bb189 unwind label %abort, !dbg !15942

cleanup22:                                        ; preds = %bb103, %bb102
  %147 = landingpad { i8*, i32 }
          cleanup
  %148 = extractvalue { i8*, i32 } %147, 0
  %149 = extractvalue { i8*, i32 } %147, 1
  %150 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %148, i8** %150, align 8
  %151 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %149, i32* %151, align 8
  br label %bb155

bb103:                                            ; preds = %bb102
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_187, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc595 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup22, !dbg !15941

bb104:                                            ; preds = %bb93
  store i8 1, i8* %_344, align 1, !dbg !15933
  %152 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_194 to i64*, !dbg !15933
  %_195 = load i64, i64* %152, align 8, !dbg !15933, !range !3441, !noundef !23
  %153 = icmp eq i64 %_195, 0, !dbg !15943
  br i1 %153, label %bb105, label %bb176, !dbg !15943

bb105:                                            ; preds = %bb104
  %154 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_194 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15944
  %val23 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %154, i32 0, i32 1, !dbg !15944
  store %"alloc::string::String"* %val23, %"alloc::string::String"** %val.dbg.spill24, align 8, !dbg !15944
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %val.dbg.spill24, metadata !15823, metadata !DIExpression()), !dbg !15847
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::eq
  %_198 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2eq17hfc18d38ccd5a719eE"(%"alloc::string::String"* align 8 %val23, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc159 to { [0 x i8]*, i64 }*))
          to label %bb106 unwind label %cleanup25, !dbg !15945

bb176:                                            ; preds = %bb110, %bb109, %bb104
  %155 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_194 to i64*, !dbg !15946
  %_347 = load i64, i64* %155, align 8, !dbg !15946, !range !3441, !noundef !23
  %156 = icmp eq i64 %_347, 0, !dbg !15946
  br i1 %156, label %bb173, label %bb175, !dbg !15946

bb185:                                            ; preds = %bb153, %bb154, %cleanup25
  %157 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_194 to i64*, !dbg !15946
  %_349 = load i64, i64* %157, align 8, !dbg !15946, !range !3441, !noundef !23
  %158 = icmp eq i64 %_349, 0, !dbg !15946
  br i1 %158, label %bb182, label %bb184, !dbg !15946

cleanup25:                                        ; preds = %bb108, %bb109, %bb105
  %159 = landingpad { i8*, i32 }
          cleanup
  %160 = extractvalue { i8*, i32 } %159, 0
  %161 = extractvalue { i8*, i32 } %159, 1
  %162 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %160, i8** %162, align 8
  %163 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %161, i32* %163, align 8
  br label %bb185

bb106:                                            ; preds = %bb105
  br i1 %_198, label %bb107, label %bb108, !dbg !15945

bb108:                                            ; preds = %bb106
  %164 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_194 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15947
  %val27 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %164, i32 0, i32 1, !dbg !15947
  store %"alloc::string::String"* %val27, %"alloc::string::String"** %val.dbg.spill28, align 8, !dbg !15947
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %val.dbg.spill28, metadata !15826, metadata !DIExpression()), !dbg !15848
; invoke <alloc::string::String as core::cmp::PartialEq<&str>>::ne
  %_206 = invoke zeroext i1 @"_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2ne17hf4f082ba020c7022E"(%"alloc::string::String"* align 8 %val27, { [0 x i8]*, i64 }* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc164 to { [0 x i8]*, i64 }*))
          to label %bb110 unwind label %cleanup25, !dbg !15948

bb107:                                            ; preds = %bb106
  store i8 0, i8* %_344, align 1, !dbg !15944
  %165 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_194 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15944
  %166 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %165, i32 0, i32 1, !dbg !15944
  %167 = bitcast %"alloc::string::String"* %val2 to i8*, !dbg !15944
  %168 = bitcast %"alloc::string::String"* %166 to i8*, !dbg !15944
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false), !dbg !15944
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [22 x i8] }>* @alloc12 to [0 x i8]*), i64 22)
          to label %bb109 unwind label %cleanup26, !dbg !15949

bb154:                                            ; preds = %cleanup26
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %val2) #16
          to label %bb185 unwind label %abort, !dbg !15950

cleanup26:                                        ; preds = %bb107
  %169 = landingpad { i8*, i32 }
          cleanup
  %170 = extractvalue { i8*, i32 } %169, 0
  %171 = extractvalue { i8*, i32 } %169, 1
  %172 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %170, i8** %172, align 8
  %173 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %171, i32* %173, align 8
  br label %bb154

bb109:                                            ; preds = %bb107
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %val2)
          to label %bb176 unwind label %cleanup25, !dbg !15950

bb110:                                            ; preds = %bb108
  br i1 %_206, label %bb111, label %bb176, !dbg !15948

bb111:                                            ; preds = %bb110
  store i8 0, i8* %_344, align 1, !dbg !15947
  %174 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_194 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15947
  %175 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %174, i32 0, i32 1, !dbg !15947
  %176 = bitcast %"alloc::string::String"* %val3 to i8*, !dbg !15947
  %177 = bitcast %"alloc::string::String"* %175 to i8*, !dbg !15947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 24, i1 false), !dbg !15947
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_210, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc167 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb112 unwind label %cleanup29, !dbg !15951

bb153:                                            ; preds = %cleanup29
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %val3) #16
          to label %bb185 unwind label %abort, !dbg !15952

cleanup29:                                        ; preds = %bb112, %bb111
  %178 = landingpad { i8*, i32 }
          cleanup
  %179 = extractvalue { i8*, i32 } %178, 0
  %180 = extractvalue { i8*, i32 } %178, 1
  %181 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %179, i8** %181, align 8
  %182 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %180, i32* %182, align 8
  br label %bb153

bb112:                                            ; preds = %bb111
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_210, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc599 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup29, !dbg !15951

bb182:                                            ; preds = %bb185
  %183 = load i8, i8* %_344, align 1, !dbg !15946, !range !512, !noundef !23
  %184 = trunc i8 %183 to i1, !dbg !15946
  br i1 %184, label %bb183, label %bb189, !dbg !15946

bb184:                                            ; preds = %bb185
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_194) #16
          to label %bb189 unwind label %abort, !dbg !15946

bb183:                                            ; preds = %bb182
  %185 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_194 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15946
  %186 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %185, i32 0, i32 1, !dbg !15946
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %186) #16
          to label %bb189 unwind label %abort, !dbg !15946

bb173:                                            ; preds = %bb176
  %187 = load i8, i8* %_344, align 1, !dbg !15946, !range !512, !noundef !23
  %188 = trunc i8 %187 to i1, !dbg !15946
  br i1 %188, label %bb174, label %bb172, !dbg !15946

bb175:                                            ; preds = %bb176
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_194)
          to label %bb172 unwind label %cleanup18, !dbg !15946

bb172:                                            ; preds = %bb174, %bb173, %bb175
  store i8 0, i8* %_344, align 1, !dbg !15946
  br label %bb181, !dbg !15946

bb174:                                            ; preds = %bb173
  %189 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_194 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15946
  %190 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %189, i32 0, i32 1, !dbg !15946
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %190)
          to label %bb172 unwind label %cleanup18, !dbg !15946

bb186:                                            ; preds = %bb189
  %191 = load i8, i8* %_345, align 1, !dbg !15934, !range !512, !noundef !23
  %192 = trunc i8 %191 to i1, !dbg !15934
  br i1 %192, label %bb187, label %bb160, !dbg !15934

bb188:                                            ; preds = %bb189
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_165) #16
          to label %bb160 unwind label %abort, !dbg !15934

bb187:                                            ; preds = %bb186
  %193 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_165 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15934
  %194 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %193, i32 0, i32 1, !dbg !15934
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %194) #16
          to label %bb160 unwind label %abort, !dbg !15934

bb178:                                            ; preds = %bb181
  %195 = load i8, i8* %_345, align 1, !dbg !15934, !range !512, !noundef !23
  %196 = trunc i8 %195 to i1, !dbg !15934
  br i1 %196, label %bb179, label %bb177, !dbg !15934

bb180:                                            ; preds = %bb181
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E"(%"core::result::Result<alloc::string::String, std::env::VarError>"* %_165)
          to label %bb177 unwind label %cleanup9, !dbg !15934

bb177:                                            ; preds = %bb179, %bb178, %bb180
  store i8 0, i8* %_345, align 1, !dbg !15934
  br label %bb113, !dbg !15953

bb179:                                            ; preds = %bb178
  %197 = bitcast %"core::result::Result<alloc::string::String, std::env::VarError>"* %_165 to %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"*, !dbg !15934
  %198 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", %"core::result::Result<alloc::string::String, std::env::VarError>::Ok"* %197, i32 0, i32 1, !dbg !15934
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %198)
          to label %bb177 unwind label %cleanup9, !dbg !15934

bb115:                                            ; preds = %bb204, %bb113
  br i1 %rustc_dep_of_std, label %bb116, label %bb117, !dbg !15954

bb114:                                            ; preds = %bb113
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [18 x i8] }>* @alloc15 to [0 x i8]*), i64 18)
          to label %bb204 unwind label %cleanup9, !dbg !15955

bb204:                                            ; preds = %bb114
  br label %bb115, !dbg !15955

bb117:                                            ; preds = %bb205, %bb115
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [20 x i8] }>* @alloc14 to [0 x i8]*), i64 20)
          to label %bb118 unwind label %cleanup9, !dbg !15956

bb116:                                            ; preds = %bb115
; invoke build_script_build::set_cfg
  invoke void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 bitcast (<{ [17 x i8] }>* @alloc16 to [0 x i8]*), i64 17)
          to label %bb205 unwind label %cleanup9, !dbg !15957

bb205:                                            ; preds = %bb116
  br label %bb117, !dbg !15957

bb118:                                            ; preds = %bb117
  %_228 = icmp uge i32 %_11.0, 80, !dbg !15958
  br i1 %_228, label %bb119, label %bb147, !dbg !15958

bb147:                                            ; preds = %bb134, %bb118
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %target_arch)
          to label %bb148 unwind label %cleanup8, !dbg !15875

bb119:                                            ; preds = %bb118
  %199 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** getelementptr inbounds ({ [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*), i32 0, i32 0), align 8, !dbg !15959, !nonnull !23, !align !584, !noundef !23
  %200 = load i64, i64* getelementptr inbounds ({ [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*), i32 0, i32 1), align 8, !dbg !15959
; invoke core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %201 = invoke { i64*, i64* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h80661dbf99d720d9E"([0 x { [0 x i8]*, i64 }]* align 8 %199, i64 %200)
          to label %bb120 unwind label %cleanup9, !dbg !15959

bb120:                                            ; preds = %bb119
  %_230.0 = extractvalue { i64*, i64* } %201, 0, !dbg !15959
  %_230.1 = extractvalue { i64*, i64* } %201, 1, !dbg !15959
  %202 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 0, !dbg !15959
  store i64* %_230.0, i64** %202, align 8, !dbg !15959
  %203 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter, i32 0, i32 1, !dbg !15959
  store i64* %_230.1, i64** %203, align 8, !dbg !15959
  br label %bb121, !dbg !15960

bb121:                                            ; preds = %bb207, %bb206, %bb120
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %204 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E"({ i64*, i64* }* align 8 %iter)
          to label %bb122 unwind label %cleanup9, !dbg !15849

bb122:                                            ; preds = %bb121
  store i64* %204, i64** %_232, align 8, !dbg !15849
  %205 = bitcast i64** %_232 to {}**, !dbg !15849
  %206 = load {}*, {}** %205, align 8, !dbg !15849
  %207 = icmp eq {}* %206, null, !dbg !15849
  %_235 = select i1 %207, i64 0, i64 1, !dbg !15849
  switch i64 %_235, label %bb124 [
    i64 0, label %bb125
    i64 1, label %bb123
  ], !dbg !15849

bb124:                                            ; preds = %bb122
  unreachable, !dbg !15849

bb125:                                            ; preds = %bb122
  %208 = load [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]** getelementptr inbounds ({ [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @2 to { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }*), i32 0, i32 0), align 8, !dbg !15961, !nonnull !23, !align !584, !noundef !23
  %209 = load i64, i64* getelementptr inbounds ({ [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }, { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @2 to { [0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]*, i64 }*), i32 0, i32 1), align 8, !dbg !15961
; invoke core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %210 = invoke { i64*, i64* } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h5182e53e41c67fe6E"([0 x { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }]* align 8 %208, i64 %209)
          to label %bb132 unwind label %cleanup9, !dbg !15961

bb123:                                            ; preds = %bb122
  %211 = bitcast i64** %_232 to { [0 x i8]*, i64 }**, !dbg !15962
  %212 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %211, align 8, !dbg !15962, !nonnull !23, !align !584, !noundef !23
  store { [0 x i8]*, i64 }* %212, { [0 x i8]*, i64 }** %cfg, align 8, !dbg !15962
  %_237 = icmp uge i32 %_11.0, 75, !dbg !15963
  br i1 %_237, label %bb126, label %bb129, !dbg !15963

bb129:                                            ; preds = %bb123
; invoke core::fmt::ArgumentV1::new_display
  %213 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h284bd7125bac7ee2E({ [0 x i8]*, i64 }** align 8 %cfg)
          to label %bb130 unwind label %cleanup9, !dbg !15964

bb126:                                            ; preds = %bb123
; invoke core::fmt::ArgumentV1::new_display
  %214 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h284bd7125bac7ee2E({ [0 x i8]*, i64 }** align 8 %cfg)
          to label %bb127 unwind label %cleanup9, !dbg !15965

bb127:                                            ; preds = %bb126
  %_248.0 = extractvalue { i8*, i64* } %214, 0, !dbg !15965
  %_248.1 = extractvalue { i8*, i64* } %214, 1, !dbg !15965
  %215 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_247, i64 0, i64 0, !dbg !15965
  %216 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %215, i32 0, i32 0, !dbg !15965
  store i8* %_248.0, i8** %216, align 8, !dbg !15965
  %217 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %215, i32 0, i32 1, !dbg !15965
  store i64* %_248.1, i64** %217, align 8, !dbg !15965
  %_244.0 = bitcast [1 x { i8*, i64* }]* %_247 to [0 x { i8*, i64* }]*, !dbg !15965
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_240, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc178 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_244.0, i64 1)
          to label %bb128 unwind label %cleanup9, !dbg !15965

bb128:                                            ; preds = %bb127
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_240)
          to label %bb206 unwind label %cleanup9, !dbg !15965

bb206:                                            ; preds = %bb128
  br label %bb121, !dbg !15965

bb130:                                            ; preds = %bb129
  %_260.0 = extractvalue { i8*, i64* } %213, 0, !dbg !15964
  %_260.1 = extractvalue { i8*, i64* } %213, 1, !dbg !15964
  %218 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_259, i64 0, i64 0, !dbg !15964
  %219 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %218, i32 0, i32 0, !dbg !15964
  store i8* %_260.0, i8** %219, align 8, !dbg !15964
  %220 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %218, i32 0, i32 1, !dbg !15964
  store i64* %_260.1, i64** %220, align 8, !dbg !15964
  %_256.0 = bitcast [1 x { i8*, i64* }]* %_259 to [0 x { i8*, i64* }]*, !dbg !15964
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_252, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc182 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_256.0, i64 1)
          to label %bb131 unwind label %cleanup9, !dbg !15964

bb131:                                            ; preds = %bb130
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_252)
          to label %bb207 unwind label %cleanup9, !dbg !15964

bb207:                                            ; preds = %bb131
  br label %bb121, !dbg !15964

bb132:                                            ; preds = %bb125
  %_263.0 = extractvalue { i64*, i64* } %210, 0, !dbg !15961
  %_263.1 = extractvalue { i64*, i64* } %210, 1, !dbg !15961
  %221 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter4, i32 0, i32 0, !dbg !15961
  store i64* %_263.0, i64** %221, align 8, !dbg !15961
  %222 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %iter4, i32 0, i32 1, !dbg !15961
  store i64* %_263.1, i64** %222, align 8, !dbg !15961
  br label %bb133, !dbg !15966

bb133:                                            ; preds = %bb146, %bb132
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %223 = invoke align 8 i64* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha8eecab141ec909bE"({ i64*, i64* }* align 8 %iter4)
          to label %bb134 unwind label %cleanup9, !dbg !15851

bb134:                                            ; preds = %bb133
  store i64* %223, i64** %_265, align 8, !dbg !15851
  %224 = bitcast i64** %_265 to {}**, !dbg !15851
  %225 = load {}*, {}** %224, align 8, !dbg !15851
  %226 = icmp eq {}* %225, null, !dbg !15851
  %_268 = select i1 %226, i64 0, i64 1, !dbg !15851
  switch i64 %_268, label %bb136 [
    i64 0, label %bb147
    i64 1, label %bb135
  ], !dbg !15851

bb136:                                            ; preds = %bb134
  unreachable, !dbg !15851

bb135:                                            ; preds = %bb134
  %227 = bitcast i64** %_265 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !15967
  %_341 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %227, align 8, !dbg !15967, !nonnull !23, !align !584, !noundef !23
  %228 = bitcast { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_341 to { [0 x i8]*, i64 }*, !dbg !15967
  %229 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %228, i32 0, i32 0, !dbg !15967
  %230 = load [0 x i8]*, [0 x i8]** %229, align 8, !dbg !15967, !nonnull !23, !align !445, !noundef !23
  %231 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %228, i32 0, i32 1, !dbg !15967
  %232 = load i64, i64* %231, align 8, !dbg !15967
  %233 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %name, i32 0, i32 0, !dbg !15967
  store [0 x i8]* %230, [0 x i8]** %233, align 8, !dbg !15967
  %234 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %name, i32 0, i32 1, !dbg !15967
  store i64 %232, i64* %234, align 8, !dbg !15967
  %235 = bitcast i64** %_265 to { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }**, !dbg !15968
  %_342 = load { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }*, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }** %235, align 8, !dbg !15968, !nonnull !23, !align !584, !noundef !23
  %236 = getelementptr inbounds { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }, { { [0 x i8]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 } }* %_342, i32 0, i32 1, !dbg !15968
  %237 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %236, i32 0, i32 0, !dbg !15968
  %values.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** %237, align 8, !dbg !15968, !nonnull !23, !align !584, !noundef !23
  %238 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %236, i32 0, i32 1, !dbg !15968
  %values.1 = load i64, i64* %238, align 8, !dbg !15968
  %239 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %values.dbg.spill, i32 0, i32 0, !dbg !15968
  store [0 x { [0 x i8]*, i64 }]* %values.0, [0 x { [0 x i8]*, i64 }]** %239, align 8, !dbg !15968
  %240 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %values.dbg.spill, i32 0, i32 1, !dbg !15968
  store i64 %values.1, i64* %240, align 8, !dbg !15968
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %values.dbg.spill, metadata !15835, metadata !DIExpression()), !dbg !15969
; invoke alloc::slice::<impl [T]>::join
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17h867228384328236eE"(%"alloc::string::String"* sret(%"alloc::string::String") %values, [0 x { [0 x i8]*, i64 }]* align 8 %values.0, i64 %values.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc603 to [0 x i8]*), i64 3)
          to label %bb137 unwind label %cleanup9, !dbg !15970

bb137:                                            ; preds = %bb135
  %_275 = icmp uge i32 %_11.0, 75, !dbg !15971
  br i1 %_275, label %bb138, label %bb142, !dbg !15971

bb142:                                            ; preds = %bb137
; invoke core::fmt::ArgumentV1::new_display
  %241 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hd3e7c3896cc0a32bE({ [0 x i8]*, i64 }* align 8 %name)
          to label %bb143 unwind label %cleanup30, !dbg !15972

bb138:                                            ; preds = %bb137
; invoke core::fmt::ArgumentV1::new_display
  %242 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hd3e7c3896cc0a32bE({ [0 x i8]*, i64 }* align 8 %name)
          to label %bb139 unwind label %cleanup30, !dbg !15973

bb152:                                            ; preds = %cleanup30
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %values) #16
          to label %bb160 unwind label %abort, !dbg !15974

cleanup30:                                        ; preds = %bb145, %bb144, %bb143, %bb142, %bb141, %bb140, %bb139, %bb138
  %243 = landingpad { i8*, i32 }
          cleanup
  %244 = extractvalue { i8*, i32 } %243, 0
  %245 = extractvalue { i8*, i32 } %243, 1
  %246 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %244, i8** %246, align 8
  %247 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %245, i32* %247, align 8
  br label %bb152

bb139:                                            ; preds = %bb138
  %_286.0 = extractvalue { i8*, i64* } %242, 0, !dbg !15973
  %_286.1 = extractvalue { i8*, i64* } %242, 1, !dbg !15973
; invoke core::fmt::ArgumentV1::new_display
  %248 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h1b4be81c2260b809E(%"alloc::string::String"* align 8 %values)
          to label %bb140 unwind label %cleanup30, !dbg !15973

bb140:                                            ; preds = %bb139
  %_289.0 = extractvalue { i8*, i64* } %248, 0, !dbg !15973
  %_289.1 = extractvalue { i8*, i64* } %248, 1, !dbg !15973
  %249 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_285, i64 0, i64 0, !dbg !15973
  %250 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %249, i32 0, i32 0, !dbg !15973
  store i8* %_286.0, i8** %250, align 8, !dbg !15973
  %251 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %249, i32 0, i32 1, !dbg !15973
  store i64* %_286.1, i64** %251, align 8, !dbg !15973
  %252 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_285, i64 0, i64 1, !dbg !15973
  %253 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %252, i32 0, i32 0, !dbg !15973
  store i8* %_289.0, i8** %253, align 8, !dbg !15973
  %254 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %252, i32 0, i32 1, !dbg !15973
  store i64* %_289.1, i64** %254, align 8, !dbg !15973
  %_282.0 = bitcast [2 x { i8*, i64* }]* %_285 to [0 x { i8*, i64* }]*, !dbg !15973
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_278, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc188 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_282.0, i64 2)
          to label %bb141 unwind label %cleanup30, !dbg !15973

bb141:                                            ; preds = %bb140
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_278)
          to label %bb208 unwind label %cleanup30, !dbg !15973

bb208:                                            ; preds = %bb141
  br label %bb146, !dbg !15973

bb146:                                            ; preds = %bb209, %bb208
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %values)
          to label %bb133 unwind label %cleanup9, !dbg !15974

bb143:                                            ; preds = %bb142
  %_301.0 = extractvalue { i8*, i64* } %241, 0, !dbg !15972
  %_301.1 = extractvalue { i8*, i64* } %241, 1, !dbg !15972
; invoke core::fmt::ArgumentV1::new_display
  %255 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17h1b4be81c2260b809E(%"alloc::string::String"* align 8 %values)
          to label %bb144 unwind label %cleanup30, !dbg !15972

bb144:                                            ; preds = %bb143
  %_304.0 = extractvalue { i8*, i64* } %255, 0, !dbg !15972
  %_304.1 = extractvalue { i8*, i64* } %255, 1, !dbg !15972
  %256 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_300, i64 0, i64 0, !dbg !15972
  %257 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %256, i32 0, i32 0, !dbg !15972
  store i8* %_301.0, i8** %257, align 8, !dbg !15972
  %258 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %256, i32 0, i32 1, !dbg !15972
  store i64* %_301.1, i64** %258, align 8, !dbg !15972
  %259 = getelementptr inbounds [2 x { i8*, i64* }], [2 x { i8*, i64* }]* %_300, i64 0, i64 1, !dbg !15972
  %260 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %259, i32 0, i32 0, !dbg !15972
  store i8* %_304.0, i8** %260, align 8, !dbg !15972
  %261 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %259, i32 0, i32 1, !dbg !15972
  store i64* %_304.1, i64** %261, align 8, !dbg !15972
  %_297.0 = bitcast [2 x { i8*, i64* }]* %_300 to [0 x { i8*, i64* }]*, !dbg !15972
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_293, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8], i8*, [8 x i8] }>* @alloc193 to [0 x { [0 x i8]*, i64 }]*), i64 3, [0 x { i8*, i64* }]* align 8 %_297.0, i64 2)
          to label %bb145 unwind label %cleanup30, !dbg !15972

bb145:                                            ; preds = %bb144
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_293)
          to label %bb209 unwind label %cleanup30, !dbg !15972

bb209:                                            ; preds = %bb145
  br label %bb146, !dbg !15972

bb148:                                            ; preds = %bb147
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %target_ptr_width)
          to label %bb149 unwind label %cleanup7, !dbg !15873

bb149:                                            ; preds = %bb148
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %target_os)
          to label %bb150 unwind label %cleanup6, !dbg !15871

bb150:                                            ; preds = %bb149
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %target_env), !dbg !15869
  br label %bb151, !dbg !15869

bb151:                                            ; preds = %bb150
  ret void, !dbg !15975
}

; build_script_build::rustc_version_cmd
; Function Attrs: nonlazybind uwtable
define internal void @_ZN18build_script_build17rustc_version_cmd17hb9ba91e067814cb6E(%"std::process::Output"* sret(%"std::process::Output") %output, i1 zeroext %is_clippy_driver) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !15976 {
start:
  %wrapper.dbg.spill = alloca %"std::ffi::os_str::OsString"**, align 8
  %0 = alloca { i8*, i32 }, align 8
  %is_clippy_driver.dbg.spill = alloca i8, align 1
  %_54 = alloca i8, align 1
  %_53 = alloca i8, align 1
  %_47 = alloca %"alloc::borrow::Cow<str>", align 8
  %_43 = alloca [1 x { i8*, i64* }], align 8
  %_36 = alloca %"core::fmt::Arguments", align 8
  %_28 = alloca %"core::result::Result<std::process::Output, std::io::error::Error>", align 8
  %_25 = alloca %"std::ffi::os_str::OsString", align 8
  %_21 = alloca %"std::ffi::os_str::OsString", align 8
  %_18 = alloca %"std::ffi::os_str::OsString", align 8
  %cmd2 = alloca %"std::process::Command", align 8
  %wrapper1 = alloca %"std::ffi::os_str::OsString", align 8
  %_15 = alloca %"std::ffi::os_str::OsString", align 8
  %wrapper = alloca %"std::ffi::os_str::OsString"*, align 8
  %_7 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %cmd = alloca %"std::process::Command", align 8
  %_3 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %rustc = alloca %"std::ffi::os_str::OsString", align 8
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %output, metadata !15993, metadata !DIExpression()), !dbg !15995
  %1 = zext i1 %is_clippy_driver to i8
  store i8 %1, i8* %is_clippy_driver.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %is_clippy_driver.dbg.spill, metadata !15980, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"* %rustc, metadata !15981, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.declare(metadata %"std::process::Command"* %cmd, metadata !15983, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"** %wrapper, metadata !15985, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"* %wrapper1, metadata !15989, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.declare(metadata %"std::process::Command"* %cmd2, metadata !15991, metadata !DIExpression()), !dbg !16001
  store i8 0, i8* %_54, align 1, !dbg !16002
  store i8 0, i8* %_53, align 1, !dbg !16002
; call std::env::var_os
  call void @_ZN3std3env6var_os17h9497c5a252de7612E(%"core::option::Option<std::ffi::os_str::OsString>"* sret(%"core::option::Option<std::ffi::os_str::OsString>") %_3, [0 x i8]* align 1 bitcast (<{ [5 x i8] }>* @alloc604 to [0 x i8]*), i64 5), !dbg !16003
  br label %bb1, !dbg !16003

bb1:                                              ; preds = %start
; call core::option::Option<T>::expect
  call void @"_ZN4core6option15Option$LT$T$GT$6expect17h7993371ccbea4fd2E"(%"std::ffi::os_str::OsString"* sret(%"std::ffi::os_str::OsString") %rustc, %"core::option::Option<std::ffi::os_str::OsString>"* %_3, [0 x i8]* align 1 bitcast (<{ [46 x i8] }>* @alloc605 to [0 x i8]*), i64 46, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc607 to %"core::panic::location::Location"*)), !dbg !16003
  br label %bb2, !dbg !16003

bb2:                                              ; preds = %bb1
  store i8 1, i8* %_54, align 1, !dbg !16004
; invoke std::env::var_os
  invoke void @_ZN3std3env6var_os17h9497c5a252de7612E(%"core::option::Option<std::ffi::os_str::OsString>"* sret(%"core::option::Option<std::ffi::os_str::OsString>") %_7, [0 x i8]* align 1 bitcast (<{ [13 x i8] }>* @alloc608 to [0 x i8]*), i64 13)
          to label %bb3 unwind label %cleanup, !dbg !16005

bb39:                                             ; preds = %bb28, %bb36, %bb35, %bb37, %cleanup
  %2 = load i8, i8* %_54, align 1, !dbg !16006, !range !512, !noundef !23
  %3 = trunc i8 %2 to i1, !dbg !16006
  br i1 %3, label %bb38, label %bb30, !dbg !16006

cleanup:                                          ; preds = %bb24, %bb2
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb39

bb3:                                              ; preds = %bb2
  store i8 1, i8* %_53, align 1, !dbg !16005
  %9 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_7 to {}**, !dbg !16005
  %10 = load {}*, {}** %9, align 8, !dbg !16005
  %11 = icmp eq {}* %10, null, !dbg !16005
  %_8 = select i1 %11, i64 0, i64 1, !dbg !16005
  switch i64 %_8, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !16007

bb5:                                              ; preds = %bb3
  unreachable, !dbg !16005

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_54, align 1, !dbg !16008
  %12 = bitcast %"std::ffi::os_str::OsString"* %_25 to i8*, !dbg !16008
  %13 = bitcast %"std::ffi::os_str::OsString"* %rustc to i8*, !dbg !16008
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !16008
; invoke std::process::Command::new
  invoke void @_ZN3std7process7Command3new17h73e5afb7c0ac4ee6E(%"std::process::Command"* sret(%"std::process::Command") %cmd, %"std::ffi::os_str::OsString"* %_25)
          to label %bb40 unwind label %cleanup3, !dbg !16009

bb6:                                              ; preds = %bb3
  %14 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_7 to %"core::option::Option<std::ffi::os_str::OsString>::Some"*, !dbg !16010
  %15 = bitcast %"core::option::Option<std::ffi::os_str::OsString>::Some"* %14 to %"std::ffi::os_str::OsString"*, !dbg !16010
  store %"std::ffi::os_str::OsString"* %15, %"std::ffi::os_str::OsString"** %wrapper, align 8, !dbg !16010
  store %"std::ffi::os_str::OsString"** %wrapper, %"std::ffi::os_str::OsString"*** %wrapper.dbg.spill, align 8, !dbg !16010
  call void @llvm.dbg.declare(metadata %"std::ffi::os_str::OsString"*** %wrapper.dbg.spill, metadata !15987, metadata !DIExpression()), !dbg !15999
  %_52 = load %"std::ffi::os_str::OsString"*, %"std::ffi::os_str::OsString"** %wrapper, align 8, !dbg !16011, !nonnull !23, !align !584, !noundef !23
; invoke <std::ffi::os_str::OsString as core::ops::deref::Deref>::deref
  %16 = invoke { %"std::ffi::os_str::OsStr"*, i64 } @"_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9daeb037d4eadd5cE"(%"std::ffi::os_str::OsString"* align 8 %_52)
          to label %bb7 unwind label %cleanup3, !dbg !16011

bb37:                                             ; preds = %bb29, %cleanup3
  %17 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_7 to {}**, !dbg !16012
  %18 = load {}*, {}** %17, align 8, !dbg !16012
  %19 = icmp eq {}* %18, null, !dbg !16012
  %_56 = select i1 %19, i64 0, i64 1, !dbg !16012
  %20 = icmp eq i64 %_56, 1, !dbg !16012
  br i1 %20, label %bb35, label %bb39, !dbg !16012

cleanup3:                                         ; preds = %bb4, %bb10, %bb9, %bb7, %bb6
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb37

bb7:                                              ; preds = %bb6
  %_13.0 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %16, 0, !dbg !16011
  %_13.1 = extractvalue { %"std::ffi::os_str::OsStr"*, i64 } %16, 1, !dbg !16011
; invoke std::ffi::os_str::OsStr::is_empty
  %_11 = invoke zeroext i1 @_ZN3std3ffi6os_str5OsStr8is_empty17h6fb2cce940f29d11E(%"std::ffi::os_str::OsStr"* align 1 %_13.0, i64 %_13.1)
          to label %bb8 unwind label %cleanup3, !dbg !16011

bb8:                                              ; preds = %bb7
  br i1 %_11, label %bb9, label %bb10, !dbg !16011

bb10:                                             ; preds = %bb8
  store i8 0, i8* %_53, align 1, !dbg !16013
  %26 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_7 to %"core::option::Option<std::ffi::os_str::OsString>::Some"*, !dbg !16013
  %27 = bitcast %"core::option::Option<std::ffi::os_str::OsString>::Some"* %26 to %"std::ffi::os_str::OsString"*, !dbg !16013
  %28 = bitcast %"std::ffi::os_str::OsString"* %wrapper1 to i8*, !dbg !16013
  %29 = bitcast %"std::ffi::os_str::OsString"* %27 to i8*, !dbg !16013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false), !dbg !16013
  %30 = bitcast %"std::ffi::os_str::OsString"* %_18 to i8*, !dbg !16014
  %31 = bitcast %"std::ffi::os_str::OsString"* %wrapper1 to i8*, !dbg !16014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false), !dbg !16014
; invoke std::process::Command::new
  invoke void @_ZN3std7process7Command3new17h73e5afb7c0ac4ee6E(%"std::process::Command"* sret(%"std::process::Command") %cmd2, %"std::ffi::os_str::OsString"* %_18)
          to label %bb11 unwind label %cleanup3, !dbg !16015

bb9:                                              ; preds = %bb8
  store i8 0, i8* %_54, align 1, !dbg !16016
  %32 = bitcast %"std::ffi::os_str::OsString"* %_15 to i8*, !dbg !16016
  %33 = bitcast %"std::ffi::os_str::OsString"* %rustc to i8*, !dbg !16016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 24, i1 false), !dbg !16016
; invoke std::process::Command::new
  invoke void @_ZN3std7process7Command3new17h73e5afb7c0ac4ee6E(%"std::process::Command"* sret(%"std::process::Command") %cmd, %"std::ffi::os_str::OsString"* %_15)
          to label %bb41 unwind label %cleanup3, !dbg !16017

bb41:                                             ; preds = %bb9
  br label %bb34, !dbg !16017

bb34:                                             ; preds = %bb40, %bb14, %bb41
  %34 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_7 to {}**, !dbg !16012
  %35 = load {}*, {}** %34, align 8, !dbg !16012
  %36 = icmp eq {}* %35, null, !dbg !16012
  %_55 = select i1 %36, i64 0, i64 1, !dbg !16012
  %37 = icmp eq i64 %_55, 1, !dbg !16012
  br i1 %37, label %bb32, label %bb31, !dbg !16012

bb11:                                             ; preds = %bb10
  store i8 0, i8* %_54, align 1, !dbg !16018
  %38 = bitcast %"std::ffi::os_str::OsString"* %_21 to i8*, !dbg !16018
  %39 = bitcast %"std::ffi::os_str::OsString"* %rustc to i8*, !dbg !16018
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false), !dbg !16018
; invoke std::process::Command::arg
  %_19 = invoke align 8 %"std::process::Command"* @_ZN3std7process7Command3arg17haab4420e573e4115E(%"std::process::Command"* align 8 %cmd2, %"std::ffi::os_str::OsString"* %_21)
          to label %bb12 unwind label %cleanup4, !dbg !16019

bb29:                                             ; preds = %cleanup4
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %cmd2) #16
          to label %bb37 unwind label %abort, !dbg !16020

cleanup4:                                         ; preds = %bb13, %bb11
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  %43 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %42, i32* %44, align 8
  br label %bb29

bb12:                                             ; preds = %bb11
  br i1 %is_clippy_driver, label %bb13, label %bb14, !dbg !16021

bb14:                                             ; preds = %bb42, %bb12
  %45 = bitcast %"std::process::Command"* %cmd to i8*, !dbg !16022
  %46 = bitcast %"std::process::Command"* %cmd2 to i8*, !dbg !16022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 208, i1 false), !dbg !16022
  br label %bb34, !dbg !16023

bb13:                                             ; preds = %bb12
; invoke std::process::Command::arg
  %_23 = invoke align 8 %"std::process::Command"* @_ZN3std7process7Command3arg17he741b1289eee98d1E(%"std::process::Command"* align 8 %cmd2, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc609 to [0 x i8]*), i64 7)
          to label %bb42 unwind label %cleanup4, !dbg !16024

bb42:                                             ; preds = %bb13
  br label %bb14, !dbg !16024

abort:                                            ; preds = %bb38, %bb28, %bb27, %bb26, %bb36, %bb29
  %47 = landingpad { i8*, i32 }
          cleanup, !dbg !16025
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !16025
  unreachable, !dbg !16025

bb40:                                             ; preds = %bb4
  br label %bb34, !dbg !16009

bb35:                                             ; preds = %bb37
  %48 = load i8, i8* %_53, align 1, !dbg !16012, !range !512, !noundef !23
  %49 = trunc i8 %48 to i1, !dbg !16012
  br i1 %49, label %bb36, label %bb39, !dbg !16012

bb36:                                             ; preds = %bb35
  %50 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_7 to %"core::option::Option<std::ffi::os_str::OsString>::Some"*, !dbg !16012
  %51 = bitcast %"core::option::Option<std::ffi::os_str::OsString>::Some"* %50 to %"std::ffi::os_str::OsString"*, !dbg !16012
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %51) #16
          to label %bb39 unwind label %abort, !dbg !16012

bb32:                                             ; preds = %bb34
  %52 = load i8, i8* %_53, align 1, !dbg !16012, !range !512, !noundef !23
  %53 = trunc i8 %52 to i1, !dbg !16012
  br i1 %53, label %bb33, label %bb31, !dbg !16012

bb31:                                             ; preds = %bb33, %bb32, %bb34
  store i8 0, i8* %_53, align 1, !dbg !16012
; invoke std::process::Command::arg
  %_26 = invoke align 8 %"std::process::Command"* @_ZN3std7process7Command3arg17he741b1289eee98d1E(%"std::process::Command"* align 8 %cmd, [0 x i8]* align 1 bitcast (<{ [9 x i8] }>* @alloc610 to [0 x i8]*), i64 9)
          to label %bb15 unwind label %cleanup5, !dbg !16026

bb33:                                             ; preds = %bb32
  %54 = bitcast %"core::option::Option<std::ffi::os_str::OsString>"* %_7 to %"core::option::Option<std::ffi::os_str::OsString>::Some"*, !dbg !16012
  %55 = bitcast %"core::option::Option<std::ffi::os_str::OsString>::Some"* %54 to %"std::ffi::os_str::OsString"*, !dbg !16012
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %55)
          to label %bb31 unwind label %cleanup5, !dbg !16012

bb28:                                             ; preds = %bb27, %cleanup5
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %cmd) #16
          to label %bb39 unwind label %abort, !dbg !16027

cleanup5:                                         ; preds = %bb16, %bb15, %bb31, %bb33
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  %58 = extractvalue { i8*, i32 } %56, 1
  %59 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %58, i32* %60, align 8
  br label %bb28

bb15:                                             ; preds = %bb31
; invoke std::process::Command::output
  invoke void @_ZN3std7process7Command6output17h8f4146acd0d0e05aE(%"core::result::Result<std::process::Output, std::io::error::Error>"* sret(%"core::result::Result<std::process::Output, std::io::error::Error>") %_28, %"std::process::Command"* align 8 %cmd)
          to label %bb16 unwind label %cleanup5, !dbg !16028

bb16:                                             ; preds = %bb15
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9a2e106caa59c20fE"(%"std::process::Output"* sret(%"std::process::Output") %output, %"core::result::Result<std::process::Output, std::io::error::Error>"* %_28, [0 x i8]* align 1 bitcast (<{ [27 x i8] }>* @alloc249 to [0 x i8]*), i64 27, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc613 to %"core::panic::location::Location"*))
          to label %bb17 unwind label %cleanup5, !dbg !16028

bb17:                                             ; preds = %bb16
  %_34 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 2, !dbg !16029
; invoke std::process::ExitStatus::success
  %_33 = invoke zeroext i1 @_ZN3std7process10ExitStatus7success17h896a2ee5b1332cd1E(i32* align 4 %_34)
          to label %bb18 unwind label %cleanup6, !dbg !16029

bb27:                                             ; preds = %bb26, %cleanup6
; invoke core::ptr::drop_in_place<std::process::Output>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h8f570cd6e5742122E"(%"std::process::Output"* %output) #16
          to label %bb28 unwind label %abort, !dbg !16030

cleanup6:                                         ; preds = %bb20, %bb19, %bb17
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  %63 = extractvalue { i8*, i32 } %61, 1
  %64 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %62, i8** %64, align 8
  %65 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %63, i32* %65, align 8
  br label %bb27

bb18:                                             ; preds = %bb17
  %_32 = xor i1 %_33, true, !dbg !16031
  br i1 %_32, label %bb19, label %bb24, !dbg !16031

bb24:                                             ; preds = %bb18
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %cmd)
          to label %bb25 unwind label %cleanup, !dbg !16027

bb19:                                             ; preds = %bb18
  %_50 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !16032
; invoke alloc::vec::Vec<T,A>::as_slice
  %66 = invoke { [0 x i8]*, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h06c2d6b0b8cceaa7E"(%"alloc::vec::Vec<u8>"* align 8 %_50)
          to label %bb20 unwind label %cleanup6, !dbg !16032

bb20:                                             ; preds = %bb19
  %_49.0 = extractvalue { [0 x i8]*, i64 } %66, 0, !dbg !16032
  %_49.1 = extractvalue { [0 x i8]*, i64 } %66, 1, !dbg !16032
; invoke alloc::string::String::from_utf8_lossy
  invoke void @_ZN5alloc6string6String15from_utf8_lossy17hd4784f16c3f98e97E(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>") %_47, [0 x i8]* align 1 %_49.0, i64 %_49.1)
          to label %bb21 unwind label %cleanup6, !dbg !16033

bb21:                                             ; preds = %bb20
; invoke core::fmt::ArgumentV1::new_display
  %67 = invoke { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hf28baa3399b6d67fE(%"alloc::borrow::Cow<str>"* align 8 %_47)
          to label %bb22 unwind label %cleanup7, !dbg !16031

bb26:                                             ; preds = %cleanup7
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h608c52efd9ce7c6cE"(%"alloc::borrow::Cow<str>"* %_47) #16
          to label %bb27 unwind label %abort, !dbg !16031

cleanup7:                                         ; preds = %bb23, %bb22, %bb21
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  %70 = extractvalue { i8*, i32 } %68, 1
  %71 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %69, i8** %71, align 8
  %72 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %70, i32* %72, align 8
  br label %bb26

bb22:                                             ; preds = %bb21
  %_44.0 = extractvalue { i8*, i64* } %67, 0, !dbg !16031
  %_44.1 = extractvalue { i8*, i64* } %67, 1, !dbg !16031
  %73 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_43, i64 0, i64 0, !dbg !16031
  %74 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %73, i32 0, i32 0, !dbg !16031
  store i8* %_44.0, i8** %74, align 8, !dbg !16031
  %75 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %73, i32 0, i32 1, !dbg !16031
  store i64* %_44.1, i64** %75, align 8, !dbg !16031
  %_40.0 = bitcast [1 x { i8*, i64* }]* %_43 to [0 x { i8*, i64* }]*, !dbg !16031
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_36, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc306 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_40.0, i64 1)
          to label %bb23 unwind label %cleanup7, !dbg !16031

bb23:                                             ; preds = %bb22
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc615 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup7, !dbg !16031

unreachable:                                      ; preds = %bb23
  unreachable

bb25:                                             ; preds = %bb24
  store i8 0, i8* %_54, align 1, !dbg !16006
  ret void, !dbg !16034

bb30:                                             ; preds = %bb38, %bb39
  %76 = bitcast { i8*, i32 }* %0 to i8**, !dbg !16025
  %77 = load i8*, i8** %76, align 8, !dbg !16025
  %78 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !16025
  %79 = load i32, i32* %78, align 8, !dbg !16025
  %80 = insertvalue { i8*, i32 } undef, i8* %77, 0, !dbg !16025
  %81 = insertvalue { i8*, i32 } %80, i32 %79, 1, !dbg !16025
  resume { i8*, i32 } %81, !dbg !16025

bb38:                                             ; preds = %bb39
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E"(%"std::ffi::os_str::OsString"* %rustc) #16
          to label %bb30 unwind label %abort, !dbg !16006
}

; build_script_build::rustc_minor_nightly
; Function Attrs: nonlazybind uwtable
define internal { i32, i8 } @_ZN18build_script_build19rustc_minor_nightly17hb15468b437acd172E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !16035 {
start:
  %minor.dbg.spill = alloca i32, align 4
  %e.dbg.spill11 = alloca i32, align 4
  %0 = alloca i64, align 8
  %e.dbg.spill10 = alloca { [0 x i8]*, i64 }, align 8
  %nightly.dbg.spill = alloca i8, align 1
  %nightly_raw.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill7 = alloca { [0 x i8]*, i64 }, align 8
  %right_val.dbg.spill = alloca { i8*, i64 }*, align 8
  %left_val.dbg.spill = alloca { i8*, i64 }*, align 8
  %version.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %e.dbg.spill4 = alloca { [0 x i8]*, i64 }, align 8
  %e.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %_107 = alloca %"core::fmt::Arguments", align 8
  %_97 = alloca %"core::fmt::Arguments", align 8
  %_91 = alloca %"core::result::Result<u32, core::num::error::ParseIntError>", align 4
  %_90 = alloca { i32, i32 }, align 4
  %_79 = alloca %"core::fmt::Arguments", align 8
  %_74 = alloca { i8*, i64 }, align 8
  %_71 = alloca %"core::str::iter::Split<char>", align 8
  %minor = alloca { i8*, i64 }, align 8
  %_60 = alloca %"core::fmt::Arguments", align 8
  %_59 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_43 = alloca { i8*, i64 }, align 8
  %_41 = alloca { i64*, i64* }, align 8
  %pieces = alloca %"core::str::iter::Split<char>", align 8
  %_32 = alloca %"core::fmt::Arguments", align 8
  %_24 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %_23 = alloca { i8*, i64 }, align 8
  %_21 = alloca %"std::process::Output", align 8
  %_14 = alloca %"core::fmt::Arguments", align 8
  %_6 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %_5 = alloca { i8*, i64 }, align 8
  %output = alloca %"std::process::Output", align 8
  %2 = alloca { i32, i8 }, align 4
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %output, metadata !16043, metadata !DIExpression()), !dbg !16074
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<char>"* %pieces, metadata !16051, metadata !DIExpression()), !dbg !16075
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !16057, metadata !DIExpression()), !dbg !16076
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %minor, metadata !16060, metadata !DIExpression()), !dbg !16077
; call build_script_build::rustc_version_cmd
  call void @_ZN18build_script_build17rustc_version_cmd17hb9ba91e067814cb6E(%"std::process::Output"* sret(%"std::process::Output") %output, i1 zeroext false), !dbg !16078
  br label %bb1, !dbg !16078

bb1:                                              ; preds = %start
  %_10 = bitcast %"std::process::Output"* %output to %"alloc::vec::Vec<u8>"*, !dbg !16079
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %3 = invoke { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2b77cc1908e440a5E"(%"alloc::vec::Vec<u8>"* align 8 %_10)
          to label %bb2 unwind label %cleanup, !dbg !16079

bb46:                                             ; preds = %bb48, %cleanup
; invoke core::ptr::drop_in_place<std::process::Output>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h8f570cd6e5742122E"(%"std::process::Output"* %output) #16
          to label %bb47 unwind label %abort, !dbg !16080

cleanup:                                          ; preds = %bb8, %bb5, %bb19, %bb16, %bb31, %bb28, %bb38, %bb35, %bb44, %bb41, %bb39, %bb37, %bb33, %bb32, %bb30, %bb26, %bb25, %bb24, %bb23, %bb21, %bb20, %bb18, %bb14, %bb13, %bb12, %bb10, %bb7, %bb3, %bb2, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb46

bb2:                                              ; preds = %bb1
  %_8.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !16079
  %_8.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !16079
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817h44aac8e9d8892328E(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_6, [0 x i8]* align 1 %_8.0, i64 %_8.1)
          to label %bb3 unwind label %cleanup, !dbg !16081

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::ok
  %9 = invoke { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h2c74aa5141d8442dE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %_6)
          to label %bb4 unwind label %cleanup, !dbg !16081

bb4:                                              ; preds = %bb3
  store { i8*, i64 } %9, { i8*, i64 }* %_5, align 8, !dbg !16081
  %10 = bitcast { i8*, i64 }* %_5 to {}**, !dbg !16081
  %11 = load {}*, {}** %10, align 8, !dbg !16081
  %12 = icmp eq {}* %11, null, !dbg !16081
  %_11 = select i1 %12, i64 0, i64 1, !dbg !16081
  switch i64 %_11, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ], !dbg !16082

bb6:                                              ; preds = %bb4
  unreachable, !dbg !16081

bb5:                                              ; preds = %bb4
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_14, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc250 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb8 unwind label %cleanup, !dbg !16082

bb7:                                              ; preds = %bb4
  %13 = bitcast { i8*, i64 }* %_5 to { [0 x i8]*, i64 }*, !dbg !16082
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 0, !dbg !16082
  %e.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !16082, !nonnull !23, !align !445, !noundef !23
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %13, i32 0, i32 1, !dbg !16082
  %e.1 = load i64, i64* %15, align 8, !dbg !16082
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !16082
  store [0 x i8]* %e.0, [0 x i8]** %16, align 8, !dbg !16082
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !16082
  store i64 %e.1, i64* %17, align 8, !dbg !16082
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %e.dbg.spill, metadata !16045, metadata !DIExpression()), !dbg !16083
; invoke core::str::<impl str>::starts_with
  %_2 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %e.0, i64 %e.1, [0 x i8]* align 1 bitcast (<{ [6 x i8] }>* @alloc616 to [0 x i8]*), i64 6)
          to label %bb9 unwind label %cleanup, !dbg !16082

bb9:                                              ; preds = %bb7
  br i1 %_2, label %bb10, label %bb12, !dbg !16082

bb12:                                             ; preds = %bb49, %bb9
  %_28 = bitcast %"std::process::Output"* %output to %"alloc::vec::Vec<u8>"*, !dbg !16084
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %18 = invoke { [0 x i8]*, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2b77cc1908e440a5E"(%"alloc::vec::Vec<u8>"* align 8 %_28)
          to label %bb13 unwind label %cleanup, !dbg !16084

bb10:                                             ; preds = %bb9
; invoke build_script_build::rustc_version_cmd
  invoke void @_ZN18build_script_build17rustc_version_cmd17hb9ba91e067814cb6E(%"std::process::Output"* sret(%"std::process::Output") %_21, i1 zeroext true)
          to label %bb11 unwind label %cleanup, !dbg !16085

bb11:                                             ; preds = %bb10
; invoke core::ptr::drop_in_place<std::process::Output>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h8f570cd6e5742122E"(%"std::process::Output"* %output)
          to label %bb49 unwind label %cleanup1, !dbg !16086

bb48:                                             ; preds = %cleanup1
  %19 = bitcast %"std::process::Output"* %output to i8*, !dbg !16086
  %20 = bitcast %"std::process::Output"* %_21 to i8*, !dbg !16086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 56, i1 false), !dbg !16086
  br label %bb46, !dbg !16086

cleanup1:                                         ; preds = %bb11
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb48

bb49:                                             ; preds = %bb11
  %26 = bitcast %"std::process::Output"* %output to i8*, !dbg !16086
  %27 = bitcast %"std::process::Output"* %_21 to i8*, !dbg !16086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 56, i1 false), !dbg !16086
  br label %bb12, !dbg !16087

bb13:                                             ; preds = %bb12
  %_26.0 = extractvalue { [0 x i8]*, i64 } %18, 0, !dbg !16084
  %_26.1 = extractvalue { [0 x i8]*, i64 } %18, 1, !dbg !16084
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817h44aac8e9d8892328E(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>") %_24, [0 x i8]* align 1 %_26.0, i64 %_26.1)
          to label %bb14 unwind label %cleanup, !dbg !16088

bb14:                                             ; preds = %bb13
; invoke core::result::Result<T,E>::ok
  %28 = invoke { i8*, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h2c74aa5141d8442dE"(%"core::result::Result<&str, core::str::error::Utf8Error>"* %_24)
          to label %bb15 unwind label %cleanup, !dbg !16088

bb15:                                             ; preds = %bb14
  store { i8*, i64 } %28, { i8*, i64 }* %_23, align 8, !dbg !16088
  %29 = bitcast { i8*, i64 }* %_23 to {}**, !dbg !16088
  %30 = load {}*, {}** %29, align 8, !dbg !16088
  %31 = icmp eq {}* %30, null, !dbg !16088
  %_29 = select i1 %31, i64 0, i64 1, !dbg !16088
  switch i64 %_29, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !16089

bb17:                                             ; preds = %bb15
  unreachable, !dbg !16088

bb16:                                             ; preds = %bb15
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_32, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc250 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb19 unwind label %cleanup, !dbg !16089

bb18:                                             ; preds = %bb15
  %32 = bitcast { i8*, i64 }* %_23 to { [0 x i8]*, i64 }*, !dbg !16089
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 0, !dbg !16089
  %e.02 = load [0 x i8]*, [0 x i8]** %33, align 8, !dbg !16089, !nonnull !23, !align !445, !noundef !23
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %32, i32 0, i32 1, !dbg !16089
  %e.13 = load i64, i64* %34, align 8, !dbg !16089
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill4, i32 0, i32 0, !dbg !16089
  store [0 x i8]* %e.02, [0 x i8]** %35, align 8, !dbg !16089
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill4, i32 0, i32 1, !dbg !16089
  store i64 %e.13, i64* %36, align 8, !dbg !16089
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %e.dbg.spill4, metadata !16049, metadata !DIExpression()), !dbg !16090
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %version.dbg.spill, i32 0, i32 0, !dbg !16090
  store [0 x i8]* %e.02, [0 x i8]** %37, align 8, !dbg !16090
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %version.dbg.spill, i32 0, i32 1, !dbg !16090
  store i64 %e.13, i64* %38, align 8, !dbg !16090
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %version.dbg.spill, metadata !16047, metadata !DIExpression()), !dbg !16091
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h0a47fafe188b62e8E"(%"core::str::iter::Split<char>"* sret(%"core::str::iter::Split<char>") %pieces, [0 x i8]* align 1 %e.02, i64 %e.13, i32 46)
          to label %bb20 unwind label %cleanup, !dbg !16092

bb20:                                             ; preds = %bb18
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %39 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5ce0bf41ffb7e76aE"(%"core::str::iter::Split<char>"* align 8 %pieces)
          to label %bb21 unwind label %cleanup, !dbg !16093

bb21:                                             ; preds = %bb20
  store { i8*, i64 } %39, { i8*, i64 }* %_43, align 8, !dbg !16093
  %40 = bitcast { i64*, i64* }* %_41 to { i8*, i64 }**, !dbg !16094
  store { i8*, i64 }* %_43, { i8*, i64 }** %40, align 8, !dbg !16094
  %41 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_41, i32 0, i32 1, !dbg !16094
  %42 = bitcast i64** %41 to { i8*, i64 }**, !dbg !16094
  store { i8*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @alloc260 to { i8*, i64 }*), { i8*, i64 }** %42, align 8, !dbg !16094
  %43 = bitcast { i64*, i64* }* %_41 to { i8*, i64 }**, !dbg !16094
  %left_val = load { i8*, i64 }*, { i8*, i64 }** %43, align 8, !dbg !16094, !nonnull !23, !align !584, !noundef !23
  store { i8*, i64 }* %left_val, { i8*, i64 }** %left_val.dbg.spill, align 8, !dbg !16094
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %left_val.dbg.spill, metadata !16053, metadata !DIExpression()), !dbg !16095
  %44 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_41, i32 0, i32 1, !dbg !16094
  %45 = bitcast i64** %44 to { i8*, i64 }**, !dbg !16094
  %right_val = load { i8*, i64 }*, { i8*, i64 }** %45, align 8, !dbg !16094, !nonnull !23, !align !584, !noundef !23
  store { i8*, i64 }* %right_val, { i8*, i64 }** %right_val.dbg.spill, align 8, !dbg !16094
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %right_val.dbg.spill, metadata !16056, metadata !DIExpression()), !dbg !16095
; invoke <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_49 = invoke zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hdc99657694d9fe4dE"({ i8*, i64 }* align 8 %left_val, { i8*, i64 }* align 8 %right_val)
          to label %bb22 unwind label %cleanup, !dbg !16095

bb22:                                             ; preds = %bb21
  %_48 = xor i1 %_49, true, !dbg !16095
  br i1 %_48, label %bb23, label %bb25, !dbg !16095

bb25:                                             ; preds = %bb22
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %46 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5ce0bf41ffb7e76aE"(%"core::str::iter::Split<char>"* align 8 %pieces)
          to label %bb26 unwind label %cleanup, !dbg !16096

bb23:                                             ; preds = %bb22
  store i8 0, i8* %kind, align 1, !dbg !16095
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_60, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc250 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb24 unwind label %cleanup, !dbg !16076

bb24:                                             ; preds = %bb23
  %47 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_59 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !16076
  %48 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %47 to %"core::fmt::Arguments"*, !dbg !16076
  %49 = bitcast %"core::fmt::Arguments"* %48 to i8*, !dbg !16076
  %50 = bitcast %"core::fmt::Arguments"* %_60 to i8*, !dbg !16076
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 48, i1 false), !dbg !16076
; invoke core::panicking::assert_failed
  invoke void @_ZN4core9panicking13assert_failed17hf6275b1d0fa3bb9bE(i8 0, { i8*, i64 }* align 8 %left_val, { i8*, i64 }* align 8 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_59, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc618 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !16076

unreachable:                                      ; preds = %bb8, %bb19, %bb31, %bb38, %bb44, %bb24
  unreachable

bb26:                                             ; preds = %bb25
  store { i8*, i64 } %46, { i8*, i64 }* %minor, align 8, !dbg !16096
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %51 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5ce0bf41ffb7e76aE"(%"core::str::iter::Split<char>"* align 8 %pieces)
          to label %bb27 unwind label %cleanup, !dbg !16097

bb27:                                             ; preds = %bb26
  store { i8*, i64 } %51, { i8*, i64 }* %_74, align 8, !dbg !16097
  %52 = bitcast { i8*, i64 }* %_74 to {}**, !dbg !16097
  %53 = load {}*, {}** %52, align 8, !dbg !16097
  %54 = icmp eq {}* %53, null, !dbg !16097
  %_76 = select i1 %54, i64 0, i64 1, !dbg !16097
  switch i64 %_76, label %bb29 [
    i64 0, label %bb28
    i64 1, label %bb30
  ], !dbg !16098

bb29:                                             ; preds = %bb27
  unreachable, !dbg !16097

bb28:                                             ; preds = %bb27
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_79, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc250 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb31 unwind label %cleanup, !dbg !16098

bb30:                                             ; preds = %bb27
  %55 = bitcast { i8*, i64 }* %_74 to { [0 x i8]*, i64 }*, !dbg !16098
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 0, !dbg !16098
  %e.05 = load [0 x i8]*, [0 x i8]** %56, align 8, !dbg !16098, !nonnull !23, !align !445, !noundef !23
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %55, i32 0, i32 1, !dbg !16098
  %e.16 = load i64, i64* %57, align 8, !dbg !16098
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill7, i32 0, i32 0, !dbg !16098
  store [0 x i8]* %e.05, [0 x i8]** %58, align 8, !dbg !16098
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill7, i32 0, i32 1, !dbg !16098
  store i64 %e.16, i64* %59, align 8, !dbg !16098
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %e.dbg.spill7, metadata !16064, metadata !DIExpression()), !dbg !16099
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h0a47fafe188b62e8E"(%"core::str::iter::Split<char>"* sret(%"core::str::iter::Split<char>") %_71, [0 x i8]* align 1 %e.05, i64 %e.16, i32 45)
          to label %bb32 unwind label %cleanup, !dbg !16098

bb32:                                             ; preds = %bb30
; invoke core::iter::traits::iterator::Iterator::nth
  %60 = invoke { i8*, i64 } @_ZN4core4iter6traits8iterator8Iterator3nth17h60d719fd4cf64f56E(%"core::str::iter::Split<char>"* align 8 %_71, i64 1)
          to label %bb33 unwind label %cleanup, !dbg !16098

bb33:                                             ; preds = %bb32
  %nightly_raw.0 = extractvalue { i8*, i64 } %60, 0, !dbg !16098
  %nightly_raw.1 = extractvalue { i8*, i64 } %60, 1, !dbg !16098
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %nightly_raw.dbg.spill, i32 0, i32 0, !dbg !16098
  store i8* %nightly_raw.0, i8** %61, align 8, !dbg !16098
  %62 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %nightly_raw.dbg.spill, i32 0, i32 1, !dbg !16098
  store i64 %nightly_raw.1, i64* %62, align 8, !dbg !16098
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %nightly_raw.dbg.spill, metadata !16062, metadata !DIExpression()), !dbg !16100
; invoke core::option::Option<T>::map_or
  %nightly = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$6map_or17hfbe3db815de80057E"(i8* align 1 %nightly_raw.0, i64 %nightly_raw.1, i1 zeroext false)
          to label %bb34 unwind label %cleanup, !dbg !16101

bb34:                                             ; preds = %bb33
  %63 = zext i1 %nightly to i8, !dbg !16101
  store i8 %63, i8* %nightly.dbg.spill, align 1, !dbg !16101
  call void @llvm.dbg.declare(metadata i8* %nightly.dbg.spill, metadata !16066, metadata !DIExpression()), !dbg !16102
  %64 = bitcast { i8*, i64 }* %minor to {}**, !dbg !16103
  %65 = load {}*, {}** %64, align 8, !dbg !16103
  %66 = icmp eq {}* %65, null, !dbg !16103
  %_94 = select i1 %66, i64 0, i64 1, !dbg !16103
  switch i64 %_94, label %bb36 [
    i64 0, label %bb35
    i64 1, label %bb37
  ], !dbg !16104

bb36:                                             ; preds = %bb34
  unreachable, !dbg !16103

bb35:                                             ; preds = %bb34
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_97, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc250 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb38 unwind label %cleanup, !dbg !16104

bb37:                                             ; preds = %bb34
  %67 = bitcast { i8*, i64 }* %minor to { [0 x i8]*, i64 }*, !dbg !16104
  %68 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %67, i32 0, i32 0, !dbg !16104
  %e.08 = load [0 x i8]*, [0 x i8]** %68, align 8, !dbg !16104, !nonnull !23, !align !445, !noundef !23
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %67, i32 0, i32 1, !dbg !16104
  %e.19 = load i64, i64* %69, align 8, !dbg !16104
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill10, i32 0, i32 0, !dbg !16104
  store [0 x i8]* %e.08, [0 x i8]** %70, align 8, !dbg !16104
  %71 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %e.dbg.spill10, i32 0, i32 1, !dbg !16104
  store i64 %e.19, i64* %71, align 8, !dbg !16104
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %e.dbg.spill10, metadata !16070, metadata !DIExpression()), !dbg !16105
; invoke core::str::<impl str>::parse
  %72 = invoke i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h7b8b0c2b7cd3bb41E"([0 x i8]* align 1 %e.08, i64 %e.19)
          to label %bb39 unwind label %cleanup, !dbg !16104

bb39:                                             ; preds = %bb37
  store i64 %72, i64* %0, align 8, !dbg !16104
  %73 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %_91 to i8*, !dbg !16104
  %74 = bitcast i64* %0 to i8*, !dbg !16104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 8 %74, i64 8, i1 false), !dbg !16104
  %75 = bitcast %"core::result::Result<u32, core::num::error::ParseIntError>"* %_91 to i64*, !dbg !16104
  %76 = load i64, i64* %75, align 4, !dbg !16104
; invoke core::result::Result<T,E>::ok
  %77 = invoke { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h876130cb320f98ebE"(i64 %76)
          to label %bb40 unwind label %cleanup, !dbg !16104

bb40:                                             ; preds = %bb39
  store { i32, i32 } %77, { i32, i32 }* %_90, align 4, !dbg !16104
  %78 = bitcast { i32, i32 }* %_90 to i32*, !dbg !16104
  %79 = load i32, i32* %78, align 4, !dbg !16104, !range !4194, !noundef !23
  %_104 = zext i32 %79 to i64, !dbg !16104
  switch i64 %_104, label %bb42 [
    i64 0, label %bb41
    i64 1, label %bb43
  ], !dbg !16106

bb42:                                             ; preds = %bb40
  unreachable, !dbg !16104

bb41:                                             ; preds = %bb40
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_107, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc250 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc252 to [0 x { i8*, i64* }]*), i64 0)
          to label %bb44 unwind label %cleanup, !dbg !16106

bb43:                                             ; preds = %bb40
  %80 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_90, i32 0, i32 1, !dbg !16106
  %e = load i32, i32* %80, align 4, !dbg !16106
  store i32 %e, i32* %e.dbg.spill11, align 4, !dbg !16106
  call void @llvm.dbg.declare(metadata i32* %e.dbg.spill11, metadata !16072, metadata !DIExpression()), !dbg !16107
  store i32 %e, i32* %minor.dbg.spill, align 4, !dbg !16107
  call void @llvm.dbg.declare(metadata i32* %minor.dbg.spill, metadata !16068, metadata !DIExpression()), !dbg !16108
  %81 = bitcast { i32, i8 }* %2 to i32*, !dbg !16109
  store i32 %e, i32* %81, align 4, !dbg !16109
  %82 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1, !dbg !16109
  %83 = zext i1 %nightly to i8, !dbg !16109
  store i8 %83, i8* %82, align 4, !dbg !16109
; call core::ptr::drop_in_place<std::process::Output>
  call void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h8f570cd6e5742122E"(%"std::process::Output"* %output), !dbg !16080
  br label %bb45, !dbg !16080

bb45:                                             ; preds = %bb43
  %84 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 0, !dbg !16110
  %85 = load i32, i32* %84, align 4, !dbg !16110
  %86 = getelementptr inbounds { i32, i8 }, { i32, i8 }* %2, i32 0, i32 1, !dbg !16110
  %87 = load i8, i8* %86, align 4, !dbg !16110, !range !512, !noundef !23
  %88 = trunc i8 %87 to i1, !dbg !16110
  %89 = zext i1 %88 to i8, !dbg !16110
  %90 = insertvalue { i32, i8 } undef, i32 %85, 0, !dbg !16110
  %91 = insertvalue { i32, i8 } %90, i8 %89, 1, !dbg !16110
  ret { i32, i8 } %91, !dbg !16110

bb44:                                             ; preds = %bb41
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_107, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc620 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !16106

bb38:                                             ; preds = %bb35
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_97, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc622 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !16104

bb31:                                             ; preds = %bb28
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_79, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc624 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !16098

bb19:                                             ; preds = %bb16
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_32, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc626 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !16089

bb8:                                              ; preds = %bb5
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_14, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc628 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup, !dbg !16082

abort:                                            ; preds = %bb46
  %92 = landingpad { i8*, i32 }
          cleanup, !dbg !16111
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !16111
  unreachable, !dbg !16111

bb47:                                             ; preds = %bb46
  %93 = bitcast { i8*, i32 }* %1 to i8**, !dbg !16111
  %94 = load i8*, i8** %93, align 8, !dbg !16111
  %95 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !16111
  %96 = load i32, i32* %95, align 8, !dbg !16111
  %97 = insertvalue { i8*, i32 } undef, i8* %94, 0, !dbg !16111
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1, !dbg !16111
  resume { i8*, i32 } %98, !dbg !16111
}

; build_script_build::rustc_minor_nightly::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN18build_script_build19rustc_minor_nightly28_$u7b$$u7b$closure$u7d$$u7d$17hec1514df9de4aa18E"([0 x i8]* align 1 %raw.0, i64 %raw.1) unnamed_addr #0 !dbg !16112 {
start:
  %raw.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_1.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:239:45: 239:50]", align 1
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:239:45: 239:50]"* %_1.dbg.spill, metadata !16117, metadata !DIExpression()), !dbg !16118
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %raw.dbg.spill, i32 0, i32 0
  store [0 x i8]* %raw.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %raw.dbg.spill, i32 0, i32 1
  store i64 %raw.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %raw.dbg.spill, metadata !16116, metadata !DIExpression()), !dbg !16119
; call core::str::<impl str>::starts_with
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %raw.0, i64 %raw.1, [0 x i8]* align 1 bitcast (<{ [3 x i8] }>* @alloc629 to [0 x i8]*), i64 3), !dbg !16120
  br label %bb4, !dbg !16120

bb4:                                              ; preds = %start
  br i1 %_3, label %bb1, label %bb2, !dbg !16120

bb2:                                              ; preds = %bb4
; call core::str::<impl str>::starts_with
  %_5 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %raw.0, i64 %raw.1, [0 x i8]* align 1 bitcast (<{ [7 x i8] }>* @alloc630 to [0 x i8]*), i64 7), !dbg !16121
  br label %bb5, !dbg !16121

bb1:                                              ; preds = %bb4
  store i8 1, i8* %0, align 1, !dbg !16120
  br label %bb3, !dbg !16120

bb3:                                              ; preds = %bb5, %bb1
  %3 = load i8, i8* %0, align 1, !dbg !16122, !range !512, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !16122
  ret i1 %4, !dbg !16122

bb5:                                              ; preds = %bb2
  %5 = zext i1 %_5 to i8, !dbg !16120
  store i8 %5, i8* %0, align 1, !dbg !16120
  br label %bb3, !dbg !16120
}

; build_script_build::which_freebsd
; Function Attrs: nonlazybind uwtable
define internal { i32, i32 } @_ZN18build_script_build13which_freebsd17h13ef436e259eb0a7E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !16123 {
start:
  %s.dbg.spill23 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill21 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill20 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill18 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill17 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill15 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill14 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill12 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill11 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill9 = alloca %"alloc::string::String"**, align 8
  %s.dbg.spill8 = alloca %"alloc::string::String"*, align 8
  %s.dbg.spill = alloca %"alloc::string::String"**, align 8
  %0 = alloca { i8*, i32 }, align 8
  %residual.dbg.spill1 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %_66 = alloca i8, align 1
  %_23 = alloca %"alloc::string::String"*, align 8
  %val2 = alloca %"alloc::string::String", align 8
  %_18 = alloca %"alloc::vec::Vec<u8>", align 8
  %_17 = alloca %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>", align 8
  %_16 = alloca %"core::option::Option<alloc::string::String>", align 8
  %_15 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>", align 8
  %stdout = alloca %"alloc::string::String", align 8
  %val = alloca %"std::process::Output", align 8
  %_6 = alloca %"std::process::Command", align 8
  %_4 = alloca %"core::result::Result<std::process::Output, std::io::error::Error>", align 8
  %_3 = alloca %"core::option::Option<std::process::Output>", align 8
  %_2 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>", align 8
  %output = alloca %"std::process::Output", align 8
  %1 = alloca { i32, i32 }, align 4
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %output, metadata !16127, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !16129, metadata !DIExpression()), !dbg !16159
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %val, metadata !16131, metadata !DIExpression()), !dbg !16160
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %stdout, metadata !16133, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill1, metadata !16135, metadata !DIExpression()), !dbg !16162
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %val2, metadata !16137, metadata !DIExpression()), !dbg !16163
  store i8 0, i8* %_66, align 1, !dbg !16164
; call std::process::Command::new
  call void @_ZN3std7process7Command3new17h0bb87ac83e738136E(%"std::process::Command"* sret(%"std::process::Command") %_6, [0 x i8]* align 1 bitcast (<{ [15 x i8] }>* @alloc631 to [0 x i8]*), i64 15), !dbg !16165
  br label %bb1, !dbg !16165

bb1:                                              ; preds = %start
; invoke std::process::Command::output
  invoke void @_ZN3std7process7Command6output17h8f4146acd0d0e05aE(%"core::result::Result<std::process::Output, std::io::error::Error>"* sret(%"core::result::Result<std::process::Output, std::io::error::Error>") %_4, %"std::process::Command"* align 8 %_6)
          to label %bb2 unwind label %cleanup, !dbg !16165

bb49:                                             ; preds = %bb60, %cleanup
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %_6) #16
          to label %bb50 unwind label %abort, !dbg !16166

cleanup:                                          ; preds = %bb3, %bb2, %bb1
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb49

bb2:                                              ; preds = %bb1
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h9fdab479f3bb0927E"(%"core::option::Option<std::process::Output>"* sret(%"core::option::Option<std::process::Output>") %_3, %"core::result::Result<std::process::Output, std::io::error::Error>"* %_4)
          to label %bb3 unwind label %cleanup, !dbg !16165

bb3:                                              ; preds = %bb2
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd35e8556e45aa856E"(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>"* sret(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>") %_2, %"core::option::Option<std::process::Output>"* %_3)
          to label %bb4 unwind label %cleanup, !dbg !16165

bb4:                                              ; preds = %bb3
  %7 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>"* %_2 to {}**, !dbg !16165
  %8 = load {}*, {}** %7, align 8, !dbg !16165
  %9 = icmp eq {}* %8, null, !dbg !16165
  %_7 = select i1 %9, i64 1, i64 0, !dbg !16165
  switch i64 %_7, label %bb6 [
    i64 0, label %bb5
    i64 1, label %bb7
  ], !dbg !16165

bb6:                                              ; preds = %bb4
  unreachable, !dbg !16165

bb5:                                              ; preds = %bb4
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>"* %_2 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>::Continue"*, !dbg !16165
  %11 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>::Continue"* %10 to %"std::process::Output"*, !dbg !16165
  %12 = bitcast %"std::process::Output"* %val to i8*, !dbg !16165
  %13 = bitcast %"std::process::Output"* %11 to i8*, !dbg !16165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 56, i1 false), !dbg !16165
  store i8 1, i8* %_66, align 1, !dbg !16160
  %14 = bitcast %"std::process::Output"* %output to i8*, !dbg !16160
  %15 = bitcast %"std::process::Output"* %val to i8*, !dbg !16160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 56, i1 false), !dbg !16160
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %_6)
          to label %bb9 unwind label %cleanup4, !dbg !16166

bb7:                                              ; preds = %bb4
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %16 = invoke { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha2738e9bf57d9605E"()
          to label %bb8 unwind label %cleanup3, !dbg !16167

bb60:                                             ; preds = %cleanup3
  br label %bb49, !dbg !16166

cleanup3:                                         ; preds = %bb7
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  br label %bb60

bb8:                                              ; preds = %bb7
  store { i32, i32 } %16, { i32, i32 }* %1, align 4, !dbg !16167
; call core::ptr::drop_in_place<std::process::Command>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %_6), !dbg !16166
  br label %bb46, !dbg !16166

abort:                                            ; preds = %bb57, %bb58, %bb48, %bb52, %bb49
  %22 = landingpad { i8*, i32 }
          cleanup, !dbg !16168
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !16168
  unreachable, !dbg !16168

bb50:                                             ; preds = %bb57, %bb52, %bb49
  %23 = bitcast { i8*, i32 }* %0 to i8**, !dbg !16168
  %24 = load i8*, i8** %23, align 8, !dbg !16168
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !16168
  %26 = load i32, i32* %25, align 8, !dbg !16168
  %27 = insertvalue { i8*, i32 } undef, i8* %24, 0, !dbg !16168
  %28 = insertvalue { i8*, i32 } %27, i32 %26, 1, !dbg !16168
  resume { i8*, i32 } %28, !dbg !16168

bb46:                                             ; preds = %bb53, %bb8
  store i8 0, i8* %_66, align 1, !dbg !16169
  br label %bb47, !dbg !16170

bb59:                                             ; preds = %bb48, %bb56, %cleanup4
  %29 = load i8, i8* %_66, align 1, !dbg !16169, !range !512, !noundef !23
  %30 = trunc i8 %29 to i1, !dbg !16169
  br i1 %30, label %bb58, label %bb57, !dbg !16169

cleanup4:                                         ; preds = %bb44, %bb14, %bb13, %bb12, %bb9, %bb5
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  %34 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %33, i32* %35, align 8
  br label %bb59

bb9:                                              ; preds = %bb5
  %_13 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 2, !dbg !16171
; invoke std::process::ExitStatus::success
  %_12 = invoke zeroext i1 @_ZN3std7process10ExitStatus7success17h896a2ee5b1332cd1E(i32* align 4 %_13)
          to label %bb10 unwind label %cleanup4, !dbg !16171

bb10:                                             ; preds = %bb9
  %_11 = xor i1 %_12, true, !dbg !16172
  br i1 %_11, label %bb11, label %bb12, !dbg !16172

bb12:                                             ; preds = %bb10
  store i8 0, i8* %_66, align 1, !dbg !16173
  %36 = bitcast %"std::process::Output"* %output to %"alloc::vec::Vec<u8>"*, !dbg !16173
  %37 = bitcast %"alloc::vec::Vec<u8>"* %_18 to i8*, !dbg !16173
  %38 = bitcast %"alloc::vec::Vec<u8>"* %36 to i8*, !dbg !16173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false), !dbg !16173
; invoke alloc::string::String::from_utf8
  invoke void @_ZN5alloc6string6String9from_utf817hd78bfefcdef25b62E(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* sret(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>") %_17, %"alloc::vec::Vec<u8>"* %_18)
          to label %bb13 unwind label %cleanup4, !dbg !16174

bb11:                                             ; preds = %bb10
  %39 = bitcast { i32, i32 }* %1 to i32*, !dbg !16175
  store i32 0, i32* %39, align 4, !dbg !16175
  br label %bb55, !dbg !16176

bb55:                                             ; preds = %bb19, %bb11
  %40 = load i8, i8* %_66, align 1, !dbg !16169, !range !512, !noundef !23
  %41 = trunc i8 %40 to i1, !dbg !16169
  br i1 %41, label %bb54, label %bb53, !dbg !16169

bb13:                                             ; preds = %bb12
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h0c6429ce610f4340E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %_16, %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %_17)
          to label %bb14 unwind label %cleanup4, !dbg !16174

bb14:                                             ; preds = %bb13
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf5332cef795be0afE"(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>"* sret(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>") %_15, %"core::option::Option<alloc::string::String>"* %_16)
          to label %bb15 unwind label %cleanup4, !dbg !16174

bb15:                                             ; preds = %bb14
  %42 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>"* %_15 to {}**, !dbg !16174
  %43 = load {}*, {}** %42, align 8, !dbg !16174
  %44 = icmp eq {}* %43, null, !dbg !16174
  %_19 = select i1 %44, i64 1, i64 0, !dbg !16174
  switch i64 %_19, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !16174

bb17:                                             ; preds = %bb15
  unreachable, !dbg !16174

bb16:                                             ; preds = %bb15
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>"* %_15 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>::Continue"*, !dbg !16174
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>::Continue"* %45 to %"alloc::string::String"*, !dbg !16174
  %47 = bitcast %"alloc::string::String"* %val2 to i8*, !dbg !16174
  %48 = bitcast %"alloc::string::String"* %46 to i8*, !dbg !16174
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false), !dbg !16174
  %49 = bitcast %"alloc::string::String"* %stdout to i8*, !dbg !16163
  %50 = bitcast %"alloc::string::String"* %val2 to i8*, !dbg !16163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false), !dbg !16163
  store %"alloc::string::String"* %stdout, %"alloc::string::String"** %_23, align 8, !dbg !16177
  store %"alloc::string::String"** %_23, %"alloc::string::String"*** %s.dbg.spill, align 8, !dbg !16178
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill, metadata !16141, metadata !DIExpression()), !dbg !16179
  %_60 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16180, !nonnull !23, !align !584, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %51 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %_60)
          to label %bb20 unwind label %cleanup7, !dbg !16180

bb18:                                             ; preds = %bb15
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %52 = invoke { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha2738e9bf57d9605E"()
          to label %bb19 unwind label %cleanup5, !dbg !16181

bb56:                                             ; preds = %cleanup5
  br label %bb59, !dbg !16182

cleanup5:                                         ; preds = %bb18
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %55, i32* %57, align 8
  br label %bb56

bb19:                                             ; preds = %bb18
  store { i32, i32 } %52, { i32, i32 }* %1, align 4, !dbg !16181
  br label %bb55, !dbg !16176

bb53:                                             ; preds = %bb54, %bb55
  %58 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !16169
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %58), !dbg !16169
  br label %bb46, !dbg !16169

bb54:                                             ; preds = %bb55
  %59 = bitcast %"std::process::Output"* %output to %"alloc::vec::Vec<u8>"*, !dbg !16169
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %59)
          to label %bb53 unwind label %cleanup6, !dbg !16169

bb52:                                             ; preds = %cleanup6
  %60 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !16169
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %60) #16
          to label %bb50 unwind label %abort, !dbg !16169

cleanup6:                                         ; preds = %bb54
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  %63 = extractvalue { i8*, i32 } %61, 1
  %64 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %62, i8** %64, align 8
  %65 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %63, i32* %65, align 8
  br label %bb52

bb47:                                             ; preds = %bb51, %bb46
  %66 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0, !dbg !16170
  %67 = load i32, i32* %66, align 4, !dbg !16170, !range !4194, !noundef !23
  %68 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16170
  %69 = load i32, i32* %68, align 4, !dbg !16170
  %70 = insertvalue { i32, i32 } undef, i32 %67, 0, !dbg !16170
  %71 = insertvalue { i32, i32 } %70, i32 %69, 1, !dbg !16170
  ret { i32, i32 } %71, !dbg !16170

bb48:                                             ; preds = %cleanup7
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %stdout) #16
          to label %bb59 unwind label %abort, !dbg !16183

cleanup7:                                         ; preds = %bb40, %bb39, %bb36, %bb35, %bb32, %bb31, %bb28, %bb27, %bb24, %bb23, %bb20, %bb16
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = extractvalue { i8*, i32 } %72, 0
  %74 = extractvalue { i8*, i32 } %72, 1
  %75 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %73, i8** %75, align 8
  %76 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %74, i32* %76, align 8
  br label %bb48

bb20:                                             ; preds = %bb16
  %_28.0 = extractvalue { [0 x i8]*, i64 } %51, 0, !dbg !16180
  %_28.1 = extractvalue { [0 x i8]*, i64 } %51, 1, !dbg !16180
; invoke core::str::<impl str>::starts_with
  %_26 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %_28.0, i64 %_28.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc632 to [0 x i8]*), i64 2)
          to label %bb21 unwind label %cleanup7, !dbg !16180

bb21:                                             ; preds = %bb20
  br i1 %_26, label %bb22, label %bb23, !dbg !16180

bb23:                                             ; preds = %bb21
  store %"alloc::string::String"** %_23, %"alloc::string::String"*** %s.dbg.spill9, align 8, !dbg !16184
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill9, metadata !16145, metadata !DIExpression()), !dbg !16185
  %_61 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16186, !nonnull !23, !align !584, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %77 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %_61)
          to label %bb24 unwind label %cleanup7, !dbg !16186

bb22:                                             ; preds = %bb21
  %s = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16178, !nonnull !23, !align !584, !noundef !23
  store %"alloc::string::String"* %s, %"alloc::string::String"** %s.dbg.spill8, align 8, !dbg !16178
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill8, metadata !16139, metadata !DIExpression()), !dbg !16179
  %78 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16187
  store i32 10, i32* %78, align 4, !dbg !16187
  %79 = bitcast { i32, i32 }* %1 to i32*, !dbg !16187
  store i32 1, i32* %79, align 4, !dbg !16187
  br label %bb44, !dbg !16188

bb44:                                             ; preds = %bb43, %bb42, %bb38, %bb34, %bb30, %bb26, %bb22
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %stdout)
          to label %bb45 unwind label %cleanup4, !dbg !16183

bb24:                                             ; preds = %bb23
  %_34.0 = extractvalue { [0 x i8]*, i64 } %77, 0, !dbg !16186
  %_34.1 = extractvalue { [0 x i8]*, i64 } %77, 1, !dbg !16186
; invoke core::str::<impl str>::starts_with
  %_32 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %_34.0, i64 %_34.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc633 to [0 x i8]*), i64 2)
          to label %bb25 unwind label %cleanup7, !dbg !16186

bb25:                                             ; preds = %bb24
  br i1 %_32, label %bb26, label %bb27, !dbg !16186

bb27:                                             ; preds = %bb25
  store %"alloc::string::String"** %_23, %"alloc::string::String"*** %s.dbg.spill12, align 8, !dbg !16189
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill12, metadata !16148, metadata !DIExpression()), !dbg !16190
  %_62 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16191, !nonnull !23, !align !584, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %80 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %_62)
          to label %bb28 unwind label %cleanup7, !dbg !16191

bb26:                                             ; preds = %bb25
  %s10 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16184, !nonnull !23, !align !584, !noundef !23
  store %"alloc::string::String"* %s10, %"alloc::string::String"** %s.dbg.spill11, align 8, !dbg !16184
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill11, metadata !16143, metadata !DIExpression()), !dbg !16185
  %81 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16192
  store i32 11, i32* %81, align 4, !dbg !16192
  %82 = bitcast { i32, i32 }* %1 to i32*, !dbg !16192
  store i32 1, i32* %82, align 4, !dbg !16192
  br label %bb44, !dbg !16193

bb28:                                             ; preds = %bb27
  %_40.0 = extractvalue { [0 x i8]*, i64 } %80, 0, !dbg !16191
  %_40.1 = extractvalue { [0 x i8]*, i64 } %80, 1, !dbg !16191
; invoke core::str::<impl str>::starts_with
  %_38 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %_40.0, i64 %_40.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc634 to [0 x i8]*), i64 2)
          to label %bb29 unwind label %cleanup7, !dbg !16191

bb29:                                             ; preds = %bb28
  br i1 %_38, label %bb30, label %bb31, !dbg !16191

bb31:                                             ; preds = %bb29
  store %"alloc::string::String"** %_23, %"alloc::string::String"*** %s.dbg.spill15, align 8, !dbg !16194
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill15, metadata !16151, metadata !DIExpression()), !dbg !16195
  %_63 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16196, !nonnull !23, !align !584, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %83 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %_63)
          to label %bb32 unwind label %cleanup7, !dbg !16196

bb30:                                             ; preds = %bb29
  %s13 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16189, !nonnull !23, !align !584, !noundef !23
  store %"alloc::string::String"* %s13, %"alloc::string::String"** %s.dbg.spill14, align 8, !dbg !16189
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill14, metadata !16146, metadata !DIExpression()), !dbg !16190
  %84 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16197
  store i32 12, i32* %84, align 4, !dbg !16197
  %85 = bitcast { i32, i32 }* %1 to i32*, !dbg !16197
  store i32 1, i32* %85, align 4, !dbg !16197
  br label %bb44, !dbg !16198

bb32:                                             ; preds = %bb31
  %_46.0 = extractvalue { [0 x i8]*, i64 } %83, 0, !dbg !16196
  %_46.1 = extractvalue { [0 x i8]*, i64 } %83, 1, !dbg !16196
; invoke core::str::<impl str>::starts_with
  %_44 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %_46.0, i64 %_46.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc635 to [0 x i8]*), i64 2)
          to label %bb33 unwind label %cleanup7, !dbg !16196

bb33:                                             ; preds = %bb32
  br i1 %_44, label %bb34, label %bb35, !dbg !16196

bb35:                                             ; preds = %bb33
  store %"alloc::string::String"** %_23, %"alloc::string::String"*** %s.dbg.spill18, align 8, !dbg !16199
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill18, metadata !16154, metadata !DIExpression()), !dbg !16200
  %_64 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16201, !nonnull !23, !align !584, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %86 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %_64)
          to label %bb36 unwind label %cleanup7, !dbg !16201

bb34:                                             ; preds = %bb33
  %s16 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16194, !nonnull !23, !align !584, !noundef !23
  store %"alloc::string::String"* %s16, %"alloc::string::String"** %s.dbg.spill17, align 8, !dbg !16194
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill17, metadata !16149, metadata !DIExpression()), !dbg !16195
  %87 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16202
  store i32 13, i32* %87, align 4, !dbg !16202
  %88 = bitcast { i32, i32 }* %1 to i32*, !dbg !16202
  store i32 1, i32* %88, align 4, !dbg !16202
  br label %bb44, !dbg !16203

bb36:                                             ; preds = %bb35
  %_52.0 = extractvalue { [0 x i8]*, i64 } %86, 0, !dbg !16201
  %_52.1 = extractvalue { [0 x i8]*, i64 } %86, 1, !dbg !16201
; invoke core::str::<impl str>::starts_with
  %_50 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %_52.0, i64 %_52.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc636 to [0 x i8]*), i64 2)
          to label %bb37 unwind label %cleanup7, !dbg !16201

bb37:                                             ; preds = %bb36
  br i1 %_50, label %bb38, label %bb39, !dbg !16201

bb39:                                             ; preds = %bb37
  store %"alloc::string::String"** %_23, %"alloc::string::String"*** %s.dbg.spill21, align 8, !dbg !16204
  call void @llvm.dbg.declare(metadata %"alloc::string::String"*** %s.dbg.spill21, metadata !16157, metadata !DIExpression()), !dbg !16205
  %_65 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16206, !nonnull !23, !align !584, !noundef !23
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %89 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %_65)
          to label %bb40 unwind label %cleanup7, !dbg !16206

bb38:                                             ; preds = %bb37
  %s19 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16199, !nonnull !23, !align !584, !noundef !23
  store %"alloc::string::String"* %s19, %"alloc::string::String"** %s.dbg.spill20, align 8, !dbg !16199
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill20, metadata !16152, metadata !DIExpression()), !dbg !16200
  %90 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16207
  store i32 14, i32* %90, align 4, !dbg !16207
  %91 = bitcast { i32, i32 }* %1 to i32*, !dbg !16207
  store i32 1, i32* %91, align 4, !dbg !16207
  br label %bb44, !dbg !16208

bb40:                                             ; preds = %bb39
  %_58.0 = extractvalue { [0 x i8]*, i64 } %89, 0, !dbg !16206
  %_58.1 = extractvalue { [0 x i8]*, i64 } %89, 1, !dbg !16206
; invoke core::str::<impl str>::starts_with
  %_56 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E"([0 x i8]* align 1 %_58.0, i64 %_58.1, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc637 to [0 x i8]*), i64 2)
          to label %bb41 unwind label %cleanup7, !dbg !16206

bb41:                                             ; preds = %bb40
  br i1 %_56, label %bb42, label %bb43, !dbg !16206

bb43:                                             ; preds = %bb41
  %92 = bitcast { i32, i32 }* %1 to i32*, !dbg !16209
  store i32 0, i32* %92, align 4, !dbg !16209
  br label %bb44, !dbg !16209

bb42:                                             ; preds = %bb41
  %s22 = load %"alloc::string::String"*, %"alloc::string::String"** %_23, align 8, !dbg !16204, !nonnull !23, !align !584, !noundef !23
  store %"alloc::string::String"* %s22, %"alloc::string::String"** %s.dbg.spill23, align 8, !dbg !16204
  call void @llvm.dbg.declare(metadata %"alloc::string::String"** %s.dbg.spill23, metadata !16155, metadata !DIExpression()), !dbg !16205
  %93 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !16210
  store i32 15, i32* %93, align 4, !dbg !16210
  %94 = bitcast { i32, i32 }* %1 to i32*, !dbg !16210
  store i32 1, i32* %94, align 4, !dbg !16210
  br label %bb44, !dbg !16211

bb45:                                             ; preds = %bb44
  %95 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !16169
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %95), !dbg !16169
  br label %bb51, !dbg !16169

bb57:                                             ; preds = %bb58, %bb59
  %96 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !16169
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %96) #16
          to label %bb50 unwind label %abort, !dbg !16169

bb58:                                             ; preds = %bb59
  %97 = bitcast %"std::process::Output"* %output to %"alloc::vec::Vec<u8>"*, !dbg !16169
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %97) #16
          to label %bb57 unwind label %abort, !dbg !16169

bb51:                                             ; preds = %bb45
  store i8 0, i8* %_66, align 1, !dbg !16169
  br label %bb47, !dbg !16170
}

; build_script_build::emcc_version_code
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @_ZN18build_script_build17emcc_version_code17haf23270efa161601E() unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !16212 {
start:
  %patch.dbg.spill = alloca i64, align 8
  %minor.dbg.spill = alloca i64, align 8
  %major.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %emcc.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %residual.dbg.spill1 = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %_61 = alloca i8, align 1
  %_34 = alloca [2 x i32], align 4
  %pieces = alloca %"core::str::iter::Split<[char; 2]>", align 8
  %val2 = alloca %"alloc::string::String", align 8
  %_23 = alloca %"alloc::vec::Vec<u8>", align 8
  %_22 = alloca %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>", align 8
  %_21 = alloca %"core::option::Option<alloc::string::String>", align 8
  %_20 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>", align 8
  %version = alloca %"alloc::string::String", align 8
  %val = alloca %"std::process::Output", align 8
  %_10 = alloca %"std::process::Command", align 8
  %_6 = alloca %"core::result::Result<std::process::Output, std::io::error::Error>", align 8
  %_5 = alloca %"core::option::Option<std::process::Output>", align 8
  %_4 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>", align 8
  %output = alloca %"std::process::Output", align 8
  %1 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %output, metadata !16218, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !16220, metadata !DIExpression()), !dbg !16239
  call void @llvm.dbg.declare(metadata %"std::process::Output"* %val, metadata !16222, metadata !DIExpression()), !dbg !16240
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %version, metadata !16224, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill1, metadata !16226, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.declare(metadata %"alloc::string::String"* %val2, metadata !16228, metadata !DIExpression()), !dbg !16243
  call void @llvm.dbg.declare(metadata %"core::str::iter::Split<[char; 2]>"* %pieces, metadata !16230, metadata !DIExpression()), !dbg !16244
  store i8 0, i8* %_61, align 1, !dbg !16245
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %emcc.dbg.spill, i32 0, i32 0, !dbg !16246
  store [0 x i8]* bitcast (<{ [4 x i8] }>* @alloc638 to [0 x i8]*), [0 x i8]** %2, align 8, !dbg !16246
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %emcc.dbg.spill, i32 0, i32 1, !dbg !16246
  store i64 4, i64* %3, align 8, !dbg !16246
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %emcc.dbg.spill, metadata !16216, metadata !DIExpression()), !dbg !16247
; call std::process::Command::new
  call void @_ZN3std7process7Command3new17h0bb87ac83e738136E(%"std::process::Command"* sret(%"std::process::Command") %_10, [0 x i8]* align 1 bitcast (<{ [4 x i8] }>* @alloc638 to [0 x i8]*), i64 4), !dbg !16248
  br label %bb1, !dbg !16248

bb1:                                              ; preds = %start
; invoke std::process::Command::arg
  %_8 = invoke align 8 %"std::process::Command"* @_ZN3std7process7Command3arg17he741b1289eee98d1E(%"std::process::Command"* align 8 %_10, [0 x i8]* align 1 bitcast (<{ [12 x i8] }>* @alloc639 to [0 x i8]*), i64 12)
          to label %bb2 unwind label %cleanup, !dbg !16248

bb41:                                             ; preds = %bb52, %cleanup
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %_10) #16
          to label %bb42 unwind label %abort, !dbg !16249

cleanup:                                          ; preds = %bb4, %bb3, %bb2, %bb1
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb41

bb2:                                              ; preds = %bb1
; invoke std::process::Command::output
  invoke void @_ZN3std7process7Command6output17h8f4146acd0d0e05aE(%"core::result::Result<std::process::Output, std::io::error::Error>"* sret(%"core::result::Result<std::process::Output, std::io::error::Error>") %_6, %"std::process::Command"* align 8 %_8)
          to label %bb3 unwind label %cleanup, !dbg !16248

bb3:                                              ; preds = %bb2
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h9fdab479f3bb0927E"(%"core::option::Option<std::process::Output>"* sret(%"core::option::Option<std::process::Output>") %_5, %"core::result::Result<std::process::Output, std::io::error::Error>"* %_6)
          to label %bb4 unwind label %cleanup, !dbg !16248

bb4:                                              ; preds = %bb3
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd35e8556e45aa856E"(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>"* sret(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>") %_4, %"core::option::Option<std::process::Output>"* %_5)
          to label %bb5 unwind label %cleanup, !dbg !16248

bb5:                                              ; preds = %bb4
  %9 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>"* %_4 to {}**, !dbg !16248
  %10 = load {}*, {}** %9, align 8, !dbg !16248
  %11 = icmp eq {}* %10, null, !dbg !16248
  %_12 = select i1 %11, i64 1, i64 0, !dbg !16248
  switch i64 %_12, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !16248

bb7:                                              ; preds = %bb5
  unreachable, !dbg !16248

bb6:                                              ; preds = %bb5
  %12 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>"* %_4 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>::Continue"*, !dbg !16248
  %13 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>::Continue"* %12 to %"std::process::Output"*, !dbg !16248
  %14 = bitcast %"std::process::Output"* %val to i8*, !dbg !16248
  %15 = bitcast %"std::process::Output"* %13 to i8*, !dbg !16248
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 56, i1 false), !dbg !16248
  store i8 1, i8* %_61, align 1, !dbg !16240
  %16 = bitcast %"std::process::Output"* %output to i8*, !dbg !16240
  %17 = bitcast %"std::process::Output"* %val to i8*, !dbg !16240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 56, i1 false), !dbg !16240
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %_10)
          to label %bb10 unwind label %cleanup4, !dbg !16249

bb8:                                              ; preds = %bb5
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %18 = invoke { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha6f2bf65a9752053E"()
          to label %bb9 unwind label %cleanup3, !dbg !16250

bb52:                                             ; preds = %cleanup3
  br label %bb41, !dbg !16249

cleanup3:                                         ; preds = %bb8
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  %21 = extractvalue { i8*, i32 } %19, 1
  %22 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %21, i32* %23, align 8
  br label %bb52

bb9:                                              ; preds = %bb8
  store { i64, i64 } %18, { i64, i64 }* %1, align 8, !dbg !16250
; call core::ptr::drop_in_place<std::process::Command>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E"(%"std::process::Command"* %_10), !dbg !16249
  br label %bb38, !dbg !16249

abort:                                            ; preds = %bb49, %bb50, %bb40, %bb44, %bb41
  %24 = landingpad { i8*, i32 }
          cleanup, !dbg !16251
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #17, !dbg !16251
  unreachable, !dbg !16251

bb42:                                             ; preds = %bb49, %bb44, %bb41
  %25 = bitcast { i8*, i32 }* %0 to i8**, !dbg !16251
  %26 = load i8*, i8** %25, align 8, !dbg !16251
  %27 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !16251
  %28 = load i32, i32* %27, align 8, !dbg !16251
  %29 = insertvalue { i8*, i32 } undef, i8* %26, 0, !dbg !16251
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1, !dbg !16251
  resume { i8*, i32 } %30, !dbg !16251

bb38:                                             ; preds = %bb45, %bb9
  store i8 0, i8* %_61, align 1, !dbg !16252
  br label %bb39, !dbg !16253

bb51:                                             ; preds = %bb40, %bb48, %cleanup4
  %31 = load i8, i8* %_61, align 1, !dbg !16252, !range !512, !noundef !23
  %32 = trunc i8 %31 to i1, !dbg !16252
  br i1 %32, label %bb50, label %bb49, !dbg !16252

cleanup4:                                         ; preds = %bb36, %bb15, %bb14, %bb13, %bb10, %bb6
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  %35 = extractvalue { i8*, i32 } %33, 1
  %36 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %35, i32* %37, align 8
  br label %bb51

bb10:                                             ; preds = %bb6
  %_18 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 2, !dbg !16254
; invoke std::process::ExitStatus::success
  %_17 = invoke zeroext i1 @_ZN3std7process10ExitStatus7success17h896a2ee5b1332cd1E(i32* align 4 %_18)
          to label %bb11 unwind label %cleanup4, !dbg !16254

bb11:                                             ; preds = %bb10
  %_16 = xor i1 %_17, true, !dbg !16255
  br i1 %_16, label %bb12, label %bb13, !dbg !16255

bb13:                                             ; preds = %bb11
  store i8 0, i8* %_61, align 1, !dbg !16256
  %38 = bitcast %"std::process::Output"* %output to %"alloc::vec::Vec<u8>"*, !dbg !16256
  %39 = bitcast %"alloc::vec::Vec<u8>"* %_23 to i8*, !dbg !16256
  %40 = bitcast %"alloc::vec::Vec<u8>"* %38 to i8*, !dbg !16256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false), !dbg !16256
; invoke alloc::string::String::from_utf8
  invoke void @_ZN5alloc6string6String9from_utf817hd78bfefcdef25b62E(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* sret(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>") %_22, %"alloc::vec::Vec<u8>"* %_23)
          to label %bb14 unwind label %cleanup4, !dbg !16257

bb12:                                             ; preds = %bb11
  %41 = bitcast { i64, i64 }* %1 to i64*, !dbg !16258
  store i64 0, i64* %41, align 8, !dbg !16258
  br label %bb47, !dbg !16259

bb47:                                             ; preds = %bb20, %bb12
  %42 = load i8, i8* %_61, align 1, !dbg !16252, !range !512, !noundef !23
  %43 = trunc i8 %42 to i1, !dbg !16252
  br i1 %43, label %bb46, label %bb45, !dbg !16252

bb14:                                             ; preds = %bb13
; invoke core::result::Result<T,E>::ok
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h0c6429ce610f4340E"(%"core::option::Option<alloc::string::String>"* sret(%"core::option::Option<alloc::string::String>") %_21, %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>"* %_22)
          to label %bb15 unwind label %cleanup4, !dbg !16257

bb15:                                             ; preds = %bb14
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf5332cef795be0afE"(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>"* sret(%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>") %_20, %"core::option::Option<alloc::string::String>"* %_21)
          to label %bb16 unwind label %cleanup4, !dbg !16257

bb16:                                             ; preds = %bb15
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>"* %_20 to {}**, !dbg !16257
  %45 = load {}*, {}** %44, align 8, !dbg !16257
  %46 = icmp eq {}* %45, null, !dbg !16257
  %_24 = select i1 %46, i64 1, i64 0, !dbg !16257
  switch i64 %_24, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !16257

bb18:                                             ; preds = %bb16
  unreachable, !dbg !16257

bb17:                                             ; preds = %bb16
  %47 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>"* %_20 to %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>::Continue"*, !dbg !16257
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>::Continue"* %47 to %"alloc::string::String"*, !dbg !16257
  %49 = bitcast %"alloc::string::String"* %val2 to i8*, !dbg !16257
  %50 = bitcast %"alloc::string::String"* %48 to i8*, !dbg !16257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false), !dbg !16257
  %51 = bitcast %"alloc::string::String"* %version to i8*, !dbg !16243
  %52 = bitcast %"alloc::string::String"* %val2 to i8*, !dbg !16243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false), !dbg !16243
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %53 = invoke { [0 x i8]*, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E"(%"alloc::string::String"* align 8 %version)
          to label %bb21 unwind label %cleanup7, !dbg !16260

bb19:                                             ; preds = %bb16
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %54 = invoke { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha6f2bf65a9752053E"()
          to label %bb20 unwind label %cleanup5, !dbg !16261

bb48:                                             ; preds = %cleanup5
  br label %bb51, !dbg !16262

cleanup5:                                         ; preds = %bb19
  %55 = landingpad { i8*, i32 }
          cleanup
  %56 = extractvalue { i8*, i32 } %55, 0
  %57 = extractvalue { i8*, i32 } %55, 1
  %58 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %56, i8** %58, align 8
  %59 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %57, i32* %59, align 8
  br label %bb48

bb20:                                             ; preds = %bb19
  store { i64, i64 } %54, { i64, i64 }* %1, align 8, !dbg !16261
  br label %bb47, !dbg !16259

bb45:                                             ; preds = %bb46, %bb47
  %60 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !16252
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %60), !dbg !16252
  br label %bb38, !dbg !16252

bb46:                                             ; preds = %bb47
  %61 = bitcast %"std::process::Output"* %output to %"alloc::vec::Vec<u8>"*, !dbg !16252
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %61)
          to label %bb45 unwind label %cleanup6, !dbg !16252

bb44:                                             ; preds = %cleanup6
  %62 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !16252
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %62) #16
          to label %bb42 unwind label %abort, !dbg !16252

cleanup6:                                         ; preds = %bb46
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  %65 = extractvalue { i8*, i32 } %63, 1
  %66 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %64, i8** %66, align 8
  %67 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %65, i32* %67, align 8
  br label %bb44

bb39:                                             ; preds = %bb43, %bb38
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !16253
  %69 = load i64, i64* %68, align 8, !dbg !16253, !range !3441, !noundef !23
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !16253
  %71 = load i64, i64* %70, align 8, !dbg !16253
  %72 = insertvalue { i64, i64 } undef, i64 %69, 0, !dbg !16253
  %73 = insertvalue { i64, i64 } %72, i64 %71, 1, !dbg !16253
  ret { i64, i64 } %73, !dbg !16253

bb40:                                             ; preds = %cleanup7
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %version) #16
          to label %bb51 unwind label %abort, !dbg !16263

cleanup7:                                         ; preds = %panic10, %panic9, %panic8, %panic, %bb31, %bb30, %bb29, %bb28, %bb27, %bb26, %bb25, %bb24, %bb23, %bb22, %bb21, %bb17
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  %76 = extractvalue { i8*, i32 } %74, 1
  %77 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %75, i8** %77, align 8
  %78 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %76, i32* %78, align 8
  br label %bb40

bb21:                                             ; preds = %bb17
  %_32.0 = extractvalue { [0 x i8]*, i64 } %53, 0, !dbg !16260
  %_32.1 = extractvalue { [0 x i8]*, i64 } %53, 1, !dbg !16260
; invoke core::str::<impl str>::trim
  %79 = invoke { [0 x i8]*, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim17hd25ab38ac10a5d56E"([0 x i8]* align 1 %_32.0, i64 %_32.1)
          to label %bb22 unwind label %cleanup7, !dbg !16260

bb22:                                             ; preds = %bb21
  %_30.0 = extractvalue { [0 x i8]*, i64 } %79, 0, !dbg !16260
  %_30.1 = extractvalue { [0 x i8]*, i64 } %79, 1, !dbg !16260
  %80 = getelementptr inbounds [2 x i32], [2 x i32]* %_34, i64 0, i64 0, !dbg !16264
  store i32 46, i32* %80, align 4, !dbg !16264
  %81 = getelementptr inbounds [2 x i32], [2 x i32]* %_34, i64 0, i64 1, !dbg !16264
  store i32 45, i32* %81, align 4, !dbg !16264
  %82 = bitcast [2 x i32]* %_34 to i64*, !dbg !16260
  %83 = load i64, i64* %82, align 4, !dbg !16260
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h1bb17d058b9c0d23E"(%"core::str::iter::Split<[char; 2]>"* sret(%"core::str::iter::Split<[char; 2]>") %pieces, [0 x i8]* align 1 %_30.0, i64 %_30.1, i64 %83)
          to label %bb23 unwind label %cleanup7, !dbg !16260

bb23:                                             ; preds = %bb22
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %84 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haffff965e8aa3b1fE"(%"core::str::iter::Split<[char; 2]>"* align 8 %pieces)
          to label %bb24 unwind label %cleanup7, !dbg !16265

bb24:                                             ; preds = %bb23
  %_37.0 = extractvalue { i8*, i64 } %84, 0, !dbg !16265
  %_37.1 = extractvalue { i8*, i64 } %84, 1, !dbg !16265
; invoke core::option::Option<T>::and_then
  %85 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17hdee32727e12964cfE"(i8* align 1 %_37.0, i64 %_37.1)
          to label %bb25 unwind label %cleanup7, !dbg !16265

bb25:                                             ; preds = %bb24
  %_36.0 = extractvalue { i64, i64 } %85, 0, !dbg !16265
  %_36.1 = extractvalue { i64, i64 } %85, 1, !dbg !16265
; invoke core::option::Option<T>::unwrap_or
  %major = invoke i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hbd4e8fa013b1794aE"(i64 %_36.0, i64 %_36.1, i64 0)
          to label %bb26 unwind label %cleanup7, !dbg !16265

bb26:                                             ; preds = %bb25
  store i64 %major, i64* %major.dbg.spill, align 8, !dbg !16265
  call void @llvm.dbg.declare(metadata i64* %major.dbg.spill, metadata !16232, metadata !DIExpression()), !dbg !16266
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %86 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haffff965e8aa3b1fE"(%"core::str::iter::Split<[char; 2]>"* align 8 %pieces)
          to label %bb27 unwind label %cleanup7, !dbg !16267

bb27:                                             ; preds = %bb26
  %_42.0 = extractvalue { i8*, i64 } %86, 0, !dbg !16267
  %_42.1 = extractvalue { i8*, i64 } %86, 1, !dbg !16267
; invoke core::option::Option<T>::and_then
  %87 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h7746da4fdaf699a1E"(i8* align 1 %_42.0, i64 %_42.1)
          to label %bb28 unwind label %cleanup7, !dbg !16267

bb28:                                             ; preds = %bb27
  %_41.0 = extractvalue { i64, i64 } %87, 0, !dbg !16267
  %_41.1 = extractvalue { i64, i64 } %87, 1, !dbg !16267
; invoke core::option::Option<T>::unwrap_or
  %minor = invoke i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hbd4e8fa013b1794aE"(i64 %_41.0, i64 %_41.1, i64 0)
          to label %bb29 unwind label %cleanup7, !dbg !16267

bb29:                                             ; preds = %bb28
  store i64 %minor, i64* %minor.dbg.spill, align 8, !dbg !16267
  call void @llvm.dbg.declare(metadata i64* %minor.dbg.spill, metadata !16234, metadata !DIExpression()), !dbg !16268
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %88 = invoke { i8*, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haffff965e8aa3b1fE"(%"core::str::iter::Split<[char; 2]>"* align 8 %pieces)
          to label %bb30 unwind label %cleanup7, !dbg !16269

bb30:                                             ; preds = %bb29
  %_47.0 = extractvalue { i8*, i64 } %88, 0, !dbg !16269
  %_47.1 = extractvalue { i8*, i64 } %88, 1, !dbg !16269
; invoke core::option::Option<T>::and_then
  %89 = invoke { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h76b539b5430f215aE"(i8* align 1 %_47.0, i64 %_47.1)
          to label %bb31 unwind label %cleanup7, !dbg !16269

bb31:                                             ; preds = %bb30
  %_46.0 = extractvalue { i64, i64 } %89, 0, !dbg !16269
  %_46.1 = extractvalue { i64, i64 } %89, 1, !dbg !16269
; invoke core::option::Option<T>::unwrap_or
  %patch = invoke i64 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hbd4e8fa013b1794aE"(i64 %_46.0, i64 %_46.1, i64 0)
          to label %bb32 unwind label %cleanup7, !dbg !16269

bb32:                                             ; preds = %bb31
  store i64 %patch, i64* %patch.dbg.spill, align 8, !dbg !16269
  call void @llvm.dbg.declare(metadata i64* %patch.dbg.spill, metadata !16236, metadata !DIExpression()), !dbg !16270
  %90 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %major, i64 10000), !dbg !16271
  %_54.0 = extractvalue { i64, i1 } %90, 0, !dbg !16271
  %_54.1 = extractvalue { i64, i1 } %90, 1, !dbg !16271
  %91 = call i1 @llvm.expect.i1(i1 %_54.1, i1 false), !dbg !16271
  br i1 %91, label %panic, label %bb33, !dbg !16271

bb33:                                             ; preds = %bb32
  %92 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %minor, i64 100), !dbg !16272
  %_57.0 = extractvalue { i64, i1 } %92, 0, !dbg !16272
  %_57.1 = extractvalue { i64, i1 } %92, 1, !dbg !16272
  %93 = call i1 @llvm.expect.i1(i1 %_57.1, i1 false), !dbg !16272
  br i1 %93, label %panic8, label %bb34, !dbg !16272

panic:                                            ; preds = %bb32
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc641 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup7, !dbg !16271

unreachable:                                      ; preds = %panic10, %panic9, %panic8, %panic
  unreachable

bb34:                                             ; preds = %bb33
  %94 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_54.0, i64 %_57.0), !dbg !16271
  %_58.0 = extractvalue { i64, i1 } %94, 0, !dbg !16271
  %_58.1 = extractvalue { i64, i1 } %94, 1, !dbg !16271
  %95 = call i1 @llvm.expect.i1(i1 %_58.1, i1 false), !dbg !16271
  br i1 %95, label %panic9, label %bb35, !dbg !16271

panic8:                                           ; preds = %bb33
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.6 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc643 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup7, !dbg !16272

bb35:                                             ; preds = %bb34
  %96 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_58.0, i64 %patch), !dbg !16271
  %_60.0 = extractvalue { i64, i1 } %96, 0, !dbg !16271
  %_60.1 = extractvalue { i64, i1 } %96, 1, !dbg !16271
  %97 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false), !dbg !16271
  br i1 %97, label %panic10, label %bb36, !dbg !16271

panic9:                                           ; preds = %bb34
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc641 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup7, !dbg !16271

bb36:                                             ; preds = %bb35
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !16273
  store i64 %_60.0, i64* %98, align 8, !dbg !16273
  %99 = bitcast { i64, i64 }* %1 to i64*, !dbg !16273
  store i64 1, i64* %99, align 8, !dbg !16273
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE"(%"alloc::string::String"* %version)
          to label %bb37 unwind label %cleanup4, !dbg !16263

panic10:                                          ; preds = %bb35
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.5 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc641 to %"core::panic::location::Location"*)) #15
          to label %unreachable unwind label %cleanup7, !dbg !16271

bb37:                                             ; preds = %bb36
  %100 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !16252
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %100), !dbg !16252
  br label %bb43, !dbg !16252

bb49:                                             ; preds = %bb50, %bb51
  %101 = getelementptr inbounds %"std::process::Output", %"std::process::Output"* %output, i32 0, i32 1, !dbg !16252
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %101) #16
          to label %bb42 unwind label %abort, !dbg !16252

bb50:                                             ; preds = %bb51
  %102 = bitcast %"std::process::Output"* %output to %"alloc::vec::Vec<u8>"*, !dbg !16252
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E"(%"alloc::vec::Vec<u8>"* %102) #16
          to label %bb49 unwind label %abort, !dbg !16252

bb43:                                             ; preds = %bb37
  store i8 0, i8* %_61, align 1, !dbg !16252
  br label %bb39, !dbg !16253
}

; build_script_build::emcc_version_code::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17hd3cda77f24883d13E"([0 x i8]* align 1 %x.0, i64 %x.1) unnamed_addr #0 !dbg !16274 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_1.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:284:40: 284:43]", align 1
  %_3 = alloca %"core::result::Result<u64, core::num::error::ParseIntError>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:284:40: 284:43]"* %_1.dbg.spill, metadata !16279, metadata !DIExpression()), !dbg !16280
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1
  store i64 %x.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !16278, metadata !DIExpression()), !dbg !16281
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h8dac79dedbab61bdE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %_3, [0 x i8]* align 1 %x.0, i64 %x.1), !dbg !16282
  br label %bb1, !dbg !16282

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h03881c7d0850af22E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* %_3), !dbg !16282
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !16282
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !16282
  br label %bb2, !dbg !16282

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !16283
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !16283
  ret { i64, i64 } %6, !dbg !16283
}

; build_script_build::emcc_version_code::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17he794c5a67bef406fE"([0 x i8]* align 1 %x.0, i64 %x.1) unnamed_addr #0 !dbg !16284 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_1.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:285:40: 285:43]", align 1
  %_3 = alloca %"core::result::Result<u64, core::num::error::ParseIntError>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:285:40: 285:43]"* %_1.dbg.spill, metadata !16289, metadata !DIExpression()), !dbg !16290
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1
  store i64 %x.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !16288, metadata !DIExpression()), !dbg !16291
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h8dac79dedbab61bdE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %_3, [0 x i8]* align 1 %x.0, i64 %x.1), !dbg !16292
  br label %bb1, !dbg !16292

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h03881c7d0850af22E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* %_3), !dbg !16292
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !16292
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !16292
  br label %bb2, !dbg !16292

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !16293
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !16293
  ret { i64, i64 } %6, !dbg !16293
}

; build_script_build::emcc_version_code::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h929c6ddb3af8e2bfE"([0 x i8]* align 1 %x.0, i64 %x.1) unnamed_addr #0 !dbg !16294 {
start:
  %x.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_1.dbg.spill = alloca %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:286:40: 286:43]", align 1
  %_3 = alloca %"core::result::Result<u64, core::num::error::ParseIntError>", align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs:286:40: 286:43]"* %_1.dbg.spill, metadata !16299, metadata !DIExpression()), !dbg !16300
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 0
  store [0 x i8]* %x.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %x.dbg.spill, i32 0, i32 1
  store i64 %x.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %x.dbg.spill, metadata !16298, metadata !DIExpression()), !dbg !16301
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h8dac79dedbab61bdE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>") %_3, [0 x i8]* align 1 %x.0, i64 %x.1), !dbg !16302
  br label %bb1, !dbg !16302

bb1:                                              ; preds = %start
; call core::result::Result<T,E>::ok
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h03881c7d0850af22E"(%"core::result::Result<u64, core::num::error::ParseIntError>"* %_3), !dbg !16302
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !16302
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !16302
  br label %bb2, !dbg !16302

bb2:                                              ; preds = %bb1
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !16303
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !16303
  ret { i64, i64 } %6, !dbg !16303
}

; build_script_build::set_cfg
; Function Attrs: nonlazybind uwtable
define internal void @_ZN18build_script_build7set_cfg17h983f56089e58545aE([0 x i8]* align 1 %0, i64 %1) unnamed_addr #1 !dbg !16304 {
start:
  %_28 = alloca [1 x { i8*, i64* }], align 8
  %_21 = alloca %"core::fmt::Arguments", align 8
  %_16 = alloca [1 x { i8*, i64* }], align 8
  %_9 = alloca %"core::fmt::Arguments", align 8
  %cfg = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %cfg, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %cfg, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %cfg, metadata !16308, metadata !DIExpression()), !dbg !16309
  %_5.0 = load [0 x { [0 x i8]*, i64 }]*, [0 x { [0 x i8]*, i64 }]** getelementptr inbounds ({ [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*), i32 0, i32 0), align 8, !dbg !16310, !nonnull !23, !align !584, !noundef !23
  %_5.1 = load i64, i64* getelementptr inbounds ({ [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* bitcast (<{ i8*, [8 x i8] }>* @1 to { [0 x { [0 x i8]*, i64 }]*, i64 }*), i32 0, i32 1), align 8, !dbg !16310
; call core::slice::<impl [T]>::contains
  %_3 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17hff584c436fe4b983E"([0 x { [0 x i8]*, i64 }]* align 8 %_5.0, i64 %_5.1, { [0 x i8]*, i64 }* align 8 %cfg), !dbg !16310
  br label %bb1, !dbg !16310

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true, !dbg !16311
  br i1 %_2, label %bb2, label %bb5, !dbg !16311

bb5:                                              ; preds = %bb1
; call core::fmt::ArgumentV1::new_display
  %4 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hd3e7c3896cc0a32bE({ [0 x i8]*, i64 }* align 8 %cfg), !dbg !16312
  %_29.0 = extractvalue { i8*, i64* } %4, 0, !dbg !16312
  %_29.1 = extractvalue { i8*, i64* } %4, 1, !dbg !16312
  br label %bb6, !dbg !16312

bb2:                                              ; preds = %bb1
; call core::fmt::ArgumentV1::new_display
  %5 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hd3e7c3896cc0a32bE({ [0 x i8]*, i64 }* align 8 %cfg), !dbg !16311
  %_17.0 = extractvalue { i8*, i64* } %5, 0, !dbg !16311
  %_17.1 = extractvalue { i8*, i64* } %5, 1, !dbg !16311
  br label %bb3, !dbg !16311

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_16, i64 0, i64 0, !dbg !16311
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %6, i32 0, i32 0, !dbg !16311
  store i8* %_17.0, i8** %7, align 8, !dbg !16311
  %8 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %6, i32 0, i32 1, !dbg !16311
  store i64* %_17.1, i64** %8, align 8, !dbg !16311
  %_13.0 = bitcast [1 x { i8*, i64* }]* %_16 to [0 x { i8*, i64* }]*, !dbg !16311
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_9, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc382 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_13.0, i64 1), !dbg !16311
  br label %bb4, !dbg !16311

bb4:                                              ; preds = %bb3
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_9, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc645 to %"core::panic::location::Location"*)) #15, !dbg !16311
  unreachable, !dbg !16311

bb6:                                              ; preds = %bb5
  %9 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_28, i64 0, i64 0, !dbg !16312
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 0, !dbg !16312
  store i8* %_29.0, i8** %10, align 8, !dbg !16312
  %11 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %9, i32 0, i32 1, !dbg !16312
  store i64* %_29.1, i64** %11, align 8, !dbg !16312
  %_25.0 = bitcast [1 x { i8*, i64* }]* %_28 to [0 x { i8*, i64* }]*, !dbg !16312
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_21, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc386 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_25.0, i64 1), !dbg !16312
  br label %bb7, !dbg !16312

bb7:                                              ; preds = %bb6
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"* %_21), !dbg !16312
  br label %bb8, !dbg !16312

bb8:                                              ; preds = %bb7
  ret void, !dbg !16313
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #1

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17ha5ea6a931f940f05E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hc132699ea07ad3eeE(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #8

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; std::rt::lang_start_internal
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1, [3 x i64]* align 8, i64, i8**) unnamed_addr #1

; std::env::_var
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3env4_var17h48effbaa8b2613b5E(%"core::result::Result<alloc::string::String, std::env::VarError>"* sret(%"core::result::Result<alloc::string::String, std::env::VarError>"), %"std::ffi::os_str::OsStr"* align 1, i64) unnamed_addr #1

; std::env::_var_os
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3env7_var_os17h2f2f6465d9e6a0ebE(%"core::option::Option<std::ffi::os_str::OsString>"* sret(%"core::option::Option<std::ffi::os_str::OsString>"), %"std::ffi::os_str::OsStr"* align 1, i64) unnamed_addr #1

; std::sys::unix::process::process_common::Command::arg
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix7process14process_common7Command3arg17h1dc5214fca92cdf5E(%"std::sys::unix::process::process_common::Command"* align 8, %"std::ffi::os_str::OsStr"* align 1, i64) unnamed_addr #1

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() unnamed_addr #9

; std::sys::unix::process::process_common::Command::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys4unix7process14process_common7Command3new17h826d4e968588230fE(%"std::sys::unix::process::process_common::Command"* sret(%"std::sys::unix::process::process_common::Command"), %"std::ffi::os_str::OsStr"* align 1, i64) unnamed_addr #1

; <str as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h158131d6df421a05E"([0 x i8]* align 1, i64, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hde81f4d22eef4d42E"([0 x i8]* align 1, i64, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #10

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfa13d25b04515027E"(%"alloc::collections::btree::mem::replace::PanicGuard"* align 1) unnamed_addr #1

; core::num::<impl core::str::traits::FromStr for i32>::from_str
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$i32$GT$8from_str17h60c3befe7cda1babE"([0 x i8]* align 1, i64) unnamed_addr #1

; core::num::<impl core::str::traits::FromStr for u32>::from_str
; Function Attrs: nonlazybind uwtable
declare i64 @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u32$GT$8from_str17h2a346393c61b3aedE"([0 x i8]* align 1, i64) unnamed_addr #1

; core::num::<impl core::str::traits::FromStr for u64>::from_str
; Function Attrs: nonlazybind uwtable
declare void @"_ZN4core3num60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u64$GT$8from_str17h32134b240f70e51fE"(%"core::result::Result<u64, core::num::error::ParseIntError>"* sret(%"core::result::Result<u64, core::num::error::ParseIntError>"), [0 x i8]* align 1, i64) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE"(i64* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h1d19ab97b54bf162E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::unicode::unicode_data::white_space::lookup
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17h7fc73e48918678a5E(i32) unnamed_addr #1

; core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h19e3e22fb19335d6E"(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; core::slice::memchr::memchr_general_case
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core5slice6memchr19memchr_general_case17h8d14ec4c11d8af08E(i8, [0 x i8]* align 1, i64) unnamed_addr #1

; core::option::expect_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6option13expect_failed17hfe812f345eb8521fE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #6

; <std::io::error::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN58_$LT$std..io..error..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h9412cc25832b82a2E"(i8** align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17hff48f82f03d418aeE([0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8, %"core::panic::location::Location"* align 8) unnamed_addr #6

; <core::num::error::ParseIntError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$core..num..error..ParseIntError$u20$as$u20$core..fmt..Debug$GT$3fmt17h69f92421caac858dE"(i8* align 1, %"core::fmt::Formatter"* align 8) unnamed_addr #1

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8, {}* align 1, [3 x i64]* align 8, {}* align 1, [3 x i64]* align 8, %"core::option::Option<core::fmt::Arguments>"*, %"core::panic::location::Location"* align 8) unnamed_addr #11

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #13

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #13

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #13

; core::str::converts::from_utf8
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str8converts9from_utf817h44aac8e9d8892328E(%"core::result::Result<&str, core::str::error::Utf8Error>"* sret(%"core::result::Result<&str, core::str::error::Utf8Error>"), [0 x i8]* align 1, i64) unnamed_addr #1

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64, i64) unnamed_addr #3

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() unnamed_addr #11

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #13

; core::fmt::Formatter::debug_tuple_field1_finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17hd6136acaab6696e6E(%"core::fmt::Formatter"* align 8, [0 x i8]* align 1, i64, {}* align 1, [3 x i64]* align 8) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17hd86e8e148609ddcbE(%"core::fmt::Formatter"* align 8, [0 x i8]* align 1, i64) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @close(i32) unnamed_addr #1

; Function Attrs: nonlazybind uwtable
declare i32 @memcmp(i8*, i8*, i64) unnamed_addr #1

; std::io::stdio::_print
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2io5stdio6_print17h141fc01f1d2bd34dE(%"core::fmt::Arguments"*) unnamed_addr #1

; std::process::Command::output
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std7process7Command6output17h8f4146acd0d0e05aE(%"core::result::Result<std::process::Output, std::io::error::Error>"* sret(%"core::result::Result<std::process::Output, std::io::error::Error>"), %"std::process::Command"* align 8) unnamed_addr #1

; std::process::ExitStatus::success
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN3std7process10ExitStatus7success17h896a2ee5b1332cd1E(i32* align 4) unnamed_addr #1

; alloc::string::String::from_utf8_lossy
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc6string6String15from_utf8_lossy17hd4784f16c3f98e97E(%"alloc::borrow::Cow<str>"* sret(%"alloc::borrow::Cow<str>"), [0 x i8]* align 1, i64) unnamed_addr #1

; Function Attrs: nonlazybind
define i32 @main(i32 %0, i8** %1) unnamed_addr #14 {
top:
  %2 = load volatile i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__rustc_debug_gdb_scripts_section__, i32 0, i32 0), align 1
  %3 = sext i32 %0 to i64
; call std::rt::lang_start
  %4 = call i64 @_ZN3std2rt10lang_start17h29b804ca370f3f45E(void ()* @_ZN18build_script_build4main17hb5f2302d848edaccE, i64 %3, i8** %1)
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #9 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #10 = { nofree nosync nounwind readnone willreturn }
attributes #11 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #14 = { nonlazybind "target-cpu"="x86-64" }
attributes #15 = { noreturn }
attributes #16 = { noinline }
attributes #17 = { noinline noreturn nounwind }
attributes #18 = { nounwind }

!llvm.module.flags = !{!200, !201, !202, !203, !204}
!llvm.dbg.cu = !{!205}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !14, templateParams: !23, identifier: "dee041a15dfe076460e1ead4b963607c")
!4 = !{!5, !8, !10, !11, !12, !13}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!14 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<()>", scope: !15, file: !2, size: 64, align: 64, elements: !18, templateParams: !23, identifier: "eb9421142c7534b89a47eb687fc5227b")
!15 = !DINamespace(name: "lang_start", scope: !16)
!16 = !DINamespace(name: "rt", scope: !17)
!17 = !DINamespace(name: "std", scope: null)
!18 = !{!19}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !14, file: !2, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn()", baseType: !21, size: 64, align: 64, dwarfAddressSpace: 0)
!21 = !DISubroutineType(types: !22)
!22 = !{null}
!23 = !{}
!24 = !DIGlobalVariableExpression(var: !25, expr: !DIExpression())
!25 = distinct !DIGlobalVariable(name: "<std::io::error::Error as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !26, isLocal: true, isDefinition: true)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::io::error::Error as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !27, vtableHolder: !32, templateParams: !23, identifier: "5524bda69378138df0eaa44a0fa62936")
!27 = !{!28, !29, !30, !31}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !26, file: !2, baseType: !6, size: 64, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !26, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!32 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !33, file: !2, size: 64, align: 64, elements: !35, templateParams: !23, identifier: "35ef22def08c837ae3878504674e366b")
!33 = !DINamespace(name: "error", scope: !34)
!34 = !DINamespace(name: "io", scope: !17)
!35 = !{!36}
!36 = !DIDerivedType(tag: DW_TAG_member, name: "repr", scope: !32, file: !2, baseType: !37, size: 64, align: 64)
!37 = !DICompositeType(tag: DW_TAG_structure_type, name: "Repr", scope: !38, file: !2, size: 64, align: 64, elements: !39, templateParams: !23, identifier: "6570f3d28135329fbed4cb7a1951e32d")
!38 = !DINamespace(name: "repr_bitpacked", scope: !33)
!39 = !{!40, !49}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !37, file: !2, baseType: !41, size: 64, align: 64)
!41 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<()>", scope: !42, file: !2, size: 64, align: 64, elements: !45, templateParams: !47, identifier: "b858013ea474e1eef5ccba3870fe353d")
!42 = !DINamespace(name: "non_null", scope: !43)
!43 = !DINamespace(name: "ptr", scope: !44)
!44 = !DINamespace(name: "core", scope: null)
!45 = !{!46}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !41, file: !2, baseType: !6, size: 64, align: 64)
!47 = !{!48}
!48 = !DITemplateTypeParameter(name: "T", type: !7)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !37, file: !2, baseType: !50, align: 8)
!50 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !52, identifier: "1d073321bd67e7be57d2b831b78eb78b")
!51 = !DINamespace(name: "marker", scope: !44)
!52 = !{!53}
!53 = !DITemplateTypeParameter(name: "T", type: !54)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", scope: !33, file: !2, size: 128, align: 64, elements: !55, templateParams: !23, identifier: "64bf9ab43a422ff7882cc64d405e6db4")
!55 = !{!56}
!56 = !DICompositeType(tag: DW_TAG_variant_part, scope: !54, file: !2, size: 128, align: 64, elements: !57, templateParams: !23, identifier: "32d46417816a4970232155829bec3de0", discriminator: !146)
!57 = !{!58, !124, !128, !142}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "Os", scope: !56, file: !2, baseType: !59, size: 128, align: 64, extraData: i64 0)
!59 = !DICompositeType(tag: DW_TAG_structure_type, name: "Os", scope: !54, file: !2, size: 128, align: 64, elements: !60, templateParams: !63, identifier: "51312ccd08399ffb43fb895d8a6353de")
!60 = !{!61}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !59, file: !2, baseType: !62, size: 32, align: 32, offset: 32)
!62 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!63 = !{!64}
!64 = !DITemplateTypeParameter(name: "C", type: !65)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>", baseType: !66, size: 64, align: 64, dwarfAddressSpace: 0)
!66 = !DICompositeType(tag: DW_TAG_structure_type, name: "Custom", scope: !33, file: !2, size: 192, align: 64, elements: !67, templateParams: !23, identifier: "387ae58cacb5ae1d4fddf7f57315f38d")
!67 = !{!68, !113}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !66, file: !2, baseType: !69, size: 8, align: 8, offset: 128)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ErrorKind", scope: !33, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagEnumClass, elements: !71)
!70 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112}
!72 = !DIEnumerator(name: "NotFound", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "PermissionDenied", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "ConnectionRefused", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "ConnectionReset", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "HostUnreachable", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "NetworkUnreachable", value: 5, isUnsigned: true)
!78 = !DIEnumerator(name: "ConnectionAborted", value: 6, isUnsigned: true)
!79 = !DIEnumerator(name: "NotConnected", value: 7, isUnsigned: true)
!80 = !DIEnumerator(name: "AddrInUse", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "AddrNotAvailable", value: 9, isUnsigned: true)
!82 = !DIEnumerator(name: "NetworkDown", value: 10, isUnsigned: true)
!83 = !DIEnumerator(name: "BrokenPipe", value: 11, isUnsigned: true)
!84 = !DIEnumerator(name: "AlreadyExists", value: 12, isUnsigned: true)
!85 = !DIEnumerator(name: "WouldBlock", value: 13, isUnsigned: true)
!86 = !DIEnumerator(name: "NotADirectory", value: 14, isUnsigned: true)
!87 = !DIEnumerator(name: "IsADirectory", value: 15, isUnsigned: true)
!88 = !DIEnumerator(name: "DirectoryNotEmpty", value: 16, isUnsigned: true)
!89 = !DIEnumerator(name: "ReadOnlyFilesystem", value: 17, isUnsigned: true)
!90 = !DIEnumerator(name: "FilesystemLoop", value: 18, isUnsigned: true)
!91 = !DIEnumerator(name: "StaleNetworkFileHandle", value: 19, isUnsigned: true)
!92 = !DIEnumerator(name: "InvalidInput", value: 20, isUnsigned: true)
!93 = !DIEnumerator(name: "InvalidData", value: 21, isUnsigned: true)
!94 = !DIEnumerator(name: "TimedOut", value: 22, isUnsigned: true)
!95 = !DIEnumerator(name: "WriteZero", value: 23, isUnsigned: true)
!96 = !DIEnumerator(name: "StorageFull", value: 24, isUnsigned: true)
!97 = !DIEnumerator(name: "NotSeekable", value: 25, isUnsigned: true)
!98 = !DIEnumerator(name: "FilesystemQuotaExceeded", value: 26, isUnsigned: true)
!99 = !DIEnumerator(name: "FileTooLarge", value: 27, isUnsigned: true)
!100 = !DIEnumerator(name: "ResourceBusy", value: 28, isUnsigned: true)
!101 = !DIEnumerator(name: "ExecutableFileBusy", value: 29, isUnsigned: true)
!102 = !DIEnumerator(name: "Deadlock", value: 30, isUnsigned: true)
!103 = !DIEnumerator(name: "CrossesDevices", value: 31, isUnsigned: true)
!104 = !DIEnumerator(name: "TooManyLinks", value: 32, isUnsigned: true)
!105 = !DIEnumerator(name: "InvalidFilename", value: 33, isUnsigned: true)
!106 = !DIEnumerator(name: "ArgumentListTooLong", value: 34, isUnsigned: true)
!107 = !DIEnumerator(name: "Interrupted", value: 35, isUnsigned: true)
!108 = !DIEnumerator(name: "Unsupported", value: 36, isUnsigned: true)
!109 = !DIEnumerator(name: "UnexpectedEof", value: 37, isUnsigned: true)
!110 = !DIEnumerator(name: "OutOfMemory", value: 38, isUnsigned: true)
!111 = !DIEnumerator(name: "Other", value: 39, isUnsigned: true)
!112 = !DIEnumerator(name: "Uncategorized", value: 40, isUnsigned: true)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !66, file: !2, baseType: !114, size: 128, align: 64)
!114 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !115, templateParams: !23, identifier: "49e1ff5efd573d092283dcd4348771ac")
!115 = !{!116, !119}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !114, file: !2, baseType: !117, size: 64, align: 64)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64, align: 64, dwarfAddressSpace: 0)
!118 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, align: 8, elements: !23, identifier: "d998709730b54ebefffe35f2808c071f")
!119 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !114, file: !2, baseType: !120, size: 64, align: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !121, size: 64, align: 64, dwarfAddressSpace: 0)
!121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !122)
!122 = !{!123}
!123 = !DISubrange(count: 3, lowerBound: 0)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "Simple", scope: !56, file: !2, baseType: !125, size: 128, align: 64, extraData: i64 1)
!125 = !DICompositeType(tag: DW_TAG_structure_type, name: "Simple", scope: !54, file: !2, size: 128, align: 64, elements: !126, templateParams: !63, identifier: "d6fdaf6afb7f06ba830e20c3b7cdf96a")
!126 = !{!127}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !125, file: !2, baseType: !69, size: 8, align: 8, offset: 8)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "SimpleMessage", scope: !56, file: !2, baseType: !129, size: 128, align: 64, extraData: i64 2)
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleMessage", scope: !54, file: !2, size: 128, align: 64, elements: !130, templateParams: !63, identifier: "6cf4fba8ceca59eba147622df4399a69")
!130 = !{!131}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !129, file: !2, baseType: !132, size: 64, align: 64, offset: 64)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::SimpleMessage", baseType: !133, size: 64, align: 64, dwarfAddressSpace: 0)
!133 = !DICompositeType(tag: DW_TAG_structure_type, name: "SimpleMessage", scope: !33, file: !2, size: 192, align: 64, elements: !134, templateParams: !23, identifier: "7efc891383873a5dce28ace1bc51c9d2")
!134 = !{!135, !136}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !133, file: !2, baseType: !69, size: 8, align: 8, offset: 128)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !133, file: !2, baseType: !137, size: 128, align: 64)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !138, templateParams: !23, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!138 = !{!139, !141}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !137, file: !2, baseType: !140, size: 64, align: 64)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64, align: 64, dwarfAddressSpace: 0)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !137, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "Custom", scope: !56, file: !2, baseType: !143, size: 128, align: 64, extraData: i64 3)
!143 = !DICompositeType(tag: DW_TAG_structure_type, name: "Custom", scope: !54, file: !2, size: 128, align: 64, elements: !144, templateParams: !63, identifier: "591e506d10606579798142c7aef919f4")
!144 = !{!145}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !143, file: !2, baseType: !65, size: 64, align: 64, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !54, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagArtificial)
!147 = !DIGlobalVariableExpression(var: !148, expr: !DIExpression())
!148 = distinct !DIGlobalVariable(name: "<core::num::error::ParseIntError as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !149, isLocal: true, isDefinition: true)
!149 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::num::error::ParseIntError as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !150, vtableHolder: !155, templateParams: !23, identifier: "37800cd81cf0b676b7a65764b98d3d49")
!150 = !{!151, !152, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !149, file: !2, baseType: !6, size: 64, align: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !149, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !149, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !149, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!155 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParseIntError", scope: !156, file: !2, size: 8, align: 8, elements: !158, templateParams: !23, identifier: "836b5e07bd86ff8ece3e72996df642")
!156 = !DINamespace(name: "error", scope: !157)
!157 = !DINamespace(name: "num", scope: !44)
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !155, file: !2, baseType: !160, size: 8, align: 8)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IntErrorKind", scope: !156, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagEnumClass, elements: !161)
!161 = !{!162, !163, !164, !165, !166}
!162 = !DIEnumerator(name: "Empty", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "InvalidDigit", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "PosOverflow", value: 2, isUnsigned: true)
!165 = !DIEnumerator(name: "NegOverflow", value: 3, isUnsigned: true)
!166 = !DIEnumerator(name: "Zero", value: 4, isUnsigned: true)
!167 = !DIGlobalVariableExpression(var: !168, expr: !DIExpression())
!168 = distinct !DIGlobalVariable(name: "<&core::option::Option<&str> as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !169, isLocal: true, isDefinition: true)
!169 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&core::option::Option<&str> as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !170, vtableHolder: !175, templateParams: !23, identifier: "1ecddfe4a9f057c55300e0b48b37484a")
!170 = !{!171, !172, !173, !174}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !169, file: !2, baseType: !6, size: 64, align: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !169, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !169, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !169, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<&str>", baseType: !176, size: 64, align: 64, dwarfAddressSpace: 0)
!176 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !177, file: !2, size: 128, align: 64, elements: !178, templateParams: !23, identifier: "f0dceda904e27e7388d0262de24b6976")
!177 = !DINamespace(name: "option", scope: !44)
!178 = !{!179}
!179 = !DICompositeType(tag: DW_TAG_variant_part, scope: !176, file: !2, size: 128, align: 64, elements: !180, templateParams: !23, identifier: "d9a20f3bc7236076b658193a0ee41dce", discriminator: !189)
!180 = !{!181, !185}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !179, file: !2, baseType: !182, size: 128, align: 64, extraData: i64 0)
!182 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !176, file: !2, size: 128, align: 64, elements: !23, templateParams: !183, identifier: "8b8f8f73f03135e6d73de6ca26c771a5")
!183 = !{!184}
!184 = !DITemplateTypeParameter(name: "T", type: !137)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !179, file: !2, baseType: !186, size: 128, align: 64)
!186 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !176, file: !2, size: 128, align: 64, elements: !187, templateParams: !183, identifier: "5f24cd570c5cc19be11f0051a0b188da")
!187 = !{!188}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !186, file: !2, baseType: !137, size: 128, align: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, scope: !176, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!190 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "<&&str as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !193, isLocal: true, isDefinition: true)
!193 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&&str as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !194, vtableHolder: !199, templateParams: !23, identifier: "2bd7bd44491acfa3a3e4e900b967eebf")
!194 = !{!195, !196, !197, !198}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !193, file: !2, baseType: !6, size: 64, align: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !193, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !193, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !193, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !137, size: 64, align: 64, dwarfAddressSpace: 0)
!200 = !{i32 7, !"PIC Level", i32 2}
!201 = !{i32 7, !"PIE Level", i32 2}
!202 = !{i32 2, !"RtLibUseGOT", i32 1}
!203 = !{i32 2, !"Dwarf Version", i32 4}
!204 = !{i32 2, !"Debug Info Version", i32 3}
!205 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !206, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !207, globals: !304)
!206 = !DIFile(filename: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175/build.rs/@/build_script_build.cfd22473-cgu.0", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175")
!207 = !{!208, !69, !276, !285, !160, !292, !298}
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !209, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagEnumClass, elements: !211)
!209 = !DINamespace(name: "valid_align", scope: !210)
!210 = !DINamespace(name: "mem", scope: !44)
!211 = !{!212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275}
!212 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!216 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!217 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!219 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!220 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!221 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!222 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!223 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!224 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!225 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!226 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!227 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!228 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!229 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!230 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!231 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!232 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!233 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!234 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!235 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!236 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!237 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!238 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!239 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!240 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!241 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!242 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!243 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!244 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!245 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!246 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!247 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!248 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!249 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!250 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!251 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!252 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!253 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!254 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!255 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!256 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!257 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!258 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!259 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!260 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!261 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!262 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!263 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!264 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!265 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!266 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!267 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!268 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!269 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!270 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!271 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!272 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!273 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!274 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!275 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!276 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !277, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagEnumClass, elements: !280)
!277 = !DINamespace(name: "v1", scope: !278)
!278 = !DINamespace(name: "rt", scope: !279)
!279 = !DINamespace(name: "fmt", scope: !44)
!280 = !{!281, !282, !283, !284}
!281 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!282 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!283 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!284 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!285 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !286, file: !2, baseType: !287, size: 8, align: 8, flags: DIFlagEnumClass, elements: !288)
!286 = !DINamespace(name: "cmp", scope: !44)
!287 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!288 = !{!289, !290, !291}
!289 = !DIEnumerator(name: "Less", value: 255)
!290 = !DIEnumerator(name: "Equal", value: 0)
!291 = !DIEnumerator(name: "Greater", value: 1)
!292 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !293, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagEnumClass, elements: !294)
!293 = !DINamespace(name: "panicking", scope: !44)
!294 = !{!295, !296, !297}
!295 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!296 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!297 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!298 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !299, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagEnumClass, elements: !301)
!299 = !DINamespace(name: "raw_vec", scope: !300)
!300 = !DINamespace(name: "alloc", scope: null)
!301 = !{!302, !303}
!302 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!303 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!304 = !{!0, !24, !147, !167, !191}
!305 = distinct !DISubprogram(name: "index", linkageName: "_ZN100_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17h7d8c747932610c4dE", scope: !307, file: !306, line: 2341, type: !309, scopeLine: 2341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !353)
!306 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/string.rs", directory: "", checksumkind: CSK_MD5, checksum: "e1c2cdf24b94f38a53da13b30e8aa8ef")
!307 = !DINamespace(name: "{impl#28}", scope: !308)
!308 = !DINamespace(name: "string", scope: !300)
!309 = !DISubroutineType(types: !310)
!310 = !{!137, !311, !341, !344}
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::String", baseType: !312, size: 64, align: 64, dwarfAddressSpace: 0)
!312 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !308, file: !2, size: 192, align: 64, elements: !313, templateParams: !23, identifier: "f9be69e76fc784402e5b8eb88fb718b5")
!313 = !{!314}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !312, file: !2, baseType: !315, size: 192, align: 64)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !316, file: !2, size: 192, align: 64, elements: !317, templateParams: !338, identifier: "f48a096c1ed19eb7ba15a7173429013")
!316 = !DINamespace(name: "vec", scope: !300)
!317 = !{!318, !340}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !315, file: !2, baseType: !319, size: 128, align: 64)
!319 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !299, file: !2, size: 128, align: 64, elements: !320, templateParams: !338, identifier: "d09dab1a097018b9dd4dad6f3ce84c27")
!320 = !{!321, !334, !335}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !319, file: !2, baseType: !322, size: 64, align: 64)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !323, file: !2, size: 64, align: 64, elements: !324, templateParams: !330, identifier: "7e72c5db004520f6d0779c7d4ace2142")
!323 = !DINamespace(name: "unique", scope: !43)
!324 = !{!325, !332}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !322, file: !2, baseType: !326, size: 64, align: 64)
!326 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !42, file: !2, size: 64, align: 64, elements: !327, templateParams: !330, identifier: "3160283ea80cecf6149fff38a2e996de")
!327 = !{!328}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !326, file: !2, baseType: !329, size: 64, align: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !70, size: 64, align: 64, dwarfAddressSpace: 0)
!330 = !{!331}
!331 = !DITemplateTypeParameter(name: "T", type: !70)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !322, file: !2, baseType: !333, align: 8)
!333 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !330, identifier: "e338a8151f1037c76eadd10ab3c53972")
!334 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !319, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !319, file: !2, baseType: !336, align: 8)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !337, file: !2, align: 8, elements: !23, identifier: "3328ba4994ba07f4a4a3e83fae935932")
!337 = !DINamespace(name: "alloc", scope: !300)
!338 = !{!331, !339}
!339 = !DITemplateTypeParameter(name: "A", type: !336)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !315, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!341 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !342, file: !2, align: 8, elements: !23, identifier: "63a67109926f3a3dc00488fbc228c0f9")
!342 = !DINamespace(name: "range", scope: !343)
!343 = !DINamespace(name: "ops", scope: !44)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !345, size: 64, align: 64, dwarfAddressSpace: 0)
!345 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !346, file: !2, size: 192, align: 64, elements: !348, templateParams: !23, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!346 = !DINamespace(name: "location", scope: !347)
!347 = !DINamespace(name: "panic", scope: !44)
!348 = !{!349, !350, !352}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !345, file: !2, baseType: !137, size: 128, align: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !345, file: !2, baseType: !351, size: 32, align: 32, offset: 128)
!351 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !345, file: !2, baseType: !351, size: 32, align: 32, offset: 160)
!353 = !{!354, !355}
!354 = !DILocalVariable(name: "self", arg: 1, scope: !305, file: !306, line: 2341, type: !311)
!355 = !DILocalVariable(name: "_index", arg: 2, scope: !305, file: !306, line: 2341, type: !341)
!356 = !DILocation(line: 2341, column: 14, scope: !305)
!357 = !DILocation(line: 2341, column: 21, scope: !305)
!358 = !DILocation(line: 2342, column: 43, scope: !305)
!359 = !DILocalVariable(name: "self", scope: !360, file: !306, line: 2342, type: !370, align: 8)
!360 = !DILexicalBlockFile(scope: !361, file: !306, discriminator: 0)
!361 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2b77cc1908e440a5E", scope: !363, file: !362, line: 2531, type: !364, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !371)
!362 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!363 = !DINamespace(name: "{impl#10}", scope: !316)
!364 = !DISubroutineType(types: !365)
!365 = !{!366, !370}
!366 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !367, templateParams: !23, identifier: "7d49e60d2ca720f66806f7375f860e2")
!367 = !{!368, !369}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !366, file: !2, baseType: !140, size: 64, align: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !366, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !315, size: 64, align: 64, dwarfAddressSpace: 0)
!371 = !{!359}
!372 = !DILocation(line: 2342, column: 43, scope: !360, inlinedAt: !358)
!373 = !DILocalVariable(name: "data", scope: !374, file: !306, line: 2342, type: !329, align: 8)
!374 = !DILexicalBlockFile(scope: !375, file: !306, discriminator: 0)
!375 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hc9808a0b8f9d77eeE", scope: !377, file: !376, line: 90, type: !379, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !381)
!376 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "bc05ab33aeb77226885613c6dc511a0a")
!377 = !DINamespace(name: "raw", scope: !378)
!378 = !DINamespace(name: "slice", scope: !44)
!379 = !DISubroutineType(types: !380)
!380 = !{!366, !329, !9}
!381 = !{!373, !382, !383}
!382 = !DILocalVariable(name: "len", scope: !374, file: !306, line: 2342, type: !9, align: 8)
!383 = !DILocalVariable(name: "runtime", scope: !384, file: !306, line: 2342, type: !387, align: 8)
!384 = !DILexicalBlockFile(scope: !385, file: !306, discriminator: 0)
!385 = distinct !DILexicalBlock(scope: !375, file: !386, line: 2336, column: 13)
!386 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !388, file: !2, size: 128, align: 64, elements: !389, templateParams: !23, identifier: "ca6adac9bf5585e57d20f143c4c8a4b5")
!388 = !DINamespace(name: "from_raw_parts", scope: !377)
!389 = !{!390, !392}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !387, file: !2, baseType: !391, size: 64, align: 64)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !329, size: 64, align: 64, dwarfAddressSpace: 0)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !387, file: !2, baseType: !393, size: 64, align: 64, offset: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!394 = !DILocation(line: 2342, column: 43, scope: !374, inlinedAt: !395)
!395 = !DILocation(line: 2532, column: 18, scope: !361, inlinedAt: !358)
!396 = !DILocalVariable(name: "data", scope: !397, file: !306, line: 2342, type: !329, align: 8)
!397 = !DILexicalBlockFile(scope: !398, file: !306, discriminator: 0)
!398 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6a66992555506ab5E", scope: !43, file: !399, line: 695, type: !400, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !406)
!399 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!400 = !DISubroutineType(types: !401)
!401 = !{!402, !329, !9}
!402 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !403, templateParams: !23, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!403 = !{!404, !405}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !402, file: !2, baseType: !140, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !402, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!406 = !{!396, !407}
!407 = !DILocalVariable(name: "len", scope: !397, file: !306, line: 2342, type: !9, align: 8)
!408 = !DILocation(line: 2342, column: 43, scope: !397, inlinedAt: !409)
!409 = !DILocation(line: 97, column: 11, scope: !375, inlinedAt: !395)
!410 = !DILocalVariable(name: "self", scope: !411, file: !306, line: 2342, type: !329, align: 8)
!411 = !DILexicalBlockFile(scope: !412, file: !306, discriminator: 0)
!412 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb951d44ade26c9c5E", scope: !414, file: !413, line: 46, type: !416, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !418)
!413 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!414 = !DINamespace(name: "{impl#0}", scope: !415)
!415 = !DINamespace(name: "const_ptr", scope: !43)
!416 = !DISubroutineType(types: !417)
!417 = !{!6, !329}
!418 = !{!410}
!419 = !{!331, !420}
!420 = !DITemplateTypeParameter(name: "U", type: !7)
!421 = !DILocation(line: 2342, column: 43, scope: !411, inlinedAt: !422)
!422 = !DILocation(line: 696, column: 20, scope: !398, inlinedAt: !409)
!423 = !DILocalVariable(name: "data_address", scope: !424, file: !306, line: 2342, type: !6, align: 8)
!424 = !DILexicalBlockFile(scope: !425, file: !306, discriminator: 0)
!425 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h9dc36a19d85d94baE", scope: !427, file: !426, line: 110, type: !428, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !430)
!426 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!427 = !DINamespace(name: "metadata", scope: !43)
!428 = !DISubroutineType(types: !429)
!429 = !{!402, !6, !9}
!430 = !{!423, !431}
!431 = !DILocalVariable(name: "metadata", scope: !424, file: !306, line: 2342, type: !9, align: 8)
!432 = !DILocation(line: 2342, column: 43, scope: !424, inlinedAt: !433)
!433 = !DILocation(line: 696, column: 5, scope: !398, inlinedAt: !409)
!434 = !DILocalVariable(name: "v", scope: !435, file: !306, line: 2342, type: !366, align: 8)
!435 = !DILexicalBlockFile(scope: !436, file: !306, discriminator: 0)
!436 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17h8c139c294e9791faE", scope: !438, file: !437, line: 170, type: !440, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !442)
!437 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "459d256946ab11c35b95264d728167a0")
!438 = !DINamespace(name: "converts", scope: !439)
!439 = !DINamespace(name: "str", scope: !44)
!440 = !DISubroutineType(types: !441)
!441 = !{!137, !366}
!442 = !{!434}
!443 = !DILocation(line: 2342, column: 18, scope: !435, inlinedAt: !444)
!444 = !DILocation(line: 2342, column: 18, scope: !305)
!445 = !{i64 1}
!446 = !DILocation(line: 2343, column: 6, scope: !305)
!447 = distinct !DISubprogram(name: "try_fold<usize, core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, usize, fn(usize, usize) -> core::option::Option<usize>, core::option::Option<usize>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h8de37ed017eb7085E", scope: !449, file: !448, line: 111, type: !453, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !500, retainedNodes: !496)
!448 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/adapters/map.rs", directory: "", checksumkind: CSK_MD5, checksum: "26d2695af1ed5a432620c89623758817")
!449 = !DINamespace(name: "{impl#2}", scope: !450)
!450 = !DINamespace(name: "map", scope: !451)
!451 = !DINamespace(name: "adapters", scope: !452)
!452 = !DINamespace(name: "iter", scope: !44)
!453 = !DISubroutineType(types: !454)
!454 = !{!455, !468, !9, !493}
!455 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !177, file: !2, size: 128, align: 64, elements: !456, templateParams: !23, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!456 = !{!457}
!457 = !DICompositeType(tag: DW_TAG_variant_part, scope: !455, file: !2, size: 128, align: 64, elements: !458, templateParams: !23, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !467)
!458 = !{!459, !463}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !457, file: !2, baseType: !460, size: 128, align: 64, extraData: i64 0)
!460 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !455, file: !2, size: 128, align: 64, elements: !23, templateParams: !461, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!461 = !{!462}
!462 = !DITemplateTypeParameter(name: "T", type: !9)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !457, file: !2, baseType: !464, size: 128, align: 64, extraData: i64 1)
!464 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !455, file: !2, size: 128, align: 64, elements: !465, templateParams: !461, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!465 = !{!466}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !464, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>>", baseType: !469, size: 64, align: 64, dwarfAddressSpace: 0)
!469 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>>", scope: !450, file: !2, size: 128, align: 64, elements: !470, templateParams: !490, identifier: "dc218ae44f975516a4ac3929e61b69f8")
!470 = !{!471, !485}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !469, file: !2, baseType: !472, size: 128, align: 64)
!472 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<&str>", scope: !473, file: !2, size: 128, align: 64, elements: !474, templateParams: !183, identifier: "d709ed799b8392719bcce153b50f3828")
!473 = !DINamespace(name: "iter", scope: !378)
!474 = !{!475, !480, !481}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !472, file: !2, baseType: !476, size: 64, align: 64)
!476 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<&str>", scope: !42, file: !2, size: 64, align: 64, elements: !477, templateParams: !183, identifier: "b12ecf0d11e002358328430721716001")
!477 = !{!478}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !476, file: !2, baseType: !479, size: 64, align: 64)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &str", baseType: !137, size: 64, align: 64, dwarfAddressSpace: 0)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !472, file: !2, baseType: !479, size: 64, align: 64, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !472, file: !2, baseType: !482, align: 8)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&&str>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !483, identifier: "66ab2fe081febe38e272fa037dd7b798")
!483 = !{!484}
!484 = !DITemplateTypeParameter(name: "T", type: !199)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !469, file: !2, baseType: !486, align: 8)
!486 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<str, u8, &str>", scope: !487, file: !2, align: 8, elements: !23, identifier: "dbecbcd6ae9092a1101296a0dd8181de")
!487 = !DINamespace(name: "{closure#0}", scope: !488)
!488 = !DINamespace(name: "join_generic_copy", scope: !489)
!489 = !DINamespace(name: "str", scope: !300)
!490 = !{!491, !492}
!491 = !DITemplateTypeParameter(name: "I", type: !472)
!492 = !DITemplateTypeParameter(name: "F", type: !486)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(usize, usize) -> core::option::Option<usize>", baseType: !494, size: 64, align: 64, dwarfAddressSpace: 0)
!494 = !DISubroutineType(types: !495)
!495 = !{!455, !9, !9}
!496 = !{!497, !498, !499}
!497 = !DILocalVariable(name: "self", arg: 1, scope: !447, file: !448, line: 111, type: !468)
!498 = !DILocalVariable(name: "init", arg: 2, scope: !447, file: !448, line: 111, type: !9)
!499 = !DILocalVariable(name: "g", arg: 3, scope: !447, file: !448, line: 111, type: !493)
!500 = !{!501, !491, !492, !502, !503, !504}
!501 = !DITemplateTypeParameter(name: "B", type: !9)
!502 = !DITemplateTypeParameter(name: "Acc", type: !9)
!503 = !DITemplateTypeParameter(name: "G", type: !493)
!504 = !DITemplateTypeParameter(name: "R", type: !455)
!505 = !DILocation(line: 111, column: 28, scope: !447)
!506 = !DILocation(line: 111, column: 39, scope: !447)
!507 = !DILocation(line: 111, column: 50, scope: !447)
!508 = !DILocation(line: 117, column: 28, scope: !447)
!509 = !DILocation(line: 117, column: 47, scope: !447)
!510 = !DILocation(line: 117, column: 34, scope: !447)
!511 = !DILocation(line: 117, column: 62, scope: !447)
!512 = !{i8 0, i8 2}
!513 = !DILocation(line: 117, column: 9, scope: !447)
!514 = !DILocation(line: 118, column: 6, scope: !447)
!515 = !DILocation(line: 111, column: 5, scope: !447)
!516 = distinct !DISubprogram(name: "next_back", linkageName: "_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h9d06d895a780a20dE", scope: !518, file: !517, line: 171, type: !520, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !557)
!517 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "94cf8b13d76879430c291e9ed66f42eb")
!518 = !DINamespace(name: "{impl#6}", scope: !519)
!519 = !DINamespace(name: "iter", scope: !439)
!520 = !DISubroutineType(types: !521)
!521 = !{!522, !540}
!522 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, char)>", scope: !177, file: !2, size: 128, align: 64, elements: !523, templateParams: !23, identifier: "28521b5aedd26fdf1e261cada33bc9ce")
!523 = !{!524}
!524 = !DICompositeType(tag: DW_TAG_variant_part, scope: !522, file: !2, size: 128, align: 64, elements: !525, templateParams: !23, identifier: "6a1e62ea70f4d529357407ee7335d2b", discriminator: !539)
!525 = !{!526, !535}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !524, file: !2, baseType: !527, size: 128, align: 64, extraData: i64 1114112)
!527 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !522, file: !2, size: 128, align: 64, elements: !23, templateParams: !528, identifier: "e1903e1b3a7e8f4f17c5e2e6c7f94d8b")
!528 = !{!529}
!529 = !DITemplateTypeParameter(name: "T", type: !530)
!530 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, char)", file: !2, size: 128, align: 64, elements: !531, templateParams: !23, identifier: "89785b0a14c18bab4f06ff5760e2591e")
!531 = !{!532, !533}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !530, file: !2, baseType: !9, size: 64, align: 64)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !530, file: !2, baseType: !534, size: 32, align: 32, offset: 64)
!534 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !524, file: !2, baseType: !536, size: 128, align: 64)
!536 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !522, file: !2, size: 128, align: 64, elements: !537, templateParams: !528, identifier: "925825e8f4185badbee317033905d3e7")
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !536, file: !2, baseType: !530, size: 128, align: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, scope: !522, file: !2, baseType: !351, size: 32, align: 32, offset: 64, flags: DIFlagArtificial)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::CharIndices", baseType: !541, size: 64, align: 64, dwarfAddressSpace: 0)
!541 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharIndices", scope: !519, file: !2, size: 192, align: 64, elements: !542, templateParams: !23, identifier: "fb5e761b005aede9c9ee741f3f1dcb8c")
!542 = !{!543, !544}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "front_offset", scope: !541, file: !2, baseType: !9, size: 64, align: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !541, file: !2, baseType: !545, size: 128, align: 64, offset: 64)
!545 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !519, file: !2, size: 128, align: 64, elements: !546, templateParams: !23, identifier: "bf4266910c22c2e7c5f8afbf04b94119")
!546 = !{!547}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !545, file: !2, baseType: !548, size: 128, align: 64)
!548 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !473, file: !2, size: 128, align: 64, elements: !549, templateParams: !330, identifier: "604c1441eac6ad793aa852936f7a8030")
!549 = !{!550, !551, !552}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !548, file: !2, baseType: !326, size: 64, align: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !548, file: !2, baseType: !329, size: 64, align: 64, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !548, file: !2, baseType: !553, align: 8)
!553 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !554, identifier: "4e2102ee614de7ec94ba265c486b9c89")
!554 = !{!555}
!555 = !DITemplateTypeParameter(name: "T", type: !556)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !70, size: 64, align: 64, dwarfAddressSpace: 0)
!557 = !{!558}
!558 = !DILocalVariable(name: "self", arg: 1, scope: !516, file: !517, line: 171, type: !540)
!559 = !DILocation(line: 171, column: 18, scope: !516)
!560 = !DILocation(line: 172, column: 9, scope: !516)
!561 = !DILocalVariable(name: "self", scope: !562, file: !517, line: 172, type: !579, align: 8)
!562 = distinct !DISubprogram(name: "next_back", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hff3673407eb5be53E", scope: !563, file: !517, line: 81, type: !564, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !580)
!563 = !DINamespace(name: "{impl#2}", scope: !519)
!564 = !DISubroutineType(types: !565)
!565 = !{!566, !579}
!566 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !177, file: !2, size: 32, align: 32, elements: !567, templateParams: !23, identifier: "182842703d13227530d78ce56a0c403e")
!567 = !{!568}
!568 = !DICompositeType(tag: DW_TAG_variant_part, scope: !566, file: !2, size: 32, align: 32, elements: !569, templateParams: !23, identifier: "a003d793d4429b686ac87860dc5c04de", discriminator: !578)
!569 = !{!570, !574}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !568, file: !2, baseType: !571, size: 32, align: 32, extraData: i64 1114112)
!571 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !566, file: !2, size: 32, align: 32, elements: !23, templateParams: !572, identifier: "3f6dc1f1907f9d5961a7508f51084ff9")
!572 = !{!573}
!573 = !DITemplateTypeParameter(name: "T", type: !534)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !568, file: !2, baseType: !575, size: 32, align: 32)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !566, file: !2, size: 32, align: 32, elements: !576, templateParams: !572, identifier: "8e96e38967905576ed8699e66885c8c4")
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !575, file: !2, baseType: !534, size: 32, align: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !2, baseType: !351, size: 32, align: 32, flags: DIFlagArtificial)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Chars", baseType: !545, size: 64, align: 64, dwarfAddressSpace: 0)
!580 = !{!561}
!581 = !DILocation(line: 172, column: 9, scope: !562, inlinedAt: !560)
!582 = !{i32 0, i32 1114113}
!583 = !DILocation(line: 172, column: 35, scope: !516)
!584 = !{i64 8}
!585 = !DILocation(line: 176, column: 6, scope: !516)
!586 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h2f165d3b881e7820E", scope: !587, file: !517, line: 172, type: !588, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !595)
!587 = !DINamespace(name: "next_back", scope: !518)
!588 = !DISubroutineType(types: !589)
!589 = !{!530, !590, !534}
!590 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !587, file: !2, size: 128, align: 64, elements: !591, templateParams: !23, identifier: "2c0c795873ac18a3a7e2b5bf3556e917")
!591 = !{!592, !593}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__front_offset", scope: !590, file: !2, baseType: !393, size: 64, align: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__iter__iter", scope: !590, file: !2, baseType: !594, size: 64, align: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u8>", baseType: !548, size: 64, align: 64, dwarfAddressSpace: 0)
!595 = !{!596, !597, !598, !599}
!596 = !DILocalVariable(name: "ch", arg: 2, scope: !586, file: !517, line: 172, type: !534)
!597 = !DILocalVariable(name: "self__front_offset", scope: !586, file: !517, line: 171, type: !9, align: 8)
!598 = !DILocalVariable(name: "self__iter__iter", scope: !586, file: !517, line: 171, type: !548, align: 8)
!599 = !DILocalVariable(name: "index", scope: !600, file: !517, line: 173, type: !9, align: 8)
!600 = distinct !DILexicalBlock(scope: !586, file: !517, line: 173, column: 13)
!601 = !DILocation(line: 171, column: 18, scope: !586)
!602 = !DILocation(line: 172, column: 36, scope: !586)
!603 = !DILocation(line: 173, column: 25, scope: !586)
!604 = !DILocation(line: 173, column: 45, scope: !586)
!605 = !DILocalVariable(name: "self", scope: !606, file: !517, line: 173, type: !594, align: 8)
!606 = !DILexicalBlockFile(scope: !607, file: !517, discriminator: 0)
!607 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb43e37bf6ff01ebbE", scope: !609, file: !608, line: 119, type: !610, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !612)
!608 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "41903112aef4079fb81d70967f52d92d")
!609 = !DINamespace(name: "{impl#180}", scope: !473)
!610 = !DISubroutineType(types: !611)
!611 = !{!9, !594}
!612 = !{!605, !613, !616, !619}
!613 = !DILocalVariable(name: "start", scope: !614, file: !517, line: 173, type: !326, align: 8)
!614 = !DILexicalBlockFile(scope: !615, file: !517, discriminator: 0)
!615 = distinct !DILexicalBlock(scope: !607, file: !608, line: 18, column: 9)
!616 = !DILocalVariable(name: "size", scope: !617, file: !517, line: 173, type: !9, align: 8)
!617 = !DILexicalBlockFile(scope: !618, file: !517, discriminator: 0)
!618 = distinct !DILexicalBlock(scope: !615, file: !608, line: 19, column: 9)
!619 = !DILocalVariable(name: "diff", scope: !620, file: !517, line: 173, type: !9, align: 8)
!620 = !DILexicalBlockFile(scope: !621, file: !517, discriminator: 0)
!621 = distinct !DILexicalBlock(scope: !618, file: !608, line: 29, column: 13)
!622 = !DILocation(line: 173, column: 45, scope: !606, inlinedAt: !604)
!623 = !DILocation(line: 173, column: 45, scope: !614, inlinedAt: !604)
!624 = !DILocation(line: 173, column: 45, scope: !625, inlinedAt: !630)
!625 = !DILexicalBlockFile(scope: !626, file: !517, discriminator: 0)
!626 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!627 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!628 = !DISubroutineType(types: !629)
!629 = !{!9}
!630 = !DILocation(line: 41, column: 5, scope: !631, inlinedAt: !635)
!631 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!632 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "36678af40fdc22d7150f6f91e11271b3")
!633 = !DISubroutineType(types: !634)
!634 = !{!9, !329}
!635 = !DILocation(line: 19, column: 20, scope: !615, inlinedAt: !604)
!636 = !DILocation(line: 173, column: 45, scope: !617, inlinedAt: !604)
!637 = !DILocalVariable(name: "self", scope: !638, file: !517, line: 173, type: !329, align: 8)
!638 = !DILexicalBlockFile(scope: !639, file: !517, discriminator: 0)
!639 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !640)
!640 = !{!637}
!641 = !DILocation(line: 173, column: 45, scope: !638, inlinedAt: !642)
!642 = !DILocation(line: 29, column: 47, scope: !618, inlinedAt: !604)
!643 = !DILocalVariable(name: "self", scope: !644, file: !517, line: 173, type: !326, align: 8)
!644 = !DILexicalBlockFile(scope: !645, file: !517, discriminator: 0)
!645 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !650)
!646 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!647 = !DISubroutineType(types: !648)
!648 = !{!649, !326}
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !70, size: 64, align: 64, dwarfAddressSpace: 0)
!650 = !{!643}
!651 = !DILocation(line: 173, column: 45, scope: !644, inlinedAt: !652)
!652 = !DILocation(line: 29, column: 65, scope: !618, inlinedAt: !604)
!653 = !DILocalVariable(name: "self", scope: !654, file: !517, line: 173, type: !649, align: 8)
!654 = !DILexicalBlockFile(scope: !655, file: !517, discriminator: 0)
!655 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !661)
!656 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!657 = !DINamespace(name: "{impl#0}", scope: !658)
!658 = !DINamespace(name: "mut_ptr", scope: !43)
!659 = !DISubroutineType(types: !660)
!660 = !{!9, !649}
!661 = !{!653}
!662 = !DILocation(line: 173, column: 45, scope: !654, inlinedAt: !652)
!663 = !DILocation(line: 173, column: 45, scope: !620, inlinedAt: !604)
!664 = !DILocation(line: 173, column: 17, scope: !600)
!665 = !DILocation(line: 174, column: 13, scope: !600)
!666 = !DILocation(line: 172, column: 39, scope: !586)
!667 = !{i32 0, i32 1114112}
!668 = distinct !DISubprogram(name: "next_back<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17haf0fbae422bf6c47E", scope: !670, file: !669, line: 677, type: !672, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !700, retainedNodes: !702)
!669 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/pattern.rs", directory: "", checksumkind: CSK_MD5, checksum: "4413c12c327e63807a1a57fa4d03df68")
!670 = !DINamespace(name: "{impl#10}", scope: !671)
!671 = !DINamespace(name: "pattern", scope: !439)
!672 = !DISubroutineType(types: !673)
!673 = !{!674, !691}
!674 = !DICompositeType(tag: DW_TAG_structure_type, name: "SearchStep", scope: !671, file: !2, size: 192, align: 64, elements: !675, templateParams: !23, identifier: "d9fee1572ca7c936e6009a15a28d330e")
!675 = !{!676}
!676 = !DICompositeType(tag: DW_TAG_variant_part, scope: !674, file: !2, size: 192, align: 64, elements: !677, templateParams: !23, identifier: "3a9f12419d689b49d54f2dcbe93f0b73", discriminator: !690)
!677 = !{!678, !683, !688}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "Match", scope: !676, file: !2, baseType: !679, size: 192, align: 64, extraData: i64 0)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "Match", scope: !674, file: !2, size: 192, align: 64, elements: !680, templateParams: !23, identifier: "31212d05181959c84b28f896d93e293d")
!680 = !{!681, !682}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !679, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !679, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "Reject", scope: !676, file: !2, baseType: !684, size: 192, align: 64, extraData: i64 1)
!684 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reject", scope: !674, file: !2, size: 192, align: 64, elements: !685, templateParams: !23, identifier: "d9794c47eeca6169d7dd2f18ab47bce6")
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !684, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !684, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "Done", scope: !676, file: !2, baseType: !689, size: 192, align: 64, extraData: i64 2)
!689 = !DICompositeType(tag: DW_TAG_structure_type, name: "Done", scope: !674, file: !2, size: 192, align: 64, elements: !23, identifier: "e9478815bdfcd63a57de269e3216947")
!690 = !DIDerivedType(tag: DW_TAG_member, scope: !674, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::MultiCharEqSearcher<core::str::{impl#0}::trim::{closure_env#0}>", baseType: !692, size: 64, align: 64, dwarfAddressSpace: 0)
!692 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqSearcher<core::str::{impl#0}::trim::{closure_env#0}>", scope: !671, file: !2, size: 320, align: 64, elements: !693, templateParams: !700, identifier: "3f44e1104da64d1dd574a65577ba25de")
!693 = !{!694, !698, !699}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "char_eq", scope: !692, file: !2, baseType: !695, align: 8)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !696, file: !2, align: 8, elements: !23, identifier: "a79bbd5f8ac5e55c4532f7beeb7adf47")
!696 = !DINamespace(name: "trim", scope: !697)
!697 = !DINamespace(name: "{impl#0}", scope: !439)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !692, file: !2, baseType: !137, size: 128, align: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "char_indices", scope: !692, file: !2, baseType: !541, size: 192, align: 64, offset: 128)
!700 = !{!701}
!701 = !DITemplateTypeParameter(name: "C", type: !695)
!702 = !{!703, !704, !706, !708, !710, !711, !713}
!703 = !DILocalVariable(name: "self", arg: 1, scope: !668, file: !669, line: 677, type: !691)
!704 = !DILocalVariable(name: "s", scope: !705, file: !669, line: 678, type: !540, align: 8)
!705 = distinct !DILexicalBlock(scope: !668, file: !669, line: 678, column: 9)
!706 = !DILocalVariable(name: "pre_len", scope: !707, file: !669, line: 681, type: !9, align: 8)
!707 = distinct !DILexicalBlock(scope: !705, file: !669, line: 681, column: 9)
!708 = !DILocalVariable(name: "i", scope: !709, file: !669, line: 682, type: !9, align: 8)
!709 = distinct !DILexicalBlock(scope: !707, file: !669, line: 682, column: 45)
!710 = !DILocalVariable(name: "c", scope: !709, file: !669, line: 682, type: !534, align: 4)
!711 = !DILocalVariable(name: "len", scope: !712, file: !669, line: 683, type: !9, align: 8)
!712 = distinct !DILexicalBlock(scope: !709, file: !669, line: 683, column: 13)
!713 = !DILocalVariable(name: "char_len", scope: !714, file: !669, line: 684, type: !9, align: 8)
!714 = distinct !DILexicalBlock(scope: !712, file: !669, line: 684, column: 13)
!715 = !DILocation(line: 677, column: 18, scope: !668)
!716 = !DILocation(line: 678, column: 17, scope: !668)
!717 = !DILocation(line: 678, column: 13, scope: !705)
!718 = !DILocation(line: 681, column: 23, scope: !705)
!719 = !DILocalVariable(name: "self", scope: !720, file: !669, line: 681, type: !594, align: 8)
!720 = !DILexicalBlockFile(scope: !721, file: !669, discriminator: 0)
!721 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb43e37bf6ff01ebbE", scope: !609, file: !608, line: 119, type: !610, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !722)
!722 = !{!719, !723, !726, !729}
!723 = !DILocalVariable(name: "start", scope: !724, file: !669, line: 681, type: !326, align: 8)
!724 = !DILexicalBlockFile(scope: !725, file: !669, discriminator: 0)
!725 = distinct !DILexicalBlock(scope: !721, file: !608, line: 18, column: 9)
!726 = !DILocalVariable(name: "size", scope: !727, file: !669, line: 681, type: !9, align: 8)
!727 = !DILexicalBlockFile(scope: !728, file: !669, discriminator: 0)
!728 = distinct !DILexicalBlock(scope: !725, file: !608, line: 19, column: 9)
!729 = !DILocalVariable(name: "diff", scope: !730, file: !669, line: 681, type: !9, align: 8)
!730 = !DILexicalBlockFile(scope: !731, file: !669, discriminator: 0)
!731 = distinct !DILexicalBlock(scope: !728, file: !608, line: 29, column: 13)
!732 = !DILocation(line: 681, column: 23, scope: !720, inlinedAt: !718)
!733 = !DILocation(line: 681, column: 23, scope: !724, inlinedAt: !718)
!734 = !DILocation(line: 681, column: 23, scope: !735, inlinedAt: !737)
!735 = !DILexicalBlockFile(scope: !736, file: !669, discriminator: 0)
!736 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!737 = !DILocation(line: 41, column: 5, scope: !738, inlinedAt: !739)
!738 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!739 = !DILocation(line: 19, column: 20, scope: !725, inlinedAt: !718)
!740 = !DILocation(line: 681, column: 23, scope: !727, inlinedAt: !718)
!741 = !DILocalVariable(name: "self", scope: !742, file: !669, line: 681, type: !329, align: 8)
!742 = !DILexicalBlockFile(scope: !743, file: !669, discriminator: 0)
!743 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !744)
!744 = !{!741}
!745 = !DILocation(line: 681, column: 23, scope: !742, inlinedAt: !746)
!746 = !DILocation(line: 29, column: 47, scope: !728, inlinedAt: !718)
!747 = !DILocalVariable(name: "self", scope: !748, file: !669, line: 681, type: !326, align: 8)
!748 = !DILexicalBlockFile(scope: !749, file: !669, discriminator: 0)
!749 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !750)
!750 = !{!747}
!751 = !DILocation(line: 681, column: 23, scope: !748, inlinedAt: !752)
!752 = !DILocation(line: 29, column: 65, scope: !728, inlinedAt: !718)
!753 = !DILocalVariable(name: "self", scope: !754, file: !669, line: 681, type: !649, align: 8)
!754 = !DILexicalBlockFile(scope: !755, file: !669, discriminator: 0)
!755 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !756)
!756 = !{!753}
!757 = !DILocation(line: 681, column: 23, scope: !754, inlinedAt: !752)
!758 = !DILocation(line: 681, column: 23, scope: !730, inlinedAt: !718)
!759 = !DILocation(line: 681, column: 13, scope: !707)
!760 = !DILocation(line: 682, column: 31, scope: !709)
!761 = !DILocation(line: 682, column: 16, scope: !709)
!762 = !DILocation(line: 682, column: 22, scope: !709)
!763 = !DILocation(line: 682, column: 25, scope: !709)
!764 = !DILocation(line: 683, column: 23, scope: !709)
!765 = !DILocalVariable(name: "self", scope: !766, file: !669, line: 683, type: !594, align: 8)
!766 = !DILexicalBlockFile(scope: !767, file: !669, discriminator: 0)
!767 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb43e37bf6ff01ebbE", scope: !609, file: !608, line: 119, type: !610, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !768)
!768 = !{!765, !769, !772, !775}
!769 = !DILocalVariable(name: "start", scope: !770, file: !669, line: 683, type: !326, align: 8)
!770 = !DILexicalBlockFile(scope: !771, file: !669, discriminator: 0)
!771 = distinct !DILexicalBlock(scope: !767, file: !608, line: 18, column: 9)
!772 = !DILocalVariable(name: "size", scope: !773, file: !669, line: 683, type: !9, align: 8)
!773 = !DILexicalBlockFile(scope: !774, file: !669, discriminator: 0)
!774 = distinct !DILexicalBlock(scope: !771, file: !608, line: 19, column: 9)
!775 = !DILocalVariable(name: "diff", scope: !776, file: !669, line: 683, type: !9, align: 8)
!776 = !DILexicalBlockFile(scope: !777, file: !669, discriminator: 0)
!777 = distinct !DILexicalBlock(scope: !774, file: !608, line: 29, column: 13)
!778 = !DILocation(line: 683, column: 23, scope: !766, inlinedAt: !764)
!779 = !DILocation(line: 683, column: 23, scope: !770, inlinedAt: !764)
!780 = !DILocation(line: 683, column: 23, scope: !781, inlinedAt: !783)
!781 = !DILexicalBlockFile(scope: !782, file: !669, discriminator: 0)
!782 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!783 = !DILocation(line: 41, column: 5, scope: !784, inlinedAt: !785)
!784 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!785 = !DILocation(line: 19, column: 20, scope: !771, inlinedAt: !764)
!786 = !DILocation(line: 683, column: 23, scope: !773, inlinedAt: !764)
!787 = !DILocalVariable(name: "self", scope: !788, file: !669, line: 683, type: !329, align: 8)
!788 = !DILexicalBlockFile(scope: !789, file: !669, discriminator: 0)
!789 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !790)
!790 = !{!787}
!791 = !DILocation(line: 683, column: 23, scope: !788, inlinedAt: !792)
!792 = !DILocation(line: 29, column: 47, scope: !774, inlinedAt: !764)
!793 = !DILocation(line: 691, column: 9, scope: !707)
!794 = !DILocation(line: 692, column: 6, scope: !668)
!795 = !DILocalVariable(name: "self", scope: !796, file: !669, line: 683, type: !326, align: 8)
!796 = !DILexicalBlockFile(scope: !797, file: !669, discriminator: 0)
!797 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !798)
!798 = !{!795}
!799 = !DILocation(line: 683, column: 23, scope: !796, inlinedAt: !800)
!800 = !DILocation(line: 29, column: 65, scope: !774, inlinedAt: !764)
!801 = !DILocalVariable(name: "self", scope: !802, file: !669, line: 683, type: !649, align: 8)
!802 = !DILexicalBlockFile(scope: !803, file: !669, discriminator: 0)
!803 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !804)
!804 = !{!801}
!805 = !DILocation(line: 683, column: 23, scope: !802, inlinedAt: !800)
!806 = !DILocation(line: 683, column: 23, scope: !776, inlinedAt: !764)
!807 = !DILocation(line: 683, column: 17, scope: !712)
!808 = !DILocation(line: 684, column: 28, scope: !712)
!809 = !DILocation(line: 684, column: 17, scope: !714)
!810 = !DILocation(line: 685, column: 16, scope: !714)
!811 = !DILocation(line: 688, column: 46, scope: !714)
!812 = !DILocation(line: 688, column: 24, scope: !714)
!813 = !DILocation(line: 688, column: 17, scope: !714)
!814 = !DILocation(line: 686, column: 45, scope: !714)
!815 = !DILocation(line: 686, column: 24, scope: !714)
!816 = !DILocation(line: 686, column: 17, scope: !714)
!817 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hadb60770f7cc267eE", scope: !819, file: !818, line: 278, type: !821, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !829)
!818 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!819 = !DINamespace(name: "{impl#3}", scope: !820)
!820 = !DINamespace(name: "index", scope: !378)
!821 = !DISubroutineType(types: !822)
!822 = !{!402, !823, !402}
!823 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !342, file: !2, size: 128, align: 64, elements: !824, templateParams: !827, identifier: "855eb37746b15049ea4556b174e97dd7")
!824 = !{!825, !826}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !823, file: !2, baseType: !9, size: 64, align: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !823, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!827 = !{!828}
!828 = !DITemplateTypeParameter(name: "Idx", type: !9)
!829 = !{!830, !831, !832}
!830 = !DILocalVariable(name: "self", arg: 1, scope: !817, file: !818, line: 278, type: !823)
!831 = !DILocalVariable(name: "slice", arg: 2, scope: !817, file: !818, line: 278, type: !402)
!832 = !DILocalVariable(name: "runtime", scope: !833, file: !818, line: 285, type: !835, align: 8)
!833 = !DILexicalBlockFile(scope: !834, file: !818, discriminator: 0)
!834 = distinct !DILexicalBlock(scope: !817, file: !386, line: 2336, column: 13)
!835 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !836, file: !2, size: 192, align: 64, elements: !837, templateParams: !23, identifier: "3899877b232b8d576af2a125fa395e55")
!836 = !DINamespace(name: "get_unchecked", scope: !819)
!837 = !{!838, !839, !840}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !835, file: !2, baseType: !393, size: 64, align: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !835, file: !2, baseType: !393, size: 64, align: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !835, file: !2, baseType: !841, size: 64, align: 64, offset: 128)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const [u8]", baseType: !402, size: 64, align: 64, dwarfAddressSpace: 0)
!842 = !DILocation(line: 278, column: 29, scope: !817)
!843 = !DILocation(line: 278, column: 35, scope: !817)
!844 = !DILocation(line: 285, column: 13, scope: !833)
!845 = !DILocation(line: 286, column: 39, scope: !817)
!846 = !DILocalVariable(name: "self", scope: !847, file: !818, line: 286, type: !402, align: 8)
!847 = !DILexicalBlockFile(scope: !848, file: !818, discriminator: 0)
!848 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h53ba0de6333377efE", scope: !849, file: !413, line: 1385, type: !850, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !852)
!849 = !DINamespace(name: "{impl#1}", scope: !415)
!850 = !DISubroutineType(types: !851)
!851 = !{!329, !402}
!852 = !{!846}
!853 = !DILocation(line: 286, column: 39, scope: !847, inlinedAt: !845)
!854 = !DILocalVariable(name: "self", scope: !855, file: !818, line: 286, type: !329, align: 8)
!855 = !DILexicalBlockFile(scope: !856, file: !818, discriminator: 0)
!856 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd93d5f335c24c154E", scope: !414, file: !413, line: 871, type: !857, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !859)
!857 = !DISubroutineType(types: !858)
!858 = !{!329, !329, !9}
!859 = !{!854, !860}
!860 = !DILocalVariable(name: "count", scope: !855, file: !818, line: 286, type: !9, align: 8)
!861 = !DILocation(line: 286, column: 39, scope: !855, inlinedAt: !845)
!862 = !DILocation(line: 286, column: 58, scope: !817)
!863 = !DILocalVariable(name: "self", scope: !864, file: !818, line: 286, type: !329, align: 8)
!864 = !DILexicalBlockFile(scope: !865, file: !818, discriminator: 0)
!865 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hcb6b1a5987c5a17eE", scope: !414, file: !413, line: 453, type: !866, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !869)
!866 = !DISubroutineType(types: !867)
!867 = !{!329, !329, !868}
!868 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!869 = !{!863, !870}
!870 = !DILocalVariable(name: "count", scope: !864, file: !818, line: 286, type: !868, align: 8)
!871 = !DILocation(line: 286, column: 39, scope: !864, inlinedAt: !872)
!872 = !DILocation(line: 876, column: 18, scope: !856, inlinedAt: !845)
!873 = !DILocalVariable(name: "data", scope: !874, file: !818, line: 286, type: !329, align: 8)
!874 = !DILexicalBlockFile(scope: !875, file: !818, discriminator: 0)
!875 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6a66992555506ab5E", scope: !43, file: !399, line: 695, type: !400, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !876)
!876 = !{!873, !877}
!877 = !DILocalVariable(name: "len", scope: !874, file: !818, line: 286, type: !9, align: 8)
!878 = !DILocation(line: 286, column: 13, scope: !874, inlinedAt: !879)
!879 = !DILocation(line: 286, column: 13, scope: !817)
!880 = !DILocation(line: 286, column: 71, scope: !817)
!881 = !DILocalVariable(name: "self", scope: !882, file: !818, line: 286, type: !329, align: 8)
!882 = !DILexicalBlockFile(scope: !883, file: !818, discriminator: 0)
!883 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb951d44ade26c9c5E", scope: !414, file: !413, line: 46, type: !416, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !884)
!884 = !{!881}
!885 = !DILocation(line: 286, column: 13, scope: !882, inlinedAt: !886)
!886 = !DILocation(line: 696, column: 20, scope: !875, inlinedAt: !879)
!887 = !DILocalVariable(name: "data_address", scope: !888, file: !818, line: 286, type: !6, align: 8)
!888 = !DILexicalBlockFile(scope: !889, file: !818, discriminator: 0)
!889 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h9dc36a19d85d94baE", scope: !427, file: !426, line: 110, type: !428, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !890)
!890 = !{!887, !891}
!891 = !DILocalVariable(name: "metadata", scope: !888, file: !818, line: 286, type: !9, align: 8)
!892 = !DILocation(line: 286, column: 13, scope: !888, inlinedAt: !893)
!893 = !DILocation(line: 696, column: 5, scope: !875, inlinedAt: !879)
!894 = !DILocation(line: 288, column: 6, scope: !817)
!895 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h0289f9d6ecabd111E", scope: !819, file: !818, line: 291, type: !896, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !902)
!896 = !DISubroutineType(types: !897)
!897 = !{!898, !823, !898}
!898 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !899, templateParams: !23, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!899 = !{!900, !901}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !898, file: !2, baseType: !140, size: 64, align: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !898, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!902 = !{!903, !904, !905}
!903 = !DILocalVariable(name: "self", arg: 1, scope: !895, file: !818, line: 291, type: !823)
!904 = !DILocalVariable(name: "slice", arg: 2, scope: !895, file: !818, line: 291, type: !898)
!905 = !DILocalVariable(name: "runtime", scope: !906, file: !818, line: 294, type: !908, align: 8)
!906 = !DILexicalBlockFile(scope: !907, file: !818, discriminator: 0)
!907 = distinct !DILexicalBlock(scope: !895, file: !386, line: 2336, column: 13)
!908 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !909, file: !2, size: 192, align: 64, elements: !910, templateParams: !23, identifier: "28ce5b8f96862f9bf6a66e974f54fbc9")
!909 = !DINamespace(name: "get_unchecked_mut", scope: !819)
!910 = !{!911, !912, !913}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !908, file: !2, baseType: !393, size: 64, align: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !908, file: !2, baseType: !393, size: 64, align: 64, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !908, file: !2, baseType: !914, size: 64, align: 64, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [u8]", baseType: !898, size: 64, align: 64, dwarfAddressSpace: 0)
!915 = !DILocation(line: 291, column: 33, scope: !895)
!916 = !DILocation(line: 291, column: 39, scope: !895)
!917 = !DILocation(line: 294, column: 13, scope: !906)
!918 = !DILocation(line: 295, column: 43, scope: !895)
!919 = !DILocalVariable(name: "self", scope: !920, file: !818, line: 295, type: !898, align: 8)
!920 = !DILexicalBlockFile(scope: !921, file: !818, discriminator: 0)
!921 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hdbeffb196cf668a7E", scope: !922, file: !656, line: 1778, type: !923, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !925)
!922 = !DINamespace(name: "{impl#1}", scope: !658)
!923 = !DISubroutineType(types: !924)
!924 = !{!649, !898}
!925 = !{!919}
!926 = !DILocation(line: 295, column: 43, scope: !920, inlinedAt: !918)
!927 = !DILocalVariable(name: "self", scope: !928, file: !818, line: 295, type: !649, align: 8)
!928 = !DILexicalBlockFile(scope: !929, file: !818, discriminator: 0)
!929 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce9ae179be503a7aE", scope: !657, file: !656, line: 985, type: !930, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !932)
!930 = !DISubroutineType(types: !931)
!931 = !{!649, !649, !9}
!932 = !{!927, !933}
!933 = !DILocalVariable(name: "count", scope: !928, file: !818, line: 295, type: !9, align: 8)
!934 = !DILocation(line: 295, column: 43, scope: !928, inlinedAt: !918)
!935 = !DILocation(line: 295, column: 66, scope: !895)
!936 = !DILocalVariable(name: "self", scope: !937, file: !818, line: 295, type: !649, align: 8)
!937 = !DILexicalBlockFile(scope: !938, file: !818, discriminator: 0)
!938 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h7a151f4cf998d469E", scope: !657, file: !656, line: 465, type: !939, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !941)
!939 = !DISubroutineType(types: !940)
!940 = !{!649, !649, !868}
!941 = !{!936, !942}
!942 = !DILocalVariable(name: "count", scope: !937, file: !818, line: 295, type: !868, align: 8)
!943 = !DILocation(line: 295, column: 43, scope: !937, inlinedAt: !944)
!944 = !DILocation(line: 990, column: 18, scope: !929, inlinedAt: !918)
!945 = !DILocalVariable(name: "data", scope: !946, file: !818, line: 295, type: !649, align: 8)
!946 = !DILexicalBlockFile(scope: !947, file: !818, discriminator: 0)
!947 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17he9d89cd098aed2e1E", scope: !43, file: !399, line: 727, type: !948, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !950)
!948 = !DISubroutineType(types: !949)
!949 = !{!898, !649, !9}
!950 = !{!945, !951}
!951 = !DILocalVariable(name: "len", scope: !946, file: !818, line: 295, type: !9, align: 8)
!952 = !DILocation(line: 295, column: 13, scope: !946, inlinedAt: !953)
!953 = !DILocation(line: 295, column: 13, scope: !895)
!954 = !DILocation(line: 295, column: 79, scope: !895)
!955 = !DILocalVariable(name: "self", scope: !956, file: !818, line: 295, type: !649, align: 8)
!956 = !DILexicalBlockFile(scope: !957, file: !818, discriminator: 0)
!957 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hef927cab6f2be5beE", scope: !657, file: !656, line: 45, type: !958, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !961)
!958 = !DISubroutineType(types: !959)
!959 = !{!960, !649}
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!961 = !{!955}
!962 = !DILocation(line: 295, column: 13, scope: !956, inlinedAt: !963)
!963 = !DILocation(line: 728, column: 24, scope: !947, inlinedAt: !953)
!964 = !DILocalVariable(name: "data_address", scope: !965, file: !818, line: 295, type: !960, align: 8)
!965 = !DILexicalBlockFile(scope: !966, file: !818, discriminator: 0)
!966 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb43c8ca59c3ce57eE", scope: !427, file: !426, line: 127, type: !967, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !969)
!967 = !DISubroutineType(types: !968)
!968 = !{!898, !960, !9}
!969 = !{!964, !970}
!970 = !DILocalVariable(name: "metadata", scope: !965, file: !818, line: 295, type: !9, align: 8)
!971 = !DILocation(line: 295, column: 13, scope: !965, inlinedAt: !972)
!972 = !DILocation(line: 728, column: 5, scope: !947, inlinedAt: !953)
!973 = !DILocation(line: 297, column: 6, scope: !895)
!974 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17hcb8e7252e399a07dE", scope: !819, file: !818, line: 291, type: !975, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !991)
!975 = !DISubroutineType(types: !976)
!976 = !{!977, !823, !977}
!977 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !978, templateParams: !23, identifier: "627fe2323caa9ea93b59f1e612c83fdf")
!978 = !{!979, !990}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !977, file: !2, baseType: !980, size: 64, align: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64, dwarfAddressSpace: 0)
!981 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !982, file: !2, size: 8, align: 8, elements: !983, templateParams: !330, identifier: "aa0c7d8f0b419cd04a2247ea8bd76194")
!982 = !DINamespace(name: "maybe_uninit", scope: !210)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !981, file: !2, baseType: !7, align: 8)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !981, file: !2, baseType: !986, size: 8, align: 8)
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !987, file: !2, size: 8, align: 8, elements: !988, templateParams: !330, identifier: "de0fec85501b3a5b7a912d9f1ade4cbe")
!987 = !DINamespace(name: "manually_drop", scope: !210)
!988 = !{!989}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !986, file: !2, baseType: !70, size: 8, align: 8)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !977, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!991 = !{!992, !993, !994}
!992 = !DILocalVariable(name: "self", arg: 1, scope: !974, file: !818, line: 291, type: !823)
!993 = !DILocalVariable(name: "slice", arg: 2, scope: !974, file: !818, line: 291, type: !977)
!994 = !DILocalVariable(name: "runtime", scope: !995, file: !818, line: 294, type: !997, align: 8)
!995 = !DILexicalBlockFile(scope: !996, file: !818, discriminator: 0)
!996 = distinct !DILexicalBlock(scope: !974, file: !386, line: 2336, column: 13)
!997 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !909, file: !2, size: 192, align: 64, elements: !998, templateParams: !23, identifier: "46609c22003c7c3d32c4d350dc86b9d1")
!998 = !{!999, !1000, !1001}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__start", scope: !997, file: !2, baseType: !393, size: 64, align: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__end", scope: !997, file: !2, baseType: !393, size: 64, align: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !997, file: !2, baseType: !1002, size: 64, align: 64, offset: 128)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [core::mem::maybe_uninit::MaybeUninit<u8>]", baseType: !977, size: 64, align: 64, dwarfAddressSpace: 0)
!1003 = !{!1004}
!1004 = !DITemplateTypeParameter(name: "T", type: !981)
!1005 = !DILocation(line: 291, column: 33, scope: !974)
!1006 = !DILocation(line: 291, column: 39, scope: !974)
!1007 = !DILocation(line: 294, column: 13, scope: !995)
!1008 = !DILocation(line: 295, column: 43, scope: !974)
!1009 = !DILocalVariable(name: "self", scope: !1010, file: !818, line: 295, type: !977, align: 8)
!1010 = !DILexicalBlockFile(scope: !1011, file: !818, discriminator: 0)
!1011 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h5a61e69906c72d16E", scope: !922, file: !656, line: 1778, type: !1012, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !1015)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!1014, !977}
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !981, size: 64, align: 64, dwarfAddressSpace: 0)
!1015 = !{!1009}
!1016 = !DILocation(line: 295, column: 43, scope: !1010, inlinedAt: !1008)
!1017 = !DILocalVariable(name: "self", scope: !1018, file: !818, line: 295, type: !1014, align: 8)
!1018 = !DILexicalBlockFile(scope: !1019, file: !818, discriminator: 0)
!1019 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h20b5f9a10ca998b3E", scope: !657, file: !656, line: 985, type: !1020, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !1022)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!1014, !1014, !9}
!1022 = !{!1017, !1023}
!1023 = !DILocalVariable(name: "count", scope: !1018, file: !818, line: 295, type: !9, align: 8)
!1024 = !DILocation(line: 295, column: 43, scope: !1018, inlinedAt: !1008)
!1025 = !DILocation(line: 295, column: 66, scope: !974)
!1026 = !DILocalVariable(name: "self", scope: !1027, file: !818, line: 295, type: !1014, align: 8)
!1027 = !DILexicalBlockFile(scope: !1028, file: !818, discriminator: 0)
!1028 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h74c30394ac8b743eE", scope: !657, file: !656, line: 465, type: !1029, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !1031)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!1014, !1014, !868}
!1031 = !{!1026, !1032}
!1032 = !DILocalVariable(name: "count", scope: !1027, file: !818, line: 295, type: !868, align: 8)
!1033 = !DILocation(line: 295, column: 43, scope: !1027, inlinedAt: !1034)
!1034 = !DILocation(line: 990, column: 18, scope: !1019, inlinedAt: !1008)
!1035 = !DILocalVariable(name: "data", scope: !1036, file: !818, line: 295, type: !1014, align: 8)
!1036 = !DILexicalBlockFile(scope: !1037, file: !818, discriminator: 0)
!1037 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hb6b24e962d1c0c17E", scope: !43, file: !399, line: 727, type: !1038, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !1040)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!977, !1014, !9}
!1040 = !{!1035, !1041}
!1041 = !DILocalVariable(name: "len", scope: !1036, file: !818, line: 295, type: !9, align: 8)
!1042 = !DILocation(line: 295, column: 13, scope: !1036, inlinedAt: !1043)
!1043 = !DILocation(line: 295, column: 13, scope: !974)
!1044 = !DILocation(line: 295, column: 79, scope: !974)
!1045 = !DILocalVariable(name: "self", scope: !1046, file: !818, line: 295, type: !1014, align: 8)
!1046 = !DILexicalBlockFile(scope: !1047, file: !818, discriminator: 0)
!1047 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h643fd9cf5c2a8b02E", scope: !657, file: !656, line: 45, type: !1048, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1051, retainedNodes: !1050)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!960, !1014}
!1050 = !{!1045}
!1051 = !{!1004, !420}
!1052 = !DILocation(line: 295, column: 13, scope: !1046, inlinedAt: !1053)
!1053 = !DILocation(line: 728, column: 24, scope: !1037, inlinedAt: !1043)
!1054 = !DILocalVariable(name: "data_address", scope: !1055, file: !818, line: 295, type: !960, align: 8)
!1055 = !DILexicalBlockFile(scope: !1056, file: !818, discriminator: 0)
!1056 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h5301a74ec7cc69e3E", scope: !427, file: !426, line: 127, type: !1057, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !1059)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!977, !960, !9}
!1059 = !{!1054, !1060}
!1060 = !DILocalVariable(name: "metadata", scope: !1055, file: !818, line: 295, type: !9, align: 8)
!1061 = !DILocation(line: 295, column: 13, scope: !1055, inlinedAt: !1062)
!1062 = !DILocation(line: 728, column: 5, scope: !1037, inlinedAt: !1043)
!1063 = !DILocation(line: 297, column: 6, scope: !974)
!1064 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hf345357b5c64d268E", scope: !819, file: !818, line: 258, type: !1065, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1080)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!1067, !823, !366}
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[u8]>", scope: !177, file: !2, size: 128, align: 64, elements: !1068, templateParams: !23, identifier: "a10dd6c8cbc031c66bcb157397a8ab34")
!1068 = !{!1069}
!1069 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1067, file: !2, size: 128, align: 64, elements: !1070, templateParams: !23, identifier: "f5a6694eae942d8dfdfecb1108411145", discriminator: !1079)
!1070 = !{!1071, !1075}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1069, file: !2, baseType: !1072, size: 128, align: 64, extraData: i64 0)
!1072 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1067, file: !2, size: 128, align: 64, elements: !23, templateParams: !1073, identifier: "f917b5f3e834899fdc042dd32762d34c")
!1073 = !{!1074}
!1074 = !DITemplateTypeParameter(name: "T", type: !366)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1069, file: !2, baseType: !1076, size: 128, align: 64)
!1076 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1067, file: !2, size: 128, align: 64, elements: !1077, templateParams: !1073, identifier: "ec71ed770ec76ed84081bfa9fc187739")
!1077 = !{!1078}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1076, file: !2, baseType: !366, size: 128, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, scope: !1067, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!1080 = !{!1081, !1082}
!1081 = !DILocalVariable(name: "self", arg: 1, scope: !1064, file: !818, line: 258, type: !823)
!1082 = !DILocalVariable(name: "slice", arg: 2, scope: !1064, file: !818, line: 258, type: !366)
!1083 = !DILocation(line: 258, column: 12, scope: !1064)
!1084 = !DILocation(line: 258, column: 18, scope: !1064)
!1085 = !DILocation(line: 259, column: 12, scope: !1064)
!1086 = !DILocation(line: 259, column: 37, scope: !1064)
!1087 = !DILocation(line: 263, column: 29, scope: !1064)
!1088 = !DILocation(line: 260, column: 13, scope: !1064)
!1089 = !DILocation(line: 259, column: 9, scope: !1064)
!1090 = !DILocation(line: 265, column: 6, scope: !1064)
!1091 = !DILocation(line: 263, column: 22, scope: !1064)
!1092 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h311cd6c79c217910E", scope: !819, file: !818, line: 300, type: !1093, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1095)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!366, !823, !366, !344}
!1095 = !{!1096, !1097}
!1096 = !DILocalVariable(name: "self", arg: 1, scope: !1092, file: !818, line: 300, type: !823)
!1097 = !DILocalVariable(name: "slice", arg: 2, scope: !1092, file: !818, line: 300, type: !366)
!1098 = !DILocation(line: 300, column: 14, scope: !1092)
!1099 = !DILocation(line: 300, column: 20, scope: !1092)
!1100 = !DILocation(line: 301, column: 12, scope: !1092)
!1101 = !DILocation(line: 303, column: 19, scope: !1092)
!1102 = !DILocation(line: 302, column: 13, scope: !1092)
!1103 = !DILocation(line: 307, column: 20, scope: !1092)
!1104 = !DILocation(line: 304, column: 13, scope: !1092)
!1105 = !DILocation(line: 308, column: 6, scope: !1092)
!1106 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h88e374dad76d3e4bE", scope: !819, file: !818, line: 311, type: !1107, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1113)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!1109, !823, !1109, !344}
!1109 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 128, align: 64, elements: !1110, templateParams: !23, identifier: "188333407bebfa65121ceca786627665")
!1110 = !{!1111, !1112}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1109, file: !2, baseType: !140, size: 64, align: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1109, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1113 = !{!1114, !1115}
!1114 = !DILocalVariable(name: "self", arg: 1, scope: !1106, file: !818, line: 311, type: !823)
!1115 = !DILocalVariable(name: "slice", arg: 2, scope: !1106, file: !818, line: 311, type: !1109)
!1116 = !DILocation(line: 311, column: 18, scope: !1106)
!1117 = !DILocation(line: 311, column: 24, scope: !1106)
!1118 = !DILocation(line: 312, column: 12, scope: !1106)
!1119 = !DILocation(line: 314, column: 19, scope: !1106)
!1120 = !DILocation(line: 313, column: 13, scope: !1106)
!1121 = !DILocation(line: 318, column: 24, scope: !1106)
!1122 = !DILocation(line: 315, column: 13, scope: !1106)
!1123 = !DILocation(line: 319, column: 6, scope: !1106)
!1124 = distinct !DISubprogram(name: "next_back<u8>", linkageName: "_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8e87941d7e06ef18E", scope: !1125, file: !608, line: 349, type: !1126, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1140)
!1125 = !DINamespace(name: "{impl#182}", scope: !473)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!1128, !1139}
!1128 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u8>", scope: !177, file: !2, size: 64, align: 64, elements: !1129, templateParams: !23, identifier: "bbf278434900ebc767cf4d1ba91a7023")
!1129 = !{!1130}
!1130 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1128, file: !2, size: 64, align: 64, elements: !1131, templateParams: !23, identifier: "101fb69dcd65b49303b4d10b55dcffb", discriminator: !1138)
!1131 = !{!1132, !1134}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1130, file: !2, baseType: !1133, size: 64, align: 64, extraData: i64 0)
!1133 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1128, file: !2, size: 64, align: 64, elements: !23, templateParams: !554, identifier: "bd32561e41222bd8701ecbec194b1aa7")
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1130, file: !2, baseType: !1135, size: 64, align: 64)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1128, file: !2, size: 64, align: 64, elements: !1136, templateParams: !554, identifier: "728806a049c182f2a5c33d7fd0303de1")
!1136 = !{!1137}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1135, file: !2, baseType: !556, size: 64, align: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, scope: !1128, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !548, size: 64, align: 64, dwarfAddressSpace: 0)
!1140 = !{!1141}
!1141 = !DILocalVariable(name: "self", arg: 1, scope: !1124, file: !608, line: 349, type: !1139)
!1142 = !DILocation(line: 349, column: 26, scope: !1124)
!1143 = !DILocalVariable(name: "metadata", scope: !1144, file: !608, line: 357, type: !7, align: 1)
!1144 = !DILexicalBlockFile(scope: !1145, file: !608, discriminator: 0)
!1145 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1148)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!649, !960, !7}
!1148 = !{!1149, !1143}
!1149 = !DILocalVariable(name: "data_address", scope: !1144, file: !608, line: 357, type: !960, align: 8)
!1150 = !DILocation(line: 357, column: 29, scope: !1144, inlinedAt: !1151)
!1151 = !DILocation(line: 668, column: 5, scope: !1152, inlinedAt: !1155)
!1152 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!649}
!1155 = !DILocation(line: 38, column: 41, scope: !1156, inlinedAt: !1163)
!1156 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd134781c17b0a8a9E", scope: !657, file: !656, line: 35, type: !1157, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1160)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!1159, !649}
!1159 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!1160 = !{!1161}
!1161 = !DILocalVariable(name: "self", scope: !1162, file: !608, line: 357, type: !649, align: 8)
!1162 = !DILexicalBlockFile(scope: !1156, file: !608, discriminator: 0)
!1163 = !DILocation(line: 357, column: 29, scope: !1124)
!1164 = !DILocalVariable(name: "metadata", scope: !1165, file: !608, line: 359, type: !7, align: 1)
!1165 = !DILexicalBlockFile(scope: !1166, file: !608, discriminator: 0)
!1166 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17ha110c0ee121a06dbE", scope: !427, file: !426, line: 110, type: !1167, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1169)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!329, !6, !7}
!1169 = !{!1170, !1164}
!1170 = !DILocalVariable(name: "data_address", scope: !1165, file: !608, line: 359, type: !6, align: 8)
!1171 = !DILocation(line: 359, column: 33, scope: !1165, inlinedAt: !1172)
!1172 = !DILocation(line: 513, column: 5, scope: !1173, inlinedAt: !1176)
!1173 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17ha2d8dbbe516802bdE", scope: !43, file: !399, line: 512, type: !1174, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!329}
!1176 = !DILocation(line: 39, column: 43, scope: !1177, inlinedAt: !1183)
!1177 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd0ff5b2f156018f3E", scope: !414, file: !413, line: 36, type: !1178, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1180)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!1159, !329}
!1180 = !{!1181}
!1181 = !DILocalVariable(name: "self", scope: !1182, file: !608, line: 359, type: !329, align: 8)
!1182 = !DILexicalBlockFile(scope: !1177, file: !608, discriminator: 0)
!1183 = !DILocation(line: 359, column: 33, scope: !1124)
!1184 = !DILocalVariable(name: "self", scope: !1185, file: !608, line: 357, type: !326, align: 8)
!1185 = !DILexicalBlockFile(scope: !1186, file: !608, discriminator: 0)
!1186 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1187)
!1187 = !{!1184}
!1188 = !DILocation(line: 357, column: 29, scope: !1185, inlinedAt: !1163)
!1189 = !DILocation(line: 357, column: 29, scope: !1162, inlinedAt: !1163)
!1190 = !DILocalVariable(name: "self", scope: !1191, file: !608, line: 357, type: !649, align: 8)
!1191 = !DILexicalBlockFile(scope: !1192, file: !608, discriminator: 0)
!1192 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1195)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!1159, !649, !649}
!1195 = !{!1190, !1196}
!1196 = !DILocalVariable(name: "other", scope: !1191, file: !608, line: 357, type: !649, align: 8)
!1197 = !DILocation(line: 357, column: 29, scope: !1191, inlinedAt: !1198)
!1198 = !DILocation(line: 38, column: 9, scope: !1156, inlinedAt: !1163)
!1199 = !DILocation(line: 357, column: 29, scope: !1200, inlinedAt: !1206)
!1200 = !DILexicalBlockFile(scope: !1201, file: !608, discriminator: 0)
!1201 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !1204)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!960, !9}
!1204 = !{!1205}
!1205 = !DILocalVariable(name: "addr", scope: !1200, file: !608, line: 357, type: !9, align: 8)
!1206 = !DILocation(line: 668, column: 24, scope: !1152, inlinedAt: !1155)
!1207 = !DILocation(line: 357, column: 28, scope: !1124)
!1208 = !DILocation(line: 357, column: 21, scope: !1124)
!1209 = !DILocation(line: 358, column: 24, scope: !1124)
!1210 = !DILocation(line: 358, column: 21, scope: !1124)
!1211 = !DILocation(line: 359, column: 33, scope: !1182, inlinedAt: !1183)
!1212 = !DILocalVariable(name: "self", scope: !1213, file: !608, line: 359, type: !329, align: 8)
!1213 = !DILexicalBlockFile(scope: !1214, file: !608, discriminator: 0)
!1214 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17ha4d0530636a6b1ddE", scope: !414, file: !413, line: 777, type: !1215, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1217)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!1159, !329, !329}
!1217 = !{!1212, !1218}
!1218 = !DILocalVariable(name: "other", scope: !1213, file: !608, line: 359, type: !329, align: 8)
!1219 = !DILocation(line: 359, column: 33, scope: !1213, inlinedAt: !1220)
!1220 = !DILocation(line: 39, column: 9, scope: !1177, inlinedAt: !1183)
!1221 = !DILocation(line: 359, column: 33, scope: !1222, inlinedAt: !1228)
!1222 = !DILexicalBlockFile(scope: !1223, file: !608, discriminator: 0)
!1223 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h5c8467dab22abe2fE", scope: !43, file: !399, line: 538, type: !1224, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !1226)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!6, !9}
!1226 = !{!1227}
!1227 = !DILocalVariable(name: "addr", scope: !1222, file: !608, line: 359, type: !9, align: 8)
!1228 = !DILocation(line: 513, column: 20, scope: !1173, inlinedAt: !1176)
!1229 = !DILocation(line: 359, column: 32, scope: !1124)
!1230 = !DILocation(line: 359, column: 25, scope: !1124)
!1231 = !DILocation(line: 361, column: 24, scope: !1124)
!1232 = !DILocalVariable(name: "self", scope: !1233, file: !608, line: 361, type: !326, align: 8)
!1233 = !DILexicalBlockFile(scope: !1234, file: !608, discriminator: 0)
!1234 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1235)
!1235 = !{!1232}
!1236 = !DILocation(line: 361, column: 24, scope: !1233, inlinedAt: !1237)
!1237 = !DILocation(line: 8, column: 9, scope: !1124)
!1238 = !DILocation(line: 364, column: 30, scope: !1124)
!1239 = !DILocalVariable(name: "self", scope: !1240, file: !608, line: 364, type: !1139, align: 8)
!1240 = distinct !DISubprogram(name: "pre_dec_end<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$11pre_dec_end17hf0a0943d39e291f1E", scope: !548, file: !608, line: 102, type: !1241, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1243)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!329, !1139, !868}
!1243 = !{!1239, !1244}
!1244 = !DILocalVariable(name: "offset", scope: !1240, file: !608, line: 364, type: !868, align: 8)
!1245 = !DILocation(line: 364, column: 30, scope: !1240, inlinedAt: !1246)
!1246 = !DILocation(line: 60, column: 47, scope: !1124)
!1247 = !DILocation(line: 362, column: 25, scope: !1124)
!1248 = !DILocation(line: 361, column: 21, scope: !1124)
!1249 = !DILocation(line: 367, column: 14, scope: !1124)
!1250 = !DILocalVariable(name: "self", scope: !1251, file: !608, line: 364, type: !329, align: 8)
!1251 = !DILexicalBlockFile(scope: !1252, file: !608, discriminator: 0)
!1252 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h5c4e7a2ea5ca6880E", scope: !414, file: !413, line: 536, type: !866, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1253)
!1253 = !{!1250, !1254}
!1254 = !DILocalVariable(name: "count", scope: !1251, file: !608, line: 364, type: !868, align: 8)
!1255 = !DILocation(line: 364, column: 30, scope: !1251, inlinedAt: !1256)
!1256 = !DILocation(line: 67, column: 29, scope: !1240, inlinedAt: !1246)
!1257 = !DILocalVariable(name: "self", scope: !1258, file: !608, line: 364, type: !329, align: 8)
!1258 = !DILexicalBlockFile(scope: !1259, file: !608, discriminator: 0)
!1259 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hcb6b1a5987c5a17eE", scope: !414, file: !413, line: 453, type: !866, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1260)
!1260 = !{!1257, !1261}
!1261 = !DILocalVariable(name: "count", scope: !1258, file: !608, line: 364, type: !868, align: 8)
!1262 = !DILocation(line: 364, column: 30, scope: !1258, inlinedAt: !1263)
!1263 = !DILocation(line: 110, column: 41, scope: !1240, inlinedAt: !1246)
!1264 = !DILocation(line: 364, column: 25, scope: !1124)
!1265 = !DILocalVariable(name: "self", scope: !1266, file: !608, line: 364, type: !326, align: 8)
!1266 = !DILexicalBlockFile(scope: !1267, file: !608, discriminator: 0)
!1267 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1268)
!1268 = !{!1265}
!1269 = !DILocation(line: 364, column: 30, scope: !1266, inlinedAt: !1270)
!1270 = !DILocation(line: 105, column: 21, scope: !1240, inlinedAt: !1246)
!1271 = distinct !DISubprogram(name: "next_reject_back<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17h67232f0984849cf5E", scope: !1272, file: !669, line: 770, type: !1273, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1296, retainedNodes: !1298)
!1272 = !DINamespace(name: "{impl#24}", scope: !671)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!1275, !1292}
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, usize)>", scope: !177, file: !2, size: 192, align: 64, elements: !1276, templateParams: !23, identifier: "990abf00db42140b4c63b9dd480f48ae")
!1276 = !{!1277}
!1277 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1275, file: !2, size: 192, align: 64, elements: !1278, templateParams: !23, identifier: "ca2e0d050d24abac5af96d6fe9066cdf", discriminator: !1291)
!1278 = !{!1279, !1287}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1277, file: !2, baseType: !1280, size: 192, align: 64, extraData: i64 0)
!1280 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1275, file: !2, size: 192, align: 64, elements: !23, templateParams: !1281, identifier: "1e0ff27580c54e441adf9fae1bbc4c81")
!1281 = !{!1282}
!1282 = !DITemplateTypeParameter(name: "T", type: !1283)
!1283 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !1284, templateParams: !23, identifier: "105266767139aa3a5d0ea4c0b52d55d0")
!1284 = !{!1285, !1286}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1283, file: !2, baseType: !9, size: 64, align: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1283, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1277, file: !2, baseType: !1288, size: 192, align: 64, extraData: i64 1)
!1288 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1275, file: !2, size: 192, align: 64, elements: !1289, templateParams: !1281, identifier: "e19a3496fbff9c108ae2a0b8a3495600")
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1288, file: !2, baseType: !1283, size: 128, align: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, scope: !1275, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharPredicateSearcher<core::str::{impl#0}::trim::{closure_env#0}>", baseType: !1293, size: 64, align: 64, dwarfAddressSpace: 0)
!1293 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharPredicateSearcher<core::str::{impl#0}::trim::{closure_env#0}>", scope: !671, file: !2, size: 320, align: 64, elements: !1294, templateParams: !1296, identifier: "fb437b08c0fc8f8c162edb68df5ddfe9")
!1294 = !{!1295}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1293, file: !2, baseType: !692, size: 320, align: 64)
!1296 = !{!1297}
!1297 = !DITemplateTypeParameter(name: "F", type: !695)
!1298 = !{!1299}
!1299 = !DILocalVariable(name: "self", arg: 1, scope: !1271, file: !669, line: 770, type: !1292)
!1300 = !DILocation(line: 770, column: 29, scope: !1271)
!1301 = !DILocation(line: 771, column: 13, scope: !1271)
!1302 = !DILocation(line: 772, column: 10, scope: !1271)
!1303 = distinct !DISubprogram(name: "into_iter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN119_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2b44944a4e45610fE", scope: !1305, file: !1304, line: 1618, type: !1309, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !1557)
!1304 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/btree/map.rs", directory: "", checksumkind: CSK_MD5, checksum: "8b2945165aa397eb68afa253d43a0879")
!1305 = !DINamespace(name: "{impl#30}", scope: !1306)
!1306 = !DINamespace(name: "map", scope: !1307)
!1307 = !DINamespace(name: "btree", scope: !1308)
!1308 = !DINamespace(name: "collections", scope: !300)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!1311, !1508}
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", scope: !1306, file: !2, size: 576, align: 64, elements: !1312, templateParams: !1507, identifier: "2d5422955985b325b61aa1e04d389053")
!1312 = !{!1313, !1505, !1506}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1311, file: !2, baseType: !1314, size: 512, align: 64)
!1314 = !DICompositeType(tag: DW_TAG_structure_type, name: "LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", scope: !1315, file: !2, size: 512, align: 64, elements: !1316, templateParams: !1462, identifier: "3b9dd04e9da4324334cc616aabde1d07")
!1315 = !DINamespace(name: "navigate", scope: !1307)
!1316 = !{!1317, !1504}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "front", scope: !1314, file: !2, baseType: !1318, size: 256, align: 64)
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", scope: !177, file: !2, size: 256, align: 64, elements: !1319, templateParams: !23, identifier: "7e9fa45a667444b7bc4a68ae3acc2be")
!1319 = !{!1320}
!1320 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1318, file: !2, size: 256, align: 64, elements: !1321, templateParams: !23, identifier: "5da3e0caf1d75c49d5019ce4009213f6", discriminator: !1503)
!1321 = !{!1322, !1499}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1320, file: !2, baseType: !1323, size: 256, align: 64, extraData: i64 2)
!1323 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1318, file: !2, size: 256, align: 64, elements: !23, templateParams: !1324, identifier: "285e2a9338804c2d123fc00821dc38a7")
!1324 = !{!1325}
!1325 = !DITemplateTypeParameter(name: "T", type: !1326)
!1326 = !DICompositeType(tag: DW_TAG_structure_type, name: "LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", scope: !1315, file: !2, size: 256, align: 64, elements: !1327, templateParams: !23, identifier: "8a3d632d0388deee48c2b0400035e3b7")
!1327 = !{!1328}
!1328 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1326, file: !2, size: 256, align: 64, elements: !1329, templateParams: !23, identifier: "d9fd380cb8f05d1d406e2abad05ba6ff", discriminator: !1498)
!1329 = !{!1330, !1463}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "Root", scope: !1328, file: !2, baseType: !1331, size: 256, align: 64, extraData: i64 0)
!1331 = !DICompositeType(tag: DW_TAG_structure_type, name: "Root", scope: !1326, file: !2, size: 256, align: 64, elements: !1332, templateParams: !1462, identifier: "62a995457aa709ef16072accba9e2b8b")
!1332 = !{!1333}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1331, file: !2, baseType: !1334, size: 128, align: 64, offset: 64)
!1334 = !DICompositeType(tag: DW_TAG_structure_type, name: "NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", scope: !1335, file: !2, size: 128, align: 64, elements: !1336, templateParams: !1459, identifier: "2dbb08de4d784db8b5aa860f0f8cbe1a")
!1335 = !DINamespace(name: "node", scope: !1307)
!1336 = !{!1337, !1338, !1444}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1334, file: !2, baseType: !9, size: 64, align: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1334, file: !2, baseType: !1339, size: 64, align: 64, offset: 64)
!1339 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", scope: !42, file: !2, size: 64, align: 64, elements: !1340, templateParams: !1442, identifier: "c861cc5cea0c897ff33d77f34d498998")
!1340 = !{!1341}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1339, file: !2, baseType: !1342, size: 64, align: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1343, size: 64, align: 64, dwarfAddressSpace: 0)
!1343 = !DICompositeType(tag: DW_TAG_structure_type, name: "LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", scope: !1335, file: !2, size: 4352, align: 64, elements: !1344, templateParams: !1374, identifier: "fac780b5a803df6fd926286fb376bc1f")
!1344 = !{!1345, !1408, !1419, !1420, !1431}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1343, file: !2, baseType: !1346, size: 64, align: 64)
!1346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !177, file: !2, size: 64, align: 64, elements: !1347, templateParams: !23, identifier: "a2fce210cd323ae8f5430784cd81c42e")
!1347 = !{!1348}
!1348 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1346, file: !2, size: 64, align: 64, elements: !1349, templateParams: !23, identifier: "5918a54986cc5afa6c579e155be6486", discriminator: !1407)
!1349 = !{!1350, !1403}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1348, file: !2, baseType: !1351, size: 64, align: 64, extraData: i64 0)
!1351 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1346, file: !2, size: 64, align: 64, elements: !23, templateParams: !1352, identifier: "ddf47a141e047b845f60fa25c4546849")
!1352 = !{!1353}
!1353 = !DITemplateTypeParameter(name: "T", type: !1354)
!1354 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", scope: !42, file: !2, size: 64, align: 64, elements: !1355, templateParams: !1401, identifier: "2282725ebac25bf5d84c91abd727869d")
!1355 = !{!1356}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1354, file: !2, baseType: !1357, size: 64, align: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1358, size: 64, align: 64, dwarfAddressSpace: 0)
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", scope: !1335, file: !2, size: 5120, align: 64, elements: !1359, templateParams: !1374, identifier: "6bf11eb90309d5ae2ef269477dbc617b")
!1359 = !{!1360, !1361}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1358, file: !2, baseType: !1343, size: 4352, align: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !1358, file: !2, baseType: !1362, size: 768, align: 64, offset: 4352)
!1362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1363, size: 768, align: 64, elements: !1372)
!1363 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !982, file: !2, size: 64, align: 64, elements: !1364, templateParams: !1370, identifier: "5a925aa03bc935a65d65de53f41bfa6a")
!1364 = !{!1365, !1366}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1363, file: !2, baseType: !7, align: 8)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1363, file: !2, baseType: !1367, size: 64, align: 64)
!1367 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !987, file: !2, size: 64, align: 64, elements: !1368, templateParams: !1370, identifier: "66acb73d050774ef6c51c5adf9c5d4b6")
!1368 = !{!1369}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1367, file: !2, baseType: !1339, size: 64, align: 64)
!1370 = !{!1371}
!1371 = !DITemplateTypeParameter(name: "T", type: !1339)
!1372 = !{!1373}
!1373 = !DISubrange(count: 12, lowerBound: 0)
!1374 = !{!1375, !1387}
!1375 = !DITemplateTypeParameter(name: "K", type: !1376)
!1376 = !DICompositeType(tag: DW_TAG_structure_type, name: "OsString", scope: !1377, file: !2, size: 192, align: 64, elements: !1379, templateParams: !23, identifier: "454fd02cfcb0b08abf1fd1aab45238b0")
!1377 = !DINamespace(name: "os_str", scope: !1378)
!1378 = !DINamespace(name: "ffi", scope: !17)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1376, file: !2, baseType: !1381, size: 192, align: 64)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "Buf", scope: !1382, file: !2, size: 192, align: 64, elements: !1385, templateParams: !23, identifier: "d1927bc8800b0f11dc3d6fb85fbbef70")
!1382 = !DINamespace(name: "os_str", scope: !1383)
!1383 = !DINamespace(name: "unix", scope: !1384)
!1384 = !DINamespace(name: "sys", scope: !17)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1381, file: !2, baseType: !315, size: 192, align: 64)
!1387 = !DITemplateTypeParameter(name: "V", type: !1388)
!1388 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::ffi::os_str::OsString>", scope: !177, file: !2, size: 192, align: 64, elements: !1389, templateParams: !23, identifier: "f225310147ba7b7f8fa4bd7a0f979f1b")
!1389 = !{!1390}
!1390 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1388, file: !2, size: 192, align: 64, elements: !1391, templateParams: !23, identifier: "419658b5bebcc654fb055052b514e1c8", discriminator: !1400)
!1391 = !{!1392, !1396}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1390, file: !2, baseType: !1393, size: 192, align: 64, extraData: i64 0)
!1393 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1388, file: !2, size: 192, align: 64, elements: !23, templateParams: !1394, identifier: "957d5a1cbbcf2650664a8533af263816")
!1394 = !{!1395}
!1395 = !DITemplateTypeParameter(name: "T", type: !1376)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1390, file: !2, baseType: !1397, size: 192, align: 64)
!1397 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1388, file: !2, size: 192, align: 64, elements: !1398, templateParams: !1394, identifier: "8362cb27d36386bd1f55149079a7eae9")
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1397, file: !2, baseType: !1376, size: 192, align: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, scope: !1388, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!1401 = !{!1402}
!1402 = !DITemplateTypeParameter(name: "T", type: !1358)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1348, file: !2, baseType: !1404, size: 64, align: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1346, file: !2, size: 64, align: 64, elements: !1405, templateParams: !1352, identifier: "646511c2353c9a0ffd6120fced3a215")
!1405 = !{!1406}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1404, file: !2, baseType: !1354, size: 64, align: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, scope: !1346, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "parent_idx", scope: !1343, file: !2, baseType: !1409, size: 16, align: 16, offset: 4288)
!1409 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u16>", scope: !982, file: !2, size: 16, align: 16, elements: !1410, templateParams: !1417, identifier: "ef90a85d880a1fb8d6f9900504ee4d20")
!1410 = !{!1411, !1412}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1409, file: !2, baseType: !7, align: 8)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1409, file: !2, baseType: !1413, size: 16, align: 16)
!1413 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u16>", scope: !987, file: !2, size: 16, align: 16, elements: !1414, templateParams: !1417, identifier: "3c803264401f8dc69e970c3a3cb68e1f")
!1414 = !{!1415}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1413, file: !2, baseType: !1416, size: 16, align: 16)
!1416 = !DIBasicType(name: "u16", size: 16, encoding: DW_ATE_unsigned)
!1417 = !{!1418}
!1418 = !DITemplateTypeParameter(name: "T", type: !1416)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1343, file: !2, baseType: !1416, size: 16, align: 16, offset: 4304)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1343, file: !2, baseType: !1421, size: 2112, align: 64, offset: 64)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 2112, align: 64, elements: !1429)
!1422 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<std::ffi::os_str::OsString>", scope: !982, file: !2, size: 192, align: 64, elements: !1423, templateParams: !1394, identifier: "72026831563b057244bf5cf8deab6cb")
!1423 = !{!1424, !1425}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1422, file: !2, baseType: !7, align: 8)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1422, file: !2, baseType: !1426, size: 192, align: 64)
!1426 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<std::ffi::os_str::OsString>", scope: !987, file: !2, size: 192, align: 64, elements: !1427, templateParams: !1394, identifier: "9c4ac37ca5a4186c23280304dbb7cc17")
!1427 = !{!1428}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1426, file: !2, baseType: !1376, size: 192, align: 64)
!1429 = !{!1430}
!1430 = !DISubrange(count: 11, lowerBound: 0)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !1343, file: !2, baseType: !1432, size: 2112, align: 64, offset: 2176)
!1432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 2112, align: 64, elements: !1429)
!1433 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>", scope: !982, file: !2, size: 192, align: 64, elements: !1434, templateParams: !1440, identifier: "47bb33d35c60196134dbe87bad673edb")
!1434 = !{!1435, !1436}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1433, file: !2, baseType: !7, align: 8)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1433, file: !2, baseType: !1437, size: 192, align: 64)
!1437 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<std::ffi::os_str::OsString>>", scope: !987, file: !2, size: 192, align: 64, elements: !1438, templateParams: !1440, identifier: "1dfc79e57bf7d39ec8c4b05f1526fdb8")
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1437, file: !2, baseType: !1388, size: 192, align: 64)
!1440 = !{!1441}
!1441 = !DITemplateTypeParameter(name: "T", type: !1388)
!1442 = !{!1443}
!1443 = !DITemplateTypeParameter(name: "T", type: !1343)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1334, file: !2, baseType: !1445, align: 8)
!1445 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !1446, identifier: "3186a20bab7fc74caf14a3a104bebf8f")
!1446 = !{!1447}
!1447 = !DITemplateTypeParameter(name: "T", type: !1448)
!1448 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)", file: !2, align: 8, elements: !1449, templateParams: !23, identifier: "e15921f2ac7ba53780b0363d3353465f")
!1449 = !{!1450, !1455}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1448, file: !2, baseType: !1451, align: 8)
!1451 = !DICompositeType(tag: DW_TAG_structure_type, name: "Dying", scope: !1452, file: !2, align: 8, elements: !1453, templateParams: !23, identifier: "2e1ddefb632ad186faec4eb34330b690")
!1452 = !DINamespace(name: "marker", scope: !1335)
!1453 = !{!1454}
!1454 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1451, file: !2, align: 8, elements: !23, identifier: "312b88ad9fada75c328d2f74a3ecb213")
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1448, file: !2, baseType: !1456, align: 8)
!1456 = !DICompositeType(tag: DW_TAG_structure_type, name: "LeafOrInternal", scope: !1452, file: !2, align: 8, elements: !1457, templateParams: !23, identifier: "c5b40d644fc8b90c2e0649b6ced53d35")
!1457 = !{!1458}
!1458 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1456, file: !2, align: 8, elements: !23, identifier: "778f2e0ba6de3b13c7355fc46778dbba")
!1459 = !{!1460, !1375, !1387, !1461}
!1460 = !DITemplateTypeParameter(name: "BorrowType", type: !1451)
!1461 = !DITemplateTypeParameter(name: "Type", type: !1456)
!1462 = !{!1460, !1375, !1387}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "Edge", scope: !1328, file: !2, baseType: !1464, size: 256, align: 64, extraData: i64 1)
!1464 = !DICompositeType(tag: DW_TAG_structure_type, name: "Edge", scope: !1326, file: !2, size: 256, align: 64, elements: !1465, templateParams: !1462, identifier: "c845d4342f682dfe475a635ba5915c9a")
!1465 = !{!1466}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1464, file: !2, baseType: !1467, size: 192, align: 64, offset: 64)
!1467 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", scope: !1335, file: !2, size: 192, align: 64, elements: !1468, templateParams: !1495, identifier: "b9e8cddeb6062dd141bc570079ace68")
!1468 = !{!1469, !1487, !1488}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1467, file: !2, baseType: !1470, size: 128, align: 64)
!1470 = !DICompositeType(tag: DW_TAG_structure_type, name: "NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", scope: !1335, file: !2, size: 128, align: 64, elements: !1471, templateParams: !1485, identifier: "dfcf5666eee6f190a22aac1d7e28fdb6")
!1471 = !{!1472, !1473, !1474}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1470, file: !2, baseType: !9, size: 64, align: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1470, file: !2, baseType: !1339, size: 64, align: 64, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1470, file: !2, baseType: !1475, align: 8)
!1475 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !1476, identifier: "c3e3ac90c6b1b962a0a79c4910a31698")
!1476 = !{!1477}
!1477 = !DITemplateTypeParameter(name: "T", type: !1478)
!1478 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)", file: !2, align: 8, elements: !1479, templateParams: !23, identifier: "223cb452c12d6419d90670b91502975")
!1479 = !{!1480, !1481}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1478, file: !2, baseType: !1451, align: 8)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1478, file: !2, baseType: !1482, align: 8)
!1482 = !DICompositeType(tag: DW_TAG_structure_type, name: "Leaf", scope: !1452, file: !2, align: 8, elements: !1483, templateParams: !23, identifier: "c767dc2a0171b456c943cd99e66ba112")
!1483 = !{!1484}
!1484 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1482, file: !2, align: 8, elements: !23, identifier: "27d7211bdbef1e559ff2d8c85f65736e")
!1485 = !{!1460, !1375, !1387, !1486}
!1486 = !DITemplateTypeParameter(name: "Type", type: !1482)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !1467, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1467, file: !2, baseType: !1489, align: 8)
!1489 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::collections::btree::node::marker::Edge>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !1490, identifier: "e403912912690de1aa7c51c1c81b6f2")
!1490 = !{!1491}
!1491 = !DITemplateTypeParameter(name: "T", type: !1492)
!1492 = !DICompositeType(tag: DW_TAG_structure_type, name: "Edge", scope: !1452, file: !2, align: 8, elements: !1493, templateParams: !23, identifier: "8a9132d0048b8d4dec7dca7597f2017b")
!1493 = !{!1494}
!1494 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1492, file: !2, align: 8, elements: !23, identifier: "425367cde7a780fee6ddd8461463e70d")
!1495 = !{!1496, !1497}
!1496 = !DITemplateTypeParameter(name: "Node", type: !1470)
!1497 = !DITemplateTypeParameter(name: "Type", type: !1492)
!1498 = !DIDerivedType(tag: DW_TAG_member, scope: !1326, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1320, file: !2, baseType: !1500, size: 256, align: 64)
!1500 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1318, file: !2, size: 256, align: 64, elements: !1501, templateParams: !1324, identifier: "af5282d8406c6a22dfd89d120dd12e08")
!1501 = !{!1502}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1500, file: !2, baseType: !1326, size: 256, align: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, scope: !1318, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1314, file: !2, baseType: !1318, size: 256, align: 64, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1311, file: !2, baseType: !9, size: 64, align: 64, offset: 512)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1311, file: !2, baseType: !336, align: 8)
!1507 = !{!1375, !1387, !339}
!1508 = !DICompositeType(tag: DW_TAG_structure_type, name: "BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", scope: !1306, file: !2, size: 192, align: 64, elements: !1509, templateParams: !1507, identifier: "554cff59c8b59a75bf7326f51eb433d2")
!1509 = !{!1510, !1541, !1542, !1548}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1508, file: !2, baseType: !1511, size: 128, align: 64)
!1511 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", scope: !177, file: !2, size: 128, align: 64, elements: !1512, templateParams: !23, identifier: "6a0dd6820cbc9da96acdf2e0c83bb7c1")
!1512 = !{!1513}
!1513 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1511, file: !2, size: 128, align: 64, elements: !1514, templateParams: !23, identifier: "1d4bce5efae4f4a65a5a8d9957ebc0c5", discriminator: !1540)
!1514 = !{!1515, !1536}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1513, file: !2, baseType: !1516, size: 128, align: 64, extraData: i64 0)
!1516 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1511, file: !2, size: 128, align: 64, elements: !23, templateParams: !1517, identifier: "b725683b1f0af7063859b2798bb4ec41")
!1517 = !{!1518}
!1518 = !DITemplateTypeParameter(name: "T", type: !1519)
!1519 = !DICompositeType(tag: DW_TAG_structure_type, name: "NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", scope: !1335, file: !2, size: 128, align: 64, elements: !1520, templateParams: !1534, identifier: "e1b48019c33f940e84aa30ff8011796")
!1520 = !{!1521, !1522, !1523}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1519, file: !2, baseType: !9, size: 64, align: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1519, file: !2, baseType: !1339, size: 64, align: 64, offset: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1519, file: !2, baseType: !1524, align: 8)
!1524 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !1525, identifier: "64241a4ff2265ce2f14a51e455505b51")
!1525 = !{!1526}
!1526 = !DITemplateTypeParameter(name: "T", type: !1527)
!1527 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)", file: !2, align: 8, elements: !1528, templateParams: !23, identifier: "f42a265b1c14cb126cd12fb7e2aef507")
!1528 = !{!1529, !1533}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1527, file: !2, baseType: !1530, align: 8)
!1530 = !DICompositeType(tag: DW_TAG_structure_type, name: "Owned", scope: !1452, file: !2, align: 8, elements: !1531, templateParams: !23, identifier: "b51199afb4e51117a1d0a13968e4d038")
!1531 = !{!1532}
!1532 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1530, file: !2, align: 8, elements: !23, identifier: "bd59f43f504481e2bccafc8ca4e4d0b")
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1527, file: !2, baseType: !1456, align: 8)
!1534 = !{!1535, !1375, !1387, !1461}
!1535 = !DITemplateTypeParameter(name: "BorrowType", type: !1530)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1513, file: !2, baseType: !1537, size: 128, align: 64)
!1537 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1511, file: !2, size: 128, align: 64, elements: !1538, templateParams: !1517, identifier: "fb8534139c8e6c371457594839cdd422")
!1538 = !{!1539}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1537, file: !2, baseType: !1519, size: 128, align: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, scope: !1511, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1508, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1508, file: !2, baseType: !1543, align: 8)
!1543 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::alloc::Global>", scope: !987, file: !2, align: 8, elements: !1544, templateParams: !1546, identifier: "899e548b6e114c8b20c5123edbf2f0a4")
!1544 = !{!1545}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1543, file: !2, baseType: !336, align: 8)
!1546 = !{!1547}
!1547 = !DITemplateTypeParameter(name: "T", type: !336)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1508, file: !2, baseType: !1549, align: 8)
!1549 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::boxed::Box<(std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>), alloc::alloc::Global>>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !1550, identifier: "6fdf9199dab9a3846ef34943a82f895c")
!1550 = !{!1551}
!1551 = !DITemplateTypeParameter(name: "T", type: !1552)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<(std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>), alloc::alloc::Global>", baseType: !1553, size: 64, align: 64, dwarfAddressSpace: 0)
!1553 = !DICompositeType(tag: DW_TAG_structure_type, name: "(std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>)", file: !2, size: 384, align: 64, elements: !1554, templateParams: !23, identifier: "66b693afd0412fb7442aa8ca0523b8d7")
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1553, file: !2, baseType: !1376, size: 192, align: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1553, file: !2, baseType: !1388, size: 192, align: 64, offset: 192)
!1557 = !{!1558, !1559, !1566, !1568}
!1558 = !DILocalVariable(name: "self", arg: 1, scope: !1303, file: !1304, line: 1618, type: !1508)
!1559 = !DILocalVariable(name: "me", scope: !1560, file: !1304, line: 1619, type: !1561, align: 8)
!1560 = distinct !DILexicalBlock(scope: !1303, file: !1304, line: 1619, column: 9)
!1561 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", scope: !987, file: !2, size: 192, align: 64, elements: !1562, templateParams: !1564, identifier: "55ea0577a273800a845f698ff47efc58")
!1562 = !{!1563}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1561, file: !2, baseType: !1508, size: 192, align: 64)
!1564 = !{!1565}
!1565 = !DITemplateTypeParameter(name: "T", type: !1508)
!1566 = !DILocalVariable(name: "root", scope: !1567, file: !1304, line: 1620, type: !1519, align: 8)
!1567 = distinct !DILexicalBlock(scope: !1560, file: !1304, line: 1620, column: 44)
!1568 = !DILocalVariable(name: "full_range", scope: !1569, file: !1304, line: 1621, type: !1314, align: 8)
!1569 = distinct !DILexicalBlock(scope: !1567, file: !1304, line: 1621, column: 13)
!1570 = !DILocation(line: 1618, column: 18, scope: !1303)
!1571 = !DILocation(line: 1619, column: 13, scope: !1560)
!1572 = !DILocalVariable(name: "value", scope: !1573, file: !1304, line: 1619, type: !1508, align: 8)
!1573 = !DILexicalBlockFile(scope: !1574, file: !1304, discriminator: 0)
!1574 = distinct !DISubprogram(name: "new<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hecc7f44a05819b05E", scope: !1561, file: !1575, line: 70, type: !1576, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !1578)
!1575 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!1561, !1508}
!1578 = !{!1572}
!1579 = !DILocation(line: 1619, column: 22, scope: !1573, inlinedAt: !1580)
!1580 = !DILocation(line: 1619, column: 22, scope: !1303)
!1581 = !DILocation(line: 1621, column: 17, scope: !1569)
!1582 = !DILocalVariable(name: "tmp", scope: !1583, file: !1304, line: 1626, type: !1592, align: 1)
!1583 = !DILexicalBlockFile(scope: !1584, file: !1304, discriminator: 0)
!1584 = distinct !DILexicalBlock(scope: !1585, file: !399, line: 1107, column: 5)
!1585 = distinct !DISubprogram(name: "read<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read17h6be2e6897acfc15eE", scope: !43, file: !399, line: 1099, type: !1586, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1589)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{null, !1588}
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::alloc::Global", baseType: !336, size: 64, align: 64, dwarfAddressSpace: 0)
!1589 = !{!1590, !1582}
!1590 = !DILocalVariable(name: "src", scope: !1591, file: !1304, line: 1626, type: !1588, align: 8)
!1591 = !DILexicalBlockFile(scope: !1585, file: !1304, discriminator: 0)
!1592 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::alloc::Global>", scope: !982, file: !2, align: 8, elements: !1593, templateParams: !1546, identifier: "b168aeba9faaf5e6d2495caca2c1b4fd")
!1593 = !{!1594, !1595}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1592, file: !2, baseType: !7, align: 8)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1592, file: !2, baseType: !1543, align: 8)
!1596 = !DILocation(line: 1626, column: 33, scope: !1583, inlinedAt: !1597)
!1597 = !DILocation(line: 113, column: 18, scope: !1598, inlinedAt: !1605)
!1598 = distinct !DISubprogram(name: "take<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$4take17hb79ca6637f979e8bE", scope: !1543, file: !1575, line: 110, type: !1599, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1602)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{null, !1601}
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", baseType: !1543, size: 64, align: 64, dwarfAddressSpace: 0)
!1602 = !{!1603}
!1603 = !DILocalVariable(name: "slot", scope: !1604, file: !1304, line: 1626, type: !1601, align: 8)
!1604 = !DILexicalBlockFile(scope: !1598, file: !1304, discriminator: 0)
!1605 = !DILocation(line: 1626, column: 33, scope: !1569)
!1606 = !DILocalVariable(name: "self", scope: !1607, file: !1304, line: 1626, type: !1592, align: 1)
!1607 = !DILexicalBlockFile(scope: !1608, file: !1304, discriminator: 0)
!1608 = distinct !DISubprogram(name: "assume_init<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h2dd30d160cb1aaf6E", scope: !1592, file: !1609, line: 629, type: !1610, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1612)
!1609 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d75c93d9a93fe65ef19edc0e8e272278")
!1610 = !DISubroutineType(types: !1611)
!1611 = !{null, !1592, !344}
!1612 = !{!1606}
!1613 = !DILocation(line: 1626, column: 33, scope: !1607, inlinedAt: !1614)
!1614 = !DILocation(line: 1116, column: 9, scope: !1584, inlinedAt: !1597)
!1615 = !DILocalVariable(name: "slot", scope: !1616, file: !1304, line: 1626, type: !1543, align: 1)
!1616 = !DILexicalBlockFile(scope: !1617, file: !1304, discriminator: 0)
!1617 = distinct !DISubprogram(name: "into_inner<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h97691ce662b68ef1E", scope: !1543, file: !1575, line: 88, type: !1618, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1620)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{null, !1543}
!1620 = !{!1615}
!1621 = !DILocation(line: 1626, column: 33, scope: !1616, inlinedAt: !1622)
!1622 = !DILocation(line: 634, column: 13, scope: !1608, inlinedAt: !1614)
!1623 = !DILocalVariable(name: "tmp", scope: !1624, file: !1304, line: 1632, type: !1592, align: 1)
!1624 = !DILexicalBlockFile(scope: !1625, file: !1304, discriminator: 0)
!1625 = distinct !DILexicalBlock(scope: !1626, file: !399, line: 1107, column: 5)
!1626 = distinct !DISubprogram(name: "read<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read17h6be2e6897acfc15eE", scope: !43, file: !399, line: 1099, type: !1586, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1627)
!1627 = !{!1628, !1623}
!1628 = !DILocalVariable(name: "src", scope: !1629, file: !1304, line: 1632, type: !1588, align: 8)
!1629 = !DILexicalBlockFile(scope: !1626, file: !1304, discriminator: 0)
!1630 = !DILocation(line: 1632, column: 33, scope: !1624, inlinedAt: !1631)
!1631 = !DILocation(line: 113, column: 18, scope: !1632, inlinedAt: !1636)
!1632 = distinct !DISubprogram(name: "take<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$4take17hb79ca6637f979e8bE", scope: !1543, file: !1575, line: 110, type: !1599, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1633)
!1633 = !{!1634}
!1634 = !DILocalVariable(name: "slot", scope: !1635, file: !1304, line: 1632, type: !1601, align: 8)
!1635 = !DILexicalBlockFile(scope: !1632, file: !1304, discriminator: 0)
!1636 = !DILocation(line: 1632, column: 33, scope: !1560)
!1637 = !DILocalVariable(name: "self", scope: !1638, file: !1304, line: 1632, type: !1592, align: 1)
!1638 = !DILexicalBlockFile(scope: !1639, file: !1304, discriminator: 0)
!1639 = distinct !DISubprogram(name: "assume_init<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h2dd30d160cb1aaf6E", scope: !1592, file: !1609, line: 629, type: !1610, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1640)
!1640 = !{!1637}
!1641 = !DILocation(line: 1632, column: 33, scope: !1638, inlinedAt: !1642)
!1642 = !DILocation(line: 1116, column: 9, scope: !1625, inlinedAt: !1631)
!1643 = !DILocalVariable(name: "slot", scope: !1644, file: !1304, line: 1632, type: !1543, align: 1)
!1644 = !DILexicalBlockFile(scope: !1645, file: !1304, discriminator: 0)
!1645 = distinct !DISubprogram(name: "into_inner<alloc::alloc::Global>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h97691ce662b68ef1E", scope: !1543, file: !1575, line: 88, type: !1618, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1646)
!1646 = !{!1643}
!1647 = !DILocation(line: 1632, column: 33, scope: !1644, inlinedAt: !1648)
!1648 = !DILocation(line: 634, column: 13, scope: !1639, inlinedAt: !1642)
!1649 = !DILocation(line: 1619, column: 40, scope: !1303)
!1650 = !DILocation(line: 1620, column: 29, scope: !1567)
!1651 = !DILocalVariable(name: "self", scope: !1652, file: !1304, line: 1620, type: !1658, align: 8)
!1652 = !DILexicalBlockFile(scope: !1653, file: !1304, discriminator: 0)
!1653 = distinct !DISubprogram(name: "deref_mut<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h99b589c1d93a5f66E", scope: !1654, file: !1575, line: 162, type: !1655, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !1659)
!1654 = !DINamespace(name: "{impl#3}", scope: !987)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!1657, !1658}
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1508, size: 64, align: 64, dwarfAddressSpace: 0)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", baseType: !1561, size: 64, align: 64, dwarfAddressSpace: 0)
!1659 = !{!1651}
!1660 = !DILocation(line: 1620, column: 29, scope: !1652, inlinedAt: !1650)
!1661 = !DILocalVariable(name: "self", scope: !1662, file: !1304, line: 1620, type: !1667, align: 8)
!1662 = !DILexicalBlockFile(scope: !1663, file: !1304, discriminator: 0)
!1663 = distinct !DISubprogram(name: "take<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h7cdad910c8a5f21cE", scope: !1511, file: !1664, line: 1574, type: !1665, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1517, retainedNodes: !1668)
!1664 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!1511, !1667}
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", baseType: !1511, size: 64, align: 64, dwarfAddressSpace: 0)
!1668 = !{!1661}
!1669 = !DILocation(line: 1620, column: 29, scope: !1662, inlinedAt: !1650)
!1670 = !DILocation(line: 1620, column: 16, scope: !1567)
!1671 = !DILocation(line: 1620, column: 21, scope: !1567)
!1672 = !DILocation(line: 1621, column: 30, scope: !1567)
!1673 = !DILocation(line: 1630, column: 24, scope: !1560)
!1674 = !DILocation(line: 1632, column: 57, scope: !1560)
!1675 = !DILocalVariable(name: "self", scope: !1676, file: !1304, line: 1632, type: !1658, align: 8)
!1676 = !DILexicalBlockFile(scope: !1677, file: !1304, discriminator: 0)
!1677 = distinct !DISubprogram(name: "deref_mut<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h99b589c1d93a5f66E", scope: !1654, file: !1575, line: 162, type: !1655, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !1678)
!1678 = !{!1675}
!1679 = !DILocation(line: 1632, column: 57, scope: !1676, inlinedAt: !1674)
!1680 = !DILocation(line: 1632, column: 52, scope: !1560)
!1681 = !DILocation(line: 1632, column: 33, scope: !1635, inlinedAt: !1636)
!1682 = !DILocation(line: 1632, column: 33, scope: !1629, inlinedAt: !1631)
!1683 = !DILocation(line: 1632, column: 33, scope: !1684, inlinedAt: !1686)
!1684 = !DILexicalBlockFile(scope: !1685, file: !1304, discriminator: 0)
!1685 = distinct !DISubprogram(name: "uninit<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h7c1ae2ad4e04036dE", scope: !1592, file: !1609, line: 320, type: !21, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !23)
!1686 = !DILocation(line: 1107, column: 19, scope: !1626, inlinedAt: !1631)
!1687 = !DILocalVariable(name: "self", scope: !1688, file: !1304, line: 1632, type: !1693, align: 8)
!1688 = !DILexicalBlockFile(scope: !1689, file: !1304, discriminator: 0)
!1689 = distinct !DISubprogram(name: "as_mut_ptr<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h88bcd844e46c1214E", scope: !1592, file: !1609, line: 574, type: !1690, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1694)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::alloc::Global", baseType: !336, size: 64, align: 64, dwarfAddressSpace: 0)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::alloc::Global>", baseType: !1592, size: 64, align: 64, dwarfAddressSpace: 0)
!1694 = !{!1687}
!1695 = !DILocation(line: 1632, column: 33, scope: !1688, inlinedAt: !1696)
!1696 = !DILocation(line: 1115, column: 34, scope: !1625, inlinedAt: !1631)
!1697 = !DILocation(line: 1629, column: 13, scope: !1560)
!1698 = !DILocation(line: 1620, column: 9, scope: !1560)
!1699 = !DILocation(line: 1635, column: 6, scope: !1303)
!1700 = !DILocation(line: 1624, column: 24, scope: !1569)
!1701 = !DILocation(line: 1625, column: 25, scope: !1569)
!1702 = !DILocalVariable(name: "self", scope: !1703, file: !1304, line: 1625, type: !1709, align: 8)
!1703 = !DILexicalBlockFile(scope: !1704, file: !1304, discriminator: 0)
!1704 = distinct !DISubprogram(name: "deref<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha094e12a48a4531eE", scope: !1705, file: !1575, line: 153, type: !1706, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !1710)
!1705 = !DINamespace(name: "{impl#2}", scope: !987)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1508, size: 64, align: 64, dwarfAddressSpace: 0)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", baseType: !1561, size: 64, align: 64, dwarfAddressSpace: 0)
!1710 = !{!1702}
!1711 = !DILocation(line: 1625, column: 25, scope: !1703, inlinedAt: !1701)
!1712 = !DILocation(line: 1626, column: 57, scope: !1569)
!1713 = !DILocalVariable(name: "self", scope: !1714, file: !1304, line: 1626, type: !1658, align: 8)
!1714 = !DILexicalBlockFile(scope: !1715, file: !1304, discriminator: 0)
!1715 = distinct !DISubprogram(name: "deref_mut<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h99b589c1d93a5f66E", scope: !1654, file: !1575, line: 162, type: !1655, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !1716)
!1716 = !{!1713}
!1717 = !DILocation(line: 1626, column: 57, scope: !1714, inlinedAt: !1712)
!1718 = !DILocation(line: 1626, column: 52, scope: !1569)
!1719 = !DILocation(line: 1626, column: 33, scope: !1604, inlinedAt: !1605)
!1720 = !DILocation(line: 1626, column: 33, scope: !1591, inlinedAt: !1597)
!1721 = !DILocation(line: 1626, column: 33, scope: !1722, inlinedAt: !1724)
!1722 = !DILexicalBlockFile(scope: !1723, file: !1304, discriminator: 0)
!1723 = distinct !DISubprogram(name: "uninit<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h7c1ae2ad4e04036dE", scope: !1592, file: !1609, line: 320, type: !21, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !23)
!1724 = !DILocation(line: 1107, column: 19, scope: !1585, inlinedAt: !1597)
!1725 = !DILocalVariable(name: "self", scope: !1726, file: !1304, line: 1626, type: !1693, align: 8)
!1726 = !DILexicalBlockFile(scope: !1727, file: !1304, discriminator: 0)
!1727 = distinct !DISubprogram(name: "as_mut_ptr<alloc::alloc::Global>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h88bcd844e46c1214E", scope: !1592, file: !1609, line: 574, type: !1690, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1546, retainedNodes: !1728)
!1728 = !{!1725}
!1729 = !DILocation(line: 1626, column: 33, scope: !1726, inlinedAt: !1730)
!1730 = !DILocation(line: 1115, column: 34, scope: !1584, inlinedAt: !1597)
!1731 = !DILocation(line: 1623, column: 13, scope: !1569)
!1732 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h235423854f80c95bE", scope: !1733, file: !646, line: 770, type: !1734, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1736)
!1733 = !DINamespace(name: "{impl#16}", scope: !42)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{!326, !322}
!1736 = !{!1737}
!1737 = !DILocalVariable(name: "unique", arg: 1, scope: !1732, file: !646, line: 770, type: !322)
!1738 = !DILocation(line: 770, column: 13, scope: !1732)
!1739 = !DILocation(line: 773, column: 41, scope: !1732)
!1740 = !DILocalVariable(name: "self", scope: !1741, file: !646, line: 773, type: !322, align: 8)
!1741 = !DILexicalBlockFile(scope: !1742, file: !646, discriminator: 0)
!1742 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha4a6fb266c1c2a9eE", scope: !322, file: !1743, line: 103, type: !1744, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1746)
!1743 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!649, !322}
!1746 = !{!1740}
!1747 = !DILocation(line: 773, column: 41, scope: !1741, inlinedAt: !1739)
!1748 = !DILocalVariable(name: "self", scope: !1749, file: !646, line: 773, type: !326, align: 8)
!1749 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1750)
!1750 = !{!1748}
!1751 = !DILocation(line: 773, column: 41, scope: !1749, inlinedAt: !1752)
!1752 = !DILocation(line: 104, column: 9, scope: !1742, inlinedAt: !1739)
!1753 = !DILocalVariable(name: "ptr", scope: !1754, file: !646, line: 773, type: !649, align: 8)
!1754 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !1757)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!326, !649}
!1757 = !{!1753}
!1758 = !DILocation(line: 773, column: 18, scope: !1754, inlinedAt: !1759)
!1759 = !DILocation(line: 773, column: 18, scope: !1732)
!1760 = !DILocation(line: 774, column: 6, scope: !1732)
!1761 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h546a7d4f068a885bE", scope: !1763, file: !1762, line: 116, type: !1764, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !1790)
!1762 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "9cfb71cd3b32f7eb830f45a756b00675")
!1763 = !DINamespace(name: "{impl#1}", scope: !1308)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!1766, !1769}
!1766 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !1308, file: !2, size: 128, align: 64, elements: !1767, templateParams: !23, identifier: "9329beb58cfce2a468bff9d53d352901")
!1767 = !{!1768}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1766, file: !2, baseType: !1769, size: 128, align: 64)
!1769 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !1308, file: !2, size: 128, align: 64, elements: !1770, templateParams: !23, identifier: "b80f03a2018170445eea4dcb9e8ba251")
!1770 = !{!1771}
!1771 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1769, file: !2, size: 128, align: 64, elements: !1772, templateParams: !23, identifier: "dd437972ee979c0cb5a8f1e81729b7e4", discriminator: !1789)
!1772 = !{!1773, !1775}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !1771, file: !2, baseType: !1774, size: 128, align: 64, extraData: i64 0)
!1774 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !1769, file: !2, size: 128, align: 64, elements: !23, identifier: "9b997f4b8909a73a8576324b89f9b258")
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !1771, file: !2, baseType: !1776, size: 128, align: 64)
!1776 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !1769, file: !2, size: 128, align: 64, elements: !1777, templateParams: !23, identifier: "43ad075de287371ebe4e53de3e5ecf3d")
!1777 = !{!1778, !1788}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1776, file: !2, baseType: !1779, size: 128, align: 64)
!1779 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !1780, file: !2, size: 128, align: 64, elements: !1782, templateParams: !23, identifier: "6727bf1318ffccbbbfc5e6dc0dfc8722")
!1780 = !DINamespace(name: "layout", scope: !1781)
!1781 = !DINamespace(name: "alloc", scope: !44)
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1779, file: !2, baseType: !9, size: 64, align: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1779, file: !2, baseType: !1785, size: 64, align: 64, offset: 64)
!1785 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !209, file: !2, size: 64, align: 64, elements: !1786, templateParams: !23, identifier: "e392ecbcb8f7df9e6beb2b20857b4b5a")
!1786 = !{!1787}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1785, file: !2, baseType: !208, size: 64, align: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !1776, file: !2, baseType: !7, align: 8)
!1789 = !DIDerivedType(tag: DW_TAG_member, scope: !1769, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1790 = !{!1791}
!1791 = !DILocalVariable(name: "kind", arg: 1, scope: !1761, file: !1762, line: 116, type: !1769)
!1792 = !DILocation(line: 116, column: 13, scope: !1761)
!1793 = !DILocation(line: 117, column: 9, scope: !1761)
!1794 = !DILocation(line: 118, column: 6, scope: !1761)
!1795 = !{i64 0, i64 -9223372036854775807}
!1796 = distinct !DISubprogram(name: "spec_extend<u8, alloc::alloc::Global>", linkageName: "_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hfa10ff63240d453dE", scope: !1798, file: !1797, line: 83, type: !1800, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !1803)
!1797 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_extend.rs", directory: "", checksumkind: CSK_MD5, checksum: "f621a160b67dfe2bb567901fc380da7e")
!1798 = !DINamespace(name: "{impl#4}", scope: !1799)
!1799 = !DINamespace(name: "spec_extend", scope: !316)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{null, !1802, !548}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !315, size: 64, align: 64, dwarfAddressSpace: 0)
!1803 = !{!1804, !1805, !1806}
!1804 = !DILocalVariable(name: "self", arg: 1, scope: !1796, file: !1797, line: 83, type: !1802)
!1805 = !DILocalVariable(name: "iterator", arg: 2, scope: !1796, file: !1797, line: 83, type: !548)
!1806 = !DILocalVariable(name: "slice", scope: !1807, file: !1797, line: 84, type: !366, align: 8)
!1807 = distinct !DILexicalBlock(scope: !1796, file: !1797, line: 84, column: 9)
!1808 = !DILocation(line: 83, column: 20, scope: !1796)
!1809 = !DILocation(line: 83, column: 31, scope: !1796)
!1810 = !DILocation(line: 84, column: 21, scope: !1796)
!1811 = !DILocation(line: 84, column: 13, scope: !1807)
!1812 = !DILocation(line: 85, column: 18, scope: !1807)
!1813 = !DILocation(line: 86, column: 6, scope: !1796)
!1814 = distinct !DISubprogram(name: "drop<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN174_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hded606778ae165c8E", scope: !1815, file: !1304, line: 1644, type: !1818, scopeLine: 1644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !1825)
!1815 = !DINamespace(name: "{impl#0}", scope: !1816)
!1816 = !DINamespace(name: "drop", scope: !1817)
!1817 = !DINamespace(name: "{impl#31}", scope: !1306)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{null, !1820}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::map::{impl#31}::drop::DropGuard<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1821, size: 64, align: 64, dwarfAddressSpace: 0)
!1821 = !DICompositeType(tag: DW_TAG_structure_type, name: "DropGuard<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", scope: !1816, file: !2, size: 64, align: 64, elements: !1822, templateParams: !1507, identifier: "13e33556702ca6517018b996b9e10804")
!1822 = !{!1823}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1821, file: !2, baseType: !1824, size: 64, align: 64)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1311, size: 64, align: 64, dwarfAddressSpace: 0)
!1825 = !{!1826, !1827}
!1826 = !DILocalVariable(name: "self", arg: 1, scope: !1814, file: !1304, line: 1644, type: !1820)
!1827 = !DILocalVariable(name: "kv", scope: !1828, file: !1304, line: 1647, type: !1829, align: 8)
!1828 = distinct !DILexicalBlock(scope: !1814, file: !1304, line: 1647, column: 58)
!1829 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", scope: !1335, file: !2, size: 192, align: 64, elements: !1830, templateParams: !1840, identifier: "19779b2ff63a4dfe7c77736183b6f218")
!1830 = !{!1831, !1832, !1833}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1829, file: !2, baseType: !1334, size: 128, align: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !1829, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1829, file: !2, baseType: !1834, align: 8)
!1834 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::collections::btree::node::marker::KV>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !1835, identifier: "852e2ec5e6efaf7f220d56a03a5f54af")
!1835 = !{!1836}
!1836 = !DITemplateTypeParameter(name: "T", type: !1837)
!1837 = !DICompositeType(tag: DW_TAG_structure_type, name: "KV", scope: !1452, file: !2, align: 8, elements: !1838, templateParams: !23, identifier: "2e942db240e26a9b23931ad35f6958")
!1838 = !{!1839}
!1839 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1837, file: !2, align: 8, elements: !23, identifier: "8ad94ec946884daccb820cbab20cd9c3")
!1840 = !{!1841, !1842}
!1841 = !DITemplateTypeParameter(name: "Node", type: !1334)
!1842 = !DITemplateTypeParameter(name: "Type", type: !1837)
!1843 = !DILocation(line: 1644, column: 21, scope: !1814)
!1844 = !DILocation(line: 1647, column: 32, scope: !1828)
!1845 = !DILocation(line: 1647, column: 17, scope: !1814)
!1846 = !DILocation(line: 1647, column: 38, scope: !1828)
!1847 = !DILocation(line: 1647, column: 27, scope: !1828)
!1848 = !DILocation(line: 1649, column: 30, scope: !1828)
!1849 = !DILocation(line: 1651, column: 14, scope: !1814)
!1850 = distinct !DISubprogram(name: "__rust_begin_short_backtrace<fn(), ()>", linkageName: "_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h2a99f7a5eba12a9bE", scope: !1852, file: !1851, line: 118, type: !1854, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1860, retainedNodes: !1856)
!1851 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys_common/backtrace.rs", directory: "", checksumkind: CSK_MD5, checksum: "f7c76d4902bfcea1d96ffad8fbde919d")
!1852 = !DINamespace(name: "backtrace", scope: !1853)
!1853 = !DINamespace(name: "sys_common", scope: !17)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{null, !20}
!1856 = !{!1857, !1858}
!1857 = !DILocalVariable(name: "f", arg: 1, scope: !1850, file: !1851, line: 118, type: !20)
!1858 = !DILocalVariable(name: "result", scope: !1859, file: !1851, line: 122, type: !7, align: 1)
!1859 = distinct !DILexicalBlock(scope: !1850, file: !1851, line: 122, column: 5)
!1860 = !{!1861, !48}
!1861 = !DITemplateTypeParameter(name: "F", type: !20)
!1862 = !DILocation(line: 122, column: 9, scope: !1859)
!1863 = !DILocation(line: 118, column: 43, scope: !1850)
!1864 = !DILocalVariable(name: "dummy", scope: !1865, file: !1851, line: 125, type: !7, align: 1)
!1865 = !DILexicalBlockFile(scope: !1866, file: !1851, discriminator: 0)
!1866 = distinct !DISubprogram(name: "black_box<()>", linkageName: "_ZN4core4hint9black_box17h2fdd58f0ffe277bbE", scope: !1868, file: !1867, line: 225, type: !1869, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !1871)
!1867 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!1868 = !DINamespace(name: "hint", scope: !44)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{null, !7}
!1871 = !{!1864}
!1872 = !DILocation(line: 125, column: 5, scope: !1865, inlinedAt: !1873)
!1873 = !DILocation(line: 125, column: 5, scope: !1859)
!1874 = !DILocation(line: 122, column: 18, scope: !1850)
!1875 = !{i32 3350669}
!1876 = !DILocation(line: 128, column: 2, scope: !1850)
!1877 = !DILocation(line: 128, column: 1, scope: !1850)
!1878 = !DILocation(line: 118, column: 1, scope: !1850)
!1879 = distinct !DISubprogram(name: "decode_repr<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr17hcd0e3b9b5356dd58E", scope: !38, file: !1880, line: 246, type: !1881, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1900, retainedNodes: !1886)
!1880 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/io/error/repr_bitpacked.rs", directory: "", checksumkind: CSK_MD5, checksum: "e17233472f13704c087dcc380c33a3a0")
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!54, !41, !1883}
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1884, file: !2, align: 8, elements: !23, identifier: "610ee771576d0a55639d49be016d65a1")
!1884 = !DINamespace(name: "drop", scope: !1885)
!1885 = !DINamespace(name: "{impl#3}", scope: !38)
!1886 = !{!1887, !1888, !1889, !1891, !1893, !1895, !1897}
!1887 = !DILocalVariable(name: "ptr", arg: 1, scope: !1879, file: !1880, line: 246, type: !41)
!1888 = !DILocalVariable(name: "make_custom", arg: 2, scope: !1879, file: !1880, line: 246, type: !1883)
!1889 = !DILocalVariable(name: "bits", scope: !1890, file: !1880, line: 250, type: !9, align: 8)
!1890 = distinct !DILexicalBlock(scope: !1879, file: !1880, line: 250, column: 5)
!1891 = !DILocalVariable(name: "code", scope: !1892, file: !1880, line: 253, type: !62, align: 4)
!1892 = distinct !DILexicalBlock(scope: !1890, file: !1880, line: 253, column: 13)
!1893 = !DILocalVariable(name: "kind_bits", scope: !1894, file: !1880, line: 257, type: !351, align: 4)
!1894 = distinct !DILexicalBlock(scope: !1890, file: !1880, line: 257, column: 13)
!1895 = !DILocalVariable(name: "kind", scope: !1896, file: !1880, line: 258, type: !69, align: 1)
!1896 = distinct !DILexicalBlock(scope: !1894, file: !1880, line: 258, column: 13)
!1897 = !DILocalVariable(name: "custom", scope: !1898, file: !1880, line: 275, type: !1899, align: 8)
!1898 = distinct !DILexicalBlock(scope: !1890, file: !1880, line: 275, column: 13)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::Custom", baseType: !66, size: 64, align: 64, dwarfAddressSpace: 0)
!1900 = !{!64, !1901}
!1901 = !DITemplateTypeParameter(name: "F", type: !1883)
!1902 = !DILocation(line: 246, column: 29, scope: !1879)
!1903 = !DILocation(line: 246, column: 47, scope: !1879)
!1904 = !DILocation(line: 250, column: 9, scope: !1890)
!1905 = !DILocation(line: 258, column: 17, scope: !1896)
!1906 = !DILocalVariable(name: "self", scope: !1907, file: !1880, line: 258, type: !1909, align: 1)
!1907 = !DILexicalBlockFile(scope: !1908, file: !1880, discriminator: 0)
!1908 = distinct !DISubprogram(name: "unwrap_or_else<std::io::error::ErrorKind, std::io::error::repr_bitpacked::decode_repr::{closure_env#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17he42ca2a4d5f0adc4E", scope: !1909, file: !1664, line: 818, type: !1922, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1933, retainedNodes: !1928)
!1909 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::io::error::ErrorKind>", scope: !177, file: !2, size: 8, align: 8, elements: !1910, templateParams: !23, identifier: "f008ee61be46854a7146e8cd367a9c41")
!1910 = !{!1911}
!1911 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1909, file: !2, size: 8, align: 8, elements: !1912, templateParams: !23, identifier: "57371e63685fc53e1770b74a14fa7c4e", discriminator: !1921)
!1912 = !{!1913, !1917}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1911, file: !2, baseType: !1914, size: 8, align: 8, extraData: i64 41)
!1914 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1909, file: !2, size: 8, align: 8, elements: !23, templateParams: !1915, identifier: "dc4f5ca2cdd686c78cf5aa9b6f1b5afb")
!1915 = !{!1916}
!1916 = !DITemplateTypeParameter(name: "T", type: !69)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1911, file: !2, baseType: !1918, size: 8, align: 8)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1909, file: !2, size: 8, align: 8, elements: !1919, templateParams: !1915, identifier: "371d975942017656b9ce37c5d29bb9bc")
!1919 = !{!1920}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1918, file: !2, baseType: !69, size: 8, align: 8)
!1921 = !DIDerivedType(tag: DW_TAG_member, scope: !1909, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagArtificial)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!69, !1909, !1924}
!1924 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", scope: !1925, file: !2, size: 64, align: 64, elements: !1926, templateParams: !23, identifier: "cb6fd5a9825e024949e7d472a6b7447b")
!1925 = !DINamespace(name: "decode_repr", scope: !38)
!1926 = !{!1927}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__bits", scope: !1924, file: !2, baseType: !393, size: 64, align: 64)
!1928 = !{!1906, !1929, !1930}
!1929 = !DILocalVariable(name: "f", scope: !1907, file: !1880, line: 258, type: !1924, align: 8)
!1930 = !DILocalVariable(name: "x", scope: !1931, file: !1880, line: 258, type: !69, align: 1)
!1931 = !DILexicalBlockFile(scope: !1932, file: !1880, discriminator: 0)
!1932 = distinct !DILexicalBlock(scope: !1908, file: !1664, line: 824, column: 13)
!1933 = !{!1916, !1934}
!1934 = !DITemplateTypeParameter(name: "F", type: !1924)
!1935 = !DILocation(line: 258, column: 24, scope: !1907, inlinedAt: !1936)
!1936 = !DILocation(line: 258, column: 24, scope: !1894)
!1937 = !DILocalVariable(name: "self", scope: !1938, file: !1880, line: 270, type: !1940, align: 8)
!1938 = !DILexicalBlockFile(scope: !1939, file: !1880, discriminator: 0)
!1939 = distinct !DISubprogram(name: "as_ptr<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h25225a9e0acb02b8E", scope: !1940, file: !646, line: 330, type: !1946, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1944, retainedNodes: !1949)
!1940 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<std::io::error::SimpleMessage>", scope: !42, file: !2, size: 64, align: 64, elements: !1941, templateParams: !1944, identifier: "bed3f7a42953e913be084d257c107f75")
!1941 = !{!1942}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1940, file: !2, baseType: !1943, size: 64, align: 64)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const std::io::error::SimpleMessage", baseType: !133, size: 64, align: 64, dwarfAddressSpace: 0)
!1944 = !{!1945}
!1945 = !DITemplateTypeParameter(name: "T", type: !133)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!1948, !1940}
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::SimpleMessage", baseType: !133, size: 64, align: 64, dwarfAddressSpace: 0)
!1949 = !{!1937}
!1950 = !DILocation(line: 270, column: 58, scope: !1938, inlinedAt: !1951)
!1951 = !DILocation(line: 270, column: 58, scope: !1890)
!1952 = !DILocation(line: 250, column: 9, scope: !1879)
!1953 = !DILocation(line: 250, column: 16, scope: !1879)
!1954 = !DILocalVariable(name: "self", scope: !1955, file: !1880, line: 250, type: !41, align: 8)
!1955 = !DILexicalBlockFile(scope: !1956, file: !1880, discriminator: 0)
!1956 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4c782dc344ad25c2E", scope: !41, file: !646, line: 330, type: !1957, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !1959)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!960, !41}
!1959 = !{!1954}
!1960 = !DILocation(line: 250, column: 16, scope: !1955, inlinedAt: !1953)
!1961 = !DILocalVariable(name: "self", scope: !1962, file: !1880, line: 250, type: !960, align: 8)
!1962 = !DILexicalBlockFile(scope: !1963, file: !1880, discriminator: 0)
!1963 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17hf18477a4e9a0abe8E", scope: !657, file: !656, line: 184, type: !1964, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !1966)
!1964 = !DISubroutineType(types: !1965)
!1965 = !{!9, !960}
!1966 = !{!1961}
!1967 = !DILocation(line: 250, column: 16, scope: !1962, inlinedAt: !1953)
!1968 = !DILocation(line: 251, column: 11, scope: !1890)
!1969 = !DILocation(line: 251, column: 5, scope: !1890)
!1970 = !DILocation(line: 280, column: 13, scope: !1890)
!1971 = !DILocation(line: 253, column: 26, scope: !1890)
!1972 = !DILocation(line: 253, column: 24, scope: !1890)
!1973 = !DILocation(line: 253, column: 17, scope: !1892)
!1974 = !DILocation(line: 254, column: 13, scope: !1892)
!1975 = !DILocation(line: 255, column: 9, scope: !1890)
!1976 = !DILocation(line: 257, column: 30, scope: !1890)
!1977 = !DILocation(line: 257, column: 29, scope: !1890)
!1978 = !DILocation(line: 257, column: 17, scope: !1894)
!1979 = !{i8 0, i8 42}
!1980 = !DILocalVariable(name: "self", scope: !1981, file: !1880, line: 270, type: !41, align: 8)
!1981 = !DILexicalBlockFile(scope: !1982, file: !1880, discriminator: 0)
!1982 = distinct !DISubprogram(name: "cast<(), std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h8cb152dbee101928E", scope: !41, file: !646, line: 453, type: !1983, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1986, retainedNodes: !1985)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{!1940, !41}
!1985 = !{!1980}
!1986 = !{!48, !1987}
!1987 = !DITemplateTypeParameter(name: "U", type: !133)
!1988 = !DILocation(line: 270, column: 58, scope: !1981, inlinedAt: !1951)
!1989 = !DILocalVariable(name: "self", scope: !1990, file: !1880, line: 270, type: !41, align: 8)
!1990 = !DILexicalBlockFile(scope: !1991, file: !1880, discriminator: 0)
!1991 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4c782dc344ad25c2E", scope: !41, file: !646, line: 330, type: !1957, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !1992)
!1992 = !{!1989}
!1993 = !DILocation(line: 270, column: 58, scope: !1990, inlinedAt: !1994)
!1994 = !DILocation(line: 455, column: 41, scope: !1982, inlinedAt: !1951)
!1995 = !DILocalVariable(name: "ptr", scope: !1996, file: !1880, line: 270, type: !1948, align: 8)
!1996 = !DILexicalBlockFile(scope: !1997, file: !1880, discriminator: 0)
!1997 = distinct !DISubprogram(name: "new_unchecked<std::io::error::SimpleMessage>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h7ef73e8cea47564fE", scope: !1940, file: !646, line: 196, type: !1998, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1944, retainedNodes: !2000)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!1940, !1948}
!2000 = !{!1995}
!2001 = !DILocation(line: 270, column: 58, scope: !1996, inlinedAt: !2002)
!2002 = !DILocation(line: 455, column: 18, scope: !1982, inlinedAt: !1951)
!2003 = !DILocation(line: 270, column: 31, scope: !1890)
!2004 = !DILocation(line: 270, column: 94, scope: !1890)
!2005 = !DILocation(line: 275, column: 26, scope: !1890)
!2006 = !DILocalVariable(name: "self", scope: !2007, file: !1880, line: 275, type: !41, align: 8)
!2007 = !DILexicalBlockFile(scope: !2008, file: !1880, discriminator: 0)
!2008 = distinct !DISubprogram(name: "as_ptr<()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4c782dc344ad25c2E", scope: !41, file: !646, line: 330, type: !1957, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !2009)
!2009 = !{!2006}
!2010 = !DILocation(line: 275, column: 26, scope: !2007, inlinedAt: !2005)
!2011 = !DILocalVariable(name: "self", scope: !2012, file: !1880, line: 275, type: !960, align: 8)
!2012 = !DILexicalBlockFile(scope: !2013, file: !1880, discriminator: 0)
!2013 = distinct !DISubprogram(name: "cast<(), u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h9372ed323462c8ccE", scope: !657, file: !656, line: 45, type: !2014, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2017, retainedNodes: !2016)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!649, !960}
!2016 = !{!2011}
!2017 = !{!48, !2018}
!2018 = !DITemplateTypeParameter(name: "U", type: !70)
!2019 = !DILocation(line: 275, column: 26, scope: !2012, inlinedAt: !2005)
!2020 = !DILocalVariable(name: "self", scope: !2021, file: !1880, line: 275, type: !649, align: 8)
!2021 = !DILexicalBlockFile(scope: !2022, file: !1880, discriminator: 0)
!2022 = distinct !DISubprogram(name: "wrapping_sub<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$12wrapping_sub17hb8e2469c391b5ebcE", scope: !657, file: !656, line: 1236, type: !930, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !2023)
!2023 = !{!2020, !2024}
!2024 = !DILocalVariable(name: "count", scope: !2021, file: !1880, line: 275, type: !9, align: 8)
!2025 = !DILocation(line: 275, column: 26, scope: !2021, inlinedAt: !2005)
!2026 = !DILocalVariable(name: "self", scope: !2027, file: !1880, line: 275, type: !649, align: 8)
!2027 = !DILexicalBlockFile(scope: !2028, file: !1880, discriminator: 0)
!2028 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$15wrapping_offset17hf02a3b165ed07806E", scope: !657, file: !656, line: 549, type: !939, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !2029)
!2029 = !{!2026, !2030}
!2030 = !DILocalVariable(name: "count", scope: !2027, file: !1880, line: 275, type: !868, align: 8)
!2031 = !DILocation(line: 275, column: 26, scope: !2027, inlinedAt: !2032)
!2032 = !DILocation(line: 1240, column: 9, scope: !2022, inlinedAt: !2005)
!2033 = !DILocation(line: 283, column: 1, scope: !1879)
!2034 = !DILocalVariable(name: "self", scope: !2035, file: !1880, line: 275, type: !649, align: 8)
!2035 = !DILexicalBlockFile(scope: !2036, file: !1880, discriminator: 0)
!2036 = distinct !DISubprogram(name: "cast<u8, std::io::error::Custom>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h2a6da701f33548b8E", scope: !657, file: !656, line: 45, type: !2037, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2040, retainedNodes: !2039)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{!1899, !649}
!2039 = !{!2034}
!2040 = !{!331, !2041}
!2041 = !DITemplateTypeParameter(name: "U", type: !66)
!2042 = !DILocation(line: 275, column: 26, scope: !2035, inlinedAt: !2005)
!2043 = !DILocation(line: 275, column: 17, scope: !1898)
!2044 = !DILocation(line: 276, column: 31, scope: !1898)
!2045 = !DILocation(line: 276, column: 13, scope: !1898)
!2046 = !DILocation(line: 277, column: 9, scope: !1890)
!2047 = !DILocation(line: 258, column: 65, scope: !1894)
!2048 = !{i8 0, i8 41}
!2049 = !DILocation(line: 258, column: 24, scope: !1931, inlinedAt: !1936)
!2050 = !DILocation(line: 268, column: 31, scope: !1896)
!2051 = !DILocation(line: 268, column: 13, scope: !1896)
!2052 = !DILocation(line: 269, column: 9, scope: !1890)
!2053 = !DILocation(line: 246, column: 1, scope: !1879)
!2054 = !DILocation(line: 283, column: 2, scope: !1879)
!2055 = distinct !DISubprogram(name: "{closure#0}<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>, std::io::error::repr_bitpacked::{impl#3}::drop::{closure_env#0}>", linkageName: "_ZN3std2io5error14repr_bitpacked11decode_repr28_$u7b$$u7b$closure$u7d$$u7d$17hc8e85d939c45a11bE", scope: !1925, file: !1880, line: 258, type: !2056, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1900, retainedNodes: !2058)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!69, !1924}
!2058 = !{!2059}
!2059 = !DILocalVariable(name: "bits", scope: !2055, file: !1880, line: 250, type: !9, align: 8)
!2060 = !DILocation(line: 250, column: 9, scope: !2055)
!2061 = !DILocalVariable(name: "_unsafe_arg", scope: !2062, file: !1880, line: 259, type: !2168, align: 1)
!2062 = !DILexicalBlockFile(scope: !2063, file: !1880, discriminator: 0)
!2063 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt9Arguments16new_v1_formatted17h586fb567c4577c70E", scope: !2065, file: !2064, line: 410, type: !2166, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2171)
!2064 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "18dcc19de419985ae78d2bd8ed07e5dc")
!2065 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !279, file: !2, size: 384, align: 64, elements: !2066, templateParams: !23, identifier: "7e7034295abae01651800c8eb0e9b712")
!2066 = !{!2067, !2073, !2118}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !2065, file: !2, baseType: !2068, size: 128, align: 64)
!2068 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !2069, templateParams: !23, identifier: "120d786d314e2730a5f45c5e7e56f7d")
!2069 = !{!2070, !2072}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2068, file: !2, baseType: !2071, size: 64, align: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64, align: 64, dwarfAddressSpace: 0)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2068, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !2065, file: !2, baseType: !2074, size: 128, align: 64, offset: 128)
!2074 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !177, file: !2, size: 128, align: 64, elements: !2075, templateParams: !23, identifier: "bb69cbb99024f47dbb54317ba8130317")
!2075 = !{!2076}
!2076 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2074, file: !2, size: 128, align: 64, elements: !2077, templateParams: !23, identifier: "ce02297fe7dbf35f547cc88f131a39b4", discriminator: !2117)
!2077 = !{!2078, !2113}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2076, file: !2, baseType: !2079, size: 128, align: 64, extraData: i64 0)
!2079 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2074, file: !2, size: 128, align: 64, elements: !23, templateParams: !2080, identifier: "742dbe7e160661d8ca36fcfff2574850")
!2080 = !{!2081}
!2081 = !DITemplateTypeParameter(name: "T", type: !2082)
!2082 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !2083, templateParams: !23, identifier: "5ac19a4b2fedc0a38075c82d3d698a2e")
!2083 = !{!2084, !2112}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2082, file: !2, baseType: !2085, size: 64, align: 64)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64, align: 64, dwarfAddressSpace: 0)
!2086 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !277, file: !2, size: 448, align: 64, elements: !2087, templateParams: !23, identifier: "fbba22b504f631aebebe5f9a731b4661")
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !2086, file: !2, baseType: !9, size: 64, align: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2086, file: !2, baseType: !2090, size: 384, align: 64, offset: 64)
!2090 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !277, file: !2, size: 384, align: 64, elements: !2091, templateParams: !23, identifier: "a89ae7a13a1def66296bab98052f520a")
!2091 = !{!2092, !2093, !2094, !2095, !2111}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !2090, file: !2, baseType: !534, size: 32, align: 32, offset: 256)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2090, file: !2, baseType: !276, size: 8, align: 8, offset: 320)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2090, file: !2, baseType: !351, size: 32, align: 32, offset: 288)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2090, file: !2, baseType: !2096, size: 128, align: 64)
!2096 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !277, file: !2, size: 128, align: 64, elements: !2097, templateParams: !23, identifier: "41c6e2a1db95b605a371a090678c1fd8")
!2097 = !{!2098}
!2098 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2096, file: !2, size: 128, align: 64, elements: !2099, templateParams: !23, identifier: "eff7cdccebc4ba23639a28669cbce86", discriminator: !2110)
!2099 = !{!2100, !2104, !2108}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !2098, file: !2, baseType: !2101, size: 128, align: 64, extraData: i64 0)
!2101 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !2096, file: !2, size: 128, align: 64, elements: !2102, templateParams: !23, identifier: "927d86c22d9994b767e51a58b20493")
!2102 = !{!2103}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2101, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !2098, file: !2, baseType: !2105, size: 128, align: 64, extraData: i64 1)
!2105 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !2096, file: !2, size: 128, align: 64, elements: !2106, templateParams: !23, identifier: "ce4b8bb3a4200a86c4c06a7570d8ee71")
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2105, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !2098, file: !2, baseType: !2109, size: 128, align: 64, extraData: i64 2)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !2096, file: !2, size: 128, align: 64, elements: !23, identifier: "b155566b9bd0239ef48aa3b8bcdef75b")
!2110 = !DIDerivedType(tag: DW_TAG_member, scope: !2096, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2090, file: !2, baseType: !2096, size: 128, align: 64, offset: 128)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2082, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2076, file: !2, baseType: !2114, size: 128, align: 64)
!2114 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2074, file: !2, size: 128, align: 64, elements: !2115, templateParams: !2080, identifier: "17f2fc106094349c7673abca4839c97a")
!2115 = !{!2116}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2114, file: !2, baseType: !2082, size: 128, align: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, scope: !2074, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2065, file: !2, baseType: !2119, size: 128, align: 64, offset: 256)
!2119 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !2120, templateParams: !23, identifier: "c78588d5439c4eaa18fbaab99f079cbf")
!2120 = !{!2121, !2165}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2119, file: !2, baseType: !2122, size: 64, align: 64)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64, align: 64, dwarfAddressSpace: 0)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !279, file: !2, size: 128, align: 64, elements: !2124, templateParams: !23, identifier: "753c369e46bf484710f4d769a3fba395")
!2124 = !{!2125, !2129}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2123, file: !2, baseType: !2126, size: 64, align: 64)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !2127, size: 64, align: 64, dwarfAddressSpace: 0)
!2127 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !2128, file: !2, align: 8, elements: !23, identifier: "83e8d27b51d2e55ae9422e57e00c6cd7")
!2128 = !DINamespace(name: "{extern#0}", scope: !279)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !2123, file: !2, baseType: !2130, size: 64, align: 64, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2131, size: 64, align: 64, dwarfAddressSpace: 0)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!2133, !2126, !2150}
!2133 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !2134, file: !2, size: 8, align: 8, elements: !2135, templateParams: !23, identifier: "d239d58a8e95223cd52e3ad2c36d40d7")
!2134 = !DINamespace(name: "result", scope: !44)
!2135 = !{!2136}
!2136 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2133, file: !2, size: 8, align: 8, elements: !2137, templateParams: !23, identifier: "1fa2591b965a13cd50e38802b1727ca", discriminator: !2149)
!2137 = !{!2138, !2145}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2136, file: !2, baseType: !2139, size: 8, align: 8, extraData: i64 0)
!2139 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2133, file: !2, size: 8, align: 8, elements: !2140, templateParams: !2142, identifier: "cea751326735c343faf647063a65ad14")
!2140 = !{!2141}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2139, file: !2, baseType: !7, align: 8, offset: 8)
!2142 = !{!48, !2143}
!2143 = !DITemplateTypeParameter(name: "E", type: !2144)
!2144 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !279, file: !2, align: 8, elements: !23, identifier: "87e319c059f1d372f32b0a49f33ec3cc")
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2136, file: !2, baseType: !2146, size: 8, align: 8, extraData: i64 1)
!2146 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2133, file: !2, size: 8, align: 8, elements: !2147, templateParams: !2142, identifier: "6c6eb84ed910506586b60ba90dbaa2c")
!2147 = !{!2148}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2146, file: !2, baseType: !2144, align: 8, offset: 8)
!2149 = !DIDerivedType(tag: DW_TAG_member, scope: !2133, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagArtificial)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !2151, size: 64, align: 64, dwarfAddressSpace: 0)
!2151 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !279, file: !2, size: 512, align: 64, elements: !2152, templateParams: !23, identifier: "6e9ffaec9b89ebb810272bb66e7b2042")
!2152 = !{!2153, !2154, !2155, !2156, !2157, !2158}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2151, file: !2, baseType: !351, size: 32, align: 32, offset: 384)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !2151, file: !2, baseType: !534, size: 32, align: 32, offset: 416)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2151, file: !2, baseType: !276, size: 8, align: 8, offset: 448)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2151, file: !2, baseType: !455, size: 128, align: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2151, file: !2, baseType: !455, size: 128, align: 64, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2151, file: !2, baseType: !2159, size: 128, align: 64, offset: 256)
!2159 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !2160, templateParams: !23, identifier: "3d4f80cd5361aaff4f795dd09efb8db1")
!2160 = !{!2161, !2164}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2159, file: !2, baseType: !2162, size: 64, align: 64)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64, align: 64, dwarfAddressSpace: 0)
!2163 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !23, identifier: "abb712b259efc5e79bb67900edf24920")
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2159, file: !2, baseType: !120, size: 64, align: 64, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2119, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!2065, !2068, !2119, !2082, !2168}
!2168 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeArg", scope: !279, file: !2, align: 8, elements: !2169, templateParams: !23, identifier: "5672b6012e25576f721c1f767a829851")
!2169 = !{!2170}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !2168, file: !2, baseType: !7, align: 8)
!2171 = !{!2172, !2173, !2174, !2061}
!2172 = !DILocalVariable(name: "pieces", scope: !2062, file: !1880, line: 259, type: !2068, align: 8)
!2173 = !DILocalVariable(name: "args", scope: !2062, file: !1880, line: 259, type: !2119, align: 8)
!2174 = !DILocalVariable(name: "fmt", scope: !2062, file: !1880, line: 259, type: !2082, align: 8)
!2175 = !DILocation(line: 259, column: 17, scope: !2062, inlinedAt: !2176)
!2176 = !DILocation(line: 57, column: 38, scope: !2177)
!2177 = !DILexicalBlockFile(scope: !2055, file: !2178, discriminator: 0)
!2178 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "fdc6e43203342ea3dc7947f5f0419604")
!2179 = !DILocation(line: 266, column: 17, scope: !2180, inlinedAt: !2182)
!2180 = !DILexicalBlockFile(scope: !2181, file: !1880, discriminator: 0)
!2181 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!2182 = !DILocation(line: 266, column: 17, scope: !2055)
!2183 = distinct !DISubprogram(name: "kind_from_prim", linkageName: "_ZN3std2io5error14repr_bitpacked14kind_from_prim17h5c18ff44e4b611d2E", scope: !38, file: !1880, line: 289, type: !2184, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2186)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{!1909, !351}
!2186 = !{!2187, !2188, !2190, !2192, !2194, !2195, !2197, !2198, !2200, !2201, !2203, !2204, !2206, !2207, !2209, !2210, !2212, !2213, !2215, !2216, !2218, !2219, !2221, !2222, !2224, !2225, !2227, !2228, !2230, !2231, !2233, !2234, !2236, !2237, !2239, !2240, !2242, !2243, !2245, !2246, !2248, !2249, !2251, !2252, !2254, !2255, !2257, !2258, !2260, !2261, !2263, !2264, !2266, !2267, !2269, !2270, !2272, !2273, !2275, !2276, !2278, !2279, !2281, !2282, !2284, !2285, !2287, !2288, !2290, !2291, !2293, !2294, !2296, !2297, !2299, !2300, !2302, !2303, !2305, !2306, !2308, !2309, !2311}
!2187 = !DILocalVariable(name: "ek", arg: 1, scope: !2183, file: !1880, line: 289, type: !351)
!2188 = !DILocalVariable(name: "v", scope: !2189, file: !1880, line: 302, type: !351, align: 4)
!2189 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2190 = !DILocalVariable(name: "v", scope: !2189, file: !1880, line: 302, type: !2191, align: 8)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !351, size: 64, align: 64, dwarfAddressSpace: 0)
!2192 = !DILocalVariable(name: "v", scope: !2193, file: !1880, line: 302, type: !351, align: 4)
!2193 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2194 = !DILocalVariable(name: "v", scope: !2193, file: !1880, line: 302, type: !2191, align: 8)
!2195 = !DILocalVariable(name: "v", scope: !2196, file: !1880, line: 302, type: !351, align: 4)
!2196 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2197 = !DILocalVariable(name: "v", scope: !2196, file: !1880, line: 302, type: !2191, align: 8)
!2198 = !DILocalVariable(name: "v", scope: !2199, file: !1880, line: 302, type: !351, align: 4)
!2199 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2200 = !DILocalVariable(name: "v", scope: !2199, file: !1880, line: 302, type: !2191, align: 8)
!2201 = !DILocalVariable(name: "v", scope: !2202, file: !1880, line: 302, type: !351, align: 4)
!2202 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2203 = !DILocalVariable(name: "v", scope: !2202, file: !1880, line: 302, type: !2191, align: 8)
!2204 = !DILocalVariable(name: "v", scope: !2205, file: !1880, line: 302, type: !351, align: 4)
!2205 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2206 = !DILocalVariable(name: "v", scope: !2205, file: !1880, line: 302, type: !2191, align: 8)
!2207 = !DILocalVariable(name: "v", scope: !2208, file: !1880, line: 302, type: !351, align: 4)
!2208 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2209 = !DILocalVariable(name: "v", scope: !2208, file: !1880, line: 302, type: !2191, align: 8)
!2210 = !DILocalVariable(name: "v", scope: !2211, file: !1880, line: 302, type: !351, align: 4)
!2211 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2212 = !DILocalVariable(name: "v", scope: !2211, file: !1880, line: 302, type: !2191, align: 8)
!2213 = !DILocalVariable(name: "v", scope: !2214, file: !1880, line: 302, type: !351, align: 4)
!2214 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2215 = !DILocalVariable(name: "v", scope: !2214, file: !1880, line: 302, type: !2191, align: 8)
!2216 = !DILocalVariable(name: "v", scope: !2217, file: !1880, line: 302, type: !351, align: 4)
!2217 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2218 = !DILocalVariable(name: "v", scope: !2217, file: !1880, line: 302, type: !2191, align: 8)
!2219 = !DILocalVariable(name: "v", scope: !2220, file: !1880, line: 302, type: !351, align: 4)
!2220 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2221 = !DILocalVariable(name: "v", scope: !2220, file: !1880, line: 302, type: !2191, align: 8)
!2222 = !DILocalVariable(name: "v", scope: !2223, file: !1880, line: 302, type: !351, align: 4)
!2223 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2224 = !DILocalVariable(name: "v", scope: !2223, file: !1880, line: 302, type: !2191, align: 8)
!2225 = !DILocalVariable(name: "v", scope: !2226, file: !1880, line: 302, type: !351, align: 4)
!2226 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2227 = !DILocalVariable(name: "v", scope: !2226, file: !1880, line: 302, type: !2191, align: 8)
!2228 = !DILocalVariable(name: "v", scope: !2229, file: !1880, line: 302, type: !351, align: 4)
!2229 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2230 = !DILocalVariable(name: "v", scope: !2229, file: !1880, line: 302, type: !2191, align: 8)
!2231 = !DILocalVariable(name: "v", scope: !2232, file: !1880, line: 302, type: !351, align: 4)
!2232 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2233 = !DILocalVariable(name: "v", scope: !2232, file: !1880, line: 302, type: !2191, align: 8)
!2234 = !DILocalVariable(name: "v", scope: !2235, file: !1880, line: 302, type: !351, align: 4)
!2235 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2236 = !DILocalVariable(name: "v", scope: !2235, file: !1880, line: 302, type: !2191, align: 8)
!2237 = !DILocalVariable(name: "v", scope: !2238, file: !1880, line: 302, type: !351, align: 4)
!2238 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2239 = !DILocalVariable(name: "v", scope: !2238, file: !1880, line: 302, type: !2191, align: 8)
!2240 = !DILocalVariable(name: "v", scope: !2241, file: !1880, line: 302, type: !351, align: 4)
!2241 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2242 = !DILocalVariable(name: "v", scope: !2241, file: !1880, line: 302, type: !2191, align: 8)
!2243 = !DILocalVariable(name: "v", scope: !2244, file: !1880, line: 302, type: !351, align: 4)
!2244 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2245 = !DILocalVariable(name: "v", scope: !2244, file: !1880, line: 302, type: !2191, align: 8)
!2246 = !DILocalVariable(name: "v", scope: !2247, file: !1880, line: 302, type: !351, align: 4)
!2247 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2248 = !DILocalVariable(name: "v", scope: !2247, file: !1880, line: 302, type: !2191, align: 8)
!2249 = !DILocalVariable(name: "v", scope: !2250, file: !1880, line: 302, type: !351, align: 4)
!2250 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2251 = !DILocalVariable(name: "v", scope: !2250, file: !1880, line: 302, type: !2191, align: 8)
!2252 = !DILocalVariable(name: "v", scope: !2253, file: !1880, line: 302, type: !351, align: 4)
!2253 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2254 = !DILocalVariable(name: "v", scope: !2253, file: !1880, line: 302, type: !2191, align: 8)
!2255 = !DILocalVariable(name: "v", scope: !2256, file: !1880, line: 302, type: !351, align: 4)
!2256 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2257 = !DILocalVariable(name: "v", scope: !2256, file: !1880, line: 302, type: !2191, align: 8)
!2258 = !DILocalVariable(name: "v", scope: !2259, file: !1880, line: 302, type: !351, align: 4)
!2259 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2260 = !DILocalVariable(name: "v", scope: !2259, file: !1880, line: 302, type: !2191, align: 8)
!2261 = !DILocalVariable(name: "v", scope: !2262, file: !1880, line: 302, type: !351, align: 4)
!2262 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2263 = !DILocalVariable(name: "v", scope: !2262, file: !1880, line: 302, type: !2191, align: 8)
!2264 = !DILocalVariable(name: "v", scope: !2265, file: !1880, line: 302, type: !351, align: 4)
!2265 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2266 = !DILocalVariable(name: "v", scope: !2265, file: !1880, line: 302, type: !2191, align: 8)
!2267 = !DILocalVariable(name: "v", scope: !2268, file: !1880, line: 302, type: !351, align: 4)
!2268 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2269 = !DILocalVariable(name: "v", scope: !2268, file: !1880, line: 302, type: !2191, align: 8)
!2270 = !DILocalVariable(name: "v", scope: !2271, file: !1880, line: 302, type: !351, align: 4)
!2271 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2272 = !DILocalVariable(name: "v", scope: !2271, file: !1880, line: 302, type: !2191, align: 8)
!2273 = !DILocalVariable(name: "v", scope: !2274, file: !1880, line: 302, type: !351, align: 4)
!2274 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2275 = !DILocalVariable(name: "v", scope: !2274, file: !1880, line: 302, type: !2191, align: 8)
!2276 = !DILocalVariable(name: "v", scope: !2277, file: !1880, line: 302, type: !351, align: 4)
!2277 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2278 = !DILocalVariable(name: "v", scope: !2277, file: !1880, line: 302, type: !2191, align: 8)
!2279 = !DILocalVariable(name: "v", scope: !2280, file: !1880, line: 302, type: !351, align: 4)
!2280 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2281 = !DILocalVariable(name: "v", scope: !2280, file: !1880, line: 302, type: !2191, align: 8)
!2282 = !DILocalVariable(name: "v", scope: !2283, file: !1880, line: 302, type: !351, align: 4)
!2283 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2284 = !DILocalVariable(name: "v", scope: !2283, file: !1880, line: 302, type: !2191, align: 8)
!2285 = !DILocalVariable(name: "v", scope: !2286, file: !1880, line: 302, type: !351, align: 4)
!2286 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2287 = !DILocalVariable(name: "v", scope: !2286, file: !1880, line: 302, type: !2191, align: 8)
!2288 = !DILocalVariable(name: "v", scope: !2289, file: !1880, line: 302, type: !351, align: 4)
!2289 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2290 = !DILocalVariable(name: "v", scope: !2289, file: !1880, line: 302, type: !2191, align: 8)
!2291 = !DILocalVariable(name: "v", scope: !2292, file: !1880, line: 302, type: !351, align: 4)
!2292 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2293 = !DILocalVariable(name: "v", scope: !2292, file: !1880, line: 302, type: !2191, align: 8)
!2294 = !DILocalVariable(name: "v", scope: !2295, file: !1880, line: 302, type: !351, align: 4)
!2295 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2296 = !DILocalVariable(name: "v", scope: !2295, file: !1880, line: 302, type: !2191, align: 8)
!2297 = !DILocalVariable(name: "v", scope: !2298, file: !1880, line: 302, type: !351, align: 4)
!2298 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2299 = !DILocalVariable(name: "v", scope: !2298, file: !1880, line: 302, type: !2191, align: 8)
!2300 = !DILocalVariable(name: "v", scope: !2301, file: !1880, line: 302, type: !351, align: 4)
!2301 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2302 = !DILocalVariable(name: "v", scope: !2301, file: !1880, line: 302, type: !2191, align: 8)
!2303 = !DILocalVariable(name: "v", scope: !2304, file: !1880, line: 302, type: !351, align: 4)
!2304 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2305 = !DILocalVariable(name: "v", scope: !2304, file: !1880, line: 302, type: !2191, align: 8)
!2306 = !DILocalVariable(name: "v", scope: !2307, file: !1880, line: 302, type: !351, align: 4)
!2307 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2308 = !DILocalVariable(name: "v", scope: !2307, file: !1880, line: 302, type: !2191, align: 8)
!2309 = !DILocalVariable(name: "v", scope: !2310, file: !1880, line: 302, type: !351, align: 4)
!2310 = distinct !DILexicalBlock(scope: !2183, file: !1880, line: 297, column: 19)
!2311 = !DILocalVariable(name: "v", scope: !2310, file: !1880, line: 302, type: !2191, align: 8)
!2312 = !DILocation(line: 289, column: 19, scope: !2183)
!2313 = !DILocation(line: 302, column: 5, scope: !2183)
!2314 = !DILocation(line: 302, column: 5, scope: !2189)
!2315 = !DILocation(line: 302, column: 5, scope: !2193)
!2316 = !DILocation(line: 345, column: 2, scope: !2183)
!2317 = !DILocation(line: 302, column: 5, scope: !2196)
!2318 = !DILocation(line: 302, column: 5, scope: !2199)
!2319 = !DILocation(line: 302, column: 5, scope: !2202)
!2320 = !DILocation(line: 302, column: 5, scope: !2205)
!2321 = !DILocation(line: 302, column: 5, scope: !2208)
!2322 = !DILocation(line: 302, column: 5, scope: !2211)
!2323 = !DILocation(line: 302, column: 5, scope: !2214)
!2324 = !DILocation(line: 302, column: 5, scope: !2217)
!2325 = !DILocation(line: 302, column: 5, scope: !2220)
!2326 = !DILocation(line: 302, column: 5, scope: !2223)
!2327 = !DILocation(line: 302, column: 5, scope: !2226)
!2328 = !DILocation(line: 302, column: 5, scope: !2229)
!2329 = !DILocation(line: 302, column: 5, scope: !2232)
!2330 = !DILocation(line: 302, column: 5, scope: !2235)
!2331 = !DILocation(line: 302, column: 5, scope: !2238)
!2332 = !DILocation(line: 302, column: 5, scope: !2241)
!2333 = !DILocation(line: 302, column: 5, scope: !2244)
!2334 = !DILocation(line: 302, column: 5, scope: !2247)
!2335 = !DILocation(line: 302, column: 5, scope: !2250)
!2336 = !DILocation(line: 302, column: 5, scope: !2253)
!2337 = !DILocation(line: 302, column: 5, scope: !2256)
!2338 = !DILocation(line: 302, column: 5, scope: !2259)
!2339 = !DILocation(line: 302, column: 5, scope: !2262)
!2340 = !DILocation(line: 302, column: 5, scope: !2265)
!2341 = !DILocation(line: 302, column: 5, scope: !2268)
!2342 = !DILocation(line: 302, column: 5, scope: !2271)
!2343 = !DILocation(line: 302, column: 5, scope: !2274)
!2344 = !DILocation(line: 302, column: 5, scope: !2277)
!2345 = !DILocation(line: 302, column: 5, scope: !2280)
!2346 = !DILocation(line: 302, column: 5, scope: !2283)
!2347 = !DILocation(line: 302, column: 5, scope: !2286)
!2348 = !DILocation(line: 302, column: 5, scope: !2289)
!2349 = !DILocation(line: 302, column: 5, scope: !2292)
!2350 = !DILocation(line: 302, column: 5, scope: !2295)
!2351 = !DILocation(line: 302, column: 5, scope: !2298)
!2352 = !DILocation(line: 302, column: 5, scope: !2301)
!2353 = !DILocation(line: 302, column: 5, scope: !2304)
!2354 = !DILocation(line: 302, column: 5, scope: !2307)
!2355 = !DILocation(line: 302, column: 5, scope: !2310)
!2356 = distinct !DISubprogram(name: "lang_start<()>", linkageName: "_ZN3std2rt10lang_start17h29b804ca370f3f45E", scope: !16, file: !2357, line: 139, type: !2358, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !2361)
!2357 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "53ba40c54b421907f2e3ab22fb96d5b4")
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!868, !20, !868, !2360}
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const u8", baseType: !329, size: 64, align: 64, dwarfAddressSpace: 0)
!2361 = !{!2362, !2363, !2364, !2365}
!2362 = !DILocalVariable(name: "main", arg: 1, scope: !2356, file: !2357, line: 140, type: !20)
!2363 = !DILocalVariable(name: "argc", arg: 2, scope: !2356, file: !2357, line: 141, type: !868)
!2364 = !DILocalVariable(name: "argv", arg: 3, scope: !2356, file: !2357, line: 142, type: !2360)
!2365 = !DILocalVariable(name: "v", scope: !2366, file: !2357, line: 144, type: !868, align: 8)
!2366 = distinct !DILexicalBlock(scope: !2356, file: !2357, line: 144, column: 5)
!2367 = !DILocation(line: 140, column: 5, scope: !2356)
!2368 = !DILocation(line: 141, column: 5, scope: !2356)
!2369 = !DILocation(line: 142, column: 5, scope: !2356)
!2370 = !DILocation(line: 145, column: 10, scope: !2356)
!2371 = !DILocation(line: 145, column: 9, scope: !2356)
!2372 = !DILocation(line: 144, column: 17, scope: !2356)
!2373 = !DILocation(line: 144, column: 12, scope: !2356)
!2374 = !DILocation(line: 144, column: 12, scope: !2366)
!2375 = !DILocation(line: 150, column: 2, scope: !2356)
!2376 = distinct !DISubprogram(name: "{closure#0}<()>", linkageName: "_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha250cad3a78ce847E", scope: !15, file: !2357, line: 145, type: !2377, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !2380)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!62, !2379}
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!2380 = !{!2381}
!2381 = !DILocalVariable(name: "main", scope: !2376, file: !2357, line: 140, type: !20, align: 8)
!2382 = !DILocation(line: 140, column: 5, scope: !2376)
!2383 = !DILocalVariable(name: "self", scope: !2384, file: !2357, line: 145, type: !2387, align: 1)
!2384 = !DILexicalBlockFile(scope: !2385, file: !2357, discriminator: 0)
!2385 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217h35f09b80b9538d63E", scope: !2387, file: !2386, line: 1808, type: !2396, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2398)
!2386 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/process.rs", directory: "", checksumkind: CSK_MD5, checksum: "78747cd94138b7f073ffd16b64787cb4")
!2387 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !2388, file: !2, size: 8, align: 8, elements: !2389, templateParams: !23, identifier: "65270507d071436c1dbdf6fde69e5261")
!2388 = !DINamespace(name: "process", scope: !17)
!2389 = !{!2390}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2387, file: !2, baseType: !2391, size: 8, align: 8)
!2391 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !2392, file: !2, size: 8, align: 8, elements: !2394, templateParams: !23, identifier: "faca173619846f0e95e842844eb5af74")
!2392 = !DINamespace(name: "process_common", scope: !2393)
!2393 = !DINamespace(name: "process", scope: !1383)
!2394 = !{!2395}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2391, file: !2, baseType: !70, size: 8, align: 8)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!62, !2387}
!2398 = !{!2383}
!2399 = !DILocation(line: 145, column: 18, scope: !2384, inlinedAt: !2400)
!2400 = !DILocation(line: 145, column: 18, scope: !2376)
!2401 = !DILocation(line: 145, column: 77, scope: !2376)
!2402 = !DILocalVariable(name: "self", scope: !2403, file: !2357, line: 145, type: !2408, align: 8)
!2403 = !DILexicalBlockFile(scope: !2404, file: !2357, discriminator: 0)
!2404 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217ha044b0b039643492E", scope: !2391, file: !2405, line: 485, type: !2406, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2409)
!2405 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys/unix/process/process_common.rs", directory: "", checksumkind: CSK_MD5, checksum: "0172c472c69d772c784713c132680582")
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!62, !2408}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::sys::unix::process::process_common::ExitCode", baseType: !2391, size: 64, align: 64, dwarfAddressSpace: 0)
!2409 = !{!2402}
!2410 = !DILocation(line: 145, column: 18, scope: !2403, inlinedAt: !2411)
!2411 = !DILocation(line: 1809, column: 9, scope: !2385, inlinedAt: !2400)
!2412 = !DILocation(line: 145, column: 17, scope: !2376)
!2413 = distinct !DISubprogram(name: "var<&str>", linkageName: "_ZN3std3env3var17h2dff9daebbbe2e5bE", scope: !2415, file: !2414, line: 227, type: !2416, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2447, retainedNodes: !2445)
!2414 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/env.rs", directory: "", checksumkind: CSK_MD5, checksum: "eb997a355b779581a425ead6cf0f1655")
!2415 = !DINamespace(name: "env", scope: !17)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!2418, !137}
!2418 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, std::env::VarError>", scope: !2134, file: !2, size: 256, align: 64, elements: !2419, templateParams: !23, identifier: "9da194dcd2e8a907c7caf65024e0ab70")
!2419 = !{!2420}
!2420 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2418, file: !2, size: 256, align: 64, elements: !2421, templateParams: !23, identifier: "67d33dd83d30ba516447755a15c2196e", discriminator: !2444)
!2421 = !{!2422, !2440}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2420, file: !2, baseType: !2423, size: 256, align: 64, extraData: i64 0)
!2423 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2418, file: !2, size: 256, align: 64, elements: !2424, templateParams: !2426, identifier: "fd7f466dc79accaee53dfe299afb7b7b")
!2424 = !{!2425}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2423, file: !2, baseType: !312, size: 192, align: 64, offset: 64)
!2426 = !{!2427, !2428}
!2427 = !DITemplateTypeParameter(name: "T", type: !312)
!2428 = !DITemplateTypeParameter(name: "E", type: !2429)
!2429 = !DICompositeType(tag: DW_TAG_structure_type, name: "VarError", scope: !2415, file: !2, size: 192, align: 64, elements: !2430, templateParams: !23, identifier: "8046a220ebaf00ea9dba1b36877933c")
!2430 = !{!2431}
!2431 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2429, file: !2, size: 192, align: 64, elements: !2432, templateParams: !23, identifier: "6a13e0b48b8114a51dcf4b3ba20dd95a", discriminator: !2439)
!2432 = !{!2433, !2435}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "NotPresent", scope: !2431, file: !2, baseType: !2434, size: 192, align: 64, extraData: i64 0)
!2434 = !DICompositeType(tag: DW_TAG_structure_type, name: "NotPresent", scope: !2429, file: !2, size: 192, align: 64, elements: !23, identifier: "1451b8589f47f6e42a9c4255dedfaba5")
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "NotUnicode", scope: !2431, file: !2, baseType: !2436, size: 192, align: 64)
!2436 = !DICompositeType(tag: DW_TAG_structure_type, name: "NotUnicode", scope: !2429, file: !2, size: 192, align: 64, elements: !2437, templateParams: !23, identifier: "5456c1511e4ce8fdf30239994548b8c")
!2437 = !{!2438}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2436, file: !2, baseType: !1376, size: 192, align: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, scope: !2429, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2420, file: !2, baseType: !2441, size: 256, align: 64, extraData: i64 1)
!2441 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2418, file: !2, size: 256, align: 64, elements: !2442, templateParams: !2426, identifier: "984b1f1caf58cf187a683936db1c3281")
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2441, file: !2, baseType: !2429, size: 192, align: 64, offset: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, scope: !2418, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!2445 = !{!2446}
!2446 = !DILocalVariable(name: "key", arg: 1, scope: !2413, file: !2414, line: 227, type: !137)
!2447 = !{!2448}
!2448 = !DITemplateTypeParameter(name: "K", type: !137)
!2449 = !DILocation(line: 227, column: 29, scope: !2413)
!2450 = !DILocation(line: 228, column: 10, scope: !2413)
!2451 = !DILocation(line: 229, column: 1, scope: !2413)
!2452 = !DILocation(line: 228, column: 5, scope: !2413)
!2453 = !DILocation(line: 227, column: 1, scope: !2413)
!2454 = !DILocation(line: 229, column: 2, scope: !2413)
!2455 = distinct !DISubprogram(name: "var_os<&str>", linkageName: "_ZN3std3env6var_os17h9497c5a252de7612E", scope: !2415, file: !2414, line: 268, type: !2456, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2447, retainedNodes: !2458)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!1388, !137}
!2458 = !{!2459}
!2459 = !DILocalVariable(name: "key", arg: 1, scope: !2455, file: !2414, line: 268, type: !137)
!2460 = !DILocation(line: 268, column: 32, scope: !2455)
!2461 = !DILocation(line: 269, column: 13, scope: !2455)
!2462 = !DILocation(line: 270, column: 1, scope: !2455)
!2463 = !DILocation(line: 269, column: 5, scope: !2455)
!2464 = !DILocation(line: 268, column: 1, scope: !2455)
!2465 = !DILocation(line: 270, column: 2, scope: !2455)
!2466 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN3std3ffi6os_str5OsStr8is_empty17h6fb2cce940f29d11E", scope: !2468, file: !2467, line: 794, type: !2474, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2481)
!2467 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/ffi/os_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "f63792bdff3c842d27d18548a318faba")
!2468 = !DICompositeType(tag: DW_TAG_structure_type, name: "OsStr", scope: !1377, file: !2, align: 8, elements: !2469, templateParams: !23, identifier: "d7ab7c08a026e413156c261f0070868e")
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2468, file: !2, baseType: !2471, align: 8)
!2471 = !DICompositeType(tag: DW_TAG_structure_type, name: "Slice", scope: !1382, file: !2, align: 8, elements: !2472, templateParams: !23, identifier: "ba965fbd54122a7c6da1f1397881640d")
!2472 = !{!2473}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2471, file: !2, baseType: !70, align: 8)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!1159, !2476}
!2476 = !DICompositeType(tag: DW_TAG_structure_type, name: "&std::ffi::os_str::OsStr", file: !2, size: 128, align: 64, elements: !2477, templateParams: !23, identifier: "fef8c08dcda0f23e48d70feea0d90921")
!2477 = !{!2478, !2480}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2476, file: !2, baseType: !2479, size: 64, align: 64)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64, align: 64, dwarfAddressSpace: 0)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2476, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2481 = !{!2482}
!2482 = !DILocalVariable(name: "self", arg: 1, scope: !2466, file: !2467, line: 794, type: !2476)
!2483 = !DILocation(line: 794, column: 21, scope: !2466)
!2484 = !DILocation(line: 795, column: 9, scope: !2466)
!2485 = !DILocalVariable(name: "self", scope: !2486, file: !2467, line: 795, type: !366, align: 8)
!2486 = !DILexicalBlockFile(scope: !2487, file: !2467, discriminator: 0)
!2487 = distinct !DISubprogram(name: "is_empty<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h540aadfb8b0f84fbE", scope: !2489, file: !2488, line: 152, type: !2490, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !2492)
!2488 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!2489 = !DINamespace(name: "{impl#0}", scope: !378)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!1159, !366}
!2492 = !{!2485}
!2493 = !DILocation(line: 795, column: 9, scope: !2486, inlinedAt: !2484)
!2494 = !DILocation(line: 796, column: 6, scope: !2466)
!2495 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h710673d6632e9c0eE", scope: !2496, file: !2467, line: 1320, type: !2497, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2499)
!2496 = !DINamespace(name: "{impl#54}", scope: !1377)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{!2476, !137}
!2499 = !{!2500}
!2500 = !DILocalVariable(name: "self", arg: 1, scope: !2495, file: !2467, line: 1320, type: !137)
!2501 = !DILocation(line: 1320, column: 15, scope: !2495)
!2502 = !DILocation(line: 1321, column: 43, scope: !2495)
!2503 = !DILocalVariable(name: "s", scope: !2504, file: !2467, line: 1321, type: !137, align: 8)
!2504 = !DILexicalBlockFile(scope: !2505, file: !2467, discriminator: 0)
!2505 = distinct !DISubprogram(name: "from_str", linkageName: "_ZN3std3sys4unix6os_str5Slice8from_str17h21961f86b2d7dbeaE", scope: !2471, file: !2506, line: 194, type: !2507, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2514)
!2506 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys/unix/os_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "3fffa48778a70506c3ad2634683a31ef")
!2507 = !DISubroutineType(types: !2508)
!2508 = !{!2509, !137}
!2509 = !DICompositeType(tag: DW_TAG_structure_type, name: "&std::sys::unix::os_str::Slice", file: !2, size: 128, align: 64, elements: !2510, templateParams: !23, identifier: "2dd56a3fa8c8a8c4ca1c1709f6681255")
!2510 = !{!2511, !2513}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2509, file: !2, baseType: !2512, size: 64, align: 64)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64, align: 64, dwarfAddressSpace: 0)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2509, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2514 = !{!2503}
!2515 = !DILocation(line: 1321, column: 27, scope: !2504, inlinedAt: !2516)
!2516 = !DILocation(line: 1321, column: 27, scope: !2495)
!2517 = !DILocalVariable(name: "self", scope: !2518, file: !2467, line: 1321, type: !137, align: 8)
!2518 = !DILexicalBlockFile(scope: !2519, file: !2467, discriminator: 0)
!2519 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2523)
!2520 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd49fcee40af5f348df1f9868b20cc92")
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!366, !137}
!2523 = !{!2517}
!2524 = !DILocation(line: 1321, column: 27, scope: !2518, inlinedAt: !2525)
!2525 = !DILocation(line: 195, column: 30, scope: !2505, inlinedAt: !2516)
!2526 = !DILocalVariable(name: "s", scope: !2527, file: !2467, line: 1321, type: !366, align: 8)
!2527 = !DILexicalBlockFile(scope: !2528, file: !2467, discriminator: 0)
!2528 = distinct !DISubprogram(name: "from_u8_slice", linkageName: "_ZN3std3sys4unix6os_str5Slice13from_u8_slice17hb99bce00a8b4ff3aE", scope: !2471, file: !2506, line: 189, type: !2529, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2531)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!2509, !366}
!2531 = !{!2526}
!2532 = !DILocation(line: 1321, column: 27, scope: !2527, inlinedAt: !2533)
!2533 = !DILocation(line: 195, column: 9, scope: !2505, inlinedAt: !2516)
!2534 = !DILocalVariable(name: "inner", scope: !2535, file: !2467, line: 1321, type: !2509, align: 8)
!2535 = distinct !DISubprogram(name: "from_inner", linkageName: "_ZN3std3ffi6os_str5OsStr10from_inner17hdedc03f1dd08ee10E", scope: !2468, file: !2467, line: 671, type: !2536, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2538)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{!2476, !2509}
!2538 = !{!2534}
!2539 = !DILocation(line: 1321, column: 9, scope: !2535, inlinedAt: !2540)
!2540 = !DILocation(line: 1321, column: 9, scope: !2495)
!2541 = !DILocation(line: 1322, column: 6, scope: !2495)
!2542 = distinct !DISubprogram(name: "as_slice", linkageName: "_ZN3std3sys4unix6os_str3Buf8as_slice17h577f94a0cba317dcE", scope: !1381, file: !2506, line: 142, type: !2543, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2546)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!2509, !2545}
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::sys::unix::os_str::Buf", baseType: !1381, size: 64, align: 64, dwarfAddressSpace: 0)
!2546 = !{!2547}
!2547 = !DILocalVariable(name: "self", arg: 1, scope: !2542, file: !2506, line: 142, type: !2545)
!2548 = !DILocation(line: 142, column: 21, scope: !2542)
!2549 = !DILocation(line: 146, column: 35, scope: !2542)
!2550 = !DILocalVariable(name: "self", scope: !2551, file: !2506, line: 146, type: !370, align: 8)
!2551 = !DILexicalBlockFile(scope: !2552, file: !2506, discriminator: 0)
!2552 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2b77cc1908e440a5E", scope: !363, file: !362, line: 2531, type: !364, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !2553)
!2553 = !{!2550}
!2554 = !DILocation(line: 146, column: 34, scope: !2551, inlinedAt: !2555)
!2555 = !DILocation(line: 146, column: 34, scope: !2542)
!2556 = !DILocalVariable(name: "data", scope: !2557, file: !2506, line: 146, type: !329, align: 8)
!2557 = !DILexicalBlockFile(scope: !2558, file: !2506, discriminator: 0)
!2558 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hc9808a0b8f9d77eeE", scope: !377, file: !376, line: 90, type: !379, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !2559)
!2559 = !{!2556, !2560, !2561}
!2560 = !DILocalVariable(name: "len", scope: !2557, file: !2506, line: 146, type: !9, align: 8)
!2561 = !DILocalVariable(name: "runtime", scope: !2562, file: !2506, line: 146, type: !387, align: 8)
!2562 = !DILexicalBlockFile(scope: !2563, file: !2506, discriminator: 0)
!2563 = distinct !DILexicalBlock(scope: !2558, file: !386, line: 2336, column: 13)
!2564 = !DILocation(line: 146, column: 34, scope: !2557, inlinedAt: !2565)
!2565 = !DILocation(line: 2532, column: 18, scope: !2552, inlinedAt: !2555)
!2566 = !DILocalVariable(name: "data", scope: !2567, file: !2506, line: 146, type: !329, align: 8)
!2567 = !DILexicalBlockFile(scope: !2568, file: !2506, discriminator: 0)
!2568 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6a66992555506ab5E", scope: !43, file: !399, line: 695, type: !400, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !2569)
!2569 = !{!2566, !2570}
!2570 = !DILocalVariable(name: "len", scope: !2567, file: !2506, line: 146, type: !9, align: 8)
!2571 = !DILocation(line: 146, column: 34, scope: !2567, inlinedAt: !2572)
!2572 = !DILocation(line: 97, column: 11, scope: !2558, inlinedAt: !2565)
!2573 = !DILocalVariable(name: "self", scope: !2574, file: !2506, line: 146, type: !329, align: 8)
!2574 = !DILexicalBlockFile(scope: !2575, file: !2506, discriminator: 0)
!2575 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb951d44ade26c9c5E", scope: !414, file: !413, line: 46, type: !416, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !2576)
!2576 = !{!2573}
!2577 = !DILocation(line: 146, column: 34, scope: !2574, inlinedAt: !2578)
!2578 = !DILocation(line: 696, column: 20, scope: !2568, inlinedAt: !2572)
!2579 = !DILocalVariable(name: "data_address", scope: !2580, file: !2506, line: 146, type: !6, align: 8)
!2580 = !DILexicalBlockFile(scope: !2581, file: !2506, discriminator: 0)
!2581 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h9dc36a19d85d94baE", scope: !427, file: !426, line: 110, type: !428, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !2582)
!2582 = !{!2579, !2583}
!2583 = !DILocalVariable(name: "metadata", scope: !2580, file: !2506, line: 146, type: !9, align: 8)
!2584 = !DILocation(line: 146, column: 34, scope: !2580, inlinedAt: !2585)
!2585 = !DILocation(line: 696, column: 5, scope: !2568, inlinedAt: !2572)
!2586 = !DILocation(line: 146, column: 18, scope: !2542)
!2587 = !DILocation(line: 147, column: 6, scope: !2542)
!2588 = distinct !DISubprogram(name: "arg<std::ffi::os_str::OsString>", linkageName: "_ZN3std7process7Command3arg17haab4420e573e4115E", scope: !2589, file: !2386, line: 603, type: !2790, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2796, retainedNodes: !2793)
!2589 = !DICompositeType(tag: DW_TAG_structure_type, name: "Command", scope: !2388, file: !2, size: 1664, align: 64, elements: !2590, templateParams: !23, identifier: "4dcb36ce2d3f4ae8e2d5cae2b6cd81bd")
!2590 = !{!2591}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2589, file: !2, baseType: !2592, size: 1664, align: 64)
!2592 = !DICompositeType(tag: DW_TAG_structure_type, name: "Command", scope: !2392, file: !2, size: 1664, align: 64, elements: !2593, templateParams: !23, identifier: "7272755d0483a08199bbea5f95225130")
!2593 = !{!2594, !2604, !2626, !2652, !2659, !2671, !2685, !2686, !2687, !2715, !2734, !2773, !2774, !2775, !2776}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !2592, file: !2, baseType: !2595, size: 128, align: 64)
!2595 = !DICompositeType(tag: DW_TAG_structure_type, name: "CString", scope: !2596, file: !2, size: 128, align: 64, elements: !2598, templateParams: !23, identifier: "a4dcbb113228472ac833458ca2f5ee8d")
!2596 = !DINamespace(name: "c_str", scope: !2597)
!2597 = !DINamespace(name: "ffi", scope: !300)
!2598 = !{!2599}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2595, file: !2, baseType: !2600, size: 128, align: 64)
!2600 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u8], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !2601, templateParams: !23, identifier: "e783b0825321c11fc908377d145707b4")
!2601 = !{!2602, !2603}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2600, file: !2, baseType: !140, size: 64, align: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2600, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2592, file: !2, baseType: !2605, size: 192, align: 64, offset: 128)
!2605 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<alloc::ffi::c_str::CString, alloc::alloc::Global>", scope: !316, file: !2, size: 192, align: 64, elements: !2606, templateParams: !2624, identifier: "fb4cdad3bcf9ac3c9d09a3f4229f7c42")
!2606 = !{!2607, !2625}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2605, file: !2, baseType: !2608, size: 128, align: 64)
!2608 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>", scope: !299, file: !2, size: 128, align: 64, elements: !2609, templateParams: !2624, identifier: "de86ff9db4e034e7e8a4af91dabaace8")
!2609 = !{!2610, !2622, !2623}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2608, file: !2, baseType: !2611, size: 64, align: 64)
!2611 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<alloc::ffi::c_str::CString>", scope: !323, file: !2, size: 64, align: 64, elements: !2612, templateParams: !2618, identifier: "499220d5eb802442a9bc4340a6fe78bc")
!2612 = !{!2613, !2620}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2611, file: !2, baseType: !2614, size: 64, align: 64)
!2614 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::ffi::c_str::CString>", scope: !42, file: !2, size: 64, align: 64, elements: !2615, templateParams: !2618, identifier: "acf5efb331b79338da11f48ba09d5aee")
!2615 = !{!2616}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2614, file: !2, baseType: !2617, size: 64, align: 64)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::ffi::c_str::CString", baseType: !2595, size: 64, align: 64, dwarfAddressSpace: 0)
!2618 = !{!2619}
!2619 = !DITemplateTypeParameter(name: "T", type: !2595)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !2611, file: !2, baseType: !2621, align: 8)
!2621 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::ffi::c_str::CString>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !2618, identifier: "cc759ab9f72bf819a5cf17732b2fc6ab")
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2608, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2608, file: !2, baseType: !336, align: 8)
!2624 = !{!2619, !339}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2605, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !2592, file: !2, baseType: !2627, size: 192, align: 64, offset: 320)
!2627 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argv", scope: !2392, file: !2, size: 192, align: 64, elements: !2628, templateParams: !23, identifier: "9b5b4ea745f93b7b217338fcad6c2c7")
!2628 = !{!2629}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2627, file: !2, baseType: !2630, size: 192, align: 64)
!2630 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<*const i8, alloc::alloc::Global>", scope: !316, file: !2, size: 192, align: 64, elements: !2631, templateParams: !2650, identifier: "c73cfefa3d09004d89247e4658517854")
!2631 = !{!2632, !2651}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2630, file: !2, baseType: !2633, size: 128, align: 64)
!2633 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<*const i8, alloc::alloc::Global>", scope: !299, file: !2, size: 128, align: 64, elements: !2634, templateParams: !2650, identifier: "48f64ce3015508c53579c90f93bd534a")
!2634 = !{!2635, !2648, !2649}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2633, file: !2, baseType: !2636, size: 64, align: 64)
!2636 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<*const i8>", scope: !323, file: !2, size: 64, align: 64, elements: !2637, templateParams: !2644, identifier: "b8782ad8e20935827e330f50c487fd13")
!2637 = !{!2638, !2646}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2636, file: !2, baseType: !2639, size: 64, align: 64)
!2639 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<*const i8>", scope: !42, file: !2, size: 64, align: 64, elements: !2640, templateParams: !2644, identifier: "2ac5c96d75283ec7131053d828fa14ad")
!2640 = !{!2641}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2639, file: !2, baseType: !2642, size: 64, align: 64)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const i8", baseType: !2643, size: 64, align: 64, dwarfAddressSpace: 0)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i8", baseType: !287, size: 64, align: 64, dwarfAddressSpace: 0)
!2644 = !{!2645}
!2645 = !DITemplateTypeParameter(name: "T", type: !2643)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !2636, file: !2, baseType: !2647, align: 8)
!2647 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<*const i8>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !2644, identifier: "fdee06f43baa5339c98dfc255e17ccab")
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2633, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2633, file: !2, baseType: !336, align: 8)
!2650 = !{!2645, !339}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2630, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2592, file: !2, baseType: !2653, size: 256, align: 64, offset: 512)
!2653 = !DICompositeType(tag: DW_TAG_structure_type, name: "CommandEnv", scope: !2654, file: !2, size: 256, align: 64, elements: !2655, templateParams: !23, identifier: "bc5253a27c8b3a92efa4e1df2e23f717")
!2654 = !DINamespace(name: "process", scope: !1853)
!2655 = !{!2656, !2657, !2658}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "clear", scope: !2653, file: !2, baseType: !1159, size: 8, align: 8, offset: 192)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "saw_path", scope: !2653, file: !2, baseType: !1159, size: 8, align: 8, offset: 200)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2653, file: !2, baseType: !1508, size: 192, align: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2592, file: !2, baseType: !2660, size: 128, align: 64, offset: 768)
!2660 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::ffi::c_str::CString>", scope: !177, file: !2, size: 128, align: 64, elements: !2661, templateParams: !23, identifier: "11079736a8cf7d01b5081204844afabf")
!2661 = !{!2662}
!2662 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2660, file: !2, size: 128, align: 64, elements: !2663, templateParams: !23, identifier: "24a4f611368b1aaecb2a2d1015a4e208", discriminator: !2670)
!2663 = !{!2664, !2666}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2662, file: !2, baseType: !2665, size: 128, align: 64, extraData: i64 0)
!2665 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2660, file: !2, size: 128, align: 64, elements: !23, templateParams: !2618, identifier: "a0925efc4ffffc6b6e6a847eade956da")
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2662, file: !2, baseType: !2667, size: 128, align: 64)
!2667 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2660, file: !2, size: 128, align: 64, elements: !2668, templateParams: !2618, identifier: "b95ab6a63fa54894b511858e9aa487eb")
!2668 = !{!2669}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2667, file: !2, baseType: !2595, size: 128, align: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, scope: !2660, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2592, file: !2, baseType: !2672, size: 64, align: 32, offset: 1216)
!2672 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !177, file: !2, size: 64, align: 32, elements: !2673, templateParams: !23, identifier: "433c36b652ea33482ffe8be57ab7893")
!2673 = !{!2674}
!2674 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2672, file: !2, size: 64, align: 32, elements: !2675, templateParams: !23, identifier: "e01b299968261779c422a7e1febecddf", discriminator: !2684)
!2675 = !{!2676, !2680}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2674, file: !2, baseType: !2677, size: 64, align: 32, extraData: i64 0)
!2677 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2672, file: !2, size: 64, align: 32, elements: !23, templateParams: !2678, identifier: "8b9fb7e5d8df9aebeeccf870281c03a8")
!2678 = !{!2679}
!2679 = !DITemplateTypeParameter(name: "T", type: !351)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2674, file: !2, baseType: !2681, size: 64, align: 32, extraData: i64 1)
!2681 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2672, file: !2, size: 64, align: 32, elements: !2682, templateParams: !2678, identifier: "4b24779e750ae7c21f70b77320a16b9")
!2682 = !{!2683}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2681, file: !2, baseType: !351, size: 32, align: 32, offset: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, scope: !2672, file: !2, baseType: !351, size: 32, align: 32, flags: DIFlagArtificial)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2592, file: !2, baseType: !2672, size: 64, align: 32, offset: 1280)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "saw_nul", scope: !2592, file: !2, baseType: !1159, size: 8, align: 8, offset: 1600)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "closures", scope: !2592, file: !2, baseType: !2688, size: 192, align: 64, offset: 896)
!2688 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", scope: !316, file: !2, size: 192, align: 64, elements: !2689, templateParams: !2713, identifier: "dfd576ef60171b9addf485df0179bb6")
!2689 = !{!2690, !2714}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2688, file: !2, baseType: !2691, size: 128, align: 64)
!2691 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", scope: !299, file: !2, size: 128, align: 64, elements: !2692, templateParams: !2713, identifier: "2b7da7c2c61b6b84aba539cf5ee9d990")
!2692 = !{!2693, !2711, !2712}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2691, file: !2, baseType: !2694, size: 64, align: 64)
!2694 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", scope: !323, file: !2, size: 64, align: 64, elements: !2695, templateParams: !2707, identifier: "42743c1c7a18a0ca9c564478b18ba14")
!2695 = !{!2696, !2709}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2694, file: !2, baseType: !2697, size: 64, align: 64)
!2697 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", scope: !42, file: !2, size: 64, align: 64, elements: !2698, templateParams: !2707, identifier: "9203ba0a73b9d55c93719dd09425ff3b")
!2698 = !{!2699}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2697, file: !2, baseType: !2700, size: 64, align: 64)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", baseType: !2701, size: 64, align: 64, dwarfAddressSpace: 0)
!2701 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !2702, templateParams: !23, identifier: "4dd3e720c4b2370fa38c1032944bb04a")
!2702 = !{!2703, !2706}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2701, file: !2, baseType: !2704, size: 64, align: 64)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64, align: 64, dwarfAddressSpace: 0)
!2705 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)", file: !2, align: 8, elements: !23, identifier: "ef27f8da174ed1efc697cbb046b0d3a1")
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2701, file: !2, baseType: !120, size: 64, align: 64, offset: 64)
!2707 = !{!2708}
!2708 = !DITemplateTypeParameter(name: "T", type: !2701)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !2694, file: !2, baseType: !2710, align: 8)
!2710 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !2707, identifier: "9d3e45ca5109097a8df536c2fb72773c")
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2691, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2691, file: !2, baseType: !336, align: 8)
!2713 = !{!2708, !339}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2688, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2592, file: !2, baseType: !2716, size: 128, align: 64, offset: 1088)
!2716 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::boxed::Box<[u32], alloc::alloc::Global>>", scope: !177, file: !2, size: 128, align: 64, elements: !2717, templateParams: !23, identifier: "49600b0f2de3871272e45ad696cc5685")
!2717 = !{!2718}
!2718 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2716, file: !2, size: 128, align: 64, elements: !2719, templateParams: !23, identifier: "b2c5ea3dfde9e8701000cb943643256a", discriminator: !2733)
!2719 = !{!2720, !2729}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2718, file: !2, baseType: !2721, size: 128, align: 64, extraData: i64 0)
!2721 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2716, file: !2, size: 128, align: 64, elements: !23, templateParams: !2722, identifier: "e1b545f4da04bd2a8ddcd0ab40a926ff")
!2722 = !{!2723}
!2723 = !DITemplateTypeParameter(name: "T", type: !2724)
!2724 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u32], alloc::alloc::Global>", file: !2, size: 128, align: 64, elements: !2725, templateParams: !23, identifier: "1da59e527ccf96d533377a2b5e5b8c0d")
!2725 = !{!2726, !2728}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2724, file: !2, baseType: !2727, size: 64, align: 64)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64, align: 64, dwarfAddressSpace: 0)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2724, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2718, file: !2, baseType: !2730, size: 128, align: 64)
!2730 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2716, file: !2, size: 128, align: 64, elements: !2731, templateParams: !2722, identifier: "d8511a314674274d71c269811b25ed0")
!2731 = !{!2732}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2730, file: !2, baseType: !2724, size: 128, align: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "stdin", scope: !2592, file: !2, baseType: !2735, size: 64, align: 32, offset: 1344)
!2735 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::sys::unix::process::process_common::Stdio>", scope: !177, file: !2, size: 64, align: 32, elements: !2736, templateParams: !23, identifier: "aefb03e2301991286c5ed8bd76878de7")
!2736 = !{!2737}
!2737 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2735, file: !2, size: 64, align: 32, elements: !2738, templateParams: !23, identifier: "a75664a50f3f0f751dfa68b1b46ca816", discriminator: !2772)
!2738 = !{!2739, !2768}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2737, file: !2, baseType: !2740, size: 64, align: 32, extraData: i64 4)
!2740 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2735, file: !2, size: 64, align: 32, elements: !23, templateParams: !2741, identifier: "883692523b9c1d96a2d47deeab99a1c3")
!2741 = !{!2742}
!2742 = !DITemplateTypeParameter(name: "T", type: !2743)
!2743 = !DICompositeType(tag: DW_TAG_structure_type, name: "Stdio", scope: !2392, file: !2, size: 64, align: 32, elements: !2744, templateParams: !23, identifier: "949c4fc2222f5ed45b67cdcea60a271a")
!2744 = !{!2745}
!2745 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2743, file: !2, size: 64, align: 32, elements: !2746, templateParams: !23, identifier: "8939618b042aa0dd18f085d2acac016c", discriminator: !2767)
!2746 = !{!2747, !2749, !2751, !2753}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "Inherit", scope: !2745, file: !2, baseType: !2748, size: 64, align: 32, extraData: i64 0)
!2748 = !DICompositeType(tag: DW_TAG_structure_type, name: "Inherit", scope: !2743, file: !2, size: 64, align: 32, elements: !23, identifier: "962595566d96e30bb68cfbb558c7fa03")
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "Null", scope: !2745, file: !2, baseType: !2750, size: 64, align: 32, extraData: i64 1)
!2750 = !DICompositeType(tag: DW_TAG_structure_type, name: "Null", scope: !2743, file: !2, size: 64, align: 32, elements: !23, identifier: "addf29ea1f8a22fa121110b8b8a04e33")
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "MakePipe", scope: !2745, file: !2, baseType: !2752, size: 64, align: 32, extraData: i64 2)
!2752 = !DICompositeType(tag: DW_TAG_structure_type, name: "MakePipe", scope: !2743, file: !2, size: 64, align: 32, elements: !23, identifier: "9391ca6111eb02d7fb4f3bddeb4fcc1a")
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "Fd", scope: !2745, file: !2, baseType: !2754, size: 64, align: 32, extraData: i64 3)
!2754 = !DICompositeType(tag: DW_TAG_structure_type, name: "Fd", scope: !2743, file: !2, size: 64, align: 32, elements: !2755, templateParams: !23, identifier: "b81ce0242bda16b08b49e41395227e58")
!2755 = !{!2756}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2754, file: !2, baseType: !2757, size: 32, align: 32, offset: 32)
!2757 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileDesc", scope: !2758, file: !2, size: 32, align: 32, elements: !2759, templateParams: !23, identifier: "89ea06a69b124882687bb64c44b107d4")
!2758 = !DINamespace(name: "fd", scope: !1383)
!2759 = !{!2760}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2757, file: !2, baseType: !2761, size: 32, align: 32)
!2761 = !DICompositeType(tag: DW_TAG_structure_type, name: "OwnedFd", scope: !2762, file: !2, size: 32, align: 32, elements: !2765, templateParams: !23, identifier: "cc69002b90838fc041d64feda4a5f17e")
!2762 = !DINamespace(name: "owned", scope: !2763)
!2763 = !DINamespace(name: "fd", scope: !2764)
!2764 = !DINamespace(name: "os", scope: !17)
!2765 = !{!2766}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2761, file: !2, baseType: !62, size: 32, align: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !2, baseType: !351, size: 32, align: 32, flags: DIFlagArtificial)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2737, file: !2, baseType: !2769, size: 64, align: 32)
!2769 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2735, file: !2, size: 64, align: 32, elements: !2770, templateParams: !2741, identifier: "394fd5f5fa5ff8c3a01e55ab0eaf9e00")
!2770 = !{!2771}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2769, file: !2, baseType: !2743, size: 64, align: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, scope: !2735, file: !2, baseType: !351, size: 32, align: 32, flags: DIFlagArtificial)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "stdout", scope: !2592, file: !2, baseType: !2735, size: 64, align: 32, offset: 1408)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "stderr", scope: !2592, file: !2, baseType: !2735, size: 64, align: 32, offset: 1472)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "create_pidfd", scope: !2592, file: !2, baseType: !1159, size: 8, align: 8, offset: 1608)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pgroup", scope: !2592, file: !2, baseType: !2777, size: 64, align: 32, offset: 1536)
!2777 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i32>", scope: !177, file: !2, size: 64, align: 32, elements: !2778, templateParams: !23, identifier: "6bdf046ca244405c14a34b3e2d629599")
!2778 = !{!2779}
!2779 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2777, file: !2, size: 64, align: 32, elements: !2780, templateParams: !23, identifier: "559485cc0a180799d59c09b1983d68fc", discriminator: !2789)
!2780 = !{!2781, !2785}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2779, file: !2, baseType: !2782, size: 64, align: 32, extraData: i64 0)
!2782 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2777, file: !2, size: 64, align: 32, elements: !23, templateParams: !2783, identifier: "ac8a4a068b65e116120724915be2f37c")
!2783 = !{!2784}
!2784 = !DITemplateTypeParameter(name: "T", type: !62)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2779, file: !2, baseType: !2786, size: 64, align: 32, extraData: i64 1)
!2786 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2777, file: !2, size: 64, align: 32, elements: !2787, templateParams: !2783, identifier: "d6a544ac03d054cdd4d0bb540c69af89")
!2787 = !{!2788}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2786, file: !2, baseType: !62, size: 32, align: 32, offset: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2777, file: !2, baseType: !351, size: 32, align: 32, flags: DIFlagArtificial)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{!2792, !2792, !1376}
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::process::Command", baseType: !2589, size: 64, align: 64, dwarfAddressSpace: 0)
!2793 = !{!2794, !2795}
!2794 = !DILocalVariable(name: "self", arg: 1, scope: !2588, file: !2386, line: 603, type: !2792)
!2795 = !DILocalVariable(name: "arg", arg: 2, scope: !2588, file: !2386, line: 603, type: !1376)
!2796 = !{!2797}
!2797 = !DITemplateTypeParameter(name: "S", type: !1376)
!2798 = !DILocation(line: 603, column: 33, scope: !2588)
!2799 = !DILocation(line: 603, column: 44, scope: !2588)
!2800 = !DILocation(line: 604, column: 9, scope: !2588)
!2801 = !DILocation(line: 604, column: 24, scope: !2588)
!2802 = !DILocation(line: 606, column: 5, scope: !2588)
!2803 = !DILocation(line: 603, column: 5, scope: !2588)
!2804 = !DILocation(line: 606, column: 6, scope: !2588)
!2805 = distinct !DISubprogram(name: "arg<&str>", linkageName: "_ZN3std7process7Command3arg17he741b1289eee98d1E", scope: !2589, file: !2386, line: 603, type: !2806, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2811, retainedNodes: !2808)
!2806 = !DISubroutineType(types: !2807)
!2807 = !{!2792, !2792, !137}
!2808 = !{!2809, !2810}
!2809 = !DILocalVariable(name: "self", arg: 1, scope: !2805, file: !2386, line: 603, type: !2792)
!2810 = !DILocalVariable(name: "arg", arg: 2, scope: !2805, file: !2386, line: 603, type: !137)
!2811 = !{!2812}
!2812 = !DITemplateTypeParameter(name: "S", type: !137)
!2813 = !DILocation(line: 603, column: 33, scope: !2805)
!2814 = !DILocation(line: 603, column: 44, scope: !2805)
!2815 = !DILocation(line: 604, column: 9, scope: !2805)
!2816 = !DILocation(line: 604, column: 24, scope: !2805)
!2817 = !DILocation(line: 606, column: 5, scope: !2805)
!2818 = !DILocation(line: 603, column: 5, scope: !2805)
!2819 = !DILocation(line: 606, column: 6, scope: !2805)
!2820 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN3std7process7Command3new17h0bb87ac83e738136E", scope: !2589, file: !2386, line: 557, type: !2821, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2811, retainedNodes: !2823)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!2589, !137}
!2823 = !{!2824}
!2824 = !DILocalVariable(name: "program", arg: 1, scope: !2820, file: !2386, line: 557, type: !137)
!2825 = !DILocation(line: 557, column: 33, scope: !2820)
!2826 = !DILocation(line: 558, column: 44, scope: !2820)
!2827 = !DILocation(line: 559, column: 5, scope: !2820)
!2828 = !DILocation(line: 558, column: 26, scope: !2820)
!2829 = !DILocation(line: 558, column: 9, scope: !2820)
!2830 = !DILocation(line: 557, column: 5, scope: !2820)
!2831 = !DILocation(line: 559, column: 6, scope: !2820)
!2832 = distinct !DISubprogram(name: "new<std::ffi::os_str::OsString>", linkageName: "_ZN3std7process7Command3new17h73e5afb7c0ac4ee6E", scope: !2589, file: !2386, line: 557, type: !2833, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2796, retainedNodes: !2835)
!2833 = !DISubroutineType(types: !2834)
!2834 = !{!2589, !1376}
!2835 = !{!2836}
!2836 = !DILocalVariable(name: "program", arg: 1, scope: !2832, file: !2386, line: 557, type: !1376)
!2837 = !DILocation(line: 557, column: 33, scope: !2832)
!2838 = !DILocation(line: 558, column: 44, scope: !2832)
!2839 = !DILocation(line: 559, column: 5, scope: !2832)
!2840 = !DILocation(line: 558, column: 26, scope: !2832)
!2841 = !DILocation(line: 558, column: 9, scope: !2832)
!2842 = !DILocation(line: 557, column: 5, scope: !2832)
!2843 = !DILocation(line: 559, column: 6, scope: !2832)
!2844 = distinct !DISubprogram(name: "fmt<str>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h07728422a7103b3fE", scope: !2845, file: !2064, line: 2361, type: !2846, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !2848)
!2845 = !DINamespace(name: "{impl#59}", scope: !279)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!2133, !199, !2150}
!2848 = !{!2849, !2850}
!2849 = !DILocalVariable(name: "self", arg: 1, scope: !2844, file: !2064, line: 2361, type: !199)
!2850 = !DILocalVariable(name: "f", arg: 2, scope: !2844, file: !2064, line: 2361, type: !2150)
!2851 = !DILocation(line: 2361, column: 20, scope: !2844)
!2852 = !DILocation(line: 2361, column: 27, scope: !2844)
!2853 = !DILocation(line: 2361, column: 71, scope: !2844)
!2854 = !DILocation(line: 2361, column: 62, scope: !2844)
!2855 = !DILocation(line: 2361, column: 84, scope: !2844)
!2856 = distinct !DISubprogram(name: "fmt<core::option::Option<&str>>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17heb65f44bf8fb9e20E", scope: !2845, file: !2064, line: 2361, type: !2857, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2863, retainedNodes: !2860)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{!2133, !2859, !2150}
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&core::option::Option<&str>", baseType: !175, size: 64, align: 64, dwarfAddressSpace: 0)
!2860 = !{!2861, !2862}
!2861 = !DILocalVariable(name: "self", arg: 1, scope: !2856, file: !2064, line: 2361, type: !2859)
!2862 = !DILocalVariable(name: "f", arg: 2, scope: !2856, file: !2064, line: 2361, type: !2150)
!2863 = !{!2864}
!2864 = !DITemplateTypeParameter(name: "T", type: !176)
!2865 = !DILocation(line: 2361, column: 20, scope: !2856)
!2866 = !DILocation(line: 2361, column: 27, scope: !2856)
!2867 = !DILocation(line: 2361, column: 71, scope: !2856)
!2868 = !DILocation(line: 2361, column: 62, scope: !2856)
!2869 = !DILocation(line: 2361, column: 84, scope: !2856)
!2870 = distinct !DISubprogram(name: "fmt<&str>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf06ba88675a9062bE", scope: !2845, file: !2064, line: 2361, type: !2871, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !2874)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{!2133, !2873, !2150}
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&&str", baseType: !199, size: 64, align: 64, dwarfAddressSpace: 0)
!2874 = !{!2875, !2876}
!2875 = !DILocalVariable(name: "self", arg: 1, scope: !2870, file: !2064, line: 2361, type: !2873)
!2876 = !DILocalVariable(name: "f", arg: 2, scope: !2870, file: !2064, line: 2361, type: !2150)
!2877 = !DILocation(line: 2361, column: 20, scope: !2870)
!2878 = !DILocation(line: 2361, column: 27, scope: !2870)
!2879 = !DILocation(line: 2361, column: 71, scope: !2870)
!2880 = !DILocation(line: 2361, column: 62, scope: !2870)
!2881 = !DILocation(line: 2361, column: 84, scope: !2870)
!2882 = distinct !DISubprogram(name: "fmt<str>", linkageName: "_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h65542891b179a116E", scope: !2883, file: !2064, line: 2361, type: !2846, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !2884)
!2883 = !DINamespace(name: "{impl#61}", scope: !279)
!2884 = !{!2885, !2886}
!2885 = !DILocalVariable(name: "self", arg: 1, scope: !2882, file: !2064, line: 2361, type: !199)
!2886 = !DILocalVariable(name: "f", arg: 2, scope: !2882, file: !2064, line: 2361, type: !2150)
!2887 = !DILocation(line: 2361, column: 20, scope: !2882)
!2888 = !DILocation(line: 2361, column: 27, scope: !2882)
!2889 = !DILocation(line: 2361, column: 71, scope: !2882)
!2890 = !DILocation(line: 2361, column: 62, scope: !2882)
!2891 = !DILocation(line: 2361, column: 84, scope: !2882)
!2892 = distinct !DISubprogram(name: "fmt<&str>", linkageName: "_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17ha67470dfda3d322dE", scope: !2883, file: !2064, line: 2361, type: !2871, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !2893)
!2893 = !{!2894, !2895}
!2894 = !DILocalVariable(name: "self", arg: 1, scope: !2892, file: !2064, line: 2361, type: !2873)
!2895 = !DILocalVariable(name: "f", arg: 2, scope: !2892, file: !2064, line: 2361, type: !2150)
!2896 = !DILocation(line: 2361, column: 20, scope: !2892)
!2897 = !DILocation(line: 2361, column: 27, scope: !2892)
!2898 = !DILocation(line: 2361, column: 71, scope: !2892)
!2899 = !DILocation(line: 2361, column: 62, scope: !2892)
!2900 = !DILocation(line: 2361, column: 84, scope: !2892)
!2901 = distinct !DISubprogram(name: "into_searcher<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h49ecd823c3899a35E", scope: !2902, file: !669, line: 704, type: !2903, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1296, retainedNodes: !2905)
!2902 = !DINamespace(name: "{impl#26}", scope: !671)
!2903 = !DISubroutineType(types: !2904)
!2904 = !{!1293, !695, !137}
!2905 = !{!2906, !2907}
!2906 = !DILocalVariable(name: "self", arg: 1, scope: !2901, file: !669, line: 704, type: !695)
!2907 = !DILocalVariable(name: "haystack", arg: 2, scope: !2901, file: !669, line: 704, type: !137)
!2908 = !DILocation(line: 704, column: 26, scope: !2901)
!2909 = !DILocation(line: 704, column: 32, scope: !2901)
!2910 = !DILocation(line: 705, column: 21, scope: !2901)
!2911 = !DILocation(line: 705, column: 13, scope: !2901)
!2912 = !DILocation(line: 706, column: 10, scope: !2901)
!2913 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h420a2c1e2dba794cE", scope: !2915, file: !2914, line: 189, type: !2917, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2919)
!2914 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "a5e6372fb466d62a237d46ecffb4676a")
!2915 = !DINamespace(name: "{impl#37}", scope: !2916)
!2916 = !DINamespace(name: "range", scope: !452)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{!9, !9, !9}
!2919 = !{!2920, !2921}
!2920 = !DILocalVariable(name: "start", arg: 1, scope: !2913, file: !2914, line: 189, type: !9)
!2921 = !DILocalVariable(name: "n", arg: 2, scope: !2913, file: !2914, line: 189, type: !9)
!2922 = !DILocation(line: 189, column: 37, scope: !2913)
!2923 = !DILocation(line: 189, column: 50, scope: !2913)
!2924 = !DILocation(line: 191, column: 22, scope: !2913)
!2925 = !DILocalVariable(name: "self", scope: !2926, file: !2914, line: 191, type: !9, align: 8)
!2926 = !DILexicalBlockFile(scope: !2927, file: !2914, discriminator: 0)
!2927 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h248c853f68583999E", scope: !2929, file: !2928, line: 463, type: !2917, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2930)
!2928 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!2929 = !DINamespace(name: "{impl#11}", scope: !157)
!2930 = !{!2925, !2931}
!2931 = !DILocalVariable(name: "rhs", scope: !2926, file: !2914, line: 191, type: !9, align: 8)
!2932 = !DILocation(line: 191, column: 22, scope: !2926, inlinedAt: !2924)
!2933 = !DILocation(line: 191, column: 42, scope: !2913)
!2934 = !DILocation(line: 192, column: 10, scope: !2913)
!2935 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17h8a63a3f550b3945bE", scope: !2937, file: !2936, line: 800, type: !2917, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2941, retainedNodes: !2938)
!2936 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!2937 = !DINamespace(name: "Ord", scope: !286)
!2938 = !{!2939, !2940}
!2939 = !DILocalVariable(name: "self", arg: 1, scope: !2935, file: !2936, line: 800, type: !9)
!2940 = !DILocalVariable(name: "other", arg: 2, scope: !2935, file: !2936, line: 800, type: !9)
!2941 = !{!2942}
!2942 = !DITemplateTypeParameter(name: "Self", type: !9)
!2943 = !DILocation(line: 800, column: 12, scope: !2935)
!2944 = !DILocation(line: 800, column: 18, scope: !2935)
!2945 = !DILocation(line: 808, column: 15, scope: !2935)
!2946 = !{i8 -1, i8 2}
!2947 = !DILocation(line: 812, column: 5, scope: !2935)
!2948 = !DILocation(line: 808, column: 9, scope: !2935)
!2949 = !DILocation(line: 809, column: 49, scope: !2935)
!2950 = !DILocation(line: 810, column: 34, scope: !2935)
!2951 = !DILocation(line: 800, column: 5, scope: !2935)
!2952 = !DILocation(line: 812, column: 6, scope: !2935)
!2953 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hb02b91b719b88d1fE", scope: !2954, file: !2936, line: 1436, type: !2956, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2958)
!2954 = !DINamespace(name: "{impl#55}", scope: !2955)
!2955 = !DINamespace(name: "impls", scope: !286)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!285, !393, !393}
!2958 = !{!2959, !2960}
!2959 = !DILocalVariable(name: "self", arg: 1, scope: !2953, file: !2936, line: 1436, type: !393)
!2960 = !DILocalVariable(name: "other", arg: 2, scope: !2953, file: !2936, line: 1436, type: !393)
!2961 = !DILocation(line: 1436, column: 24, scope: !2953)
!2962 = !DILocation(line: 1436, column: 31, scope: !2953)
!2963 = !DILocation(line: 1439, column: 24, scope: !2953)
!2964 = !DILocation(line: 1439, column: 32, scope: !2953)
!2965 = !DILocation(line: 1440, column: 29, scope: !2953)
!2966 = !DILocation(line: 1440, column: 38, scope: !2953)
!2967 = !DILocation(line: 1439, column: 41, scope: !2953)
!2968 = !DILocation(line: 1439, column: 21, scope: !2953)
!2969 = !DILocation(line: 1442, column: 18, scope: !2953)
!2970 = !DILocation(line: 1441, column: 28, scope: !2953)
!2971 = !DILocation(line: 1440, column: 26, scope: !2953)
!2972 = !DILocation(line: 1440, column: 47, scope: !2953)
!2973 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h9df645b2d77e9e3eE", scope: !2974, file: !2936, line: 1423, type: !2975, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !2977)
!2974 = !DINamespace(name: "{impl#54}", scope: !2955)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!1159, !393, !393}
!2977 = !{!2978, !2979}
!2978 = !DILocalVariable(name: "self", arg: 1, scope: !2973, file: !2936, line: 1423, type: !393)
!2979 = !DILocalVariable(name: "other", arg: 2, scope: !2973, file: !2936, line: 1423, type: !393)
!2980 = !DILocation(line: 1423, column: 23, scope: !2973)
!2981 = !DILocation(line: 1423, column: 30, scope: !2973)
!2982 = !DILocation(line: 1423, column: 52, scope: !2973)
!2983 = !DILocation(line: 1423, column: 62, scope: !2973)
!2984 = !DILocation(line: 1423, column: 72, scope: !2973)
!2985 = distinct !DISubprogram(name: "eq<str, str>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h9ee33d899d15c81dE", scope: !2986, file: !2936, line: 1512, type: !2987, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2992, retainedNodes: !2989)
!2986 = !DINamespace(name: "{impl#9}", scope: !2955)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{!1159, !199, !199}
!2989 = !{!2990, !2991}
!2990 = !DILocalVariable(name: "self", arg: 1, scope: !2985, file: !2936, line: 1512, type: !199)
!2991 = !DILocalVariable(name: "other", arg: 2, scope: !2985, file: !2936, line: 1512, type: !199)
!2992 = !{!2993, !2994}
!2993 = !DITemplateTypeParameter(name: "A", type: !70)
!2994 = !DITemplateTypeParameter(name: "B", type: !70)
!2995 = !DILocation(line: 1512, column: 15, scope: !2985)
!2996 = !DILocation(line: 1512, column: 22, scope: !2985)
!2997 = !DILocation(line: 1513, column: 27, scope: !2985)
!2998 = !DILocation(line: 1513, column: 34, scope: !2985)
!2999 = !DILocation(line: 1513, column: 13, scope: !2985)
!3000 = !DILocation(line: 1514, column: 10, scope: !2985)
!3001 = distinct !DISubprogram(name: "new_display<alloc::string::String>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h1b4be81c2260b809E", scope: !2123, file: !2064, line: 318, type: !3002, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3006, retainedNodes: !3004)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!2123, !311}
!3004 = !{!3005}
!3005 = !DILocalVariable(name: "x", arg: 1, scope: !3001, file: !2064, line: 318, type: !311)
!3006 = !{!2427}
!3007 = !DILocation(line: 318, column: 30, scope: !3001)
!3008 = !DILocation(line: 319, column: 23, scope: !3001)
!3009 = !DILocalVariable(name: "x", scope: !3010, file: !2064, line: 319, type: !311, align: 8)
!3010 = distinct !DISubprogram(name: "new<alloc::string::String>", linkageName: "_ZN4core3fmt10ArgumentV13new17h92d5c6cad4bace86E", scope: !2123, file: !2064, line: 329, type: !3011, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3006, retainedNodes: !3016)
!3011 = !DISubroutineType(types: !3012)
!3012 = !{!2123, !311, !3013}
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&alloc::string::String, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !3014, size: 64, align: 64, dwarfAddressSpace: 0)
!3014 = !DISubroutineType(types: !3015)
!3015 = !{!2133, !311, !2150}
!3016 = !{!3009, !3017}
!3017 = !DILocalVariable(name: "f", scope: !3010, file: !2064, line: 319, type: !3013, align: 8)
!3018 = !DILocation(line: 319, column: 13, scope: !3010, inlinedAt: !3019)
!3019 = !DILocation(line: 319, column: 13, scope: !3001)
!3020 = !DILocation(line: 319, column: 26, scope: !3001)
!3021 = !DILocation(line: 320, column: 10, scope: !3001)
!3022 = distinct !DISubprogram(name: "new_display<&&str>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h284bd7125bac7ee2E", scope: !2123, file: !2064, line: 318, type: !3023, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !483, retainedNodes: !3025)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!2123, !2873}
!3025 = !{!3026}
!3026 = !DILocalVariable(name: "x", arg: 1, scope: !3022, file: !2064, line: 318, type: !2873)
!3027 = !DILocation(line: 318, column: 30, scope: !3022)
!3028 = !DILocation(line: 319, column: 23, scope: !3022)
!3029 = !DILocalVariable(name: "x", scope: !3030, file: !2064, line: 319, type: !2873, align: 8)
!3030 = distinct !DISubprogram(name: "new<&&str>", linkageName: "_ZN4core3fmt10ArgumentV13new17hb136ac7bd61cc539E", scope: !2123, file: !2064, line: 329, type: !3031, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !483, retainedNodes: !3034)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{!2123, !2873, !3033}
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&&&str, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2871, size: 64, align: 64, dwarfAddressSpace: 0)
!3034 = !{!3029, !3035}
!3035 = !DILocalVariable(name: "f", scope: !3030, file: !2064, line: 319, type: !3033, align: 8)
!3036 = !DILocation(line: 319, column: 13, scope: !3030, inlinedAt: !3037)
!3037 = !DILocation(line: 319, column: 13, scope: !3022)
!3038 = !DILocation(line: 319, column: 26, scope: !3022)
!3039 = !DILocation(line: 320, column: 10, scope: !3022)
!3040 = distinct !DISubprogram(name: "new_display<i32>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hca781f09679ab152E", scope: !2123, file: !2064, line: 318, type: !3041, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2783, retainedNodes: !3044)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!2123, !3043}
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !62, size: 64, align: 64, dwarfAddressSpace: 0)
!3044 = !{!3045}
!3045 = !DILocalVariable(name: "x", arg: 1, scope: !3040, file: !2064, line: 318, type: !3043)
!3046 = !DILocation(line: 318, column: 30, scope: !3040)
!3047 = !DILocation(line: 319, column: 23, scope: !3040)
!3048 = !DILocalVariable(name: "x", scope: !3049, file: !2064, line: 319, type: !3043, align: 8)
!3049 = distinct !DISubprogram(name: "new<i32>", linkageName: "_ZN4core3fmt10ArgumentV13new17h53a7e70398b8ebe0E", scope: !2123, file: !2064, line: 329, type: !3050, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2783, retainedNodes: !3055)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!2123, !3043, !3052}
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&i32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !3053, size: 64, align: 64, dwarfAddressSpace: 0)
!3053 = !DISubroutineType(types: !3054)
!3054 = !{!2133, !3043, !2150}
!3055 = !{!3048, !3056}
!3056 = !DILocalVariable(name: "f", scope: !3049, file: !2064, line: 319, type: !3052, align: 8)
!3057 = !DILocation(line: 319, column: 13, scope: !3049, inlinedAt: !3058)
!3058 = !DILocation(line: 319, column: 13, scope: !3040)
!3059 = !DILocation(line: 319, column: 26, scope: !3040)
!3060 = !DILocation(line: 320, column: 10, scope: !3040)
!3061 = distinct !DISubprogram(name: "new_display<&str>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hd3e7c3896cc0a32bE", scope: !2123, file: !2064, line: 318, type: !3062, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !3064)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!2123, !199}
!3064 = !{!3065}
!3065 = !DILocalVariable(name: "x", arg: 1, scope: !3061, file: !2064, line: 318, type: !199)
!3066 = !DILocation(line: 318, column: 30, scope: !3061)
!3067 = !DILocation(line: 319, column: 23, scope: !3061)
!3068 = !DILocalVariable(name: "x", scope: !3069, file: !2064, line: 319, type: !199, align: 8)
!3069 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN4core3fmt10ArgumentV13new17h4ffac0e44a4492c5E", scope: !2123, file: !2064, line: 329, type: !3070, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !3073)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!2123, !199, !3072}
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&&str, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2846, size: 64, align: 64, dwarfAddressSpace: 0)
!3073 = !{!3068, !3074}
!3074 = !DILocalVariable(name: "f", scope: !3069, file: !2064, line: 319, type: !3072, align: 8)
!3075 = !DILocation(line: 319, column: 13, scope: !3069, inlinedAt: !3076)
!3076 = !DILocation(line: 319, column: 13, scope: !3061)
!3077 = !DILocation(line: 319, column: 26, scope: !3061)
!3078 = !DILocation(line: 320, column: 10, scope: !3061)
!3079 = distinct !DISubprogram(name: "new_display<alloc::borrow::Cow<str>>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hf28baa3399b6d67fE", scope: !2123, file: !2064, line: 318, type: !3080, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3100, retainedNodes: !3098)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!2123, !3082}
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::borrow::Cow<str>", baseType: !3083, size: 64, align: 64, dwarfAddressSpace: 0)
!3083 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cow<str>", scope: !3084, file: !2, size: 256, align: 64, elements: !3085, templateParams: !23, identifier: "34e332c053278c4862619046963d922a")
!3084 = !DINamespace(name: "borrow", scope: !300)
!3085 = !{!3086}
!3086 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3083, file: !2, size: 256, align: 64, elements: !3087, templateParams: !23, identifier: "2c3904cfa9cbc526e8c619a3d174937", discriminator: !3097)
!3087 = !{!3088, !3093}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "Borrowed", scope: !3086, file: !2, baseType: !3089, size: 256, align: 64, extraData: i64 0)
!3089 = !DICompositeType(tag: DW_TAG_structure_type, name: "Borrowed", scope: !3083, file: !2, size: 256, align: 64, elements: !3090, templateParams: !3092, identifier: "4529cbaf689c075970b78a78f2381fa1")
!3090 = !{!3091}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3089, file: !2, baseType: !137, size: 128, align: 64, offset: 64)
!3092 = !{!2994}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "Owned", scope: !3086, file: !2, baseType: !3094, size: 256, align: 64, extraData: i64 1)
!3094 = !DICompositeType(tag: DW_TAG_structure_type, name: "Owned", scope: !3083, file: !2, size: 256, align: 64, elements: !3095, templateParams: !3092, identifier: "ac9a717621aff4f8596b2a038d0718fb")
!3095 = !{!3096}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3094, file: !2, baseType: !312, size: 192, align: 64, offset: 64)
!3097 = !DIDerivedType(tag: DW_TAG_member, scope: !3083, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!3098 = !{!3099}
!3099 = !DILocalVariable(name: "x", arg: 1, scope: !3079, file: !2064, line: 318, type: !3082)
!3100 = !{!3101}
!3101 = !DITemplateTypeParameter(name: "T", type: !3083)
!3102 = !DILocation(line: 318, column: 30, scope: !3079)
!3103 = !DILocation(line: 319, column: 23, scope: !3079)
!3104 = !DILocalVariable(name: "x", scope: !3105, file: !2064, line: 319, type: !3082, align: 8)
!3105 = distinct !DISubprogram(name: "new<alloc::borrow::Cow<str>>", linkageName: "_ZN4core3fmt10ArgumentV13new17h6d7fb74dc2c4b6b5E", scope: !2123, file: !2064, line: 329, type: !3106, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3100, retainedNodes: !3111)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!2123, !3082, !3108}
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&alloc::borrow::Cow<str>, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !3109, size: 64, align: 64, dwarfAddressSpace: 0)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{!2133, !3082, !2150}
!3111 = !{!3104, !3112}
!3112 = !DILocalVariable(name: "f", scope: !3105, file: !2064, line: 319, type: !3108, align: 8)
!3113 = !DILocation(line: 319, column: 13, scope: !3105, inlinedAt: !3114)
!3114 = !DILocation(line: 319, column: 13, scope: !3079)
!3115 = !DILocation(line: 319, column: 26, scope: !3079)
!3116 = !DILocation(line: 320, column: 10, scope: !3079)
!3117 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h68a6d8adc10b481cE", scope: !2065, file: !2064, line: 390, type: !3118, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !3120)
!3118 = !DISubroutineType(types: !3119)
!3119 = !{!2065, !2068, !2119}
!3120 = !{!3121, !3122}
!3121 = !DILocalVariable(name: "pieces", arg: 1, scope: !3117, file: !2064, line: 390, type: !2068)
!3122 = !DILocalVariable(name: "args", arg: 2, scope: !3117, file: !2064, line: 390, type: !2119)
!3123 = !DILocation(line: 390, column: 25, scope: !3117)
!3124 = !DILocation(line: 390, column: 53, scope: !3117)
!3125 = !DILocation(line: 391, column: 12, scope: !3117)
!3126 = !DILocation(line: 391, column: 56, scope: !3117)
!3127 = !DILocation(line: 391, column: 41, scope: !3117)
!3128 = !DILocation(line: 394, column: 34, scope: !3117)
!3129 = !DILocation(line: 394, column: 9, scope: !3117)
!3130 = !DILocation(line: 395, column: 6, scope: !3117)
!3131 = !DILocation(line: 392, column: 13, scope: !3117)
!3132 = distinct !DISubprogram(name: "assume_init_drop<core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17h4da2b390b04c8ad3E", scope: !1433, file: !1609, line: 731, type: !3133, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1440, retainedNodes: !3136)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{null, !3135}
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>", baseType: !1433, size: 64, align: 64, dwarfAddressSpace: 0)
!3136 = !{!3137}
!3137 = !DILocalVariable(name: "self", arg: 1, scope: !3132, file: !1609, line: 731, type: !3135)
!3138 = !DILocation(line: 731, column: 36, scope: !3132)
!3139 = !DILocation(line: 735, column: 37, scope: !3132)
!3140 = !DILocalVariable(name: "self", scope: !3141, file: !1609, line: 735, type: !3135, align: 8)
!3141 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h7cc76de4a341b511E", scope: !1433, file: !1609, line: 574, type: !3142, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1440, retainedNodes: !3145)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!3144, !3135}
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<std::ffi::os_str::OsString>", baseType: !1388, size: 64, align: 64, dwarfAddressSpace: 0)
!3145 = !{!3140}
!3146 = !DILocation(line: 735, column: 37, scope: !3141, inlinedAt: !3139)
!3147 = !DILocation(line: 735, column: 18, scope: !3132)
!3148 = !DILocation(line: 736, column: 6, scope: !3132)
!3149 = distinct !DISubprogram(name: "assume_init_drop<std::ffi::os_str::OsString>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_drop17hea943d09be3c0b44E", scope: !1422, file: !1609, line: 731, type: !3150, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1394, retainedNodes: !3153)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{null, !3152}
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>", baseType: !1422, size: 64, align: 64, dwarfAddressSpace: 0)
!3153 = !{!3154}
!3154 = !DILocalVariable(name: "self", arg: 1, scope: !3149, file: !1609, line: 731, type: !3152)
!3155 = !DILocation(line: 731, column: 36, scope: !3149)
!3156 = !DILocation(line: 735, column: 37, scope: !3149)
!3157 = !DILocalVariable(name: "self", scope: !3158, file: !1609, line: 735, type: !3152, align: 8)
!3158 = distinct !DISubprogram(name: "as_mut_ptr<std::ffi::os_str::OsString>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h85f18da76e7ef278E", scope: !1422, file: !1609, line: 574, type: !3159, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1394, retainedNodes: !3162)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{!3161, !3152}
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::ffi::os_str::OsString", baseType: !1376, size: 64, align: 64, dwarfAddressSpace: 0)
!3162 = !{!3157}
!3163 = !DILocation(line: 735, column: 37, scope: !3158, inlinedAt: !3156)
!3164 = !DILocation(line: 735, column: 18, scope: !3149)
!3165 = !DILocation(line: 736, column: 6, scope: !3149)
!3166 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17h2fe7bc61199dfd35E", scope: !210, file: !627, line: 913, type: !3167, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !3170)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!9, !3169, !9}
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3170 = !{!3171, !3172, !3173}
!3171 = !DILocalVariable(name: "dest", arg: 1, scope: !3166, file: !627, line: 913, type: !3169)
!3172 = !DILocalVariable(name: "src", arg: 2, scope: !3166, file: !627, line: 913, type: !9)
!3173 = !DILocalVariable(name: "result", scope: !3174, file: !627, line: 918, type: !9, align: 8)
!3174 = distinct !DILexicalBlock(scope: !3166, file: !627, line: 918, column: 9)
!3175 = !DILocation(line: 913, column: 25, scope: !3166)
!3176 = !DILocation(line: 913, column: 39, scope: !3166)
!3177 = !DILocalVariable(name: "src", scope: !3178, file: !627, line: 919, type: !9, align: 8)
!3178 = !DILexicalBlockFile(scope: !3179, file: !627, discriminator: 0)
!3179 = distinct !DISubprogram(name: "write<usize>", linkageName: "_ZN4core3ptr5write17h689c72a13c0757a3E", scope: !43, file: !399, line: 1296, type: !3180, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !3183)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{null, !3182, !9}
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3183 = !{!3184, !3177}
!3184 = !DILocalVariable(name: "dst", scope: !3178, file: !627, line: 919, type: !3182, align: 8)
!3185 = !DILocation(line: 919, column: 9, scope: !3178, inlinedAt: !3186)
!3186 = !DILocation(line: 919, column: 9, scope: !3174)
!3187 = !DILocalVariable(name: "tmp", scope: !3188, file: !627, line: 918, type: !3197, align: 8)
!3188 = !DILexicalBlockFile(scope: !3189, file: !627, discriminator: 0)
!3189 = distinct !DILexicalBlock(scope: !3190, file: !399, line: 1107, column: 5)
!3190 = distinct !DISubprogram(name: "read<usize>", linkageName: "_ZN4core3ptr4read17h4fe16f135831d9bfE", scope: !43, file: !399, line: 1099, type: !3191, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !3194)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!9, !3193}
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!3194 = !{!3195, !3187}
!3195 = !DILocalVariable(name: "src", scope: !3196, file: !627, line: 918, type: !3193, align: 8)
!3196 = !DILexicalBlockFile(scope: !3190, file: !627, discriminator: 0)
!3197 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !982, file: !2, size: 64, align: 64, elements: !3198, templateParams: !461, identifier: "d5eca075936c223cc2b20ecedd1e4e46")
!3198 = !{!3199, !3200}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3197, file: !2, baseType: !7, align: 8)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3197, file: !2, baseType: !3201, size: 64, align: 64)
!3201 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !987, file: !2, size: 64, align: 64, elements: !3202, templateParams: !461, identifier: "446cb116741bbe0e5138064f6b058dad")
!3202 = !{!3203}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3201, file: !2, baseType: !9, size: 64, align: 64)
!3204 = !DILocation(line: 918, column: 22, scope: !3188, inlinedAt: !3205)
!3205 = !DILocation(line: 918, column: 22, scope: !3166)
!3206 = !DILocation(line: 918, column: 32, scope: !3166)
!3207 = !DILocation(line: 918, column: 22, scope: !3196, inlinedAt: !3205)
!3208 = !DILocation(line: 918, column: 22, scope: !3209, inlinedAt: !3213)
!3209 = !DILexicalBlockFile(scope: !3210, file: !627, discriminator: 0)
!3210 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h69f9b2e05a507d68E", scope: !3197, file: !1609, line: 320, type: !3211, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !23)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!3197}
!3213 = !DILocation(line: 1107, column: 19, scope: !3190, inlinedAt: !3205)
!3214 = !DILocalVariable(name: "self", scope: !3215, file: !627, line: 918, type: !3219, align: 8)
!3215 = !DILexicalBlockFile(scope: !3216, file: !627, discriminator: 0)
!3216 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hce55d6990ce67f10E", scope: !3197, file: !1609, line: 574, type: !3217, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !3220)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{!3182, !3219}
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !3197, size: 64, align: 64, dwarfAddressSpace: 0)
!3220 = !{!3214}
!3221 = !DILocation(line: 918, column: 22, scope: !3215, inlinedAt: !3222)
!3222 = !DILocation(line: 1115, column: 34, scope: !3189, inlinedAt: !3205)
!3223 = !DILocalVariable(name: "self", scope: !3224, file: !627, line: 918, type: !3197, align: 8)
!3224 = !DILexicalBlockFile(scope: !3225, file: !627, discriminator: 0)
!3225 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h1a7b0e6b28845dfaE", scope: !3197, file: !1609, line: 629, type: !3226, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !3228)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!9, !3197, !344}
!3228 = !{!3223}
!3229 = !DILocation(line: 918, column: 22, scope: !3224, inlinedAt: !3230)
!3230 = !DILocation(line: 1116, column: 9, scope: !3189, inlinedAt: !3205)
!3231 = !DILocalVariable(name: "slot", scope: !3232, file: !627, line: 918, type: !3201, align: 8)
!3232 = !DILexicalBlockFile(scope: !3233, file: !627, discriminator: 0)
!3233 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hffcdffcaa5860d04E", scope: !3201, file: !1575, line: 88, type: !3234, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !3236)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!9, !3201}
!3236 = !{!3231}
!3237 = !DILocation(line: 918, column: 22, scope: !3232, inlinedAt: !3238)
!3238 = !DILocation(line: 634, column: 13, scope: !3225, inlinedAt: !3230)
!3239 = !DILocation(line: 918, column: 13, scope: !3174)
!3240 = !DILocation(line: 919, column: 20, scope: !3174)
!3241 = !DILocation(line: 919, column: 26, scope: !3174)
!3242 = !DILocation(line: 922, column: 2, scope: !3166)
!3243 = !DILocation(line: 922, column: 1, scope: !3166)
!3244 = !DILocation(line: 913, column: 1, scope: !3166)
!3245 = distinct !DISubprogram(name: "replace<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem7replace17hcdd549a02bb507dfE", scope: !210, file: !627, line: 913, type: !3246, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3253, retainedNodes: !3248)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{!1511, !1667, !1511}
!3248 = !{!3249, !3250, !3251}
!3249 = !DILocalVariable(name: "dest", arg: 1, scope: !3245, file: !627, line: 913, type: !1667)
!3250 = !DILocalVariable(name: "src", arg: 2, scope: !3245, file: !627, line: 913, type: !1511)
!3251 = !DILocalVariable(name: "result", scope: !3252, file: !627, line: 918, type: !1511, align: 8)
!3252 = distinct !DILexicalBlock(scope: !3245, file: !627, line: 918, column: 9)
!3253 = !{!3254}
!3254 = !DITemplateTypeParameter(name: "T", type: !1511)
!3255 = !DILocation(line: 913, column: 25, scope: !3245)
!3256 = !DILocation(line: 913, column: 39, scope: !3245)
!3257 = !DILocalVariable(name: "src", scope: !3258, file: !627, line: 919, type: !1511, align: 8)
!3258 = !DILexicalBlockFile(scope: !3259, file: !627, discriminator: 0)
!3259 = distinct !DISubprogram(name: "write<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3ptr5write17hd69179b4ca822cc8E", scope: !43, file: !399, line: 1296, type: !3260, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3253, retainedNodes: !3263)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{null, !3262, !1511}
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", baseType: !1511, size: 64, align: 64, dwarfAddressSpace: 0)
!3263 = !{!3264, !3257}
!3264 = !DILocalVariable(name: "dst", scope: !3258, file: !627, line: 919, type: !3262, align: 8)
!3265 = !DILocation(line: 919, column: 9, scope: !3258, inlinedAt: !3266)
!3266 = !DILocation(line: 919, column: 9, scope: !3252)
!3267 = !DILocalVariable(name: "tmp", scope: !3268, file: !627, line: 918, type: !3277, align: 8)
!3268 = !DILexicalBlockFile(scope: !3269, file: !627, discriminator: 0)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !399, line: 1107, column: 5)
!3270 = distinct !DISubprogram(name: "read<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3ptr4read17h4c5529aef67614ebE", scope: !43, file: !399, line: 1099, type: !3271, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3253, retainedNodes: !3274)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{!1511, !3273}
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", baseType: !1511, size: 64, align: 64, dwarfAddressSpace: 0)
!3274 = !{!3275, !3267}
!3275 = !DILocalVariable(name: "src", scope: !3276, file: !627, line: 918, type: !3273, align: 8)
!3276 = !DILexicalBlockFile(scope: !3270, file: !627, discriminator: 0)
!3277 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", scope: !982, file: !2, size: 128, align: 64, elements: !3278, templateParams: !3253, identifier: "e01e69494f384c1ab35e16d4b712f1d")
!3278 = !{!3279, !3280}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3277, file: !2, baseType: !7, align: 8)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3277, file: !2, baseType: !3281, size: 128, align: 64)
!3281 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", scope: !987, file: !2, size: 128, align: 64, elements: !3282, templateParams: !3253, identifier: "1bc918c09c8c6792b96c9854f3ce5c15")
!3282 = !{!3283}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3281, file: !2, baseType: !1511, size: 128, align: 64)
!3284 = !DILocation(line: 918, column: 22, scope: !3268, inlinedAt: !3285)
!3285 = !DILocation(line: 918, column: 22, scope: !3245)
!3286 = !DILocation(line: 918, column: 32, scope: !3245)
!3287 = !DILocation(line: 918, column: 22, scope: !3276, inlinedAt: !3285)
!3288 = !DILocation(line: 918, column: 22, scope: !3289, inlinedAt: !3293)
!3289 = !DILexicalBlockFile(scope: !3290, file: !627, discriminator: 0)
!3290 = distinct !DISubprogram(name: "uninit<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17haf66809cde6dceedE", scope: !3277, file: !1609, line: 320, type: !3291, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3253, retainedNodes: !23)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{!3277}
!3293 = !DILocation(line: 1107, column: 19, scope: !3270, inlinedAt: !3285)
!3294 = !DILocalVariable(name: "self", scope: !3295, file: !627, line: 918, type: !3299, align: 8)
!3295 = !DILexicalBlockFile(scope: !3296, file: !627, discriminator: 0)
!3296 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h7e86f319b6e4b15eE", scope: !3277, file: !1609, line: 574, type: !3297, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3253, retainedNodes: !3300)
!3297 = !DISubroutineType(types: !3298)
!3298 = !{!3262, !3299}
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", baseType: !3277, size: 64, align: 64, dwarfAddressSpace: 0)
!3300 = !{!3294}
!3301 = !DILocation(line: 918, column: 22, scope: !3295, inlinedAt: !3302)
!3302 = !DILocation(line: 1115, column: 34, scope: !3269, inlinedAt: !3285)
!3303 = !DILocalVariable(name: "self", scope: !3304, file: !627, line: 918, type: !3277, align: 8)
!3304 = !DILexicalBlockFile(scope: !3305, file: !627, discriminator: 0)
!3305 = distinct !DISubprogram(name: "assume_init<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hc9d1a400828ca30dE", scope: !3277, file: !1609, line: 629, type: !3306, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3253, retainedNodes: !3308)
!3306 = !DISubroutineType(types: !3307)
!3307 = !{!1511, !3277, !344}
!3308 = !{!3303}
!3309 = !DILocation(line: 918, column: 22, scope: !3304, inlinedAt: !3310)
!3310 = !DILocation(line: 1116, column: 9, scope: !3269, inlinedAt: !3285)
!3311 = !DILocalVariable(name: "slot", scope: !3312, file: !627, line: 918, type: !3281, align: 8)
!3312 = !DILexicalBlockFile(scope: !3313, file: !627, discriminator: 0)
!3313 = distinct !DISubprogram(name: "into_inner<core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h0ef5c3516816e2eeE", scope: !3281, file: !1575, line: 88, type: !3314, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3253, retainedNodes: !3316)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{!1511, !3281}
!3316 = !{!3311}
!3317 = !DILocation(line: 918, column: 22, scope: !3312, inlinedAt: !3318)
!3318 = !DILocation(line: 634, column: 13, scope: !3305, inlinedAt: !3310)
!3319 = !DILocation(line: 918, column: 13, scope: !3252)
!3320 = !DILocation(line: 919, column: 20, scope: !3252)
!3321 = !DILocation(line: 919, column: 26, scope: !3252)
!3322 = !DILocation(line: 922, column: 2, scope: !3245)
!3323 = !DILocation(line: 922, column: 1, scope: !3245)
!3324 = !DILocation(line: 913, column: 1, scope: !3245)
!3325 = distinct !DISubprogram(name: "replace<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem7replace17hda57ce3c37e1415dE", scope: !210, file: !627, line: 913, type: !3326, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3334, retainedNodes: !3329)
!3326 = !DISubroutineType(types: !3327)
!3327 = !{!1318, !3328, !1318}
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1318, size: 64, align: 64, dwarfAddressSpace: 0)
!3329 = !{!3330, !3331, !3332}
!3330 = !DILocalVariable(name: "dest", arg: 1, scope: !3325, file: !627, line: 913, type: !3328)
!3331 = !DILocalVariable(name: "src", arg: 2, scope: !3325, file: !627, line: 913, type: !1318)
!3332 = !DILocalVariable(name: "result", scope: !3333, file: !627, line: 918, type: !1318, align: 8)
!3333 = distinct !DILexicalBlock(scope: !3325, file: !627, line: 918, column: 9)
!3334 = !{!3335}
!3335 = !DITemplateTypeParameter(name: "T", type: !1318)
!3336 = !DILocation(line: 918, column: 13, scope: !3333)
!3337 = !DILocation(line: 913, column: 25, scope: !3325)
!3338 = !DILocation(line: 913, column: 39, scope: !3325)
!3339 = !DILocalVariable(name: "src", scope: !3340, file: !627, line: 919, type: !1318, align: 8)
!3340 = !DILexicalBlockFile(scope: !3341, file: !627, discriminator: 0)
!3341 = distinct !DISubprogram(name: "write<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3ptr5write17hf8ea835b2b6abc32E", scope: !43, file: !399, line: 1296, type: !3342, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3334, retainedNodes: !3345)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{null, !3344, !1318}
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1318, size: 64, align: 64, dwarfAddressSpace: 0)
!3345 = !{!3346, !3339}
!3346 = !DILocalVariable(name: "dst", scope: !3340, file: !627, line: 919, type: !3344, align: 8)
!3347 = !DILocation(line: 919, column: 9, scope: !3340, inlinedAt: !3348)
!3348 = !DILocation(line: 919, column: 9, scope: !3333)
!3349 = !DILocalVariable(name: "tmp", scope: !3350, file: !627, line: 918, type: !3359, align: 8)
!3350 = !DILexicalBlockFile(scope: !3351, file: !627, discriminator: 0)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !399, line: 1107, column: 5)
!3352 = distinct !DISubprogram(name: "read<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3ptr4read17hd7c98c971dae90dbE", scope: !43, file: !399, line: 1099, type: !3353, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3334, retainedNodes: !3356)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!1318, !3355}
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1318, size: 64, align: 64, dwarfAddressSpace: 0)
!3356 = !{!3357, !3349}
!3357 = !DILocalVariable(name: "src", scope: !3358, file: !627, line: 918, type: !3355, align: 8)
!3358 = !DILexicalBlockFile(scope: !3352, file: !627, discriminator: 0)
!3359 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !982, file: !2, size: 256, align: 64, elements: !3360, templateParams: !3334, identifier: "e1ce01cb70e5ceaf2d81ea800b3b7f4c")
!3360 = !{!3361, !3362}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !3359, file: !2, baseType: !7, align: 8)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3359, file: !2, baseType: !3363, size: 256, align: 64)
!3363 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !987, file: !2, size: 256, align: 64, elements: !3364, templateParams: !3334, identifier: "cec05f7e7e9e6f3cdfeb0e1c9317c550")
!3364 = !{!3365}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3363, file: !2, baseType: !1318, size: 256, align: 64)
!3366 = !DILocation(line: 918, column: 22, scope: !3350, inlinedAt: !3367)
!3367 = !DILocation(line: 918, column: 22, scope: !3325)
!3368 = !DILocalVariable(name: "self", scope: !3369, file: !627, line: 918, type: !3359, align: 8)
!3369 = !DILexicalBlockFile(scope: !3370, file: !627, discriminator: 0)
!3370 = distinct !DISubprogram(name: "assume_init<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17ha11dc0d598138221E", scope: !3359, file: !1609, line: 629, type: !3371, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3334, retainedNodes: !3373)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{!1318, !3359, !344}
!3373 = !{!3368}
!3374 = !DILocation(line: 918, column: 22, scope: !3369, inlinedAt: !3375)
!3375 = !DILocation(line: 1116, column: 9, scope: !3351, inlinedAt: !3367)
!3376 = !DILocalVariable(name: "slot", scope: !3377, file: !627, line: 918, type: !3363, align: 8)
!3377 = !DILexicalBlockFile(scope: !3378, file: !627, discriminator: 0)
!3378 = distinct !DISubprogram(name: "into_inner<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h26348a31f6c6f949E", scope: !3363, file: !1575, line: 88, type: !3379, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3334, retainedNodes: !3381)
!3379 = !DISubroutineType(types: !3380)
!3380 = !{!1318, !3363}
!3381 = !{!3376}
!3382 = !DILocation(line: 918, column: 22, scope: !3377, inlinedAt: !3383)
!3383 = !DILocation(line: 634, column: 13, scope: !3370, inlinedAt: !3375)
!3384 = !DILocation(line: 918, column: 32, scope: !3325)
!3385 = !DILocation(line: 918, column: 22, scope: !3358, inlinedAt: !3367)
!3386 = !DILocation(line: 918, column: 22, scope: !3387, inlinedAt: !3391)
!3387 = !DILexicalBlockFile(scope: !3388, file: !627, discriminator: 0)
!3388 = distinct !DISubprogram(name: "uninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h0e19f67aa1fffdf3E", scope: !3359, file: !1609, line: 320, type: !3389, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3334, retainedNodes: !23)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!3359}
!3391 = !DILocation(line: 1107, column: 19, scope: !3352, inlinedAt: !3367)
!3392 = !DILocalVariable(name: "self", scope: !3393, file: !627, line: 918, type: !3397, align: 8)
!3393 = !DILexicalBlockFile(scope: !3394, file: !627, discriminator: 0)
!3394 = distinct !DISubprogram(name: "as_mut_ptr<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17hb667ba95fc569e81E", scope: !3359, file: !1609, line: 574, type: !3395, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3334, retainedNodes: !3398)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!3344, !3397}
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !3359, size: 64, align: 64, dwarfAddressSpace: 0)
!3398 = !{!3392}
!3399 = !DILocation(line: 918, column: 22, scope: !3393, inlinedAt: !3400)
!3400 = !DILocation(line: 1115, column: 34, scope: !3351, inlinedAt: !3367)
!3401 = !DILocation(line: 919, column: 20, scope: !3333)
!3402 = !DILocation(line: 919, column: 26, scope: !3333)
!3403 = !DILocation(line: 922, column: 2, scope: !3325)
!3404 = !DILocation(line: 922, column: 1, scope: !3325)
!3405 = !DILocation(line: 913, column: 1, scope: !3325)
!3406 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h3624cd181a4fd12eE", scope: !2929, file: !2928, line: 438, type: !494, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !3407)
!3407 = !{!3408, !3409, !3410, !3412}
!3408 = !DILocalVariable(name: "self", arg: 1, scope: !3406, file: !2928, line: 438, type: !9)
!3409 = !DILocalVariable(name: "rhs", arg: 2, scope: !3406, file: !2928, line: 438, type: !9)
!3410 = !DILocalVariable(name: "a", scope: !3411, file: !2928, line: 439, type: !9, align: 8)
!3411 = distinct !DILexicalBlock(scope: !3406, file: !2928, line: 439, column: 13)
!3412 = !DILocalVariable(name: "b", scope: !3411, file: !2928, line: 439, type: !1159, align: 1)
!3413 = !DILocation(line: 438, column: 34, scope: !3406)
!3414 = !DILocation(line: 438, column: 40, scope: !3406)
!3415 = !DILocation(line: 439, column: 26, scope: !3406)
!3416 = !DILocalVariable(name: "self", scope: !3417, file: !2928, line: 439, type: !9, align: 8)
!3417 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17he3f36ecce9400a82E", scope: !2929, file: !2928, line: 1506, type: !3418, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !3424)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!3420, !9, !9}
!3420 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !3421, templateParams: !23, identifier: "23309350ccb628a7900e37caa17b1249")
!3421 = !{!3422, !3423}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3420, file: !2, baseType: !9, size: 64, align: 64)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3420, file: !2, baseType: !1159, size: 8, align: 8, offset: 64)
!3424 = !{!3416, !3425, !3426, !3428}
!3425 = !DILocalVariable(name: "rhs", scope: !3417, file: !2928, line: 439, type: !9, align: 8)
!3426 = !DILocalVariable(name: "a", scope: !3427, file: !2928, line: 439, type: !190, align: 8)
!3427 = distinct !DILexicalBlock(scope: !3417, file: !2928, line: 1507, column: 13)
!3428 = !DILocalVariable(name: "b", scope: !3427, file: !2928, line: 439, type: !1159, align: 1)
!3429 = !DILocation(line: 439, column: 26, scope: !3417, inlinedAt: !3415)
!3430 = !DILocation(line: 439, column: 47, scope: !3406)
!3431 = !DILocation(line: 439, column: 26, scope: !3427, inlinedAt: !3415)
!3432 = !DILocation(line: 439, column: 18, scope: !3406)
!3433 = !DILocation(line: 439, column: 18, scope: !3411)
!3434 = !DILocation(line: 439, column: 21, scope: !3406)
!3435 = !DILocation(line: 439, column: 21, scope: !3411)
!3436 = !DILocation(line: 440, column: 16, scope: !3411)
!3437 = !DILocation(line: 440, column: 42, scope: !3411)
!3438 = !DILocation(line: 440, column: 13, scope: !3411)
!3439 = !DILocation(line: 440, column: 30, scope: !3411)
!3440 = !DILocation(line: 441, column: 10, scope: !3406)
!3441 = !{i64 0, i64 2}
!3442 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h3032ae0d07eed7eaE", scope: !2929, file: !2928, line: 555, type: !494, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !3443)
!3443 = !{!3444, !3445, !3446, !3448}
!3444 = !DILocalVariable(name: "self", arg: 1, scope: !3442, file: !2928, line: 555, type: !9)
!3445 = !DILocalVariable(name: "rhs", arg: 2, scope: !3442, file: !2928, line: 555, type: !9)
!3446 = !DILocalVariable(name: "a", scope: !3447, file: !2928, line: 556, type: !9, align: 8)
!3447 = distinct !DILexicalBlock(scope: !3442, file: !2928, line: 556, column: 13)
!3448 = !DILocalVariable(name: "b", scope: !3447, file: !2928, line: 556, type: !1159, align: 1)
!3449 = !DILocation(line: 555, column: 34, scope: !3442)
!3450 = !DILocation(line: 555, column: 40, scope: !3442)
!3451 = !DILocation(line: 556, column: 26, scope: !3442)
!3452 = !DILocalVariable(name: "self", scope: !3453, file: !2928, line: 556, type: !9, align: 8)
!3453 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hce0beb250bffdecdE", scope: !2929, file: !2928, line: 1688, type: !3418, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !3454)
!3454 = !{!3452, !3455, !3456, !3458}
!3455 = !DILocalVariable(name: "rhs", scope: !3453, file: !2928, line: 556, type: !9, align: 8)
!3456 = !DILocalVariable(name: "a", scope: !3457, file: !2928, line: 556, type: !190, align: 8)
!3457 = distinct !DILexicalBlock(scope: !3453, file: !2928, line: 1689, column: 13)
!3458 = !DILocalVariable(name: "b", scope: !3457, file: !2928, line: 556, type: !1159, align: 1)
!3459 = !DILocation(line: 556, column: 26, scope: !3453, inlinedAt: !3451)
!3460 = !DILocation(line: 556, column: 47, scope: !3442)
!3461 = !DILocation(line: 556, column: 26, scope: !3457, inlinedAt: !3451)
!3462 = !DILocation(line: 556, column: 18, scope: !3442)
!3463 = !DILocation(line: 556, column: 18, scope: !3447)
!3464 = !DILocation(line: 556, column: 21, scope: !3442)
!3465 = !DILocation(line: 556, column: 21, scope: !3447)
!3466 = !DILocation(line: 557, column: 16, scope: !3447)
!3467 = !DILocation(line: 557, column: 42, scope: !3447)
!3468 = !DILocation(line: 557, column: 13, scope: !3447)
!3469 = !DILocation(line: 557, column: 30, scope: !3447)
!3470 = !DILocation(line: 558, column: 10, scope: !3442)
!3471 = distinct !DISubprogram(name: "call_mut<fn(usize, usize) -> core::option::Option<usize>, (usize, usize)>", linkageName: "_ZN4core3ops8function5FnMut8call_mut17h263dca5034dc8e70E", scope: !3473, file: !3472, line: 164, type: !3475, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3482, retainedNodes: !3478)
!3472 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "3100065230267ed2a3b8753c70d752a6")
!3473 = !DINamespace(name: "FnMut", scope: !3474)
!3474 = !DINamespace(name: "function", scope: !343)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!455, !3477, !9, !9}
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut fn(usize, usize) -> core::option::Option<usize>", baseType: !493, size: 64, align: 64, dwarfAddressSpace: 0)
!3478 = !{!3479, !3481}
!3479 = !DILocalVariable(arg: 1, scope: !3471, file: !3472, line: 164, type: !3480)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const fn(usize, usize) -> core::option::Option<usize>", baseType: !493, size: 64, align: 64, dwarfAddressSpace: 0)
!3481 = !DILocalVariable(arg: 2, scope: !3471, file: !3472, line: 164, type: !1283)
!3482 = !{!3483, !3484}
!3483 = !DITemplateTypeParameter(name: "Self", type: !493)
!3484 = !DITemplateTypeParameter(name: "Args", type: !1283)
!3485 = !DILocation(line: 164, column: 5, scope: !3471)
!3486 = distinct !DISubprogram(name: "call_once<(&&str), alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h707c8e4717864377E", scope: !3487, file: !3472, line: 300, type: !3489, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3503, retainedNodes: !3497)
!3487 = !DINamespace(name: "{impl#4}", scope: !3488)
!3488 = !DINamespace(name: "impls", scope: !3474)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!3491, !3495, !199}
!3491 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !3492, templateParams: !23, identifier: "3f074c895be6b435470b96b295e5ab89")
!3492 = !{!3493, !3494}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3491, file: !2, baseType: !980, size: 64, align: 64)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3491, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>", baseType: !3496, size: 64, align: 64, dwarfAddressSpace: 0)
!3496 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<str, u8, &str>", scope: !488, file: !2, align: 8, elements: !23, identifier: "55c76c0ea0ced1e080172f7997c57778")
!3497 = !{!3498, !3499}
!3498 = !DILocalVariable(name: "self", arg: 1, scope: !3486, file: !3472, line: 300, type: !3495)
!3499 = !DILocalVariable(name: "args", arg: 2, scope: !3486, file: !3472, line: 300, type: !3500)
!3500 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&&str)", file: !2, size: 64, align: 64, elements: !3501, templateParams: !23, identifier: "a2210fc97dfddf277a8d72e3d963a73a")
!3501 = !{!3502}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3500, file: !2, baseType: !199, size: 64, align: 64)
!3503 = !{!3504, !3505}
!3504 = !DITemplateTypeParameter(name: "A", type: !3500)
!3505 = !DITemplateTypeParameter(name: "F", type: !3496)
!3506 = !DILocation(line: 300, column: 41, scope: !3486)
!3507 = !DILocation(line: 300, column: 47, scope: !3486)
!3508 = !DILocation(line: 301, column: 30, scope: !3486)
!3509 = !DILocation(line: 301, column: 13, scope: !3486)
!3510 = !DILocation(line: 302, column: 10, scope: !3486)
!3511 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h3c2f1caed72981f4E", scope: !3512, file: !3472, line: 248, type: !3513, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3519, retainedNodes: !3516)
!3512 = !DINamespace(name: "FnOnce", scope: !3474)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!62, !3515}
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!3516 = !{!3517, !3518}
!3517 = !DILocalVariable(arg: 1, scope: !3511, file: !3472, line: 248, type: !3515)
!3518 = !DILocalVariable(arg: 2, scope: !3511, file: !3472, line: 248, type: !7)
!3519 = !{!3520, !3521}
!3520 = !DITemplateTypeParameter(name: "Self", type: !14)
!3521 = !DITemplateTypeParameter(name: "Args", type: !7)
!3522 = !DILocation(line: 248, column: 5, scope: !3511)
!3523 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h21cfed8141e90430E", scope: !3512, file: !3472, line: 248, type: !3524, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3519, retainedNodes: !3526)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!62, !14}
!3526 = !{!3527, !3528}
!3527 = !DILocalVariable(arg: 1, scope: !3523, file: !3472, line: 248, type: !14)
!3528 = !DILocalVariable(arg: 2, scope: !3523, file: !3472, line: 248, type: !7)
!3529 = !DILocation(line: 248, column: 5, scope: !3523)
!3530 = distinct !DISubprogram(name: "call_once<fn(), ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h5f346be4eda2d72eE", scope: !3512, file: !3472, line: 248, type: !1854, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3534, retainedNodes: !3531)
!3531 = !{!3532, !3533}
!3532 = !DILocalVariable(arg: 1, scope: !3530, file: !3472, line: 248, type: !20)
!3533 = !DILocalVariable(arg: 2, scope: !3530, file: !3472, line: 248, type: !7)
!3534 = !{!3535, !3521}
!3535 = !DITemplateTypeParameter(name: "Self", type: !20)
!3536 = !DILocation(line: 248, column: 5, scope: !3530)
!3537 = distinct !DISubprogram(name: "drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17hd88a457266cabe3aE", scope: !43, file: !399, line: 487, type: !3538, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !52, retainedNodes: !3541)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{null, !3540}
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", baseType: !54, size: 64, align: 64, dwarfAddressSpace: 0)
!3541 = !{!3542}
!3542 = !DILocalVariable(arg: 1, scope: !3537, file: !399, line: 487, type: !3540)
!3543 = !DILocation(line: 487, column: 1, scope: !3537)
!3544 = !{i8 0, i8 4}
!3545 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr117drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h7a73d68e8a63a3eeE", scope: !43, file: !399, line: 487, type: !3546, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3551, retainedNodes: !3549)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{null, !3548}
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", baseType: !114, size: 64, align: 64, dwarfAddressSpace: 0)
!3549 = !{!3550}
!3550 = !DILocalVariable(arg: 1, scope: !3545, file: !399, line: 487, type: !3548)
!3551 = !{!3552}
!3552 = !DITemplateTypeParameter(name: "T", type: !114)
!3553 = !DILocation(line: 487, column: 1, scope: !3545)
!3554 = distinct !DISubprogram(name: "drop_in_place<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h1e60537dafd513eeE", scope: !43, file: !399, line: 487, type: !3555, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !3558)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{null, !3557}
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1508, size: 64, align: 64, dwarfAddressSpace: 0)
!3558 = !{!3559}
!3559 = !DILocalVariable(arg: 1, scope: !3554, file: !399, line: 487, type: !3557)
!3560 = !DILocation(line: 487, column: 1, scope: !3554)
!3561 = distinct !DISubprogram(name: "drop_in_place<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..IntoIter$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h818fbd173477ac4fE", scope: !43, file: !399, line: 487, type: !3562, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3567, retainedNodes: !3565)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !3564}
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1311, size: 64, align: 64, dwarfAddressSpace: 0)
!3565 = !{!3566}
!3566 = !DILocalVariable(arg: 1, scope: !3561, file: !399, line: 487, type: !3564)
!3567 = !{!3568}
!3568 = !DITemplateTypeParameter(name: "T", type: !1311)
!3569 = !DILocation(line: 487, column: 1, scope: !3561)
!3570 = distinct !DISubprogram(name: "drop_in_place<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr203drop_in_place$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17h587c7f485e27e66aE", scope: !43, file: !399, line: 487, type: !3571, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3579, retainedNodes: !3577)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{null, !3573}
!3573 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut (dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !3574, templateParams: !23, identifier: "4ee7a14c9fc5bc6012439a13a4dc04ea")
!3574 = !{!3575, !3576}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3573, file: !2, baseType: !2704, size: 64, align: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3573, file: !2, baseType: !120, size: 64, align: 64, offset: 64)
!3577 = !{!3578}
!3578 = !DILocalVariable(arg: 1, scope: !3570, file: !399, line: 487, type: !3573)
!3579 = !{!3580}
!3580 = !DITemplateTypeParameter(name: "T", type: !2705)
!3581 = !DILocation(line: 487, column: 1, scope: !3570)
!3582 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h9eb861c09485f364E", scope: !43, file: !399, line: 487, type: !3583, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !3586)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{null, !3585}
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", baseType: !2701, size: 64, align: 64, dwarfAddressSpace: 0)
!3586 = !{!3587}
!3587 = !DILocalVariable(arg: 1, scope: !3582, file: !399, line: 487, type: !3585)
!3588 = !DILocation(line: 487, column: 1, scope: !3582)
!3589 = distinct !DISubprogram(name: "drop_in_place<[alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>]>", linkageName: "_ZN4core3ptr238drop_in_place$LT$$u5b$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u5d$$GT$17h4422a65083af32a9E", scope: !43, file: !399, line: 487, type: !3590, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !3597)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{null, !3592}
!3592 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>]", file: !2, size: 128, align: 64, elements: !3593, templateParams: !23, identifier: "1b40e66726df6deb5c2b53c60f9c7a2d")
!3593 = !{!3594, !3596}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3592, file: !2, baseType: !3595, size: 64, align: 64)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64, align: 64, dwarfAddressSpace: 0)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3592, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3597 = !{!3598}
!3598 = !DILocalVariable(arg: 1, scope: !3589, file: !399, line: 487, type: !3592)
!3599 = !DILocation(line: 487, column: 1, scope: !3589)
!3600 = distinct !DISubprogram(name: "drop_in_place<alloc::collections::btree::map::{impl#31}::drop::DropGuard<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr250drop_in_place$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$C$alloc..alloc..Global$GT$$GT$17h029ebd041840b249E", scope: !43, file: !399, line: 487, type: !3601, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3606, retainedNodes: !3604)
!3601 = !DISubroutineType(types: !3602)
!3602 = !{null, !3603}
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::map::{impl#31}::drop::DropGuard<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1821, size: 64, align: 64, dwarfAddressSpace: 0)
!3604 = !{!3605}
!3605 = !DILocalVariable(arg: 1, scope: !3600, file: !399, line: 487, type: !3603)
!3606 = !{!3607}
!3607 = !DITemplateTypeParameter(name: "T", type: !1821)
!3608 = !DILocation(line: 487, column: 1, scope: !3600)
!3609 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17ha74d07525bbc13d6E", scope: !43, file: !399, line: 487, type: !3610, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3615, retainedNodes: !3613)
!3610 = !DISubroutineType(types: !3611)
!3611 = !{null, !3612}
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2688, size: 64, align: 64, dwarfAddressSpace: 0)
!3613 = !{!3614}
!3614 = !DILocalVariable(arg: 1, scope: !3609, file: !399, line: 487, type: !3612)
!3615 = !{!3616}
!3616 = !DITemplateTypeParameter(name: "T", type: !2688)
!3617 = !DILocation(line: 487, column: 1, scope: !3609)
!3618 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h0f9a0176c5f2a35fE", scope: !43, file: !399, line: 487, type: !3619, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3624, retainedNodes: !3622)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{null, !3621}
!3621 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2691, size: 64, align: 64, dwarfAddressSpace: 0)
!3622 = !{!3623}
!3623 = !DILocalVariable(arg: 1, scope: !3618, file: !399, line: 487, type: !3621)
!3624 = !{!3625}
!3625 = !DITemplateTypeParameter(name: "T", type: !2691)
!3626 = !DILocation(line: 487, column: 1, scope: !3618)
!3627 = distinct !DISubprogram(name: "drop_in_place<&&str>", linkageName: "_ZN4core3ptr32drop_in_place$LT$$RF$$RF$str$GT$17hf0fb5c2cb3a8d8dbE", scope: !43, file: !399, line: 487, type: !3628, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !483, retainedNodes: !3631)
!3628 = !DISubroutineType(types: !3629)
!3629 = !{null, !3630}
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &&str", baseType: !199, size: 64, align: 64, dwarfAddressSpace: 0)
!3631 = !{!3632}
!3632 = !DILocalVariable(arg: 1, scope: !3627, file: !399, line: 487, type: !3630)
!3633 = !DILocation(line: 487, column: 1, scope: !3627)
!3634 = distinct !DISubprogram(name: "drop_in_place<std::env::VarError>", linkageName: "_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17h371bdcb895803ce5E", scope: !43, file: !399, line: 487, type: !3635, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3640, retainedNodes: !3638)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{null, !3637}
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::env::VarError", baseType: !2429, size: 64, align: 64, dwarfAddressSpace: 0)
!3638 = !{!3639}
!3639 = !DILocalVariable(arg: 1, scope: !3634, file: !399, line: 487, type: !3637)
!3640 = !{!3641}
!3641 = !DITemplateTypeParameter(name: "T", type: !2429)
!3642 = !DILocation(line: 487, column: 1, scope: !3634)
!3643 = distinct !DISubprogram(name: "drop_in_place<std::process::Output>", linkageName: "_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17h8f570cd6e5742122E", scope: !43, file: !399, line: 487, type: !3644, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3661, retainedNodes: !3659)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{null, !3646}
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::process::Output", baseType: !3647, size: 64, align: 64, dwarfAddressSpace: 0)
!3647 = !DICompositeType(tag: DW_TAG_structure_type, name: "Output", scope: !2388, file: !2, size: 448, align: 64, elements: !3648, templateParams: !23, identifier: "d92d080b5f74a6fc7423d6be3612e829")
!3648 = !{!3649, !3657, !3658}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3647, file: !2, baseType: !3650, size: 32, align: 32, offset: 384)
!3650 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitStatus", scope: !2388, file: !2, size: 32, align: 32, elements: !3651, templateParams: !23, identifier: "33b5e65f8c7731ca4a5641070fcb561c")
!3651 = !{!3652}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3650, file: !2, baseType: !3653, size: 32, align: 32)
!3653 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitStatus", scope: !3654, file: !2, size: 32, align: 32, elements: !3655, templateParams: !23, identifier: "9dcc83f2f270f1838356ae2cf7bf5347")
!3654 = !DINamespace(name: "process_inner", scope: !2393)
!3655 = !{!3656}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3653, file: !2, baseType: !62, size: 32, align: 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "stdout", scope: !3647, file: !2, baseType: !315, size: 192, align: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "stderr", scope: !3647, file: !2, baseType: !315, size: 192, align: 64, offset: 192)
!3659 = !{!3660}
!3660 = !DILocalVariable(arg: 1, scope: !3643, file: !399, line: 487, type: !3646)
!3661 = !{!3662}
!3662 = !DITemplateTypeParameter(name: "T", type: !3647)
!3663 = !DILocation(line: 487, column: 1, scope: !3643)
!3664 = distinct !DISubprogram(name: "drop_in_place<alloc::string::String>", linkageName: "_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17had94ab90754f0e3cE", scope: !43, file: !399, line: 487, type: !3665, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3006, retainedNodes: !3668)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{null, !3667}
!3667 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::String", baseType: !312, size: 64, align: 64, dwarfAddressSpace: 0)
!3668 = !{!3669}
!3669 = !DILocalVariable(arg: 1, scope: !3664, file: !399, line: 487, type: !3667)
!3670 = !DILocation(line: 487, column: 1, scope: !3664)
!3671 = distinct !DISubprogram(name: "drop_in_place<std::io::error::Error>", linkageName: "_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17hb5924639660c528dE", scope: !43, file: !399, line: 487, type: !3672, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3677, retainedNodes: !3675)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{null, !3674}
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::Error", baseType: !32, size: 64, align: 64, dwarfAddressSpace: 0)
!3675 = !{!3676}
!3676 = !DILocalVariable(arg: 1, scope: !3671, file: !399, line: 487, type: !3674)
!3677 = !{!3678}
!3678 = !DITemplateTypeParameter(name: "T", type: !32)
!3679 = !DILocation(line: 487, column: 1, scope: !3671)
!3680 = distinct !DISubprogram(name: "drop_in_place<std::process::Command>", linkageName: "_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17hbeadb02d4d13d0c9E", scope: !43, file: !399, line: 487, type: !3681, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3686, retainedNodes: !3684)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{null, !3683}
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::process::Command", baseType: !2589, size: 64, align: 64, dwarfAddressSpace: 0)
!3684 = !{!3685}
!3685 = !DILocalVariable(arg: 1, scope: !3680, file: !399, line: 487, type: !3683)
!3686 = !{!3687}
!3687 = !DITemplateTypeParameter(name: "T", type: !2589)
!3688 = !DILocation(line: 487, column: 1, scope: !3680)
!3689 = distinct !DISubprogram(name: "drop_in_place<std::io::error::Custom>", linkageName: "_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h3284e708e170caddE", scope: !43, file: !399, line: 487, type: !3690, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !3692)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{null, !1899}
!3692 = !{!3693}
!3693 = !DILocalVariable(arg: 1, scope: !3689, file: !399, line: 487, type: !1899)
!3694 = !{!3695}
!3695 = !DITemplateTypeParameter(name: "T", type: !66)
!3696 = !DILocation(line: 487, column: 1, scope: !3689)
!3697 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h072d17904a982087E", scope: !43, file: !399, line: 487, type: !3698, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3703, retainedNodes: !3701)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{null, !3700}
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !315, size: 64, align: 64, dwarfAddressSpace: 0)
!3701 = !{!3702}
!3702 = !DILocalVariable(arg: 1, scope: !3697, file: !399, line: 487, type: !3700)
!3703 = !{!3704}
!3704 = !DITemplateTypeParameter(name: "T", type: !315)
!3705 = !DILocation(line: 487, column: 1, scope: !3697)
!3706 = distinct !DISubprogram(name: "drop_in_place<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hbe4f4b40e09a24caE", scope: !43, file: !399, line: 487, type: !3707, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !3710)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{null, !3709}
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::ffi::c_str::CString", baseType: !2595, size: 64, align: 64, dwarfAddressSpace: 0)
!3710 = !{!3711}
!3711 = !DILocalVariable(arg: 1, scope: !3706, file: !399, line: 487, type: !3709)
!3712 = !DILocation(line: 487, column: 1, scope: !3706)
!3713 = distinct !DISubprogram(name: "drop_in_place<std::ffi::os_str::OsString>", linkageName: "_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17hf58f7887236eeb01E", scope: !43, file: !399, line: 487, type: !3714, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1394, retainedNodes: !3716)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{null, !3161}
!3716 = !{!3717}
!3717 = !DILocalVariable(arg: 1, scope: !3713, file: !399, line: 487, type: !3161)
!3718 = !DILocation(line: 487, column: 1, scope: !3713)
!3719 = distinct !DISubprogram(name: "drop_in_place<std::os::fd::owned::OwnedFd>", linkageName: "_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17hfdd6a2d00d4ea053E", scope: !43, file: !399, line: 487, type: !3720, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3725, retainedNodes: !3723)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{null, !3722}
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::os::fd::owned::OwnedFd", baseType: !2761, size: 64, align: 64, dwarfAddressSpace: 0)
!3723 = !{!3724}
!3724 = !DILocalVariable(arg: 1, scope: !3719, file: !399, line: 487, type: !3722)
!3725 = !{!3726}
!3726 = !DITemplateTypeParameter(name: "T", type: !2761)
!3727 = !DILocation(line: 487, column: 1, scope: !3719)
!3728 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::os_str::Buf>", linkageName: "_ZN4core3ptr48drop_in_place$LT$std..sys..unix..os_str..Buf$GT$17hc68db956ffa81994E", scope: !43, file: !399, line: 487, type: !3729, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3734, retainedNodes: !3732)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{null, !3731}
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::os_str::Buf", baseType: !1381, size: 64, align: 64, dwarfAddressSpace: 0)
!3732 = !{!3733}
!3733 = !DILocalVariable(arg: 1, scope: !3728, file: !399, line: 487, type: !3731)
!3734 = !{!3735}
!3735 = !DITemplateTypeParameter(name: "T", type: !1381)
!3736 = !DILocation(line: 487, column: 1, scope: !3728)
!3737 = distinct !DISubprogram(name: "drop_in_place<alloc::string::FromUtf8Error>", linkageName: "_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17hd8c00ca92f8a6ec7E", scope: !43, file: !399, line: 487, type: !3738, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3763, retainedNodes: !3761)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{null, !3740}
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::FromUtf8Error", baseType: !3741, size: 64, align: 64, dwarfAddressSpace: 0)
!3741 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromUtf8Error", scope: !308, file: !2, size: 320, align: 64, elements: !3742, templateParams: !23, identifier: "62d92b4f34506066a5d1317e862823af")
!3742 = !{!3743, !3744}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3741, file: !2, baseType: !315, size: 192, align: 64)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3741, file: !2, baseType: !3745, size: 128, align: 64, offset: 192)
!3745 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Error", scope: !3746, file: !2, size: 128, align: 64, elements: !3747, templateParams: !23, identifier: "35640da808722046545043bbe2b47af")
!3746 = !DINamespace(name: "error", scope: !439)
!3747 = !{!3748, !3749}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "valid_up_to", scope: !3745, file: !2, baseType: !9, size: 64, align: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "error_len", scope: !3745, file: !2, baseType: !3750, size: 16, align: 8, offset: 64)
!3750 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !177, file: !2, size: 16, align: 8, elements: !3751, templateParams: !23, identifier: "65ae0e18105bdc577eb3ca49b06b3677")
!3751 = !{!3752}
!3752 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3750, file: !2, size: 16, align: 8, elements: !3753, templateParams: !23, identifier: "88432b888f172e6554107ea8099bcf12", discriminator: !3760)
!3753 = !{!3754, !3756}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3752, file: !2, baseType: !3755, size: 16, align: 8, extraData: i64 0)
!3755 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3750, file: !2, size: 16, align: 8, elements: !23, templateParams: !330, identifier: "6864665ee9c789837278808653d08bd9")
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3752, file: !2, baseType: !3757, size: 16, align: 8, extraData: i64 1)
!3757 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3750, file: !2, size: 16, align: 8, elements: !3758, templateParams: !330, identifier: "14747ccbd03bf6e789eba9ee51901f26")
!3758 = !{!3759}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3757, file: !2, baseType: !70, size: 8, align: 8, offset: 8)
!3760 = !DIDerivedType(tag: DW_TAG_member, scope: !3750, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagArtificial)
!3761 = !{!3762}
!3762 = !DILocalVariable(arg: 1, scope: !3737, file: !399, line: 487, type: !3740)
!3763 = !{!3764}
!3764 = !DITemplateTypeParameter(name: "T", type: !3741)
!3765 = !DILocation(line: 487, column: 1, scope: !3737)
!3766 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::fd::FileDesc>", linkageName: "_ZN4core3ptr49drop_in_place$LT$std..sys..unix..fd..FileDesc$GT$17h5b4c5b75ab8c65d5E", scope: !43, file: !399, line: 487, type: !3767, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3772, retainedNodes: !3770)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{null, !3769}
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::fd::FileDesc", baseType: !2757, size: 64, align: 64, dwarfAddressSpace: 0)
!3770 = !{!3771}
!3771 = !DILocalVariable(arg: 1, scope: !3766, file: !399, line: 487, type: !3769)
!3772 = !{!3773}
!3773 = !DITemplateTypeParameter(name: "T", type: !2757)
!3774 = !DILocation(line: 487, column: 1, scope: !3766)
!3775 = distinct !DISubprogram(name: "drop_in_place<alloc::borrow::Cow<str>>", linkageName: "_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h608c52efd9ce7c6cE", scope: !43, file: !399, line: 487, type: !3776, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3100, retainedNodes: !3779)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{null, !3778}
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::borrow::Cow<str>", baseType: !3083, size: 64, align: 64, dwarfAddressSpace: 0)
!3779 = !{!3780}
!3780 = !DILocalVariable(arg: 1, scope: !3775, file: !399, line: 487, type: !3778)
!3781 = !DILocation(line: 487, column: 1, scope: !3775)
!3782 = distinct !DISubprogram(name: "drop_in_place<core::num::error::ParseIntError>", linkageName: "_ZN4core3ptr52drop_in_place$LT$core..num..error..ParseIntError$GT$17h6a56c174e9ffbc8eE", scope: !43, file: !399, line: 487, type: !3783, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3788, retainedNodes: !3786)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{null, !3785}
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::num::error::ParseIntError", baseType: !155, size: 64, align: 64, dwarfAddressSpace: 0)
!3786 = !{!3787}
!3787 = !DILocalVariable(arg: 1, scope: !3782, file: !399, line: 487, type: !3785)
!3788 = !{!3789}
!3789 = !DITemplateTypeParameter(name: "T", type: !155)
!3790 = !DILocation(line: 487, column: 1, scope: !3782)
!3791 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17hc9a842026c3c109eE", scope: !43, file: !399, line: 487, type: !3792, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3797, retainedNodes: !3795)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{null, !3794}
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !319, size: 64, align: 64, dwarfAddressSpace: 0)
!3795 = !{!3796}
!3796 = !DILocalVariable(arg: 1, scope: !3791, file: !399, line: 487, type: !3794)
!3797 = !{!3798}
!3798 = !DITemplateTypeParameter(name: "T", type: !319)
!3799 = !DILocation(line: 487, column: 1, scope: !3791)
!3800 = distinct !DISubprogram(name: "drop_in_place<[alloc::ffi::c_str::CString]>", linkageName: "_ZN4core3ptr57drop_in_place$LT$$u5b$alloc..ffi..c_str..CString$u5d$$GT$17hdb4dd38c7432c3a5E", scope: !43, file: !399, line: 487, type: !3801, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !3808)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{null, !3803}
!3803 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [alloc::ffi::c_str::CString]", file: !2, size: 128, align: 64, elements: !3804, templateParams: !23, identifier: "31c2bcf9f787fa028b0dc5910ef0fe4d")
!3804 = !{!3805, !3807}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3803, file: !2, baseType: !3806, size: 64, align: 64)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64, align: 64, dwarfAddressSpace: 0)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3803, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3808 = !{!3809}
!3809 = !DILocalVariable(arg: 1, scope: !3800, file: !399, line: 487, type: !3803)
!3810 = !DILocation(line: 487, column: 1, scope: !3800)
!3811 = distinct !DISubprogram(name: "drop_in_place<std::io::error::repr_bitpacked::Repr>", linkageName: "_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17hf238a55dcd5bc0d8E", scope: !43, file: !399, line: 487, type: !3812, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3817, retainedNodes: !3815)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{null, !3814}
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::io::error::repr_bitpacked::Repr", baseType: !37, size: 64, align: 64, dwarfAddressSpace: 0)
!3815 = !{!3816}
!3816 = !DILocalVariable(arg: 1, scope: !3811, file: !399, line: 487, type: !3814)
!3817 = !{!3818}
!3818 = !DITemplateTypeParameter(name: "T", type: !37)
!3819 = !DILocation(line: 487, column: 1, scope: !3811)
!3820 = distinct !DISubprogram(name: "drop_in_place<std::sys_common::process::CommandEnv>", linkageName: "_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h2d46c7b5a8107923E", scope: !43, file: !399, line: 487, type: !3821, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3826, retainedNodes: !3824)
!3821 = !DISubroutineType(types: !3822)
!3822 = !{null, !3823}
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys_common::process::CommandEnv", baseType: !2653, size: 64, align: 64, dwarfAddressSpace: 0)
!3824 = !{!3825}
!3825 = !DILocalVariable(arg: 1, scope: !3820, file: !399, line: 487, type: !3823)
!3826 = !{!3827}
!3827 = !DITemplateTypeParameter(name: "T", type: !2653)
!3828 = !DILocation(line: 487, column: 1, scope: !3820)
!3829 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h3979a13cd804d08cE", scope: !43, file: !399, line: 487, type: !3830, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3835, retainedNodes: !3833)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{null, !3832}
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !2600, size: 64, align: 64, dwarfAddressSpace: 0)
!3833 = !{!3834}
!3834 = !DILocalVariable(arg: 1, scope: !3829, file: !399, line: 487, type: !3832)
!3835 = !{!3836}
!3836 = !DITemplateTypeParameter(name: "T", type: !2600)
!3837 = !DILocation(line: 487, column: 1, scope: !3829)
!3838 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u32], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr59drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$17ha56e96f269f477d0E", scope: !43, file: !399, line: 487, type: !3839, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2722, retainedNodes: !3842)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{null, !3841}
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u32], alloc::alloc::Global>", baseType: !2724, size: 64, align: 64, dwarfAddressSpace: 0)
!3842 = !{!3843}
!3843 = !DILocalVariable(arg: 1, scope: !3838, file: !399, line: 487, type: !3841)
!3844 = !DILocation(line: 487, column: 1, scope: !3838)
!3845 = distinct !DISubprogram(name: "drop_in_place<&core::option::Option<&str>>", linkageName: "_ZN4core3ptr60drop_in_place$LT$$RF$core..option..Option$LT$$RF$str$GT$$GT$17he50dc97f5c182187E", scope: !43, file: !399, line: 487, type: !3846, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3851, retainedNodes: !3849)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{null, !3848}
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &core::option::Option<&str>", baseType: !175, size: 64, align: 64, dwarfAddressSpace: 0)
!3849 = !{!3850}
!3850 = !DILocalVariable(arg: 1, scope: !3845, file: !399, line: 487, type: !3848)
!3851 = !{!3852}
!3852 = !DITemplateTypeParameter(name: "T", type: !175)
!3853 = !DILocation(line: 487, column: 1, scope: !3845)
!3854 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<*const i8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr60drop_in_place$LT$alloc..vec..Vec$LT$$BP$const$u20$i8$GT$$GT$17hcb0762e63aa439b0E", scope: !43, file: !399, line: 487, type: !3855, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3860, retainedNodes: !3858)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{null, !3857}
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<*const i8, alloc::alloc::Global>", baseType: !2630, size: 64, align: 64, dwarfAddressSpace: 0)
!3858 = !{!3859}
!3859 = !DILocalVariable(arg: 1, scope: !3854, file: !399, line: 487, type: !3857)
!3860 = !{!3861}
!3861 = !DITemplateTypeParameter(name: "T", type: !2630)
!3862 = !DILocation(line: 487, column: 1, scope: !3854)
!3863 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::process::process_common::Argv>", linkageName: "_ZN4core3ptr66drop_in_place$LT$std..sys..unix..process..process_common..Argv$GT$17h1a71daa127b4e316E", scope: !43, file: !399, line: 487, type: !3864, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3869, retainedNodes: !3867)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{null, !3866}
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::process::process_common::Argv", baseType: !2627, size: 64, align: 64, dwarfAddressSpace: 0)
!3867 = !{!3868}
!3868 = !DILocalVariable(arg: 1, scope: !3863, file: !399, line: 487, type: !3866)
!3869 = !{!3870}
!3870 = !DITemplateTypeParameter(name: "T", type: !2627)
!3871 = !DILocation(line: 487, column: 1, scope: !3863)
!3872 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<*const i8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17he4d53045d8fa64f8E", scope: !43, file: !399, line: 487, type: !3873, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3878, retainedNodes: !3876)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{null, !3875}
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<*const i8, alloc::alloc::Global>", baseType: !2633, size: 64, align: 64, dwarfAddressSpace: 0)
!3876 = !{!3877}
!3877 = !DILocalVariable(arg: 1, scope: !3872, file: !399, line: 487, type: !3875)
!3878 = !{!3879}
!3879 = !DITemplateTypeParameter(name: "T", type: !2633)
!3880 = !DILocation(line: 487, column: 1, scope: !3872)
!3881 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::process::process_common::Stdio>", linkageName: "_ZN4core3ptr67drop_in_place$LT$std..sys..unix..process..process_common..Stdio$GT$17h9fd1ff8e79cd466cE", scope: !43, file: !399, line: 487, type: !3882, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2741, retainedNodes: !3885)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{null, !3884}
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::process::process_common::Stdio", baseType: !2743, size: 64, align: 64, dwarfAddressSpace: 0)
!3885 = !{!3886}
!3886 = !DILocalVariable(arg: 1, scope: !3881, file: !399, line: 487, type: !3884)
!3887 = !DILocation(line: 487, column: 1, scope: !3881)
!3888 = !{i32 0, i32 4}
!3889 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hedbc1b722e94a535E", scope: !43, file: !399, line: 487, type: !3890, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3895, retainedNodes: !3893)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{null, !3892}
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<std::io::error::Custom, alloc::alloc::Global>", baseType: !65, size: 64, align: 64, dwarfAddressSpace: 0)
!3893 = !{!3894}
!3894 = !DILocalVariable(arg: 1, scope: !3889, file: !399, line: 487, type: !3892)
!3895 = !{!3896}
!3896 = !DITemplateTypeParameter(name: "T", type: !65)
!3897 = !DILocation(line: 487, column: 1, scope: !3889)
!3898 = distinct !DISubprogram(name: "drop_in_place<std::sys::unix::process::process_common::Command>", linkageName: "_ZN4core3ptr69drop_in_place$LT$std..sys..unix..process..process_common..Command$GT$17h11ce9fcf49ad8669E", scope: !43, file: !399, line: 487, type: !3899, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3904, retainedNodes: !3902)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{null, !3901}
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::sys::unix::process::process_common::Command", baseType: !2592, size: 64, align: 64, dwarfAddressSpace: 0)
!3902 = !{!3903}
!3903 = !DILocalVariable(arg: 1, scope: !3898, file: !399, line: 487, type: !3901)
!3904 = !{!3905}
!3905 = !DITemplateTypeParameter(name: "T", type: !2592)
!3906 = !DILocation(line: 487, column: 1, scope: !3898)
!3907 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hc40652661f7d9783E", scope: !43, file: !399, line: 487, type: !3908, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3913, retainedNodes: !3911)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{null, !3910}
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2605, size: 64, align: 64, dwarfAddressSpace: 0)
!3911 = !{!3912}
!3912 = !DILocalVariable(arg: 1, scope: !3907, file: !399, line: 487, type: !3910)
!3913 = !{!3914}
!3914 = !DITemplateTypeParameter(name: "T", type: !2605)
!3915 = !DILocation(line: 487, column: 1, scope: !3907)
!3916 = distinct !DISubprogram(name: "drop_in_place<alloc::collections::btree::mem::replace::PanicGuard>", linkageName: "_ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17h622122c3e0caab8dE", scope: !43, file: !399, line: 487, type: !3917, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3925, retainedNodes: !3923)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{null, !3919}
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::mem::replace::PanicGuard", baseType: !3920, size: 64, align: 64, dwarfAddressSpace: 0)
!3920 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicGuard", scope: !3921, file: !2, align: 8, elements: !23, identifier: "f25ed72c8135cd55bd837fc739b94f2a")
!3921 = !DINamespace(name: "replace", scope: !3922)
!3922 = !DINamespace(name: "mem", scope: !1307)
!3923 = !{!3924}
!3924 = !DILocalVariable(arg: 1, scope: !3916, file: !399, line: 487, type: !3919)
!3925 = !{!3926}
!3926 = !DITemplateTypeParameter(name: "T", type: !3920)
!3927 = !DILocation(line: 487, column: 1, scope: !3916)
!3928 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>", linkageName: "_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17ha8c32539fa3f5184E", scope: !43, file: !399, line: 487, type: !3929, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3934, retainedNodes: !3932)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{null, !3931}
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::ffi::c_str::CString>", baseType: !2660, size: 64, align: 64, dwarfAddressSpace: 0)
!3932 = !{!3933}
!3933 = !DILocalVariable(arg: 1, scope: !3928, file: !399, line: 487, type: !3931)
!3934 = !{!3935}
!3935 = !DITemplateTypeParameter(name: "T", type: !2660)
!3936 = !DILocation(line: 487, column: 1, scope: !3928)
!3937 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17h479a684ef65e5531E", scope: !43, file: !399, line: 487, type: !3938, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1440, retainedNodes: !3940)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{null, !3144}
!3940 = !{!3941}
!3941 = !DILocalVariable(arg: 1, scope: !3937, file: !399, line: 487, type: !3144)
!3942 = !DILocation(line: 487, column: 1, scope: !3937)
!3943 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17hdf10a8fdd126de4dE", scope: !43, file: !399, line: 487, type: !3944, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3949, retainedNodes: !3947)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{null, !3946}
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2608, size: 64, align: 64, dwarfAddressSpace: 0)
!3947 = !{!3948}
!3948 = !DILocalVariable(arg: 1, scope: !3943, file: !399, line: 487, type: !3946)
!3949 = !{!3950}
!3950 = !DITemplateTypeParameter(name: "T", type: !2608)
!3951 = !DILocation(line: 487, column: 1, scope: !3943)
!3952 = distinct !DISubprogram(name: "drop_in_place<std::rt::lang_start::{closure_env#0}<()>>", linkageName: "_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5cc1347c42b5cc74E", scope: !43, file: !399, line: 487, type: !3953, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3957, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{null, !3515}
!3955 = !{!3956}
!3956 = !DILocalVariable(arg: 1, scope: !3952, file: !399, line: 487, type: !3515)
!3957 = !{!3958}
!3958 = !DITemplateTypeParameter(name: "T", type: !14)
!3959 = !DILocation(line: 487, column: 1, scope: !3952)
!3960 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<alloc::boxed::Box<[u32], alloc::alloc::Global>>>", linkageName: "_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h062718b2c053f204E", scope: !43, file: !399, line: 487, type: !3961, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3966, retainedNodes: !3964)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{null, !3963}
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<alloc::boxed::Box<[u32], alloc::alloc::Global>>", baseType: !2716, size: 64, align: 64, dwarfAddressSpace: 0)
!3964 = !{!3965}
!3965 = !DILocalVariable(arg: 1, scope: !3960, file: !399, line: 487, type: !3963)
!3966 = !{!3967}
!3967 = !DITemplateTypeParameter(name: "T", type: !2716)
!3968 = !DILocation(line: 487, column: 1, scope: !3960)
!3969 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h3ca09ae8930ef9efE", scope: !326, file: !646, line: 218, type: !3970, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !3985)
!3970 = !DISubroutineType(types: !3971)
!3971 = !{!3972, !649}
!3972 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !177, file: !2, size: 64, align: 64, elements: !3973, templateParams: !23, identifier: "73e5c906163f964bd09052518b6d2dc5")
!3973 = !{!3974}
!3974 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3972, file: !2, size: 64, align: 64, elements: !3975, templateParams: !23, identifier: "60204c6c6496841dbff7e7ec5dea5282", discriminator: !3984)
!3975 = !{!3976, !3980}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3974, file: !2, baseType: !3977, size: 64, align: 64, extraData: i64 0)
!3977 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3972, file: !2, size: 64, align: 64, elements: !23, templateParams: !3978, identifier: "b393050474aeb0631755d975367153e1")
!3978 = !{!3979}
!3979 = !DITemplateTypeParameter(name: "T", type: !326)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3974, file: !2, baseType: !3981, size: 64, align: 64)
!3981 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3972, file: !2, size: 64, align: 64, elements: !3982, templateParams: !3978, identifier: "a01a0b695bfd5d94759ea5c77533b9ea")
!3982 = !{!3983}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3981, file: !2, baseType: !326, size: 64, align: 64)
!3984 = !DIDerivedType(tag: DW_TAG_member, scope: !3972, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!3985 = !{!3986}
!3986 = !DILocalVariable(name: "ptr", arg: 1, scope: !3969, file: !646, line: 218, type: !649)
!3987 = !DILocation(line: 218, column: 22, scope: !3969)
!3988 = !DILocalVariable(name: "metadata", scope: !3989, file: !646, line: 219, type: !7, align: 1)
!3989 = !DILexicalBlockFile(scope: !3990, file: !646, discriminator: 0)
!3990 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !3991)
!3991 = !{!3992, !3988}
!3992 = !DILocalVariable(name: "data_address", scope: !3989, file: !646, line: 219, type: !960, align: 8)
!3993 = !DILocation(line: 219, column: 13, scope: !3989, inlinedAt: !3994)
!3994 = !DILocation(line: 668, column: 5, scope: !3995, inlinedAt: !3996)
!3995 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!3996 = !DILocation(line: 38, column: 41, scope: !3997, inlinedAt: !4001)
!3997 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd134781c17b0a8a9E", scope: !657, file: !656, line: 35, type: !1157, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !3998)
!3998 = !{!3999}
!3999 = !DILocalVariable(name: "self", scope: !4000, file: !646, line: 219, type: !649, align: 8)
!4000 = !DILexicalBlockFile(scope: !3997, file: !646, discriminator: 0)
!4001 = !DILocation(line: 219, column: 13, scope: !3969)
!4002 = !DILocation(line: 219, column: 13, scope: !4000, inlinedAt: !4001)
!4003 = !DILocalVariable(name: "self", scope: !4004, file: !646, line: 219, type: !649, align: 8)
!4004 = !DILexicalBlockFile(scope: !4005, file: !646, discriminator: 0)
!4005 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !4006)
!4006 = !{!4003, !4007}
!4007 = !DILocalVariable(name: "other", scope: !4004, file: !646, line: 219, type: !649, align: 8)
!4008 = !DILocation(line: 219, column: 13, scope: !4004, inlinedAt: !4009)
!4009 = !DILocation(line: 38, column: 9, scope: !3997, inlinedAt: !4001)
!4010 = !DILocation(line: 219, column: 13, scope: !4011, inlinedAt: !4015)
!4011 = !DILexicalBlockFile(scope: !4012, file: !646, discriminator: 0)
!4012 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !4013)
!4013 = !{!4014}
!4014 = !DILocalVariable(name: "addr", scope: !4011, file: !646, line: 219, type: !9, align: 8)
!4015 = !DILocation(line: 668, column: 24, scope: !3995, inlinedAt: !3996)
!4016 = !DILocation(line: 219, column: 12, scope: !3969)
!4017 = !DILocation(line: 223, column: 13, scope: !3969)
!4018 = !DILocation(line: 219, column: 9, scope: !3969)
!4019 = !DILocation(line: 221, column: 47, scope: !3969)
!4020 = !DILocalVariable(name: "ptr", scope: !4021, file: !646, line: 221, type: !649, align: 8)
!4021 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !4022)
!4022 = !{!4020}
!4023 = !DILocation(line: 221, column: 27, scope: !4021, inlinedAt: !4024)
!4024 = !DILocation(line: 221, column: 27, scope: !3969)
!4025 = !DILocation(line: 221, column: 13, scope: !3969)
!4026 = !DILocation(line: 225, column: 6, scope: !3969)
!4027 = distinct !DISubprogram(name: "drop_in_place<core::result::Result<alloc::string::String, std::env::VarError>>", linkageName: "_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17h40125c2c58e5c955E", scope: !43, file: !399, line: 487, type: !4028, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4033, retainedNodes: !4031)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{null, !4030}
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::result::Result<alloc::string::String, std::env::VarError>", baseType: !2418, size: 64, align: 64, dwarfAddressSpace: 0)
!4031 = !{!4032}
!4032 = !DILocalVariable(arg: 1, scope: !4027, file: !399, line: 487, type: !4030)
!4033 = !{!4034}
!4034 = !DITemplateTypeParameter(name: "T", type: !2418)
!4035 = !DILocation(line: 487, column: 1, scope: !4027)
!4036 = distinct !DISubprogram(name: "drop_in_place<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr92drop_in_place$LT$dyn$u20$std..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17he3a0e5a61e843fa8E", scope: !43, file: !399, line: 487, type: !4037, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4045, retainedNodes: !4043)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{null, !4039}
!4039 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut (dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !4040, templateParams: !23, identifier: "aa2475956521b5aed2a4396f47ad888b")
!4040 = !{!4041, !4042}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4039, file: !2, baseType: !117, size: 64, align: 64)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4039, file: !2, baseType: !120, size: 64, align: 64, offset: 64)
!4043 = !{!4044}
!4044 = !DILocalVariable(arg: 1, scope: !4036, file: !399, line: 487, type: !4039)
!4045 = !{!4046}
!4046 = !DITemplateTypeParameter(name: "T", type: !118)
!4047 = !DILocation(line: 487, column: 1, scope: !4036)
!4048 = distinct !DISubprogram(name: "drop_in_place<core::option::Option<std::sys::unix::process::process_common::Stdio>>", linkageName: "_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$std..sys..unix..process..process_common..Stdio$GT$$GT$17ha909f5961af418deE", scope: !43, file: !399, line: 487, type: !4049, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4054, retainedNodes: !4052)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{null, !4051}
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::option::Option<std::sys::unix::process::process_common::Stdio>", baseType: !2735, size: 64, align: 64, dwarfAddressSpace: 0)
!4052 = !{!4053}
!4053 = !DILocalVariable(arg: 1, scope: !4048, file: !399, line: 487, type: !4051)
!4054 = !{!4055}
!4055 = !DITemplateTypeParameter(name: "T", type: !2735)
!4056 = !DILocation(line: 487, column: 1, scope: !4048)
!4057 = !{i32 0, i32 5}
!4058 = distinct !DISubprogram(name: "next_code_point<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations15next_code_point17hd6a7a759b1fa4f00E", scope: !4060, file: !4059, line: 36, type: !4061, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4099, retainedNodes: !4063)
!4059 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/validations.rs", directory: "", checksumkind: CSK_MD5, checksum: "013ffea566228bd192f2b387ca5fa2c0")
!4060 = !DINamespace(name: "validations", scope: !439)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!2672, !1139}
!4063 = !{!4064, !4065, !4067, !4085, !4087, !4089, !4091, !4093, !4095, !4097}
!4064 = !DILocalVariable(name: "bytes", arg: 1, scope: !4058, file: !4059, line: 36, type: !1139)
!4065 = !DILocalVariable(name: "x", scope: !4066, file: !4059, line: 38, type: !70, align: 1)
!4066 = distinct !DILexicalBlock(scope: !4058, file: !4059, line: 38, column: 5)
!4067 = !DILocalVariable(name: "residual", scope: !4068, file: !4059, line: 38, type: !4069, align: 1)
!4068 = distinct !DILexicalBlock(scope: !4058, file: !4059, line: 38, column: 26)
!4069 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !177, file: !2, align: 8, elements: !4070, templateParams: !23, identifier: "d8a1490c995f47139381e35a5e6e5cdb")
!4070 = !{!4071}
!4071 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4069, file: !2, align: 8, elements: !4072, templateParams: !23, identifier: "9b62236bada376e41df23b6f70477fcc")
!4072 = !{!4073, !4081}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4071, file: !2, baseType: !4074, align: 8)
!4074 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4069, file: !2, align: 8, elements: !23, templateParams: !4075, identifier: "6887a830e9518178209fc3c61f1ca37d")
!4075 = !{!4076}
!4076 = !DITemplateTypeParameter(name: "T", type: !4077)
!4077 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !4078, file: !2, align: 8, elements: !4079, templateParams: !23, identifier: "54da939063c7c2baf203c9f582cd0995")
!4078 = !DINamespace(name: "convert", scope: !44)
!4079 = !{!4080}
!4080 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4077, file: !2, align: 8, elements: !23, identifier: "8a046f69014feadb4a5e941e4277afe9")
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4071, file: !2, baseType: !4082, align: 8)
!4082 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4069, file: !2, align: 8, elements: !4083, templateParams: !4075, identifier: "57c813c1928930715dbbb4312e4c0fa4")
!4083 = !{!4084}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4082, file: !2, baseType: !4077, align: 8)
!4085 = !DILocalVariable(name: "val", scope: !4086, file: !4059, line: 38, type: !556, align: 8)
!4086 = distinct !DILexicalBlock(scope: !4058, file: !4059, line: 38, column: 14)
!4087 = !DILocalVariable(name: "init", scope: !4088, file: !4059, line: 46, type: !351, align: 4)
!4088 = distinct !DILexicalBlock(scope: !4066, file: !4059, line: 46, column: 5)
!4089 = !DILocalVariable(name: "y", scope: !4090, file: !4059, line: 49, type: !70, align: 1)
!4090 = distinct !DILexicalBlock(scope: !4088, file: !4059, line: 49, column: 5)
!4091 = !DILocalVariable(name: "ch", scope: !4092, file: !4059, line: 50, type: !351, align: 4)
!4092 = distinct !DILexicalBlock(scope: !4090, file: !4059, line: 50, column: 5)
!4093 = !DILocalVariable(name: "z", scope: !4094, file: !4059, line: 56, type: !70, align: 1)
!4094 = distinct !DILexicalBlock(scope: !4092, file: !4059, line: 56, column: 9)
!4095 = !DILocalVariable(name: "y_z", scope: !4096, file: !4059, line: 57, type: !351, align: 4)
!4096 = distinct !DILexicalBlock(scope: !4094, file: !4059, line: 57, column: 9)
!4097 = !DILocalVariable(name: "w", scope: !4098, file: !4059, line: 64, type: !70, align: 1)
!4098 = distinct !DILexicalBlock(scope: !4096, file: !4059, line: 64, column: 13)
!4099 = !{!4100}
!4100 = !DITemplateTypeParameter(name: "I", type: !548)
!4101 = !DILocation(line: 36, column: 63, scope: !4058)
!4102 = !DILocalVariable(name: "self", scope: !4103, file: !4059, line: 38, type: !1128, align: 8)
!4103 = !DILexicalBlockFile(scope: !4104, file: !4059, discriminator: 0)
!4104 = distinct !DISubprogram(name: "branch<&u8>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb665977db59282a4E", scope: !4105, file: !1664, line: 2290, type: !4106, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !554, retainedNodes: !4125)
!4105 = !DINamespace(name: "{impl#35}", scope: !177)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!4108, !1128}
!4108 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &u8>", scope: !4109, file: !2, size: 64, align: 64, elements: !4110, templateParams: !23, identifier: "513888bfaba291a24cedecefd1c8f3cf")
!4109 = !DINamespace(name: "control_flow", scope: !343)
!4110 = !{!4111}
!4111 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4108, file: !2, size: 64, align: 64, elements: !4112, templateParams: !23, identifier: "19071d1d694b54b173e59457b654fa28", discriminator: !4124)
!4112 = !{!4113, !4120}
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4111, file: !2, baseType: !4114, size: 64, align: 64)
!4114 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4108, file: !2, size: 64, align: 64, elements: !4115, templateParams: !4117, identifier: "ce047414cf5b82ac3c74a44d9cbde4e7")
!4115 = !{!4116}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4114, file: !2, baseType: !556, size: 64, align: 64)
!4117 = !{!4118, !4119}
!4118 = !DITemplateTypeParameter(name: "B", type: !4069)
!4119 = !DITemplateTypeParameter(name: "C", type: !556)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4111, file: !2, baseType: !4121, size: 64, align: 64, extraData: i64 0)
!4121 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4108, file: !2, size: 64, align: 64, elements: !4122, templateParams: !4117, identifier: "4460a790e4a683cf8d29a30157ff54e5")
!4122 = !{!4123}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4121, file: !2, baseType: !4069, align: 8)
!4124 = !DIDerivedType(tag: DW_TAG_member, scope: !4108, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!4125 = !{!4102, !4126}
!4126 = !DILocalVariable(name: "v", scope: !4127, file: !4059, line: 38, type: !556, align: 8)
!4127 = !DILexicalBlockFile(scope: !4128, file: !4059, discriminator: 0)
!4128 = distinct !DILexicalBlock(scope: !4104, file: !1664, line: 2292, column: 13)
!4129 = !DILocation(line: 38, column: 14, scope: !4103, inlinedAt: !4130)
!4130 = !DILocation(line: 38, column: 14, scope: !4058)
!4131 = !DILocation(line: 38, column: 26, scope: !4068)
!4132 = !DILocalVariable(name: "residual", scope: !4133, file: !4059, line: 38, type: !4069, align: 1)
!4133 = !DILexicalBlockFile(scope: !4134, file: !4059, discriminator: 0)
!4134 = distinct !DISubprogram(name: "from_residual<u32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h77d3cba79f7eb9d3E", scope: !4135, file: !1664, line: 2302, type: !4136, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !4138)
!4135 = !DINamespace(name: "{impl#36}", scope: !177)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!2672, !4069}
!4138 = !{!4132}
!4139 = !DILocation(line: 38, column: 14, scope: !4133, inlinedAt: !4140)
!4140 = !DILocation(line: 38, column: 14, scope: !4068)
!4141 = !DILocalVariable(name: "self", scope: !4142, file: !4059, line: 49, type: !1128, align: 8)
!4142 = !DILexicalBlockFile(scope: !4143, file: !4059, discriminator: 0)
!4143 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hb5ed852666082fe4E", scope: !1128, file: !1664, line: 892, type: !4144, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !554, retainedNodes: !4146)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!556, !1128, !344}
!4146 = !{!4141, !4147}
!4147 = !DILocalVariable(name: "val", scope: !4148, file: !4059, line: 49, type: !556, align: 8)
!4148 = !DILexicalBlockFile(scope: !4149, file: !4059, discriminator: 0)
!4149 = distinct !DILexicalBlock(scope: !4143, file: !1664, line: 895, column: 13)
!4150 = !DILocation(line: 49, column: 23, scope: !4142, inlinedAt: !4151)
!4151 = !DILocation(line: 49, column: 23, scope: !4088)
!4152 = !DILocation(line: 50, column: 9, scope: !4092)
!4153 = !DILocalVariable(name: "self", scope: !4154, file: !4059, line: 56, type: !1128, align: 8)
!4154 = !DILexicalBlockFile(scope: !4155, file: !4059, discriminator: 0)
!4155 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hb5ed852666082fe4E", scope: !1128, file: !1664, line: 892, type: !4144, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !554, retainedNodes: !4156)
!4156 = !{!4153, !4157}
!4157 = !DILocalVariable(name: "val", scope: !4158, file: !4059, line: 56, type: !556, align: 8)
!4158 = !DILexicalBlockFile(scope: !4159, file: !4059, discriminator: 0)
!4159 = distinct !DILexicalBlock(scope: !4155, file: !1664, line: 895, column: 13)
!4160 = !DILocation(line: 56, column: 27, scope: !4154, inlinedAt: !4161)
!4161 = !DILocation(line: 56, column: 27, scope: !4092)
!4162 = !DILocalVariable(name: "self", scope: !4163, file: !4059, line: 64, type: !1128, align: 8)
!4163 = !DILexicalBlockFile(scope: !4164, file: !4059, discriminator: 0)
!4164 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hb5ed852666082fe4E", scope: !1128, file: !1664, line: 892, type: !4144, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !554, retainedNodes: !4165)
!4165 = !{!4162, !4166}
!4166 = !DILocalVariable(name: "val", scope: !4167, file: !4059, line: 64, type: !556, align: 8)
!4167 = !DILexicalBlockFile(scope: !4168, file: !4059, discriminator: 0)
!4168 = distinct !DILexicalBlock(scope: !4164, file: !1664, line: 895, column: 13)
!4169 = !DILocation(line: 64, column: 31, scope: !4163, inlinedAt: !4170)
!4170 = !DILocation(line: 64, column: 31, scope: !4096)
!4171 = !DILocation(line: 38, column: 14, scope: !4127, inlinedAt: !4130)
!4172 = !DILocation(line: 38, column: 14, scope: !4086)
!4173 = !DILocation(line: 38, column: 13, scope: !4058)
!4174 = !DILocation(line: 38, column: 9, scope: !4066)
!4175 = !DILocation(line: 39, column: 8, scope: !4066)
!4176 = !DILocation(line: 1, column: 1, scope: !4177)
!4177 = !DILexicalBlockFile(scope: !4058, file: !4178, discriminator: 0)
!4178 = !DIFile(filename: "build.rs", directory: "/home/calvin/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.175", checksumkind: CSK_MD5, checksum: "1b75a8ee7ed99f8ec1c2b07f84ad7ac7")
!4179 = !DILocation(line: 70, column: 2, scope: !4058)
!4180 = !DILocation(line: 46, column: 32, scope: !4066)
!4181 = !DILocalVariable(name: "byte", scope: !4182, file: !4059, line: 46, type: !70, align: 1)
!4182 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h44bd029cb40d2dbdE", scope: !4060, file: !4059, line: 11, type: !4183, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4185)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!351, !70, !351}
!4185 = !{!4181, !4186}
!4186 = !DILocalVariable(name: "width", scope: !4182, file: !4059, line: 46, type: !351, align: 4)
!4187 = !DILocation(line: 46, column: 16, scope: !4182, inlinedAt: !4188)
!4188 = !DILocation(line: 46, column: 16, scope: !4066)
!4189 = !DILocation(line: 46, column: 9, scope: !4088)
!4190 = !DILocation(line: 40, column: 21, scope: !4066)
!4191 = !DILocation(line: 40, column: 16, scope: !4066)
!4192 = !DILocation(line: 1, column: 1, scope: !4193)
!4193 = !DILexicalBlockFile(scope: !4066, file: !4178, discriminator: 0)
!4194 = !{i32 0, i32 2}
!4195 = !DILocation(line: 49, column: 23, scope: !4196, inlinedAt: !4198)
!4196 = !DILexicalBlockFile(scope: !4197, file: !4059, discriminator: 0)
!4197 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!4198 = !DILocation(line: 897, column: 30, scope: !4143, inlinedAt: !4151)
!4199 = !DILocation(line: 49, column: 23, scope: !4148, inlinedAt: !4151)
!4200 = !DILocation(line: 49, column: 22, scope: !4088)
!4201 = !DILocation(line: 49, column: 9, scope: !4090)
!4202 = !DILocation(line: 50, column: 37, scope: !4090)
!4203 = !DILocalVariable(name: "ch", scope: !4204, file: !4059, line: 50, type: !351, align: 4)
!4204 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h8803410fad6372eeE", scope: !4060, file: !4059, line: 17, type: !4205, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4207)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!351, !351, !70}
!4207 = !{!4203, !4208}
!4208 = !DILocalVariable(name: "byte", scope: !4204, file: !4059, line: 50, type: !70, align: 1)
!4209 = !DILocation(line: 50, column: 18, scope: !4204, inlinedAt: !4210)
!4210 = !DILocation(line: 50, column: 18, scope: !4090)
!4211 = !DILocation(line: 50, column: 43, scope: !4090)
!4212 = !DILocation(line: 51, column: 8, scope: !4092)
!4213 = !DILocation(line: 69, column: 10, scope: !4092)
!4214 = !DILocation(line: 69, column: 5, scope: !4092)
!4215 = !DILocation(line: 56, column: 27, scope: !4216, inlinedAt: !4218)
!4216 = !DILexicalBlockFile(scope: !4217, file: !4059, discriminator: 0)
!4217 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!4218 = !DILocation(line: 897, column: 30, scope: !4155, inlinedAt: !4161)
!4219 = !DILocation(line: 56, column: 27, scope: !4158, inlinedAt: !4161)
!4220 = !DILocation(line: 56, column: 26, scope: !4092)
!4221 = !DILocation(line: 56, column: 13, scope: !4094)
!4222 = !DILocation(line: 57, column: 38, scope: !4094)
!4223 = !DILocalVariable(name: "ch", scope: !4224, file: !4059, line: 57, type: !351, align: 4)
!4224 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h8803410fad6372eeE", scope: !4060, file: !4059, line: 17, type: !4205, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4225)
!4225 = !{!4223, !4226}
!4226 = !DILocalVariable(name: "byte", scope: !4224, file: !4059, line: 57, type: !70, align: 1)
!4227 = !DILocation(line: 57, column: 19, scope: !4224, inlinedAt: !4228)
!4228 = !DILocation(line: 57, column: 19, scope: !4094)
!4229 = !DILocation(line: 57, column: 62, scope: !4094)
!4230 = !DILocation(line: 57, column: 13, scope: !4096)
!4231 = !DILocation(line: 58, column: 14, scope: !4096)
!4232 = !DILocation(line: 58, column: 9, scope: !4096)
!4233 = !DILocation(line: 59, column: 12, scope: !4096)
!4234 = !DILocation(line: 51, column: 5, scope: !4092)
!4235 = !DILocation(line: 64, column: 31, scope: !4236, inlinedAt: !4238)
!4236 = !DILexicalBlockFile(scope: !4237, file: !4059, discriminator: 0)
!4237 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!4238 = !DILocation(line: 897, column: 30, scope: !4164, inlinedAt: !4170)
!4239 = !DILocation(line: 64, column: 31, scope: !4167, inlinedAt: !4170)
!4240 = !DILocation(line: 64, column: 30, scope: !4096)
!4241 = !DILocation(line: 64, column: 17, scope: !4098)
!4242 = !DILocation(line: 65, column: 18, scope: !4098)
!4243 = !DILocation(line: 65, column: 56, scope: !4098)
!4244 = !DILocalVariable(name: "ch", scope: !4245, file: !4059, line: 65, type: !351, align: 4)
!4245 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h8803410fad6372eeE", scope: !4060, file: !4059, line: 17, type: !4205, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4246)
!4246 = !{!4244, !4247}
!4247 = !DILocalVariable(name: "byte", scope: !4245, file: !4059, line: 65, type: !70, align: 1)
!4248 = !DILocation(line: 65, column: 37, scope: !4245, inlinedAt: !4249)
!4249 = !DILocation(line: 65, column: 37, scope: !4098)
!4250 = !DILocation(line: 65, column: 61, scope: !4098)
!4251 = !DILocation(line: 65, column: 13, scope: !4098)
!4252 = !DILocation(line: 59, column: 9, scope: !4096)
!4253 = distinct !DISubprogram(name: "next_code_point_reverse<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations23next_code_point_reverse17h3be7733f33aea549E", scope: !4060, file: !4059, line: 79, type: !4061, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4099, retainedNodes: !4254)
!4254 = !{!4255, !4256, !4258, !4260, !4262, !4264, !4265, !4267, !4269, !4271, !4273}
!4255 = !DILocalVariable(name: "bytes", arg: 1, scope: !4253, file: !4059, line: 79, type: !1139)
!4256 = !DILocalVariable(name: "w", scope: !4257, file: !4059, line: 84, type: !70, align: 1)
!4257 = distinct !DILexicalBlock(scope: !4253, file: !4059, line: 84, column: 5)
!4258 = !DILocalVariable(name: "residual", scope: !4259, file: !4059, line: 84, type: !4069, align: 1)
!4259 = distinct !DILexicalBlock(scope: !4253, file: !4059, line: 84, column: 37)
!4260 = !DILocalVariable(name: "val", scope: !4261, file: !4059, line: 84, type: !556, align: 8)
!4261 = distinct !DILexicalBlock(scope: !4253, file: !4059, line: 84, column: 20)
!4262 = !DILocalVariable(name: "next_byte", scope: !4263, file: !4059, line: 85, type: !70, align: 1)
!4263 = distinct !DILexicalBlock(scope: !4253, file: !4059, line: 85, column: 9)
!4264 = !DILocalVariable(name: "next_byte", scope: !4263, file: !4059, line: 85, type: !556, align: 8)
!4265 = !DILocalVariable(name: "back_byte", scope: !4266, file: !4059, line: 86, type: !70, align: 1)
!4266 = distinct !DILexicalBlock(scope: !4253, file: !4059, line: 86, column: 9)
!4267 = !DILocalVariable(name: "ch", scope: !4268, file: !4059, line: 91, type: !351, align: 4)
!4268 = distinct !DILexicalBlock(scope: !4257, file: !4059, line: 91, column: 5)
!4269 = !DILocalVariable(name: "z", scope: !4270, file: !4059, line: 94, type: !70, align: 1)
!4270 = distinct !DILexicalBlock(scope: !4268, file: !4059, line: 94, column: 5)
!4271 = !DILocalVariable(name: "y", scope: !4272, file: !4059, line: 99, type: !70, align: 1)
!4272 = distinct !DILexicalBlock(scope: !4270, file: !4059, line: 99, column: 9)
!4273 = !DILocalVariable(name: "x", scope: !4274, file: !4059, line: 104, type: !70, align: 1)
!4274 = distinct !DILexicalBlock(scope: !4272, file: !4059, line: 104, column: 13)
!4275 = !DILocation(line: 79, column: 53, scope: !4253)
!4276 = !DILocalVariable(name: "self", scope: !4277, file: !4059, line: 84, type: !1128, align: 8)
!4277 = !DILexicalBlockFile(scope: !4278, file: !4059, discriminator: 0)
!4278 = distinct !DISubprogram(name: "branch<&u8>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb665977db59282a4E", scope: !4105, file: !1664, line: 2290, type: !4106, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !554, retainedNodes: !4279)
!4279 = !{!4276, !4280}
!4280 = !DILocalVariable(name: "v", scope: !4281, file: !4059, line: 84, type: !556, align: 8)
!4281 = !DILexicalBlockFile(scope: !4282, file: !4059, discriminator: 0)
!4282 = distinct !DILexicalBlock(scope: !4278, file: !1664, line: 2292, column: 13)
!4283 = !DILocation(line: 84, column: 20, scope: !4277, inlinedAt: !4284)
!4284 = !DILocation(line: 84, column: 20, scope: !4253)
!4285 = !DILocation(line: 84, column: 37, scope: !4259)
!4286 = !DILocalVariable(name: "residual", scope: !4287, file: !4059, line: 84, type: !4069, align: 1)
!4287 = !DILexicalBlockFile(scope: !4288, file: !4059, discriminator: 0)
!4288 = distinct !DISubprogram(name: "from_residual<u32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h77d3cba79f7eb9d3E", scope: !4135, file: !1664, line: 2302, type: !4136, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !4289)
!4289 = !{!4286}
!4290 = !DILocation(line: 84, column: 20, scope: !4287, inlinedAt: !4291)
!4291 = !DILocation(line: 84, column: 20, scope: !4259)
!4292 = !DILocation(line: 91, column: 9, scope: !4268)
!4293 = !DILocalVariable(name: "self", scope: !4294, file: !4059, line: 94, type: !1128, align: 8)
!4294 = !DILexicalBlockFile(scope: !4295, file: !4059, discriminator: 0)
!4295 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hb5ed852666082fe4E", scope: !1128, file: !1664, line: 892, type: !4144, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !554, retainedNodes: !4296)
!4296 = !{!4293, !4297}
!4297 = !DILocalVariable(name: "val", scope: !4298, file: !4059, line: 94, type: !556, align: 8)
!4298 = !DILexicalBlockFile(scope: !4299, file: !4059, discriminator: 0)
!4299 = distinct !DILexicalBlock(scope: !4295, file: !1664, line: 895, column: 13)
!4300 = !DILocation(line: 94, column: 23, scope: !4294, inlinedAt: !4301)
!4301 = !DILocation(line: 94, column: 23, scope: !4268)
!4302 = !DILocalVariable(name: "self", scope: !4303, file: !4059, line: 99, type: !1128, align: 8)
!4303 = !DILexicalBlockFile(scope: !4304, file: !4059, discriminator: 0)
!4304 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hb5ed852666082fe4E", scope: !1128, file: !1664, line: 892, type: !4144, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !554, retainedNodes: !4305)
!4305 = !{!4302, !4306}
!4306 = !DILocalVariable(name: "val", scope: !4307, file: !4059, line: 99, type: !556, align: 8)
!4307 = !DILexicalBlockFile(scope: !4308, file: !4059, discriminator: 0)
!4308 = distinct !DILexicalBlock(scope: !4304, file: !1664, line: 895, column: 13)
!4309 = !DILocation(line: 99, column: 27, scope: !4303, inlinedAt: !4310)
!4310 = !DILocation(line: 99, column: 27, scope: !4270)
!4311 = !DILocalVariable(name: "self", scope: !4312, file: !4059, line: 104, type: !1128, align: 8)
!4312 = !DILexicalBlockFile(scope: !4313, file: !4059, discriminator: 0)
!4313 = distinct !DISubprogram(name: "unwrap_unchecked<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17hb5ed852666082fe4E", scope: !1128, file: !1664, line: 892, type: !4144, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !554, retainedNodes: !4314)
!4314 = !{!4311, !4315}
!4315 = !DILocalVariable(name: "val", scope: !4316, file: !4059, line: 104, type: !556, align: 8)
!4316 = !DILexicalBlockFile(scope: !4317, file: !4059, discriminator: 0)
!4317 = distinct !DILexicalBlock(scope: !4313, file: !1664, line: 895, column: 13)
!4318 = !DILocation(line: 104, column: 31, scope: !4312, inlinedAt: !4319)
!4319 = !DILocation(line: 104, column: 31, scope: !4272)
!4320 = !DILocation(line: 84, column: 20, scope: !4281, inlinedAt: !4284)
!4321 = !DILocation(line: 84, column: 20, scope: !4261)
!4322 = !DILocation(line: 85, column: 9, scope: !4253)
!4323 = !DILocation(line: 85, column: 9, scope: !4263)
!4324 = !DILocation(line: 85, column: 22, scope: !4253)
!4325 = !DILocation(line: 1, column: 1, scope: !4326)
!4326 = !DILexicalBlockFile(scope: !4253, file: !4178, discriminator: 0)
!4327 = !DILocation(line: 113, column: 2, scope: !4253)
!4328 = !DILocation(line: 86, column: 9, scope: !4253)
!4329 = !DILocation(line: 86, column: 9, scope: !4266)
!4330 = !DILocation(line: 86, column: 22, scope: !4266)
!4331 = !DILocation(line: 84, column: 9, scope: !4257)
!4332 = !DILocation(line: 85, column: 53, scope: !4263)
!4333 = !DILocation(line: 85, column: 48, scope: !4263)
!4334 = !DILocation(line: 94, column: 23, scope: !4335, inlinedAt: !4337)
!4335 = !DILexicalBlockFile(scope: !4336, file: !4059, discriminator: 0)
!4336 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!4337 = !DILocation(line: 897, column: 30, scope: !4295, inlinedAt: !4301)
!4338 = !DILocation(line: 94, column: 23, scope: !4298, inlinedAt: !4301)
!4339 = !DILocation(line: 94, column: 22, scope: !4268)
!4340 = !DILocation(line: 94, column: 9, scope: !4270)
!4341 = !DILocation(line: 95, column: 26, scope: !4270)
!4342 = !DILocalVariable(name: "byte", scope: !4343, file: !4059, line: 95, type: !70, align: 1)
!4343 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h44bd029cb40d2dbdE", scope: !4060, file: !4059, line: 11, type: !4183, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4344)
!4344 = !{!4342, !4345}
!4345 = !DILocalVariable(name: "width", scope: !4343, file: !4059, line: 95, type: !351, align: 4)
!4346 = !DILocation(line: 95, column: 10, scope: !4343, inlinedAt: !4347)
!4347 = !DILocation(line: 95, column: 10, scope: !4270)
!4348 = !DILocation(line: 95, column: 5, scope: !4270)
!4349 = !DILocation(line: 96, column: 26, scope: !4270)
!4350 = !DILocalVariable(name: "byte", scope: !4351, file: !4059, line: 96, type: !70, align: 1)
!4351 = distinct !DISubprogram(name: "utf8_is_cont_byte", linkageName: "_ZN4core3str11validations17utf8_is_cont_byte17h70cc6e275c379094E", scope: !4060, file: !4059, line: 24, type: !4352, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4354)
!4352 = !DISubroutineType(types: !4353)
!4353 = !{!1159, !70}
!4354 = !{!4350}
!4355 = !DILocation(line: 96, column: 8, scope: !4351, inlinedAt: !4356)
!4356 = !DILocation(line: 96, column: 8, scope: !4270)
!4357 = !DILocation(line: 110, column: 29, scope: !4270)
!4358 = !DILocalVariable(name: "ch", scope: !4359, file: !4059, line: 110, type: !351, align: 4)
!4359 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h8803410fad6372eeE", scope: !4060, file: !4059, line: 17, type: !4205, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4360)
!4360 = !{!4358, !4361}
!4361 = !DILocalVariable(name: "byte", scope: !4359, file: !4059, line: 110, type: !70, align: 1)
!4362 = !DILocation(line: 110, column: 10, scope: !4359, inlinedAt: !4363)
!4363 = !DILocation(line: 110, column: 10, scope: !4270)
!4364 = !DILocation(line: 110, column: 33, scope: !4270)
!4365 = !DILocation(line: 110, column: 5, scope: !4270)
!4366 = !DILocation(line: 112, column: 10, scope: !4270)
!4367 = !DILocation(line: 112, column: 5, scope: !4270)
!4368 = !DILocation(line: 99, column: 27, scope: !4369, inlinedAt: !4371)
!4369 = !DILexicalBlockFile(scope: !4370, file: !4059, discriminator: 0)
!4370 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!4371 = !DILocation(line: 897, column: 30, scope: !4304, inlinedAt: !4310)
!4372 = !DILocation(line: 99, column: 27, scope: !4307, inlinedAt: !4310)
!4373 = !DILocation(line: 99, column: 26, scope: !4270)
!4374 = !DILocation(line: 99, column: 13, scope: !4272)
!4375 = !DILocation(line: 100, column: 30, scope: !4272)
!4376 = !DILocalVariable(name: "byte", scope: !4377, file: !4059, line: 100, type: !70, align: 1)
!4377 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h44bd029cb40d2dbdE", scope: !4060, file: !4059, line: 11, type: !4183, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4378)
!4378 = !{!4376, !4379}
!4379 = !DILocalVariable(name: "width", scope: !4377, file: !4059, line: 100, type: !351, align: 4)
!4380 = !DILocation(line: 100, column: 14, scope: !4377, inlinedAt: !4381)
!4381 = !DILocation(line: 100, column: 14, scope: !4272)
!4382 = !DILocation(line: 100, column: 9, scope: !4272)
!4383 = !DILocation(line: 101, column: 30, scope: !4272)
!4384 = !DILocalVariable(name: "byte", scope: !4385, file: !4059, line: 101, type: !70, align: 1)
!4385 = distinct !DISubprogram(name: "utf8_is_cont_byte", linkageName: "_ZN4core3str11validations17utf8_is_cont_byte17h70cc6e275c379094E", scope: !4060, file: !4059, line: 24, type: !4352, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4386)
!4386 = !{!4384}
!4387 = !DILocation(line: 101, column: 12, scope: !4385, inlinedAt: !4388)
!4388 = !DILocation(line: 101, column: 12, scope: !4272)
!4389 = !DILocation(line: 108, column: 33, scope: !4272)
!4390 = !DILocalVariable(name: "ch", scope: !4391, file: !4059, line: 108, type: !351, align: 4)
!4391 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h8803410fad6372eeE", scope: !4060, file: !4059, line: 17, type: !4205, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4392)
!4392 = !{!4390, !4393}
!4393 = !DILocalVariable(name: "byte", scope: !4391, file: !4059, line: 108, type: !70, align: 1)
!4394 = !DILocation(line: 108, column: 14, scope: !4391, inlinedAt: !4395)
!4395 = !DILocation(line: 108, column: 14, scope: !4272)
!4396 = !DILocation(line: 108, column: 37, scope: !4272)
!4397 = !DILocation(line: 108, column: 9, scope: !4272)
!4398 = !DILocation(line: 96, column: 5, scope: !4270)
!4399 = !DILocation(line: 104, column: 31, scope: !4400, inlinedAt: !4402)
!4400 = !DILexicalBlockFile(scope: !4401, file: !4059, discriminator: 0)
!4401 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!4402 = !DILocation(line: 897, column: 30, scope: !4313, inlinedAt: !4319)
!4403 = !DILocation(line: 104, column: 31, scope: !4316, inlinedAt: !4319)
!4404 = !DILocation(line: 104, column: 30, scope: !4272)
!4405 = !DILocation(line: 104, column: 17, scope: !4274)
!4406 = !DILocation(line: 105, column: 34, scope: !4274)
!4407 = !DILocalVariable(name: "byte", scope: !4408, file: !4059, line: 105, type: !70, align: 1)
!4408 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h44bd029cb40d2dbdE", scope: !4060, file: !4059, line: 11, type: !4183, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4409)
!4409 = !{!4407, !4410}
!4410 = !DILocalVariable(name: "width", scope: !4408, file: !4059, line: 105, type: !351, align: 4)
!4411 = !DILocation(line: 105, column: 18, scope: !4408, inlinedAt: !4412)
!4412 = !DILocation(line: 105, column: 18, scope: !4274)
!4413 = !DILocation(line: 105, column: 13, scope: !4274)
!4414 = !DILocation(line: 106, column: 37, scope: !4274)
!4415 = !DILocalVariable(name: "ch", scope: !4416, file: !4059, line: 106, type: !351, align: 4)
!4416 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h8803410fad6372eeE", scope: !4060, file: !4059, line: 17, type: !4205, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4417)
!4417 = !{!4415, !4418}
!4418 = !DILocalVariable(name: "byte", scope: !4416, file: !4059, line: 106, type: !70, align: 1)
!4419 = !DILocation(line: 106, column: 18, scope: !4416, inlinedAt: !4420)
!4420 = !DILocation(line: 106, column: 18, scope: !4274)
!4421 = !DILocation(line: 106, column: 41, scope: !4274)
!4422 = !DILocation(line: 106, column: 13, scope: !4274)
!4423 = !DILocation(line: 101, column: 9, scope: !4272)
!4424 = distinct !DISubprogram(name: "starts_with<&str>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h127e17ec4c874794E", scope: !697, file: !2520, line: 1080, type: !4425, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4430, retainedNodes: !4427)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{!1159, !137, !137}
!4427 = !{!4428, !4429}
!4428 = !DILocalVariable(name: "self", arg: 1, scope: !4424, file: !2520, line: 1080, type: !137)
!4429 = !DILocalVariable(name: "pat", arg: 2, scope: !4424, file: !2520, line: 1080, type: !137)
!4430 = !{!4431}
!4431 = !DITemplateTypeParameter(name: "P", type: !137)
!4432 = !DILocation(line: 1080, column: 44, scope: !4424)
!4433 = !DILocation(line: 1080, column: 54, scope: !4424)
!4434 = !DILocation(line: 1081, column: 9, scope: !4424)
!4435 = !DILocation(line: 1082, column: 6, scope: !4424)
!4436 = distinct !DISubprogram(name: "trim_matches<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12trim_matches17hb2741686825608a8E", scope: !697, file: !2520, line: 2042, type: !4437, scopeLine: 2042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4453, retainedNodes: !4439)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{!137, !137, !695}
!4439 = !{!4440, !4441, !4442, !4444, !4446, !4448, !4450, !4451}
!4440 = !DILocalVariable(name: "self", arg: 1, scope: !4436, file: !2520, line: 2042, type: !137)
!4441 = !DILocalVariable(name: "pat", arg: 2, scope: !4436, file: !2520, line: 2042, type: !695)
!4442 = !DILocalVariable(name: "i", scope: !4443, file: !2520, line: 2046, type: !9, align: 8)
!4443 = distinct !DILexicalBlock(scope: !4436, file: !2520, line: 2046, column: 9)
!4444 = !DILocalVariable(name: "j", scope: !4445, file: !2520, line: 2047, type: !9, align: 8)
!4445 = distinct !DILexicalBlock(scope: !4443, file: !2520, line: 2047, column: 9)
!4446 = !DILocalVariable(name: "matcher", scope: !4447, file: !2520, line: 2048, type: !1293, align: 8)
!4447 = distinct !DILexicalBlock(scope: !4445, file: !2520, line: 2048, column: 9)
!4448 = !DILocalVariable(name: "a", scope: !4449, file: !2520, line: 2049, type: !9, align: 8)
!4449 = distinct !DILexicalBlock(scope: !4447, file: !2520, line: 2049, column: 53)
!4450 = !DILocalVariable(name: "b", scope: !4449, file: !2520, line: 2049, type: !9, align: 8)
!4451 = !DILocalVariable(name: "b", scope: !4452, file: !2520, line: 2054, type: !9, align: 8)
!4452 = distinct !DILexicalBlock(scope: !4447, file: !2520, line: 2054, column: 58)
!4453 = !{!4454}
!4454 = !DITemplateTypeParameter(name: "P", type: !695)
!4455 = !DILocation(line: 2042, column: 32, scope: !4436)
!4456 = !DILocation(line: 2042, column: 42, scope: !4436)
!4457 = !DILocation(line: 2046, column: 13, scope: !4443)
!4458 = !DILocation(line: 2047, column: 13, scope: !4445)
!4459 = !DILocation(line: 2048, column: 13, scope: !4447)
!4460 = !DILocalVariable(name: "i", scope: !4461, file: !2520, line: 2058, type: !823, align: 8)
!4461 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h5e7b3dc104045584E", scope: !697, file: !2520, line: 505, type: !4462, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4466, retainedNodes: !4464)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!137, !137, !823}
!4464 = !{!4465, !4460}
!4465 = !DILocalVariable(name: "self", scope: !4461, file: !2520, line: 2058, type: !137, align: 8)
!4466 = !{!4467}
!4467 = !DITemplateTypeParameter(name: "I", type: !823)
!4468 = !DILocation(line: 2058, column: 18, scope: !4461, inlinedAt: !4469)
!4469 = !DILocation(line: 2058, column: 18, scope: !4447)
!4470 = !DILocation(line: 2046, column: 21, scope: !4436)
!4471 = !DILocation(line: 2047, column: 21, scope: !4443)
!4472 = !DILocation(line: 2048, column: 27, scope: !4445)
!4473 = !DILocation(line: 2049, column: 31, scope: !4449)
!4474 = !DILocation(line: 2059, column: 5, scope: !4445)
!4475 = !DILocation(line: 2049, column: 16, scope: !4449)
!4476 = !DILocation(line: 2049, column: 22, scope: !4449)
!4477 = !DILocation(line: 2049, column: 25, scope: !4449)
!4478 = !DILocation(line: 2050, column: 13, scope: !4449)
!4479 = !DILocation(line: 2051, column: 13, scope: !4449)
!4480 = !DILocation(line: 2049, column: 9, scope: !4447)
!4481 = !DILocation(line: 2054, column: 31, scope: !4452)
!4482 = !DILocation(line: 2054, column: 16, scope: !4452)
!4483 = !DILocation(line: 2054, column: 25, scope: !4452)
!4484 = !DILocation(line: 2055, column: 13, scope: !4452)
!4485 = !DILocation(line: 2054, column: 9, scope: !4447)
!4486 = !DILocation(line: 2058, column: 37, scope: !4447)
!4487 = !DILocation(line: 2058, column: 40, scope: !4447)
!4488 = !DILocation(line: 2042, column: 5, scope: !4436)
!4489 = !DILocation(line: 2059, column: 6, scope: !4436)
!4490 = distinct !DISubprogram(name: "trim", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4trim17hd25ab38ac10a5d56E", scope: !697, file: !2520, line: 1851, type: !4491, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4493)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{!137, !137}
!4493 = !{!4494}
!4494 = !DILocalVariable(name: "self", arg: 1, scope: !4490, file: !2520, line: 1851, type: !137)
!4495 = !DILocation(line: 1851, column: 17, scope: !4490)
!4496 = !DILocation(line: 1852, column: 9, scope: !4490)
!4497 = !DILocation(line: 1853, column: 6, scope: !4490)
!4498 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4trim28_$u7b$$u7b$closure$u7d$$u7d$17h143a3bc07e2984ccE", scope: !696, file: !2520, line: 1852, type: !4499, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4502)
!4499 = !DISubroutineType(types: !4500)
!4500 = !{!1159, !4501, !534}
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::{impl#0}::trim::{closure_env#0}", baseType: !695, size: 64, align: 64, dwarfAddressSpace: 0)
!4502 = !{!4503, !4504}
!4503 = !DILocalVariable(name: "c", arg: 2, scope: !4498, file: !2520, line: 1852, type: !534)
!4504 = !DILocalVariable(arg: 1, scope: !4498, file: !2520, line: 1852, type: !4501)
!4505 = !DILocation(line: 1852, column: 27, scope: !4498)
!4506 = !DILocation(line: 1852, column: 28, scope: !4498)
!4507 = !DILocation(line: 1852, column: 37, scope: !4498)
!4508 = !DILocation(line: 1852, column: 36, scope: !4498)
!4509 = distinct !DISubprogram(name: "parse<i32>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h05dd069edc62a978E", scope: !697, file: !2520, line: 2336, type: !4510, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4529, retainedNodes: !4527)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!4512, !137}
!4512 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<i32, core::num::error::ParseIntError>", scope: !2134, file: !2, size: 64, align: 32, elements: !4513, templateParams: !23, identifier: "28f53057c333fc92a1bde1b28fe7bf7")
!4513 = !{!4514}
!4514 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4512, file: !2, size: 64, align: 32, elements: !4515, templateParams: !23, identifier: "415df0b0bd7d6a6593015e42822d5c63", discriminator: !4526)
!4515 = !{!4516, !4522}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4514, file: !2, baseType: !4517, size: 64, align: 32, extraData: i64 0)
!4517 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4512, file: !2, size: 64, align: 32, elements: !4518, templateParams: !4520, identifier: "7a010827e339c8682b9c6a0d0ae6a3cf")
!4518 = !{!4519}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4517, file: !2, baseType: !62, size: 32, align: 32, offset: 32)
!4520 = !{!2784, !4521}
!4521 = !DITemplateTypeParameter(name: "E", type: !155)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4514, file: !2, baseType: !4523, size: 64, align: 32, extraData: i64 1)
!4523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4512, file: !2, size: 64, align: 32, elements: !4524, templateParams: !4520, identifier: "27ef7c004cc0ed0124ca8f0efd070d5b")
!4524 = !{!4525}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4523, file: !2, baseType: !155, size: 8, align: 8, offset: 8)
!4526 = !DIDerivedType(tag: DW_TAG_member, scope: !4512, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagArtificial)
!4527 = !{!4528}
!4528 = !DILocalVariable(name: "self", arg: 1, scope: !4509, file: !2520, line: 2336, type: !137)
!4529 = !{!4530}
!4530 = !DITemplateTypeParameter(name: "F", type: !62)
!4531 = !DILocation(line: 2336, column: 30, scope: !4509)
!4532 = !DILocation(line: 2337, column: 9, scope: !4509)
!4533 = !DILocation(line: 2338, column: 6, scope: !4509)
!4534 = distinct !DISubprogram(name: "parse<u32>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h7b8b0c2b7cd3bb41E", scope: !697, file: !2520, line: 2336, type: !4535, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4553, retainedNodes: !4551)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!4537, !137}
!4537 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<u32, core::num::error::ParseIntError>", scope: !2134, file: !2, size: 64, align: 32, elements: !4538, templateParams: !23, identifier: "465b216ef54d33b6bcfd3e7b8361a15a")
!4538 = !{!4539}
!4539 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4537, file: !2, size: 64, align: 32, elements: !4540, templateParams: !23, identifier: "9ef4a841687b92ef6e9450fdb0867510", discriminator: !4550)
!4540 = !{!4541, !4546}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4539, file: !2, baseType: !4542, size: 64, align: 32, extraData: i64 0)
!4542 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4537, file: !2, size: 64, align: 32, elements: !4543, templateParams: !4545, identifier: "ad8ee30db379809767db0255d59d4ac")
!4543 = !{!4544}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4542, file: !2, baseType: !351, size: 32, align: 32, offset: 32)
!4545 = !{!2679, !4521}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4539, file: !2, baseType: !4547, size: 64, align: 32, extraData: i64 1)
!4547 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4537, file: !2, size: 64, align: 32, elements: !4548, templateParams: !4545, identifier: "51452960966dffa7779cc60f2bfacad1")
!4548 = !{!4549}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4547, file: !2, baseType: !155, size: 8, align: 8, offset: 8)
!4550 = !DIDerivedType(tag: DW_TAG_member, scope: !4537, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagArtificial)
!4551 = !{!4552}
!4552 = !DILocalVariable(name: "self", arg: 1, scope: !4534, file: !2520, line: 2336, type: !137)
!4553 = !{!4554}
!4554 = !DITemplateTypeParameter(name: "F", type: !351)
!4555 = !DILocation(line: 2336, column: 30, scope: !4534)
!4556 = !DILocation(line: 2337, column: 9, scope: !4534)
!4557 = !DILocation(line: 2338, column: 6, scope: !4534)
!4558 = distinct !DISubprogram(name: "parse<u64>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h8dac79dedbab61bdE", scope: !697, file: !2520, line: 2336, type: !4559, scopeLine: 2336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4578, retainedNodes: !4576)
!4559 = !DISubroutineType(types: !4560)
!4560 = !{!4561, !137}
!4561 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<u64, core::num::error::ParseIntError>", scope: !2134, file: !2, size: 128, align: 64, elements: !4562, templateParams: !23, identifier: "db279e2fb8583f9da46bc0411a932926")
!4562 = !{!4563}
!4563 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4561, file: !2, size: 128, align: 64, elements: !4564, templateParams: !23, identifier: "6f32964fd625a642cc78842ad3ca29fe", discriminator: !4575)
!4564 = !{!4565, !4571}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4563, file: !2, baseType: !4566, size: 128, align: 64, extraData: i64 0)
!4566 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4561, file: !2, size: 128, align: 64, elements: !4567, templateParams: !4569, identifier: "ccd46d0181eec4ae4b885c333485bfd5")
!4567 = !{!4568}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4566, file: !2, baseType: !190, size: 64, align: 64, offset: 64)
!4569 = !{!4570, !4521}
!4570 = !DITemplateTypeParameter(name: "T", type: !190)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4563, file: !2, baseType: !4572, size: 128, align: 64, extraData: i64 1)
!4572 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4561, file: !2, size: 128, align: 64, elements: !4573, templateParams: !4569, identifier: "fb5ae949fd3a1c54842ffa6bc3c8bad")
!4573 = !{!4574}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4572, file: !2, baseType: !155, size: 8, align: 8, offset: 8)
!4575 = !DIDerivedType(tag: DW_TAG_member, scope: !4561, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagArtificial)
!4576 = !{!4577}
!4577 = !DILocalVariable(name: "self", arg: 1, scope: !4558, file: !2520, line: 2336, type: !137)
!4578 = !{!4579}
!4579 = !DITemplateTypeParameter(name: "F", type: !190)
!4580 = !DILocation(line: 2336, column: 30, scope: !4558)
!4581 = !DILocation(line: 2337, column: 9, scope: !4558)
!4582 = !DILocation(line: 2338, column: 6, scope: !4558)
!4583 = distinct !DISubprogram(name: "split<char>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5split17h0a47fafe188b62e8E", scope: !697, file: !2520, line: 1325, type: !4584, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4607, retainedNodes: !4609)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!4586, !137, !534}
!4586 = !DICompositeType(tag: DW_TAG_structure_type, name: "Split<char>", scope: !519, file: !2, size: 576, align: 64, elements: !4587, templateParams: !4607, identifier: "c3e0030e22b2009cad602cec1746455a")
!4587 = !{!4588}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4586, file: !2, baseType: !4589, size: 576, align: 64)
!4589 = !DICompositeType(tag: DW_TAG_structure_type, name: "SplitInternal<char>", scope: !519, file: !2, size: 576, align: 64, elements: !4590, templateParams: !4607, identifier: "8adee0e2384cb8eb4d0eff7cd50558eb")
!4590 = !{!4591, !4592, !4593, !4605, !4606}
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4589, file: !2, baseType: !9, size: 64, align: 64)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4589, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "matcher", scope: !4589, file: !2, baseType: !4594, size: 384, align: 64, offset: 128)
!4594 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharSearcher", scope: !671, file: !2, size: 384, align: 64, elements: !4595, templateParams: !23, identifier: "66a3a53d70287c37d9a0ad7f46c288ce")
!4595 = !{!4596, !4597, !4598, !4599, !4600, !4601}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !4594, file: !2, baseType: !137, size: 128, align: 64)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "finger", scope: !4594, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "finger_back", scope: !4594, file: !2, baseType: !9, size: 64, align: 64, offset: 192)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !4594, file: !2, baseType: !534, size: 32, align: 32, offset: 320)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_size", scope: !4594, file: !2, baseType: !9, size: 64, align: 64, offset: 256)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_encoded", scope: !4594, file: !2, baseType: !4602, size: 32, align: 8, offset: 352)
!4602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 32, align: 8, elements: !4603)
!4603 = !{!4604}
!4604 = !DISubrange(count: 4, lowerBound: 0)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "allow_trailing_empty", scope: !4589, file: !2, baseType: !1159, size: 8, align: 8, offset: 512)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "finished", scope: !4589, file: !2, baseType: !1159, size: 8, align: 8, offset: 520)
!4607 = !{!4608}
!4608 = !DITemplateTypeParameter(name: "P", type: !534)
!4609 = !{!4610, !4611}
!4610 = !DILocalVariable(name: "self", arg: 1, scope: !4583, file: !2520, line: 1325, type: !137)
!4611 = !DILocalVariable(name: "pat", arg: 2, scope: !4583, file: !2520, line: 1325, type: !534)
!4612 = !DILocation(line: 1325, column: 38, scope: !4583)
!4613 = !DILocation(line: 1325, column: 48, scope: !4583)
!4614 = !DILocation(line: 1326, column: 15, scope: !4583)
!4615 = !DILocation(line: 1328, column: 18, scope: !4583)
!4616 = !DILocalVariable(name: "self", scope: !4617, file: !2520, line: 1328, type: !137, align: 8)
!4617 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17h501ba6b4c82e7e4fE", scope: !697, file: !2520, line: 157, type: !4618, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4620)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{!9, !137}
!4620 = !{!4616}
!4621 = !DILocation(line: 1328, column: 18, scope: !4617, inlinedAt: !4615)
!4622 = !DILocalVariable(name: "self", scope: !4623, file: !2520, line: 1328, type: !137, align: 8)
!4623 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4624)
!4624 = !{!4622}
!4625 = !DILocation(line: 1328, column: 18, scope: !4623, inlinedAt: !4626)
!4626 = !DILocation(line: 158, column: 9, scope: !4617, inlinedAt: !4615)
!4627 = !DILocation(line: 1329, column: 22, scope: !4583)
!4628 = !DILocation(line: 1333, column: 5, scope: !4583)
!4629 = !DILocation(line: 1326, column: 9, scope: !4583)
!4630 = !DILocation(line: 1333, column: 6, scope: !4583)
!4631 = !DILocation(line: 1325, column: 5, scope: !4583)
!4632 = distinct !DISubprogram(name: "split<[char; 2]>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5split17h1bb17d058b9c0d23E", scope: !697, file: !2520, line: 1325, type: !4633, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4658, retainedNodes: !4660)
!4633 = !DISubroutineType(types: !4634)
!4634 = !{!4635, !137, !4649}
!4635 = !DICompositeType(tag: DW_TAG_structure_type, name: "Split<[char; 2]>", scope: !519, file: !2, size: 576, align: 64, elements: !4636, templateParams: !4658, identifier: "1f89e4ab6e8cd3c3176e518d19a6cb8")
!4636 = !{!4637}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4635, file: !2, baseType: !4638, size: 576, align: 64)
!4638 = !DICompositeType(tag: DW_TAG_structure_type, name: "SplitInternal<[char; 2]>", scope: !519, file: !2, size: 576, align: 64, elements: !4639, templateParams: !4658, identifier: "75c002e63aefb90a1bf738ec714c67a2")
!4639 = !{!4640, !4641, !4642, !4656, !4657}
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4638, file: !2, baseType: !9, size: 64, align: 64)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4638, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "matcher", scope: !4638, file: !2, baseType: !4643, size: 384, align: 64, offset: 128)
!4643 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharArraySearcher<2>", scope: !671, file: !2, size: 384, align: 64, elements: !4644, templateParams: !23, identifier: "fddfdcb91ff1642271aeb4d18af7b1dd")
!4644 = !{!4645}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4643, file: !2, baseType: !4646, size: 384, align: 64)
!4646 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqSearcher<[char; 2]>", scope: !671, file: !2, size: 384, align: 64, elements: !4647, templateParams: !4654, identifier: "741f9f567509765ad19ced91534ad15c")
!4647 = !{!4648, !4652, !4653}
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "char_eq", scope: !4646, file: !2, baseType: !4649, size: 64, align: 32, offset: 320)
!4649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 64, align: 32, elements: !4650)
!4650 = !{!4651}
!4651 = !DISubrange(count: 2, lowerBound: 0)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !4646, file: !2, baseType: !137, size: 128, align: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "char_indices", scope: !4646, file: !2, baseType: !541, size: 192, align: 64, offset: 128)
!4654 = !{!4655}
!4655 = !DITemplateTypeParameter(name: "C", type: !4649)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "allow_trailing_empty", scope: !4638, file: !2, baseType: !1159, size: 8, align: 8, offset: 512)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "finished", scope: !4638, file: !2, baseType: !1159, size: 8, align: 8, offset: 520)
!4658 = !{!4659}
!4659 = !DITemplateTypeParameter(name: "P", type: !4649)
!4660 = !{!4661, !4662}
!4661 = !DILocalVariable(name: "self", arg: 1, scope: !4632, file: !2520, line: 1325, type: !137)
!4662 = !DILocalVariable(name: "pat", arg: 2, scope: !4632, file: !2520, line: 1325, type: !4649)
!4663 = !DILocation(line: 1325, column: 38, scope: !4632)
!4664 = !DILocation(line: 1325, column: 48, scope: !4632)
!4665 = !DILocation(line: 1326, column: 15, scope: !4632)
!4666 = !DILocation(line: 1328, column: 18, scope: !4632)
!4667 = !DILocalVariable(name: "self", scope: !4668, file: !2520, line: 1328, type: !137, align: 8)
!4668 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17h501ba6b4c82e7e4fE", scope: !697, file: !2520, line: 157, type: !4618, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4669)
!4669 = !{!4667}
!4670 = !DILocation(line: 1328, column: 18, scope: !4668, inlinedAt: !4666)
!4671 = !DILocalVariable(name: "self", scope: !4672, file: !2520, line: 1328, type: !137, align: 8)
!4672 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4673)
!4673 = !{!4671}
!4674 = !DILocation(line: 1328, column: 18, scope: !4672, inlinedAt: !4675)
!4675 = !DILocation(line: 158, column: 9, scope: !4668, inlinedAt: !4666)
!4676 = !DILocation(line: 1329, column: 22, scope: !4632)
!4677 = !DILocation(line: 1333, column: 5, scope: !4632)
!4678 = !DILocation(line: 1326, column: 9, scope: !4632)
!4679 = !DILocation(line: 1333, column: 6, scope: !4632)
!4680 = !DILocation(line: 1325, column: 5, scope: !4632)
!4681 = distinct !DISubprogram(name: "next<[char; 2]>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h6744161f5d751910E", scope: !4638, file: !517, line: 601, type: !4682, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4658, retainedNodes: !4685)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!176, !4684}
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::SplitInternal<[char; 2]>", baseType: !4638, size: 64, align: 64, dwarfAddressSpace: 0)
!4685 = !{!4686, !4687, !4689, !4691, !4692}
!4686 = !DILocalVariable(name: "self", arg: 1, scope: !4681, file: !517, line: 601, type: !4684)
!4687 = !DILocalVariable(name: "haystack", scope: !4688, file: !517, line: 606, type: !137, align: 8)
!4688 = distinct !DILexicalBlock(scope: !4681, file: !517, line: 606, column: 9)
!4689 = !DILocalVariable(name: "a", scope: !4690, file: !517, line: 609, type: !9, align: 8)
!4690 = distinct !DILexicalBlock(scope: !4688, file: !517, line: 609, column: 13)
!4691 = !DILocalVariable(name: "b", scope: !4690, file: !517, line: 609, type: !9, align: 8)
!4692 = !DILocalVariable(name: "elt", scope: !4693, file: !517, line: 610, type: !137, align: 8)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !517, line: 610, column: 17)
!4694 = !DILocation(line: 601, column: 13, scope: !4681)
!4695 = !DILocalVariable(name: "i", scope: !4696, file: !517, line: 610, type: !823, align: 8)
!4696 = !DILexicalBlockFile(scope: !4697, file: !517, discriminator: 0)
!4697 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h5e7b3dc104045584E", scope: !697, file: !2520, line: 505, type: !4462, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4466, retainedNodes: !4698)
!4698 = !{!4699, !4695}
!4699 = !DILocalVariable(name: "self", scope: !4696, file: !517, line: 610, type: !137, align: 8)
!4700 = !DILocation(line: 610, column: 27, scope: !4696, inlinedAt: !4701)
!4701 = !DILocation(line: 610, column: 27, scope: !4690)
!4702 = !DILocation(line: 602, column: 12, scope: !4681)
!4703 = !DILocation(line: 606, column: 24, scope: !4681)
!4704 = !DILocation(line: 606, column: 13, scope: !4688)
!4705 = !DILocation(line: 603, column: 20, scope: !4681)
!4706 = !DILocation(line: 616, column: 6, scope: !4681)
!4707 = !DILocation(line: 607, column: 15, scope: !4688)
!4708 = !DILocation(line: 607, column: 9, scope: !4688)
!4709 = !DILocation(line: 614, column: 21, scope: !4688)
!4710 = !DILocation(line: 609, column: 19, scope: !4688)
!4711 = !DILocation(line: 609, column: 19, scope: !4690)
!4712 = !DILocation(line: 609, column: 22, scope: !4688)
!4713 = !DILocation(line: 609, column: 22, scope: !4690)
!4714 = !DILocation(line: 610, column: 50, scope: !4690)
!4715 = !DILocation(line: 610, column: 21, scope: !4693)
!4716 = !DILocation(line: 611, column: 17, scope: !4693)
!4717 = !DILocation(line: 612, column: 17, scope: !4693)
!4718 = !DILocation(line: 613, column: 13, scope: !4688)
!4719 = !DILocation(line: 614, column: 34, scope: !4688)
!4720 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17ha5aaa9b52ec87b91E", scope: !4589, file: !517, line: 601, type: !4721, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4607, retainedNodes: !4724)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{!176, !4723}
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::SplitInternal<char>", baseType: !4589, size: 64, align: 64, dwarfAddressSpace: 0)
!4724 = !{!4725, !4726, !4728, !4730, !4731}
!4725 = !DILocalVariable(name: "self", arg: 1, scope: !4720, file: !517, line: 601, type: !4723)
!4726 = !DILocalVariable(name: "haystack", scope: !4727, file: !517, line: 606, type: !137, align: 8)
!4727 = distinct !DILexicalBlock(scope: !4720, file: !517, line: 606, column: 9)
!4728 = !DILocalVariable(name: "a", scope: !4729, file: !517, line: 609, type: !9, align: 8)
!4729 = distinct !DILexicalBlock(scope: !4727, file: !517, line: 609, column: 13)
!4730 = !DILocalVariable(name: "b", scope: !4729, file: !517, line: 609, type: !9, align: 8)
!4731 = !DILocalVariable(name: "elt", scope: !4732, file: !517, line: 610, type: !137, align: 8)
!4732 = distinct !DILexicalBlock(scope: !4729, file: !517, line: 610, column: 17)
!4733 = !DILocation(line: 601, column: 13, scope: !4720)
!4734 = !DILocalVariable(name: "i", scope: !4735, file: !517, line: 610, type: !823, align: 8)
!4735 = !DILexicalBlockFile(scope: !4736, file: !517, discriminator: 0)
!4736 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h5e7b3dc104045584E", scope: !697, file: !2520, line: 505, type: !4462, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4466, retainedNodes: !4737)
!4737 = !{!4738, !4734}
!4738 = !DILocalVariable(name: "self", scope: !4735, file: !517, line: 610, type: !137, align: 8)
!4739 = !DILocation(line: 610, column: 27, scope: !4735, inlinedAt: !4740)
!4740 = !DILocation(line: 610, column: 27, scope: !4729)
!4741 = !DILocation(line: 602, column: 12, scope: !4720)
!4742 = !DILocation(line: 606, column: 24, scope: !4720)
!4743 = !DILocation(line: 606, column: 13, scope: !4727)
!4744 = !DILocation(line: 603, column: 20, scope: !4720)
!4745 = !DILocation(line: 616, column: 6, scope: !4720)
!4746 = !DILocation(line: 607, column: 15, scope: !4727)
!4747 = !DILocation(line: 607, column: 9, scope: !4727)
!4748 = !DILocation(line: 614, column: 21, scope: !4727)
!4749 = !DILocation(line: 609, column: 19, scope: !4727)
!4750 = !DILocation(line: 609, column: 19, scope: !4729)
!4751 = !DILocation(line: 609, column: 22, scope: !4727)
!4752 = !DILocation(line: 609, column: 22, scope: !4729)
!4753 = !DILocation(line: 610, column: 50, scope: !4729)
!4754 = !DILocation(line: 610, column: 21, scope: !4732)
!4755 = !DILocation(line: 611, column: 17, scope: !4732)
!4756 = !DILocation(line: 612, column: 17, scope: !4732)
!4757 = !DILocation(line: 613, column: 13, scope: !4727)
!4758 = !DILocation(line: 614, column: 34, scope: !4727)
!4759 = distinct !DISubprogram(name: "get_end<char>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17haa59f93809c2fca0E", scope: !4589, file: !517, line: 587, type: !4721, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4607, retainedNodes: !4760)
!4760 = !{!4761, !4762}
!4761 = !DILocalVariable(name: "self", arg: 1, scope: !4759, file: !517, line: 587, type: !4723)
!4762 = !DILocalVariable(name: "string", scope: !4763, file: !517, line: 592, type: !137, align: 8)
!4763 = distinct !DILexicalBlock(scope: !4759, file: !517, line: 592, column: 17)
!4764 = !DILocation(line: 587, column: 16, scope: !4759)
!4765 = !DILocalVariable(name: "i", scope: !4766, file: !517, line: 592, type: !823, align: 8)
!4766 = !DILexicalBlockFile(scope: !4767, file: !517, discriminator: 0)
!4767 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h5e7b3dc104045584E", scope: !697, file: !2520, line: 505, type: !4462, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4466, retainedNodes: !4768)
!4768 = !{!4769, !4765}
!4769 = !DILocalVariable(name: "self", scope: !4766, file: !517, line: 592, type: !137, align: 8)
!4770 = !DILocation(line: 592, column: 30, scope: !4766, inlinedAt: !4771)
!4771 = !DILocation(line: 592, column: 30, scope: !4759)
!4772 = !DILocation(line: 588, column: 13, scope: !4759)
!4773 = !DILocation(line: 588, column: 12, scope: !4759)
!4774 = !DILocation(line: 588, column: 31, scope: !4759)
!4775 = !DILocation(line: 588, column: 30, scope: !4759)
!4776 = !DILocation(line: 588, column: 60, scope: !4759)
!4777 = !DILocation(line: 588, column: 71, scope: !4759)
!4778 = !DILocation(line: 596, column: 13, scope: !4759)
!4779 = !DILocation(line: 588, column: 9, scope: !4759)
!4780 = !DILocation(line: 589, column: 13, scope: !4759)
!4781 = !DILocation(line: 592, column: 68, scope: !4759)
!4782 = !DILocation(line: 592, column: 80, scope: !4759)
!4783 = !DILocation(line: 592, column: 21, scope: !4763)
!4784 = !DILocation(line: 593, column: 17, scope: !4763)
!4785 = !DILocation(line: 598, column: 6, scope: !4759)
!4786 = distinct !DISubprogram(name: "get_end<[char; 2]>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17hb439a7971d71987aE", scope: !4638, file: !517, line: 587, type: !4682, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4658, retainedNodes: !4787)
!4787 = !{!4788, !4789}
!4788 = !DILocalVariable(name: "self", arg: 1, scope: !4786, file: !517, line: 587, type: !4684)
!4789 = !DILocalVariable(name: "string", scope: !4790, file: !517, line: 592, type: !137, align: 8)
!4790 = distinct !DILexicalBlock(scope: !4786, file: !517, line: 592, column: 17)
!4791 = !DILocation(line: 587, column: 16, scope: !4786)
!4792 = !DILocalVariable(name: "i", scope: !4793, file: !517, line: 592, type: !823, align: 8)
!4793 = !DILexicalBlockFile(scope: !4794, file: !517, discriminator: 0)
!4794 = distinct !DISubprogram(name: "get_unchecked<core::ops::range::Range<usize>>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h5e7b3dc104045584E", scope: !697, file: !2520, line: 505, type: !4462, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4466, retainedNodes: !4795)
!4795 = !{!4796, !4792}
!4796 = !DILocalVariable(name: "self", scope: !4793, file: !517, line: 592, type: !137, align: 8)
!4797 = !DILocation(line: 592, column: 30, scope: !4793, inlinedAt: !4798)
!4798 = !DILocation(line: 592, column: 30, scope: !4786)
!4799 = !DILocation(line: 588, column: 13, scope: !4786)
!4800 = !DILocation(line: 588, column: 12, scope: !4786)
!4801 = !DILocation(line: 588, column: 31, scope: !4786)
!4802 = !DILocation(line: 588, column: 30, scope: !4786)
!4803 = !DILocation(line: 588, column: 60, scope: !4786)
!4804 = !DILocation(line: 588, column: 71, scope: !4786)
!4805 = !DILocation(line: 596, column: 13, scope: !4786)
!4806 = !DILocation(line: 588, column: 9, scope: !4786)
!4807 = !DILocation(line: 589, column: 13, scope: !4786)
!4808 = !DILocation(line: 592, column: 68, scope: !4786)
!4809 = !DILocation(line: 592, column: 80, scope: !4786)
!4810 = !DILocation(line: 592, column: 21, scope: !4790)
!4811 = !DILocation(line: 593, column: 17, scope: !4790)
!4812 = !DILocation(line: 598, column: 6, scope: !4786)
!4813 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h612abac0371ebe9fE", scope: !4815, file: !4814, line: 197, type: !4817, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4823)
!4814 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "fe011983167a64afa5cd9b7538fc9cef")
!4815 = !DINamespace(name: "{impl#7}", scope: !4816)
!4816 = !DINamespace(name: "traits", scope: !439)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!4819, !823, !4819}
!4819 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 128, align: 64, elements: !4820, templateParams: !23, identifier: "c0e5994a8e99afccd68a87827900070")
!4820 = !{!4821, !4822}
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4819, file: !2, baseType: !140, size: 64, align: 64)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4819, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4823 = !{!4824, !4825, !4826, !4828, !4830}
!4824 = !DILocalVariable(name: "self", arg: 1, scope: !4813, file: !4814, line: 197, type: !823)
!4825 = !DILocalVariable(name: "slice", arg: 2, scope: !4813, file: !4814, line: 197, type: !4819)
!4826 = !DILocalVariable(name: "slice", scope: !4827, file: !4814, line: 198, type: !402, align: 8)
!4827 = distinct !DILexicalBlock(scope: !4813, file: !4814, line: 198, column: 9)
!4828 = !DILocalVariable(name: "ptr", scope: !4829, file: !4814, line: 201, type: !329, align: 8)
!4829 = distinct !DILexicalBlock(scope: !4827, file: !4814, line: 201, column: 9)
!4830 = !DILocalVariable(name: "len", scope: !4831, file: !4814, line: 202, type: !9, align: 8)
!4831 = distinct !DILexicalBlock(scope: !4829, file: !4814, line: 202, column: 9)
!4832 = !DILocation(line: 197, column: 29, scope: !4813)
!4833 = !DILocation(line: 197, column: 35, scope: !4813)
!4834 = !DILocation(line: 198, column: 21, scope: !4813)
!4835 = !DILocation(line: 198, column: 13, scope: !4827)
!4836 = !DILocation(line: 201, column: 28, scope: !4827)
!4837 = !DILocalVariable(name: "self", scope: !4838, file: !4814, line: 201, type: !402, align: 8)
!4838 = !DILexicalBlockFile(scope: !4839, file: !4814, discriminator: 0)
!4839 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h53ba0de6333377efE", scope: !849, file: !413, line: 1385, type: !850, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !4840)
!4840 = !{!4837}
!4841 = !DILocation(line: 201, column: 28, scope: !4838, inlinedAt: !4836)
!4842 = !DILocalVariable(name: "self", scope: !4843, file: !4814, line: 201, type: !329, align: 8)
!4843 = !DILexicalBlockFile(scope: !4844, file: !4814, discriminator: 0)
!4844 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd93d5f335c24c154E", scope: !414, file: !413, line: 871, type: !857, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !4845)
!4845 = !{!4842, !4846}
!4846 = !DILocalVariable(name: "count", scope: !4843, file: !4814, line: 201, type: !9, align: 8)
!4847 = !DILocation(line: 201, column: 28, scope: !4843, inlinedAt: !4836)
!4848 = !DILocation(line: 201, column: 47, scope: !4827)
!4849 = !DILocalVariable(name: "self", scope: !4850, file: !4814, line: 201, type: !329, align: 8)
!4850 = !DILexicalBlockFile(scope: !4851, file: !4814, discriminator: 0)
!4851 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hcb6b1a5987c5a17eE", scope: !414, file: !413, line: 453, type: !866, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !4852)
!4852 = !{!4849, !4853}
!4853 = !DILocalVariable(name: "count", scope: !4850, file: !4814, line: 201, type: !868, align: 8)
!4854 = !DILocation(line: 201, column: 28, scope: !4850, inlinedAt: !4855)
!4855 = !DILocation(line: 876, column: 18, scope: !4844, inlinedAt: !4836)
!4856 = !DILocation(line: 201, column: 13, scope: !4829)
!4857 = !DILocation(line: 202, column: 19, scope: !4829)
!4858 = !DILocation(line: 202, column: 13, scope: !4831)
!4859 = !DILocation(line: 203, column: 35, scope: !4831)
!4860 = !DILocalVariable(name: "data", scope: !4861, file: !4814, line: 203, type: !329, align: 8)
!4861 = !DILexicalBlockFile(scope: !4862, file: !4814, discriminator: 0)
!4862 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6a66992555506ab5E", scope: !43, file: !399, line: 695, type: !400, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !4863)
!4863 = !{!4860, !4864}
!4864 = !DILocalVariable(name: "len", scope: !4861, file: !4814, line: 203, type: !9, align: 8)
!4865 = !DILocation(line: 203, column: 9, scope: !4861, inlinedAt: !4866)
!4866 = !DILocation(line: 203, column: 9, scope: !4831)
!4867 = !DILocation(line: 203, column: 40, scope: !4831)
!4868 = !DILocalVariable(name: "self", scope: !4869, file: !4814, line: 203, type: !329, align: 8)
!4869 = !DILexicalBlockFile(scope: !4870, file: !4814, discriminator: 0)
!4870 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb951d44ade26c9c5E", scope: !414, file: !413, line: 46, type: !416, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !4871)
!4871 = !{!4868}
!4872 = !DILocation(line: 203, column: 9, scope: !4869, inlinedAt: !4873)
!4873 = !DILocation(line: 696, column: 20, scope: !4862, inlinedAt: !4866)
!4874 = !DILocalVariable(name: "data_address", scope: !4875, file: !4814, line: 203, type: !6, align: 8)
!4875 = !DILexicalBlockFile(scope: !4876, file: !4814, discriminator: 0)
!4876 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h9dc36a19d85d94baE", scope: !427, file: !426, line: 110, type: !428, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !4877)
!4877 = !{!4874, !4878}
!4878 = !DILocalVariable(name: "metadata", scope: !4875, file: !4814, line: 203, type: !9, align: 8)
!4879 = !DILocation(line: 203, column: 9, scope: !4875, inlinedAt: !4880)
!4880 = !DILocation(line: 696, column: 5, scope: !4862, inlinedAt: !4866)
!4881 = !DILocation(line: 204, column: 6, scope: !4813)
!4882 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h09592fa3aa826ce9E", scope: !4883, file: !4814, line: 28, type: !4425, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4884)
!4883 = !DINamespace(name: "{impl#1}", scope: !4816)
!4884 = !{!4885, !4886}
!4885 = !DILocalVariable(name: "self", arg: 1, scope: !4882, file: !4814, line: 28, type: !137)
!4886 = !DILocalVariable(name: "other", arg: 2, scope: !4882, file: !4814, line: 28, type: !137)
!4887 = !DILocation(line: 28, column: 11, scope: !4882)
!4888 = !DILocation(line: 28, column: 18, scope: !4882)
!4889 = !DILocation(line: 29, column: 9, scope: !4882)
!4890 = !DILocalVariable(name: "self", scope: !4891, file: !4814, line: 29, type: !137, align: 8)
!4891 = !DILexicalBlockFile(scope: !4892, file: !4814, discriminator: 0)
!4892 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4893)
!4893 = !{!4890}
!4894 = !DILocation(line: 29, column: 9, scope: !4891, inlinedAt: !4889)
!4895 = !DILocalVariable(name: "self", scope: !4896, file: !4814, line: 29, type: !4900, align: 8)
!4896 = !DILexicalBlockFile(scope: !4897, file: !4814, discriminator: 0)
!4897 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hfa90257108112eabE", scope: !2986, file: !2936, line: 1512, type: !4898, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2992, retainedNodes: !4901)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!1159, !4900, !4900}
!4900 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[u8]", baseType: !366, size: 64, align: 64, dwarfAddressSpace: 0)
!4901 = !{!4895, !4902}
!4902 = !DILocalVariable(name: "other", scope: !4896, file: !4814, line: 29, type: !4900, align: 8)
!4903 = !DILocation(line: 29, column: 9, scope: !4896, inlinedAt: !4889)
!4904 = !DILocation(line: 29, column: 28, scope: !4882)
!4905 = !DILocalVariable(name: "self", scope: !4906, file: !4814, line: 29, type: !137, align: 8)
!4906 = !DILexicalBlockFile(scope: !4907, file: !4814, discriminator: 0)
!4907 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4908)
!4908 = !{!4905}
!4909 = !DILocation(line: 29, column: 28, scope: !4906, inlinedAt: !4904)
!4910 = !DILocation(line: 30, column: 6, scope: !4882)
!4911 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17ha3be070eaf30319eE", scope: !4912, file: !2520, line: 2563, type: !2521, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4913)
!4912 = !DINamespace(name: "{impl#1}", scope: !439)
!4913 = !{!4914}
!4914 = !DILocalVariable(name: "self", arg: 1, scope: !4911, file: !2520, line: 2563, type: !137)
!4915 = !DILocation(line: 2563, column: 15, scope: !4911)
!4916 = !DILocation(line: 2564, column: 9, scope: !4911)
!4917 = !DILocalVariable(name: "self", scope: !4918, file: !2520, line: 2564, type: !137, align: 8)
!4918 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !4919)
!4919 = !{!4917}
!4920 = !DILocation(line: 2564, column: 9, scope: !4918, inlinedAt: !4916)
!4921 = !DILocation(line: 2565, column: 6, scope: !4911)
!4922 = distinct !DISubprogram(name: "next_reject_back<core::str::pattern::MultiCharEqSearcher<core::str::{impl#0}::trim::{closure_env#0}>>", linkageName: "_ZN4core3str7pattern15ReverseSearcher16next_reject_back17h4f16c1589d6f0daeE", scope: !4923, file: !669, line: 312, type: !4924, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4931, retainedNodes: !4926)
!4923 = !DINamespace(name: "ReverseSearcher", scope: !671)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{!1275, !691}
!4926 = !{!4927, !4928, !4930}
!4927 = !DILocalVariable(name: "self", arg: 1, scope: !4922, file: !669, line: 312, type: !691)
!4928 = !DILocalVariable(name: "a", scope: !4929, file: !669, line: 315, type: !9, align: 8)
!4929 = distinct !DILexicalBlock(scope: !4922, file: !669, line: 315, column: 17)
!4930 = !DILocalVariable(name: "b", scope: !4929, file: !669, line: 315, type: !9, align: 8)
!4931 = !{!4932}
!4932 = !DITemplateTypeParameter(name: "Self", type: !692)
!4933 = !DILocation(line: 312, column: 25, scope: !4922)
!4934 = !DILocation(line: 313, column: 9, scope: !4922)
!4935 = !DILocation(line: 314, column: 19, scope: !4922)
!4936 = !{i64 0, i64 3}
!4937 = !DILocation(line: 314, column: 13, scope: !4922)
!4938 = !DILocation(line: 1, column: 1, scope: !4939)
!4939 = !DILexicalBlockFile(scope: !4922, file: !4178, discriminator: 0)
!4940 = !DILocation(line: 315, column: 36, scope: !4922)
!4941 = !DILocation(line: 315, column: 36, scope: !4929)
!4942 = !DILocation(line: 315, column: 39, scope: !4922)
!4943 = !DILocation(line: 315, column: 39, scope: !4929)
!4944 = !DILocation(line: 315, column: 57, scope: !4929)
!4945 = !DILocation(line: 315, column: 52, scope: !4929)
!4946 = !DILocation(line: 316, column: 44, scope: !4922)
!4947 = !DILocation(line: 316, column: 37, scope: !4922)
!4948 = !DILocation(line: 320, column: 6, scope: !4922)
!4949 = distinct !DISubprogram(name: "next_match<core::str::pattern::MultiCharEqSearcher<[char; 2]>>", linkageName: "_ZN4core3str7pattern8Searcher10next_match17hf80201f6cbe5aab5E", scope: !4950, file: !669, line: 231, type: !4951, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4959, retainedNodes: !4954)
!4950 = !DINamespace(name: "Searcher", scope: !671)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{!1275, !4953}
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::MultiCharEqSearcher<[char; 2]>", baseType: !4646, size: 64, align: 64, dwarfAddressSpace: 0)
!4954 = !{!4955, !4956, !4958}
!4955 = !DILocalVariable(name: "self", arg: 1, scope: !4949, file: !669, line: 231, type: !4953)
!4956 = !DILocalVariable(name: "a", scope: !4957, file: !669, line: 234, type: !9, align: 8)
!4957 = distinct !DILexicalBlock(scope: !4949, file: !669, line: 234, column: 17)
!4958 = !DILocalVariable(name: "b", scope: !4957, file: !669, line: 234, type: !9, align: 8)
!4959 = !{!4960}
!4960 = !DITemplateTypeParameter(name: "Self", type: !4646)
!4961 = !DILocation(line: 231, column: 19, scope: !4949)
!4962 = !DILocation(line: 232, column: 9, scope: !4949)
!4963 = !DILocation(line: 233, column: 19, scope: !4949)
!4964 = !DILocation(line: 233, column: 13, scope: !4949)
!4965 = !DILocation(line: 1, column: 1, scope: !4966)
!4966 = !DILexicalBlockFile(scope: !4949, file: !4178, discriminator: 0)
!4967 = !DILocation(line: 234, column: 35, scope: !4949)
!4968 = !DILocation(line: 234, column: 35, scope: !4957)
!4969 = !DILocation(line: 234, column: 38, scope: !4949)
!4970 = !DILocation(line: 234, column: 38, scope: !4957)
!4971 = !DILocation(line: 234, column: 56, scope: !4957)
!4972 = !DILocation(line: 234, column: 51, scope: !4957)
!4973 = !DILocation(line: 235, column: 44, scope: !4949)
!4974 = !DILocation(line: 235, column: 37, scope: !4949)
!4975 = !DILocation(line: 239, column: 6, scope: !4949)
!4976 = distinct !DISubprogram(name: "next_reject<core::str::pattern::MultiCharEqSearcher<core::str::{impl#0}::trim::{closure_env#0}>>", linkageName: "_ZN4core3str7pattern8Searcher11next_reject17hc547f4bf1cf9f741E", scope: !4950, file: !669, line: 247, type: !4924, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4931, retainedNodes: !4977)
!4977 = !{!4978, !4979, !4981}
!4978 = !DILocalVariable(name: "self", arg: 1, scope: !4976, file: !669, line: 247, type: !691)
!4979 = !DILocalVariable(name: "a", scope: !4980, file: !669, line: 250, type: !9, align: 8)
!4980 = distinct !DILexicalBlock(scope: !4976, file: !669, line: 250, column: 17)
!4981 = !DILocalVariable(name: "b", scope: !4980, file: !669, line: 250, type: !9, align: 8)
!4982 = !DILocation(line: 247, column: 20, scope: !4976)
!4983 = !DILocation(line: 248, column: 9, scope: !4976)
!4984 = !DILocation(line: 249, column: 19, scope: !4976)
!4985 = !DILocation(line: 249, column: 13, scope: !4976)
!4986 = !DILocation(line: 1, column: 1, scope: !4987)
!4987 = !DILexicalBlockFile(scope: !4976, file: !4178, discriminator: 0)
!4988 = !DILocation(line: 250, column: 36, scope: !4976)
!4989 = !DILocation(line: 250, column: 36, scope: !4980)
!4990 = !DILocation(line: 250, column: 39, scope: !4976)
!4991 = !DILocation(line: 250, column: 39, scope: !4980)
!4992 = !DILocation(line: 250, column: 57, scope: !4980)
!4993 = !DILocation(line: 250, column: 52, scope: !4980)
!4994 = !DILocation(line: 251, column: 44, scope: !4976)
!4995 = !DILocation(line: 251, column: 37, scope: !4976)
!4996 = !DILocation(line: 255, column: 6, scope: !4976)
!4997 = distinct !DISubprogram(name: "encode_utf8_raw", linkageName: "_ZN4core4char7methods15encode_utf8_raw17h5a0cf1b4e242d71cE", scope: !4999, file: !4998, line: 1675, type: !5001, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5003)
!4998 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "f022f296c6d29fd4ac1963268a3eecbc")
!4999 = !DINamespace(name: "methods", scope: !5000)
!5000 = !DINamespace(name: "char", scope: !44)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!1109, !351, !1109}
!5003 = !{!5004, !5005, !5006, !5008, !5011, !5013, !5014, !5016, !5017, !5018, !5020, !5021, !5022}
!5004 = !DILocalVariable(name: "code", arg: 1, scope: !4997, file: !4998, line: 1675, type: !351)
!5005 = !DILocalVariable(name: "dst", arg: 2, scope: !4997, file: !4998, line: 1675, type: !1109)
!5006 = !DILocalVariable(name: "len", scope: !5007, file: !4998, line: 1676, type: !9, align: 8)
!5007 = distinct !DILexicalBlock(scope: !4997, file: !4998, line: 1676, column: 5)
!5008 = !DILocalVariable(name: "a", scope: !5009, file: !4998, line: 1678, type: !5010, align: 8)
!5009 = distinct !DILexicalBlock(scope: !5007, file: !4998, line: 1678, column: 9)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !70, size: 64, align: 64, dwarfAddressSpace: 0)
!5011 = !DILocalVariable(name: "a", scope: !5012, file: !4998, line: 1681, type: !5010, align: 8)
!5012 = distinct !DILexicalBlock(scope: !5007, file: !4998, line: 1681, column: 9)
!5013 = !DILocalVariable(name: "b", scope: !5012, file: !4998, line: 1681, type: !5010, align: 8)
!5014 = !DILocalVariable(name: "a", scope: !5015, file: !4998, line: 1685, type: !5010, align: 8)
!5015 = distinct !DILexicalBlock(scope: !5007, file: !4998, line: 1685, column: 9)
!5016 = !DILocalVariable(name: "b", scope: !5015, file: !4998, line: 1685, type: !5010, align: 8)
!5017 = !DILocalVariable(name: "c", scope: !5015, file: !4998, line: 1685, type: !5010, align: 8)
!5018 = !DILocalVariable(name: "a", scope: !5019, file: !4998, line: 1690, type: !5010, align: 8)
!5019 = distinct !DILexicalBlock(scope: !5007, file: !4998, line: 1690, column: 9)
!5020 = !DILocalVariable(name: "b", scope: !5019, file: !4998, line: 1690, type: !5010, align: 8)
!5021 = !DILocalVariable(name: "c", scope: !5019, file: !4998, line: 1690, type: !5010, align: 8)
!5022 = !DILocalVariable(name: "d", scope: !5019, file: !4998, line: 1690, type: !5010, align: 8)
!5023 = !DILocation(line: 1675, column: 24, scope: !4997)
!5024 = !DILocation(line: 1675, column: 35, scope: !4997)
!5025 = !DILocation(line: 1676, column: 9, scope: !5007)
!5026 = !DILocalVariable(name: "index", scope: !5027, file: !4998, line: 1677, type: !341, align: 1)
!5027 = !DILexicalBlockFile(scope: !5028, file: !4998, discriminator: 0)
!5028 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h3263a3dc75d22a6bE", scope: !5029, file: !818, line: 29, type: !5030, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5034, retainedNodes: !5032)
!5029 = !DINamespace(name: "{impl#1}", scope: !820)
!5030 = !DISubroutineType(types: !5031)
!5031 = !{!1109, !1109, !341, !344}
!5032 = !{!5033, !5026}
!5033 = !DILocalVariable(name: "self", scope: !5027, file: !4998, line: 1677, type: !1109, align: 8)
!5034 = !{!331, !5035}
!5035 = !DITemplateTypeParameter(name: "I", type: !341)
!5036 = !DILocation(line: 1677, column: 22, scope: !5027, inlinedAt: !5037)
!5037 = !DILocation(line: 1677, column: 22, scope: !5007)
!5038 = !DILocalVariable(name: "index", scope: !5039, file: !4998, line: 1703, type: !5043, align: 8)
!5039 = !DILexicalBlockFile(scope: !5040, file: !4998, discriminator: 0)
!5040 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h29754712ddb61d5fE", scope: !5029, file: !818, line: 29, type: !5041, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5048, retainedNodes: !5046)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!1109, !1109, !5043, !344}
!5043 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !342, file: !2, size: 64, align: 64, elements: !5044, templateParams: !827, identifier: "e254bd9803ca1fe3c70093646958bde2")
!5044 = !{!5045}
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5043, file: !2, baseType: !9, size: 64, align: 64)
!5046 = !{!5047, !5038}
!5047 = !DILocalVariable(name: "self", scope: !5039, file: !4998, line: 1703, type: !1109, align: 8)
!5048 = !{!331, !5049}
!5049 = !DITemplateTypeParameter(name: "I", type: !5043)
!5050 = !DILocation(line: 1703, column: 10, scope: !5039, inlinedAt: !5051)
!5051 = !DILocation(line: 1703, column: 10, scope: !5007)
!5052 = !DILocalVariable(name: "self", scope: !5053, file: !4998, line: 1677, type: !341, align: 1)
!5053 = !DILexicalBlockFile(scope: !5054, file: !4998, discriminator: 0)
!5054 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h379e9316b1fd649fE", scope: !5055, file: !818, line: 437, type: !5056, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !5058)
!5055 = !DINamespace(name: "{impl#6}", scope: !820)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{!1109, !341, !1109, !344}
!5058 = !{!5052, !5059}
!5059 = !DILocalVariable(name: "slice", scope: !5053, file: !4998, line: 1677, type: !1109, align: 8)
!5060 = !DILocation(line: 1677, column: 22, scope: !5053, inlinedAt: !5061)
!5061 = !DILocation(line: 30, column: 9, scope: !5028, inlinedAt: !5037)
!5062 = !DILocation(line: 1676, column: 24, scope: !4997)
!5063 = !DILocation(line: 1676, column: 15, scope: !4997)
!5064 = !DILocation(line: 1677, column: 12, scope: !5007)
!5065 = !DILocation(line: 1677, column: 11, scope: !5007)
!5066 = !DILocation(line: 1677, column: 5, scope: !5007)
!5067 = !DILocation(line: 1696, column: 14, scope: !5007)
!5068 = !DILocalVariable(name: "x", scope: !5069, file: !4998, line: 1696, type: !393, align: 8)
!5069 = !DILexicalBlockFile(scope: !5070, file: !4998, discriminator: 0)
!5070 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h592ba250caa768b9E", scope: !2123, file: !2064, line: 318, type: !5071, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!2123, !393}
!5073 = !{!5068}
!5074 = !DILocation(line: 1696, column: 14, scope: !5069, inlinedAt: !5075)
!5075 = !DILocation(line: 1698, column: 13, scope: !5007)
!5076 = !DILocalVariable(name: "x", scope: !5077, file: !4998, line: 1696, type: !393, align: 8)
!5077 = !DILexicalBlockFile(scope: !5078, file: !4998, discriminator: 0)
!5078 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17heb04c03bb1eceeafE", scope: !2123, file: !2064, line: 329, type: !5079, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !5084)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!2123, !393, !5081}
!5081 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !5082, size: 64, align: 64, dwarfAddressSpace: 0)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{!2133, !393, !2150}
!5084 = !{!5076, !5085}
!5085 = !DILocalVariable(name: "f", scope: !5077, file: !4998, line: 1696, type: !5081, align: 8)
!5086 = !DILocation(line: 1696, column: 14, scope: !5077, inlinedAt: !5087)
!5087 = !DILocation(line: 319, column: 13, scope: !5070, inlinedAt: !5075)
!5088 = !DILocation(line: 1678, column: 13, scope: !5007)
!5089 = !DILocation(line: 1681, column: 13, scope: !5007)
!5090 = !DILocation(line: 1685, column: 13, scope: !5007)
!5091 = !DILocation(line: 1690, column: 13, scope: !5007)
!5092 = !DILocation(line: 1690, column: 14, scope: !5007)
!5093 = !DILocation(line: 1690, column: 14, scope: !5019)
!5094 = !DILocation(line: 1690, column: 17, scope: !5007)
!5095 = !DILocation(line: 1690, column: 17, scope: !5019)
!5096 = !DILocation(line: 1690, column: 20, scope: !5007)
!5097 = !DILocation(line: 1690, column: 20, scope: !5019)
!5098 = !DILocation(line: 1690, column: 23, scope: !5007)
!5099 = !DILocation(line: 1690, column: 23, scope: !5019)
!5100 = !DILocation(line: 1691, column: 19, scope: !5019)
!5101 = !DILocation(line: 1691, column: 18, scope: !5019)
!5102 = !DILocation(line: 1691, column: 13, scope: !5019)
!5103 = !DILocation(line: 1692, column: 19, scope: !5019)
!5104 = !DILocation(line: 1692, column: 18, scope: !5019)
!5105 = !DILocation(line: 1692, column: 13, scope: !5019)
!5106 = !DILocation(line: 1693, column: 19, scope: !5019)
!5107 = !DILocation(line: 1693, column: 18, scope: !5019)
!5108 = !DILocation(line: 1693, column: 13, scope: !5019)
!5109 = !DILocation(line: 1694, column: 19, scope: !5019)
!5110 = !DILocation(line: 1694, column: 18, scope: !5019)
!5111 = !DILocation(line: 1694, column: 13, scope: !5019)
!5112 = !DILocation(line: 1695, column: 9, scope: !5007)
!5113 = !DILocation(line: 1703, column: 16, scope: !5007)
!5114 = !DILocation(line: 1703, column: 14, scope: !5007)
!5115 = !DILocalVariable(name: "self", scope: !5116, file: !4998, line: 1703, type: !5043, align: 8)
!5116 = !DILexicalBlockFile(scope: !5117, file: !4998, discriminator: 0)
!5117 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h48d091d377550ea0E", scope: !5118, file: !818, line: 355, type: !5119, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !5121)
!5118 = !DINamespace(name: "{impl#4}", scope: !820)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!1109, !5043, !1109, !344}
!5121 = !{!5115, !5122}
!5122 = !DILocalVariable(name: "slice", scope: !5116, file: !4998, line: 1703, type: !1109, align: 8)
!5123 = !DILocation(line: 1703, column: 10, scope: !5116, inlinedAt: !5124)
!5124 = !DILocation(line: 30, column: 9, scope: !5040, inlinedAt: !5051)
!5125 = !DILocation(line: 1685, column: 14, scope: !5007)
!5126 = !DILocation(line: 1685, column: 14, scope: !5015)
!5127 = !DILocation(line: 1685, column: 17, scope: !5007)
!5128 = !DILocation(line: 1685, column: 17, scope: !5015)
!5129 = !DILocation(line: 1685, column: 20, scope: !5007)
!5130 = !DILocation(line: 1685, column: 20, scope: !5015)
!5131 = !DILocation(line: 1686, column: 19, scope: !5015)
!5132 = !DILocation(line: 1686, column: 18, scope: !5015)
!5133 = !DILocation(line: 1686, column: 13, scope: !5015)
!5134 = !DILocation(line: 1687, column: 19, scope: !5015)
!5135 = !DILocation(line: 1687, column: 18, scope: !5015)
!5136 = !DILocation(line: 1687, column: 13, scope: !5015)
!5137 = !DILocation(line: 1688, column: 19, scope: !5015)
!5138 = !DILocation(line: 1688, column: 18, scope: !5015)
!5139 = !DILocation(line: 1688, column: 13, scope: !5015)
!5140 = !DILocation(line: 1689, column: 9, scope: !5007)
!5141 = !DILocation(line: 1681, column: 14, scope: !5007)
!5142 = !DILocation(line: 1681, column: 14, scope: !5012)
!5143 = !DILocation(line: 1681, column: 17, scope: !5007)
!5144 = !DILocation(line: 1681, column: 17, scope: !5012)
!5145 = !DILocation(line: 1682, column: 19, scope: !5012)
!5146 = !DILocation(line: 1682, column: 18, scope: !5012)
!5147 = !DILocation(line: 1682, column: 13, scope: !5012)
!5148 = !DILocation(line: 1683, column: 19, scope: !5012)
!5149 = !DILocation(line: 1683, column: 18, scope: !5012)
!5150 = !DILocation(line: 1683, column: 13, scope: !5012)
!5151 = !DILocation(line: 1684, column: 9, scope: !5007)
!5152 = !DILocation(line: 1678, column: 14, scope: !5007)
!5153 = !DILocation(line: 1678, column: 14, scope: !5009)
!5154 = !DILocation(line: 1679, column: 18, scope: !5009)
!5155 = !DILocation(line: 1679, column: 13, scope: !5009)
!5156 = !DILocation(line: 1680, column: 9, scope: !5007)
!5157 = !DILocation(line: 1704, column: 2, scope: !4997)
!5158 = !DILocalVariable(name: "x", scope: !5159, file: !4998, line: 1696, type: !2191, align: 8)
!5159 = !DILexicalBlockFile(scope: !5160, file: !4998, discriminator: 0)
!5160 = distinct !DISubprogram(name: "new_upper_hex<u32>", linkageName: "_ZN4core3fmt10ArgumentV113new_upper_hex17he5754b2beaed2b3cE", scope: !2123, file: !2064, line: 318, type: !5161, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !5163)
!5161 = !DISubroutineType(types: !5162)
!5162 = !{!2123, !2191}
!5163 = !{!5158}
!5164 = !DILocation(line: 1696, column: 14, scope: !5159, inlinedAt: !5165)
!5165 = !DILocation(line: 1699, column: 13, scope: !5007)
!5166 = !DILocalVariable(name: "x", scope: !5167, file: !4998, line: 1696, type: !2191, align: 8)
!5167 = !DILexicalBlockFile(scope: !5168, file: !4998, discriminator: 0)
!5168 = distinct !DISubprogram(name: "new<u32>", linkageName: "_ZN4core3fmt10ArgumentV13new17h791b9675d20dbe55E", scope: !2123, file: !2064, line: 329, type: !5169, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !5174)
!5169 = !DISubroutineType(types: !5170)
!5170 = !{!2123, !2191, !5171}
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !5172, size: 64, align: 64, dwarfAddressSpace: 0)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{!2133, !2191, !2150}
!5174 = !{!5166, !5175}
!5175 = !DILocalVariable(name: "f", scope: !5167, file: !4998, line: 1696, type: !5171, align: 8)
!5176 = !DILocation(line: 1696, column: 14, scope: !5167, inlinedAt: !5177)
!5177 = !DILocation(line: 319, column: 13, scope: !5160, inlinedAt: !5165)
!5178 = !DILocation(line: 1700, column: 13, scope: !5007)
!5179 = !DILocalVariable(name: "x", scope: !5180, file: !4998, line: 1696, type: !393, align: 8)
!5180 = !DILexicalBlockFile(scope: !5181, file: !4998, discriminator: 0)
!5181 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h592ba250caa768b9E", scope: !2123, file: !2064, line: 318, type: !5071, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !5182)
!5182 = !{!5179}
!5183 = !DILocation(line: 1696, column: 14, scope: !5180, inlinedAt: !5178)
!5184 = !DILocalVariable(name: "x", scope: !5185, file: !4998, line: 1696, type: !393, align: 8)
!5185 = !DILexicalBlockFile(scope: !5186, file: !4998, discriminator: 0)
!5186 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17heb04c03bb1eceeafE", scope: !2123, file: !2064, line: 329, type: !5079, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !5187)
!5187 = !{!5184, !5188}
!5188 = !DILocalVariable(name: "f", scope: !5185, file: !4998, line: 1696, type: !5081, align: 8)
!5189 = !DILocation(line: 1696, column: 14, scope: !5185, inlinedAt: !5190)
!5190 = !DILocation(line: 319, column: 13, scope: !5181, inlinedAt: !5178)
!5191 = distinct !DISubprogram(name: "is_whitespace", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$13is_whitespace17h5b061f1b4b1d2b71E", scope: !5192, file: !4998, line: 817, type: !5193, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5195)
!5192 = !DINamespace(name: "{impl#0}", scope: !4999)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{!1159, !534}
!5195 = !{!5196, !5197}
!5196 = !DILocalVariable(name: "self", arg: 1, scope: !5191, file: !4998, line: 817, type: !534)
!5197 = !DILocalVariable(name: "c", scope: !5198, file: !4998, line: 820, type: !534, align: 4)
!5198 = distinct !DILexicalBlock(scope: !5191, file: !4998, line: 820, column: 13)
!5199 = !DILocation(line: 817, column: 26, scope: !5191)
!5200 = !DILocation(line: 818, column: 9, scope: !5191)
!5201 = !DILocation(line: 819, column: 38, scope: !5191)
!5202 = !DILocation(line: 819, column: 19, scope: !5191)
!5203 = !DILocation(line: 820, column: 13, scope: !5191)
!5204 = !DILocation(line: 820, column: 13, scope: !5198)
!5205 = !DILocation(line: 820, column: 18, scope: !5198)
!5206 = !DILocation(line: 820, column: 32, scope: !5198)
!5207 = !DILocation(line: 820, column: 54, scope: !5191)
!5208 = !DILocation(line: 822, column: 6, scope: !5191)
!5209 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods8len_utf817hecd0ef79fb54d9b9E", scope: !4999, file: !4998, line: 1647, type: !5210, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5212)
!5210 = !DISubroutineType(types: !5211)
!5211 = !{!9, !351}
!5212 = !{!5213}
!5213 = !DILocalVariable(name: "code", arg: 1, scope: !5209, file: !4998, line: 1647, type: !351)
!5214 = !DILocation(line: 1647, column: 19, scope: !5209)
!5215 = !DILocation(line: 1648, column: 8, scope: !5209)
!5216 = !DILocation(line: 1650, column: 15, scope: !5209)
!5217 = !DILocation(line: 1649, column: 9, scope: !5209)
!5218 = !DILocation(line: 1648, column: 5, scope: !5209)
!5219 = !DILocation(line: 1657, column: 2, scope: !5209)
!5220 = !DILocation(line: 1652, column: 15, scope: !5209)
!5221 = !DILocation(line: 1651, column: 9, scope: !5209)
!5222 = !DILocation(line: 1650, column: 12, scope: !5209)
!5223 = !DILocation(line: 1655, column: 9, scope: !5209)
!5224 = !DILocation(line: 1652, column: 12, scope: !5209)
!5225 = !DILocation(line: 1653, column: 9, scope: !5209)
!5226 = distinct !DISubprogram(name: "advance_by<core::str::iter::Split<char>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator10advance_by17hd779907944178400E", scope: !5228, file: !5227, line: 328, type: !5231, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5273, retainedNodes: !5249)
!5227 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "a0295b930225b37fba81d1ded0ab2716")
!5228 = !DINamespace(name: "Iterator", scope: !5229)
!5229 = !DINamespace(name: "iterator", scope: !5230)
!5230 = !DINamespace(name: "traits", scope: !452)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{!5233, !5248, !9}
!5233 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), usize>", scope: !2134, file: !2, size: 128, align: 64, elements: !5234, templateParams: !23, identifier: "b2eb643a7e69024caba1c324e7725213")
!5234 = !{!5235}
!5235 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5233, file: !2, size: 128, align: 64, elements: !5236, templateParams: !23, identifier: "3e72a3f1a8701b9686476f5489c508c", discriminator: !5247)
!5236 = !{!5237, !5243}
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5235, file: !2, baseType: !5238, size: 128, align: 64, extraData: i64 0)
!5238 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5233, file: !2, size: 128, align: 64, elements: !5239, templateParams: !5241, identifier: "818c0d6ba2a8eed68aec0dacd2ec1b42")
!5239 = !{!5240}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5238, file: !2, baseType: !7, align: 8, offset: 64)
!5241 = !{!48, !5242}
!5242 = !DITemplateTypeParameter(name: "E", type: !9)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5235, file: !2, baseType: !5244, size: 128, align: 64, extraData: i64 1)
!5244 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5233, file: !2, size: 128, align: 64, elements: !5245, templateParams: !5241, identifier: "f79ae9adde13a2558f2f2eaa471fa37a")
!5245 = !{!5246}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5244, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5247 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!5248 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Split<char>", baseType: !4586, size: 64, align: 64, dwarfAddressSpace: 0)
!5249 = !{!5250, !5251, !5252, !5254, !5256, !5271}
!5250 = !DILocalVariable(name: "self", arg: 1, scope: !5226, file: !5227, line: 328, type: !5248)
!5251 = !DILocalVariable(name: "n", arg: 2, scope: !5226, file: !5227, line: 328, type: !9)
!5252 = !DILocalVariable(name: "iter", scope: !5253, file: !5227, line: 329, type: !823, align: 8)
!5253 = distinct !DILexicalBlock(scope: !5226, file: !5227, line: 329, column: 9)
!5254 = !DILocalVariable(name: "i", scope: !5255, file: !5227, line: 329, type: !9, align: 8)
!5255 = distinct !DILexicalBlock(scope: !5253, file: !5227, line: 329, column: 23)
!5256 = !DILocalVariable(name: "residual", scope: !5257, file: !5227, line: 330, type: !5258, align: 8)
!5257 = distinct !DILexicalBlock(scope: !5255, file: !5227, line: 330, column: 33)
!5258 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, usize>", scope: !2134, file: !2, size: 64, align: 64, elements: !5259, templateParams: !23, identifier: "e0581a80dbd6acb68c9f872a2241f8f1")
!5259 = !{!5260}
!5260 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5258, file: !2, size: 64, align: 64, elements: !5261, templateParams: !23, identifier: "d07b46d482c6021da8d1db3da0ed089f")
!5261 = !{!5262, !5267}
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5260, file: !2, baseType: !5263, size: 64, align: 64)
!5263 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5258, file: !2, size: 64, align: 64, elements: !5264, templateParams: !5266, identifier: "80e1da570e31e59e542a925170448b14")
!5264 = !{!5265}
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5263, file: !2, baseType: !4077, align: 8)
!5266 = !{!4076, !5242}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5260, file: !2, baseType: !5268, size: 64, align: 64)
!5268 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5258, file: !2, size: 64, align: 64, elements: !5269, templateParams: !5266, identifier: "378e49232206682fa4f710e6e85e3302")
!5269 = !{!5270}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5268, file: !2, baseType: !9, size: 64, align: 64)
!5271 = !DILocalVariable(name: "val", scope: !5272, file: !5227, line: 330, type: !137, align: 8)
!5272 = distinct !DILexicalBlock(scope: !5255, file: !5227, line: 330, column: 13)
!5273 = !{!5274}
!5274 = !DITemplateTypeParameter(name: "Self", type: !4586)
!5275 = !DILocation(line: 328, column: 19, scope: !5226)
!5276 = !DILocation(line: 328, column: 30, scope: !5226)
!5277 = !DILocalVariable(name: "self", scope: !5278, file: !5227, line: 329, type: !823, align: 8)
!5278 = !DILexicalBlockFile(scope: !5279, file: !5227, discriminator: 0)
!5279 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9c5f645b1373a133E", scope: !5281, file: !5280, line: 271, type: !5283, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4466, retainedNodes: !5285)
!5280 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!5281 = !DINamespace(name: "{impl#0}", scope: !5282)
!5282 = !DINamespace(name: "collect", scope: !5230)
!5283 = !DISubroutineType(types: !5284)
!5284 = !{!823, !823}
!5285 = !{!5277}
!5286 = !DILocation(line: 329, column: 18, scope: !5278, inlinedAt: !5287)
!5287 = !DILocation(line: 329, column: 18, scope: !5226)
!5288 = !DILocation(line: 329, column: 18, scope: !5253)
!5289 = !DILocalVariable(name: "residual", scope: !5290, file: !5227, line: 330, type: !5258, align: 8)
!5290 = !DILexicalBlockFile(scope: !5291, file: !5227, discriminator: 0)
!5291 = distinct !DISubprogram(name: "from_residual<(), usize, usize>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h344329602136d237E", scope: !5293, file: !5292, line: 2132, type: !5294, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5300, retainedNodes: !5296)
!5292 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!5293 = !DINamespace(name: "{impl#28}", scope: !2134)
!5294 = !DISubroutineType(types: !5295)
!5295 = !{!5233, !5258, !344}
!5296 = !{!5289, !5297}
!5297 = !DILocalVariable(name: "e", scope: !5298, file: !5227, line: 330, type: !9, align: 8)
!5298 = !DILexicalBlockFile(scope: !5299, file: !5227, discriminator: 0)
!5299 = distinct !DILexicalBlock(scope: !5291, file: !5292, line: 2134, column: 13)
!5300 = !{!48, !5242, !5301}
!5301 = !DITemplateTypeParameter(name: "F", type: !9)
!5302 = !DILocation(line: 330, column: 13, scope: !5290, inlinedAt: !5303)
!5303 = !DILocation(line: 330, column: 13, scope: !5257)
!5304 = !DILocation(line: 329, column: 9, scope: !5253)
!5305 = !DILocalVariable(name: "self", scope: !5306, file: !5227, line: 329, type: !5311, align: 8)
!5306 = !DILexicalBlockFile(scope: !5307, file: !5227, discriminator: 0)
!5307 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h362575ed86ffd725E", scope: !5308, file: !2914, line: 710, type: !5309, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5313, retainedNodes: !5312)
!5308 = !DINamespace(name: "{impl#3}", scope: !2916)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{!455, !5311}
!5311 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<usize>", baseType: !823, size: 64, align: 64, dwarfAddressSpace: 0)
!5312 = !{!5305}
!5313 = !{!5314}
!5314 = !DITemplateTypeParameter(name: "A", type: !9)
!5315 = !DILocation(line: 329, column: 18, scope: !5306, inlinedAt: !5288)
!5316 = !DILocation(line: 332, column: 9, scope: !5226)
!5317 = !DILocation(line: 333, column: 6, scope: !5226)
!5318 = !DILocation(line: 329, column: 13, scope: !5253)
!5319 = !DILocation(line: 329, column: 13, scope: !5255)
!5320 = !DILocation(line: 330, column: 13, scope: !5255)
!5321 = !DILocation(line: 330, column: 13, scope: !5272)
!5322 = !DILocation(line: 330, column: 34, scope: !5255)
!5323 = !DILocation(line: 330, column: 33, scope: !5255)
!5324 = !DILocation(line: 330, column: 33, scope: !5257)
!5325 = !DILocation(line: 330, column: 13, scope: !5298, inlinedAt: !5303)
!5326 = distinct !DISubprogram(name: "nth<core::str::iter::Split<char>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3nth17h60d719fd4cf64f56E", scope: !5228, file: !5227, line: 376, type: !5327, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5273, retainedNodes: !5329)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{!176, !5248, !9}
!5329 = !{!5330, !5331, !5332, !5334}
!5330 = !DILocalVariable(name: "self", arg: 1, scope: !5326, file: !5227, line: 376, type: !5248)
!5331 = !DILocalVariable(name: "n", arg: 2, scope: !5326, file: !5227, line: 376, type: !9)
!5332 = !DILocalVariable(name: "residual", scope: !5333, file: !5227, line: 377, type: !4069, align: 1)
!5333 = distinct !DILexicalBlock(scope: !5326, file: !5227, line: 377, column: 32)
!5334 = !DILocalVariable(name: "val", scope: !5335, file: !5227, line: 377, type: !7, align: 1)
!5335 = distinct !DILexicalBlock(scope: !5326, file: !5227, line: 377, column: 9)
!5336 = !DILocation(line: 376, column: 12, scope: !5326)
!5337 = !DILocation(line: 376, column: 23, scope: !5326)
!5338 = !DILocalVariable(name: "self", scope: !5339, file: !5227, line: 377, type: !5358, align: 1)
!5339 = !DILexicalBlockFile(scope: !5340, file: !5227, discriminator: 0)
!5340 = distinct !DISubprogram(name: "branch<()>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9bba4a426cbd5e87E", scope: !4105, file: !1664, line: 2290, type: !5341, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !5369)
!5341 = !DISubroutineType(types: !5342)
!5342 = !{!5343, !5358}
!5343 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, ()>", scope: !4109, file: !2, size: 8, align: 8, elements: !5344, templateParams: !23, identifier: "38c1a412f2a83377b13a7577fe4f520e")
!5344 = !{!5345}
!5345 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5343, file: !2, size: 8, align: 8, elements: !5346, templateParams: !23, identifier: "cf7e9fab9dc781e0b9d64a0d79c3a34e", discriminator: !5357)
!5346 = !{!5347, !5353}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !5345, file: !2, baseType: !5348, size: 8, align: 8, extraData: i64 0)
!5348 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !5343, file: !2, size: 8, align: 8, elements: !5349, templateParams: !5351, identifier: "2f89e042a19753bac36db3b4ce7e3db8")
!5349 = !{!5350}
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5348, file: !2, baseType: !7, align: 8, offset: 8)
!5351 = !{!4118, !5352}
!5352 = !DITemplateTypeParameter(name: "C", type: !7)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !5345, file: !2, baseType: !5354, size: 8, align: 8, extraData: i64 1)
!5354 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !5343, file: !2, size: 8, align: 8, elements: !5355, templateParams: !5351, identifier: "ca06d939a09715564286c42095ddfeb")
!5355 = !{!5356}
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5354, file: !2, baseType: !4069, align: 8, offset: 8)
!5357 = !DIDerivedType(tag: DW_TAG_member, scope: !5343, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagArtificial)
!5358 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<()>", scope: !177, file: !2, size: 8, align: 8, elements: !5359, templateParams: !23, identifier: "c5880ab616f70481abd20974cd1c8df5")
!5359 = !{!5360}
!5360 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5358, file: !2, size: 8, align: 8, elements: !5361, templateParams: !23, identifier: "e216a6b53eb9b18c580868d244732162", discriminator: !5368)
!5361 = !{!5362, !5364}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5360, file: !2, baseType: !5363, size: 8, align: 8, extraData: i64 0)
!5363 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5358, file: !2, size: 8, align: 8, elements: !23, templateParams: !47, identifier: "a691658f54235c0911dc379b72ec1e53")
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5360, file: !2, baseType: !5365, size: 8, align: 8, extraData: i64 1)
!5365 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5358, file: !2, size: 8, align: 8, elements: !5366, templateParams: !47, identifier: "c8d1538bfcc8dbbf710eecc2f2e910c3")
!5366 = !{!5367}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5365, file: !2, baseType: !7, align: 8, offset: 8)
!5368 = !DIDerivedType(tag: DW_TAG_member, scope: !5358, file: !2, baseType: !70, size: 8, align: 8, flags: DIFlagArtificial)
!5369 = !{!5338, !5370}
!5370 = !DILocalVariable(name: "v", scope: !5371, file: !5227, line: 377, type: !7, align: 1)
!5371 = !DILexicalBlockFile(scope: !5372, file: !5227, discriminator: 0)
!5372 = distinct !DILexicalBlock(scope: !5340, file: !1664, line: 2292, column: 13)
!5373 = !DILocation(line: 377, column: 9, scope: !5339, inlinedAt: !5374)
!5374 = !DILocation(line: 377, column: 9, scope: !5326)
!5375 = !DILocalVariable(name: "self", scope: !5376, file: !5227, line: 377, type: !5233, align: 8)
!5376 = !DILexicalBlockFile(scope: !5377, file: !5227, discriminator: 0)
!5377 = distinct !DISubprogram(name: "ok<(), usize>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h6c49d02719d1ae20E", scope: !5233, file: !5292, line: 637, type: !5378, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5241, retainedNodes: !5380)
!5378 = !DISubroutineType(types: !5379)
!5379 = !{!5358, !5233}
!5380 = !{!5375, !5381, !5384}
!5381 = !DILocalVariable(name: "x", scope: !5382, file: !5227, line: 377, type: !7, align: 1)
!5382 = !DILexicalBlockFile(scope: !5383, file: !5227, discriminator: 0)
!5383 = distinct !DILexicalBlock(scope: !5377, file: !5292, line: 642, column: 13)
!5384 = !DILocalVariable(name: "x", scope: !5385, file: !5227, line: 377, type: !9, align: 8)
!5385 = !DILexicalBlockFile(scope: !5386, file: !5227, discriminator: 0)
!5386 = distinct !DILexicalBlock(scope: !5377, file: !5292, line: 645, column: 13)
!5387 = !DILocation(line: 377, column: 9, scope: !5376, inlinedAt: !5374)
!5388 = !DILocation(line: 377, column: 32, scope: !5333)
!5389 = !DILocalVariable(name: "residual", scope: !5390, file: !5227, line: 377, type: !4069, align: 1)
!5390 = !DILexicalBlockFile(scope: !5391, file: !5227, discriminator: 0)
!5391 = distinct !DISubprogram(name: "from_residual<&str>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17he17472aa17152fe6E", scope: !4135, file: !1664, line: 2302, type: !5392, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !5394)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{!176, !4069}
!5394 = !{!5389}
!5395 = !DILocation(line: 377, column: 9, scope: !5390, inlinedAt: !5396)
!5396 = !DILocation(line: 377, column: 9, scope: !5333)
!5397 = !DILocation(line: 377, column: 9, scope: !5335)
!5398 = !DILocation(line: 377, column: 9, scope: !5382, inlinedAt: !5374)
!5399 = !DILocation(line: 377, column: 9, scope: !5371, inlinedAt: !5374)
!5400 = !DILocation(line: 377, column: 9, scope: !5385, inlinedAt: !5374)
!5401 = !DILocation(line: 378, column: 9, scope: !5326)
!5402 = !DILocation(line: 379, column: 6, scope: !5326)
!5403 = distinct !DISubprogram(name: "try_fold<core::slice::iter::Iter<&str>, usize, core::iter::adapters::map::map_try_fold::{closure_env#0}<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>, core::option::Option<usize>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h61f1b67524321cb2E", scope: !5228, file: !5227, line: 2230, type: !5404, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5425, retainedNodes: !5413)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!455, !5406, !9, !5407}
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<&str>", baseType: !472, size: 64, align: 64, dwarfAddressSpace: 0)
!5407 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>", scope: !5408, file: !2, size: 64, align: 64, elements: !5409, templateParams: !23, identifier: "2a8883970984eb09968ac3b01dc71fb0")
!5408 = !DINamespace(name: "map_try_fold", scope: !450)
!5409 = !{!5410, !5411}
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5407, file: !2, baseType: !493, align: 8)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5407, file: !2, baseType: !5412, size: 64, align: 64)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>", baseType: !486, size: 64, align: 64, dwarfAddressSpace: 0)
!5413 = !{!5414, !5415, !5416, !5417, !5419, !5421, !5423}
!5414 = !DILocalVariable(name: "self", arg: 1, scope: !5403, file: !5227, line: 2230, type: !5406)
!5415 = !DILocalVariable(name: "init", arg: 2, scope: !5403, file: !5227, line: 2230, type: !9)
!5416 = !DILocalVariable(name: "f", arg: 3, scope: !5403, file: !5227, line: 2230, type: !5407)
!5417 = !DILocalVariable(name: "accum", scope: !5418, file: !5227, line: 2236, type: !9, align: 8)
!5418 = distinct !DILexicalBlock(scope: !5403, file: !5227, line: 2236, column: 9)
!5419 = !DILocalVariable(name: "x", scope: !5420, file: !5227, line: 2237, type: !199, align: 8)
!5420 = distinct !DILexicalBlock(scope: !5418, file: !5227, line: 2237, column: 41)
!5421 = !DILocalVariable(name: "residual", scope: !5422, file: !5227, line: 2238, type: !4069, align: 1)
!5422 = distinct !DILexicalBlock(scope: !5420, file: !5227, line: 2238, column: 32)
!5423 = !DILocalVariable(name: "val", scope: !5424, file: !5227, line: 2238, type: !9, align: 8)
!5424 = distinct !DILexicalBlock(scope: !5420, file: !5227, line: 2238, column: 21)
!5425 = !{!5426, !501, !5427, !504}
!5426 = !DITemplateTypeParameter(name: "Self", type: !472)
!5427 = !DITemplateTypeParameter(name: "F", type: !5407)
!5428 = !DILocation(line: 2230, column: 26, scope: !5403)
!5429 = !DILocation(line: 2230, column: 37, scope: !5403)
!5430 = !DILocation(line: 2230, column: 46, scope: !5403)
!5431 = !DILocation(line: 2236, column: 13, scope: !5418)
!5432 = !DILocation(line: 2238, column: 32, scope: !5422)
!5433 = !DILocation(line: 2236, column: 25, scope: !5403)
!5434 = !DILocation(line: 2237, column: 9, scope: !5418)
!5435 = !DILocation(line: 2237, column: 29, scope: !5420)
!5436 = !DILocation(line: 2241, column: 5, scope: !5403)
!5437 = !DILocation(line: 2237, column: 19, scope: !5420)
!5438 = !DILocation(line: 2237, column: 24, scope: !5420)
!5439 = !DILocation(line: 2238, column: 23, scope: !5420)
!5440 = !DILocation(line: 2238, column: 21, scope: !5420)
!5441 = !DILocation(line: 2240, column: 15, scope: !5418)
!5442 = !DILocation(line: 2241, column: 6, scope: !5403)
!5443 = !DILocation(line: 2238, column: 21, scope: !5424)
!5444 = !DILocation(line: 2238, column: 13, scope: !5420)
!5445 = !DILocation(line: 2238, column: 21, scope: !5422)
!5446 = !DILocation(line: 2230, column: 5, scope: !5403)
!5447 = distinct !DISubprogram(name: "map_try_fold<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>", linkageName: "_ZN4core4iter8adapters3map12map_try_fold17h4d53a0801c1cce34E", scope: !450, file: !448, line: 87, type: !5448, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5453, retainedNodes: !5450)
!5448 = !DISubroutineType(types: !5449)
!5449 = !{!5407, !5412, !493}
!5450 = !{!5451, !5452}
!5451 = !DILocalVariable(name: "f", arg: 1, scope: !5447, file: !448, line: 88, type: !5412)
!5452 = !DILocalVariable(name: "g", arg: 2, scope: !5447, file: !448, line: 89, type: !493)
!5453 = !{!484, !501, !502, !504, !5454, !5455}
!5454 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !486)
!5455 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> R + 'a", type: !493)
!5456 = !DILocation(line: 88, column: 5, scope: !5447)
!5457 = !DILocation(line: 89, column: 5, scope: !5447)
!5458 = !DILocation(line: 91, column: 5, scope: !5447)
!5459 = !DILocation(line: 92, column: 2, scope: !5447)
!5460 = distinct !DISubprogram(name: "{closure#0}<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>", linkageName: "_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h46fe6e20efd5747eE", scope: !5408, file: !448, line: 91, type: !5461, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5453, retainedNodes: !5464)
!5461 = !DISubroutineType(types: !5462)
!5462 = !{!455, !5463, !9, !199}
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_try_fold::{closure_env#0}<&&str, usize, usize, core::option::Option<usize>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>, fn(usize, usize) -> core::option::Option<usize>>", baseType: !5407, size: 64, align: 64, dwarfAddressSpace: 0)
!5464 = !{!5465, !5466, !5467, !5468}
!5465 = !DILocalVariable(name: "acc", arg: 2, scope: !5460, file: !448, line: 91, type: !9)
!5466 = !DILocalVariable(name: "elt", arg: 3, scope: !5460, file: !448, line: 91, type: !199)
!5467 = !DILocalVariable(name: "g", scope: !5460, file: !448, line: 89, type: !493, align: 1)
!5468 = !DILocalVariable(name: "f", scope: !5460, file: !448, line: 88, type: !5412, align: 8)
!5469 = !DILocation(line: 89, column: 5, scope: !5460)
!5470 = !DILocation(line: 88, column: 5, scope: !5460)
!5471 = !DILocation(line: 91, column: 11, scope: !5460)
!5472 = !DILocation(line: 91, column: 16, scope: !5460)
!5473 = !DILocation(line: 91, column: 21, scope: !5460)
!5474 = !DILocation(line: 91, column: 23, scope: !5460)
!5475 = !DILocation(line: 91, column: 28, scope: !5460)
!5476 = !DILocation(line: 91, column: 34, scope: !5460)
!5477 = !DILocation(line: 91, column: 20, scope: !5460)
!5478 = !DILocation(line: 91, column: 5, scope: !5460)
!5479 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17ha3a3b0f9d46f12b4E", scope: !5480, file: !448, line: 68, type: !5485, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5484, retainedNodes: !5487)
!5480 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", scope: !450, file: !2, size: 128, align: 64, elements: !5481, templateParams: !5484, identifier: "e7f071fa6ffca18277576b7c1c2d89a5")
!5481 = !{!5482, !5483}
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !5480, file: !2, baseType: !472, size: 128, align: 64)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5480, file: !2, baseType: !3496, align: 8)
!5484 = !{!491, !3505}
!5485 = !DISubroutineType(types: !5486)
!5486 = !{!5480, !472, !3496}
!5487 = !{!5488, !5489}
!5488 = !DILocalVariable(name: "iter", arg: 1, scope: !5479, file: !448, line: 68, type: !472)
!5489 = !DILocalVariable(name: "f", arg: 2, scope: !5479, file: !448, line: 68, type: !3496)
!5490 = !DILocation(line: 68, column: 32, scope: !5479)
!5491 = !DILocation(line: 68, column: 41, scope: !5479)
!5492 = !DILocation(line: 69, column: 9, scope: !5479)
!5493 = !DILocation(line: 70, column: 6, scope: !5479)
!5494 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hc92e239c89dd940dE", scope: !469, file: !448, line: 68, type: !5495, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !490, retainedNodes: !5497)
!5495 = !DISubroutineType(types: !5496)
!5496 = !{!469, !472, !486}
!5497 = !{!5498, !5499}
!5498 = !DILocalVariable(name: "iter", arg: 1, scope: !5494, file: !448, line: 68, type: !472)
!5499 = !DILocalVariable(name: "f", arg: 2, scope: !5494, file: !448, line: 68, type: !486)
!5500 = !DILocation(line: 68, column: 32, scope: !5494)
!5501 = !DILocation(line: 68, column: 41, scope: !5494)
!5502 = !DILocation(line: 69, column: 9, scope: !5494)
!5503 = !DILocation(line: 70, column: 6, scope: !5494)
!5504 = distinct !DISubprogram(name: "size_align<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core5alloc6layout10size_align17h6b8cb00642389332E", scope: !1780, file: !5505, line: 18, type: !5506, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1401, retainedNodes: !23)
!5505 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d0ac208ee70c69b94b07d38255a5525")
!5506 = !DISubroutineType(types: !5507)
!5507 = !{!1283}
!5508 = !DILocation(line: 19, column: 5, scope: !5504)
!5509 = !DILocation(line: 20, column: 2, scope: !5504)
!5510 = distinct !DISubprogram(name: "size_align<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core5alloc6layout10size_align17ha9ef1132169c015aE", scope: !1780, file: !5505, line: 18, type: !5506, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1442, retainedNodes: !23)
!5511 = !DILocation(line: 19, column: 5, scope: !5510)
!5512 = !DILocation(line: 20, column: 2, scope: !5510)
!5513 = distinct !DISubprogram(name: "from_size_valid_align", linkageName: "_ZN4core5alloc6layout6Layout21from_size_valid_align17hf620ecb5f9921cbcE", scope: !1779, file: !5505, line: 77, type: !5514, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5533)
!5514 = !DISubroutineType(types: !5515)
!5515 = !{!5516, !9, !1785}
!5516 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !2134, file: !2, size: 128, align: 64, elements: !5517, templateParams: !23, identifier: "61ed90a3a60bf5c9da25fda9753d7b5")
!5517 = !{!5518}
!5518 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5516, file: !2, size: 128, align: 64, elements: !5519, templateParams: !23, identifier: "e7bb3560bfa0d3445ee2359cfbf9e5fe", discriminator: !5532)
!5519 = !{!5520, !5528}
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5518, file: !2, baseType: !5521, size: 128, align: 64)
!5521 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5516, file: !2, size: 128, align: 64, elements: !5522, templateParams: !5524, identifier: "1efd2a987c8fa52528b02bba0275d8c7")
!5522 = !{!5523}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5521, file: !2, baseType: !1779, size: 128, align: 64)
!5524 = !{!5525, !5526}
!5525 = !DITemplateTypeParameter(name: "T", type: !1779)
!5526 = !DITemplateTypeParameter(name: "E", type: !5527)
!5527 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !1780, file: !2, align: 8, elements: !23, identifier: "6e89e1d1b17d37435f7b87cb1d5cb26d")
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5518, file: !2, baseType: !5529, size: 128, align: 64, extraData: i64 0)
!5529 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5516, file: !2, size: 128, align: 64, elements: !5530, templateParams: !5524, identifier: "9488fb9df60d2b7e722ab2cffead9e28")
!5530 = !{!5531}
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5529, file: !2, baseType: !5527, align: 8)
!5532 = !DIDerivedType(tag: DW_TAG_member, scope: !5516, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!5533 = !{!5534, !5535}
!5534 = !DILocalVariable(name: "size", arg: 1, scope: !5513, file: !5505, line: 77, type: !9)
!5535 = !DILocalVariable(name: "align", arg: 2, scope: !5513, file: !5505, line: 77, type: !1785)
!5536 = !DILocation(line: 77, column: 36, scope: !5513)
!5537 = !DILocation(line: 77, column: 49, scope: !5513)
!5538 = !DILocalVariable(name: "self", scope: !5539, file: !5505, line: 92, type: !5542, align: 8)
!5539 = !DILexicalBlockFile(scope: !5540, file: !5505, discriminator: 0)
!5540 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5548)
!5541 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "f51cb88dd069db0b7fcd2123d03b69c9")
!5542 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !5543, file: !2, size: 64, align: 64, elements: !5544, templateParams: !23, identifier: "c6c54dffb7a9517405cc55666c804e7")
!5543 = !DINamespace(name: "nonzero", scope: !157)
!5544 = !{!5545}
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5542, file: !2, baseType: !9, size: 64, align: 64)
!5546 = !DISubroutineType(types: !5547)
!5547 = !{!9, !5542}
!5548 = !{!5538}
!5549 = !DILocation(line: 92, column: 42, scope: !5539, inlinedAt: !5550)
!5550 = !DILocation(line: 92, column: 42, scope: !5513)
!5551 = !DILocalVariable(name: "self", scope: !5552, file: !5505, line: 92, type: !1785, align: 8)
!5552 = !DILexicalBlockFile(scope: !5553, file: !5505, discriminator: 0)
!5553 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5557)
!5554 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "681d44917f5a26aec3d3954431def51e")
!5555 = !DISubroutineType(types: !5556)
!5556 = !{!5542, !1785}
!5557 = !{!5551}
!5558 = !DILocation(line: 92, column: 42, scope: !5552, inlinedAt: !5550)
!5559 = !{i64 1, i64 -9223372036854775807}
!5560 = !DILocalVariable(name: "n", scope: !5561, file: !5505, line: 92, type: !9, align: 8)
!5561 = !DILexicalBlockFile(scope: !5562, file: !5505, discriminator: 0)
!5562 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5565)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!5542, !9}
!5565 = !{!5560, !5566}
!5566 = !DILocalVariable(name: "runtime", scope: !5567, file: !5505, line: 92, type: !5569, align: 8)
!5567 = !DILexicalBlockFile(scope: !5568, file: !5505, discriminator: 0)
!5568 = distinct !DILexicalBlock(scope: !5562, file: !386, line: 2336, column: 13)
!5569 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !5570, file: !2, size: 64, align: 64, elements: !5572, templateParams: !23, identifier: "cbed2d88a1ec7b20c4ad53e8c9863d89")
!5570 = !DINamespace(name: "new_unchecked", scope: !5571)
!5571 = !DINamespace(name: "{impl#35}", scope: !5543)
!5572 = !{!5573}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !5569, file: !2, baseType: !393, size: 64, align: 64)
!5574 = !DILocation(line: 92, column: 42, scope: !5561, inlinedAt: !5575)
!5575 = !DILocation(line: 41, column: 18, scope: !5553, inlinedAt: !5550)
!5576 = !DILocation(line: 92, column: 41, scope: !5513)
!5577 = !DILocation(line: 92, column: 19, scope: !5513)
!5578 = !DILocation(line: 92, column: 12, scope: !5513)
!5579 = !DILocation(line: 97, column: 12, scope: !5513)
!5580 = !DILocation(line: 97, column: 9, scope: !5513)
!5581 = !DILocation(line: 98, column: 6, scope: !5513)
!5582 = !DILocation(line: 93, column: 20, scope: !5513)
!5583 = distinct !DISubprogram(name: "array<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core5alloc6layout6Layout5array17h55a81e3824e5f6f7E", scope: !1779, file: !5505, line: 416, type: !5584, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !5586)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{!5516, !9}
!5586 = !{!5587, !5588, !5590, !5605}
!5587 = !DILocalVariable(name: "n", arg: 1, scope: !5583, file: !5505, line: 416, type: !9)
!5588 = !DILocalVariable(name: "array_size", scope: !5589, file: !5505, line: 417, type: !9, align: 8)
!5589 = distinct !DILexicalBlock(scope: !5583, file: !5505, line: 417, column: 9)
!5590 = !DILocalVariable(name: "residual", scope: !5591, file: !5505, line: 417, type: !5592, align: 1)
!5591 = distinct !DILexicalBlock(scope: !5583, file: !5505, line: 417, column: 79)
!5592 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !2134, file: !2, align: 8, elements: !5593, templateParams: !23, identifier: "2408e7ead4450472646681a937f2eed")
!5593 = !{!5594}
!5594 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5592, file: !2, align: 8, elements: !5595, templateParams: !23, identifier: "6cbcec323d74ab47f813265a09655e1e")
!5595 = !{!5596, !5601}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5594, file: !2, baseType: !5597, align: 8)
!5597 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5592, file: !2, align: 8, elements: !5598, templateParams: !5600, identifier: "40ec0a271e0cb2d34d257ba58fdead82")
!5598 = !{!5599}
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5597, file: !2, baseType: !4077, align: 8)
!5600 = !{!4076, !5526}
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5594, file: !2, baseType: !5602, align: 8)
!5602 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5592, file: !2, align: 8, elements: !5603, templateParams: !5600, identifier: "72611e72c15211a4d55dae520b84155f")
!5603 = !{!5604}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5602, file: !2, baseType: !5527, align: 8)
!5605 = !DILocalVariable(name: "val", scope: !5606, file: !5505, line: 417, type: !9, align: 8)
!5606 = distinct !DILexicalBlock(scope: !5583, file: !5505, line: 417, column: 26)
!5607 = !DILocation(line: 416, column: 21, scope: !5583)
!5608 = !DILocalVariable(name: "self", scope: !5609, file: !5505, line: 417, type: !5630, align: 8)
!5609 = !DILexicalBlockFile(scope: !5610, file: !5505, discriminator: 0)
!5610 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h06825bf80e5fa29cE", scope: !5611, file: !5292, line: 2117, type: !5612, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5638, retainedNodes: !5644)
!5611 = !DINamespace(name: "{impl#27}", scope: !2134)
!5612 = !DISubroutineType(types: !5613)
!5613 = !{!5614, !5630}
!5614 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !4109, file: !2, size: 128, align: 64, elements: !5615, templateParams: !23, identifier: "ce5c98f9de0798e97388caf7b24b4edc")
!5615 = !{!5616}
!5616 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5614, file: !2, size: 128, align: 64, elements: !5617, templateParams: !23, identifier: "6bdd8e43359c9849ce58ffeff4bb9b82", discriminator: !5629)
!5617 = !{!5618, !5625}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !5616, file: !2, baseType: !5619, size: 128, align: 64, extraData: i64 0)
!5619 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !5614, file: !2, size: 128, align: 64, elements: !5620, templateParams: !5622, identifier: "b6fdadee5e49b7207145efbc9b42a94a")
!5620 = !{!5621}
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5619, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5622 = !{!5623, !5624}
!5623 = !DITemplateTypeParameter(name: "B", type: !5592)
!5624 = !DITemplateTypeParameter(name: "C", type: !9)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !5616, file: !2, baseType: !5626, size: 128, align: 64, extraData: i64 1)
!5626 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !5614, file: !2, size: 128, align: 64, elements: !5627, templateParams: !5622, identifier: "b5889c00b354165f6e6f55dba1990157")
!5627 = !{!5628}
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5626, file: !2, baseType: !5592, align: 8, offset: 64)
!5629 = !DIDerivedType(tag: DW_TAG_member, scope: !5614, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!5630 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !2134, file: !2, size: 128, align: 64, elements: !5631, templateParams: !23, identifier: "c2a525df37a04684d727d3bb68e24786")
!5631 = !{!5632}
!5632 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5630, file: !2, size: 128, align: 64, elements: !5633, templateParams: !23, identifier: "59922648ff1b36fe1aa289683c505c74", discriminator: !5643)
!5633 = !{!5634, !5639}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5632, file: !2, baseType: !5635, size: 128, align: 64, extraData: i64 0)
!5635 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5630, file: !2, size: 128, align: 64, elements: !5636, templateParams: !5638, identifier: "98a9acae3d260aa3de9b86f4a7044881")
!5636 = !{!5637}
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5635, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5638 = !{!462, !5526}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5632, file: !2, baseType: !5640, size: 128, align: 64, extraData: i64 1)
!5640 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5630, file: !2, size: 128, align: 64, elements: !5641, templateParams: !5638, identifier: "3430eaa712a080f75cd3b02585f182")
!5641 = !{!5642}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5640, file: !2, baseType: !5527, align: 8, offset: 64)
!5643 = !DIDerivedType(tag: DW_TAG_member, scope: !5630, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!5644 = !{!5608, !5645, !5648}
!5645 = !DILocalVariable(name: "v", scope: !5646, file: !5505, line: 417, type: !9, align: 8)
!5646 = !DILexicalBlockFile(scope: !5647, file: !5505, discriminator: 0)
!5647 = distinct !DILexicalBlock(scope: !5610, file: !5292, line: 2119, column: 13)
!5648 = !DILocalVariable(name: "e", scope: !5649, file: !5505, line: 417, type: !5527, align: 1)
!5649 = !DILexicalBlockFile(scope: !5650, file: !5505, discriminator: 0)
!5650 = distinct !DILexicalBlock(scope: !5610, file: !5292, line: 2120, column: 13)
!5651 = !DILocation(line: 417, column: 26, scope: !5609, inlinedAt: !5652)
!5652 = !DILocation(line: 417, column: 26, scope: !5583)
!5653 = !DILocalVariable(name: "self", scope: !5654, file: !5505, line: 417, type: !455, align: 8)
!5654 = !DILexicalBlockFile(scope: !5655, file: !5505, discriminator: 0)
!5655 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h4aeb55754a5f5c15E", scope: !455, file: !1664, line: 1051, type: !5656, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5638, retainedNodes: !5658)
!5656 = !DISubroutineType(types: !5657)
!5657 = !{!5630, !455, !5527}
!5658 = !{!5653, !5659, !5660}
!5659 = !DILocalVariable(name: "err", scope: !5654, file: !5505, line: 417, type: !5527, align: 1)
!5660 = !DILocalVariable(name: "v", scope: !5661, file: !5505, line: 417, type: !9, align: 8)
!5661 = !DILexicalBlockFile(scope: !5662, file: !5505, discriminator: 0)
!5662 = distinct !DILexicalBlock(scope: !5655, file: !1664, line: 1056, column: 13)
!5663 = !DILocation(line: 417, column: 26, scope: !5654, inlinedAt: !5652)
!5664 = !DILocation(line: 417, column: 79, scope: !5591)
!5665 = !DILocalVariable(name: "residual", scope: !5666, file: !5505, line: 417, type: !5592, align: 1)
!5666 = !DILexicalBlockFile(scope: !5667, file: !5505, discriminator: 0)
!5667 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha62cd5a9416876c8E", scope: !5293, file: !5292, line: 2132, type: !5668, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5674, retainedNodes: !5670)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{!5516, !5592, !344}
!5670 = !{!5665, !5671}
!5671 = !DILocalVariable(name: "e", scope: !5672, file: !5505, line: 417, type: !5527, align: 1)
!5672 = !DILexicalBlockFile(scope: !5673, file: !5505, discriminator: 0)
!5673 = distinct !DILexicalBlock(scope: !5667, file: !5292, line: 2134, column: 13)
!5674 = !{!5525, !5526, !5675}
!5675 = !DITemplateTypeParameter(name: "F", type: !5527)
!5676 = !DILocation(line: 417, column: 26, scope: !5666, inlinedAt: !5677)
!5677 = !DILocation(line: 417, column: 26, scope: !5591)
!5678 = !DILocation(line: 417, column: 26, scope: !5649, inlinedAt: !5652)
!5679 = !DILocation(line: 417, column: 26, scope: !5672, inlinedAt: !5677)
!5680 = !DILocation(line: 417, column: 26, scope: !5661, inlinedAt: !5652)
!5681 = !DILocation(line: 417, column: 26, scope: !5646, inlinedAt: !5652)
!5682 = !DILocation(line: 417, column: 26, scope: !5606)
!5683 = !DILocation(line: 417, column: 13, scope: !5589)
!5684 = !DILocation(line: 419, column: 51, scope: !5685, inlinedAt: !5687)
!5685 = !DILexicalBlockFile(scope: !5686, file: !5505, discriminator: 0)
!5686 = distinct !DISubprogram(name: "align_of<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3mem8align_of17h14f2de1e4530a9efE", scope: !210, file: !627, line: 464, type: !628, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !23)
!5687 = !DILocation(line: 56, column: 44, scope: !5688, inlinedAt: !5691)
!5688 = distinct !DISubprogram(name: "of<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h4ee6889588dfcbe9E", scope: !1785, file: !5554, line: 54, type: !5689, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !23)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{!1785}
!5691 = !DILocation(line: 419, column: 51, scope: !5589)
!5692 = !DILocalVariable(name: "align", scope: !5693, file: !5505, line: 419, type: !9, align: 8)
!5693 = !DILexicalBlockFile(scope: !5694, file: !5505, discriminator: 0)
!5694 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5697)
!5695 = !DISubroutineType(types: !5696)
!5696 = !{!1785, !9}
!5697 = !{!5692, !5698}
!5698 = !DILocalVariable(name: "runtime", scope: !5699, file: !5505, line: 419, type: !5701, align: 8)
!5699 = !DILexicalBlockFile(scope: !5700, file: !5505, discriminator: 0)
!5700 = distinct !DILexicalBlock(scope: !5694, file: !386, line: 2336, column: 13)
!5701 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !5702, file: !2, size: 64, align: 64, elements: !5704, templateParams: !23, identifier: "a24236e50785a0359acaebf14a869a84")
!5702 = !DINamespace(name: "new_unchecked", scope: !5703)
!5703 = !DINamespace(name: "{impl#0}", scope: !209)
!5704 = !{!5705}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__align", scope: !5701, file: !2, baseType: !393, size: 64, align: 64)
!5706 = !DILocation(line: 419, column: 51, scope: !5693, inlinedAt: !5707)
!5707 = !DILocation(line: 56, column: 18, scope: !5688, inlinedAt: !5691)
!5708 = !DILocation(line: 420, column: 6, scope: !5583)
!5709 = !DILocation(line: 419, column: 9, scope: !5589)
!5710 = distinct !DISubprogram(name: "array<alloc::ffi::c_str::CString>", linkageName: "_ZN4core5alloc6layout6Layout5array17h740ebd2248365eefE", scope: !1779, file: !5505, line: 416, type: !5584, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !5711)
!5711 = !{!5712, !5713, !5715, !5717}
!5712 = !DILocalVariable(name: "n", arg: 1, scope: !5710, file: !5505, line: 416, type: !9)
!5713 = !DILocalVariable(name: "array_size", scope: !5714, file: !5505, line: 417, type: !9, align: 8)
!5714 = distinct !DILexicalBlock(scope: !5710, file: !5505, line: 417, column: 9)
!5715 = !DILocalVariable(name: "residual", scope: !5716, file: !5505, line: 417, type: !5592, align: 1)
!5716 = distinct !DILexicalBlock(scope: !5710, file: !5505, line: 417, column: 79)
!5717 = !DILocalVariable(name: "val", scope: !5718, file: !5505, line: 417, type: !9, align: 8)
!5718 = distinct !DILexicalBlock(scope: !5710, file: !5505, line: 417, column: 26)
!5719 = !DILocation(line: 416, column: 21, scope: !5710)
!5720 = !DILocalVariable(name: "self", scope: !5721, file: !5505, line: 417, type: !5630, align: 8)
!5721 = !DILexicalBlockFile(scope: !5722, file: !5505, discriminator: 0)
!5722 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h06825bf80e5fa29cE", scope: !5611, file: !5292, line: 2117, type: !5612, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5638, retainedNodes: !5723)
!5723 = !{!5720, !5724, !5727}
!5724 = !DILocalVariable(name: "v", scope: !5725, file: !5505, line: 417, type: !9, align: 8)
!5725 = !DILexicalBlockFile(scope: !5726, file: !5505, discriminator: 0)
!5726 = distinct !DILexicalBlock(scope: !5722, file: !5292, line: 2119, column: 13)
!5727 = !DILocalVariable(name: "e", scope: !5728, file: !5505, line: 417, type: !5527, align: 1)
!5728 = !DILexicalBlockFile(scope: !5729, file: !5505, discriminator: 0)
!5729 = distinct !DILexicalBlock(scope: !5722, file: !5292, line: 2120, column: 13)
!5730 = !DILocation(line: 417, column: 26, scope: !5721, inlinedAt: !5731)
!5731 = !DILocation(line: 417, column: 26, scope: !5710)
!5732 = !DILocalVariable(name: "self", scope: !5733, file: !5505, line: 417, type: !455, align: 8)
!5733 = !DILexicalBlockFile(scope: !5734, file: !5505, discriminator: 0)
!5734 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h4aeb55754a5f5c15E", scope: !455, file: !1664, line: 1051, type: !5656, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5638, retainedNodes: !5735)
!5735 = !{!5732, !5736, !5737}
!5736 = !DILocalVariable(name: "err", scope: !5733, file: !5505, line: 417, type: !5527, align: 1)
!5737 = !DILocalVariable(name: "v", scope: !5738, file: !5505, line: 417, type: !9, align: 8)
!5738 = !DILexicalBlockFile(scope: !5739, file: !5505, discriminator: 0)
!5739 = distinct !DILexicalBlock(scope: !5734, file: !1664, line: 1056, column: 13)
!5740 = !DILocation(line: 417, column: 26, scope: !5733, inlinedAt: !5731)
!5741 = !DILocation(line: 417, column: 79, scope: !5716)
!5742 = !DILocalVariable(name: "residual", scope: !5743, file: !5505, line: 417, type: !5592, align: 1)
!5743 = !DILexicalBlockFile(scope: !5744, file: !5505, discriminator: 0)
!5744 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha62cd5a9416876c8E", scope: !5293, file: !5292, line: 2132, type: !5668, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5674, retainedNodes: !5745)
!5745 = !{!5742, !5746}
!5746 = !DILocalVariable(name: "e", scope: !5747, file: !5505, line: 417, type: !5527, align: 1)
!5747 = !DILexicalBlockFile(scope: !5748, file: !5505, discriminator: 0)
!5748 = distinct !DILexicalBlock(scope: !5744, file: !5292, line: 2134, column: 13)
!5749 = !DILocation(line: 417, column: 26, scope: !5743, inlinedAt: !5750)
!5750 = !DILocation(line: 417, column: 26, scope: !5716)
!5751 = !DILocation(line: 417, column: 26, scope: !5728, inlinedAt: !5731)
!5752 = !DILocation(line: 417, column: 26, scope: !5747, inlinedAt: !5750)
!5753 = !DILocation(line: 417, column: 26, scope: !5738, inlinedAt: !5731)
!5754 = !DILocation(line: 417, column: 26, scope: !5725, inlinedAt: !5731)
!5755 = !DILocation(line: 417, column: 26, scope: !5718)
!5756 = !DILocation(line: 417, column: 13, scope: !5714)
!5757 = !DILocation(line: 419, column: 51, scope: !5758, inlinedAt: !5760)
!5758 = !DILexicalBlockFile(scope: !5759, file: !5505, discriminator: 0)
!5759 = distinct !DISubprogram(name: "align_of<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3mem8align_of17h3b9a776e328938e4E", scope: !210, file: !627, line: 464, type: !628, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !23)
!5760 = !DILocation(line: 56, column: 44, scope: !5761, inlinedAt: !5762)
!5761 = distinct !DISubprogram(name: "of<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h65f23068de06e4f2E", scope: !1785, file: !5554, line: 54, type: !5689, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !23)
!5762 = !DILocation(line: 419, column: 51, scope: !5714)
!5763 = !DILocalVariable(name: "align", scope: !5764, file: !5505, line: 419, type: !9, align: 8)
!5764 = !DILexicalBlockFile(scope: !5765, file: !5505, discriminator: 0)
!5765 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5766)
!5766 = !{!5763, !5767}
!5767 = !DILocalVariable(name: "runtime", scope: !5768, file: !5505, line: 419, type: !5701, align: 8)
!5768 = !DILexicalBlockFile(scope: !5769, file: !5505, discriminator: 0)
!5769 = distinct !DILexicalBlock(scope: !5765, file: !386, line: 2336, column: 13)
!5770 = !DILocation(line: 419, column: 51, scope: !5764, inlinedAt: !5771)
!5771 = !DILocation(line: 56, column: 18, scope: !5761, inlinedAt: !5762)
!5772 = !DILocation(line: 420, column: 6, scope: !5710)
!5773 = !DILocation(line: 419, column: 9, scope: !5714)
!5774 = distinct !DISubprogram(name: "array<*const i8>", linkageName: "_ZN4core5alloc6layout6Layout5array17haf51b2e82c5094e2E", scope: !1779, file: !5505, line: 416, type: !5584, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2644, retainedNodes: !5775)
!5775 = !{!5776, !5777, !5779, !5781}
!5776 = !DILocalVariable(name: "n", arg: 1, scope: !5774, file: !5505, line: 416, type: !9)
!5777 = !DILocalVariable(name: "array_size", scope: !5778, file: !5505, line: 417, type: !9, align: 8)
!5778 = distinct !DILexicalBlock(scope: !5774, file: !5505, line: 417, column: 9)
!5779 = !DILocalVariable(name: "residual", scope: !5780, file: !5505, line: 417, type: !5592, align: 1)
!5780 = distinct !DILexicalBlock(scope: !5774, file: !5505, line: 417, column: 79)
!5781 = !DILocalVariable(name: "val", scope: !5782, file: !5505, line: 417, type: !9, align: 8)
!5782 = distinct !DILexicalBlock(scope: !5774, file: !5505, line: 417, column: 26)
!5783 = !DILocation(line: 416, column: 21, scope: !5774)
!5784 = !DILocalVariable(name: "self", scope: !5785, file: !5505, line: 417, type: !5630, align: 8)
!5785 = !DILexicalBlockFile(scope: !5786, file: !5505, discriminator: 0)
!5786 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h06825bf80e5fa29cE", scope: !5611, file: !5292, line: 2117, type: !5612, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5638, retainedNodes: !5787)
!5787 = !{!5784, !5788, !5791}
!5788 = !DILocalVariable(name: "v", scope: !5789, file: !5505, line: 417, type: !9, align: 8)
!5789 = !DILexicalBlockFile(scope: !5790, file: !5505, discriminator: 0)
!5790 = distinct !DILexicalBlock(scope: !5786, file: !5292, line: 2119, column: 13)
!5791 = !DILocalVariable(name: "e", scope: !5792, file: !5505, line: 417, type: !5527, align: 1)
!5792 = !DILexicalBlockFile(scope: !5793, file: !5505, discriminator: 0)
!5793 = distinct !DILexicalBlock(scope: !5786, file: !5292, line: 2120, column: 13)
!5794 = !DILocation(line: 417, column: 26, scope: !5785, inlinedAt: !5795)
!5795 = !DILocation(line: 417, column: 26, scope: !5774)
!5796 = !DILocalVariable(name: "self", scope: !5797, file: !5505, line: 417, type: !455, align: 8)
!5797 = !DILexicalBlockFile(scope: !5798, file: !5505, discriminator: 0)
!5798 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h4aeb55754a5f5c15E", scope: !455, file: !1664, line: 1051, type: !5656, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5638, retainedNodes: !5799)
!5799 = !{!5796, !5800, !5801}
!5800 = !DILocalVariable(name: "err", scope: !5797, file: !5505, line: 417, type: !5527, align: 1)
!5801 = !DILocalVariable(name: "v", scope: !5802, file: !5505, line: 417, type: !9, align: 8)
!5802 = !DILexicalBlockFile(scope: !5803, file: !5505, discriminator: 0)
!5803 = distinct !DILexicalBlock(scope: !5798, file: !1664, line: 1056, column: 13)
!5804 = !DILocation(line: 417, column: 26, scope: !5797, inlinedAt: !5795)
!5805 = !DILocation(line: 417, column: 79, scope: !5780)
!5806 = !DILocalVariable(name: "residual", scope: !5807, file: !5505, line: 417, type: !5592, align: 1)
!5807 = !DILexicalBlockFile(scope: !5808, file: !5505, discriminator: 0)
!5808 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha62cd5a9416876c8E", scope: !5293, file: !5292, line: 2132, type: !5668, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5674, retainedNodes: !5809)
!5809 = !{!5806, !5810}
!5810 = !DILocalVariable(name: "e", scope: !5811, file: !5505, line: 417, type: !5527, align: 1)
!5811 = !DILexicalBlockFile(scope: !5812, file: !5505, discriminator: 0)
!5812 = distinct !DILexicalBlock(scope: !5808, file: !5292, line: 2134, column: 13)
!5813 = !DILocation(line: 417, column: 26, scope: !5807, inlinedAt: !5814)
!5814 = !DILocation(line: 417, column: 26, scope: !5780)
!5815 = !DILocation(line: 417, column: 26, scope: !5792, inlinedAt: !5795)
!5816 = !DILocation(line: 417, column: 26, scope: !5811, inlinedAt: !5814)
!5817 = !DILocation(line: 417, column: 26, scope: !5802, inlinedAt: !5795)
!5818 = !DILocation(line: 417, column: 26, scope: !5789, inlinedAt: !5795)
!5819 = !DILocation(line: 417, column: 26, scope: !5782)
!5820 = !DILocation(line: 417, column: 13, scope: !5778)
!5821 = !DILocation(line: 419, column: 51, scope: !5822, inlinedAt: !5824)
!5822 = !DILexicalBlockFile(scope: !5823, file: !5505, discriminator: 0)
!5823 = distinct !DISubprogram(name: "align_of<*const i8>", linkageName: "_ZN4core3mem8align_of17h8fe83118b5114173E", scope: !210, file: !627, line: 464, type: !628, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2644, retainedNodes: !23)
!5824 = !DILocation(line: 56, column: 44, scope: !5825, inlinedAt: !5826)
!5825 = distinct !DISubprogram(name: "of<*const i8>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h75163f6513ff3902E", scope: !1785, file: !5554, line: 54, type: !5689, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2644, retainedNodes: !23)
!5826 = !DILocation(line: 419, column: 51, scope: !5778)
!5827 = !DILocalVariable(name: "align", scope: !5828, file: !5505, line: 419, type: !9, align: 8)
!5828 = !DILexicalBlockFile(scope: !5829, file: !5505, discriminator: 0)
!5829 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5830)
!5830 = !{!5827, !5831}
!5831 = !DILocalVariable(name: "runtime", scope: !5832, file: !5505, line: 419, type: !5701, align: 8)
!5832 = !DILexicalBlockFile(scope: !5833, file: !5505, discriminator: 0)
!5833 = distinct !DILexicalBlock(scope: !5829, file: !386, line: 2336, column: 13)
!5834 = !DILocation(line: 419, column: 51, scope: !5828, inlinedAt: !5835)
!5835 = !DILocation(line: 56, column: 18, scope: !5825, inlinedAt: !5826)
!5836 = !DILocation(line: 420, column: 6, scope: !5774)
!5837 = !DILocation(line: 419, column: 9, scope: !5778)
!5838 = distinct !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17hc79c5268edc0cd65E", scope: !1779, file: !5505, line: 416, type: !5584, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !5839)
!5839 = !{!5840, !5841, !5843, !5845}
!5840 = !DILocalVariable(name: "n", arg: 1, scope: !5838, file: !5505, line: 416, type: !9)
!5841 = !DILocalVariable(name: "array_size", scope: !5842, file: !5505, line: 417, type: !9, align: 8)
!5842 = distinct !DILexicalBlock(scope: !5838, file: !5505, line: 417, column: 9)
!5843 = !DILocalVariable(name: "residual", scope: !5844, file: !5505, line: 417, type: !5592, align: 1)
!5844 = distinct !DILexicalBlock(scope: !5838, file: !5505, line: 417, column: 79)
!5845 = !DILocalVariable(name: "val", scope: !5846, file: !5505, line: 417, type: !9, align: 8)
!5846 = distinct !DILexicalBlock(scope: !5838, file: !5505, line: 417, column: 26)
!5847 = !DILocation(line: 416, column: 21, scope: !5838)
!5848 = !DILocalVariable(name: "self", scope: !5849, file: !5505, line: 417, type: !5630, align: 8)
!5849 = !DILexicalBlockFile(scope: !5850, file: !5505, discriminator: 0)
!5850 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h06825bf80e5fa29cE", scope: !5611, file: !5292, line: 2117, type: !5612, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5638, retainedNodes: !5851)
!5851 = !{!5848, !5852, !5855}
!5852 = !DILocalVariable(name: "v", scope: !5853, file: !5505, line: 417, type: !9, align: 8)
!5853 = !DILexicalBlockFile(scope: !5854, file: !5505, discriminator: 0)
!5854 = distinct !DILexicalBlock(scope: !5850, file: !5292, line: 2119, column: 13)
!5855 = !DILocalVariable(name: "e", scope: !5856, file: !5505, line: 417, type: !5527, align: 1)
!5856 = !DILexicalBlockFile(scope: !5857, file: !5505, discriminator: 0)
!5857 = distinct !DILexicalBlock(scope: !5850, file: !5292, line: 2120, column: 13)
!5858 = !DILocation(line: 417, column: 26, scope: !5849, inlinedAt: !5859)
!5859 = !DILocation(line: 417, column: 26, scope: !5838)
!5860 = !DILocalVariable(name: "self", scope: !5861, file: !5505, line: 417, type: !455, align: 8)
!5861 = !DILexicalBlockFile(scope: !5862, file: !5505, discriminator: 0)
!5862 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h4aeb55754a5f5c15E", scope: !455, file: !1664, line: 1051, type: !5656, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5638, retainedNodes: !5863)
!5863 = !{!5860, !5864, !5865}
!5864 = !DILocalVariable(name: "err", scope: !5861, file: !5505, line: 417, type: !5527, align: 1)
!5865 = !DILocalVariable(name: "v", scope: !5866, file: !5505, line: 417, type: !9, align: 8)
!5866 = !DILexicalBlockFile(scope: !5867, file: !5505, discriminator: 0)
!5867 = distinct !DILexicalBlock(scope: !5862, file: !1664, line: 1056, column: 13)
!5868 = !DILocation(line: 417, column: 26, scope: !5861, inlinedAt: !5859)
!5869 = !DILocation(line: 417, column: 79, scope: !5844)
!5870 = !DILocalVariable(name: "residual", scope: !5871, file: !5505, line: 417, type: !5592, align: 1)
!5871 = !DILexicalBlockFile(scope: !5872, file: !5505, discriminator: 0)
!5872 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha62cd5a9416876c8E", scope: !5293, file: !5292, line: 2132, type: !5668, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5674, retainedNodes: !5873)
!5873 = !{!5870, !5874}
!5874 = !DILocalVariable(name: "e", scope: !5875, file: !5505, line: 417, type: !5527, align: 1)
!5875 = !DILexicalBlockFile(scope: !5876, file: !5505, discriminator: 0)
!5876 = distinct !DILexicalBlock(scope: !5872, file: !5292, line: 2134, column: 13)
!5877 = !DILocation(line: 417, column: 26, scope: !5871, inlinedAt: !5878)
!5878 = !DILocation(line: 417, column: 26, scope: !5844)
!5879 = !DILocation(line: 417, column: 26, scope: !5856, inlinedAt: !5859)
!5880 = !DILocation(line: 417, column: 26, scope: !5875, inlinedAt: !5878)
!5881 = !DILocation(line: 417, column: 26, scope: !5866, inlinedAt: !5859)
!5882 = !DILocation(line: 417, column: 26, scope: !5853, inlinedAt: !5859)
!5883 = !DILocation(line: 417, column: 26, scope: !5846)
!5884 = !DILocation(line: 417, column: 13, scope: !5842)
!5885 = !DILocation(line: 419, column: 51, scope: !5886, inlinedAt: !5888)
!5886 = !DILexicalBlockFile(scope: !5887, file: !5505, discriminator: 0)
!5887 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17h5221b0874f0c01ccE", scope: !210, file: !627, line: 464, type: !628, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!5888 = !DILocation(line: 56, column: 44, scope: !5889, inlinedAt: !5890)
!5889 = distinct !DISubprogram(name: "of<u8>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17h011bd4f3580230a0E", scope: !1785, file: !5554, line: 54, type: !5689, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!5890 = !DILocation(line: 419, column: 51, scope: !5842)
!5891 = !DILocalVariable(name: "align", scope: !5892, file: !5505, line: 419, type: !9, align: 8)
!5892 = !DILexicalBlockFile(scope: !5893, file: !5505, discriminator: 0)
!5893 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5894)
!5894 = !{!5891, !5895}
!5895 = !DILocalVariable(name: "runtime", scope: !5896, file: !5505, line: 419, type: !5701, align: 8)
!5896 = !DILexicalBlockFile(scope: !5897, file: !5505, discriminator: 0)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !386, line: 2336, column: 13)
!5898 = !DILocation(line: 419, column: 51, scope: !5892, inlinedAt: !5899)
!5899 = !DILocation(line: 56, column: 18, scope: !5889, inlinedAt: !5890)
!5900 = !DILocation(line: 420, column: 6, scope: !5838)
!5901 = !DILocation(line: 419, column: 9, scope: !5842)
!5902 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h03ffcdbbede98532E", scope: !5904, file: !5903, line: 189, type: !5907, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !5909)
!5903 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "3792fef4e5cf0c1ef2457d8c192d163d")
!5904 = !DINamespace(name: "{impl#5}", scope: !5905)
!5905 = !DINamespace(name: "impls", scope: !5906)
!5906 = !DINamespace(name: "clone", scope: !44)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{!9, !393}
!5909 = !{!5910}
!5910 = !DILocalVariable(name: "self", arg: 1, scope: !5902, file: !5903, line: 189, type: !393)
!5911 = !DILocation(line: 189, column: 30, scope: !5902)
!5912 = !DILocation(line: 190, column: 25, scope: !5902)
!5913 = !DILocation(line: 191, column: 22, scope: !5902)
!5914 = distinct !DISubprogram(name: "starts_with<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h648456b66418bed4E", scope: !2489, file: !2488, line: 2201, type: !5915, scopeLine: 2201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !5917)
!5915 = !DISubroutineType(types: !5916)
!5916 = !{!1159, !366, !366}
!5917 = !{!5918, !5919, !5920}
!5918 = !DILocalVariable(name: "self", arg: 1, scope: !5914, file: !2488, line: 2201, type: !366)
!5919 = !DILocalVariable(name: "needle", arg: 2, scope: !5914, file: !2488, line: 2201, type: !366)
!5920 = !DILocalVariable(name: "n", scope: !5921, file: !2488, line: 2205, type: !9, align: 8)
!5921 = distinct !DILexicalBlock(scope: !5914, file: !2488, line: 2205, column: 9)
!5922 = !DILocation(line: 2201, column: 24, scope: !5914)
!5923 = !DILocation(line: 2201, column: 31, scope: !5914)
!5924 = !DILocalVariable(name: "index", scope: !5925, file: !2488, line: 2206, type: !5043, align: 8)
!5925 = !DILexicalBlockFile(scope: !5926, file: !2488, discriminator: 0)
!5926 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h221ecb3b2b0d42c1E", scope: !5927, file: !818, line: 17, type: !5928, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5048, retainedNodes: !5930)
!5927 = !DINamespace(name: "{impl#0}", scope: !820)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{!366, !366, !5043, !344}
!5930 = !{!5931, !5924}
!5931 = !DILocalVariable(name: "self", scope: !5925, file: !2488, line: 2206, type: !366, align: 8)
!5932 = !DILocation(line: 2206, column: 39, scope: !5925, inlinedAt: !5933)
!5933 = !DILocation(line: 2206, column: 39, scope: !5921)
!5934 = !DILocation(line: 2205, column: 17, scope: !5914)
!5935 = !DILocation(line: 2205, column: 13, scope: !5921)
!5936 = !DILocation(line: 2206, column: 9, scope: !5921)
!5937 = !DILocation(line: 2206, column: 28, scope: !5921)
!5938 = !DILocalVariable(name: "self", scope: !5939, file: !2488, line: 2206, type: !4900, align: 8)
!5939 = !DILexicalBlockFile(scope: !5940, file: !2488, discriminator: 0)
!5940 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hfa90257108112eabE", scope: !2986, file: !2936, line: 1512, type: !4898, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2992, retainedNodes: !5941)
!5941 = !{!5938, !5942}
!5942 = !DILocalVariable(name: "other", scope: !5939, file: !2488, line: 2206, type: !4900, align: 8)
!5943 = !DILocation(line: 2206, column: 28, scope: !5939, inlinedAt: !5937)
!5944 = !DILocation(line: 2206, column: 44, scope: !5921)
!5945 = !DILocalVariable(name: "self", scope: !5946, file: !2488, line: 2206, type: !5043, align: 8)
!5946 = !DILexicalBlockFile(scope: !5947, file: !2488, discriminator: 0)
!5947 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h71a329ea20acc724E", scope: !5118, file: !818, line: 350, type: !5948, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !5950)
!5948 = !DISubroutineType(types: !5949)
!5949 = !{!366, !5043, !366, !344}
!5950 = !{!5945, !5951}
!5951 = !DILocalVariable(name: "slice", scope: !5946, file: !2488, line: 2206, type: !366, align: 8)
!5952 = !DILocation(line: 2206, column: 39, scope: !5946, inlinedAt: !5953)
!5953 = !DILocation(line: 18, column: 9, scope: !5926, inlinedAt: !5933)
!5954 = !DILocation(line: 2206, column: 38, scope: !5921)
!5955 = !DILocation(line: 2207, column: 6, scope: !5914)
!5956 = distinct !DISubprogram(name: "split_at_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h62f48357ef09e9aaE", scope: !2489, file: !2488, line: 1576, type: !5957, scopeLine: 1576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !5967)
!5957 = !DISubroutineType(types: !5958)
!5958 = !{!5959, !5962, !9, !344}
!5959 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut [core::mem::maybe_uninit::MaybeUninit<u8>], &mut [core::mem::maybe_uninit::MaybeUninit<u8>])", file: !2, size: 256, align: 64, elements: !5960, templateParams: !23, identifier: "949b3f1c075d30531497a61f118a2559")
!5960 = !{!5961, !5966}
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5959, file: !2, baseType: !5962, size: 128, align: 64)
!5962 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !5963, templateParams: !23, identifier: "2c2e422405ebf4142c95fa249fd6bd9d")
!5963 = !{!5964, !5965}
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5962, file: !2, baseType: !980, size: 64, align: 64)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5962, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !5959, file: !2, baseType: !5962, size: 128, align: 64, offset: 128)
!5967 = !{!5968, !5969}
!5968 = !DILocalVariable(name: "self", arg: 1, scope: !5956, file: !2488, line: 1576, type: !5962)
!5969 = !DILocalVariable(name: "mid", arg: 2, scope: !5956, file: !2488, line: 1576, type: !9)
!5970 = !DILocation(line: 1576, column: 25, scope: !5956)
!5971 = !DILocation(line: 1576, column: 36, scope: !5956)
!5972 = !DILocation(line: 1577, column: 17, scope: !5956)
!5973 = !DILocation(line: 1577, column: 9, scope: !5956)
!5974 = !DILocation(line: 1580, column: 18, scope: !5956)
!5975 = !DILocation(line: 1581, column: 6, scope: !5956)
!5976 = distinct !DISubprogram(name: "copy_from_slice<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h8e63b81f9884f9faE", scope: !2489, file: !2488, line: 3214, type: !5977, scopeLine: 3214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !5979)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{null, !5962, !3491, !344}
!5979 = !{!5980, !5981}
!5980 = !DILocalVariable(name: "self", arg: 1, scope: !5976, file: !2488, line: 3214, type: !5962)
!5981 = !DILocalVariable(name: "src", arg: 2, scope: !5976, file: !2488, line: 3214, type: !3491)
!5982 = !DILocation(line: 3214, column: 28, scope: !5976)
!5983 = !DILocation(line: 3214, column: 39, scope: !5976)
!5984 = !DILocalVariable(name: "runtime", scope: !5985, file: !2488, line: 3238, type: !5997, align: 8)
!5985 = !DILexicalBlockFile(scope: !5986, file: !2488, discriminator: 0)
!5986 = distinct !DILexicalBlock(scope: !5987, file: !386, line: 2336, column: 13)
!5987 = distinct !DISubprogram(name: "copy_nonoverlapping<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17h35b35d9819ac4bbaE", scope: !5988, file: !386, line: 2458, type: !5989, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !5992)
!5988 = !DINamespace(name: "intrinsics", scope: !44)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{null, !5991, !1014, !9}
!5991 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !981, size: 64, align: 64, dwarfAddressSpace: 0)
!5992 = !{!5993, !5995, !5996, !5984}
!5993 = !DILocalVariable(name: "src", scope: !5994, file: !2488, line: 3238, type: !5991, align: 8)
!5994 = !DILexicalBlockFile(scope: !5987, file: !2488, discriminator: 0)
!5995 = !DILocalVariable(name: "dst", scope: !5994, file: !2488, line: 3238, type: !1014, align: 8)
!5996 = !DILocalVariable(name: "count", scope: !5994, file: !2488, line: 3238, type: !9, align: 8)
!5997 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !5998, file: !2, size: 192, align: 64, elements: !5999, templateParams: !23, identifier: "8545233d1a5033fe921971f37d1ec338")
!5998 = !DINamespace(name: "copy_nonoverlapping", scope: !5988)
!5999 = !{!6000, !6002, !6004}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !5997, file: !2, baseType: !6001, size: 64, align: 64)
!6001 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !5991, size: 64, align: 64, dwarfAddressSpace: 0)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !5997, file: !2, baseType: !6003, size: 64, align: 64, offset: 64)
!6003 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !1014, size: 64, align: 64, dwarfAddressSpace: 0)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !5997, file: !2, baseType: !393, size: 64, align: 64, offset: 128)
!6005 = !DILocation(line: 3238, column: 13, scope: !5985, inlinedAt: !6006)
!6006 = !DILocation(line: 3238, column: 13, scope: !5976)
!6007 = !DILocation(line: 3230, column: 12, scope: !5976)
!6008 = !DILocation(line: 3238, column: 38, scope: !5976)
!6009 = !DILocalVariable(name: "self", scope: !6010, file: !2488, line: 3238, type: !3491, align: 8)
!6010 = distinct !DISubprogram(name: "as_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h00ce12ed8d4835dfE", scope: !2489, file: !2488, line: 476, type: !6011, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6013)
!6011 = !DISubroutineType(types: !6012)
!6012 = !{!5991, !3491}
!6013 = !{!6009}
!6014 = !DILocation(line: 3238, column: 38, scope: !6010, inlinedAt: !6008)
!6015 = !DILocation(line: 3238, column: 13, scope: !5994, inlinedAt: !6006)
!6016 = !DILocation(line: 3238, column: 52, scope: !5976)
!6017 = !DILocalVariable(name: "self", scope: !6018, file: !2488, line: 3238, type: !5962, align: 8)
!6018 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h27bceee4ff27373bE", scope: !2489, file: !2488, line: 506, type: !6019, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6021)
!6019 = !DISubroutineType(types: !6020)
!6020 = !{!1014, !5962}
!6021 = !{!6017}
!6022 = !DILocation(line: 3238, column: 52, scope: !6018, inlinedAt: !6016)
!6023 = !DILocation(line: 3238, column: 71, scope: !5976)
!6024 = !DILocation(line: 3240, column: 6, scope: !5976)
!6025 = !DILocation(line: 3231, column: 13, scope: !5976)
!6026 = distinct !DISubprogram(name: "split_at_mut_unchecked<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$22split_at_mut_unchecked17h376dae06f056da4eE", scope: !2489, file: !2488, line: 1669, type: !6027, scopeLine: 1669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6029)
!6027 = !DISubroutineType(types: !6028)
!6028 = !{!5959, !5962, !9}
!6029 = !{!6030, !6031, !6032, !6034, !6036}
!6030 = !DILocalVariable(name: "self", arg: 1, scope: !6026, file: !2488, line: 1669, type: !5962)
!6031 = !DILocalVariable(name: "mid", arg: 2, scope: !6026, file: !2488, line: 1669, type: !9)
!6032 = !DILocalVariable(name: "len", scope: !6033, file: !2488, line: 1670, type: !9, align: 8)
!6033 = distinct !DILexicalBlock(scope: !6026, file: !2488, line: 1670, column: 9)
!6034 = !DILocalVariable(name: "ptr", scope: !6035, file: !2488, line: 1671, type: !1014, align: 8)
!6035 = distinct !DILexicalBlock(scope: !6033, file: !2488, line: 1671, column: 9)
!6036 = !DILocalVariable(name: "runtime", scope: !6037, file: !2488, line: 1678, type: !6039, align: 8)
!6037 = !DILexicalBlockFile(scope: !6038, file: !2488, discriminator: 0)
!6038 = distinct !DILexicalBlock(scope: !6035, file: !386, line: 2336, column: 13)
!6039 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !6040, file: !2, size: 128, align: 64, elements: !6041, templateParams: !23, identifier: "baf23255a9a652a855cebce5c1097ae1")
!6040 = !DINamespace(name: "split_at_mut_unchecked", scope: !2489)
!6041 = !{!6042, !6043}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__mid", scope: !6039, file: !2, baseType: !393, size: 64, align: 64)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !6039, file: !2, baseType: !393, size: 64, align: 64, offset: 64)
!6044 = !DILocation(line: 1669, column: 42, scope: !6026)
!6045 = !DILocation(line: 1669, column: 53, scope: !6026)
!6046 = !DILocation(line: 1670, column: 19, scope: !6026)
!6047 = !DILocation(line: 1670, column: 13, scope: !6033)
!6048 = !DILocation(line: 1671, column: 19, scope: !6033)
!6049 = !DILocalVariable(name: "self", scope: !6050, file: !2488, line: 1671, type: !5962, align: 8)
!6050 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h27bceee4ff27373bE", scope: !2489, file: !2488, line: 506, type: !6019, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6051)
!6051 = !{!6049}
!6052 = !DILocation(line: 1671, column: 19, scope: !6050, inlinedAt: !6048)
!6053 = !DILocation(line: 1671, column: 13, scope: !6035)
!6054 = !DILocation(line: 1679, column: 33, scope: !6035)
!6055 = !DILocalVariable(name: "data", scope: !6056, file: !2488, line: 1679, type: !1014, align: 8)
!6056 = !DILexicalBlockFile(scope: !6057, file: !2488, discriminator: 0)
!6057 = distinct !DISubprogram(name: "from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h30b12356e6c762c4E", scope: !377, file: !376, line: 134, type: !6058, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6060)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!5962, !1014, !9}
!6060 = !{!6055, !6061, !6062}
!6061 = !DILocalVariable(name: "len", scope: !6056, file: !2488, line: 1679, type: !9, align: 8)
!6062 = !DILocalVariable(name: "runtime", scope: !6063, file: !2488, line: 1679, type: !6065, align: 8)
!6063 = !DILexicalBlockFile(scope: !6064, file: !2488, discriminator: 0)
!6064 = distinct !DILexicalBlock(scope: !6057, file: !386, line: 2336, column: 13)
!6065 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !6066, file: !2, size: 128, align: 64, elements: !6067, templateParams: !23, identifier: "8576474c057e6d46d80f098cc5174295")
!6066 = !DINamespace(name: "from_raw_parts_mut", scope: !377)
!6067 = !{!6068, !6069}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !6065, file: !2, baseType: !6003, size: 64, align: 64)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !6065, file: !2, baseType: !393, size: 64, align: 64, offset: 64)
!6070 = !DILocation(line: 1679, column: 14, scope: !6056, inlinedAt: !6071)
!6071 = !DILocation(line: 1679, column: 14, scope: !6035)
!6072 = !DILocation(line: 1679, column: 38, scope: !6035)
!6073 = !DILocalVariable(name: "data", scope: !6074, file: !2488, line: 1679, type: !1014, align: 8)
!6074 = !DILexicalBlockFile(scope: !6075, file: !2488, discriminator: 0)
!6075 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hb6b24e962d1c0c17E", scope: !43, file: !399, line: 727, type: !1038, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6076)
!6076 = !{!6073, !6077}
!6077 = !DILocalVariable(name: "len", scope: !6074, file: !2488, line: 1679, type: !9, align: 8)
!6078 = !DILocation(line: 1679, column: 14, scope: !6074, inlinedAt: !6079)
!6079 = !DILocation(line: 141, column: 15, scope: !6057, inlinedAt: !6071)
!6080 = !DILocalVariable(name: "self", scope: !6081, file: !2488, line: 1679, type: !1014, align: 8)
!6081 = !DILexicalBlockFile(scope: !6082, file: !2488, discriminator: 0)
!6082 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h643fd9cf5c2a8b02E", scope: !657, file: !656, line: 45, type: !1048, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1051, retainedNodes: !6083)
!6083 = !{!6080}
!6084 = !DILocation(line: 1679, column: 14, scope: !6081, inlinedAt: !6085)
!6085 = !DILocation(line: 728, column: 24, scope: !6075, inlinedAt: !6079)
!6086 = !DILocalVariable(name: "data_address", scope: !6087, file: !2488, line: 1679, type: !960, align: 8)
!6087 = !DILexicalBlockFile(scope: !6088, file: !2488, discriminator: 0)
!6088 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h5301a74ec7cc69e3E", scope: !427, file: !426, line: 127, type: !1057, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6089)
!6089 = !{!6086, !6090}
!6090 = !DILocalVariable(name: "metadata", scope: !6087, file: !2488, line: 1679, type: !9, align: 8)
!6091 = !DILocation(line: 1679, column: 14, scope: !6087, inlinedAt: !6092)
!6092 = !DILocation(line: 728, column: 5, scope: !6075, inlinedAt: !6079)
!6093 = !DILocation(line: 1679, column: 63, scope: !6035)
!6094 = !DILocalVariable(name: "self", scope: !6095, file: !2488, line: 1679, type: !1014, align: 8)
!6095 = !DILexicalBlockFile(scope: !6096, file: !2488, discriminator: 0)
!6096 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h20b5f9a10ca998b3E", scope: !657, file: !656, line: 985, type: !1020, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6097)
!6097 = !{!6094, !6098}
!6098 = !DILocalVariable(name: "count", scope: !6095, file: !2488, line: 1679, type: !9, align: 8)
!6099 = !DILocation(line: 1679, column: 63, scope: !6095, inlinedAt: !6093)
!6100 = !DILocation(line: 1679, column: 71, scope: !6035)
!6101 = !DILocalVariable(name: "self", scope: !6102, file: !2488, line: 1679, type: !1014, align: 8)
!6102 = !DILexicalBlockFile(scope: !6103, file: !2488, discriminator: 0)
!6103 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h74c30394ac8b743eE", scope: !657, file: !656, line: 465, type: !1029, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6104)
!6104 = !{!6101, !6105}
!6105 = !DILocalVariable(name: "count", scope: !6102, file: !2488, line: 1679, type: !868, align: 8)
!6106 = !DILocation(line: 1679, column: 63, scope: !6102, inlinedAt: !6107)
!6107 = !DILocation(line: 990, column: 18, scope: !6096, inlinedAt: !6093)
!6108 = !DILocalVariable(name: "data", scope: !6109, file: !2488, line: 1679, type: !1014, align: 8)
!6109 = !DILexicalBlockFile(scope: !6110, file: !2488, discriminator: 0)
!6110 = distinct !DISubprogram(name: "from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h30b12356e6c762c4E", scope: !377, file: !376, line: 134, type: !6058, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6111)
!6111 = !{!6108, !6112, !6113}
!6112 = !DILocalVariable(name: "len", scope: !6109, file: !2488, line: 1679, type: !9, align: 8)
!6113 = !DILocalVariable(name: "runtime", scope: !6114, file: !2488, line: 1679, type: !6065, align: 8)
!6114 = !DILexicalBlockFile(scope: !6115, file: !2488, discriminator: 0)
!6115 = distinct !DILexicalBlock(scope: !6110, file: !386, line: 2336, column: 13)
!6116 = !DILocation(line: 1679, column: 44, scope: !6109, inlinedAt: !6117)
!6117 = !DILocation(line: 1679, column: 44, scope: !6035)
!6118 = !DILocation(line: 1679, column: 77, scope: !6035)
!6119 = !DILocalVariable(name: "data", scope: !6120, file: !2488, line: 1679, type: !1014, align: 8)
!6120 = !DILexicalBlockFile(scope: !6121, file: !2488, discriminator: 0)
!6121 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hb6b24e962d1c0c17E", scope: !43, file: !399, line: 727, type: !1038, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6122)
!6122 = !{!6119, !6123}
!6123 = !DILocalVariable(name: "len", scope: !6120, file: !2488, line: 1679, type: !9, align: 8)
!6124 = !DILocation(line: 1679, column: 44, scope: !6120, inlinedAt: !6125)
!6125 = !DILocation(line: 141, column: 15, scope: !6110, inlinedAt: !6117)
!6126 = !DILocalVariable(name: "self", scope: !6127, file: !2488, line: 1679, type: !1014, align: 8)
!6127 = !DILexicalBlockFile(scope: !6128, file: !2488, discriminator: 0)
!6128 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h643fd9cf5c2a8b02E", scope: !657, file: !656, line: 45, type: !1048, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1051, retainedNodes: !6129)
!6129 = !{!6126}
!6130 = !DILocation(line: 1679, column: 44, scope: !6127, inlinedAt: !6131)
!6131 = !DILocation(line: 728, column: 24, scope: !6121, inlinedAt: !6125)
!6132 = !DILocalVariable(name: "data_address", scope: !6133, file: !2488, line: 1679, type: !960, align: 8)
!6133 = !DILexicalBlockFile(scope: !6134, file: !2488, discriminator: 0)
!6134 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h5301a74ec7cc69e3E", scope: !427, file: !426, line: 127, type: !1057, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !6135)
!6135 = !{!6132, !6136}
!6136 = !DILocalVariable(name: "metadata", scope: !6133, file: !2488, line: 1679, type: !9, align: 8)
!6137 = !DILocation(line: 1679, column: 44, scope: !6133, inlinedAt: !6138)
!6138 = !DILocation(line: 728, column: 5, scope: !6121, inlinedAt: !6125)
!6139 = !DILocation(line: 1679, column: 13, scope: !6035)
!6140 = !DILocation(line: 1681, column: 6, scope: !6026)
!6141 = distinct !DISubprogram(name: "contains<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17hff584c436fe4b983E", scope: !2489, file: !2488, line: 2172, type: !6142, scopeLine: 2172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !6144)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!1159, !2068, !199}
!6144 = !{!6145, !6146}
!6145 = !DILocalVariable(name: "self", arg: 1, scope: !6141, file: !2488, line: 2172, type: !2068)
!6146 = !DILocalVariable(name: "x", arg: 2, scope: !6141, file: !2488, line: 2172, type: !199)
!6147 = !DILocation(line: 2172, column: 21, scope: !6141)
!6148 = !DILocation(line: 2172, column: 28, scope: !6141)
!6149 = !DILocation(line: 2176, column: 9, scope: !6141)
!6150 = !DILocation(line: 2177, column: 6, scope: !6141)
!6151 = distinct !DISubprogram(name: "eq<u8, u8>", linkageName: "_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17he80a31ab2f1cfe97E", scope: !6153, file: !6152, line: 25, type: !5915, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2992, retainedNodes: !6155)
!6152 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "d8ffa992b82fe6d1648610bb489e30e6")
!6153 = !DINamespace(name: "{impl#0}", scope: !6154)
!6154 = !DINamespace(name: "cmp", scope: !378)
!6155 = !{!6156, !6157}
!6156 = !DILocalVariable(name: "self", arg: 1, scope: !6151, file: !6152, line: 25, type: !366)
!6157 = !DILocalVariable(name: "other", arg: 2, scope: !6151, file: !6152, line: 25, type: !366)
!6158 = !DILocation(line: 25, column: 11, scope: !6151)
!6159 = !DILocation(line: 25, column: 18, scope: !6151)
!6160 = !DILocation(line: 26, column: 9, scope: !6151)
!6161 = !DILocation(line: 27, column: 6, scope: !6151)
!6162 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h09fc45be399bae52E", scope: !548, file: !632, line: 88, type: !6163, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6165)
!6163 = !DISubroutineType(types: !6164)
!6164 = !{!548, !366}
!6165 = !{!6166, !6167, !6169}
!6166 = !DILocalVariable(name: "slice", arg: 1, scope: !6162, file: !632, line: 88, type: !366)
!6167 = !DILocalVariable(name: "ptr", scope: !6168, file: !632, line: 89, type: !329, align: 8)
!6168 = distinct !DILexicalBlock(scope: !6162, file: !632, line: 89, column: 9)
!6169 = !DILocalVariable(name: "end", scope: !6170, file: !632, line: 94, type: !329, align: 8)
!6170 = distinct !DILexicalBlock(scope: !6168, file: !632, line: 94, column: 13)
!6171 = !DILocation(line: 88, column: 23, scope: !6162)
!6172 = !DILocation(line: 94, column: 17, scope: !6170)
!6173 = !DILocalVariable(name: "metadata", scope: !6174, file: !632, line: 92, type: !7, align: 1)
!6174 = !DILexicalBlockFile(scope: !6175, file: !632, discriminator: 0)
!6175 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17ha110c0ee121a06dbE", scope: !427, file: !426, line: 110, type: !1167, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6176)
!6176 = !{!6177, !6173}
!6177 = !DILocalVariable(name: "data_address", scope: !6174, file: !632, line: 92, type: !6, align: 8)
!6178 = !DILocation(line: 92, column: 21, scope: !6174, inlinedAt: !6179)
!6179 = !DILocation(line: 513, column: 5, scope: !6180, inlinedAt: !6181)
!6180 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17ha2d8dbbe516802bdE", scope: !43, file: !399, line: 512, type: !1174, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!6181 = !DILocation(line: 39, column: 43, scope: !6182, inlinedAt: !6186)
!6182 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd0ff5b2f156018f3E", scope: !414, file: !413, line: 36, type: !1178, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6183)
!6183 = !{!6184}
!6184 = !DILocalVariable(name: "self", scope: !6185, file: !632, line: 92, type: !329, align: 8)
!6185 = !DILexicalBlockFile(scope: !6182, file: !632, discriminator: 0)
!6186 = !DILocation(line: 92, column: 21, scope: !6168)
!6187 = !DILocation(line: 89, column: 19, scope: !6162)
!6188 = !DILocalVariable(name: "self", scope: !6189, file: !632, line: 89, type: !366, align: 8)
!6189 = !DILexicalBlockFile(scope: !6190, file: !632, discriminator: 0)
!6190 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hfb764dfa8292fb8fE", scope: !2489, file: !2488, line: 476, type: !6191, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6193)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{!329, !366}
!6193 = !{!6188}
!6194 = !DILocation(line: 89, column: 19, scope: !6189, inlinedAt: !6187)
!6195 = !DILocation(line: 89, column: 13, scope: !6168)
!6196 = !DILocation(line: 92, column: 21, scope: !6185, inlinedAt: !6186)
!6197 = !DILocalVariable(name: "self", scope: !6198, file: !632, line: 92, type: !329, align: 8)
!6198 = !DILexicalBlockFile(scope: !6199, file: !632, discriminator: 0)
!6199 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17ha4d0530636a6b1ddE", scope: !414, file: !413, line: 777, type: !1215, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6200)
!6200 = !{!6197, !6201}
!6201 = !DILocalVariable(name: "other", scope: !6198, file: !632, line: 92, type: !329, align: 8)
!6202 = !DILocation(line: 92, column: 21, scope: !6198, inlinedAt: !6203)
!6203 = !DILocation(line: 39, column: 9, scope: !6182, inlinedAt: !6186)
!6204 = !DILocation(line: 92, column: 21, scope: !6205, inlinedAt: !6209)
!6205 = !DILexicalBlockFile(scope: !6206, file: !632, discriminator: 0)
!6206 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h5c8467dab22abe2fE", scope: !43, file: !399, line: 538, type: !1224, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !6207)
!6207 = !{!6208}
!6208 = !DILocalVariable(name: "addr", scope: !6205, file: !632, line: 92, type: !9, align: 8)
!6209 = !DILocation(line: 513, column: 20, scope: !6180, inlinedAt: !6181)
!6210 = !DILocation(line: 92, column: 20, scope: !6168)
!6211 = !DILocation(line: 92, column: 13, scope: !6168)
!6212 = !DILocation(line: 94, column: 26, scope: !6168)
!6213 = !DILocation(line: 95, column: 17, scope: !6168)
!6214 = !DILocalVariable(name: "self", scope: !6215, file: !632, line: 95, type: !329, align: 8)
!6215 = !DILexicalBlockFile(scope: !6216, file: !632, discriminator: 0)
!6216 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h3b26539645131a1cE", scope: !414, file: !413, line: 1042, type: !857, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6217)
!6217 = !{!6214, !6218}
!6218 = !DILocalVariable(name: "count", scope: !6215, file: !632, line: 95, type: !9, align: 8)
!6219 = !DILocation(line: 95, column: 17, scope: !6215, inlinedAt: !6213)
!6220 = !DILocation(line: 95, column: 49, scope: !6168)
!6221 = !DILocalVariable(name: "self", scope: !6222, file: !632, line: 95, type: !329, align: 8)
!6222 = !DILexicalBlockFile(scope: !6223, file: !632, discriminator: 0)
!6223 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h5c4e7a2ea5ca6880E", scope: !414, file: !413, line: 536, type: !866, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6224)
!6224 = !{!6221, !6225}
!6225 = !DILocalVariable(name: "count", scope: !6222, file: !632, line: 95, type: !868, align: 8)
!6226 = !DILocation(line: 95, column: 17, scope: !6222, inlinedAt: !6227)
!6227 = !DILocation(line: 1046, column: 9, scope: !6216, inlinedAt: !6213)
!6228 = !DILocation(line: 97, column: 17, scope: !6168)
!6229 = !DILocalVariable(name: "self", scope: !6230, file: !632, line: 97, type: !329, align: 8)
!6230 = !DILexicalBlockFile(scope: !6231, file: !632, discriminator: 0)
!6231 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd93d5f335c24c154E", scope: !414, file: !413, line: 871, type: !857, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6232)
!6232 = !{!6229, !6233}
!6233 = !DILocalVariable(name: "count", scope: !6230, file: !632, line: 97, type: !9, align: 8)
!6234 = !DILocation(line: 97, column: 17, scope: !6230, inlinedAt: !6228)
!6235 = !DILocation(line: 97, column: 25, scope: !6168)
!6236 = !DILocalVariable(name: "self", scope: !6237, file: !632, line: 97, type: !329, align: 8)
!6237 = !DILexicalBlockFile(scope: !6238, file: !632, discriminator: 0)
!6238 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hcb6b1a5987c5a17eE", scope: !414, file: !413, line: 453, type: !866, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6239)
!6239 = !{!6236, !6240}
!6240 = !DILocalVariable(name: "count", scope: !6237, file: !632, line: 97, type: !868, align: 8)
!6241 = !DILocation(line: 97, column: 17, scope: !6237, inlinedAt: !6242)
!6242 = !DILocation(line: 876, column: 18, scope: !6231, inlinedAt: !6228)
!6243 = !DILocation(line: 94, column: 23, scope: !6168)
!6244 = !DILocation(line: 100, column: 48, scope: !6170)
!6245 = !DILocalVariable(name: "ptr", scope: !6246, file: !632, line: 100, type: !649, align: 8)
!6246 = !DILexicalBlockFile(scope: !6247, file: !632, discriminator: 0)
!6247 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6248)
!6248 = !{!6245}
!6249 = !DILocation(line: 100, column: 25, scope: !6246, inlinedAt: !6250)
!6250 = !DILocation(line: 100, column: 25, scope: !6170)
!6251 = !DILocation(line: 100, column: 64, scope: !6170)
!6252 = !DILocation(line: 100, column: 13, scope: !6170)
!6253 = !DILocation(line: 102, column: 6, scope: !6162)
!6254 = distinct !DISubprogram(name: "new<&str>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h31444a6cf065ff14E", scope: !472, file: !632, line: 88, type: !6255, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !6257)
!6255 = !DISubroutineType(types: !6256)
!6256 = !{!472, !2068}
!6257 = !{!6258, !6259, !6261}
!6258 = !DILocalVariable(name: "slice", arg: 1, scope: !6254, file: !632, line: 88, type: !2068)
!6259 = !DILocalVariable(name: "ptr", scope: !6260, file: !632, line: 89, type: !479, align: 8)
!6260 = distinct !DILexicalBlock(scope: !6254, file: !632, line: 89, column: 9)
!6261 = !DILocalVariable(name: "end", scope: !6262, file: !632, line: 94, type: !479, align: 8)
!6262 = distinct !DILexicalBlock(scope: !6260, file: !632, line: 94, column: 13)
!6263 = !DILocation(line: 88, column: 23, scope: !6254)
!6264 = !DILocation(line: 94, column: 17, scope: !6262)
!6265 = !DILocalVariable(name: "metadata", scope: !6266, file: !632, line: 92, type: !7, align: 1)
!6266 = !DILexicalBlockFile(scope: !6267, file: !632, discriminator: 0)
!6267 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17ha110c0ee121a06dbE", scope: !427, file: !426, line: 110, type: !1167, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6268)
!6268 = !{!6269, !6265}
!6269 = !DILocalVariable(name: "data_address", scope: !6266, file: !632, line: 92, type: !6, align: 8)
!6270 = !DILocation(line: 92, column: 21, scope: !6266, inlinedAt: !6271)
!6271 = !DILocation(line: 513, column: 5, scope: !6272, inlinedAt: !6273)
!6272 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17ha2d8dbbe516802bdE", scope: !43, file: !399, line: 512, type: !1174, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!6273 = !DILocation(line: 39, column: 43, scope: !6274, inlinedAt: !6280)
!6274 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h20de5921ed95fe89E", scope: !414, file: !413, line: 36, type: !6275, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !6277)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{!1159, !479}
!6277 = !{!6278}
!6278 = !DILocalVariable(name: "self", scope: !6279, file: !632, line: 92, type: !479, align: 8)
!6279 = !DILexicalBlockFile(scope: !6274, file: !632, discriminator: 0)
!6280 = !DILocation(line: 92, column: 21, scope: !6260)
!6281 = !DILocation(line: 89, column: 19, scope: !6254)
!6282 = !DILocalVariable(name: "self", scope: !6283, file: !632, line: 89, type: !2068, align: 8)
!6283 = !DILexicalBlockFile(scope: !6284, file: !632, discriminator: 0)
!6284 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hc242d6f884a78b73E", scope: !2489, file: !2488, line: 476, type: !6285, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !6287)
!6285 = !DISubroutineType(types: !6286)
!6286 = !{!479, !2068}
!6287 = !{!6282}
!6288 = !DILocation(line: 89, column: 19, scope: !6283, inlinedAt: !6281)
!6289 = !DILocation(line: 89, column: 13, scope: !6260)
!6290 = !DILocation(line: 92, column: 21, scope: !6279, inlinedAt: !6280)
!6291 = !DILocalVariable(name: "self", scope: !6292, file: !632, line: 92, type: !329, align: 8)
!6292 = !DILexicalBlockFile(scope: !6293, file: !632, discriminator: 0)
!6293 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17ha4d0530636a6b1ddE", scope: !414, file: !413, line: 777, type: !1215, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6294)
!6294 = !{!6291, !6295}
!6295 = !DILocalVariable(name: "other", scope: !6292, file: !632, line: 92, type: !329, align: 8)
!6296 = !DILocation(line: 92, column: 21, scope: !6292, inlinedAt: !6297)
!6297 = !DILocation(line: 39, column: 9, scope: !6274, inlinedAt: !6280)
!6298 = !DILocation(line: 92, column: 21, scope: !6299, inlinedAt: !6303)
!6299 = !DILexicalBlockFile(scope: !6300, file: !632, discriminator: 0)
!6300 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h5c8467dab22abe2fE", scope: !43, file: !399, line: 538, type: !1224, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !6301)
!6301 = !{!6302}
!6302 = !DILocalVariable(name: "addr", scope: !6299, file: !632, line: 92, type: !9, align: 8)
!6303 = !DILocation(line: 513, column: 20, scope: !6272, inlinedAt: !6273)
!6304 = !DILocation(line: 92, column: 20, scope: !6260)
!6305 = !DILocation(line: 92, column: 13, scope: !6260)
!6306 = !DILocation(line: 94, column: 26, scope: !6260)
!6307 = !DILocation(line: 95, column: 17, scope: !6260)
!6308 = !DILocalVariable(name: "self", scope: !6309, file: !632, line: 95, type: !329, align: 8)
!6309 = !DILexicalBlockFile(scope: !6310, file: !632, discriminator: 0)
!6310 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h3b26539645131a1cE", scope: !414, file: !413, line: 1042, type: !857, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6311)
!6311 = !{!6308, !6312}
!6312 = !DILocalVariable(name: "count", scope: !6309, file: !632, line: 95, type: !9, align: 8)
!6313 = !DILocation(line: 95, column: 17, scope: !6309, inlinedAt: !6307)
!6314 = !DILocation(line: 95, column: 49, scope: !6260)
!6315 = !DILocalVariable(name: "self", scope: !6316, file: !632, line: 95, type: !329, align: 8)
!6316 = !DILexicalBlockFile(scope: !6317, file: !632, discriminator: 0)
!6317 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h5c4e7a2ea5ca6880E", scope: !414, file: !413, line: 536, type: !866, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6318)
!6318 = !{!6315, !6319}
!6319 = !DILocalVariable(name: "count", scope: !6316, file: !632, line: 95, type: !868, align: 8)
!6320 = !DILocation(line: 95, column: 17, scope: !6316, inlinedAt: !6321)
!6321 = !DILocation(line: 1046, column: 9, scope: !6310, inlinedAt: !6307)
!6322 = !DILocation(line: 97, column: 17, scope: !6260)
!6323 = !DILocalVariable(name: "self", scope: !6324, file: !632, line: 97, type: !479, align: 8)
!6324 = !DILexicalBlockFile(scope: !6325, file: !632, discriminator: 0)
!6325 = distinct !DISubprogram(name: "add<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hdbeeb59f2b181d25E", scope: !414, file: !413, line: 871, type: !6326, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !6328)
!6326 = !DISubroutineType(types: !6327)
!6327 = !{!479, !479, !9}
!6328 = !{!6323, !6329}
!6329 = !DILocalVariable(name: "count", scope: !6324, file: !632, line: 97, type: !9, align: 8)
!6330 = !DILocation(line: 97, column: 17, scope: !6324, inlinedAt: !6322)
!6331 = !DILocation(line: 97, column: 25, scope: !6260)
!6332 = !DILocalVariable(name: "self", scope: !6333, file: !632, line: 97, type: !479, align: 8)
!6333 = !DILexicalBlockFile(scope: !6334, file: !632, discriminator: 0)
!6334 = distinct !DISubprogram(name: "offset<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb4e6d16cb998cb6fE", scope: !414, file: !413, line: 453, type: !6335, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !6337)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!479, !479, !868}
!6337 = !{!6332, !6338}
!6338 = !DILocalVariable(name: "count", scope: !6333, file: !632, line: 97, type: !868, align: 8)
!6339 = !DILocation(line: 97, column: 17, scope: !6333, inlinedAt: !6340)
!6340 = !DILocation(line: 876, column: 18, scope: !6325, inlinedAt: !6322)
!6341 = !DILocation(line: 94, column: 23, scope: !6260)
!6342 = !DILocation(line: 100, column: 48, scope: !6262)
!6343 = !DILocalVariable(name: "ptr", scope: !6344, file: !632, line: 100, type: !6348, align: 8)
!6344 = !DILexicalBlockFile(scope: !6345, file: !632, discriminator: 0)
!6345 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hca71b165166f52e5E", scope: !476, file: !646, line: 196, type: !6346, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !6349)
!6346 = !DISubroutineType(types: !6347)
!6347 = !{!476, !6348}
!6348 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &str", baseType: !137, size: 64, align: 64, dwarfAddressSpace: 0)
!6349 = !{!6343}
!6350 = !DILocation(line: 100, column: 25, scope: !6344, inlinedAt: !6351)
!6351 = !DILocation(line: 100, column: 25, scope: !6262)
!6352 = !DILocation(line: 100, column: 64, scope: !6262)
!6353 = !DILocation(line: 100, column: 13, scope: !6262)
!6354 = !DILocation(line: 102, column: 6, scope: !6254)
!6355 = distinct !DISubprogram(name: "new<(&str, &[&str])>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7ac0c0a141adc480E", scope: !6356, file: !632, line: 88, type: !6375, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !6382)
!6356 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<(&str, &[&str])>", scope: !473, file: !2, size: 128, align: 64, elements: !6357, templateParams: !6367, identifier: "3afc28a00393d6a8c62663b94ff6aa2a")
!6357 = !{!6358, !6369, !6370}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6356, file: !2, baseType: !6359, size: 64, align: 64)
!6359 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(&str, &[&str])>", scope: !42, file: !2, size: 64, align: 64, elements: !6360, templateParams: !6367, identifier: "778ce084f9db0cf1539e88d310becfba")
!6360 = !{!6361}
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6359, file: !2, baseType: !6362, size: 64, align: 64)
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const (&str, &[&str])", baseType: !6363, size: 64, align: 64, dwarfAddressSpace: 0)
!6363 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&str, &[&str])", file: !2, size: 256, align: 64, elements: !6364, templateParams: !23, identifier: "1282664b030367d0d023bdd3bc339f7c")
!6364 = !{!6365, !6366}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6363, file: !2, baseType: !137, size: 128, align: 64)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6363, file: !2, baseType: !2068, size: 128, align: 64, offset: 128)
!6367 = !{!6368}
!6368 = !DITemplateTypeParameter(name: "T", type: !6363)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6356, file: !2, baseType: !6362, size: 64, align: 64, offset: 64)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6356, file: !2, baseType: !6371, align: 8)
!6371 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&(&str, &[&str])>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !6372, identifier: "aa41989009b21f46b65971d4d75ce679")
!6372 = !{!6373}
!6373 = !DITemplateTypeParameter(name: "T", type: !6374)
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&(&str, &[&str])", baseType: !6363, size: 64, align: 64, dwarfAddressSpace: 0)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{!6356, !6377}
!6377 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[(&str, &[&str])]", file: !2, size: 128, align: 64, elements: !6378, templateParams: !23, identifier: "f0d88a41448e3ae3fdcc78d7d07da25a")
!6378 = !{!6379, !6381}
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6377, file: !2, baseType: !6380, size: 64, align: 64)
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 64, align: 64, dwarfAddressSpace: 0)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6377, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6382 = !{!6383, !6384, !6386}
!6383 = !DILocalVariable(name: "slice", arg: 1, scope: !6355, file: !632, line: 88, type: !6377)
!6384 = !DILocalVariable(name: "ptr", scope: !6385, file: !632, line: 89, type: !6362, align: 8)
!6385 = distinct !DILexicalBlock(scope: !6355, file: !632, line: 89, column: 9)
!6386 = !DILocalVariable(name: "end", scope: !6387, file: !632, line: 94, type: !6362, align: 8)
!6387 = distinct !DILexicalBlock(scope: !6385, file: !632, line: 94, column: 13)
!6388 = !DILocation(line: 88, column: 23, scope: !6355)
!6389 = !DILocation(line: 94, column: 17, scope: !6387)
!6390 = !DILocalVariable(name: "metadata", scope: !6391, file: !632, line: 92, type: !7, align: 1)
!6391 = !DILexicalBlockFile(scope: !6392, file: !632, discriminator: 0)
!6392 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17ha110c0ee121a06dbE", scope: !427, file: !426, line: 110, type: !1167, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6393)
!6393 = !{!6394, !6390}
!6394 = !DILocalVariable(name: "data_address", scope: !6391, file: !632, line: 92, type: !6, align: 8)
!6395 = !DILocation(line: 92, column: 21, scope: !6391, inlinedAt: !6396)
!6396 = !DILocation(line: 513, column: 5, scope: !6397, inlinedAt: !6398)
!6397 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17ha2d8dbbe516802bdE", scope: !43, file: !399, line: 512, type: !1174, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!6398 = !DILocation(line: 39, column: 43, scope: !6399, inlinedAt: !6405)
!6399 = distinct !DISubprogram(name: "is_null<(&str, &[&str])>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h796e39dd82ad5a29E", scope: !414, file: !413, line: 36, type: !6400, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !6402)
!6400 = !DISubroutineType(types: !6401)
!6401 = !{!1159, !6362}
!6402 = !{!6403}
!6403 = !DILocalVariable(name: "self", scope: !6404, file: !632, line: 92, type: !6362, align: 8)
!6404 = !DILexicalBlockFile(scope: !6399, file: !632, discriminator: 0)
!6405 = !DILocation(line: 92, column: 21, scope: !6385)
!6406 = !DILocation(line: 89, column: 19, scope: !6355)
!6407 = !DILocalVariable(name: "self", scope: !6408, file: !632, line: 89, type: !6377, align: 8)
!6408 = !DILexicalBlockFile(scope: !6409, file: !632, discriminator: 0)
!6409 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hea87ae78b667a458E", scope: !2489, file: !2488, line: 476, type: !6410, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !6412)
!6410 = !DISubroutineType(types: !6411)
!6411 = !{!6362, !6377}
!6412 = !{!6407}
!6413 = !DILocation(line: 89, column: 19, scope: !6408, inlinedAt: !6406)
!6414 = !DILocation(line: 89, column: 13, scope: !6385)
!6415 = !DILocation(line: 92, column: 21, scope: !6404, inlinedAt: !6405)
!6416 = !DILocalVariable(name: "self", scope: !6417, file: !632, line: 92, type: !329, align: 8)
!6417 = !DILexicalBlockFile(scope: !6418, file: !632, discriminator: 0)
!6418 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17ha4d0530636a6b1ddE", scope: !414, file: !413, line: 777, type: !1215, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6419)
!6419 = !{!6416, !6420}
!6420 = !DILocalVariable(name: "other", scope: !6417, file: !632, line: 92, type: !329, align: 8)
!6421 = !DILocation(line: 92, column: 21, scope: !6417, inlinedAt: !6422)
!6422 = !DILocation(line: 39, column: 9, scope: !6399, inlinedAt: !6405)
!6423 = !DILocation(line: 92, column: 21, scope: !6424, inlinedAt: !6428)
!6424 = !DILexicalBlockFile(scope: !6425, file: !632, discriminator: 0)
!6425 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h5c8467dab22abe2fE", scope: !43, file: !399, line: 538, type: !1224, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !6426)
!6426 = !{!6427}
!6427 = !DILocalVariable(name: "addr", scope: !6424, file: !632, line: 92, type: !9, align: 8)
!6428 = !DILocation(line: 513, column: 20, scope: !6397, inlinedAt: !6398)
!6429 = !DILocation(line: 92, column: 20, scope: !6385)
!6430 = !DILocation(line: 92, column: 13, scope: !6385)
!6431 = !DILocation(line: 94, column: 26, scope: !6385)
!6432 = !DILocation(line: 95, column: 17, scope: !6385)
!6433 = !DILocalVariable(name: "self", scope: !6434, file: !632, line: 95, type: !329, align: 8)
!6434 = !DILexicalBlockFile(scope: !6435, file: !632, discriminator: 0)
!6435 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h3b26539645131a1cE", scope: !414, file: !413, line: 1042, type: !857, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6436)
!6436 = !{!6433, !6437}
!6437 = !DILocalVariable(name: "count", scope: !6434, file: !632, line: 95, type: !9, align: 8)
!6438 = !DILocation(line: 95, column: 17, scope: !6434, inlinedAt: !6432)
!6439 = !DILocation(line: 95, column: 49, scope: !6385)
!6440 = !DILocalVariable(name: "self", scope: !6441, file: !632, line: 95, type: !329, align: 8)
!6441 = !DILexicalBlockFile(scope: !6442, file: !632, discriminator: 0)
!6442 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h5c4e7a2ea5ca6880E", scope: !414, file: !413, line: 536, type: !866, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6443)
!6443 = !{!6440, !6444}
!6444 = !DILocalVariable(name: "count", scope: !6441, file: !632, line: 95, type: !868, align: 8)
!6445 = !DILocation(line: 95, column: 17, scope: !6441, inlinedAt: !6446)
!6446 = !DILocation(line: 1046, column: 9, scope: !6435, inlinedAt: !6432)
!6447 = !DILocation(line: 97, column: 17, scope: !6385)
!6448 = !DILocalVariable(name: "self", scope: !6449, file: !632, line: 97, type: !6362, align: 8)
!6449 = !DILexicalBlockFile(scope: !6450, file: !632, discriminator: 0)
!6450 = distinct !DISubprogram(name: "add<(&str, &[&str])>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h853a1f9130b4a701E", scope: !414, file: !413, line: 871, type: !6451, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !6453)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!6362, !6362, !9}
!6453 = !{!6448, !6454}
!6454 = !DILocalVariable(name: "count", scope: !6449, file: !632, line: 97, type: !9, align: 8)
!6455 = !DILocation(line: 97, column: 17, scope: !6449, inlinedAt: !6447)
!6456 = !DILocation(line: 97, column: 25, scope: !6385)
!6457 = !DILocalVariable(name: "self", scope: !6458, file: !632, line: 97, type: !6362, align: 8)
!6458 = !DILexicalBlockFile(scope: !6459, file: !632, discriminator: 0)
!6459 = distinct !DISubprogram(name: "offset<(&str, &[&str])>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hf167f9748d16f8efE", scope: !414, file: !413, line: 453, type: !6460, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !6462)
!6460 = !DISubroutineType(types: !6461)
!6461 = !{!6362, !6362, !868}
!6462 = !{!6457, !6463}
!6463 = !DILocalVariable(name: "count", scope: !6458, file: !632, line: 97, type: !868, align: 8)
!6464 = !DILocation(line: 97, column: 17, scope: !6458, inlinedAt: !6465)
!6465 = !DILocation(line: 876, column: 18, scope: !6450, inlinedAt: !6447)
!6466 = !DILocation(line: 94, column: 23, scope: !6385)
!6467 = !DILocation(line: 100, column: 48, scope: !6387)
!6468 = !DILocalVariable(name: "ptr", scope: !6469, file: !632, line: 100, type: !6473, align: 8)
!6469 = !DILexicalBlockFile(scope: !6470, file: !632, discriminator: 0)
!6470 = distinct !DISubprogram(name: "new_unchecked<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h397ee0b8504e49b8E", scope: !6359, file: !646, line: 196, type: !6471, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !6474)
!6471 = !DISubroutineType(types: !6472)
!6472 = !{!6359, !6473}
!6473 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut (&str, &[&str])", baseType: !6363, size: 64, align: 64, dwarfAddressSpace: 0)
!6474 = !{!6468}
!6475 = !DILocation(line: 100, column: 25, scope: !6469, inlinedAt: !6476)
!6476 = !DILocation(line: 100, column: 25, scope: !6387)
!6477 = !DILocation(line: 100, column: 64, scope: !6387)
!6478 = !DILocation(line: 100, column: 13, scope: !6387)
!6479 = !DILocation(line: 102, column: 6, scope: !6355)
!6480 = distinct !DISubprogram(name: "new<char>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h95375ea80096db02E", scope: !6481, file: !632, line: 88, type: !6494, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !6501)
!6481 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<char>", scope: !473, file: !2, size: 128, align: 64, elements: !6482, templateParams: !572, identifier: "dbb24d7c68e9d8e6611fabde27c966a9")
!6482 = !{!6483, !6488, !6489}
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6481, file: !2, baseType: !6484, size: 64, align: 64)
!6484 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<char>", scope: !42, file: !2, size: 64, align: 64, elements: !6485, templateParams: !572, identifier: "70830cc29fba2631b514f9ca6a2a565a")
!6485 = !{!6486}
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6484, file: !2, baseType: !6487, size: 64, align: 64)
!6487 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const char", baseType: !534, size: 64, align: 64, dwarfAddressSpace: 0)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6481, file: !2, baseType: !6487, size: 64, align: 64, offset: 64)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6481, file: !2, baseType: !6490, align: 8)
!6490 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&char>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !6491, identifier: "4129425c839fe8b78ffcbcd6a498ccb3")
!6491 = !{!6492}
!6492 = !DITemplateTypeParameter(name: "T", type: !6493)
!6493 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&char", baseType: !534, size: 64, align: 64, dwarfAddressSpace: 0)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{!6481, !6496}
!6496 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[char]", file: !2, size: 128, align: 64, elements: !6497, templateParams: !23, identifier: "88ecf9c268486eef173e7a7d0dbd8938")
!6497 = !{!6498, !6500}
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6496, file: !2, baseType: !6499, size: 64, align: 64)
!6499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64, align: 64, dwarfAddressSpace: 0)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6496, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6501 = !{!6502, !6503, !6505}
!6502 = !DILocalVariable(name: "slice", arg: 1, scope: !6480, file: !632, line: 88, type: !6496)
!6503 = !DILocalVariable(name: "ptr", scope: !6504, file: !632, line: 89, type: !6487, align: 8)
!6504 = distinct !DILexicalBlock(scope: !6480, file: !632, line: 89, column: 9)
!6505 = !DILocalVariable(name: "end", scope: !6506, file: !632, line: 94, type: !6487, align: 8)
!6506 = distinct !DILexicalBlock(scope: !6504, file: !632, line: 94, column: 13)
!6507 = !DILocation(line: 88, column: 23, scope: !6480)
!6508 = !DILocation(line: 94, column: 17, scope: !6506)
!6509 = !DILocalVariable(name: "metadata", scope: !6510, file: !632, line: 92, type: !7, align: 1)
!6510 = !DILexicalBlockFile(scope: !6511, file: !632, discriminator: 0)
!6511 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17ha110c0ee121a06dbE", scope: !427, file: !426, line: 110, type: !1167, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6512)
!6512 = !{!6513, !6509}
!6513 = !DILocalVariable(name: "data_address", scope: !6510, file: !632, line: 92, type: !6, align: 8)
!6514 = !DILocation(line: 92, column: 21, scope: !6510, inlinedAt: !6515)
!6515 = !DILocation(line: 513, column: 5, scope: !6516, inlinedAt: !6517)
!6516 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17ha2d8dbbe516802bdE", scope: !43, file: !399, line: 512, type: !1174, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!6517 = !DILocation(line: 39, column: 43, scope: !6518, inlinedAt: !6524)
!6518 = distinct !DISubprogram(name: "is_null<char>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd2ae23fd4dfb1783E", scope: !414, file: !413, line: 36, type: !6519, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !6521)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{!1159, !6487}
!6521 = !{!6522}
!6522 = !DILocalVariable(name: "self", scope: !6523, file: !632, line: 92, type: !6487, align: 8)
!6523 = !DILexicalBlockFile(scope: !6518, file: !632, discriminator: 0)
!6524 = !DILocation(line: 92, column: 21, scope: !6504)
!6525 = !DILocation(line: 89, column: 19, scope: !6480)
!6526 = !DILocalVariable(name: "self", scope: !6527, file: !632, line: 89, type: !6496, align: 8)
!6527 = !DILexicalBlockFile(scope: !6528, file: !632, discriminator: 0)
!6528 = distinct !DISubprogram(name: "as_ptr<char>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h90ce8176b53b012eE", scope: !2489, file: !2488, line: 476, type: !6529, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !6531)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{!6487, !6496}
!6531 = !{!6526}
!6532 = !DILocation(line: 89, column: 19, scope: !6527, inlinedAt: !6525)
!6533 = !DILocation(line: 89, column: 13, scope: !6504)
!6534 = !DILocation(line: 92, column: 21, scope: !6523, inlinedAt: !6524)
!6535 = !DILocalVariable(name: "self", scope: !6536, file: !632, line: 92, type: !329, align: 8)
!6536 = !DILexicalBlockFile(scope: !6537, file: !632, discriminator: 0)
!6537 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17ha4d0530636a6b1ddE", scope: !414, file: !413, line: 777, type: !1215, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6538)
!6538 = !{!6535, !6539}
!6539 = !DILocalVariable(name: "other", scope: !6536, file: !632, line: 92, type: !329, align: 8)
!6540 = !DILocation(line: 92, column: 21, scope: !6536, inlinedAt: !6541)
!6541 = !DILocation(line: 39, column: 9, scope: !6518, inlinedAt: !6524)
!6542 = !DILocation(line: 92, column: 21, scope: !6543, inlinedAt: !6547)
!6543 = !DILexicalBlockFile(scope: !6544, file: !632, discriminator: 0)
!6544 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h5c8467dab22abe2fE", scope: !43, file: !399, line: 538, type: !1224, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !6545)
!6545 = !{!6546}
!6546 = !DILocalVariable(name: "addr", scope: !6543, file: !632, line: 92, type: !9, align: 8)
!6547 = !DILocation(line: 513, column: 20, scope: !6516, inlinedAt: !6517)
!6548 = !DILocation(line: 92, column: 20, scope: !6504)
!6549 = !DILocation(line: 92, column: 13, scope: !6504)
!6550 = !DILocation(line: 94, column: 26, scope: !6504)
!6551 = !DILocation(line: 95, column: 17, scope: !6504)
!6552 = !DILocalVariable(name: "self", scope: !6553, file: !632, line: 95, type: !329, align: 8)
!6553 = !DILexicalBlockFile(scope: !6554, file: !632, discriminator: 0)
!6554 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17h3b26539645131a1cE", scope: !414, file: !413, line: 1042, type: !857, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6555)
!6555 = !{!6552, !6556}
!6556 = !DILocalVariable(name: "count", scope: !6553, file: !632, line: 95, type: !9, align: 8)
!6557 = !DILocation(line: 95, column: 17, scope: !6553, inlinedAt: !6551)
!6558 = !DILocation(line: 95, column: 49, scope: !6504)
!6559 = !DILocalVariable(name: "self", scope: !6560, file: !632, line: 95, type: !329, align: 8)
!6560 = !DILexicalBlockFile(scope: !6561, file: !632, discriminator: 0)
!6561 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h5c4e7a2ea5ca6880E", scope: !414, file: !413, line: 536, type: !866, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6562)
!6562 = !{!6559, !6563}
!6563 = !DILocalVariable(name: "count", scope: !6560, file: !632, line: 95, type: !868, align: 8)
!6564 = !DILocation(line: 95, column: 17, scope: !6560, inlinedAt: !6565)
!6565 = !DILocation(line: 1046, column: 9, scope: !6554, inlinedAt: !6551)
!6566 = !DILocation(line: 97, column: 17, scope: !6504)
!6567 = !DILocalVariable(name: "self", scope: !6568, file: !632, line: 97, type: !6487, align: 8)
!6568 = !DILexicalBlockFile(scope: !6569, file: !632, discriminator: 0)
!6569 = distinct !DISubprogram(name: "add<char>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h2f16a457e030ee5dE", scope: !414, file: !413, line: 871, type: !6570, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !6572)
!6570 = !DISubroutineType(types: !6571)
!6571 = !{!6487, !6487, !9}
!6572 = !{!6567, !6573}
!6573 = !DILocalVariable(name: "count", scope: !6568, file: !632, line: 97, type: !9, align: 8)
!6574 = !DILocation(line: 97, column: 17, scope: !6568, inlinedAt: !6566)
!6575 = !DILocation(line: 97, column: 25, scope: !6504)
!6576 = !DILocalVariable(name: "self", scope: !6577, file: !632, line: 97, type: !6487, align: 8)
!6577 = !DILexicalBlockFile(scope: !6578, file: !632, discriminator: 0)
!6578 = distinct !DISubprogram(name: "offset<char>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hb4ebe6fb643be1edE", scope: !414, file: !413, line: 453, type: !6579, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !6581)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{!6487, !6487, !868}
!6581 = !{!6576, !6582}
!6582 = !DILocalVariable(name: "count", scope: !6577, file: !632, line: 97, type: !868, align: 8)
!6583 = !DILocation(line: 97, column: 17, scope: !6577, inlinedAt: !6584)
!6584 = !DILocation(line: 876, column: 18, scope: !6569, inlinedAt: !6566)
!6585 = !DILocation(line: 94, column: 23, scope: !6504)
!6586 = !DILocation(line: 100, column: 48, scope: !6506)
!6587 = !DILocalVariable(name: "ptr", scope: !6588, file: !632, line: 100, type: !6592, align: 8)
!6588 = !DILexicalBlockFile(scope: !6589, file: !632, discriminator: 0)
!6589 = distinct !DISubprogram(name: "new_unchecked<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h59e9ac2f9cbcb022E", scope: !6484, file: !646, line: 196, type: !6590, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !6593)
!6590 = !DISubroutineType(types: !6591)
!6591 = !{!6484, !6592}
!6592 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut char", baseType: !534, size: 64, align: 64, dwarfAddressSpace: 0)
!6593 = !{!6587}
!6594 = !DILocation(line: 100, column: 25, scope: !6588, inlinedAt: !6595)
!6595 = !DILocation(line: 100, column: 25, scope: !6506)
!6596 = !DILocation(line: 100, column: 64, scope: !6506)
!6597 = !DILocation(line: 100, column: 13, scope: !6506)
!6598 = !DILocation(line: 102, column: 6, scope: !6480)
!6599 = distinct !DISubprogram(name: "as_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h95713962b8792772E", scope: !548, file: !632, line: 130, type: !6600, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6602)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{!366, !594}
!6602 = !{!6603}
!6603 = !DILocalVariable(name: "self", arg: 1, scope: !6599, file: !632, line: 130, type: !594)
!6604 = !DILocation(line: 130, column: 21, scope: !6599)
!6605 = !DILocalVariable(name: "len", scope: !6606, file: !632, line: 131, type: !9, align: 8)
!6606 = !DILexicalBlockFile(scope: !6607, file: !632, discriminator: 0)
!6607 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hc9808a0b8f9d77eeE", scope: !377, file: !376, line: 90, type: !379, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6608)
!6608 = !{!6609, !6605, !6610}
!6609 = !DILocalVariable(name: "data", scope: !6606, file: !632, line: 131, type: !329, align: 8)
!6610 = !DILocalVariable(name: "runtime", scope: !6611, file: !632, line: 131, type: !387, align: 8)
!6611 = !DILexicalBlockFile(scope: !6612, file: !632, discriminator: 0)
!6612 = distinct !DILexicalBlock(scope: !6607, file: !386, line: 2336, column: 13)
!6613 = !DILocation(line: 131, column: 9, scope: !6606, inlinedAt: !6614)
!6614 = !DILocation(line: 78, column: 26, scope: !6615, inlinedAt: !6628)
!6615 = distinct !DISubprogram(name: "make_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17h102f0dcaccf6cc39E", scope: !548, file: !608, line: 74, type: !6600, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6616)
!6616 = !{!6617, !6619, !6622, !6625}
!6617 = !DILocalVariable(name: "self", scope: !6618, file: !632, line: 131, type: !594, align: 8)
!6618 = !DILexicalBlockFile(scope: !6615, file: !632, discriminator: 0)
!6619 = !DILocalVariable(name: "start", scope: !6620, file: !632, line: 131, type: !326, align: 8)
!6620 = !DILexicalBlockFile(scope: !6621, file: !632, discriminator: 0)
!6621 = distinct !DILexicalBlock(scope: !6615, file: !608, line: 18, column: 9)
!6622 = !DILocalVariable(name: "size", scope: !6623, file: !632, line: 131, type: !9, align: 8)
!6623 = !DILexicalBlockFile(scope: !6624, file: !632, discriminator: 0)
!6624 = distinct !DILexicalBlock(scope: !6621, file: !608, line: 19, column: 9)
!6625 = !DILocalVariable(name: "diff", scope: !6626, file: !632, line: 131, type: !9, align: 8)
!6626 = !DILexicalBlockFile(scope: !6627, file: !632, discriminator: 0)
!6627 = distinct !DILexicalBlock(scope: !6624, file: !608, line: 29, column: 13)
!6628 = !DILocation(line: 131, column: 9, scope: !6599)
!6629 = !DILocation(line: 131, column: 9, scope: !6618, inlinedAt: !6628)
!6630 = !DILocalVariable(name: "self", scope: !6631, file: !632, line: 131, type: !326, align: 8)
!6631 = !DILexicalBlockFile(scope: !6632, file: !632, discriminator: 0)
!6632 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6633)
!6633 = !{!6630}
!6634 = !DILocation(line: 131, column: 9, scope: !6631, inlinedAt: !6635)
!6635 = !DILocation(line: 78, column: 41, scope: !6615, inlinedAt: !6628)
!6636 = !DILocation(line: 131, column: 9, scope: !6620, inlinedAt: !6628)
!6637 = !DILocation(line: 131, column: 9, scope: !6638, inlinedAt: !6640)
!6638 = !DILexicalBlockFile(scope: !6639, file: !632, discriminator: 0)
!6639 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!6640 = !DILocation(line: 41, column: 5, scope: !6641, inlinedAt: !6642)
!6641 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!6642 = !DILocation(line: 19, column: 20, scope: !6621, inlinedAt: !6628)
!6643 = !DILocation(line: 131, column: 9, scope: !6623, inlinedAt: !6628)
!6644 = !DILocalVariable(name: "self", scope: !6645, file: !632, line: 131, type: !329, align: 8)
!6645 = !DILexicalBlockFile(scope: !6646, file: !632, discriminator: 0)
!6646 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6647)
!6647 = !{!6644}
!6648 = !DILocation(line: 131, column: 9, scope: !6645, inlinedAt: !6649)
!6649 = !DILocation(line: 23, column: 13, scope: !6624, inlinedAt: !6628)
!6650 = !DILocalVariable(name: "self", scope: !6651, file: !632, line: 131, type: !9, align: 8)
!6651 = !DILexicalBlockFile(scope: !6652, file: !632, discriminator: 0)
!6652 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !2929, file: !2928, line: 1231, type: !2917, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !6653)
!6653 = !{!6650, !6654}
!6654 = !DILocalVariable(name: "rhs", scope: !6651, file: !632, line: 131, type: !9, align: 8)
!6655 = !DILocation(line: 131, column: 9, scope: !6651, inlinedAt: !6649)
!6656 = !DILocalVariable(name: "self", scope: !6657, file: !632, line: 131, type: !329, align: 8)
!6657 = !DILexicalBlockFile(scope: !6658, file: !632, discriminator: 0)
!6658 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6659)
!6659 = !{!6656}
!6660 = !DILocation(line: 131, column: 9, scope: !6657, inlinedAt: !6661)
!6661 = !DILocation(line: 29, column: 47, scope: !6624, inlinedAt: !6628)
!6662 = !DILocalVariable(name: "self", scope: !6663, file: !632, line: 131, type: !326, align: 8)
!6663 = !DILexicalBlockFile(scope: !6664, file: !632, discriminator: 0)
!6664 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6665)
!6665 = !{!6662}
!6666 = !DILocation(line: 131, column: 9, scope: !6663, inlinedAt: !6667)
!6667 = !DILocation(line: 29, column: 65, scope: !6624, inlinedAt: !6628)
!6668 = !DILocalVariable(name: "self", scope: !6669, file: !632, line: 131, type: !649, align: 8)
!6669 = !DILexicalBlockFile(scope: !6670, file: !632, discriminator: 0)
!6670 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6671)
!6671 = !{!6668}
!6672 = !DILocation(line: 131, column: 9, scope: !6669, inlinedAt: !6667)
!6673 = !DILocation(line: 131, column: 9, scope: !6626, inlinedAt: !6628)
!6674 = !DILocalVariable(name: "data", scope: !6675, file: !632, line: 131, type: !329, align: 8)
!6675 = !DILexicalBlockFile(scope: !6676, file: !632, discriminator: 0)
!6676 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6a66992555506ab5E", scope: !43, file: !399, line: 695, type: !400, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6677)
!6677 = !{!6674, !6678}
!6678 = !DILocalVariable(name: "len", scope: !6675, file: !632, line: 131, type: !9, align: 8)
!6679 = !DILocation(line: 131, column: 9, scope: !6675, inlinedAt: !6680)
!6680 = !DILocation(line: 97, column: 11, scope: !6607, inlinedAt: !6614)
!6681 = !DILocalVariable(name: "self", scope: !6682, file: !632, line: 131, type: !329, align: 8)
!6682 = !DILexicalBlockFile(scope: !6683, file: !632, discriminator: 0)
!6683 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb951d44ade26c9c5E", scope: !414, file: !413, line: 46, type: !416, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !6684)
!6684 = !{!6681}
!6685 = !DILocation(line: 131, column: 9, scope: !6682, inlinedAt: !6686)
!6686 = !DILocation(line: 696, column: 20, scope: !6676, inlinedAt: !6680)
!6687 = !DILocalVariable(name: "data_address", scope: !6688, file: !632, line: 131, type: !6, align: 8)
!6688 = !DILexicalBlockFile(scope: !6689, file: !632, discriminator: 0)
!6689 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h9dc36a19d85d94baE", scope: !427, file: !426, line: 110, type: !428, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6690)
!6690 = !{!6687, !6691}
!6691 = !DILocalVariable(name: "metadata", scope: !6688, file: !632, line: 131, type: !9, align: 8)
!6692 = !DILocation(line: 131, column: 9, scope: !6688, inlinedAt: !6693)
!6693 = !DILocation(line: 696, column: 5, scope: !6676, inlinedAt: !6680)
!6694 = !DILocation(line: 132, column: 6, scope: !6599)
!6695 = !DILocalVariable(name: "self", scope: !6696, file: !632, line: 131, type: !326, align: 8)
!6696 = !DILexicalBlockFile(scope: !6697, file: !632, discriminator: 0)
!6697 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6698)
!6698 = !{!6695}
!6699 = !DILocation(line: 131, column: 9, scope: !6696, inlinedAt: !6700)
!6700 = !DILocation(line: 23, column: 43, scope: !6624, inlinedAt: !6628)
!6701 = !DILocalVariable(name: "self", scope: !6702, file: !632, line: 131, type: !649, align: 8)
!6702 = !DILexicalBlockFile(scope: !6703, file: !632, discriminator: 0)
!6703 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6704)
!6704 = !{!6701}
!6705 = !DILocation(line: 131, column: 9, scope: !6702, inlinedAt: !6700)
!6706 = distinct !DISubprogram(name: "into_iter<(&str, &[&str])>", linkageName: "_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h5182e53e41c67fe6E", scope: !6707, file: !632, line: 23, type: !6375, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !6708)
!6707 = !DINamespace(name: "{impl#0}", scope: !473)
!6708 = !{!6709}
!6709 = !DILocalVariable(name: "self", arg: 1, scope: !6706, file: !632, line: 23, type: !6377)
!6710 = !DILocation(line: 23, column: 18, scope: !6706)
!6711 = !DILocation(line: 24, column: 9, scope: !6706)
!6712 = !DILocalVariable(name: "self", scope: !6713, file: !632, line: 24, type: !6377, align: 8)
!6713 = !DILexicalBlockFile(scope: !6714, file: !632, discriminator: 0)
!6714 = distinct !DISubprogram(name: "iter<(&str, &[&str])>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17had907a9854c5bd9fE", scope: !2489, file: !2488, line: 734, type: !6375, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !6715)
!6715 = !{!6712}
!6716 = !DILocation(line: 24, column: 9, scope: !6713, inlinedAt: !6711)
!6717 = !DILocation(line: 25, column: 6, scope: !6706)
!6718 = distinct !DISubprogram(name: "into_iter<&str>", linkageName: "_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h80661dbf99d720d9E", scope: !6707, file: !632, line: 23, type: !6255, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !6719)
!6719 = !{!6720}
!6720 = !DILocalVariable(name: "self", arg: 1, scope: !6718, file: !632, line: 23, type: !2068)
!6721 = !DILocation(line: 23, column: 18, scope: !6718)
!6722 = !DILocation(line: 24, column: 9, scope: !6718)
!6723 = !DILocalVariable(name: "self", scope: !6724, file: !632, line: 24, type: !2068, align: 8)
!6724 = !DILexicalBlockFile(scope: !6725, file: !632, discriminator: 0)
!6725 = distinct !DISubprogram(name: "iter<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb4456b994ba02408E", scope: !2489, file: !2488, line: 734, type: !6255, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !6726)
!6726 = !{!6723}
!6727 = !DILocation(line: 24, column: 9, scope: !6724, inlinedAt: !6722)
!6728 = !DILocation(line: 25, column: 6, scope: !6718)
!6729 = distinct !DISubprogram(name: "memchr", linkageName: "_ZN4core5slice6memchr6memchr17h1a8f2df3e45c8f14E", scope: !6731, file: !6730, line: 38, type: !6732, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !6734)
!6730 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/memchr.rs", directory: "", checksumkind: CSK_MD5, checksum: "065f1e34afe7661a69ed38e528fd9ddb")
!6731 = !DINamespace(name: "memchr", scope: !378)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{!455, !70, !366}
!6734 = !{!6735, !6736}
!6735 = !DILocalVariable(name: "x", arg: 1, scope: !6729, file: !6730, line: 38, type: !70)
!6736 = !DILocalVariable(name: "text", arg: 2, scope: !6729, file: !6730, line: 38, type: !366)
!6737 = !DILocation(line: 38, column: 15, scope: !6729)
!6738 = !DILocation(line: 38, column: 22, scope: !6729)
!6739 = !DILocation(line: 40, column: 8, scope: !6729)
!6740 = !DILocation(line: 44, column: 25, scope: !6729)
!6741 = !DILocation(line: 44, column: 5, scope: !6729)
!6742 = !DILocation(line: 41, column: 16, scope: !6729)
!6743 = !DILocalVariable(name: "self", scope: !6744, file: !6730, line: 41, type: !366, align: 8)
!6744 = !DILexicalBlockFile(scope: !6745, file: !6730, discriminator: 0)
!6745 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he6f0451bd5ba00ccE", scope: !2489, file: !2488, line: 734, type: !6163, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !6746)
!6746 = !{!6743}
!6747 = !DILocation(line: 41, column: 16, scope: !6744, inlinedAt: !6742)
!6748 = !DILocation(line: 41, column: 37, scope: !6729)
!6749 = !DILocation(line: 45, column: 2, scope: !6729)
!6750 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core5slice6memchr6memchr28_$u7b$$u7b$closure$u7d$$u7d$17h7f548bbf06692784E", scope: !6751, file: !6730, line: 41, type: !6752, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !6758)
!6751 = !DINamespace(name: "memchr", scope: !6731)
!6752 = !DISubroutineType(types: !6753)
!6753 = !{!1159, !6754, !556}
!6754 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::memchr::memchr::{closure_env#0}", baseType: !6755, size: 64, align: 64, dwarfAddressSpace: 0)
!6755 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6751, file: !2, size: 64, align: 64, elements: !6756, templateParams: !23, identifier: "b00955afa1c965f699a759ca804d52c1")
!6756 = !{!6757}
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__x", scope: !6755, file: !2, baseType: !556, size: 64, align: 64)
!6758 = !{!6759, !6760}
!6759 = !DILocalVariable(name: "elt", arg: 2, scope: !6750, file: !6730, line: 41, type: !556)
!6760 = !DILocalVariable(name: "x", scope: !6750, file: !6730, line: 38, type: !70, align: 1)
!6761 = !DILocation(line: 38, column: 15, scope: !6750)
!6762 = !DILocation(line: 41, column: 38, scope: !6750)
!6763 = !DILocation(line: 41, column: 43, scope: !6750)
!6764 = !DILocation(line: 41, column: 51, scope: !6750)
!6765 = !DILocation(line: 41, column: 42, scope: !6750)
!6766 = distinct !DISubprogram(name: "map<&core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::{impl#16}::ascend::{closure_env#0}<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h3b6f6003e31e960bE", scope: !6767, file: !1664, line: 923, type: !6781, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6832, retainedNodes: !6827)
!6767 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", scope: !177, file: !2, size: 64, align: 64, elements: !6768, templateParams: !23, identifier: "e18bb3581e013d9c1337063b4cfe7cf9")
!6768 = !{!6769}
!6769 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6767, file: !2, size: 64, align: 64, elements: !6770, templateParams: !23, identifier: "85bb1eb768d39be376e2507dbdee3480", discriminator: !6780)
!6770 = !{!6771, !6776}
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6769, file: !2, baseType: !6772, size: 64, align: 64, extraData: i64 0)
!6772 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6767, file: !2, size: 64, align: 64, elements: !23, templateParams: !6773, identifier: "8a34173a7fdbc938c09c7a390234bd")
!6773 = !{!6774}
!6774 = !DITemplateTypeParameter(name: "T", type: !6775)
!6775 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1354, size: 64, align: 64, dwarfAddressSpace: 0)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6769, file: !2, baseType: !6777, size: 64, align: 64)
!6777 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6767, file: !2, size: 64, align: 64, elements: !6778, templateParams: !6773, identifier: "9990f367fe2f343297528b33e6aaec7a")
!6778 = !{!6779}
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6777, file: !2, baseType: !6775, size: 64, align: 64)
!6780 = !DIDerivedType(tag: DW_TAG_member, scope: !6767, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!6781 = !DISubroutineType(types: !6782)
!6782 = !{!6783, !6767, !6820}
!6783 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", scope: !177, file: !2, size: 192, align: 64, elements: !6784, templateParams: !23, identifier: "8da1c146b6bee555270fb505fc0fe20e")
!6784 = !{!6785}
!6785 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6783, file: !2, size: 192, align: 64, elements: !6786, templateParams: !23, identifier: "a6a4da94ab401f89ef266662bc6f118a", discriminator: !6819)
!6786 = !{!6787, !6815}
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6785, file: !2, baseType: !6788, size: 192, align: 64, extraData: i64 0)
!6788 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6783, file: !2, size: 192, align: 64, elements: !23, templateParams: !6789, identifier: "b3031bacadd46269ad95bbe6ca31e104")
!6789 = !{!6790}
!6790 = !DITemplateTypeParameter(name: "T", type: !6791)
!6791 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", scope: !1335, file: !2, size: 192, align: 64, elements: !6792, templateParams: !6813, identifier: "7d1c1531fcd30d8a45fff67056d54b47")
!6792 = !{!6793, !6811, !6812}
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6791, file: !2, baseType: !6794, size: 128, align: 64)
!6794 = !DICompositeType(tag: DW_TAG_structure_type, name: "NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", scope: !1335, file: !2, size: 128, align: 64, elements: !6795, templateParams: !6809, identifier: "37a46a69903bdc8dec695ed9129ddf0a")
!6795 = !{!6796, !6797, !6798}
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !6794, file: !2, baseType: !9, size: 64, align: 64)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6794, file: !2, baseType: !1339, size: 64, align: 64, offset: 64)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6794, file: !2, baseType: !6799, align: 8)
!6799 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !6800, identifier: "84989065dcb71307c50fd24002f46c9")
!6800 = !{!6801}
!6801 = !DITemplateTypeParameter(name: "T", type: !6802)
!6802 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)", file: !2, align: 8, elements: !6803, templateParams: !23, identifier: "3a6be81adc5f041da08261a7f5cc3de9")
!6803 = !{!6804, !6805}
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6802, file: !2, baseType: !1451, align: 8)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6802, file: !2, baseType: !6806, align: 8)
!6806 = !DICompositeType(tag: DW_TAG_structure_type, name: "Internal", scope: !1452, file: !2, align: 8, elements: !6807, templateParams: !23, identifier: "ef04a66c62eee38439476d69b5c58218")
!6807 = !{!6808}
!6808 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6806, file: !2, align: 8, elements: !23, identifier: "b0d78e3e91dc4460426f3b22a9e50c0d")
!6809 = !{!1460, !1375, !1387, !6810}
!6810 = !DITemplateTypeParameter(name: "Type", type: !6806)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !6791, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6791, file: !2, baseType: !1489, align: 8)
!6813 = !{!6814, !1497}
!6814 = !DITemplateTypeParameter(name: "Node", type: !6794)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6785, file: !2, baseType: !6816, size: 192, align: 64)
!6816 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6783, file: !2, size: 192, align: 64, elements: !6817, templateParams: !6789, identifier: "e771ef958aa60f95626a8a7b2525e198")
!6817 = !{!6818}
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6816, file: !2, baseType: !6791, size: 192, align: 64)
!6819 = !DIDerivedType(tag: DW_TAG_member, scope: !6783, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!6820 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", scope: !6821, file: !2, size: 128, align: 64, elements: !6823, templateParams: !23, identifier: "d2fed3662a553c96292778d2115a77c")
!6821 = !DINamespace(name: "ascend", scope: !6822)
!6822 = !DINamespace(name: "{impl#16}", scope: !1335)
!6823 = !{!6824, !6825}
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__height", scope: !6820, file: !2, baseType: !393, size: 64, align: 64)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__leaf_ptr", scope: !6820, file: !2, baseType: !6826, size: 64, align: 64, offset: 64)
!6826 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1342, size: 64, align: 64, dwarfAddressSpace: 0)
!6827 = !{!6828, !6829, !6830}
!6828 = !DILocalVariable(name: "self", arg: 1, scope: !6766, file: !1664, line: 923, type: !6767)
!6829 = !DILocalVariable(name: "f", arg: 2, scope: !6766, file: !1664, line: 923, type: !6820)
!6830 = !DILocalVariable(name: "x", scope: !6831, file: !1664, line: 929, type: !6775, align: 8)
!6831 = distinct !DILexicalBlock(scope: !6766, file: !1664, line: 929, column: 13)
!6832 = !{!6774, !6833, !6834}
!6833 = !DITemplateTypeParameter(name: "U", type: !6791)
!6834 = !DITemplateTypeParameter(name: "F", type: !6820)
!6835 = !DILocation(line: 923, column: 28, scope: !6766)
!6836 = !DILocation(line: 923, column: 34, scope: !6766)
!6837 = !DILocation(line: 928, column: 15, scope: !6766)
!6838 = !DILocation(line: 928, column: 9, scope: !6766)
!6839 = !DILocation(line: 930, column: 21, scope: !6766)
!6840 = !DILocation(line: 929, column: 18, scope: !6766)
!6841 = !DILocation(line: 929, column: 18, scope: !6831)
!6842 = !DILocation(line: 929, column: 29, scope: !6831)
!6843 = !DILocation(line: 929, column: 24, scope: !6831)
!6844 = !DILocation(line: 929, column: 33, scope: !6766)
!6845 = !DILocation(line: 932, column: 5, scope: !6766)
!6846 = !DILocation(line: 932, column: 6, scope: !6766)
!6847 = distinct !DISubprogram(name: "map<char, (usize, char), core::str::iter::{impl#6}::next_back::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h4f6218bb1bf4933aE", scope: !566, file: !1664, line: 923, type: !6848, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6855, retainedNodes: !6850)
!6848 = !DISubroutineType(types: !6849)
!6849 = !{!522, !566, !590}
!6850 = !{!6851, !6852, !6853}
!6851 = !DILocalVariable(name: "self", arg: 1, scope: !6847, file: !1664, line: 923, type: !566)
!6852 = !DILocalVariable(name: "f", arg: 2, scope: !6847, file: !1664, line: 923, type: !590)
!6853 = !DILocalVariable(name: "x", scope: !6854, file: !1664, line: 929, type: !534, align: 4)
!6854 = distinct !DILexicalBlock(scope: !6847, file: !1664, line: 929, column: 13)
!6855 = !{!573, !6856, !6857}
!6856 = !DITemplateTypeParameter(name: "U", type: !530)
!6857 = !DITemplateTypeParameter(name: "F", type: !590)
!6858 = !DILocation(line: 923, column: 28, scope: !6847)
!6859 = !DILocation(line: 923, column: 34, scope: !6847)
!6860 = !DILocation(line: 928, column: 15, scope: !6847)
!6861 = !DILocation(line: 928, column: 9, scope: !6847)
!6862 = !DILocation(line: 930, column: 21, scope: !6847)
!6863 = !DILocation(line: 929, column: 18, scope: !6847)
!6864 = !DILocation(line: 929, column: 18, scope: !6854)
!6865 = !DILocation(line: 929, column: 29, scope: !6854)
!6866 = !DILocation(line: 929, column: 24, scope: !6854)
!6867 = !DILocation(line: 929, column: 33, scope: !6847)
!6868 = !DILocation(line: 932, column: 5, scope: !6847)
!6869 = !DILocation(line: 932, column: 6, scope: !6847)
!6870 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#2}::next_back::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h54d2ab215f40a2d9E", scope: !2672, file: !1664, line: 923, type: !6871, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6880, retainedNodes: !6875)
!6871 = !DISubroutineType(types: !6872)
!6872 = !{!566, !2672, !6873}
!6873 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6874, file: !2, align: 8, elements: !23, identifier: "e33d54d5868c0f36106fefed41569271")
!6874 = !DINamespace(name: "next_back", scope: !563)
!6875 = !{!6876, !6877, !6878}
!6876 = !DILocalVariable(name: "self", arg: 1, scope: !6870, file: !1664, line: 923, type: !2672)
!6877 = !DILocalVariable(name: "f", arg: 2, scope: !6870, file: !1664, line: 923, type: !6873)
!6878 = !DILocalVariable(name: "x", scope: !6879, file: !1664, line: 929, type: !351, align: 4)
!6879 = distinct !DILexicalBlock(scope: !6870, file: !1664, line: 929, column: 13)
!6880 = !{!2679, !6881, !6882}
!6881 = !DITemplateTypeParameter(name: "U", type: !534)
!6882 = !DITemplateTypeParameter(name: "F", type: !6873)
!6883 = !DILocation(line: 923, column: 28, scope: !6870)
!6884 = !DILocation(line: 923, column: 34, scope: !6870)
!6885 = !DILocation(line: 928, column: 15, scope: !6870)
!6886 = !DILocation(line: 928, column: 9, scope: !6870)
!6887 = !DILocation(line: 930, column: 21, scope: !6870)
!6888 = !DILocation(line: 929, column: 18, scope: !6870)
!6889 = !DILocation(line: 929, column: 18, scope: !6879)
!6890 = !DILocation(line: 929, column: 29, scope: !6879)
!6891 = !DILocation(line: 929, column: 24, scope: !6879)
!6892 = !DILocation(line: 929, column: 33, scope: !6870)
!6893 = !DILocation(line: 932, column: 5, scope: !6870)
!6894 = !DILocation(line: 932, column: 6, scope: !6870)
!6895 = distinct !DISubprogram(name: "map<&&str, &[core::mem::maybe_uninit::MaybeUninit<u8>], &mut alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hc747a901facfa698E", scope: !6896, file: !1664, line: 923, type: !6907, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6927, retainedNodes: !6922)
!6896 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&&str>", scope: !177, file: !2, size: 64, align: 64, elements: !6897, templateParams: !23, identifier: "84d983b3b62a1584e607eb9568951c81")
!6897 = !{!6898}
!6898 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6896, file: !2, size: 64, align: 64, elements: !6899, templateParams: !23, identifier: "42e9c00213f0fbdfd68230a7ab8c7e", discriminator: !6906)
!6899 = !{!6900, !6902}
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6898, file: !2, baseType: !6901, size: 64, align: 64, extraData: i64 0)
!6901 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6896, file: !2, size: 64, align: 64, elements: !23, templateParams: !483, identifier: "cdfde7c90be5777a1325da870ff6f38d")
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6898, file: !2, baseType: !6903, size: 64, align: 64)
!6903 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6896, file: !2, size: 64, align: 64, elements: !6904, templateParams: !483, identifier: "699a4b5135c9ad29b8983ffe42362098")
!6904 = !{!6905}
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6903, file: !2, baseType: !199, size: 64, align: 64)
!6906 = !DIDerivedType(tag: DW_TAG_member, scope: !6896, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!6907 = !DISubroutineType(types: !6908)
!6908 = !{!6909, !6896, !3495}
!6909 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !177, file: !2, size: 128, align: 64, elements: !6910, templateParams: !23, identifier: "98931535bfad1206d7316ef99680dd55")
!6910 = !{!6911}
!6911 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6909, file: !2, size: 128, align: 64, elements: !6912, templateParams: !23, identifier: "8c1d5aca260e7a64c4a2e4630ce4df42", discriminator: !6921)
!6912 = !{!6913, !6917}
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6911, file: !2, baseType: !6914, size: 128, align: 64, extraData: i64 0)
!6914 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6909, file: !2, size: 128, align: 64, elements: !23, templateParams: !6915, identifier: "72c8f5536d0f3e38f0465a7b2f2c9e41")
!6915 = !{!6916}
!6916 = !DITemplateTypeParameter(name: "T", type: !3491)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6911, file: !2, baseType: !6918, size: 128, align: 64)
!6918 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6909, file: !2, size: 128, align: 64, elements: !6919, templateParams: !6915, identifier: "7ad6336164ec99e7a6121ba39317b874")
!6919 = !{!6920}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6918, file: !2, baseType: !3491, size: 128, align: 64)
!6921 = !DIDerivedType(tag: DW_TAG_member, scope: !6909, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!6922 = !{!6923, !6924, !6925}
!6923 = !DILocalVariable(name: "self", arg: 1, scope: !6895, file: !1664, line: 923, type: !6896)
!6924 = !DILocalVariable(name: "f", arg: 2, scope: !6895, file: !1664, line: 923, type: !3495)
!6925 = !DILocalVariable(name: "x", scope: !6926, file: !1664, line: 929, type: !199, align: 8)
!6926 = distinct !DILexicalBlock(scope: !6895, file: !1664, line: 929, column: 13)
!6927 = !{!484, !6928, !6929}
!6928 = !DITemplateTypeParameter(name: "U", type: !3491)
!6929 = !DITemplateTypeParameter(name: "F", type: !3495)
!6930 = !DILocation(line: 923, column: 28, scope: !6895)
!6931 = !DILocation(line: 923, column: 34, scope: !6895)
!6932 = !DILocation(line: 928, column: 15, scope: !6895)
!6933 = !DILocation(line: 928, column: 9, scope: !6895)
!6934 = !DILocation(line: 930, column: 21, scope: !6895)
!6935 = !DILocation(line: 929, column: 18, scope: !6895)
!6936 = !DILocation(line: 929, column: 18, scope: !6926)
!6937 = !DILocation(line: 929, column: 29, scope: !6926)
!6938 = !DILocation(line: 929, column: 24, scope: !6926)
!6939 = !DILocation(line: 929, column: 33, scope: !6895)
!6940 = !DILocation(line: 932, column: 5, scope: !6895)
!6941 = !DILocation(line: 932, column: 6, scope: !6895)
!6942 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#0}::next::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hd3cf823748f92406E", scope: !2672, file: !1664, line: 923, type: !6943, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6953, retainedNodes: !6948)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{!566, !2672, !6945}
!6945 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6946, file: !2, align: 8, elements: !23, identifier: "4cf36c936363045ec43ec5a0e97329aa")
!6946 = !DINamespace(name: "next", scope: !6947)
!6947 = !DINamespace(name: "{impl#0}", scope: !519)
!6948 = !{!6949, !6950, !6951}
!6949 = !DILocalVariable(name: "self", arg: 1, scope: !6942, file: !1664, line: 923, type: !2672)
!6950 = !DILocalVariable(name: "f", arg: 2, scope: !6942, file: !1664, line: 923, type: !6945)
!6951 = !DILocalVariable(name: "x", scope: !6952, file: !1664, line: 929, type: !351, align: 4)
!6952 = distinct !DILexicalBlock(scope: !6942, file: !1664, line: 929, column: 13)
!6953 = !{!2679, !6881, !6954}
!6954 = !DITemplateTypeParameter(name: "F", type: !6945)
!6955 = !DILocation(line: 923, column: 28, scope: !6942)
!6956 = !DILocation(line: 923, column: 34, scope: !6942)
!6957 = !DILocation(line: 928, column: 15, scope: !6942)
!6958 = !DILocation(line: 928, column: 9, scope: !6942)
!6959 = !DILocation(line: 930, column: 21, scope: !6942)
!6960 = !DILocation(line: 929, column: 18, scope: !6942)
!6961 = !DILocation(line: 929, column: 18, scope: !6952)
!6962 = !DILocation(line: 929, column: 29, scope: !6952)
!6963 = !DILocation(line: 929, column: 24, scope: !6952)
!6964 = !DILocation(line: 929, column: 33, scope: !6942)
!6965 = !DILocation(line: 932, column: 5, scope: !6942)
!6966 = !DILocation(line: 932, column: 6, scope: !6942)
!6967 = distinct !DISubprogram(name: "ok_or<&str, usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h6b3fe0e75b710255E", scope: !176, file: !1664, line: 1051, type: !6968, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6978, retainedNodes: !6984)
!6968 = !DISubroutineType(types: !6969)
!6969 = !{!6970, !176, !9}
!6970 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&str, usize>", scope: !2134, file: !2, size: 192, align: 64, elements: !6971, templateParams: !23, identifier: "866e6a82f50300214bb1d9684c60ba2c")
!6971 = !{!6972}
!6972 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6970, file: !2, size: 192, align: 64, elements: !6973, templateParams: !23, identifier: "6a2435d74eb0306fb8f10e049b1052ee", discriminator: !6983)
!6973 = !{!6974, !6979}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6972, file: !2, baseType: !6975, size: 192, align: 64, extraData: i64 0)
!6975 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6970, file: !2, size: 192, align: 64, elements: !6976, templateParams: !6978, identifier: "54fe0956127f40d4892bf13652d58cf9")
!6976 = !{!6977}
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6975, file: !2, baseType: !137, size: 128, align: 64, offset: 64)
!6978 = !{!184, !5242}
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6972, file: !2, baseType: !6980, size: 192, align: 64, extraData: i64 1)
!6980 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6970, file: !2, size: 192, align: 64, elements: !6981, templateParams: !6978, identifier: "1969993abee4e2f3d4073597e0aa749a")
!6981 = !{!6982}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6980, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!6983 = !DIDerivedType(tag: DW_TAG_member, scope: !6970, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!6984 = !{!6985, !6986, !6987}
!6985 = !DILocalVariable(name: "self", arg: 1, scope: !6967, file: !1664, line: 1051, type: !176)
!6986 = !DILocalVariable(name: "err", arg: 2, scope: !6967, file: !1664, line: 1051, type: !9)
!6987 = !DILocalVariable(name: "v", scope: !6988, file: !1664, line: 1056, type: !137, align: 8)
!6988 = distinct !DILexicalBlock(scope: !6967, file: !1664, line: 1056, column: 13)
!6989 = !DILocation(line: 1051, column: 27, scope: !6967)
!6990 = !DILocation(line: 1051, column: 33, scope: !6967)
!6991 = !DILocation(line: 1055, column: 15, scope: !6967)
!6992 = !DILocation(line: 1055, column: 9, scope: !6967)
!6993 = !DILocation(line: 1057, column: 25, scope: !6967)
!6994 = !DILocation(line: 1057, column: 21, scope: !6967)
!6995 = !DILocation(line: 1057, column: 28, scope: !6967)
!6996 = !DILocation(line: 1056, column: 18, scope: !6967)
!6997 = !DILocation(line: 1056, column: 18, scope: !6988)
!6998 = !DILocation(line: 1056, column: 24, scope: !6988)
!6999 = !DILocation(line: 1056, column: 28, scope: !6967)
!7000 = !DILocation(line: 1059, column: 5, scope: !6967)
!7001 = !DILocation(line: 1059, column: 6, scope: !6967)
!7002 = distinct !DISubprogram(name: "expect<std::ffi::os_str::OsString>", linkageName: "_ZN4core6option15Option$LT$T$GT$6expect17h7993371ccbea4fd2E", scope: !1388, file: !1664, line: 735, type: !7003, scopeLine: 735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1394, retainedNodes: !7005)
!7003 = !DISubroutineType(types: !7004)
!7004 = !{!1376, !1388, !137, !344}
!7005 = !{!7006, !7007, !7008}
!7006 = !DILocalVariable(name: "self", arg: 1, scope: !7002, file: !1664, line: 735, type: !1388)
!7007 = !DILocalVariable(name: "msg", arg: 2, scope: !7002, file: !1664, line: 735, type: !137)
!7008 = !DILocalVariable(name: "val", scope: !7009, file: !1664, line: 737, type: !1376, align: 8)
!7009 = distinct !DILexicalBlock(scope: !7002, file: !1664, line: 737, column: 13)
!7010 = !DILocation(line: 737, column: 18, scope: !7009)
!7011 = !DILocation(line: 735, column: 25, scope: !7002)
!7012 = !DILocation(line: 735, column: 31, scope: !7002)
!7013 = !DILocation(line: 736, column: 15, scope: !7002)
!7014 = !DILocation(line: 736, column: 9, scope: !7002)
!7015 = !DILocation(line: 738, column: 21, scope: !7002)
!7016 = !DILocation(line: 737, column: 18, scope: !7002)
!7017 = !DILocation(line: 740, column: 6, scope: !7002)
!7018 = distinct !DISubprogram(name: "map_or<&str, bool, build_script_build::rustc_minor_nightly::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$6map_or17hfbe3db815de80057E", scope: !176, file: !1664, line: 985, type: !7019, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7030, retainedNodes: !7024)
!7019 = !DISubroutineType(types: !7020)
!7020 = !{!1159, !176, !1159, !7021}
!7021 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7022, file: !2, align: 8, elements: !23, identifier: "2b6299010d4f22cd3854df78952c5c91")
!7022 = !DINamespace(name: "rustc_minor_nightly", scope: !7023)
!7023 = !DINamespace(name: "build_script_build", scope: null)
!7024 = !{!7025, !7026, !7027, !7028}
!7025 = !DILocalVariable(name: "self", arg: 1, scope: !7018, file: !1664, line: 985, type: !176)
!7026 = !DILocalVariable(name: "default", arg: 2, scope: !7018, file: !1664, line: 985, type: !1159)
!7027 = !DILocalVariable(name: "f", arg: 3, scope: !7018, file: !1664, line: 985, type: !7021)
!7028 = !DILocalVariable(name: "t", scope: !7029, file: !1664, line: 992, type: !137, align: 8)
!7029 = distinct !DILexicalBlock(scope: !7018, file: !1664, line: 992, column: 13)
!7030 = !{!184, !7031, !7032}
!7031 = !DITemplateTypeParameter(name: "U", type: !1159)
!7032 = !DITemplateTypeParameter(name: "F", type: !7021)
!7033 = !DILocation(line: 985, column: 31, scope: !7018)
!7034 = !DILocation(line: 985, column: 37, scope: !7018)
!7035 = !DILocation(line: 985, column: 49, scope: !7018)
!7036 = !DILocation(line: 991, column: 15, scope: !7018)
!7037 = !DILocation(line: 991, column: 9, scope: !7018)
!7038 = !DILocation(line: 993, column: 21, scope: !7018)
!7039 = !DILocation(line: 992, column: 18, scope: !7018)
!7040 = !DILocation(line: 992, column: 18, scope: !7029)
!7041 = !DILocation(line: 992, column: 24, scope: !7029)
!7042 = !DILocation(line: 995, column: 5, scope: !7018)
!7043 = !DILocation(line: 992, column: 27, scope: !7018)
!7044 = !DILocation(line: 985, column: 5, scope: !7018)
!7045 = !DILocation(line: 995, column: 6, scope: !7018)
!7046 = distinct !DISubprogram(name: "and_then<usize, usize, alloc::str::join_generic_copy::{closure_env#0}<str, u8, &str>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h5c7f1dae6f5ed549E", scope: !455, file: !1664, line: 1256, type: !7047, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7057, retainedNodes: !7052)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{!455, !455, !7049}
!7049 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<str, u8, &str>", scope: !488, file: !2, size: 128, align: 64, elements: !7050, templateParams: !23, identifier: "56c589d1ec2af882961e56d3964c96a7")
!7050 = !{!7051}
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !7049, file: !2, baseType: !2068, size: 128, align: 64)
!7052 = !{!7053, !7054, !7055}
!7053 = !DILocalVariable(name: "self", arg: 1, scope: !7046, file: !1664, line: 1256, type: !455)
!7054 = !DILocalVariable(name: "f", arg: 2, scope: !7046, file: !1664, line: 1256, type: !7049)
!7055 = !DILocalVariable(name: "x", scope: !7056, file: !1664, line: 1262, type: !9, align: 8)
!7056 = distinct !DILexicalBlock(scope: !7046, file: !1664, line: 1262, column: 13)
!7057 = !{!462, !7058, !7059}
!7058 = !DITemplateTypeParameter(name: "U", type: !9)
!7059 = !DITemplateTypeParameter(name: "F", type: !7049)
!7060 = !DILocation(line: 1256, column: 33, scope: !7046)
!7061 = !DILocation(line: 1256, column: 39, scope: !7046)
!7062 = !DILocation(line: 1261, column: 15, scope: !7046)
!7063 = !DILocation(line: 1261, column: 9, scope: !7046)
!7064 = !DILocation(line: 1263, column: 21, scope: !7046)
!7065 = !DILocation(line: 1262, column: 18, scope: !7046)
!7066 = !DILocation(line: 1262, column: 18, scope: !7056)
!7067 = !DILocation(line: 1262, column: 24, scope: !7056)
!7068 = !DILocation(line: 1262, column: 27, scope: !7046)
!7069 = !DILocation(line: 1265, column: 5, scope: !7046)
!7070 = !DILocation(line: 1265, column: 6, scope: !7046)
!7071 = distinct !DISubprogram(name: "and_then<&str, u64, build_script_build::emcc_version_code::{closure_env#2}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h76b539b5430f215aE", scope: !176, file: !1664, line: 1256, type: !7072, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7093, retainedNodes: !7088)
!7072 = !DISubroutineType(types: !7073)
!7073 = !{!7074, !176, !7086}
!7074 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u64>", scope: !177, file: !2, size: 128, align: 64, elements: !7075, templateParams: !23, identifier: "16e153c2fe52db6a1dfc345930bd0217")
!7075 = !{!7076}
!7076 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7074, file: !2, size: 128, align: 64, elements: !7077, templateParams: !23, identifier: "b3956402942b10598bd4a19f6c646804", discriminator: !7085)
!7077 = !{!7078, !7081}
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7076, file: !2, baseType: !7079, size: 128, align: 64, extraData: i64 0)
!7079 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7074, file: !2, size: 128, align: 64, elements: !23, templateParams: !7080, identifier: "e1b9c0ac5f4b9eb1b4dff91b1fcb2bb3")
!7080 = !{!4570}
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7076, file: !2, baseType: !7082, size: 128, align: 64, extraData: i64 1)
!7082 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7074, file: !2, size: 128, align: 64, elements: !7083, templateParams: !7080, identifier: "aa0e85c23318717771faa5f022ef9a7a")
!7083 = !{!7084}
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7082, file: !2, baseType: !190, size: 64, align: 64, offset: 64)
!7085 = !DIDerivedType(tag: DW_TAG_member, scope: !7074, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7086 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}", scope: !7087, file: !2, align: 8, elements: !23, identifier: "dc0dbca1e27ac94545f3f9175bdf4fe5")
!7087 = !DINamespace(name: "emcc_version_code", scope: !7023)
!7088 = !{!7089, !7090, !7091}
!7089 = !DILocalVariable(name: "self", arg: 1, scope: !7071, file: !1664, line: 1256, type: !176)
!7090 = !DILocalVariable(name: "f", arg: 2, scope: !7071, file: !1664, line: 1256, type: !7086)
!7091 = !DILocalVariable(name: "x", scope: !7092, file: !1664, line: 1262, type: !137, align: 8)
!7092 = distinct !DILexicalBlock(scope: !7071, file: !1664, line: 1262, column: 13)
!7093 = !{!184, !7094, !7095}
!7094 = !DITemplateTypeParameter(name: "U", type: !190)
!7095 = !DITemplateTypeParameter(name: "F", type: !7086)
!7096 = !DILocation(line: 1256, column: 33, scope: !7071)
!7097 = !DILocation(line: 1256, column: 39, scope: !7071)
!7098 = !DILocation(line: 1261, column: 15, scope: !7071)
!7099 = !DILocation(line: 1261, column: 9, scope: !7071)
!7100 = !DILocation(line: 1263, column: 21, scope: !7071)
!7101 = !DILocation(line: 1262, column: 18, scope: !7071)
!7102 = !DILocation(line: 1262, column: 18, scope: !7092)
!7103 = !DILocation(line: 1262, column: 24, scope: !7092)
!7104 = !DILocation(line: 1262, column: 27, scope: !7071)
!7105 = !DILocation(line: 1265, column: 5, scope: !7071)
!7106 = !DILocation(line: 1265, column: 6, scope: !7071)
!7107 = distinct !DISubprogram(name: "and_then<&str, u64, build_script_build::emcc_version_code::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h7746da4fdaf699a1E", scope: !176, file: !1664, line: 1256, type: !7108, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7116, retainedNodes: !7111)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{!7074, !176, !7110}
!7110 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !7087, file: !2, align: 8, elements: !23, identifier: "cf1fcf03cb3110e8bf780f5899d8fd66")
!7111 = !{!7112, !7113, !7114}
!7112 = !DILocalVariable(name: "self", arg: 1, scope: !7107, file: !1664, line: 1256, type: !176)
!7113 = !DILocalVariable(name: "f", arg: 2, scope: !7107, file: !1664, line: 1256, type: !7110)
!7114 = !DILocalVariable(name: "x", scope: !7115, file: !1664, line: 1262, type: !137, align: 8)
!7115 = distinct !DILexicalBlock(scope: !7107, file: !1664, line: 1262, column: 13)
!7116 = !{!184, !7094, !7117}
!7117 = !DITemplateTypeParameter(name: "F", type: !7110)
!7118 = !DILocation(line: 1256, column: 33, scope: !7107)
!7119 = !DILocation(line: 1256, column: 39, scope: !7107)
!7120 = !DILocation(line: 1261, column: 15, scope: !7107)
!7121 = !DILocation(line: 1261, column: 9, scope: !7107)
!7122 = !DILocation(line: 1263, column: 21, scope: !7107)
!7123 = !DILocation(line: 1262, column: 18, scope: !7107)
!7124 = !DILocation(line: 1262, column: 18, scope: !7115)
!7125 = !DILocation(line: 1262, column: 24, scope: !7115)
!7126 = !DILocation(line: 1262, column: 27, scope: !7107)
!7127 = !DILocation(line: 1265, column: 5, scope: !7107)
!7128 = !DILocation(line: 1265, column: 6, scope: !7107)
!7129 = distinct !DISubprogram(name: "and_then<&str, u64, build_script_build::emcc_version_code::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17hdee32727e12964cfE", scope: !176, file: !1664, line: 1256, type: !7130, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7138, retainedNodes: !7133)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!7074, !176, !7132}
!7132 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7087, file: !2, align: 8, elements: !23, identifier: "2835a4a32ac60e744c03cc175d71cdc0")
!7133 = !{!7134, !7135, !7136}
!7134 = !DILocalVariable(name: "self", arg: 1, scope: !7129, file: !1664, line: 1256, type: !176)
!7135 = !DILocalVariable(name: "f", arg: 2, scope: !7129, file: !1664, line: 1256, type: !7132)
!7136 = !DILocalVariable(name: "x", scope: !7137, file: !1664, line: 1262, type: !137, align: 8)
!7137 = distinct !DILexicalBlock(scope: !7129, file: !1664, line: 1262, column: 13)
!7138 = !{!184, !7094, !7139}
!7139 = !DITemplateTypeParameter(name: "F", type: !7132)
!7140 = !DILocation(line: 1256, column: 33, scope: !7129)
!7141 = !DILocation(line: 1256, column: 39, scope: !7129)
!7142 = !DILocation(line: 1261, column: 15, scope: !7129)
!7143 = !DILocation(line: 1261, column: 9, scope: !7129)
!7144 = !DILocation(line: 1263, column: 21, scope: !7129)
!7145 = !DILocation(line: 1262, column: 18, scope: !7129)
!7146 = !DILocation(line: 1262, column: 18, scope: !7137)
!7147 = !DILocation(line: 1262, column: 24, scope: !7137)
!7148 = !DILocation(line: 1262, column: 27, scope: !7129)
!7149 = !DILocation(line: 1265, column: 5, scope: !7129)
!7150 = !DILocation(line: 1265, column: 6, scope: !7129)
!7151 = distinct !DISubprogram(name: "unwrap_or<i32>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h85f97c45e735c0d6E", scope: !2777, file: !1664, line: 796, type: !7152, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2783, retainedNodes: !7154)
!7152 = !DISubroutineType(types: !7153)
!7153 = !{!62, !2777, !62}
!7154 = !{!7155, !7156, !7157}
!7155 = !DILocalVariable(name: "self", arg: 1, scope: !7151, file: !1664, line: 796, type: !2777)
!7156 = !DILocalVariable(name: "default", arg: 2, scope: !7151, file: !1664, line: 796, type: !62)
!7157 = !DILocalVariable(name: "x", scope: !7158, file: !1664, line: 801, type: !62, align: 4)
!7158 = distinct !DILexicalBlock(scope: !7151, file: !1664, line: 801, column: 13)
!7159 = !DILocation(line: 796, column: 28, scope: !7151)
!7160 = !DILocation(line: 796, column: 34, scope: !7151)
!7161 = !DILocation(line: 800, column: 15, scope: !7151)
!7162 = !DILocation(line: 800, column: 9, scope: !7151)
!7163 = !DILocation(line: 802, column: 21, scope: !7151)
!7164 = !DILocation(line: 801, column: 18, scope: !7151)
!7165 = !DILocation(line: 801, column: 18, scope: !7158)
!7166 = !DILocation(line: 801, column: 24, scope: !7158)
!7167 = !DILocation(line: 801, column: 24, scope: !7151)
!7168 = !DILocation(line: 804, column: 5, scope: !7151)
!7169 = !DILocation(line: 804, column: 6, scope: !7151)
!7170 = distinct !DISubprogram(name: "unwrap_or<u64>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17hbd4e8fa013b1794aE", scope: !7074, file: !1664, line: 796, type: !7171, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7080, retainedNodes: !7173)
!7171 = !DISubroutineType(types: !7172)
!7172 = !{!190, !7074, !190}
!7173 = !{!7174, !7175, !7176}
!7174 = !DILocalVariable(name: "self", arg: 1, scope: !7170, file: !1664, line: 796, type: !7074)
!7175 = !DILocalVariable(name: "default", arg: 2, scope: !7170, file: !1664, line: 796, type: !190)
!7176 = !DILocalVariable(name: "x", scope: !7177, file: !1664, line: 801, type: !190, align: 8)
!7177 = distinct !DILexicalBlock(scope: !7170, file: !1664, line: 801, column: 13)
!7178 = !DILocation(line: 796, column: 28, scope: !7170)
!7179 = !DILocation(line: 796, column: 34, scope: !7170)
!7180 = !DILocation(line: 800, column: 15, scope: !7170)
!7181 = !DILocation(line: 800, column: 9, scope: !7170)
!7182 = !DILocation(line: 802, column: 21, scope: !7170)
!7183 = !DILocation(line: 801, column: 18, scope: !7170)
!7184 = !DILocation(line: 801, column: 18, scope: !7177)
!7185 = !DILocation(line: 801, column: 24, scope: !7177)
!7186 = !DILocation(line: 801, column: 24, scope: !7170)
!7187 = !DILocation(line: 804, column: 5, scope: !7170)
!7188 = !DILocation(line: 804, column: 6, scope: !7170)
!7189 = distinct !DISubprogram(name: "unwrap_or_default<alloc::string::String, std::env::VarError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17h622dd751d82944c7E", scope: !2418, file: !5292, line: 1138, type: !7190, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2426, retainedNodes: !7192)
!7190 = !DISubroutineType(types: !7191)
!7191 = !{!312, !2418}
!7192 = !{!7193, !7194}
!7193 = !DILocalVariable(name: "self", arg: 1, scope: !7189, file: !5292, line: 1138, type: !2418)
!7194 = !DILocalVariable(name: "x", scope: !7195, file: !5292, line: 1143, type: !312, align: 8)
!7195 = distinct !DILexicalBlock(scope: !7189, file: !5292, line: 1143, column: 13)
!7196 = !DILocation(line: 1138, column: 30, scope: !7189)
!7197 = !DILocation(line: 1143, column: 16, scope: !7195)
!7198 = !DILocation(line: 1142, column: 15, scope: !7189)
!7199 = !DILocation(line: 1142, column: 9, scope: !7189)
!7200 = !DILocation(line: 1143, column: 16, scope: !7189)
!7201 = !DILocation(line: 1143, column: 22, scope: !7195)
!7202 = !DILocation(line: 1143, column: 22, scope: !7189)
!7203 = !DILocation(line: 1144, column: 23, scope: !7189)
!7204 = !DILocation(line: 1146, column: 5, scope: !7189)
!7205 = !DILocation(line: 1138, column: 5, scope: !7189)
!7206 = !DILocation(line: 1146, column: 6, scope: !7189)
!7207 = distinct !DISubprogram(name: "ok<u64, core::num::error::ParseIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h03881c7d0850af22E", scope: !4561, file: !5292, line: 637, type: !7208, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4569, retainedNodes: !7210)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{!7074, !4561}
!7210 = !{!7211, !7212, !7214}
!7211 = !DILocalVariable(name: "self", arg: 1, scope: !7207, file: !5292, line: 637, type: !4561)
!7212 = !DILocalVariable(name: "x", scope: !7213, file: !5292, line: 642, type: !190, align: 8)
!7213 = distinct !DILexicalBlock(scope: !7207, file: !5292, line: 642, column: 13)
!7214 = !DILocalVariable(name: "x", scope: !7215, file: !5292, line: 645, type: !155, align: 1)
!7215 = distinct !DILexicalBlock(scope: !7207, file: !5292, line: 645, column: 13)
!7216 = !DILocation(line: 637, column: 21, scope: !7207)
!7217 = !DILocation(line: 641, column: 15, scope: !7207)
!7218 = !DILocation(line: 641, column: 9, scope: !7207)
!7219 = !DILocation(line: 642, column: 16, scope: !7207)
!7220 = !DILocation(line: 642, column: 16, scope: !7213)
!7221 = !DILocation(line: 642, column: 22, scope: !7213)
!7222 = !DILocation(line: 642, column: 28, scope: !7207)
!7223 = !DILocation(line: 645, column: 17, scope: !7207)
!7224 = !{i8 0, i8 5}
!7225 = !DILocation(line: 645, column: 17, scope: !7215)
!7226 = !DILocation(line: 645, column: 23, scope: !7215)
!7227 = !DILocation(line: 645, column: 26, scope: !7207)
!7228 = !DILocation(line: 647, column: 6, scope: !7207)
!7229 = distinct !DISubprogram(name: "ok<alloc::string::String, alloc::string::FromUtf8Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h0c6429ce610f4340E", scope: !7230, file: !5292, line: 637, type: !7245, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7238, retainedNodes: !7258)
!7230 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::string::FromUtf8Error>", scope: !2134, file: !2, size: 384, align: 64, elements: !7231, templateParams: !23, identifier: "ef81d5c460f3f2445558f1ec13a65760")
!7231 = !{!7232}
!7232 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7230, file: !2, size: 384, align: 64, elements: !7233, templateParams: !23, identifier: "1ba6c099c3fa7e2dd758503b35a65c3", discriminator: !7244)
!7233 = !{!7234, !7240}
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7232, file: !2, baseType: !7235, size: 384, align: 64, extraData: i64 0)
!7235 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7230, file: !2, size: 384, align: 64, elements: !7236, templateParams: !7238, identifier: "c6781853c12f02c6b86bf498526f573")
!7236 = !{!7237}
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7235, file: !2, baseType: !312, size: 192, align: 64, offset: 64)
!7238 = !{!2427, !7239}
!7239 = !DITemplateTypeParameter(name: "E", type: !3741)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7232, file: !2, baseType: !7241, size: 384, align: 64, extraData: i64 1)
!7241 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7230, file: !2, size: 384, align: 64, elements: !7242, templateParams: !7238, identifier: "cf114e12c89b69e4d1aa6cef962e4c09")
!7242 = !{!7243}
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7241, file: !2, baseType: !3741, size: 320, align: 64, offset: 64)
!7244 = !DIDerivedType(tag: DW_TAG_member, scope: !7230, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7245 = !DISubroutineType(types: !7246)
!7246 = !{!7247, !7230}
!7247 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::string::String>", scope: !177, file: !2, size: 192, align: 64, elements: !7248, templateParams: !23, identifier: "e57ba4b2645742ac80028345ae3e3b7e")
!7248 = !{!7249}
!7249 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7247, file: !2, size: 192, align: 64, elements: !7250, templateParams: !23, identifier: "543e21bd6ff6b14b475ba99e29f0198a", discriminator: !7257)
!7250 = !{!7251, !7253}
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7249, file: !2, baseType: !7252, size: 192, align: 64, extraData: i64 0)
!7252 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7247, file: !2, size: 192, align: 64, elements: !23, templateParams: !3006, identifier: "ec22a260f66480db9e9c99b9abc35989")
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7249, file: !2, baseType: !7254, size: 192, align: 64)
!7254 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7247, file: !2, size: 192, align: 64, elements: !7255, templateParams: !3006, identifier: "10653187bab481cceda9c29be1112f74")
!7255 = !{!7256}
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7254, file: !2, baseType: !312, size: 192, align: 64)
!7257 = !DIDerivedType(tag: DW_TAG_member, scope: !7247, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7258 = !{!7259, !7260, !7262}
!7259 = !DILocalVariable(name: "self", arg: 1, scope: !7229, file: !5292, line: 637, type: !7230)
!7260 = !DILocalVariable(name: "x", scope: !7261, file: !5292, line: 642, type: !312, align: 8)
!7261 = distinct !DILexicalBlock(scope: !7229, file: !5292, line: 642, column: 13)
!7262 = !DILocalVariable(name: "x", scope: !7263, file: !5292, line: 645, type: !3741, align: 8)
!7263 = distinct !DILexicalBlock(scope: !7229, file: !5292, line: 645, column: 13)
!7264 = !DILocation(line: 637, column: 21, scope: !7229)
!7265 = !DILocation(line: 642, column: 16, scope: !7261)
!7266 = !DILocation(line: 645, column: 17, scope: !7263)
!7267 = !DILocation(line: 641, column: 15, scope: !7229)
!7268 = !DILocation(line: 641, column: 9, scope: !7229)
!7269 = !DILocation(line: 642, column: 16, scope: !7229)
!7270 = !DILocation(line: 642, column: 27, scope: !7261)
!7271 = !DILocation(line: 642, column: 22, scope: !7261)
!7272 = !DILocation(line: 642, column: 28, scope: !7229)
!7273 = !DILocation(line: 645, column: 17, scope: !7229)
!7274 = !DILocation(line: 645, column: 23, scope: !7263)
!7275 = !DILocation(line: 645, column: 26, scope: !7229)
!7276 = !DILocation(line: 647, column: 6, scope: !7229)
!7277 = distinct !DISubprogram(name: "ok<&str, core::str::error::Utf8Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h2c74aa5141d8442dE", scope: !7278, file: !5292, line: 637, type: !7293, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7286, retainedNodes: !7295)
!7278 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&str, core::str::error::Utf8Error>", scope: !2134, file: !2, size: 192, align: 64, elements: !7279, templateParams: !23, identifier: "e56ee9ab965eba8823c2d17d14d86186")
!7279 = !{!7280}
!7280 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7278, file: !2, size: 192, align: 64, elements: !7281, templateParams: !23, identifier: "3bd39bafb9bf83a4b2331b62105c3372", discriminator: !7292)
!7281 = !{!7282, !7288}
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7280, file: !2, baseType: !7283, size: 192, align: 64, extraData: i64 0)
!7283 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7278, file: !2, size: 192, align: 64, elements: !7284, templateParams: !7286, identifier: "f41479adf37107fdcb555eabe746b169")
!7284 = !{!7285}
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7283, file: !2, baseType: !137, size: 128, align: 64, offset: 64)
!7286 = !{!184, !7287}
!7287 = !DITemplateTypeParameter(name: "E", type: !3745)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7280, file: !2, baseType: !7289, size: 192, align: 64, extraData: i64 1)
!7289 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7278, file: !2, size: 192, align: 64, elements: !7290, templateParams: !7286, identifier: "169407a4202f9203438ab924204e1324")
!7290 = !{!7291}
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7289, file: !2, baseType: !3745, size: 128, align: 64, offset: 64)
!7292 = !DIDerivedType(tag: DW_TAG_member, scope: !7278, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7293 = !DISubroutineType(types: !7294)
!7294 = !{!176, !7278}
!7295 = !{!7296, !7297, !7299}
!7296 = !DILocalVariable(name: "self", arg: 1, scope: !7277, file: !5292, line: 637, type: !7278)
!7297 = !DILocalVariable(name: "x", scope: !7298, file: !5292, line: 642, type: !137, align: 8)
!7298 = distinct !DILexicalBlock(scope: !7277, file: !5292, line: 642, column: 13)
!7299 = !DILocalVariable(name: "x", scope: !7300, file: !5292, line: 645, type: !3745, align: 8)
!7300 = distinct !DILexicalBlock(scope: !7277, file: !5292, line: 645, column: 13)
!7301 = !DILocation(line: 637, column: 21, scope: !7277)
!7302 = !DILocation(line: 645, column: 17, scope: !7300)
!7303 = !DILocation(line: 641, column: 15, scope: !7277)
!7304 = !DILocation(line: 641, column: 9, scope: !7277)
!7305 = !DILocation(line: 642, column: 16, scope: !7277)
!7306 = !DILocation(line: 642, column: 16, scope: !7298)
!7307 = !DILocation(line: 642, column: 22, scope: !7298)
!7308 = !DILocation(line: 642, column: 28, scope: !7277)
!7309 = !DILocation(line: 645, column: 17, scope: !7277)
!7310 = !DILocation(line: 645, column: 23, scope: !7300)
!7311 = !DILocation(line: 645, column: 26, scope: !7277)
!7312 = !DILocation(line: 647, column: 6, scope: !7277)
!7313 = distinct !DISubprogram(name: "ok<u32, core::num::error::ParseIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h876130cb320f98ebE", scope: !4537, file: !5292, line: 637, type: !7314, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4545, retainedNodes: !7316)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!2672, !4537}
!7316 = !{!7317, !7318, !7320}
!7317 = !DILocalVariable(name: "self", arg: 1, scope: !7313, file: !5292, line: 637, type: !4537)
!7318 = !DILocalVariable(name: "x", scope: !7319, file: !5292, line: 642, type: !351, align: 4)
!7319 = distinct !DILexicalBlock(scope: !7313, file: !5292, line: 642, column: 13)
!7320 = !DILocalVariable(name: "x", scope: !7321, file: !5292, line: 645, type: !155, align: 1)
!7321 = distinct !DILexicalBlock(scope: !7313, file: !5292, line: 645, column: 13)
!7322 = !DILocation(line: 637, column: 21, scope: !7313)
!7323 = !DILocation(line: 641, column: 15, scope: !7313)
!7324 = !DILocation(line: 641, column: 9, scope: !7313)
!7325 = !DILocation(line: 642, column: 16, scope: !7313)
!7326 = !DILocation(line: 642, column: 16, scope: !7319)
!7327 = !DILocation(line: 642, column: 22, scope: !7319)
!7328 = !DILocation(line: 642, column: 28, scope: !7313)
!7329 = !DILocation(line: 645, column: 17, scope: !7313)
!7330 = !DILocation(line: 645, column: 17, scope: !7321)
!7331 = !DILocation(line: 645, column: 23, scope: !7321)
!7332 = !DILocation(line: 645, column: 26, scope: !7313)
!7333 = !DILocation(line: 647, column: 6, scope: !7313)
!7334 = distinct !DISubprogram(name: "ok<std::process::Output, std::io::error::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h9fdab479f3bb0927E", scope: !7335, file: !5292, line: 637, type: !7350, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7343, retainedNodes: !7363)
!7335 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<std::process::Output, std::io::error::Error>", scope: !2134, file: !2, size: 512, align: 64, elements: !7336, templateParams: !23, identifier: "511d61f59609e53d837b574c11e67b13")
!7336 = !{!7337}
!7337 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7335, file: !2, size: 512, align: 64, elements: !7338, templateParams: !23, identifier: "5d8e001c4e30ee00f600e30d45e7ba43", discriminator: !7349)
!7338 = !{!7339, !7345}
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7337, file: !2, baseType: !7340, size: 512, align: 64, extraData: i64 0)
!7340 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7335, file: !2, size: 512, align: 64, elements: !7341, templateParams: !7343, identifier: "b064cd6ce4463bc32cacb439d65af6ab")
!7341 = !{!7342}
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7340, file: !2, baseType: !3647, size: 448, align: 64, offset: 64)
!7343 = !{!3662, !7344}
!7344 = !DITemplateTypeParameter(name: "E", type: !32)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7337, file: !2, baseType: !7346, size: 512, align: 64, extraData: i64 1)
!7346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7335, file: !2, size: 512, align: 64, elements: !7347, templateParams: !7343, identifier: "4bbd5b7fb842ce32606d4921c10cdec6")
!7347 = !{!7348}
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7346, file: !2, baseType: !32, size: 64, align: 64, offset: 64)
!7349 = !DIDerivedType(tag: DW_TAG_member, scope: !7335, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{!7352, !7335}
!7352 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<std::process::Output>", scope: !177, file: !2, size: 448, align: 64, elements: !7353, templateParams: !23, identifier: "a4847a422e06a0b149cbe77c7a42bab2")
!7353 = !{!7354}
!7354 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7352, file: !2, size: 448, align: 64, elements: !7355, templateParams: !23, identifier: "e18756f5013e654e3524632e09dee0", discriminator: !7362)
!7355 = !{!7356, !7358}
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7354, file: !2, baseType: !7357, size: 448, align: 64, extraData: i64 0)
!7357 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7352, file: !2, size: 448, align: 64, elements: !23, templateParams: !3661, identifier: "d9fff6627a3df8c8d321c67116ba4457")
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7354, file: !2, baseType: !7359, size: 448, align: 64)
!7359 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7352, file: !2, size: 448, align: 64, elements: !7360, templateParams: !3661, identifier: "5675fd9ec79bfb07d133d6ff5aa89b0")
!7360 = !{!7361}
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7359, file: !2, baseType: !3647, size: 448, align: 64)
!7362 = !DIDerivedType(tag: DW_TAG_member, scope: !7352, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7363 = !{!7364, !7365, !7367}
!7364 = !DILocalVariable(name: "self", arg: 1, scope: !7334, file: !5292, line: 637, type: !7335)
!7365 = !DILocalVariable(name: "x", scope: !7366, file: !5292, line: 642, type: !3647, align: 8)
!7366 = distinct !DILexicalBlock(scope: !7334, file: !5292, line: 642, column: 13)
!7367 = !DILocalVariable(name: "x", scope: !7368, file: !5292, line: 645, type: !32, align: 8)
!7368 = distinct !DILexicalBlock(scope: !7334, file: !5292, line: 645, column: 13)
!7369 = !DILocation(line: 637, column: 21, scope: !7334)
!7370 = !DILocation(line: 642, column: 16, scope: !7366)
!7371 = !DILocation(line: 645, column: 17, scope: !7368)
!7372 = !DILocation(line: 641, column: 15, scope: !7334)
!7373 = !DILocation(line: 641, column: 9, scope: !7334)
!7374 = !DILocation(line: 642, column: 16, scope: !7334)
!7375 = !DILocation(line: 642, column: 27, scope: !7366)
!7376 = !DILocation(line: 642, column: 22, scope: !7366)
!7377 = !DILocation(line: 642, column: 28, scope: !7334)
!7378 = !DILocation(line: 645, column: 17, scope: !7334)
!7379 = !DILocation(line: 645, column: 23, scope: !7368)
!7380 = !DILocation(line: 645, column: 26, scope: !7334)
!7381 = !DILocation(line: 647, column: 6, scope: !7334)
!7382 = distinct !DISubprogram(name: "is_ok<alloc::string::String, std::env::VarError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h9da37263fe3ff58fE", scope: !2418, file: !5292, line: 542, type: !7383, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2426, retainedNodes: !7386)
!7383 = !DISubroutineType(types: !7384)
!7384 = !{!1159, !7385}
!7385 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::result::Result<alloc::string::String, std::env::VarError>", baseType: !2418, size: 64, align: 64, dwarfAddressSpace: 0)
!7386 = !{!7387}
!7387 = !DILocalVariable(name: "self", arg: 1, scope: !7382, file: !5292, line: 542, type: !7385)
!7388 = !DILocation(line: 542, column: 24, scope: !7382)
!7389 = !DILocation(line: 543, column: 18, scope: !7382)
!7390 = !DILocation(line: 543, column: 9, scope: !7382)
!7391 = !DILocation(line: 544, column: 6, scope: !7382)
!7392 = distinct !DISubprogram(name: "expect<std::process::Output, std::io::error::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h9a2e106caa59c20fE", scope: !7335, file: !5292, line: 1058, type: !7393, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7343, retainedNodes: !7395)
!7393 = !DISubroutineType(types: !7394)
!7394 = !{!3647, !7335, !137, !344}
!7395 = !{!7396, !7397, !7398, !7400}
!7396 = !DILocalVariable(name: "self", arg: 1, scope: !7392, file: !5292, line: 1058, type: !7335)
!7397 = !DILocalVariable(name: "msg", arg: 2, scope: !7392, file: !5292, line: 1058, type: !137)
!7398 = !DILocalVariable(name: "t", scope: !7399, file: !5292, line: 1063, type: !3647, align: 8)
!7399 = distinct !DILexicalBlock(scope: !7392, file: !5292, line: 1063, column: 13)
!7400 = !DILocalVariable(name: "e", scope: !7401, file: !5292, line: 1064, type: !32, align: 8)
!7401 = distinct !DILexicalBlock(scope: !7392, file: !5292, line: 1064, column: 13)
!7402 = !DILocation(line: 1063, column: 16, scope: !7399)
!7403 = !DILocation(line: 1058, column: 19, scope: !7392)
!7404 = !DILocation(line: 1058, column: 25, scope: !7392)
!7405 = !DILocation(line: 1064, column: 17, scope: !7401)
!7406 = !DILocation(line: 1062, column: 15, scope: !7392)
!7407 = !DILocation(line: 1062, column: 9, scope: !7392)
!7408 = !DILocation(line: 1063, column: 16, scope: !7392)
!7409 = !DILocation(line: 1066, column: 6, scope: !7392)
!7410 = !DILocation(line: 1064, column: 17, scope: !7392)
!7411 = !DILocation(line: 1064, column: 42, scope: !7401)
!7412 = !DILocation(line: 1064, column: 23, scope: !7401)
!7413 = !DILocation(line: 1064, column: 44, scope: !7392)
!7414 = !DILocation(line: 1058, column: 5, scope: !7392)
!7415 = distinct !DISubprogram(name: "unwrap<i32, core::num::error::ParseIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h61fe4ee0445d998bE", scope: !4512, file: !5292, line: 1101, type: !7416, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4520, retainedNodes: !7418)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!62, !4512, !344}
!7418 = !{!7419, !7420, !7422}
!7419 = !DILocalVariable(name: "self", arg: 1, scope: !7415, file: !5292, line: 1101, type: !4512)
!7420 = !DILocalVariable(name: "t", scope: !7421, file: !5292, line: 1106, type: !62, align: 4)
!7421 = distinct !DILexicalBlock(scope: !7415, file: !5292, line: 1106, column: 13)
!7422 = !DILocalVariable(name: "e", scope: !7423, file: !5292, line: 1107, type: !155, align: 1)
!7423 = distinct !DILexicalBlock(scope: !7415, file: !5292, line: 1107, column: 13)
!7424 = !DILocation(line: 1101, column: 19, scope: !7415)
!7425 = !DILocation(line: 1107, column: 17, scope: !7423)
!7426 = !DILocation(line: 1105, column: 15, scope: !7415)
!7427 = !DILocation(line: 1105, column: 9, scope: !7415)
!7428 = !DILocation(line: 1106, column: 16, scope: !7415)
!7429 = !DILocation(line: 1106, column: 16, scope: !7421)
!7430 = !DILocation(line: 1109, column: 6, scope: !7415)
!7431 = !DILocation(line: 1107, column: 17, scope: !7415)
!7432 = !DILocation(line: 1107, column: 84, scope: !7423)
!7433 = !DILocation(line: 1107, column: 23, scope: !7423)
!7434 = !DILocation(line: 1107, column: 86, scope: !7415)
!7435 = !DILocation(line: 1101, column: 5, scope: !7415)
!7436 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h332add955f1124a8E", scope: !5516, file: !5292, line: 852, type: !7437, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7463, retainedNodes: !7456)
!7437 = !DISubroutineType(types: !7438)
!7438 = !{!7439, !5516, !7454}
!7439 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !2134, file: !2, size: 192, align: 64, elements: !7440, templateParams: !23, identifier: "b9de8b8c009cd0becb59806c6ce8cc5f")
!7440 = !{!7441}
!7441 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7439, file: !2, size: 192, align: 64, elements: !7442, templateParams: !23, identifier: "2c02efbe3ea4d75026f025a2705c6c96", discriminator: !7453)
!7442 = !{!7443, !7449}
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7441, file: !2, baseType: !7444, size: 192, align: 64, extraData: i64 0)
!7444 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7439, file: !2, size: 192, align: 64, elements: !7445, templateParams: !7447, identifier: "d52268884abf5d8c9a943cd013eaf021")
!7445 = !{!7446}
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7444, file: !2, baseType: !1779, size: 128, align: 64, offset: 64)
!7447 = !{!5525, !7448}
!7448 = !DITemplateTypeParameter(name: "E", type: !1769)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7441, file: !2, baseType: !7450, size: 192, align: 64, extraData: i64 1)
!7450 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7439, file: !2, size: 192, align: 64, elements: !7451, templateParams: !7447, identifier: "8793f3a2507382c45ebef37ef1c4bc40")
!7451 = !{!7452}
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7450, file: !2, baseType: !1769, size: 128, align: 64, offset: 64)
!7453 = !DIDerivedType(tag: DW_TAG_member, scope: !7439, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7454 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !7455, file: !2, align: 8, elements: !23, identifier: "f2bae2d168b0d8fd3c59ff569110796d")
!7455 = !DINamespace(name: "finish_grow", scope: !299)
!7456 = !{!7457, !7458, !7459, !7461}
!7457 = !DILocalVariable(name: "self", arg: 1, scope: !7436, file: !5292, line: 852, type: !5516)
!7458 = !DILocalVariable(name: "op", arg: 2, scope: !7436, file: !5292, line: 852, type: !7454)
!7459 = !DILocalVariable(name: "t", scope: !7460, file: !5292, line: 854, type: !1779, align: 8)
!7460 = distinct !DILexicalBlock(scope: !7436, file: !5292, line: 854, column: 13)
!7461 = !DILocalVariable(name: "e", scope: !7462, file: !5292, line: 855, type: !5527, align: 1)
!7462 = distinct !DILexicalBlock(scope: !7436, file: !5292, line: 855, column: 13)
!7463 = !{!5525, !5526, !7464, !7465}
!7464 = !DITemplateTypeParameter(name: "F", type: !1769)
!7465 = !DITemplateTypeParameter(name: "O", type: !7454)
!7466 = !DILocation(line: 852, column: 42, scope: !7436)
!7467 = !DILocation(line: 852, column: 48, scope: !7436)
!7468 = !DILocation(line: 855, column: 17, scope: !7462)
!7469 = !DILocation(line: 853, column: 15, scope: !7436)
!7470 = !DILocation(line: 853, column: 9, scope: !7436)
!7471 = !DILocation(line: 854, column: 16, scope: !7436)
!7472 = !DILocation(line: 854, column: 16, scope: !7460)
!7473 = !DILocation(line: 854, column: 22, scope: !7460)
!7474 = !DILocation(line: 854, column: 26, scope: !7436)
!7475 = !DILocation(line: 855, column: 27, scope: !7462)
!7476 = !DILocation(line: 855, column: 23, scope: !7462)
!7477 = !DILocation(line: 855, column: 32, scope: !7436)
!7478 = !DILocation(line: 857, column: 5, scope: !7436)
!7479 = !DILocation(line: 857, column: 6, scope: !7436)
!7480 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17haa50c8f3ab854e05E", scope: !7481, file: !5292, line: 852, type: !7501, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7529, retainedNodes: !7522)
!7481 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !2134, file: !2, size: 128, align: 64, elements: !7482, templateParams: !23, identifier: "326c2eceea8ace7e7c754e4033de99df")
!7482 = !{!7483}
!7483 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7481, file: !2, size: 128, align: 64, elements: !7484, templateParams: !23, identifier: "55535437789a1bb6b6e72f8531454ed7", discriminator: !7500)
!7484 = !{!7485, !7496}
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7483, file: !2, baseType: !7486, size: 128, align: 64)
!7486 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7481, file: !2, size: 128, align: 64, elements: !7487, templateParams: !7492, identifier: "ba797c89d5b07ad053fbf7cf4701a55")
!7487 = !{!7488}
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7486, file: !2, baseType: !7489, size: 128, align: 64)
!7489 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !42, file: !2, size: 128, align: 64, elements: !7490, templateParams: !330, identifier: "5fc58ef498feac33c505ded838596228")
!7490 = !{!7491}
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7489, file: !2, baseType: !402, size: 128, align: 64)
!7492 = !{!7493, !7494}
!7493 = !DITemplateTypeParameter(name: "T", type: !7489)
!7494 = !DITemplateTypeParameter(name: "E", type: !7495)
!7495 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !1781, file: !2, align: 8, elements: !23, identifier: "34d6c5a45c099706becbbcb30500973a")
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7483, file: !2, baseType: !7497, size: 128, align: 64, extraData: i64 0)
!7497 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7481, file: !2, size: 128, align: 64, elements: !7498, templateParams: !7492, identifier: "136305b53d5a9b78b331b3b0fa91ec26")
!7498 = !{!7499}
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7497, file: !2, baseType: !7495, align: 8)
!7500 = !DIDerivedType(tag: DW_TAG_member, scope: !7481, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7501 = !DISubroutineType(types: !7502)
!7502 = !{!7503, !7481, !7518}
!7503 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !2134, file: !2, size: 192, align: 64, elements: !7504, templateParams: !23, identifier: "601fd7588d09095b28b20a9eb093c288")
!7504 = !{!7505}
!7505 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7503, file: !2, size: 192, align: 64, elements: !7506, templateParams: !23, identifier: "3025750a6e319fc619c06f01e4832005", discriminator: !7517)
!7506 = !{!7507, !7513}
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7505, file: !2, baseType: !7508, size: 192, align: 64, extraData: i64 0)
!7508 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7503, file: !2, size: 192, align: 64, elements: !7509, templateParams: !7511, identifier: "c3a563ea9d0ebe44c356aab410dc20ec")
!7509 = !{!7510}
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7508, file: !2, baseType: !7489, size: 128, align: 64, offset: 64)
!7511 = !{!7493, !7512}
!7512 = !DITemplateTypeParameter(name: "E", type: !1766)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7505, file: !2, baseType: !7514, size: 192, align: 64, extraData: i64 1)
!7514 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7503, file: !2, size: 192, align: 64, elements: !7515, templateParams: !7511, identifier: "b98766a8ef41cfa7c1a20700f8c2ac67")
!7515 = !{!7516}
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7514, file: !2, baseType: !1766, size: 128, align: 64, offset: 64)
!7517 = !DIDerivedType(tag: DW_TAG_member, scope: !7503, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7518 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<alloc::alloc::Global>", scope: !7455, file: !2, size: 64, align: 64, elements: !7519, templateParams: !23, identifier: "d5ca5ecf61bc300819ddcb9ae83470a1")
!7519 = !{!7520}
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !7518, file: !2, baseType: !7521, size: 64, align: 64)
!7521 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !1779, size: 64, align: 64, dwarfAddressSpace: 0)
!7522 = !{!7523, !7524, !7525, !7527}
!7523 = !DILocalVariable(name: "self", arg: 1, scope: !7480, file: !5292, line: 852, type: !7481)
!7524 = !DILocalVariable(name: "op", arg: 2, scope: !7480, file: !5292, line: 852, type: !7518)
!7525 = !DILocalVariable(name: "t", scope: !7526, file: !5292, line: 854, type: !7489, align: 8)
!7526 = distinct !DILexicalBlock(scope: !7480, file: !5292, line: 854, column: 13)
!7527 = !DILocalVariable(name: "e", scope: !7528, file: !5292, line: 855, type: !7495, align: 1)
!7528 = distinct !DILexicalBlock(scope: !7480, file: !5292, line: 855, column: 13)
!7529 = !{!7493, !7494, !7530, !7531}
!7530 = !DITemplateTypeParameter(name: "F", type: !1766)
!7531 = !DITemplateTypeParameter(name: "O", type: !7518)
!7532 = !DILocation(line: 852, column: 42, scope: !7480)
!7533 = !DILocation(line: 852, column: 48, scope: !7480)
!7534 = !DILocation(line: 855, column: 17, scope: !7528)
!7535 = !DILocation(line: 853, column: 15, scope: !7480)
!7536 = !DILocation(line: 853, column: 9, scope: !7480)
!7537 = !DILocation(line: 854, column: 16, scope: !7480)
!7538 = !DILocation(line: 854, column: 16, scope: !7526)
!7539 = !DILocation(line: 854, column: 22, scope: !7526)
!7540 = !DILocation(line: 854, column: 26, scope: !7480)
!7541 = !DILocation(line: 855, column: 27, scope: !7528)
!7542 = !DILocation(line: 855, column: 23, scope: !7528)
!7543 = !DILocation(line: 855, column: 32, scope: !7480)
!7544 = !DILocation(line: 857, column: 5, scope: !7480)
!7545 = !DILocation(line: 857, column: 6, scope: !7480)
!7546 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd2a527fdb6f06cc9E", scope: !7547, file: !5292, line: 852, type: !7561, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7586, retainedNodes: !7579)
!7547 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !2134, file: !2, size: 128, align: 64, elements: !7548, templateParams: !23, identifier: "4b89620c7f2c166f553026a950f3f2d2")
!7548 = !{!7549}
!7549 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7547, file: !2, size: 128, align: 64, elements: !7550, templateParams: !23, identifier: "7cb265f2a07c8821328b46cc3c388b7f", discriminator: !7560)
!7550 = !{!7551, !7556}
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7549, file: !2, baseType: !7552, size: 128, align: 64, extraData: i64 -9223372036854775807)
!7552 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7547, file: !2, size: 128, align: 64, elements: !7553, templateParams: !7555, identifier: "fdce6ff40bcf3f7ab3b51ba04b7afc44")
!7553 = !{!7554}
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7552, file: !2, baseType: !7, align: 8)
!7555 = !{!48, !7512}
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7549, file: !2, baseType: !7557, size: 128, align: 64)
!7557 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7547, file: !2, size: 128, align: 64, elements: !7558, templateParams: !7555, identifier: "d84ca0f977a325112ceaab4e30797620")
!7558 = !{!7559}
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7557, file: !2, baseType: !1766, size: 128, align: 64)
!7560 = !DIDerivedType(tag: DW_TAG_member, scope: !7547, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{!7563, !7547, !7577}
!7563 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !2134, file: !2, size: 128, align: 64, elements: !7564, templateParams: !23, identifier: "cdc62e1ada228a0a3eeb1363cc168dd1")
!7564 = !{!7565}
!7565 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7563, file: !2, size: 128, align: 64, elements: !7566, templateParams: !23, identifier: "c07cde87a483df02fa92a38d58df4905", discriminator: !7576)
!7566 = !{!7567, !7572}
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7565, file: !2, baseType: !7568, size: 128, align: 64, extraData: i64 -9223372036854775807)
!7568 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7563, file: !2, size: 128, align: 64, elements: !7569, templateParams: !7571, identifier: "ef69269b9f8a8dcfd892b17f0cd69f3b")
!7569 = !{!7570}
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7568, file: !2, baseType: !7, align: 8)
!7571 = !{!48, !7448}
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7565, file: !2, baseType: !7573, size: 128, align: 64)
!7573 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7563, file: !2, size: 128, align: 64, elements: !7574, templateParams: !7571, identifier: "d1e764ecae8c88012ac4b46bb3413624")
!7574 = !{!7575}
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7573, file: !2, baseType: !1769, size: 128, align: 64)
!7576 = !DIDerivedType(tag: DW_TAG_member, scope: !7563, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!7577 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7578, file: !2, align: 8, elements: !23, identifier: "38662dde61d7b1e78dacba2cb2773d17")
!7578 = !DINamespace(name: "handle_reserve", scope: !299)
!7579 = !{!7580, !7581, !7582, !7584}
!7580 = !DILocalVariable(name: "self", arg: 1, scope: !7546, file: !5292, line: 852, type: !7547)
!7581 = !DILocalVariable(name: "op", arg: 2, scope: !7546, file: !5292, line: 852, type: !7577)
!7582 = !DILocalVariable(name: "t", scope: !7583, file: !5292, line: 854, type: !7, align: 1)
!7583 = distinct !DILexicalBlock(scope: !7546, file: !5292, line: 854, column: 13)
!7584 = !DILocalVariable(name: "e", scope: !7585, file: !5292, line: 855, type: !1766, align: 8)
!7585 = distinct !DILexicalBlock(scope: !7546, file: !5292, line: 855, column: 13)
!7586 = !{!48, !7512, !7464, !7587}
!7587 = !DITemplateTypeParameter(name: "O", type: !7577)
!7588 = !DILocation(line: 852, column: 42, scope: !7546)
!7589 = !DILocation(line: 852, column: 48, scope: !7546)
!7590 = !DILocation(line: 854, column: 16, scope: !7583)
!7591 = !DILocation(line: 853, column: 15, scope: !7546)
!7592 = !{i64 0, i64 -9223372036854775806}
!7593 = !DILocation(line: 853, column: 9, scope: !7546)
!7594 = !DILocation(line: 854, column: 22, scope: !7583)
!7595 = !DILocation(line: 854, column: 26, scope: !7546)
!7596 = !DILocation(line: 855, column: 17, scope: !7546)
!7597 = !DILocation(line: 855, column: 17, scope: !7585)
!7598 = !DILocation(line: 855, column: 27, scope: !7585)
!7599 = !DILocation(line: 855, column: 23, scope: !7585)
!7600 = !DILocation(line: 855, column: 32, scope: !7546)
!7601 = !DILocation(line: 857, column: 5, scope: !7546)
!7602 = !DILocation(line: 857, column: 6, scope: !7546)
!7603 = distinct !DISubprogram(name: "assert_failed<core::option::Option<&str>, core::option::Option<&str>>", linkageName: "_ZN4core9panicking13assert_failed17hf6275b1d0fa3bb9bE", scope: !293, file: !7604, line: 171, type: !7605, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7625, retainedNodes: !7620)
!7604 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "89dbfc153a7177bd0202715dd5809289")
!7605 = !DISubroutineType(types: !7606)
!7606 = !{null, !292, !175, !175, !7607, !344}
!7607 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Arguments>", scope: !177, file: !2, size: 384, align: 64, elements: !7608, templateParams: !23, identifier: "91782c25c0cb4075178b67ca76527846")
!7608 = !{!7609}
!7609 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7607, file: !2, size: 384, align: 64, elements: !7610, templateParams: !23, identifier: "d3d8c93b36d851336035bb39c7913979", discriminator: !7619)
!7610 = !{!7611, !7615}
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7609, file: !2, baseType: !7612, size: 384, align: 64, extraData: i64 0)
!7612 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7607, file: !2, size: 384, align: 64, elements: !23, templateParams: !7613, identifier: "94094742b636673213b46bf0a5389cae")
!7613 = !{!7614}
!7614 = !DITemplateTypeParameter(name: "T", type: !2065)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7609, file: !2, baseType: !7616, size: 384, align: 64)
!7616 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7607, file: !2, size: 384, align: 64, elements: !7617, templateParams: !7613, identifier: "424137f74f76139e10918065dfb817dc")
!7617 = !{!7618}
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7616, file: !2, baseType: !2065, size: 384, align: 64)
!7619 = !DIDerivedType(tag: DW_TAG_member, scope: !7607, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!7620 = !{!7621, !7622, !7623, !7624}
!7621 = !DILocalVariable(name: "kind", arg: 1, scope: !7603, file: !7604, line: 172, type: !292)
!7622 = !DILocalVariable(name: "left", arg: 2, scope: !7603, file: !7604, line: 173, type: !175)
!7623 = !DILocalVariable(name: "right", arg: 3, scope: !7603, file: !7604, line: 174, type: !175)
!7624 = !DILocalVariable(name: "args", arg: 4, scope: !7603, file: !7604, line: 175, type: !7607)
!7625 = !{!2864, !7626}
!7626 = !DITemplateTypeParameter(name: "U", type: !176)
!7627 = !DILocation(line: 172, column: 5, scope: !7603)
!7628 = !DILocation(line: 173, column: 5, scope: !7603)
!7629 = !DILocation(line: 174, column: 5, scope: !7603)
!7630 = !DILocation(line: 175, column: 5, scope: !7603)
!7631 = !DILocation(line: 181, column: 31, scope: !7603)
!7632 = !DILocation(line: 181, column: 38, scope: !7603)
!7633 = !DILocation(line: 181, column: 46, scope: !7603)
!7634 = !DILocation(line: 181, column: 5, scope: !7603)
!7635 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h63aa8f047ad2503cE", scope: !7637, file: !7636, line: 559, type: !7638, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7642, retainedNodes: !7640)
!7636 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!7637 = !DINamespace(name: "{impl#4}", scope: !4078)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{null, !7495}
!7640 = !{!7641}
!7641 = !DILocalVariable(name: "t", arg: 1, scope: !7635, file: !7636, line: 559, type: !7495)
!7642 = !{!7643}
!7643 = !DITemplateTypeParameter(name: "T", type: !7495)
!7644 = !DILocation(line: 559, column: 13, scope: !7635)
!7645 = !DILocation(line: 561, column: 6, scope: !7635)
!7646 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8e1a809c19999ecbE", scope: !7637, file: !7636, line: 559, type: !7647, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7651, retainedNodes: !7649)
!7647 = !DISubroutineType(types: !7648)
!7648 = !{!1766, !1766}
!7649 = !{!7650}
!7650 = !DILocalVariable(name: "t", arg: 1, scope: !7646, file: !7636, line: 559, type: !1766)
!7651 = !{!7652}
!7652 = !DITemplateTypeParameter(name: "T", type: !1766)
!7653 = !DILocation(line: 559, column: 13, scope: !7646)
!7654 = !DILocation(line: 561, column: 6, scope: !7646)
!7655 = distinct !DISubprogram(name: "from<usize>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h92de53f2d292b24cE", scope: !7637, file: !7636, line: 559, type: !7656, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !7658)
!7656 = !DISubroutineType(types: !7657)
!7657 = !{!9, !9}
!7658 = !{!7659}
!7659 = !DILocalVariable(name: "t", arg: 1, scope: !7655, file: !7636, line: 559, type: !9)
!7660 = !DILocation(line: 559, column: 13, scope: !7655)
!7661 = !DILocation(line: 561, column: 6, scope: !7655)
!7662 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha8e0a4e0ca4129a2E", scope: !7637, file: !7636, line: 559, type: !7663, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7667, retainedNodes: !7665)
!7663 = !DISubroutineType(types: !7664)
!7664 = !{null, !5527}
!7665 = !{!7666}
!7666 = !DILocalVariable(name: "t", arg: 1, scope: !7662, file: !7636, line: 559, type: !5527)
!7667 = !{!7668}
!7668 = !DITemplateTypeParameter(name: "T", type: !5527)
!7669 = !DILocation(line: 559, column: 13, scope: !7662)
!7670 = !DILocation(line: 561, column: 6, scope: !7662)
!7671 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h0fef2e7ad346ada8E", scope: !7672, file: !7636, line: 549, type: !1734, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7675, retainedNodes: !7673)
!7672 = !DINamespace(name: "{impl#3}", scope: !4078)
!7673 = !{!7674}
!7674 = !DILocalVariable(name: "self", arg: 1, scope: !7671, file: !7636, line: 549, type: !322)
!7675 = !{!7676, !7677}
!7676 = !DITemplateTypeParameter(name: "T", type: !322)
!7677 = !DITemplateTypeParameter(name: "U", type: !326)
!7678 = !DILocation(line: 549, column: 13, scope: !7671)
!7679 = !DILocation(line: 550, column: 9, scope: !7671)
!7680 = !DILocation(line: 551, column: 6, scope: !7671)
!7681 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb9ad3db51038b09fE", scope: !7672, file: !7636, line: 549, type: !1764, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7684, retainedNodes: !7682)
!7682 = !{!7683}
!7683 = !DILocalVariable(name: "self", arg: 1, scope: !7681, file: !7636, line: 549, type: !1769)
!7684 = !{!7685, !7686}
!7685 = !DITemplateTypeParameter(name: "T", type: !1769)
!7686 = !DITemplateTypeParameter(name: "U", type: !1766)
!7687 = !DILocation(line: 549, column: 13, scope: !7681)
!7688 = !DILocation(line: 550, column: 9, scope: !7681)
!7689 = !DILocation(line: 551, column: 6, scope: !7681)
!7690 = distinct !DISubprogram(name: "borrow<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h27c9f61f5eb5cfddE", scope: !7692, file: !7691, line: 211, type: !7694, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !7696)
!7691 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/borrow.rs", directory: "", checksumkind: CSK_MD5, checksum: "e89485dfda5e743beb740cfbcee3cfef")
!7692 = !DINamespace(name: "{impl#0}", scope: !7693)
!7693 = !DINamespace(name: "borrow", scope: !44)
!7694 = !DISubroutineType(types: !7695)
!7695 = !{!3491, !3491}
!7696 = !{!7697}
!7697 = !DILocalVariable(name: "self", arg: 1, scope: !7690, file: !7691, line: 211, type: !3491)
!7698 = !DILocation(line: 211, column: 15, scope: !7690)
!7699 = !DILocation(line: 213, column: 6, scope: !7690)
!7700 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h0e053acafbe28eb4E", scope: !7701, file: !669, line: 542, type: !7702, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7704)
!7701 = !DINamespace(name: "{impl#3}", scope: !671)
!7702 = !DISubroutineType(types: !7703)
!7703 = !{!4594, !534, !137}
!7704 = !{!7705, !7706, !7707, !7709}
!7705 = !DILocalVariable(name: "self", arg: 1, scope: !7700, file: !669, line: 542, type: !534)
!7706 = !DILocalVariable(name: "haystack", arg: 2, scope: !7700, file: !669, line: 542, type: !137)
!7707 = !DILocalVariable(name: "utf8_encoded", scope: !7708, file: !669, line: 543, type: !4602, align: 1)
!7708 = distinct !DILexicalBlock(scope: !7700, file: !669, line: 543, column: 9)
!7709 = !DILocalVariable(name: "utf8_size", scope: !7710, file: !669, line: 544, type: !9, align: 8)
!7710 = distinct !DILexicalBlock(scope: !7708, file: !669, line: 544, column: 9)
!7711 = !DILocation(line: 542, column: 22, scope: !7700)
!7712 = !DILocation(line: 542, column: 28, scope: !7700)
!7713 = !DILocation(line: 543, column: 13, scope: !7708)
!7714 = !DILocation(line: 543, column: 32, scope: !7700)
!7715 = !DILocation(line: 544, column: 25, scope: !7708)
!7716 = !DILocalVariable(name: "self", scope: !7717, file: !669, line: 544, type: !534, align: 4)
!7717 = !DILexicalBlockFile(scope: !7718, file: !669, discriminator: 0)
!7718 = distinct !DISubprogram(name: "encode_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817hc09aa5c8672f009dE", scope: !5192, file: !4998, line: 656, type: !7719, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7725)
!7719 = !DISubroutineType(types: !7720)
!7720 = !{!7721, !534, !1109}
!7721 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut str", file: !2, size: 128, align: 64, elements: !7722, templateParams: !23, identifier: "444dcbb816eb7ea8fc9a04d7bc4f81ac")
!7722 = !{!7723, !7724}
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7721, file: !2, baseType: !140, size: 64, align: 64)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7721, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!7725 = !{!7716, !7726}
!7726 = !DILocalVariable(name: "dst", scope: !7717, file: !669, line: 544, type: !1109, align: 8)
!7727 = !DILocation(line: 544, column: 25, scope: !7717, inlinedAt: !7715)
!7728 = !DILocation(line: 544, column: 42, scope: !7708)
!7729 = !DILocalVariable(name: "v", scope: !7730, file: !669, line: 544, type: !1109, align: 8)
!7730 = !DILexicalBlockFile(scope: !7731, file: !669, discriminator: 0)
!7731 = distinct !DISubprogram(name: "from_utf8_unchecked_mut", linkageName: "_ZN4core3str8converts23from_utf8_unchecked_mut17h26ebd130ef6410cbE", scope: !438, file: !437, line: 197, type: !7732, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7734)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{!7721, !1109}
!7734 = !{!7729}
!7735 = !DILocation(line: 544, column: 25, scope: !7730, inlinedAt: !7736)
!7736 = !DILocation(line: 658, column: 18, scope: !7718, inlinedAt: !7715)
!7737 = !DILocalVariable(name: "self", scope: !7738, file: !669, line: 544, type: !137, align: 8)
!7738 = !DILexicalBlockFile(scope: !7739, file: !669, discriminator: 0)
!7739 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17h501ba6b4c82e7e4fE", scope: !697, file: !2520, line: 157, type: !4618, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7740)
!7740 = !{!7737}
!7741 = !DILocation(line: 544, column: 25, scope: !7738, inlinedAt: !7715)
!7742 = !DILocalVariable(name: "self", scope: !7743, file: !669, line: 544, type: !137, align: 8)
!7743 = !DILexicalBlockFile(scope: !7744, file: !669, discriminator: 0)
!7744 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7745)
!7745 = !{!7742}
!7746 = !DILocation(line: 544, column: 25, scope: !7743, inlinedAt: !7747)
!7747 = !DILocation(line: 158, column: 9, scope: !7739, inlinedAt: !7715)
!7748 = !DILocation(line: 544, column: 13, scope: !7710)
!7749 = !DILocation(line: 548, column: 26, scope: !7710)
!7750 = !DILocalVariable(name: "self", scope: !7751, file: !669, line: 548, type: !137, align: 8)
!7751 = !DILexicalBlockFile(scope: !7752, file: !669, discriminator: 0)
!7752 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17h501ba6b4c82e7e4fE", scope: !697, file: !2520, line: 157, type: !4618, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7753)
!7753 = !{!7750}
!7754 = !DILocation(line: 548, column: 26, scope: !7751, inlinedAt: !7749)
!7755 = !DILocalVariable(name: "self", scope: !7756, file: !669, line: 548, type: !137, align: 8)
!7756 = !DILexicalBlockFile(scope: !7757, file: !669, discriminator: 0)
!7757 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7758)
!7758 = !{!7755}
!7759 = !DILocation(line: 548, column: 26, scope: !7756, inlinedAt: !7760)
!7760 = !DILocation(line: 158, column: 9, scope: !7752, inlinedAt: !7749)
!7761 = !DILocation(line: 551, column: 13, scope: !7710)
!7762 = !DILocation(line: 545, column: 9, scope: !7710)
!7763 = !DILocation(line: 553, column: 6, scope: !7700)
!7764 = distinct !DISubprogram(name: "matches<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hdc36e925302422e0E", scope: !7765, file: !669, line: 606, type: !7766, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1296, retainedNodes: !7769)
!7765 = !DINamespace(name: "{impl#4}", scope: !671)
!7766 = !DISubroutineType(types: !7767)
!7767 = !{!1159, !7768, !534}
!7768 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::{impl#0}::trim::{closure_env#0}", baseType: !695, size: 64, align: 64, dwarfAddressSpace: 0)
!7769 = !{!7770, !7771}
!7770 = !DILocalVariable(name: "self", arg: 1, scope: !7764, file: !669, line: 606, type: !7768)
!7771 = !DILocalVariable(name: "c", arg: 2, scope: !7764, file: !669, line: 606, type: !534)
!7772 = !DILocation(line: 606, column: 16, scope: !7764)
!7773 = !DILocation(line: 606, column: 27, scope: !7764)
!7774 = !DILocation(line: 607, column: 9, scope: !7764)
!7775 = !DILocation(line: 608, column: 6, scope: !7764)
!7776 = distinct !DISubprogram(name: "slice_contains<&str>", linkageName: "_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17hae7d69e6e815e172E", scope: !7777, file: !6152, line: 237, type: !7778, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !7780)
!7777 = !DINamespace(name: "{impl#11}", scope: !6154)
!7778 = !DISubroutineType(types: !7779)
!7779 = !{!1159, !199, !2068}
!7780 = !{!7781, !7782}
!7781 = !DILocalVariable(name: "self", arg: 1, scope: !7776, file: !6152, line: 237, type: !199)
!7782 = !DILocalVariable(name: "x", arg: 2, scope: !7776, file: !6152, line: 237, type: !2068)
!7783 = !DILocation(line: 237, column: 31, scope: !7776)
!7784 = !DILocation(line: 237, column: 38, scope: !7776)
!7785 = !DILocation(line: 238, column: 9, scope: !7776)
!7786 = !DILocalVariable(name: "self", scope: !7787, file: !6152, line: 238, type: !2068, align: 8)
!7787 = !DILexicalBlockFile(scope: !7788, file: !6152, discriminator: 0)
!7788 = distinct !DISubprogram(name: "iter<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb4456b994ba02408E", scope: !2489, file: !2488, line: 734, type: !6255, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !7789)
!7789 = !{!7786}
!7790 = !DILocation(line: 238, column: 9, scope: !7787, inlinedAt: !7785)
!7791 = !DILocation(line: 238, column: 22, scope: !7776)
!7792 = !DILocation(line: 239, column: 6, scope: !7776)
!7793 = distinct !DISubprogram(name: "{closure#0}<&str>", linkageName: "_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains28_$u7b$$u7b$closure$u7d$$u7d$17h8be92fc8e0a57246E", scope: !7794, file: !6152, line: 238, type: !7795, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !7801)
!7794 = !DINamespace(name: "slice_contains", scope: !7777)
!7795 = !DISubroutineType(types: !7796)
!7796 = !{!1159, !7797, !199}
!7797 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::cmp::{impl#11}::slice_contains::{closure_env#0}<&str>", baseType: !7798, size: 64, align: 64, dwarfAddressSpace: 0)
!7798 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&str>", scope: !7794, file: !2, size: 64, align: 64, elements: !7799, templateParams: !23, identifier: "d9ffacdd4d83d9f2e3423ff752325aba")
!7799 = !{!7800}
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !7798, file: !2, baseType: !199, size: 64, align: 64)
!7801 = !{!7802, !7803}
!7802 = !DILocalVariable(name: "y", arg: 2, scope: !7793, file: !6152, line: 238, type: !199)
!7803 = !DILocalVariable(name: "self", scope: !7793, file: !6152, line: 237, type: !137, align: 8)
!7804 = !DILocation(line: 237, column: 31, scope: !7793)
!7805 = !DILocation(line: 238, column: 23, scope: !7793)
!7806 = !DILocation(line: 238, column: 32, scope: !7793)
!7807 = !DILocation(line: 238, column: 26, scope: !7793)
!7808 = !DILocation(line: 238, column: 25, scope: !7793)
!7809 = distinct !DISubprogram(name: "report", linkageName: "_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17h9670bdbbde5b6d51E", scope: !7810, file: !2386, line: 2170, type: !7811, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7813)
!7810 = !DINamespace(name: "{impl#53}", scope: !2388)
!7811 = !DISubroutineType(types: !7812)
!7812 = !{!2387, !7}
!7813 = !{!7814}
!7814 = !DILocalVariable(name: "self", arg: 1, scope: !7809, file: !2386, line: 2170, type: !7)
!7815 = !DILocation(line: 2170, column: 15, scope: !7809)
!7816 = !DILocation(line: 2172, column: 6, scope: !7809)
!7817 = distinct !DISubprogram(name: "borrow<str>", linkageName: "_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h41fc1c2d47f6d610E", scope: !7818, file: !7691, line: 227, type: !7819, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !7821)
!7818 = !DINamespace(name: "{impl#2}", scope: !7693)
!7819 = !DISubroutineType(types: !7820)
!7820 = !{!137, !199}
!7821 = !{!7822}
!7822 = !DILocalVariable(name: "self", arg: 1, scope: !7817, file: !7691, line: 227, type: !199)
!7823 = !DILocation(line: 227, column: 15, scope: !7817)
!7824 = !DILocation(line: 228, column: 9, scope: !7817)
!7825 = !DILocation(line: 229, column: 6, scope: !7817)
!7826 = distinct !DISubprogram(name: "as_ref<str, std::ffi::os_str::OsStr>", linkageName: "_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h8095b91f3bd8cf5dE", scope: !7827, file: !7636, line: 491, type: !7828, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7832, retainedNodes: !7830)
!7827 = !DINamespace(name: "{impl#0}", scope: !4078)
!7828 = !DISubroutineType(types: !7829)
!7829 = !{!2476, !199}
!7830 = !{!7831}
!7831 = !DILocalVariable(name: "self", arg: 1, scope: !7826, file: !7636, line: 491, type: !199)
!7832 = !{!331, !7833}
!7833 = !DITemplateTypeParameter(name: "U", type: !2468)
!7834 = !DILocation(line: 491, column: 15, scope: !7826)
!7835 = !DILocation(line: 492, column: 33, scope: !7826)
!7836 = !DILocation(line: 492, column: 9, scope: !7826)
!7837 = !DILocation(line: 493, column: 6, scope: !7826)
!7838 = distinct !DISubprogram(name: "is_prefix_of", linkageName: "_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17hd1805ba1b6eb2660E", scope: !7839, file: !669, line: 945, type: !4425, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7840)
!7839 = !DINamespace(name: "{impl#28}", scope: !671)
!7840 = !{!7841, !7842}
!7841 = !DILocalVariable(name: "self", arg: 1, scope: !7838, file: !669, line: 945, type: !137)
!7842 = !DILocalVariable(name: "haystack", arg: 2, scope: !7838, file: !669, line: 945, type: !137)
!7843 = !DILocation(line: 945, column: 21, scope: !7838)
!7844 = !DILocation(line: 945, column: 27, scope: !7838)
!7845 = !DILocation(line: 946, column: 9, scope: !7838)
!7846 = !DILocalVariable(name: "self", scope: !7847, file: !669, line: 946, type: !137, align: 8)
!7847 = !DILexicalBlockFile(scope: !7848, file: !669, discriminator: 0)
!7848 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7849)
!7849 = !{!7846}
!7850 = !DILocation(line: 946, column: 9, scope: !7847, inlinedAt: !7845)
!7851 = !DILocation(line: 946, column: 41, scope: !7838)
!7852 = !DILocalVariable(name: "self", scope: !7853, file: !669, line: 946, type: !137, align: 8)
!7853 = !DILexicalBlockFile(scope: !7854, file: !669, discriminator: 0)
!7854 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7855)
!7855 = !{!7852}
!7856 = !DILocation(line: 946, column: 41, scope: !7853, inlinedAt: !7851)
!7857 = !DILocation(line: 947, column: 6, scope: !7838)
!7858 = distinct !DISubprogram(name: "clone", linkageName: "_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h6ba0f722ea16ada6E", scope: !7860, file: !7859, line: 53, type: !7861, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !7864)
!7859 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6c7758b12bd6b7f0705d9bc90e671ea")
!7860 = !DINamespace(name: "{impl#5}", scope: !337)
!7861 = !DISubroutineType(types: !7862)
!7862 = !{null, !7863}
!7863 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !336, size: 64, align: 64, dwarfAddressSpace: 0)
!7864 = !{!7865}
!7865 = !DILocalVariable(name: "self", arg: 1, scope: !7858, file: !7859, line: 53, type: !7863)
!7866 = !DILocation(line: 53, column: 16, scope: !7858)
!7867 = !DILocation(line: 53, column: 21, scope: !7858)
!7868 = distinct !DISubprogram(name: "dying_next<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17h4f1bfc4fa54278c4E", scope: !1311, file: !1304, line: 1666, type: !7869, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !7884)
!7869 = !DISubroutineType(types: !7870)
!7870 = !{!7871, !1824}
!7871 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", scope: !177, file: !2, size: 192, align: 64, elements: !7872, templateParams: !23, identifier: "30a5ad11e1a0d93dca49a16ee8a20193")
!7872 = !{!7873}
!7873 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7871, file: !2, size: 192, align: 64, elements: !7874, templateParams: !23, identifier: "5ad8a20c1a78b07feacaeaac70624805", discriminator: !7883)
!7874 = !{!7875, !7879}
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7873, file: !2, baseType: !7876, size: 192, align: 64, extraData: i64 0)
!7876 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7871, file: !2, size: 192, align: 64, elements: !23, templateParams: !7877, identifier: "91138c1260721e3b22643d166715b50c")
!7877 = !{!7878}
!7878 = !DITemplateTypeParameter(name: "T", type: !1829)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7873, file: !2, baseType: !7880, size: 192, align: 64)
!7880 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7871, file: !2, size: 192, align: 64, elements: !7881, templateParams: !7877, identifier: "1a2e353bbadbeecbb2f0a3add49ad207")
!7881 = !{!7882}
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7880, file: !2, baseType: !1829, size: 192, align: 64)
!7883 = !DIDerivedType(tag: DW_TAG_member, scope: !7871, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!7884 = !{!7885}
!7885 = !DILocalVariable(name: "self", arg: 1, scope: !7868, file: !1304, line: 1667, type: !1824)
!7886 = !DILocation(line: 1667, column: 9, scope: !7868)
!7887 = !DILocation(line: 1669, column: 12, scope: !7868)
!7888 = !DILocation(line: 1670, column: 13, scope: !7868)
!7889 = !DILocation(line: 1670, column: 41, scope: !7868)
!7890 = !DILocation(line: 1673, column: 13, scope: !7868)
!7891 = !DILocation(line: 1674, column: 27, scope: !7868)
!7892 = !DILocation(line: 1674, column: 66, scope: !7868)
!7893 = !DILocation(line: 1674, column: 13, scope: !7868)
!7894 = !DILocation(line: 1669, column: 9, scope: !7868)
!7895 = !DILocation(line: 1676, column: 6, scope: !7868)
!7896 = !DILocation(line: 1671, column: 13, scope: !7868)
!7897 = distinct !DISubprogram(name: "replace<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::navigate::{impl#22}::deallocating_next_unchecked::{closure_env#0}<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN5alloc11collections5btree3mem7replace17h3bb8a3090da09082E", scope: !3922, file: !7898, line: 20, type: !7899, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7917, retainedNodes: !7907)
!7898 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/btree/mem.rs", directory: "", checksumkind: CSK_MD5, checksum: "b4d35906f376ea6e2770ce6493db4607")
!7899 = !DISubroutineType(types: !7900)
!7900 = !{!1829, !7901, !7902}
!7901 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", baseType: !1467, size: 64, align: 64, dwarfAddressSpace: 0)
!7902 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", scope: !7903, file: !2, align: 8, elements: !7905, templateParams: !23, identifier: "509db0373c62af299bf175c5e1df7ebd")
!7903 = !DINamespace(name: "deallocating_next_unchecked", scope: !7904)
!7904 = !DINamespace(name: "{impl#22}", scope: !1315)
!7905 = !{!7906}
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !7902, file: !2, baseType: !336, align: 8)
!7907 = !{!7908, !7909, !7910, !7912, !7914, !7916}
!7908 = !DILocalVariable(name: "v", arg: 1, scope: !7897, file: !7898, line: 20, type: !7901)
!7909 = !DILocalVariable(name: "change", arg: 2, scope: !7897, file: !7898, line: 20, type: !7902)
!7910 = !DILocalVariable(name: "guard", scope: !7911, file: !7898, line: 27, type: !3920, align: 1)
!7911 = distinct !DILexicalBlock(scope: !7897, file: !7898, line: 27, column: 5)
!7912 = !DILocalVariable(name: "value", scope: !7913, file: !7898, line: 28, type: !1467, align: 8)
!7913 = distinct !DILexicalBlock(scope: !7911, file: !7898, line: 28, column: 5)
!7914 = !DILocalVariable(name: "new_value", scope: !7915, file: !7898, line: 29, type: !1467, align: 8)
!7915 = distinct !DILexicalBlock(scope: !7913, file: !7898, line: 29, column: 5)
!7916 = !DILocalVariable(name: "ret", scope: !7915, file: !7898, line: 29, type: !1829, align: 8)
!7917 = !{!7918, !7919, !7920}
!7918 = !DITemplateTypeParameter(name: "T", type: !1467)
!7919 = !DITemplateTypeParameter(name: "R", type: !1829)
!7920 = !DITemplateTypeParameter(name: "impl FnOnce(T) -> (T, R)", type: !7902)
!7921 = !DILocation(line: 29, column: 21, scope: !7915)
!7922 = !DILocation(line: 20, column: 22, scope: !7897)
!7923 = !DILocation(line: 20, column: 33, scope: !7897)
!7924 = !DILocation(line: 27, column: 9, scope: !7911)
!7925 = !DILocation(line: 28, column: 9, scope: !7913)
!7926 = !DILocation(line: 29, column: 10, scope: !7915)
!7927 = !DILocalVariable(name: "src", scope: !7928, file: !7898, line: 31, type: !1467, align: 8)
!7928 = !DILexicalBlockFile(scope: !7929, file: !7898, discriminator: 0)
!7929 = distinct !DISubprogram(name: "write<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3ptr5write17h5ad9a5ce9af93707E", scope: !43, file: !399, line: 1296, type: !7930, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7935, retainedNodes: !7933)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{null, !7932, !1467}
!7932 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", baseType: !1467, size: 64, align: 64, dwarfAddressSpace: 0)
!7933 = !{!7934, !7927}
!7934 = !DILocalVariable(name: "dst", scope: !7928, file: !7898, line: 31, type: !7932, align: 8)
!7935 = !{!7918}
!7936 = !DILocation(line: 31, column: 9, scope: !7928, inlinedAt: !7937)
!7937 = !DILocation(line: 31, column: 9, scope: !7915)
!7938 = !DILocalVariable(name: "t", scope: !7939, file: !7898, line: 33, type: !3920, align: 1)
!7939 = !DILexicalBlockFile(scope: !7940, file: !7898, discriminator: 0)
!7940 = distinct !DISubprogram(name: "forget<alloc::collections::btree::mem::replace::PanicGuard>", linkageName: "_ZN4core3mem6forget17he0ea9d50ba5a5183E", scope: !210, file: !627, line: 154, type: !7941, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3925, retainedNodes: !7943)
!7941 = !DISubroutineType(types: !7942)
!7942 = !{null, !3920}
!7943 = !{!7938}
!7944 = !DILocation(line: 33, column: 5, scope: !7939, inlinedAt: !7945)
!7945 = !DILocation(line: 33, column: 5, scope: !7915)
!7946 = !DILocalVariable(name: "tmp", scope: !7947, file: !7898, line: 28, type: !7956, align: 8)
!7947 = !DILexicalBlockFile(scope: !7948, file: !7898, discriminator: 0)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !399, line: 1107, column: 5)
!7949 = distinct !DISubprogram(name: "read<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3ptr4read17hff5bca5c98a3a001E", scope: !43, file: !399, line: 1099, type: !7950, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7935, retainedNodes: !7953)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!1467, !7952}
!7952 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", baseType: !1467, size: 64, align: 64, dwarfAddressSpace: 0)
!7953 = !{!7954, !7946}
!7954 = !DILocalVariable(name: "src", scope: !7955, file: !7898, line: 28, type: !7952, align: 8)
!7955 = !DILexicalBlockFile(scope: !7949, file: !7898, discriminator: 0)
!7956 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", scope: !982, file: !2, size: 192, align: 64, elements: !7957, templateParams: !7935, identifier: "684ceefd3716a02bf5d6c2be448a2b4f")
!7957 = !{!7958, !7959}
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !7956, file: !2, baseType: !7, align: 8)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7956, file: !2, baseType: !7960, size: 192, align: 64)
!7960 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", scope: !987, file: !2, size: 192, align: 64, elements: !7961, templateParams: !7935, identifier: "f1f9a310b2bd013e2f22b4df2cc4dd39")
!7961 = !{!7962}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7960, file: !2, baseType: !1467, size: 192, align: 64)
!7963 = !DILocation(line: 28, column: 26, scope: !7947, inlinedAt: !7964)
!7964 = !DILocation(line: 28, column: 26, scope: !7911)
!7965 = !DILocalVariable(name: "self", scope: !7966, file: !7898, line: 28, type: !7956, align: 8)
!7966 = !DILexicalBlockFile(scope: !7967, file: !7898, discriminator: 0)
!7967 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h29a53e1db45e60f2E", scope: !7956, file: !1609, line: 629, type: !7968, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7935, retainedNodes: !7970)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!1467, !7956, !344}
!7970 = !{!7965}
!7971 = !DILocation(line: 28, column: 26, scope: !7966, inlinedAt: !7972)
!7972 = !DILocation(line: 1116, column: 9, scope: !7948, inlinedAt: !7964)
!7973 = !DILocalVariable(name: "slot", scope: !7974, file: !7898, line: 28, type: !7960, align: 8)
!7974 = !DILexicalBlockFile(scope: !7975, file: !7898, discriminator: 0)
!7975 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h9d0af8bf0fb5455dE", scope: !7960, file: !1575, line: 88, type: !7976, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7935, retainedNodes: !7978)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{!1467, !7960}
!7978 = !{!7973}
!7979 = !DILocation(line: 28, column: 26, scope: !7974, inlinedAt: !7980)
!7980 = !DILocation(line: 634, column: 13, scope: !7967, inlinedAt: !7972)
!7981 = !DILocalVariable(name: "value", scope: !7982, file: !7898, line: 33, type: !3920, align: 1)
!7982 = !DILexicalBlockFile(scope: !7983, file: !7898, discriminator: 0)
!7983 = distinct !DISubprogram(name: "new<alloc::collections::btree::mem::replace::PanicGuard>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h2c4f31de45c60b91E", scope: !7984, file: !1575, line: 70, type: !7941, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3925, retainedNodes: !7987)
!7984 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::mem::replace::PanicGuard>", scope: !987, file: !2, align: 8, elements: !7985, templateParams: !3925, identifier: "4ead1c72f4d9eeacdf1dc645b8a7f123")
!7985 = !{!7986}
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7984, file: !2, baseType: !3920, align: 8)
!7987 = !{!7981}
!7988 = !DILocation(line: 33, column: 5, scope: !7982, inlinedAt: !7989)
!7989 = !DILocation(line: 155, column: 13, scope: !7940, inlinedAt: !7945)
!7990 = !DILocation(line: 27, column: 9, scope: !7897)
!7991 = !DILocation(line: 28, column: 36, scope: !7911)
!7992 = !DILocation(line: 28, column: 26, scope: !7955, inlinedAt: !7964)
!7993 = !DILocation(line: 28, column: 26, scope: !7994, inlinedAt: !7998)
!7994 = !DILexicalBlockFile(scope: !7995, file: !7898, discriminator: 0)
!7995 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hd11ac085843ab22bE", scope: !7956, file: !1609, line: 320, type: !7996, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7935, retainedNodes: !23)
!7996 = !DISubroutineType(types: !7997)
!7997 = !{!7956}
!7998 = !DILocation(line: 1107, column: 19, scope: !7949, inlinedAt: !7964)
!7999 = !DILocalVariable(name: "self", scope: !8000, file: !7898, line: 28, type: !8004, align: 8)
!8000 = !DILexicalBlockFile(scope: !8001, file: !7898, discriminator: 0)
!8001 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h28fc062589353dfcE", scope: !7956, file: !1609, line: 574, type: !8002, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7935, retainedNodes: !8005)
!8002 = !DISubroutineType(types: !8003)
!8003 = !{!7932, !8004}
!8004 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", baseType: !7956, size: 64, align: 64, dwarfAddressSpace: 0)
!8005 = !{!7999}
!8006 = !DILocation(line: 28, column: 26, scope: !8000, inlinedAt: !8007)
!8007 = !DILocation(line: 1115, column: 34, scope: !7948, inlinedAt: !7964)
!8008 = !DILocation(line: 29, column: 28, scope: !7913)
!8009 = !DILocation(line: 29, column: 35, scope: !7913)
!8010 = !DILocation(line: 35, column: 1, scope: !7897)
!8011 = !DILocation(line: 29, column: 10, scope: !7913)
!8012 = !DILocation(line: 29, column: 21, scope: !7913)
!8013 = !DILocation(line: 31, column: 20, scope: !7915)
!8014 = !DILocation(line: 31, column: 23, scope: !7915)
!8015 = !DILocation(line: 35, column: 2, scope: !7897)
!8016 = !DILocation(line: 20, column: 1, scope: !7897)
!8017 = distinct !DISubprogram(name: "deallocate_and_ascend<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17hf48d8970239e4d49E", scope: !1334, file: !8018, line: 393, type: !8019, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !8021)
!8018 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/btree/node.rs", directory: "", checksumkind: CSK_MD5, checksum: "6d6896b6772bbabc4e5e58dc7aa6ff10")
!8019 = !DISubroutineType(types: !8020)
!8020 = !{!6783, !1334, !336}
!8021 = !{!8022, !8023, !8024, !8026, !8028}
!8022 = !DILocalVariable(name: "self", arg: 1, scope: !8017, file: !8018, line: 394, type: !1334)
!8023 = !DILocalVariable(name: "alloc", arg: 2, scope: !8017, file: !8018, line: 395, type: !336)
!8024 = !DILocalVariable(name: "height", scope: !8025, file: !8018, line: 397, type: !9, align: 8)
!8025 = distinct !DILexicalBlock(scope: !8017, file: !8018, line: 397, column: 9)
!8026 = !DILocalVariable(name: "node", scope: !8027, file: !8018, line: 398, type: !1339, align: 8)
!8027 = distinct !DILexicalBlock(scope: !8025, file: !8018, line: 398, column: 9)
!8028 = !DILocalVariable(name: "ret", scope: !8029, file: !8018, line: 399, type: !6783, align: 8)
!8029 = distinct !DILexicalBlock(scope: !8027, file: !8018, line: 399, column: 9)
!8030 = !DILocation(line: 399, column: 13, scope: !8029)
!8031 = !DILocation(line: 394, column: 9, scope: !8017)
!8032 = !DILocation(line: 395, column: 9, scope: !8017)
!8033 = !DILocalVariable(name: "self", scope: !8034, file: !8018, line: 399, type: !8036, align: 8)
!8034 = !DILexicalBlockFile(scope: !8035, file: !8018, discriminator: 0)
!8035 = distinct !DISubprogram(name: "ok<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h1d688c888a5a4d85E", scope: !8036, file: !5292, line: 637, type: !8051, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8044, retainedNodes: !8053)
!8036 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", scope: !2134, file: !2, size: 256, align: 64, elements: !8037, templateParams: !23, identifier: "14f5462bbe516ea6d9d7b40446da2e69")
!8037 = !{!8038}
!8038 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8036, file: !2, size: 256, align: 64, elements: !8039, templateParams: !23, identifier: "6ffb5a0a6a940bd4b0c9a79e3fd7c607", discriminator: !8050)
!8039 = !{!8040, !8046}
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8038, file: !2, baseType: !8041, size: 256, align: 64, extraData: i64 0)
!8041 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8036, file: !2, size: 256, align: 64, elements: !8042, templateParams: !8044, identifier: "baa10a2eb3ae98727b475c198726ba64")
!8042 = !{!8043}
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8041, file: !2, baseType: !6791, size: 192, align: 64, offset: 64)
!8044 = !{!6790, !8045}
!8045 = !DITemplateTypeParameter(name: "E", type: !1334)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8038, file: !2, baseType: !8047, size: 256, align: 64, extraData: i64 1)
!8047 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8036, file: !2, size: 256, align: 64, elements: !8048, templateParams: !8044, identifier: "f58bc8f3762fafa43f363919707d62b3")
!8048 = !{!8049}
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8047, file: !2, baseType: !1334, size: 128, align: 64, offset: 64)
!8050 = !DIDerivedType(tag: DW_TAG_member, scope: !8036, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!8051 = !DISubroutineType(types: !8052)
!8052 = !{!6783, !8036}
!8053 = !{!8033, !8054, !8057}
!8054 = !DILocalVariable(name: "x", scope: !8055, file: !8018, line: 399, type: !6791, align: 8)
!8055 = !DILexicalBlockFile(scope: !8056, file: !8018, discriminator: 0)
!8056 = distinct !DILexicalBlock(scope: !8035, file: !5292, line: 642, column: 13)
!8057 = !DILocalVariable(name: "x", scope: !8058, file: !8018, line: 399, type: !1334, align: 8)
!8058 = !DILexicalBlockFile(scope: !8059, file: !8018, discriminator: 0)
!8059 = distinct !DILexicalBlock(scope: !8035, file: !5292, line: 645, column: 13)
!8060 = !DILocation(line: 399, column: 19, scope: !8034, inlinedAt: !8061)
!8061 = !DILocation(line: 399, column: 19, scope: !8027)
!8062 = !DILocation(line: 399, column: 19, scope: !8055, inlinedAt: !8061)
!8063 = !DILocation(line: 397, column: 22, scope: !8017)
!8064 = !DILocation(line: 397, column: 13, scope: !8025)
!8065 = !DILocation(line: 398, column: 20, scope: !8025)
!8066 = !DILocation(line: 398, column: 13, scope: !8027)
!8067 = !DILocation(line: 411, column: 5, scope: !8017)
!8068 = !DILocation(line: 399, column: 19, scope: !8058, inlinedAt: !8061)
!8069 = !DILocation(line: 402, column: 17, scope: !8029)
!8070 = !DILocalVariable(name: "self", scope: !8071, file: !8018, line: 402, type: !1339, align: 8)
!8071 = !DILexicalBlockFile(scope: !8072, file: !8018, discriminator: 0)
!8072 = distinct !DISubprogram(name: "cast<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h7aa7135ee2f863c4E", scope: !1339, file: !646, line: 453, type: !8073, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8076, retainedNodes: !8075)
!8073 = !DISubroutineType(types: !8074)
!8074 = !{!326, !1339}
!8075 = !{!8070}
!8076 = !{!1443, !2018}
!8077 = !DILocation(line: 402, column: 17, scope: !8071, inlinedAt: !8069)
!8078 = !DILocalVariable(name: "self", scope: !8079, file: !8018, line: 402, type: !1339, align: 8)
!8079 = !DILexicalBlockFile(scope: !8080, file: !8018, discriminator: 0)
!8080 = distinct !DISubprogram(name: "as_ptr<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbce776ef6f8cf190E", scope: !1339, file: !646, line: 330, type: !8081, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1442, retainedNodes: !8084)
!8081 = !DISubroutineType(types: !8082)
!8082 = !{!8083, !1339}
!8083 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1343, size: 64, align: 64, dwarfAddressSpace: 0)
!8084 = !{!8078}
!8085 = !DILocation(line: 402, column: 17, scope: !8079, inlinedAt: !8086)
!8086 = !DILocation(line: 455, column: 41, scope: !8072, inlinedAt: !8069)
!8087 = !DILocalVariable(name: "ptr", scope: !8088, file: !8018, line: 402, type: !649, align: 8)
!8088 = !DILexicalBlockFile(scope: !8089, file: !8018, discriminator: 0)
!8089 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !8090)
!8090 = !{!8087}
!8091 = !DILocation(line: 402, column: 17, scope: !8088, inlinedAt: !8092)
!8092 = !DILocation(line: 455, column: 18, scope: !8072, inlinedAt: !8069)
!8093 = !DILocation(line: 403, column: 20, scope: !8029)
!8094 = !DILocation(line: 406, column: 21, scope: !8095, inlinedAt: !8104)
!8095 = !DILexicalBlockFile(scope: !8096, file: !8018, discriminator: 0)
!8096 = distinct !DISubprogram(name: "new<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h9bd2896c0da0c58fE", scope: !1779, file: !5505, line: 139, type: !8097, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1442, retainedNodes: !8099)
!8097 = !DISubroutineType(types: !8098)
!8098 = !{!1779}
!8099 = !{!8100, !8103}
!8100 = !DILocalVariable(name: "size", scope: !8101, file: !8018, line: 406, type: !9, align: 8)
!8101 = !DILexicalBlockFile(scope: !8102, file: !8018, discriminator: 0)
!8102 = distinct !DILexicalBlock(scope: !8096, file: !5505, line: 140, column: 9)
!8103 = !DILocalVariable(name: "align", scope: !8101, file: !8018, line: 406, type: !9, align: 8)
!8104 = !DILocation(line: 406, column: 21, scope: !8029)
!8105 = !DILocation(line: 404, column: 21, scope: !8106, inlinedAt: !8113)
!8106 = !DILexicalBlockFile(scope: !8107, file: !8018, discriminator: 0)
!8107 = distinct !DISubprogram(name: "new<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core5alloc6layout6Layout3new17hb79077f342e01194E", scope: !1779, file: !5505, line: 139, type: !8097, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1401, retainedNodes: !8108)
!8108 = !{!8109, !8112}
!8109 = !DILocalVariable(name: "size", scope: !8110, file: !8018, line: 404, type: !9, align: 8)
!8110 = !DILexicalBlockFile(scope: !8111, file: !8018, discriminator: 0)
!8111 = distinct !DILexicalBlock(scope: !8107, file: !5505, line: 140, column: 9)
!8112 = !DILocalVariable(name: "align", scope: !8110, file: !8018, line: 404, type: !9, align: 8)
!8113 = !DILocation(line: 404, column: 21, scope: !8029)
!8114 = !DILocation(line: 404, column: 21, scope: !8110, inlinedAt: !8113)
!8115 = !DILocalVariable(name: "size", scope: !8116, file: !8018, line: 404, type: !9, align: 8)
!8116 = !DILexicalBlockFile(scope: !8117, file: !8018, discriminator: 0)
!8117 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h985d01966f78b156E", scope: !1779, file: !5505, line: 110, type: !8118, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !8120)
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!1779, !9, !9}
!8120 = !{!8115, !8121}
!8121 = !DILocalVariable(name: "align", scope: !8116, file: !8018, line: 404, type: !9, align: 8)
!8122 = !DILocation(line: 404, column: 21, scope: !8116, inlinedAt: !8123)
!8123 = !DILocation(line: 144, column: 18, scope: !8111, inlinedAt: !8113)
!8124 = !DILocalVariable(name: "align", scope: !8125, file: !8018, line: 404, type: !9, align: 8)
!8125 = !DILexicalBlockFile(scope: !8126, file: !8018, discriminator: 0)
!8126 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !8127)
!8127 = !{!8124, !8128}
!8128 = !DILocalVariable(name: "runtime", scope: !8129, file: !8018, line: 404, type: !5701, align: 8)
!8129 = !DILexicalBlockFile(scope: !8130, file: !8018, discriminator: 0)
!8130 = distinct !DILexicalBlock(scope: !8126, file: !386, line: 2336, column: 13)
!8131 = !DILocation(line: 404, column: 21, scope: !8125, inlinedAt: !8132)
!8132 = !DILocation(line: 112, column: 40, scope: !8117, inlinedAt: !8123)
!8133 = !DILocation(line: 145, column: 6, scope: !8134)
!8134 = !DILexicalBlockFile(scope: !8017, file: !5505, discriminator: 0)
!8135 = !DILocation(line: 401, column: 13, scope: !8029)
!8136 = !DILocation(line: 406, column: 21, scope: !8101, inlinedAt: !8104)
!8137 = !DILocalVariable(name: "size", scope: !8138, file: !8018, line: 406, type: !9, align: 8)
!8138 = !DILexicalBlockFile(scope: !8139, file: !8018, discriminator: 0)
!8139 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h985d01966f78b156E", scope: !1779, file: !5505, line: 110, type: !8118, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !8140)
!8140 = !{!8137, !8141}
!8141 = !DILocalVariable(name: "align", scope: !8138, file: !8018, line: 406, type: !9, align: 8)
!8142 = !DILocation(line: 406, column: 21, scope: !8138, inlinedAt: !8143)
!8143 = !DILocation(line: 144, column: 18, scope: !8102, inlinedAt: !8104)
!8144 = !DILocalVariable(name: "align", scope: !8145, file: !8018, line: 406, type: !9, align: 8)
!8145 = !DILexicalBlockFile(scope: !8146, file: !8018, discriminator: 0)
!8146 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !8147)
!8147 = !{!8144, !8148}
!8148 = !DILocalVariable(name: "runtime", scope: !8149, file: !8018, line: 406, type: !5701, align: 8)
!8149 = !DILexicalBlockFile(scope: !8150, file: !8018, discriminator: 0)
!8150 = distinct !DILexicalBlock(scope: !8146, file: !386, line: 2336, column: 13)
!8151 = !DILocation(line: 406, column: 21, scope: !8145, inlinedAt: !8152)
!8152 = !DILocation(line: 112, column: 40, scope: !8139, inlinedAt: !8143)
!8153 = !DILocation(line: 393, column: 5, scope: !8017)
!8154 = !DILocation(line: 411, column: 6, scope: !8017)
!8155 = distinct !DISubprogram(name: "right_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", linkageName: "_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h11a7443e9d73e3a2E", scope: !8156, file: !8018, line: 762, type: !8162, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8166, retainedNodes: !8164)
!8156 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", scope: !1335, file: !2, size: 192, align: 64, elements: !8157, templateParams: !8161, identifier: "7c8ed2b5193db8523fb4845ffc889a65")
!8157 = !{!8158, !8159, !8160}
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8156, file: !2, baseType: !6794, size: 128, align: 64)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !8156, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !8156, file: !2, baseType: !1834, align: 8)
!8161 = !{!6814, !1842}
!8162 = !DISubroutineType(types: !8163)
!8163 = !{!6791, !8156}
!8164 = !{!8165}
!8165 = !DILocalVariable(name: "self", arg: 1, scope: !8155, file: !8018, line: 762, type: !8156)
!8166 = !{!1460, !1375, !1387, !8167}
!8167 = !DITemplateTypeParameter(name: "NodeType", type: !6806)
!8168 = !DILocation(line: 762, column: 23, scope: !8155)
!8169 = !DILocation(line: 763, column: 35, scope: !8155)
!8170 = !DILocation(line: 763, column: 46, scope: !8155)
!8171 = !DILocation(line: 763, column: 18, scope: !8155)
!8172 = !DILocation(line: 764, column: 6, scope: !8155)
!8173 = distinct !DISubprogram(name: "right_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", linkageName: "_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$10right_edge17h7762fe9aa2a1c8a5E", scope: !8174, file: !8018, line: 762, type: !8180, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8184, retainedNodes: !8182)
!8174 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", scope: !1335, file: !2, size: 192, align: 64, elements: !8175, templateParams: !8179, identifier: "8719ed0758977b0e6dd2e59d01812e87")
!8175 = !{!8176, !8177, !8178}
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8174, file: !2, baseType: !1470, size: 128, align: 64)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !8174, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !8174, file: !2, baseType: !1834, align: 8)
!8179 = !{!1496, !1842}
!8180 = !DISubroutineType(types: !8181)
!8181 = !{!1467, !8174}
!8182 = !{!8183}
!8183 = !DILocalVariable(name: "self", arg: 1, scope: !8173, file: !8018, line: 762, type: !8174)
!8184 = !{!1460, !1375, !1387, !8185}
!8185 = !DITemplateTypeParameter(name: "NodeType", type: !1482)
!8186 = !DILocation(line: 762, column: 23, scope: !8173)
!8187 = !DILocation(line: 763, column: 35, scope: !8173)
!8188 = !DILocation(line: 763, column: 46, scope: !8173)
!8189 = !DILocation(line: 763, column: 18, scope: !8173)
!8190 = !DILocation(line: 764, column: 6, scope: !8173)
!8191 = distinct !DISubprogram(name: "new_kv<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node137Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$6new_kv17h6661977f691b4155E", scope: !1829, file: !8018, line: 752, type: !8192, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8197, retainedNodes: !8194)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!1829, !1334, !9}
!8194 = !{!8195, !8196}
!8195 = !DILocalVariable(name: "node", arg: 1, scope: !8191, file: !8018, line: 752, type: !1334)
!8196 = !DILocalVariable(name: "idx", arg: 2, scope: !8191, file: !8018, line: 752, type: !9)
!8197 = !{!1460, !1375, !1387, !8198}
!8198 = !DITemplateTypeParameter(name: "NodeType", type: !1456)
!8199 = !DILocation(line: 752, column: 26, scope: !8191)
!8200 = !DILocation(line: 752, column: 69, scope: !8191)
!8201 = !DILocation(line: 755, column: 9, scope: !8191)
!8202 = !DILocation(line: 756, column: 6, scope: !8191)
!8203 = distinct !DISubprogram(name: "new_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", linkageName: "_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h2b48121291ed2af2E", scope: !6791, file: !8018, line: 803, type: !8204, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8166, retainedNodes: !8206)
!8204 = !DISubroutineType(types: !8205)
!8205 = !{!6791, !6794, !9}
!8206 = !{!8207, !8208}
!8207 = !DILocalVariable(name: "node", arg: 1, scope: !8203, file: !8018, line: 803, type: !6794)
!8208 = !DILocalVariable(name: "idx", arg: 2, scope: !8203, file: !8018, line: 803, type: !9)
!8209 = !DILocation(line: 803, column: 28, scope: !8203)
!8210 = !DILocation(line: 803, column: 71, scope: !8203)
!8211 = !DILocation(line: 806, column: 9, scope: !8203)
!8212 = !DILocation(line: 807, column: 6, scope: !8203)
!8213 = distinct !DISubprogram(name: "new_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17h6057b94c63512452E", scope: !8214, file: !8018, line: 803, type: !8220, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8197, retainedNodes: !8222)
!8214 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", scope: !1335, file: !2, size: 192, align: 64, elements: !8215, templateParams: !8219, identifier: "7f00ca9a58f5ef39b16ac229ddf0f130")
!8215 = !{!8216, !8217, !8218}
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8214, file: !2, baseType: !1334, size: 128, align: 64)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !8214, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !8214, file: !2, baseType: !1489, align: 8)
!8219 = !{!1841, !1497}
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!8214, !1334, !9}
!8222 = !{!8223, !8224}
!8223 = !DILocalVariable(name: "node", arg: 1, scope: !8213, file: !8018, line: 803, type: !1334)
!8224 = !DILocalVariable(name: "idx", arg: 2, scope: !8213, file: !8018, line: 803, type: !9)
!8225 = !DILocation(line: 803, column: 28, scope: !8213)
!8226 = !DILocation(line: 803, column: 71, scope: !8213)
!8227 = !DILocation(line: 806, column: 9, scope: !8213)
!8228 = !DILocation(line: 807, column: 6, scope: !8213)
!8229 = distinct !DISubprogram(name: "new_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", linkageName: "_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8new_edge17he31595c9024fa9f9E", scope: !1467, file: !8018, line: 803, type: !8230, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8184, retainedNodes: !8232)
!8230 = !DISubroutineType(types: !8231)
!8231 = !{!1467, !1470, !9}
!8232 = !{!8233, !8234}
!8233 = !DILocalVariable(name: "node", arg: 1, scope: !8229, file: !8018, line: 803, type: !1470)
!8234 = !DILocalVariable(name: "idx", arg: 2, scope: !8229, file: !8018, line: 803, type: !9)
!8235 = !DILocation(line: 803, column: 28, scope: !8229)
!8236 = !DILocation(line: 803, column: 71, scope: !8229)
!8237 = !DILocation(line: 806, column: 9, scope: !8229)
!8238 = !DILocation(line: 807, column: 6, scope: !8229)
!8239 = distinct !DISubprogram(name: "right_kv<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node139Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..Edge$GT$8right_kv17hbe45476ad7de42bfE", scope: !8214, file: !8018, line: 817, type: !8240, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8197, retainedNodes: !8257)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{!8242, !8214}
!8242 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>", scope: !2134, file: !2, size: 256, align: 64, elements: !8243, templateParams: !23, identifier: "734105f70d20e36787deda13018190f0")
!8243 = !{!8244}
!8244 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8242, file: !2, size: 256, align: 64, elements: !8245, templateParams: !23, identifier: "b67b9ad45081299a9cc83923383d90e8", discriminator: !8256)
!8245 = !{!8246, !8252}
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8244, file: !2, baseType: !8247, size: 256, align: 64, extraData: i64 0)
!8247 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8242, file: !2, size: 256, align: 64, elements: !8248, templateParams: !8250, identifier: "98ac5bcb20d7a8ca864b0c1c4338a1e7")
!8248 = !{!8249}
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8247, file: !2, baseType: !1829, size: 192, align: 64, offset: 64)
!8250 = !{!7878, !8251}
!8251 = !DITemplateTypeParameter(name: "E", type: !8214)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8244, file: !2, baseType: !8253, size: 256, align: 64, extraData: i64 1)
!8253 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8242, file: !2, size: 256, align: 64, elements: !8254, templateParams: !8250, identifier: "8637cd2031f73a0f8263424f6b8dd1cf")
!8254 = !{!8255}
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8253, file: !2, baseType: !8214, size: 192, align: 64, offset: 64)
!8256 = !DIDerivedType(tag: DW_TAG_member, scope: !8242, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!8257 = !{!8258}
!8258 = !DILocalVariable(name: "self", arg: 1, scope: !8239, file: !8018, line: 817, type: !8214)
!8259 = !DILocation(line: 817, column: 21, scope: !8239)
!8260 = !DILocation(line: 818, column: 12, scope: !8239)
!8261 = !DILocation(line: 818, column: 23, scope: !8239)
!8262 = !DILocation(line: 821, column: 17, scope: !8239)
!8263 = !DILocation(line: 821, column: 13, scope: !8239)
!8264 = !DILocation(line: 818, column: 9, scope: !8239)
!8265 = !DILocation(line: 819, column: 40, scope: !8239)
!8266 = !DILocation(line: 819, column: 51, scope: !8239)
!8267 = !DILocation(line: 819, column: 25, scope: !8239)
!8268 = !DILocation(line: 819, column: 13, scope: !8239)
!8269 = !DILocation(line: 823, column: 6, scope: !8239)
!8270 = distinct !DISubprogram(name: "force<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::KV>", linkageName: "_ZN5alloc11collections5btree4node145Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$Type$GT$5force17hfbd0a9b1230b8ee9E", scope: !1829, file: !8018, line: 1555, type: !8271, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8295, retainedNodes: !8289)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{!8273, !1829}
!8273 = !DICompositeType(tag: DW_TAG_structure_type, name: "ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>", scope: !1335, file: !2, size: 256, align: 64, elements: !8274, templateParams: !23, identifier: "b2ec0b1f17a9db191e423d3fe41193b4")
!8274 = !{!8275}
!8275 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8273, file: !2, size: 256, align: 64, elements: !8276, templateParams: !23, identifier: "f52c2d84aa32390ceff6501a7b592d46", discriminator: !8288)
!8276 = !{!8277, !8284}
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "Leaf", scope: !8275, file: !2, baseType: !8278, size: 256, align: 64, extraData: i64 0)
!8278 = !DICompositeType(tag: DW_TAG_structure_type, name: "Leaf", scope: !8273, file: !2, size: 256, align: 64, elements: !8279, templateParams: !8281, identifier: "9c491269dcdc5d7be2b71634e66fb26b")
!8279 = !{!8280}
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8278, file: !2, baseType: !8174, size: 192, align: 64, offset: 64)
!8281 = !{!8282, !8283}
!8282 = !DITemplateTypeParameter(name: "Leaf", type: !8174)
!8283 = !DITemplateTypeParameter(name: "Internal", type: !8156)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "Internal", scope: !8275, file: !2, baseType: !8285, size: 256, align: 64, extraData: i64 1)
!8285 = !DICompositeType(tag: DW_TAG_structure_type, name: "Internal", scope: !8273, file: !2, size: 256, align: 64, elements: !8286, templateParams: !8281, identifier: "cf12726b64e1d700626f60de4df05ff6")
!8286 = !{!8287}
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8285, file: !2, baseType: !8156, size: 192, align: 64, offset: 64)
!8288 = !DIDerivedType(tag: DW_TAG_member, scope: !8273, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!8289 = !{!8290, !8291, !8293}
!8290 = !DILocalVariable(name: "self", arg: 1, scope: !8270, file: !8018, line: 1556, type: !1829)
!8291 = !DILocalVariable(name: "node", scope: !8292, file: !8018, line: 1562, type: !1470, align: 8)
!8292 = distinct !DILexicalBlock(scope: !8270, file: !8018, line: 1562, column: 13)
!8293 = !DILocalVariable(name: "node", scope: !8294, file: !8018, line: 1565, type: !6794, align: 8)
!8294 = distinct !DILexicalBlock(scope: !8270, file: !8018, line: 1565, column: 13)
!8295 = !{!1460, !1375, !1387, !1842}
!8296 = !DILocation(line: 1556, column: 9, scope: !8270)
!8297 = !DILocation(line: 1561, column: 15, scope: !8270)
!8298 = !DILocation(line: 1561, column: 9, scope: !8270)
!8299 = !DILocation(line: 1562, column: 31, scope: !8270)
!8300 = !DILocation(line: 1562, column: 31, scope: !8292)
!8301 = !DILocation(line: 1563, column: 55, scope: !8292)
!8302 = !DILocation(line: 1563, column: 35, scope: !8292)
!8303 = !DILocation(line: 1563, column: 17, scope: !8292)
!8304 = !DILocation(line: 1564, column: 13, scope: !8270)
!8305 = !DILocation(line: 1565, column: 35, scope: !8270)
!8306 = !DILocation(line: 1565, column: 35, scope: !8294)
!8307 = !DILocation(line: 1566, column: 59, scope: !8294)
!8308 = !DILocation(line: 1566, column: 39, scope: !8294)
!8309 = !DILocation(line: 1566, column: 17, scope: !8294)
!8310 = !DILocation(line: 1567, column: 13, scope: !8270)
!8311 = !DILocation(line: 1569, column: 6, scope: !8270)
!8312 = distinct !DISubprogram(name: "drop_key_val<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h7334a7c41f34b097E", scope: !1829, file: !8018, line: 1086, type: !8313, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8320, retainedNodes: !8315)
!8313 = !DISubroutineType(types: !8314)
!8314 = !{null, !1829}
!8315 = !{!8316, !8317}
!8316 = !DILocalVariable(name: "self", arg: 1, scope: !8312, file: !8018, line: 1086, type: !1829)
!8317 = !DILocalVariable(name: "leaf", scope: !8318, file: !8018, line: 1088, type: !8319, align: 8)
!8318 = distinct !DILexicalBlock(scope: !8312, file: !8018, line: 1088, column: 9)
!8319 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1343, size: 64, align: 64, dwarfAddressSpace: 0)
!8320 = !{!1375, !1387, !8198}
!8321 = !DILocation(line: 1086, column: 32, scope: !8312)
!8322 = !DILocation(line: 1088, column: 20, scope: !8312)
!8323 = !DILocation(line: 1088, column: 13, scope: !8318)
!8324 = !DILocation(line: 1090, column: 13, scope: !8318)
!8325 = !DILocalVariable(name: "self", scope: !8326, file: !8018, line: 1090, type: !8330, align: 8)
!8326 = !DILexicalBlockFile(scope: !8327, file: !8018, discriminator: 0)
!8327 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h79818521b0dd1252E", scope: !2489, file: !2488, line: 436, type: !8328, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8337, retainedNodes: !8335)
!8328 = !DISubroutineType(types: !8329)
!8329 = !{!3152, !8330, !9}
!8330 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>]", file: !2, size: 128, align: 64, elements: !8331, templateParams: !23, identifier: "2042dc2b56f27aa6a814359a7f5f4e1")
!8331 = !{!8332, !8334}
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8330, file: !2, baseType: !8333, size: 64, align: 64)
!8333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64, align: 64, dwarfAddressSpace: 0)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8330, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8335 = !{!8325, !8336}
!8336 = !DILocalVariable(name: "index", scope: !8326, file: !8018, line: 1090, type: !9, align: 8)
!8337 = !{!8338, !8339}
!8338 = !DITemplateTypeParameter(name: "T", type: !1422)
!8339 = !DITemplateTypeParameter(name: "I", type: !9)
!8340 = !DILocation(line: 1090, column: 13, scope: !8326, inlinedAt: !8324)
!8341 = !DILocation(line: 1090, column: 41, scope: !8318)
!8342 = !DILocalVariable(name: "self", scope: !8343, file: !8018, line: 1090, type: !9, align: 8)
!8343 = !DILexicalBlockFile(scope: !8344, file: !8018, discriminator: 0)
!8344 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h936446fe607fc940E", scope: !8345, file: !818, line: 231, type: !8346, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8364, retainedNodes: !8353)
!8345 = !DINamespace(name: "{impl#2}", scope: !820)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{!8348, !9, !8349}
!8348 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>", baseType: !1422, size: 64, align: 64, dwarfAddressSpace: 0)
!8349 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>]", file: !2, size: 128, align: 64, elements: !8350, templateParams: !23, identifier: "e2b02664f936524782c3f116edbb2afb")
!8350 = !{!8351, !8352}
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8349, file: !2, baseType: !8333, size: 64, align: 64)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8349, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8353 = !{!8342, !8354, !8355}
!8354 = !DILocalVariable(name: "slice", scope: !8343, file: !8018, line: 1090, type: !8349, align: 8)
!8355 = !DILocalVariable(name: "runtime", scope: !8356, file: !8018, line: 1090, type: !8358, align: 8)
!8356 = !DILexicalBlockFile(scope: !8357, file: !8018, discriminator: 0)
!8357 = distinct !DILexicalBlock(scope: !8344, file: !386, line: 2336, column: 13)
!8358 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", scope: !8359, file: !2, size: 128, align: 64, elements: !8360, templateParams: !23, identifier: "75b6d337f2d8f817752b4d75689d3bc")
!8359 = !DINamespace(name: "get_unchecked_mut", scope: !8345)
!8360 = !{!8361, !8362}
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !8358, file: !2, baseType: !393, size: 64, align: 64)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !8358, file: !2, baseType: !8363, size: 64, align: 64, offset: 64)
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>]", baseType: !8349, size: 64, align: 64, dwarfAddressSpace: 0)
!8364 = !{!8338}
!8365 = !DILocation(line: 1090, column: 13, scope: !8343, inlinedAt: !8366)
!8366 = !DILocation(line: 443, column: 24, scope: !8327, inlinedAt: !8324)
!8367 = !DILocalVariable(name: "self", scope: !8368, file: !8018, line: 1090, type: !8349, align: 8)
!8368 = !DILexicalBlockFile(scope: !8369, file: !8018, discriminator: 0)
!8369 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h4982dfc459384c7fE", scope: !922, file: !656, line: 1778, type: !8370, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8364, retainedNodes: !8372)
!8370 = !DISubroutineType(types: !8371)
!8371 = !{!8348, !8349}
!8372 = !{!8367}
!8373 = !DILocation(line: 1090, column: 13, scope: !8368, inlinedAt: !8374)
!8374 = !DILocation(line: 235, column: 13, scope: !8344, inlinedAt: !8366)
!8375 = !DILocalVariable(name: "self", scope: !8376, file: !8018, line: 1090, type: !8348, align: 8)
!8376 = !DILexicalBlockFile(scope: !8377, file: !8018, discriminator: 0)
!8377 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h8ccba7dad08bd462E", scope: !657, file: !656, line: 985, type: !8378, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8364, retainedNodes: !8380)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!8348, !8348, !9}
!8380 = !{!8375, !8381}
!8381 = !DILocalVariable(name: "count", scope: !8376, file: !8018, line: 1090, type: !9, align: 8)
!8382 = !DILocation(line: 1090, column: 13, scope: !8376, inlinedAt: !8374)
!8383 = !DILocalVariable(name: "self", scope: !8384, file: !8018, line: 1090, type: !8348, align: 8)
!8384 = !DILexicalBlockFile(scope: !8385, file: !8018, discriminator: 0)
!8385 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h59e6b6cf4cc8959aE", scope: !657, file: !656, line: 465, type: !8386, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8364, retainedNodes: !8388)
!8386 = !DISubroutineType(types: !8387)
!8387 = !{!8348, !8348, !868}
!8388 = !{!8383, !8389}
!8389 = !DILocalVariable(name: "count", scope: !8384, file: !8018, line: 1090, type: !868, align: 8)
!8390 = !DILocation(line: 1090, column: 13, scope: !8384, inlinedAt: !8391)
!8391 = !DILocation(line: 990, column: 18, scope: !8377, inlinedAt: !8374)
!8392 = !DILocation(line: 1091, column: 13, scope: !8318)
!8393 = !DILocalVariable(name: "self", scope: !8394, file: !8018, line: 1091, type: !8398, align: 8)
!8394 = !DILexicalBlockFile(scope: !8395, file: !8018, discriminator: 0)
!8395 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h9c86699467480ef6E", scope: !2489, file: !2488, line: 436, type: !8396, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8405, retainedNodes: !8403)
!8396 = !DISubroutineType(types: !8397)
!8397 = !{!3135, !8398, !9}
!8398 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>]", file: !2, size: 128, align: 64, elements: !8399, templateParams: !23, identifier: "ed7960abb562c47b83cb7f99ad4dfc38")
!8399 = !{!8400, !8402}
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8398, file: !2, baseType: !8401, size: 64, align: 64)
!8401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64, align: 64, dwarfAddressSpace: 0)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8398, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8403 = !{!8393, !8404}
!8404 = !DILocalVariable(name: "index", scope: !8394, file: !8018, line: 1091, type: !9, align: 8)
!8405 = !{!8406, !8339}
!8406 = !DITemplateTypeParameter(name: "T", type: !1433)
!8407 = !DILocation(line: 1091, column: 13, scope: !8394, inlinedAt: !8392)
!8408 = !DILocation(line: 1091, column: 41, scope: !8318)
!8409 = !DILocalVariable(name: "self", scope: !8410, file: !8018, line: 1091, type: !9, align: 8)
!8410 = !DILexicalBlockFile(scope: !8411, file: !8018, discriminator: 0)
!8411 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h21638301fd5fe661E", scope: !8345, file: !818, line: 231, type: !8412, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8429, retainedNodes: !8419)
!8412 = !DISubroutineType(types: !8413)
!8413 = !{!8414, !9, !8415}
!8414 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>", baseType: !1433, size: 64, align: 64, dwarfAddressSpace: 0)
!8415 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>]", file: !2, size: 128, align: 64, elements: !8416, templateParams: !23, identifier: "7584bfeda583221068af193e74b12ac9")
!8416 = !{!8417, !8418}
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8415, file: !2, baseType: !8401, size: 64, align: 64)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8415, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8419 = !{!8409, !8420, !8421}
!8420 = !DILocalVariable(name: "slice", scope: !8410, file: !8018, line: 1091, type: !8415, align: 8)
!8421 = !DILocalVariable(name: "runtime", scope: !8422, file: !8018, line: 1091, type: !8424, align: 8)
!8422 = !DILexicalBlockFile(scope: !8423, file: !8018, discriminator: 0)
!8423 = distinct !DILexicalBlock(scope: !8411, file: !386, line: 2336, column: 13)
!8424 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", scope: !8359, file: !2, size: 128, align: 64, elements: !8425, templateParams: !23, identifier: "f1efa43e83c362429410c6ea218290b6")
!8425 = !{!8426, !8427}
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !8424, file: !2, baseType: !393, size: 64, align: 64)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !8424, file: !2, baseType: !8428, size: 64, align: 64, offset: 64)
!8428 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut [core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>]", baseType: !8415, size: 64, align: 64, dwarfAddressSpace: 0)
!8429 = !{!8406}
!8430 = !DILocation(line: 1091, column: 13, scope: !8410, inlinedAt: !8431)
!8431 = !DILocation(line: 443, column: 24, scope: !8395, inlinedAt: !8392)
!8432 = !DILocalVariable(name: "self", scope: !8433, file: !8018, line: 1091, type: !8415, align: 8)
!8433 = !DILexicalBlockFile(scope: !8434, file: !8018, discriminator: 0)
!8434 = distinct !DISubprogram(name: "as_mut_ptr<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h5d31f1fb7554241dE", scope: !922, file: !656, line: 1778, type: !8435, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8429, retainedNodes: !8437)
!8435 = !DISubroutineType(types: !8436)
!8436 = !{!8414, !8415}
!8437 = !{!8432}
!8438 = !DILocation(line: 1091, column: 13, scope: !8433, inlinedAt: !8439)
!8439 = !DILocation(line: 235, column: 13, scope: !8411, inlinedAt: !8431)
!8440 = !DILocalVariable(name: "self", scope: !8441, file: !8018, line: 1091, type: !8414, align: 8)
!8441 = !DILexicalBlockFile(scope: !8442, file: !8018, discriminator: 0)
!8442 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17haab8d5c75bf598dcE", scope: !657, file: !656, line: 985, type: !8443, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8429, retainedNodes: !8445)
!8443 = !DISubroutineType(types: !8444)
!8444 = !{!8414, !8414, !9}
!8445 = !{!8440, !8446}
!8446 = !DILocalVariable(name: "count", scope: !8441, file: !8018, line: 1091, type: !9, align: 8)
!8447 = !DILocation(line: 1091, column: 13, scope: !8441, inlinedAt: !8439)
!8448 = !DILocalVariable(name: "self", scope: !8449, file: !8018, line: 1091, type: !8414, align: 8)
!8449 = !DILexicalBlockFile(scope: !8450, file: !8018, discriminator: 0)
!8450 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h6bfe7e9678bfec88E", scope: !657, file: !656, line: 465, type: !8451, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8429, retainedNodes: !8453)
!8451 = !DISubroutineType(types: !8452)
!8452 = !{!8414, !8414, !868}
!8453 = !{!8448, !8454}
!8454 = !DILocalVariable(name: "count", scope: !8449, file: !8018, line: 1091, type: !868, align: 8)
!8455 = !DILocation(line: 1091, column: 13, scope: !8449, inlinedAt: !8456)
!8456 = !DILocation(line: 990, column: 18, scope: !8442, inlinedAt: !8439)
!8457 = !DILocation(line: 1093, column: 6, scope: !8312)
!8458 = distinct !DISubprogram(name: "forget_node_type<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node176Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17hb1330551cb6ab415E", scope: !1467, file: !8018, line: 1530, type: !8459, scopeLine: 1530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8461)
!8459 = !DISubroutineType(types: !8460)
!8460 = !{!8214, !1467}
!8461 = !{!8462}
!8462 = !DILocalVariable(name: "self", arg: 1, scope: !8458, file: !8018, line: 1531, type: !1467)
!8463 = !DILocation(line: 1531, column: 9, scope: !8458)
!8464 = !DILocation(line: 1533, column: 35, scope: !8458)
!8465 = !DILocation(line: 1533, column: 60, scope: !8458)
!8466 = !DILocation(line: 1533, column: 18, scope: !8458)
!8467 = !DILocation(line: 1534, column: 6, scope: !8458)
!8468 = distinct !DISubprogram(name: "forget_node_type<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$16forget_node_type17h3889dc7713b976adE", scope: !6791, file: !8018, line: 1538, type: !8469, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8471)
!8469 = !DISubroutineType(types: !8470)
!8470 = !{!8214, !6791}
!8471 = !{!8472}
!8472 = !DILocalVariable(name: "self", arg: 1, scope: !8468, file: !8018, line: 1539, type: !6791)
!8473 = !DILocation(line: 1539, column: 9, scope: !8468)
!8474 = !DILocation(line: 1541, column: 35, scope: !8468)
!8475 = !DILocation(line: 1541, column: 60, scope: !8468)
!8476 = !DILocation(line: 1541, column: 18, scope: !8468)
!8477 = !DILocation(line: 1542, column: 6, scope: !8468)
!8478 = distinct !DISubprogram(name: "descend<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node180Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$$C$alloc..collections..btree..node..marker..Edge$GT$7descend17he451cd67fde09695E", scope: !6791, file: !8018, line: 1005, type: !8479, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8481)
!8479 = !DISubroutineType(types: !8480)
!8480 = !{!1334, !6791}
!8481 = !{!8482, !8483, !8486}
!8482 = !DILocalVariable(name: "self", arg: 1, scope: !8478, file: !8018, line: 1005, type: !6791)
!8483 = !DILocalVariable(name: "parent_ptr", scope: !8484, file: !8018, line: 1014, type: !8485, align: 8)
!8484 = distinct !DILexicalBlock(scope: !8478, file: !8018, line: 1014, column: 9)
!8485 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1358, size: 64, align: 64, dwarfAddressSpace: 0)
!8486 = !DILocalVariable(name: "node", scope: !8487, file: !8018, line: 1015, type: !1339, align: 8)
!8487 = distinct !DILexicalBlock(scope: !8484, file: !8018, line: 1015, column: 9)
!8488 = !DILocation(line: 1005, column: 20, scope: !8478)
!8489 = !DILocalVariable(name: "tmp", scope: !8490, file: !8018, line: 1015, type: !1363, align: 8)
!8490 = !DILexicalBlockFile(scope: !8491, file: !8018, discriminator: 0)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !399, line: 1107, column: 5)
!8492 = distinct !DISubprogram(name: "read<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3ptr4read17hea7442f7c01b4c71E", scope: !43, file: !399, line: 1099, type: !8493, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1370, retainedNodes: !8496)
!8493 = !DISubroutineType(types: !8494)
!8494 = !{!1339, !8495}
!8495 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1339, size: 64, align: 64, dwarfAddressSpace: 0)
!8496 = !{!8497, !8489}
!8497 = !DILocalVariable(name: "src", scope: !8498, file: !8018, line: 1015, type: !8495, align: 8)
!8498 = !DILexicalBlockFile(scope: !8492, file: !8018, discriminator: 0)
!8499 = !DILocation(line: 1015, column: 29, scope: !8490, inlinedAt: !8500)
!8500 = !DILocation(line: 1162, column: 18, scope: !8501, inlinedAt: !8505)
!8501 = distinct !DISubprogram(name: "read<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4read17h183fb5197ae73f94E", scope: !414, file: !413, line: 1157, type: !8493, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1370, retainedNodes: !8502)
!8502 = !{!8503}
!8503 = !DILocalVariable(name: "self", scope: !8504, file: !8018, line: 1015, type: !8495, align: 8)
!8504 = !DILexicalBlockFile(scope: !8501, file: !8018, discriminator: 0)
!8505 = !DILocation(line: 704, column: 13, scope: !8506, inlinedAt: !8513)
!8506 = distinct !DISubprogram(name: "assume_init_read<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$16assume_init_read17h872095388f16cde1E", scope: !1363, file: !1609, line: 699, type: !8507, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1370, retainedNodes: !8510)
!8507 = !DISubroutineType(types: !8508)
!8508 = !{!1339, !8509, !344}
!8509 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !1363, size: 64, align: 64, dwarfAddressSpace: 0)
!8510 = !{!8511}
!8511 = !DILocalVariable(name: "self", scope: !8512, file: !8018, line: 1015, type: !8509, align: 8)
!8512 = !DILexicalBlockFile(scope: !8506, file: !8018, discriminator: 0)
!8513 = !DILocation(line: 1015, column: 29, scope: !8484)
!8514 = !DILocation(line: 1006, column: 9, scope: !8478)
!8515 = !DILocation(line: 1014, column: 51, scope: !8478)
!8516 = !DILocation(line: 1014, column: 26, scope: !8478)
!8517 = !DILocation(line: 1014, column: 13, scope: !8484)
!8518 = !DILocalVariable(name: "self", scope: !8519, file: !8018, line: 1015, type: !8523, align: 8)
!8519 = !DILexicalBlockFile(scope: !8520, file: !8018, discriminator: 0)
!8520 = distinct !DISubprogram(name: "get_unchecked<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h2217e25b3b7e917aE", scope: !2489, file: !2488, line: 398, type: !8521, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8530, retainedNodes: !8528)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{!8509, !8523, !9}
!8523 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>]", file: !2, size: 128, align: 64, elements: !8524, templateParams: !23, identifier: "5aba059ecffcbe10c40a90d732681423")
!8524 = !{!8525, !8527}
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8523, file: !2, baseType: !8526, size: 64, align: 64)
!8526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64, align: 64, dwarfAddressSpace: 0)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8523, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8528 = !{!8518, !8529}
!8529 = !DILocalVariable(name: "index", scope: !8519, file: !8018, line: 1015, type: !9, align: 8)
!8530 = !{!8531, !8339}
!8531 = !DITemplateTypeParameter(name: "T", type: !1363)
!8532 = !DILocation(line: 1015, column: 29, scope: !8519, inlinedAt: !8513)
!8533 = !DILocation(line: 1015, column: 63, scope: !8484)
!8534 = !DILocalVariable(name: "self", scope: !8535, file: !8018, line: 1015, type: !9, align: 8)
!8535 = !DILexicalBlockFile(scope: !8536, file: !8018, discriminator: 0)
!8536 = distinct !DISubprogram(name: "get_unchecked<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h808d3f536b970a14E", scope: !8345, file: !818, line: 219, type: !8537, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8555, retainedNodes: !8544)
!8537 = !DISubroutineType(types: !8538)
!8538 = !{!8539, !9, !8540}
!8539 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !1363, size: 64, align: 64, dwarfAddressSpace: 0)
!8540 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>]", file: !2, size: 128, align: 64, elements: !8541, templateParams: !23, identifier: "8526011dc3e0fd6b4168347f99feaef9")
!8541 = !{!8542, !8543}
!8542 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8540, file: !2, baseType: !8526, size: 64, align: 64)
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8540, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!8544 = !{!8534, !8545, !8546}
!8545 = !DILocalVariable(name: "slice", scope: !8535, file: !8018, line: 1015, type: !8540, align: 8)
!8546 = !DILocalVariable(name: "runtime", scope: !8547, file: !8018, line: 1015, type: !8549, align: 8)
!8547 = !DILexicalBlockFile(scope: !8548, file: !8018, discriminator: 0)
!8548 = distinct !DILexicalBlock(scope: !8536, file: !386, line: 2336, column: 13)
!8549 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", scope: !8550, file: !2, size: 128, align: 64, elements: !8551, templateParams: !23, identifier: "90e54cdc21e6ef248418434805830d9d")
!8550 = !DINamespace(name: "get_unchecked", scope: !8345)
!8551 = !{!8552, !8553}
!8552 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !8549, file: !2, baseType: !393, size: 64, align: 64)
!8553 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !8549, file: !2, baseType: !8554, size: 64, align: 64, offset: 64)
!8554 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const [core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>]", baseType: !8540, size: 64, align: 64, dwarfAddressSpace: 0)
!8555 = !{!8531}
!8556 = !DILocation(line: 1015, column: 29, scope: !8535, inlinedAt: !8557)
!8557 = !DILocation(line: 405, column: 20, scope: !8520, inlinedAt: !8513)
!8558 = !DILocalVariable(name: "self", scope: !8559, file: !8018, line: 1015, type: !8540, align: 8)
!8559 = !DILexicalBlockFile(scope: !8560, file: !8018, discriminator: 0)
!8560 = distinct !DISubprogram(name: "as_ptr<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h3f66424a33e1fbe3E", scope: !849, file: !413, line: 1385, type: !8561, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8555, retainedNodes: !8563)
!8561 = !DISubroutineType(types: !8562)
!8562 = !{!8539, !8540}
!8563 = !{!8558}
!8564 = !DILocation(line: 1015, column: 29, scope: !8559, inlinedAt: !8565)
!8565 = !DILocation(line: 226, column: 13, scope: !8536, inlinedAt: !8557)
!8566 = !DILocalVariable(name: "self", scope: !8567, file: !8018, line: 1015, type: !8539, align: 8)
!8567 = !DILexicalBlockFile(scope: !8568, file: !8018, discriminator: 0)
!8568 = distinct !DISubprogram(name: "add<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h36642bf416cd71dbE", scope: !414, file: !413, line: 871, type: !8569, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8555, retainedNodes: !8571)
!8569 = !DISubroutineType(types: !8570)
!8570 = !{!8539, !8539, !9}
!8571 = !{!8566, !8572}
!8572 = !DILocalVariable(name: "count", scope: !8567, file: !8018, line: 1015, type: !9, align: 8)
!8573 = !DILocation(line: 1015, column: 29, scope: !8567, inlinedAt: !8565)
!8574 = !DILocalVariable(name: "self", scope: !8575, file: !8018, line: 1015, type: !8539, align: 8)
!8575 = !DILexicalBlockFile(scope: !8576, file: !8018, discriminator: 0)
!8576 = distinct !DISubprogram(name: "offset<core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h5bb24153b4e81dbbE", scope: !414, file: !413, line: 453, type: !8577, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8555, retainedNodes: !8579)
!8577 = !DISubroutineType(types: !8578)
!8578 = !{!8539, !8539, !868}
!8579 = !{!8574, !8580}
!8580 = !DILocalVariable(name: "count", scope: !8575, file: !8018, line: 1015, type: !868, align: 8)
!8581 = !DILocation(line: 1015, column: 29, scope: !8575, inlinedAt: !8582)
!8582 = !DILocation(line: 876, column: 18, scope: !8568, inlinedAt: !8565)
!8583 = !DILocation(line: 1015, column: 29, scope: !8512, inlinedAt: !8513)
!8584 = !DILocalVariable(name: "self", scope: !8585, file: !8018, line: 1015, type: !8509, align: 8)
!8585 = !DILexicalBlockFile(scope: !8586, file: !8018, discriminator: 0)
!8586 = distinct !DISubprogram(name: "as_ptr<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6as_ptr17hccca6c53e6dce63cE", scope: !1363, file: !1609, line: 535, type: !8587, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1370, retainedNodes: !8589)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{!8495, !8509}
!8589 = !{!8584}
!8590 = !DILocation(line: 1015, column: 29, scope: !8585, inlinedAt: !8505)
!8591 = !DILocation(line: 1015, column: 29, scope: !8504, inlinedAt: !8505)
!8592 = !DILocation(line: 1015, column: 29, scope: !8498, inlinedAt: !8500)
!8593 = !DILocation(line: 1015, column: 29, scope: !8594, inlinedAt: !8598)
!8594 = !DILexicalBlockFile(scope: !8595, file: !8018, discriminator: 0)
!8595 = distinct !DISubprogram(name: "uninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h4395374041dc3bfeE", scope: !1363, file: !1609, line: 320, type: !8596, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1370, retainedNodes: !23)
!8596 = !DISubroutineType(types: !8597)
!8597 = !{!1363}
!8598 = !DILocation(line: 1107, column: 19, scope: !8492, inlinedAt: !8500)
!8599 = !DILocalVariable(name: "self", scope: !8600, file: !8018, line: 1015, type: !8605, align: 8)
!8600 = !DILexicalBlockFile(scope: !8601, file: !8018, discriminator: 0)
!8601 = distinct !DISubprogram(name: "as_mut_ptr<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h2d63ab7f25cb94d1E", scope: !1363, file: !1609, line: 574, type: !8602, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1370, retainedNodes: !8606)
!8602 = !DISubroutineType(types: !8603)
!8603 = !{!8604, !8605}
!8604 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", baseType: !1339, size: 64, align: 64, dwarfAddressSpace: 0)
!8605 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !1363, size: 64, align: 64, dwarfAddressSpace: 0)
!8606 = !{!8599}
!8607 = !DILocation(line: 1015, column: 29, scope: !8600, inlinedAt: !8608)
!8608 = !DILocation(line: 1115, column: 34, scope: !8491, inlinedAt: !8500)
!8609 = !DILocalVariable(name: "self", scope: !8610, file: !8018, line: 1015, type: !1363, align: 8)
!8610 = !DILexicalBlockFile(scope: !8611, file: !8018, discriminator: 0)
!8611 = distinct !DISubprogram(name: "assume_init<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hb14ee8e1b3f890d9E", scope: !1363, file: !1609, line: 629, type: !8612, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1370, retainedNodes: !8614)
!8612 = !DISubroutineType(types: !8613)
!8613 = !{!1339, !1363, !344}
!8614 = !{!8609}
!8615 = !DILocation(line: 1015, column: 29, scope: !8610, inlinedAt: !8616)
!8616 = !DILocation(line: 1116, column: 9, scope: !8491, inlinedAt: !8500)
!8617 = !DILocalVariable(name: "slot", scope: !8618, file: !8018, line: 1015, type: !1367, align: 8)
!8618 = !DILexicalBlockFile(scope: !8619, file: !8018, discriminator: 0)
!8619 = distinct !DISubprogram(name: "into_inner<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hd542297a18cdedbbE", scope: !1367, file: !1575, line: 88, type: !8620, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1370, retainedNodes: !8622)
!8620 = !DISubroutineType(types: !8621)
!8621 = !{!1339, !1367}
!8622 = !{!8617}
!8623 = !DILocation(line: 1015, column: 29, scope: !8618, inlinedAt: !8624)
!8624 = !DILocation(line: 634, column: 13, scope: !8611, inlinedAt: !8616)
!8625 = !DILocation(line: 1015, column: 13, scope: !8487)
!8626 = !DILocation(line: 1016, column: 33, scope: !8487)
!8627 = !DILocation(line: 1016, column: 9, scope: !8487)
!8628 = !DILocation(line: 1017, column: 6, scope: !8478)
!8629 = distinct !DISubprogram(name: "into_node<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", linkageName: "_ZN5alloc11collections5btree4node25Handle$LT$Node$C$Type$GT$9into_node17h00b80403e15e9ff8E", scope: !8214, file: !8018, line: 739, type: !8630, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8219, retainedNodes: !8632)
!8630 = !DISubroutineType(types: !8631)
!8631 = !{!1334, !8214}
!8632 = !{!8633}
!8633 = !DILocalVariable(name: "self", arg: 1, scope: !8629, file: !8018, line: 739, type: !8214)
!8634 = !DILocation(line: 739, column: 22, scope: !8629)
!8635 = !DILocation(line: 740, column: 9, scope: !8629)
!8636 = !DILocation(line: 741, column: 6, scope: !8629)
!8637 = distinct !DISubprogram(name: "first_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h663d4712bd803cc4E", scope: !6794, file: !8018, line: 335, type: !8638, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6809, retainedNodes: !8640)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{!6791, !6794}
!8640 = !{!8641}
!8641 = !DILocalVariable(name: "self", arg: 1, scope: !8637, file: !8018, line: 335, type: !6794)
!8642 = !DILocation(line: 335, column: 23, scope: !8637)
!8643 = !DILocation(line: 336, column: 18, scope: !8637)
!8644 = !DILocation(line: 337, column: 6, scope: !8637)
!8645 = distinct !DISubprogram(name: "first_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$10first_edge17h73ec67a7a97f73a8E", scope: !1470, file: !8018, line: 335, type: !8646, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1485, retainedNodes: !8648)
!8646 = !DISubroutineType(types: !8647)
!8647 = !{!1467, !1470}
!8648 = !{!8649}
!8649 = !DILocalVariable(name: "self", arg: 1, scope: !8645, file: !8018, line: 335, type: !1470)
!8650 = !DILocation(line: 335, column: 23, scope: !8645)
!8651 = !DILocation(line: 336, column: 18, scope: !8645)
!8652 = !DILocation(line: 337, column: 6, scope: !8645)
!8653 = distinct !DISubprogram(name: "as_leaf_ptr<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$11as_leaf_ptr17h0d2da2bbcc039e67E", scope: !1334, file: !8018, line: 300, type: !8654, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1459, retainedNodes: !8657)
!8654 = !DISubroutineType(types: !8655)
!8655 = !{!8083, !8656}
!8656 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", baseType: !1334, size: 64, align: 64, dwarfAddressSpace: 0)
!8657 = !{!8658}
!8658 = !DILocalVariable(name: "this", arg: 1, scope: !8653, file: !8018, line: 300, type: !8656)
!8659 = !DILocation(line: 300, column: 20, scope: !8653)
!8660 = !DILocation(line: 304, column: 9, scope: !8653)
!8661 = !DILocalVariable(name: "self", scope: !8662, file: !8018, line: 304, type: !1339, align: 8)
!8662 = !DILexicalBlockFile(scope: !8663, file: !8018, discriminator: 0)
!8663 = distinct !DISubprogram(name: "as_ptr<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbce776ef6f8cf190E", scope: !1339, file: !646, line: 330, type: !8081, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1442, retainedNodes: !8664)
!8664 = !{!8661}
!8665 = !DILocation(line: 304, column: 9, scope: !8662, inlinedAt: !8660)
!8666 = !DILocation(line: 305, column: 6, scope: !8653)
!8667 = distinct !DISubprogram(name: "len<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$3len17h93522a4947139affE", scope: !1334, file: !8018, line: 277, type: !8668, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1459, retainedNodes: !8670)
!8668 = !DISubroutineType(types: !8669)
!8669 = !{!9, !8656}
!8670 = !{!8671}
!8671 = !DILocalVariable(name: "self", arg: 1, scope: !8667, file: !8018, line: 277, type: !8656)
!8672 = !DILocation(line: 277, column: 16, scope: !8667)
!8673 = !DILocation(line: 280, column: 32, scope: !8667)
!8674 = !DILocation(line: 280, column: 30, scope: !8667)
!8675 = !DILocalVariable(name: "small", scope: !8676, file: !8018, line: 280, type: !1416, align: 2)
!8676 = !DILexicalBlockFile(scope: !8677, file: !8018, discriminator: 0)
!8677 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17h7c56b99d4f7ab462E", scope: !8679, file: !8678, line: 53, type: !8681, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !8683)
!8678 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "e91066e40000f1322cc7cfcb428337d9")
!8679 = !DINamespace(name: "{impl#70}", scope: !8680)
!8680 = !DINamespace(name: "num", scope: !4078)
!8681 = !DISubroutineType(types: !8682)
!8682 = !{!9, !1416}
!8683 = !{!8675}
!8684 = !DILocation(line: 280, column: 18, scope: !8676, inlinedAt: !8685)
!8685 = !DILocation(line: 280, column: 18, scope: !8667)
!8686 = !DILocation(line: 281, column: 6, scope: !8667)
!8687 = distinct !DISubprogram(name: "ascend<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h08ab5990556580afE", scope: !1334, file: !8018, line: 318, type: !8688, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1459, retainedNodes: !8690)
!8688 = !DISubroutineType(types: !8689)
!8689 = !{!8036, !1334}
!8690 = !{!8691, !8692}
!8691 = !DILocalVariable(name: "self", arg: 1, scope: !8687, file: !8018, line: 319, type: !1334)
!8692 = !DILocalVariable(name: "leaf_ptr", scope: !8693, file: !8018, line: 324, type: !1342, align: 8)
!8693 = distinct !DILexicalBlock(scope: !8687, file: !8018, line: 324, column: 9)
!8694 = !DILocation(line: 319, column: 9, scope: !8687)
!8695 = !DILocation(line: 324, column: 13, scope: !8693)
!8696 = !DILocalVariable(name: "self", scope: !8697, file: !8018, line: 325, type: !6783, align: 8)
!8697 = !DILexicalBlockFile(scope: !8698, file: !8018, discriminator: 0)
!8698 = distinct !DISubprogram(name: "ok_or<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h583ce7c69e05ef40E", scope: !6783, file: !1664, line: 1051, type: !8699, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8044, retainedNodes: !8701)
!8699 = !DISubroutineType(types: !8700)
!8700 = !{!8036, !6783, !1334}
!8701 = !{!8696, !8702, !8703}
!8702 = !DILocalVariable(name: "err", scope: !8697, file: !8018, line: 325, type: !1334, align: 8)
!8703 = !DILocalVariable(name: "v", scope: !8704, file: !8018, line: 325, type: !6791, align: 8)
!8704 = !DILexicalBlockFile(scope: !8705, file: !8018, discriminator: 0)
!8705 = distinct !DILexicalBlock(scope: !8698, file: !1664, line: 1056, column: 13)
!8706 = !DILocation(line: 325, column: 9, scope: !8697, inlinedAt: !8707)
!8707 = !DILocation(line: 325, column: 9, scope: !8693)
!8708 = !DILocation(line: 325, column: 9, scope: !8704, inlinedAt: !8707)
!8709 = !DILocation(line: 321, column: 9, scope: !8687)
!8710 = !DILocation(line: 324, column: 34, scope: !8687)
!8711 = !DILocation(line: 325, column: 18, scope: !8693)
!8712 = !DILocalVariable(name: "self", scope: !8713, file: !8018, line: 325, type: !8717, align: 8)
!8713 = !DILexicalBlockFile(scope: !8714, file: !8018, discriminator: 0)
!8714 = distinct !DISubprogram(name: "as_ref<core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$6as_ref17hebbbf2771c00c516E", scope: !1346, file: !1664, line: 626, type: !8715, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1352, retainedNodes: !8718)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{!6767, !8717}
!8717 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<core::ptr::non_null::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>", baseType: !1346, size: 64, align: 64, dwarfAddressSpace: 0)
!8718 = !{!8712, !8719}
!8719 = !DILocalVariable(name: "x", scope: !8720, file: !8018, line: 325, type: !6775, align: 8)
!8720 = !DILexicalBlockFile(scope: !8721, file: !8018, discriminator: 0)
!8721 = distinct !DILexicalBlock(scope: !8714, file: !1664, line: 628, column: 13)
!8722 = !DILocation(line: 325, column: 9, scope: !8713, inlinedAt: !8707)
!8723 = !DILocation(line: 325, column: 9, scope: !8720, inlinedAt: !8707)
!8724 = !DILocation(line: 327, column: 18, scope: !8693)
!8725 = !DILocation(line: 332, column: 20, scope: !8693)
!8726 = !DILocation(line: 333, column: 6, scope: !8687)
!8727 = distinct !DISubprogram(name: "{closure#0}<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend28_$u7b$$u7b$closure$u7d$$u7d$17hf3c8dba9ac9512d8E", scope: !6821, file: !8018, line: 327, type: !8728, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1459, retainedNodes: !8730)
!8728 = !DISubroutineType(types: !8729)
!8729 = !{!6791, !6820, !6775}
!8730 = !{!8731, !8732, !8733}
!8731 = !DILocalVariable(name: "parent", arg: 2, scope: !8727, file: !8018, line: 327, type: !6775)
!8732 = !DILocalVariable(name: "self__height", scope: !8727, file: !8018, line: 319, type: !9, align: 8)
!8733 = !DILocalVariable(name: "leaf_ptr", scope: !8727, file: !8018, line: 324, type: !1342, align: 8)
!8734 = !DILocation(line: 319, column: 9, scope: !8727)
!8735 = !DILocation(line: 324, column: 13, scope: !8727)
!8736 = !DILocation(line: 327, column: 19, scope: !8727)
!8737 = !DILocation(line: 328, column: 46, scope: !8727)
!8738 = !DILocation(line: 328, column: 55, scope: !8727)
!8739 = !DILocation(line: 328, column: 23, scope: !8727)
!8740 = !DILocation(line: 329, column: 43, scope: !8727)
!8741 = !DILocalVariable(name: "self", scope: !8742, file: !8018, line: 329, type: !1409, align: 2)
!8742 = !DILexicalBlockFile(scope: !8743, file: !8018, discriminator: 0)
!8743 = distinct !DISubprogram(name: "assume_init<u16>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h9b0b73bcd126bc20E", scope: !1409, file: !1609, line: 629, type: !8744, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1417, retainedNodes: !8746)
!8744 = !DISubroutineType(types: !8745)
!8745 = !{!1416, !1409, !344}
!8746 = !{!8741}
!8747 = !DILocation(line: 329, column: 43, scope: !8742, inlinedAt: !8740)
!8748 = !DILocalVariable(name: "slot", scope: !8749, file: !8018, line: 329, type: !1413, align: 2)
!8749 = !DILexicalBlockFile(scope: !8750, file: !8018, discriminator: 0)
!8750 = distinct !DISubprogram(name: "into_inner<u16>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hb9209817dcb4964aE", scope: !1413, file: !1575, line: 88, type: !8751, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1417, retainedNodes: !8753)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{!1416, !1413}
!8753 = !{!8748}
!8754 = !DILocation(line: 329, column: 43, scope: !8749, inlinedAt: !8755)
!8755 = !DILocation(line: 634, column: 13, scope: !8743, inlinedAt: !8740)
!8756 = !DILocalVariable(name: "small", scope: !8757, file: !8018, line: 329, type: !1416, align: 2)
!8757 = !DILexicalBlockFile(scope: !8758, file: !8018, discriminator: 0)
!8758 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num66_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$usize$GT$4from17h7c56b99d4f7ab462E", scope: !8679, file: !8678, line: 53, type: !8681, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !8759)
!8759 = !{!8756}
!8760 = !DILocation(line: 329, column: 31, scope: !8757, inlinedAt: !8761)
!8761 = !DILocation(line: 329, column: 31, scope: !8727)
!8762 = !DILocation(line: 327, column: 27, scope: !8727)
!8763 = !DILocation(line: 327, column: 26, scope: !8727)
!8764 = distinct !DISubprogram(name: "as_leaf_dying<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$Type$GT$13as_leaf_dying17ha27af114b5719aefE", scope: !1334, file: !8018, line: 446, type: !8765, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8772, retainedNodes: !8768)
!8765 = !DISubroutineType(types: !8766)
!8766 = !{!8319, !8767}
!8767 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", baseType: !1334, size: 64, align: 64, dwarfAddressSpace: 0)
!8768 = !{!8769, !8770}
!8769 = !DILocalVariable(name: "self", arg: 1, scope: !8764, file: !8018, line: 446, type: !8767)
!8770 = !DILocalVariable(name: "ptr", scope: !8771, file: !8018, line: 447, type: !8083, align: 8)
!8771 = distinct !DILexicalBlock(scope: !8764, file: !8018, line: 447, column: 9)
!8772 = !{!1375, !1387, !1461}
!8773 = !DILocation(line: 446, column: 22, scope: !8764)
!8774 = !DILocation(line: 447, column: 19, scope: !8764)
!8775 = !DILocation(line: 447, column: 13, scope: !8771)
!8776 = !DILocation(line: 450, column: 6, scope: !8764)
!8777 = distinct !DISubprogram(name: "into_dying<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", linkageName: "_ZN5alloc11collections5btree4node76NodeRef$LT$alloc..collections..btree..node..marker..Owned$C$K$C$V$C$Type$GT$10into_dying17h6029ad7cda11e823E", scope: !1519, file: !8018, line: 623, type: !8778, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8772, retainedNodes: !8780)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!1334, !1519}
!8780 = !{!8781}
!8781 = !DILocalVariable(name: "self", arg: 1, scope: !8777, file: !8018, line: 623, type: !1519)
!8782 = !DILocation(line: 623, column: 23, scope: !8777)
!8783 = !DILocation(line: 624, column: 9, scope: !8777)
!8784 = !DILocation(line: 625, column: 6, scope: !8777)
!8785 = distinct !DISubprogram(name: "forget_type<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node81NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$11forget_type17hf51b02f27d1fa84aE", scope: !1470, file: !8018, line: 664, type: !8786, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8788)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!1334, !1470}
!8788 = !{!8789}
!8789 = !DILocalVariable(name: "self", arg: 1, scope: !8785, file: !8018, line: 664, type: !1470)
!8790 = !DILocation(line: 664, column: 24, scope: !8785)
!8791 = !DILocation(line: 665, column: 9, scope: !8785)
!8792 = !DILocation(line: 666, column: 6, scope: !8785)
!8793 = distinct !DISubprogram(name: "forget_type<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$11forget_type17hd17b7de4779fd967E", scope: !6794, file: !8018, line: 671, type: !8794, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8796)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!1334, !6794}
!8796 = !{!8797}
!8797 = !DILocalVariable(name: "self", arg: 1, scope: !8793, file: !8018, line: 671, type: !6794)
!8798 = !DILocation(line: 671, column: 24, scope: !8793)
!8799 = !DILocation(line: 672, column: 9, scope: !8793)
!8800 = !DILocation(line: 673, column: 6, scope: !8793)
!8801 = distinct !DISubprogram(name: "from_internal<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$13from_internal17ha18b6c4c4c0a22adE", scope: !6794, file: !8018, line: 248, type: !8802, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8804)
!8802 = !DISubroutineType(types: !8803)
!8803 = !{!6794, !1354, !9}
!8804 = !{!8805, !8806}
!8805 = !DILocalVariable(name: "node", arg: 1, scope: !8801, file: !8018, line: 248, type: !1354)
!8806 = !DILocalVariable(name: "height", arg: 2, scope: !8801, file: !8018, line: 248, type: !9)
!8807 = !DILocation(line: 248, column: 22, scope: !8801)
!8808 = !DILocation(line: 248, column: 57, scope: !8801)
!8809 = !DILocation(line: 250, column: 33, scope: !8801)
!8810 = !DILocalVariable(name: "self", scope: !8811, file: !8018, line: 250, type: !1354, align: 8)
!8811 = !DILexicalBlockFile(scope: !8812, file: !8018, discriminator: 0)
!8812 = distinct !DISubprogram(name: "cast<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>, alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h40593d84fd074c79E", scope: !1354, file: !646, line: 453, type: !8813, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8816, retainedNodes: !8815)
!8813 = !DISubroutineType(types: !8814)
!8814 = !{!1339, !1354}
!8815 = !{!8810}
!8816 = !{!1402, !8817}
!8817 = !DITemplateTypeParameter(name: "U", type: !1343)
!8818 = !DILocation(line: 250, column: 33, scope: !8811, inlinedAt: !8809)
!8819 = !DILocalVariable(name: "self", scope: !8820, file: !8018, line: 250, type: !1354, align: 8)
!8820 = !DILexicalBlockFile(scope: !8821, file: !8018, discriminator: 0)
!8821 = distinct !DISubprogram(name: "as_ptr<alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd4bc8c6a80cbb0f3E", scope: !1354, file: !646, line: 330, type: !8822, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1401, retainedNodes: !8824)
!8822 = !DISubroutineType(types: !8823)
!8823 = !{!8485, !1354}
!8824 = !{!8819}
!8825 = !DILocation(line: 250, column: 33, scope: !8820, inlinedAt: !8826)
!8826 = !DILocation(line: 455, column: 41, scope: !8812, inlinedAt: !8809)
!8827 = !DILocalVariable(name: "ptr", scope: !8828, file: !8018, line: 250, type: !8083, align: 8)
!8828 = !DILexicalBlockFile(scope: !8829, file: !8018, discriminator: 0)
!8829 = distinct !DISubprogram(name: "new_unchecked<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h3c58a641ce65670dE", scope: !1339, file: !646, line: 196, type: !8830, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1442, retainedNodes: !8832)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{!1339, !8083}
!8832 = !{!8827}
!8833 = !DILocation(line: 250, column: 33, scope: !8828, inlinedAt: !8834)
!8834 = !DILocation(line: 455, column: 18, scope: !8812, inlinedAt: !8809)
!8835 = !DILocation(line: 250, column: 9, scope: !8801)
!8836 = !DILocation(line: 251, column: 6, scope: !8801)
!8837 = distinct !DISubprogram(name: "as_internal_ptr<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node85NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..Internal$GT$15as_internal_ptr17h62e6265bd368e9f6E", scope: !6794, file: !8018, line: 258, type: !8838, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8841)
!8838 = !DISubroutineType(types: !8839)
!8839 = !{!8485, !8840}
!8840 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", baseType: !6794, size: 64, align: 64, dwarfAddressSpace: 0)
!8841 = !{!8842}
!8842 = !DILocalVariable(name: "this", arg: 1, scope: !8837, file: !8018, line: 258, type: !8840)
!8843 = !DILocation(line: 258, column: 24, scope: !8837)
!8844 = !DILocation(line: 260, column: 9, scope: !8837)
!8845 = !DILocalVariable(name: "self", scope: !8846, file: !8018, line: 260, type: !1339, align: 8)
!8846 = !DILexicalBlockFile(scope: !8847, file: !8018, discriminator: 0)
!8847 = distinct !DISubprogram(name: "as_ptr<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbce776ef6f8cf190E", scope: !1339, file: !646, line: 330, type: !8081, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1442, retainedNodes: !8848)
!8848 = !{!8845}
!8849 = !DILocation(line: 260, column: 9, scope: !8846, inlinedAt: !8844)
!8850 = !DILocation(line: 261, column: 6, scope: !8837)
!8851 = distinct !DISubprogram(name: "force<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree4node91NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$5force17hb27daaa292335ffcE", scope: !1334, file: !8018, line: 678, type: !8852, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8870)
!8852 = !DISubroutineType(types: !8853)
!8853 = !{!8854, !1334}
!8854 = !DICompositeType(tag: DW_TAG_structure_type, name: "ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>", scope: !1335, file: !2, size: 192, align: 64, elements: !8855, templateParams: !23, identifier: "6e940a279213f9afd4f786ddc939230")
!8855 = !{!8856}
!8856 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8854, file: !2, size: 192, align: 64, elements: !8857, templateParams: !23, identifier: "613ca4f3a215af9a91e539e8fa6dbe46", discriminator: !8869)
!8857 = !{!8858, !8865}
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "Leaf", scope: !8856, file: !2, baseType: !8859, size: 192, align: 64, extraData: i64 0)
!8859 = !DICompositeType(tag: DW_TAG_structure_type, name: "Leaf", scope: !8854, file: !2, size: 192, align: 64, elements: !8860, templateParams: !8862, identifier: "ea72e7e48a9fa1adbe3471e38192100e")
!8860 = !{!8861}
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8859, file: !2, baseType: !1470, size: 128, align: 64, offset: 64)
!8862 = !{!8863, !8864}
!8863 = !DITemplateTypeParameter(name: "Leaf", type: !1470)
!8864 = !DITemplateTypeParameter(name: "Internal", type: !6794)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "Internal", scope: !8856, file: !2, baseType: !8866, size: 192, align: 64, extraData: i64 1)
!8866 = !DICompositeType(tag: DW_TAG_structure_type, name: "Internal", scope: !8854, file: !2, size: 192, align: 64, elements: !8867, templateParams: !8862, identifier: "d93f723309782daceab0b2e390555239")
!8867 = !{!8868}
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8866, file: !2, baseType: !6794, size: 128, align: 64, offset: 64)
!8869 = !DIDerivedType(tag: DW_TAG_member, scope: !8854, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!8870 = !{!8871}
!8871 = !DILocalVariable(name: "self", arg: 1, scope: !8851, file: !8018, line: 679, type: !1334)
!8872 = !DILocation(line: 679, column: 9, scope: !8851)
!8873 = !DILocation(line: 684, column: 12, scope: !8851)
!8874 = !DILocation(line: 685, column: 31, scope: !8851)
!8875 = !DILocation(line: 685, column: 13, scope: !8851)
!8876 = !DILocation(line: 684, column: 9, scope: !8851)
!8877 = !DILocation(line: 691, column: 35, scope: !8851)
!8878 = !DILocation(line: 691, column: 13, scope: !8851)
!8879 = !DILocation(line: 697, column: 6, scope: !8851)
!8880 = distinct !DISubprogram(name: "full_range<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate10full_range17h20ca7ef6d3fed0bfE", scope: !1315, file: !8881, line: 289, type: !8882, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8884)
!8881 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/btree/navigate.rs", directory: "", checksumkind: CSK_MD5, checksum: "42bb7a49bdbf5bdb886aa942955e09f5")
!8882 = !DISubroutineType(types: !8883)
!8883 = !{!1314, !1334, !1334}
!8884 = !{!8885, !8886}
!8885 = !DILocalVariable(name: "root1", arg: 1, scope: !8880, file: !8881, line: 290, type: !1334)
!8886 = !DILocalVariable(name: "root2", arg: 2, scope: !8880, file: !8881, line: 291, type: !1334)
!8887 = !DILocation(line: 290, column: 5, scope: !8880)
!8888 = !DILocation(line: 291, column: 5, scope: !8880)
!8889 = !DILocation(line: 294, column: 21, scope: !8880)
!8890 = !DILocation(line: 294, column: 16, scope: !8880)
!8891 = !DILocation(line: 295, column: 20, scope: !8880)
!8892 = !DILocation(line: 295, column: 15, scope: !8880)
!8893 = !DILocation(line: 293, column: 5, scope: !8880)
!8894 = !DILocation(line: 297, column: 2, scope: !8880)
!8895 = distinct !DISubprogram(name: "first_leaf_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h5eb8f82c7c9fed12E", scope: !1334, file: !8881, line: 618, type: !8896, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8898)
!8896 = !DISubroutineType(types: !8897)
!8897 = !{!1467, !1334}
!8898 = !{!8899, !8900, !8902, !8904}
!8899 = !DILocalVariable(name: "self", arg: 1, scope: !8895, file: !8881, line: 618, type: !1334)
!8900 = !DILocalVariable(name: "node", scope: !8901, file: !8881, line: 619, type: !1334, align: 8)
!8901 = distinct !DILexicalBlock(scope: !8895, file: !8881, line: 619, column: 9)
!8902 = !DILocalVariable(name: "leaf", scope: !8903, file: !8881, line: 622, type: !1470, align: 8)
!8903 = distinct !DILexicalBlock(scope: !8901, file: !8881, line: 622, column: 17)
!8904 = !DILocalVariable(name: "internal", scope: !8905, file: !8881, line: 623, type: !6794, align: 8)
!8905 = distinct !DILexicalBlock(scope: !8901, file: !8881, line: 623, column: 17)
!8906 = !DILocation(line: 618, column: 28, scope: !8895)
!8907 = !DILocation(line: 619, column: 13, scope: !8901)
!8908 = !DILocation(line: 619, column: 24, scope: !8895)
!8909 = !DILocation(line: 620, column: 9, scope: !8901)
!8910 = !DILocation(line: 621, column: 19, scope: !8901)
!8911 = !DILocation(line: 621, column: 13, scope: !8901)
!8912 = !DILocation(line: 622, column: 22, scope: !8901)
!8913 = !DILocation(line: 622, column: 22, scope: !8903)
!8914 = !DILocation(line: 622, column: 38, scope: !8903)
!8915 = !DILocation(line: 623, column: 26, scope: !8901)
!8916 = !DILocation(line: 623, column: 26, scope: !8905)
!8917 = !DILocation(line: 623, column: 46, scope: !8905)
!8918 = !DILocation(line: 623, column: 39, scope: !8905)
!8919 = !DILocation(line: 626, column: 6, scope: !8895)
!8920 = distinct !DISubprogram(name: "full_range<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate178_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$10full_range17h09990fc7236fc009E", scope: !1334, file: !8881, line: 354, type: !8921, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1374, retainedNodes: !8923)
!8921 = !DISubroutineType(types: !8922)
!8922 = !{!1314, !1334}
!8923 = !{!8924, !8925}
!8924 = !DILocalVariable(name: "self", arg: 1, scope: !8920, file: !8881, line: 354, type: !1334)
!8925 = !DILocalVariable(name: "self2", scope: !8926, file: !8881, line: 357, type: !1334, align: 8)
!8926 = distinct !DILexicalBlock(scope: !8920, file: !8881, line: 357, column: 9)
!8927 = !DILocation(line: 354, column: 23, scope: !8920)
!8928 = !DILocalVariable(name: "tmp", scope: !8929, file: !8881, line: 357, type: !8940, align: 8)
!8929 = !DILexicalBlockFile(scope: !8930, file: !8881, discriminator: 0)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !399, line: 1107, column: 5)
!8931 = distinct !DISubprogram(name: "read<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3ptr4read17h95710c11d5b09cb9E", scope: !43, file: !399, line: 1099, type: !8932, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !8935)
!8932 = !DISubroutineType(types: !8933)
!8933 = !{!1334, !8934}
!8934 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", baseType: !1334, size: 64, align: 64, dwarfAddressSpace: 0)
!8935 = !{!8936, !8928}
!8936 = !DILocalVariable(name: "src", scope: !8937, file: !8881, line: 357, type: !8934, align: 8)
!8937 = !DILexicalBlockFile(scope: !8931, file: !8881, discriminator: 0)
!8938 = !{!8939}
!8939 = !DITemplateTypeParameter(name: "T", type: !1334)
!8940 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", scope: !982, file: !2, size: 128, align: 64, elements: !8941, templateParams: !8938, identifier: "6a2aeed685201e632ab03f1298443426")
!8941 = !{!8942, !8943}
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !8940, file: !2, baseType: !7, align: 8)
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8940, file: !2, baseType: !8944, size: 128, align: 64)
!8944 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", scope: !987, file: !2, size: 128, align: 64, elements: !8945, templateParams: !8938, identifier: "f7258d7ddc32e951bd13112b6eb667a3")
!8945 = !{!8946}
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !8944, file: !2, baseType: !1334, size: 128, align: 64)
!8947 = !DILocation(line: 357, column: 30, scope: !8929, inlinedAt: !8948)
!8948 = !DILocation(line: 357, column: 30, scope: !8920)
!8949 = !DILocation(line: 357, column: 40, scope: !8920)
!8950 = !DILocation(line: 357, column: 30, scope: !8937, inlinedAt: !8948)
!8951 = !DILocation(line: 357, column: 30, scope: !8952, inlinedAt: !8956)
!8952 = !DILexicalBlockFile(scope: !8953, file: !8881, discriminator: 0)
!8953 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hf60fb1b423cf7624E", scope: !8940, file: !1609, line: 320, type: !8954, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !23)
!8954 = !DISubroutineType(types: !8955)
!8955 = !{!8940}
!8956 = !DILocation(line: 1107, column: 19, scope: !8931, inlinedAt: !8948)
!8957 = !DILocalVariable(name: "self", scope: !8958, file: !8881, line: 357, type: !8963, align: 8)
!8958 = !DILexicalBlockFile(scope: !8959, file: !8881, discriminator: 0)
!8959 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h65f0557c691cd362E", scope: !8940, file: !1609, line: 574, type: !8960, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !8964)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{!8962, !8963}
!8962 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", baseType: !1334, size: 64, align: 64, dwarfAddressSpace: 0)
!8963 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", baseType: !8940, size: 64, align: 64, dwarfAddressSpace: 0)
!8964 = !{!8957}
!8965 = !DILocation(line: 357, column: 30, scope: !8958, inlinedAt: !8966)
!8966 = !DILocation(line: 1115, column: 34, scope: !8930, inlinedAt: !8948)
!8967 = !DILocalVariable(name: "self", scope: !8968, file: !8881, line: 357, type: !8940, align: 8)
!8968 = !DILexicalBlockFile(scope: !8969, file: !8881, discriminator: 0)
!8969 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17ha02e32c1305f6b3cE", scope: !8940, file: !1609, line: 629, type: !8970, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{!1334, !8940, !344}
!8972 = !{!8967}
!8973 = !DILocation(line: 357, column: 30, scope: !8968, inlinedAt: !8974)
!8974 = !DILocation(line: 1116, column: 9, scope: !8930, inlinedAt: !8948)
!8975 = !DILocalVariable(name: "slot", scope: !8976, file: !8881, line: 357, type: !8944, align: 8)
!8976 = !DILexicalBlockFile(scope: !8977, file: !8881, discriminator: 0)
!8977 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h57d1938c7f71bee2E", scope: !8944, file: !1575, line: 88, type: !8978, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !8980)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!1334, !8944}
!8980 = !{!8975}
!8981 = !DILocation(line: 357, column: 30, scope: !8976, inlinedAt: !8982)
!8982 = !DILocation(line: 634, column: 13, scope: !8969, inlinedAt: !8974)
!8983 = !DILocation(line: 357, column: 13, scope: !8926)
!8984 = !DILocation(line: 358, column: 20, scope: !8926)
!8985 = !DILocation(line: 358, column: 9, scope: !8926)
!8986 = !DILocation(line: 359, column: 6, scope: !8920)
!8987 = distinct !DISubprogram(name: "next_leaf_edge<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17h0e84692745fae49cE", scope: !1829, file: !8881, line: 699, type: !8988, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !8990)
!8988 = !DISubroutineType(types: !8989)
!8989 = !{!1467, !1829}
!8990 = !{!8991, !8992, !8994, !8996}
!8991 = !DILocalVariable(name: "self", arg: 1, scope: !8987, file: !8881, line: 699, type: !1829)
!8992 = !DILocalVariable(name: "leaf_kv", scope: !8993, file: !8881, line: 701, type: !8174, align: 8)
!8993 = distinct !DILexicalBlock(scope: !8987, file: !8881, line: 701, column: 13)
!8994 = !DILocalVariable(name: "internal_kv", scope: !8995, file: !8881, line: 702, type: !8156, align: 8)
!8995 = distinct !DILexicalBlock(scope: !8987, file: !8881, line: 702, column: 13)
!8996 = !DILocalVariable(name: "next_internal_edge", scope: !8997, file: !8881, line: 703, type: !6791, align: 8)
!8997 = distinct !DILexicalBlock(scope: !8995, file: !8881, line: 703, column: 17)
!8998 = !DILocation(line: 699, column: 27, scope: !8987)
!8999 = !DILocation(line: 701, column: 18, scope: !8993)
!9000 = !DILocation(line: 702, column: 22, scope: !8995)
!9001 = !DILocation(line: 703, column: 21, scope: !8997)
!9002 = !DILocation(line: 700, column: 15, scope: !8987)
!9003 = !DILocation(line: 700, column: 9, scope: !8987)
!9004 = !DILocation(line: 701, column: 18, scope: !8987)
!9005 = !DILocation(line: 701, column: 30, scope: !8993)
!9006 = !DILocation(line: 702, column: 22, scope: !8987)
!9007 = !DILocation(line: 703, column: 42, scope: !8995)
!9008 = !DILocation(line: 704, column: 17, scope: !8997)
!9009 = !DILocation(line: 705, column: 13, scope: !8987)
!9010 = !DILocation(line: 707, column: 6, scope: !8987)
!9011 = !DILocation(line: 701, column: 49, scope: !8987)
!9012 = distinct !DISubprogram(name: "deallocating_end<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$16deallocating_end17h70842e389ae01b60E", scope: !1467, file: !8881, line: 504, type: !9013, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !9015)
!9013 = !DISubroutineType(types: !9014)
!9014 = !{null, !1467, !336}
!9015 = !{!9016, !9017, !9018, !9020}
!9016 = !DILocalVariable(name: "self", arg: 1, scope: !9012, file: !8881, line: 504, type: !1467)
!9017 = !DILocalVariable(name: "alloc", arg: 2, scope: !9012, file: !8881, line: 504, type: !336)
!9018 = !DILocalVariable(name: "edge", scope: !9019, file: !8881, line: 505, type: !8214, align: 8)
!9019 = distinct !DILexicalBlock(scope: !9012, file: !8881, line: 505, column: 9)
!9020 = !DILocalVariable(name: "parent_edge", scope: !9021, file: !8881, line: 506, type: !6791, align: 8)
!9021 = distinct !DILexicalBlock(scope: !9019, file: !8881, line: 508, column: 9)
!9022 = !DILocation(line: 504, column: 47, scope: !9012)
!9023 = !DILocation(line: 504, column: 53, scope: !9012)
!9024 = !DILocation(line: 505, column: 13, scope: !9019)
!9025 = !DILocation(line: 506, column: 24, scope: !9021)
!9026 = !DILocation(line: 505, column: 24, scope: !9012)
!9027 = !DILocation(line: 511, column: 5, scope: !9012)
!9028 = !DILocation(line: 506, column: 9, scope: !9019)
!9029 = !DILocation(line: 507, column: 22, scope: !9021)
!9030 = !DILocation(line: 507, column: 61, scope: !9021)
!9031 = !DILocation(line: 506, column: 19, scope: !9021)
!9032 = !DILocation(line: 509, column: 20, scope: !9021)
!9033 = !DILocation(line: 511, column: 6, scope: !9012)
!9034 = !DILocation(line: 509, column: 13, scope: !9021)
!9035 = !DILocation(line: 504, column: 5, scope: !9012)
!9036 = distinct !DISubprogram(name: "deallocating_next<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$17deallocating_next17hcb30adc3deea874fE", scope: !1467, file: !8881, line: 447, type: !9037, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !9056)
!9037 = !DISubroutineType(types: !9038)
!9038 = !{!9039, !1467, !336}
!9039 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", scope: !177, file: !2, size: 384, align: 64, elements: !9040, templateParams: !23, identifier: "22690bc52a72a5a837594e80d37d36c3")
!9040 = !{!9041}
!9041 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9039, file: !2, size: 384, align: 64, elements: !9042, templateParams: !23, identifier: "eaccf6f42c70765ff8f045d32efe9501", discriminator: !9055)
!9042 = !{!9043, !9051}
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !9041, file: !2, baseType: !9044, size: 384, align: 64, extraData: i64 0)
!9044 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !9039, file: !2, size: 384, align: 64, elements: !23, templateParams: !9045, identifier: "35c78e8fb782a6acb13f4f6271dfde2e")
!9045 = !{!9046}
!9046 = !DITemplateTypeParameter(name: "T", type: !9047)
!9047 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)", file: !2, size: 384, align: 64, elements: !9048, templateParams: !23, identifier: "f8709cba3d56998bc0a57e4cecac26ee")
!9048 = !{!9049, !9050}
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9047, file: !2, baseType: !1467, size: 192, align: 64)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !9047, file: !2, baseType: !1829, size: 192, align: 64, offset: 192)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !9041, file: !2, baseType: !9052, size: 384, align: 64)
!9052 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !9039, file: !2, size: 384, align: 64, elements: !9053, templateParams: !9045, identifier: "dbc9fb5823410c2776d042480fcd54e8")
!9053 = !{!9054}
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9052, file: !2, baseType: !9047, size: 384, align: 64)
!9055 = !DIDerivedType(tag: DW_TAG_member, scope: !9039, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!9056 = !{!9057, !9058, !9059, !9061, !9063, !9065}
!9057 = !DILocalVariable(name: "self", arg: 1, scope: !9036, file: !8881, line: 448, type: !1467)
!9058 = !DILocalVariable(name: "alloc", arg: 2, scope: !9036, file: !8881, line: 449, type: !336)
!9059 = !DILocalVariable(name: "edge", scope: !9060, file: !8881, line: 452, type: !8214, align: 8)
!9060 = distinct !DILexicalBlock(scope: !9036, file: !8881, line: 452, column: 9)
!9061 = !DILocalVariable(name: "kv", scope: !9062, file: !8881, line: 455, type: !1829, align: 8)
!9062 = distinct !DILexicalBlock(scope: !9060, file: !8881, line: 455, column: 17)
!9063 = !DILocalVariable(name: "last_edge", scope: !9064, file: !8881, line: 456, type: !8214, align: 8)
!9064 = distinct !DILexicalBlock(scope: !9060, file: !8881, line: 456, column: 17)
!9065 = !DILocalVariable(name: "parent_edge", scope: !9066, file: !8881, line: 458, type: !6791, align: 8)
!9066 = distinct !DILexicalBlock(scope: !9064, file: !8881, line: 458, column: 25)
!9067 = !DILocation(line: 448, column: 9, scope: !9036)
!9068 = !DILocation(line: 449, column: 9, scope: !9036)
!9069 = !DILocation(line: 452, column: 13, scope: !9060)
!9070 = !DILocation(line: 455, column: 20, scope: !9062)
!9071 = !DILocation(line: 456, column: 21, scope: !9064)
!9072 = !DILocation(line: 458, column: 30, scope: !9066)
!9073 = !DILocalVariable(name: "tmp", scope: !9074, file: !8881, line: 455, type: !9083, align: 8)
!9074 = !DILexicalBlockFile(scope: !9075, file: !8881, discriminator: 0)
!9075 = distinct !DILexicalBlock(scope: !9076, file: !399, line: 1107, column: 5)
!9076 = distinct !DISubprogram(name: "read<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3ptr4read17h2e0b449ed16cea90E", scope: !43, file: !399, line: 1099, type: !9077, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7877, retainedNodes: !9080)
!9077 = !DISubroutineType(types: !9078)
!9078 = !{!1829, !9079}
!9079 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", baseType: !1829, size: 64, align: 64, dwarfAddressSpace: 0)
!9080 = !{!9081, !9073}
!9081 = !DILocalVariable(name: "src", scope: !9082, file: !8881, line: 455, type: !9079, align: 8)
!9082 = !DILexicalBlockFile(scope: !9076, file: !8881, discriminator: 0)
!9083 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", scope: !982, file: !2, size: 192, align: 64, elements: !9084, templateParams: !7877, identifier: "b26e41af4bbe775377a4ff4274e7a6c3")
!9084 = !{!9085, !9086}
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !9083, file: !2, baseType: !7, align: 8)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9083, file: !2, baseType: !9087, size: 192, align: 64)
!9087 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", scope: !987, file: !2, size: 192, align: 64, elements: !9088, templateParams: !7877, identifier: "4b3694c46fb3a8bc2b9a10e7397ce87c")
!9088 = !{!9089}
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9087, file: !2, baseType: !1829, size: 192, align: 64)
!9090 = !DILocation(line: 455, column: 49, scope: !9074, inlinedAt: !9091)
!9091 = !DILocation(line: 455, column: 49, scope: !9062)
!9092 = !DILocalVariable(name: "self", scope: !9093, file: !8881, line: 455, type: !9083, align: 8)
!9093 = !DILexicalBlockFile(scope: !9094, file: !8881, discriminator: 0)
!9094 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h9d61d6904ba971c9E", scope: !9083, file: !1609, line: 629, type: !9095, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7877, retainedNodes: !9097)
!9095 = !DISubroutineType(types: !9096)
!9096 = !{!1829, !9083, !344}
!9097 = !{!9092}
!9098 = !DILocation(line: 455, column: 49, scope: !9093, inlinedAt: !9099)
!9099 = !DILocation(line: 1116, column: 9, scope: !9075, inlinedAt: !9091)
!9100 = !DILocalVariable(name: "slot", scope: !9101, file: !8881, line: 455, type: !9087, align: 8)
!9101 = !DILexicalBlockFile(scope: !9102, file: !8881, discriminator: 0)
!9102 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hf5ee82e365788b0aE", scope: !9087, file: !1575, line: 88, type: !9103, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7877, retainedNodes: !9105)
!9103 = !DISubroutineType(types: !9104)
!9104 = !{!1829, !9087}
!9105 = !{!9100}
!9106 = !DILocation(line: 455, column: 49, scope: !9101, inlinedAt: !9107)
!9107 = !DILocation(line: 634, column: 13, scope: !9094, inlinedAt: !9099)
!9108 = !DILocation(line: 452, column: 24, scope: !9036)
!9109 = !DILocation(line: 464, column: 5, scope: !9036)
!9110 = !DILocation(line: 453, column: 9, scope: !9060)
!9111 = !DILocation(line: 454, column: 26, scope: !9060)
!9112 = !DILocation(line: 454, column: 20, scope: !9060)
!9113 = !DILocation(line: 455, column: 20, scope: !9060)
!9114 = !DILocation(line: 455, column: 59, scope: !9062)
!9115 = !DILocation(line: 455, column: 49, scope: !9082, inlinedAt: !9091)
!9116 = !DILocation(line: 455, column: 49, scope: !9117, inlinedAt: !9121)
!9117 = !DILexicalBlockFile(scope: !9118, file: !8881, discriminator: 0)
!9118 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h33fb90cd18d73fa8E", scope: !9083, file: !1609, line: 320, type: !9119, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7877, retainedNodes: !23)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{!9083}
!9121 = !DILocation(line: 1107, column: 19, scope: !9076, inlinedAt: !9091)
!9122 = !DILocalVariable(name: "self", scope: !9123, file: !8881, line: 455, type: !9128, align: 8)
!9123 = !DILexicalBlockFile(scope: !9124, file: !8881, discriminator: 0)
!9124 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h3f22c4b9256f3236E", scope: !9083, file: !1609, line: 574, type: !9125, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7877, retainedNodes: !9129)
!9125 = !DISubroutineType(types: !9126)
!9126 = !{!9127, !9128}
!9127 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", baseType: !1829, size: 64, align: 64, dwarfAddressSpace: 0)
!9128 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", baseType: !9083, size: 64, align: 64, dwarfAddressSpace: 0)
!9129 = !{!9122}
!9130 = !DILocation(line: 455, column: 49, scope: !9123, inlinedAt: !9131)
!9131 = !DILocation(line: 1115, column: 34, scope: !9075, inlinedAt: !9091)
!9132 = !DILocation(line: 456, column: 21, scope: !9060)
!9133 = !DILocation(line: 457, column: 36, scope: !9064)
!9134 = !DILocation(line: 457, column: 80, scope: !9064)
!9135 = !DILocation(line: 457, column: 27, scope: !9064)
!9136 = !DILocation(line: 457, column: 21, scope: !9064)
!9137 = !DILocation(line: 459, column: 40, scope: !9064)
!9138 = !DILocation(line: 1, column: 1, scope: !9139)
!9139 = !DILexicalBlockFile(scope: !9060, file: !4178, discriminator: 0)
!9140 = !DILocation(line: 458, column: 30, scope: !9064)
!9141 = !DILocation(line: 458, column: 46, scope: !9066)
!9142 = !DILocation(line: 454, column: 13, scope: !9060)
!9143 = !DILocation(line: 455, column: 40, scope: !9062)
!9144 = !DILocation(line: 455, column: 84, scope: !9062)
!9145 = !DILocation(line: 455, column: 39, scope: !9062)
!9146 = !DILocation(line: 455, column: 34, scope: !9062)
!9147 = !DILocation(line: 447, column: 5, scope: !9036)
!9148 = !DILocation(line: 464, column: 6, scope: !9036)
!9149 = distinct !DISubprogram(name: "deallocating_next_unchecked<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked17h24b1d1a4f23493ffE", scope: !1467, file: !8881, line: 583, type: !9150, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !9152)
!9150 = !DISubroutineType(types: !9151)
!9151 = !{!1829, !7901, !336}
!9152 = !{!9153, !9154}
!9153 = !DILocalVariable(name: "self", arg: 1, scope: !9149, file: !8881, line: 584, type: !7901)
!9154 = !DILocalVariable(name: "alloc", arg: 2, scope: !9149, file: !8881, line: 585, type: !336)
!9155 = !DILocation(line: 584, column: 9, scope: !9149)
!9156 = !DILocation(line: 585, column: 9, scope: !9149)
!9157 = !DILocation(line: 587, column: 35, scope: !9149)
!9158 = !DILocation(line: 587, column: 9, scope: !9149)
!9159 = !DILocation(line: 590, column: 6, scope: !9149)
!9160 = distinct !DISubprogram(name: "{closure#0}<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hac7949a33984b5a4E", scope: !7903, file: !8881, line: 587, type: !9161, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !9163)
!9161 = !DISubroutineType(types: !9162)
!9162 = !{!9047, !7902, !1467}
!9163 = !{!9164, !9165}
!9164 = !DILocalVariable(name: "leaf_edge", arg: 2, scope: !9160, file: !8881, line: 587, type: !1467)
!9165 = !DILocalVariable(name: "alloc", scope: !9160, file: !8881, line: 585, type: !336, align: 1)
!9166 = !DILocation(line: 585, column: 9, scope: !9160)
!9167 = !DILocation(line: 587, column: 36, scope: !9160)
!9168 = !DILocalVariable(name: "self", scope: !9169, file: !8881, line: 588, type: !9039, align: 8)
!9169 = !DILexicalBlockFile(scope: !9170, file: !8881, discriminator: 0)
!9170 = distinct !DISubprogram(name: "unwrap<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h222dbcdc8646bc20E", scope: !9039, file: !1664, line: 772, type: !9171, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9045, retainedNodes: !9173)
!9171 = !DISubroutineType(types: !9172)
!9172 = !{!9047, !9039, !344}
!9173 = !{!9168, !9174}
!9174 = !DILocalVariable(name: "val", scope: !9175, file: !8881, line: 588, type: !9047, align: 8)
!9175 = !DILexicalBlockFile(scope: !9176, file: !8881, discriminator: 0)
!9176 = distinct !DILexicalBlock(scope: !9170, file: !1664, line: 774, column: 13)
!9177 = !DILocation(line: 588, column: 13, scope: !9169, inlinedAt: !9178)
!9178 = !DILocation(line: 588, column: 13, scope: !9160)
!9179 = !DILocation(line: 587, column: 46, scope: !9160)
!9180 = distinct !DISubprogram(name: "init_front<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$10init_front17h051ab7ea3f748fdaE", scope: !1314, file: !8881, line: 209, type: !9181, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !9197)
!9181 = !DISubroutineType(types: !9182)
!9182 = !{!9183, !9196}
!9183 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", scope: !177, file: !2, size: 64, align: 64, elements: !9184, templateParams: !23, identifier: "84b9d120a6945bab5d5022b7d667884a")
!9184 = !{!9185}
!9185 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9183, file: !2, size: 64, align: 64, elements: !9186, templateParams: !23, identifier: "43ed1278bf64c30863f2c03fed41b0ad", discriminator: !9195)
!9186 = !{!9187, !9191}
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !9185, file: !2, baseType: !9188, size: 64, align: 64, extraData: i64 0)
!9188 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !9183, file: !2, size: 64, align: 64, elements: !23, templateParams: !9189, identifier: "59f50e5b460bf8965d94a4b86c69d923")
!9189 = !{!9190}
!9190 = !DITemplateTypeParameter(name: "T", type: !7901)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !9185, file: !2, baseType: !9192, size: 64, align: 64)
!9192 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !9183, file: !2, size: 64, align: 64, elements: !9193, templateParams: !9189, identifier: "fe06221be6ee2263af45de806947b220")
!9193 = !{!9194}
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9192, file: !2, baseType: !7901, size: 64, align: 64)
!9195 = !DIDerivedType(tag: DW_TAG_member, scope: !9183, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!9196 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", baseType: !1314, size: 64, align: 64, dwarfAddressSpace: 0)
!9197 = !{!9198, !9199, !9201}
!9198 = !DILocalVariable(name: "self", arg: 1, scope: !9180, file: !8881, line: 210, type: !9196)
!9199 = !DILocalVariable(name: "root", scope: !9200, file: !8881, line: 212, type: !8656, align: 8)
!9200 = distinct !DILexicalBlock(scope: !9180, file: !8881, line: 212, column: 63)
!9201 = !DILocalVariable(name: "edge", scope: !9202, file: !8881, line: 217, type: !7901, align: 8)
!9202 = distinct !DILexicalBlock(scope: !9180, file: !8881, line: 217, column: 13)
!9203 = !DILocation(line: 210, column: 9, scope: !9180)
!9204 = !DILocalVariable(name: "tmp", scope: !9205, file: !8881, line: 213, type: !8940, align: 8)
!9205 = !DILexicalBlockFile(scope: !9206, file: !8881, discriminator: 0)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !399, line: 1107, column: 5)
!9207 = distinct !DISubprogram(name: "read<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3ptr4read17h95710c11d5b09cb9E", scope: !43, file: !399, line: 1099, type: !8932, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !9208)
!9208 = !{!9209, !9204}
!9209 = !DILocalVariable(name: "src", scope: !9210, file: !8881, line: 213, type: !8934, align: 8)
!9210 = !DILexicalBlockFile(scope: !9207, file: !8881, discriminator: 0)
!9211 = !DILocation(line: 213, column: 61, scope: !9205, inlinedAt: !9212)
!9212 = !DILocation(line: 213, column: 61, scope: !9200)
!9213 = !DILocation(line: 212, column: 51, scope: !9200)
!9214 = !DILocation(line: 212, column: 16, scope: !9200)
!9215 = !DILocation(line: 215, column: 15, scope: !9180)
!9216 = !DILocation(line: 215, column: 9, scope: !9180)
!9217 = !DILocation(line: 212, column: 42, scope: !9200)
!9218 = !DILocation(line: 213, column: 71, scope: !9200)
!9219 = !DILocation(line: 213, column: 61, scope: !9210, inlinedAt: !9212)
!9220 = !DILocation(line: 213, column: 61, scope: !9221, inlinedAt: !9223)
!9221 = !DILexicalBlockFile(scope: !9222, file: !8881, discriminator: 0)
!9222 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hf60fb1b423cf7624E", scope: !8940, file: !1609, line: 320, type: !8954, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !23)
!9223 = !DILocation(line: 1107, column: 19, scope: !9207, inlinedAt: !9212)
!9224 = !DILocalVariable(name: "self", scope: !9225, file: !8881, line: 213, type: !8963, align: 8)
!9225 = !DILexicalBlockFile(scope: !9226, file: !8881, discriminator: 0)
!9226 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h65f0557c691cd362E", scope: !8940, file: !1609, line: 574, type: !8960, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !9227)
!9227 = !{!9224}
!9228 = !DILocation(line: 213, column: 61, scope: !9225, inlinedAt: !9229)
!9229 = !DILocation(line: 1115, column: 34, scope: !9206, inlinedAt: !9212)
!9230 = !DILocalVariable(name: "self", scope: !9231, file: !8881, line: 213, type: !8940, align: 8)
!9231 = !DILexicalBlockFile(scope: !9232, file: !8881, discriminator: 0)
!9232 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17ha02e32c1305f6b3cE", scope: !8940, file: !1609, line: 629, type: !8970, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !9233)
!9233 = !{!9230}
!9234 = !DILocation(line: 213, column: 61, scope: !9231, inlinedAt: !9235)
!9235 = !DILocation(line: 1116, column: 9, scope: !9206, inlinedAt: !9212)
!9236 = !DILocalVariable(name: "slot", scope: !9237, file: !8881, line: 213, type: !8944, align: 8)
!9237 = !DILexicalBlockFile(scope: !9238, file: !8881, discriminator: 0)
!9238 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h57d1938c7f71bee2E", scope: !8944, file: !1575, line: 88, type: !8978, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !8938, retainedNodes: !9239)
!9239 = !{!9236}
!9240 = !DILocation(line: 213, column: 61, scope: !9237, inlinedAt: !9241)
!9241 = !DILocation(line: 634, column: 13, scope: !9232, inlinedAt: !9235)
!9242 = !DILocation(line: 213, column: 52, scope: !9200)
!9243 = !DILocation(line: 213, column: 31, scope: !9200)
!9244 = !DILocation(line: 213, column: 26, scope: !9200)
!9245 = !DILocation(line: 213, column: 13, scope: !9200)
!9246 = !DILocation(line: 212, column: 9, scope: !9180)
!9247 = !DILocation(line: 216, column: 21, scope: !9180)
!9248 = !DILocation(line: 219, column: 55, scope: !9249, inlinedAt: !9251)
!9249 = !DILexicalBlockFile(scope: !9250, file: !8881, discriminator: 0)
!9250 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!9251 = !DILocation(line: 219, column: 55, scope: !9180)
!9252 = !DILocation(line: 217, column: 39, scope: !9180)
!9253 = !DILocation(line: 217, column: 39, scope: !9202)
!9254 = !DILocation(line: 217, column: 49, scope: !9202)
!9255 = !DILocation(line: 217, column: 58, scope: !9180)
!9256 = !DILocation(line: 221, column: 6, scope: !9180)
!9257 = distinct !DISubprogram(name: "none<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$4none17h695ba281fab6cef3E", scope: !1314, file: !8881, line: 133, type: !9258, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1462, retainedNodes: !23)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!1314}
!9260 = !DILocation(line: 134, column: 32, scope: !9257)
!9261 = !DILocation(line: 134, column: 44, scope: !9257)
!9262 = !DILocation(line: 134, column: 9, scope: !9257)
!9263 = !DILocation(line: 135, column: 6, scope: !9257)
!9264 = distinct !DISubprogram(name: "take_front<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", linkageName: "_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$10take_front17hab82452c2cbf074cE", scope: !1314, file: !8881, line: 171, type: !9265, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1374, retainedNodes: !9278)
!9265 = !DISubroutineType(types: !9266)
!9266 = !{!9267, !9196}
!9267 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", scope: !177, file: !2, size: 192, align: 64, elements: !9268, templateParams: !23, identifier: "d73740c585bd945748f552068e842981")
!9268 = !{!9269}
!9269 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9267, file: !2, size: 192, align: 64, elements: !9270, templateParams: !23, identifier: "a845a38a5fac07a93743cd1b1fa9c7b7", discriminator: !9277)
!9270 = !{!9271, !9273}
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !9269, file: !2, baseType: !9272, size: 192, align: 64, extraData: i64 0)
!9272 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !9267, file: !2, size: 192, align: 64, elements: !23, templateParams: !7935, identifier: "2df7b013348be22ccaa099bb1626b477")
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !9269, file: !2, baseType: !9274, size: 192, align: 64)
!9274 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !9267, file: !2, size: 192, align: 64, elements: !9275, templateParams: !7935, identifier: "dee0ef21f53257d414b716a3848e969b")
!9275 = !{!9276}
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9274, file: !2, baseType: !1467, size: 192, align: 64)
!9277 = !DIDerivedType(tag: DW_TAG_member, scope: !9267, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!9278 = !{!9279, !9280, !9282, !9284, !9286}
!9279 = !DILocalVariable(name: "self", arg: 1, scope: !9264, file: !8881, line: 172, type: !9196)
!9280 = !DILocalVariable(name: "residual", scope: !9281, file: !8881, line: 174, type: !4069, align: 1)
!9281 = distinct !DILexicalBlock(scope: !9264, file: !8881, line: 174, column: 32)
!9282 = !DILocalVariable(name: "val", scope: !9283, file: !8881, line: 174, type: !1326, align: 8)
!9283 = distinct !DILexicalBlock(scope: !9264, file: !8881, line: 174, column: 15)
!9284 = !DILocalVariable(name: "root", scope: !9285, file: !8881, line: 175, type: !1334, align: 8)
!9285 = distinct !DILexicalBlock(scope: !9264, file: !8881, line: 175, column: 13)
!9286 = !DILocalVariable(name: "edge", scope: !9287, file: !8881, line: 176, type: !1467, align: 8)
!9287 = distinct !DILexicalBlock(scope: !9264, file: !8881, line: 176, column: 13)
!9288 = !DILocation(line: 172, column: 9, scope: !9264)
!9289 = !DILocalVariable(name: "self", scope: !9290, file: !8881, line: 174, type: !1318, align: 8)
!9290 = !DILexicalBlockFile(scope: !9291, file: !8881, discriminator: 0)
!9291 = distinct !DISubprogram(name: "branch<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h816ad9f2b04c812eE", scope: !4105, file: !1664, line: 2290, type: !9292, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1324, retainedNodes: !9309)
!9292 = !DISubroutineType(types: !9293)
!9293 = !{!9294, !1318}
!9294 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", scope: !4109, file: !2, size: 256, align: 64, elements: !9295, templateParams: !23, identifier: "7ef77ccaf4016e961c7df8b06b4affd")
!9295 = !{!9296}
!9296 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9294, file: !2, size: 256, align: 64, elements: !9297, templateParams: !23, identifier: "b0a194888692e27dd5aa3e79ac0a8825", discriminator: !9308)
!9297 = !{!9298, !9304}
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !9296, file: !2, baseType: !9299, size: 256, align: 64)
!9299 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !9294, file: !2, size: 256, align: 64, elements: !9300, templateParams: !9302, identifier: "6e9191d35816608eb269b8ac7120cce")
!9300 = !{!9301}
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9299, file: !2, baseType: !1326, size: 256, align: 64)
!9302 = !{!4118, !9303}
!9303 = !DITemplateTypeParameter(name: "C", type: !1326)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !9296, file: !2, baseType: !9305, size: 256, align: 64, extraData: i64 2)
!9305 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !9294, file: !2, size: 256, align: 64, elements: !9306, templateParams: !9302, identifier: "4c5fa3da13cb3939ae46c490b39a6001")
!9306 = !{!9307}
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9305, file: !2, baseType: !4069, align: 8)
!9308 = !DIDerivedType(tag: DW_TAG_member, scope: !9294, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!9309 = !{!9289, !9310}
!9310 = !DILocalVariable(name: "v", scope: !9311, file: !8881, line: 174, type: !1326, align: 8)
!9311 = !DILexicalBlockFile(scope: !9312, file: !8881, discriminator: 0)
!9312 = distinct !DILexicalBlock(scope: !9291, file: !1664, line: 2292, column: 13)
!9313 = !DILocation(line: 174, column: 15, scope: !9290, inlinedAt: !9314)
!9314 = !DILocation(line: 174, column: 15, scope: !9264)
!9315 = !DILocation(line: 174, column: 32, scope: !9281)
!9316 = !DILocalVariable(name: "residual", scope: !9317, file: !8881, line: 174, type: !4069, align: 1)
!9317 = !DILexicalBlockFile(scope: !9318, file: !8881, discriminator: 0)
!9318 = distinct !DISubprogram(name: "from_residual<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hed52415406c231b8E", scope: !4135, file: !1664, line: 2302, type: !9319, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7935, retainedNodes: !9321)
!9319 = !DISubroutineType(types: !9320)
!9320 = !{!9267, !4069}
!9321 = !{!9316}
!9322 = !DILocation(line: 174, column: 15, scope: !9317, inlinedAt: !9323)
!9323 = !DILocation(line: 174, column: 15, scope: !9281)
!9324 = !DILocation(line: 174, column: 15, scope: !9283)
!9325 = !DILocation(line: 176, column: 34, scope: !9287)
!9326 = !DILocation(line: 174, column: 15, scope: !9311, inlinedAt: !9314)
!9327 = !DILocalVariable(name: "self", scope: !9328, file: !8881, line: 174, type: !3328, align: 8)
!9328 = !DILexicalBlockFile(scope: !9329, file: !8881, discriminator: 0)
!9329 = distinct !DISubprogram(name: "take<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h13789481c1c85197E", scope: !1318, file: !1664, line: 1574, type: !9330, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1324, retainedNodes: !9332)
!9330 = !DISubroutineType(types: !9331)
!9331 = !{!1318, !3328}
!9332 = !{!9327}
!9333 = !DILocation(line: 174, column: 15, scope: !9328, inlinedAt: !9314)
!9334 = !DILocation(line: 174, column: 9, scope: !9264)
!9335 = !DILocation(line: 178, column: 6, scope: !9264)
!9336 = !DILocation(line: 175, column: 34, scope: !9264)
!9337 = !DILocation(line: 175, column: 34, scope: !9285)
!9338 = !DILocation(line: 175, column: 48, scope: !9285)
!9339 = !DILocation(line: 176, column: 34, scope: !9264)
!9340 = !DILocation(line: 176, column: 48, scope: !9287)
!9341 = !DILocation(line: 176, column: 43, scope: !9287)
!9342 = !DILocation(line: 176, column: 52, scope: !9264)
!9343 = !DILocation(line: 175, column: 43, scope: !9285)
!9344 = !DILocation(line: 175, column: 70, scope: !9264)
!9345 = distinct !DISubprogram(name: "deallocating_end<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$16deallocating_end17hcac9195533f97ea8E", scope: !1314, file: !8881, line: 201, type: !9346, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !9348)
!9346 = !DISubroutineType(types: !9347)
!9347 = !{null, !9196, !336}
!9348 = !{!9349, !9350, !9351}
!9349 = !DILocalVariable(name: "self", arg: 1, scope: !9345, file: !8881, line: 201, type: !9196)
!9350 = !DILocalVariable(name: "alloc", arg: 2, scope: !9345, file: !8881, line: 201, type: !336)
!9351 = !DILocalVariable(name: "front", scope: !9352, file: !8881, line: 202, type: !1467, align: 8)
!9352 = distinct !DILexicalBlock(scope: !9345, file: !8881, line: 202, column: 48)
!9353 = !DILocation(line: 201, column: 51, scope: !9345)
!9354 = !DILocation(line: 201, column: 62, scope: !9345)
!9355 = !DILocation(line: 202, column: 21, scope: !9352)
!9356 = !DILocation(line: 202, column: 30, scope: !9352)
!9357 = !DILocation(line: 205, column: 5, scope: !9345)
!9358 = !DILocation(line: 202, column: 16, scope: !9352)
!9359 = !DILocation(line: 203, column: 13, scope: !9352)
!9360 = !DILocation(line: 203, column: 36, scope: !9352)
!9361 = !DILocation(line: 202, column: 9, scope: !9345)
!9362 = !DILocation(line: 201, column: 5, scope: !9345)
!9363 = !DILocation(line: 205, column: 6, scope: !9345)
!9364 = distinct !DISubprogram(name: "deallocating_next_unchecked<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$27deallocating_next_unchecked17hfef80dde6c665133E", scope: !1314, file: !8881, line: 181, type: !9365, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !9367)
!9365 = !DISubroutineType(types: !9366)
!9366 = !{!1829, !9196, !336}
!9367 = !{!9368, !9369, !9370}
!9368 = !DILocalVariable(name: "self", arg: 1, scope: !9364, file: !8881, line: 182, type: !9196)
!9369 = !DILocalVariable(name: "alloc", arg: 2, scope: !9364, file: !8881, line: 183, type: !336)
!9370 = !DILocalVariable(name: "front", scope: !9371, file: !8881, line: 186, type: !7901, align: 8)
!9371 = distinct !DILexicalBlock(scope: !9364, file: !8881, line: 186, column: 9)
!9372 = !DILocation(line: 182, column: 9, scope: !9364)
!9373 = !DILocation(line: 183, column: 9, scope: !9364)
!9374 = !DILocalVariable(name: "self", scope: !9375, file: !8881, line: 186, type: !9183, align: 8)
!9375 = !DILexicalBlockFile(scope: !9376, file: !8881, discriminator: 0)
!9376 = distinct !DISubprogram(name: "unwrap<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h943a0b7f7eb77bceE", scope: !9183, file: !1664, line: 772, type: !9377, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9189, retainedNodes: !9379)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{!7901, !9183, !344}
!9379 = !{!9374, !9380}
!9380 = !DILocalVariable(name: "val", scope: !9381, file: !8881, line: 186, type: !7901, align: 8)
!9381 = !DILexicalBlockFile(scope: !9382, file: !8881, discriminator: 0)
!9382 = distinct !DILexicalBlock(scope: !9376, file: !1664, line: 774, column: 13)
!9383 = !DILocation(line: 186, column: 21, scope: !9375, inlinedAt: !9384)
!9384 = !DILocation(line: 186, column: 21, scope: !9364)
!9385 = !DILocation(line: 185, column: 9, scope: !9364)
!9386 = !DILocation(line: 188, column: 5, scope: !9364)
!9387 = !DILocation(line: 186, column: 13, scope: !9371)
!9388 = !DILocation(line: 186, column: 21, scope: !9381, inlinedAt: !9384)
!9389 = !DILocation(line: 187, column: 52, scope: !9371)
!9390 = !DILocation(line: 187, column: 18, scope: !9371)
!9391 = !DILocation(line: 188, column: 6, scope: !9364)
!9392 = !DILocation(line: 181, column: 5, scope: !9364)
!9393 = distinct !DISubprogram(name: "join_generic_copy<str, u8, &str>", linkageName: "_ZN5alloc3str17join_generic_copy17h8f737c87c8b13d55E", scope: !489, file: !9394, line: 147, type: !9395, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9526, retainedNodes: !9397)
!9394 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/str.rs", directory: "", checksumkind: CSK_MD5, checksum: "f5a4e60b6f1008960143e2fa483df20f")
!9395 = !DISubroutineType(types: !9396)
!9396 = !{!315, !2068, !366}
!9397 = !{!9398, !9399, !9400, !9402, !9404, !9406, !9408, !9410, !9412, !9414, !9416, !9418, !9420, !9422, !9424, !9426, !9428, !9430, !9432, !9434, !9436, !9437, !9439, !9441, !9443, !9444, !9446, !9448, !9450, !9452, !9453, !9455, !9457, !9459, !9460, !9462, !9464, !9466, !9468, !9469, !9471, !9473, !9475, !9476, !9478, !9480, !9482, !9484, !9485, !9487, !9489, !9491, !9492, !9494, !9496, !9498, !9500, !9501, !9503, !9505, !9507, !9508, !9510, !9512, !9514, !9516, !9517, !9519, !9521, !9523, !9524}
!9398 = !DILocalVariable(name: "slice", arg: 1, scope: !9393, file: !9394, line: 147, type: !2068)
!9399 = !DILocalVariable(name: "sep", arg: 2, scope: !9393, file: !9394, line: 147, type: !366)
!9400 = !DILocalVariable(name: "sep_len", scope: !9401, file: !9394, line: 153, type: !9, align: 8)
!9401 = distinct !DILexicalBlock(scope: !9393, file: !9394, line: 153, column: 5)
!9402 = !DILocalVariable(name: "iter", scope: !9403, file: !9394, line: 154, type: !472, align: 8)
!9403 = distinct !DILexicalBlock(scope: !9401, file: !9394, line: 154, column: 5)
!9404 = !DILocalVariable(name: "first", scope: !9405, file: !9394, line: 157, type: !199, align: 8)
!9405 = distinct !DILexicalBlock(scope: !9403, file: !9394, line: 157, column: 5)
!9406 = !DILocalVariable(name: "first", scope: !9407, file: !9394, line: 158, type: !199, align: 8)
!9407 = distinct !DILexicalBlock(scope: !9403, file: !9394, line: 158, column: 9)
!9408 = !DILocalVariable(name: "reserved_len", scope: !9409, file: !9394, line: 166, type: !9, align: 8)
!9409 = distinct !DILexicalBlock(scope: !9405, file: !9394, line: 166, column: 5)
!9410 = !DILocalVariable(name: "result", scope: !9411, file: !9394, line: 174, type: !315, align: 8)
!9411 = distinct !DILexicalBlock(scope: !9409, file: !9394, line: 174, column: 5)
!9412 = !DILocalVariable(name: "pos", scope: !9413, file: !9394, line: 180, type: !9, align: 8)
!9413 = distinct !DILexicalBlock(scope: !9411, file: !9394, line: 180, column: 9)
!9414 = !DILocalVariable(name: "target", scope: !9415, file: !9394, line: 181, type: !5962, align: 8)
!9415 = distinct !DILexicalBlock(scope: !9413, file: !9394, line: 181, column: 9)
!9416 = !DILocalVariable(name: "sep_uninit", scope: !9417, file: !9394, line: 185, type: !3491, align: 8)
!9417 = distinct !DILexicalBlock(scope: !9415, file: !9394, line: 185, column: 9)
!9418 = !DILocalVariable(name: "iter_uninit", scope: !9419, file: !9394, line: 186, type: !5480, align: 8)
!9419 = distinct !DILexicalBlock(scope: !9417, file: !9394, line: 186, column: 9)
!9420 = !DILocalVariable(name: "remain", scope: !9421, file: !9394, line: 194, type: !5962, align: 8)
!9421 = distinct !DILexicalBlock(scope: !9419, file: !9394, line: 194, column: 9)
!9422 = !DILocalVariable(name: "target", scope: !9423, file: !9394, line: 194, type: !5962, align: 8)
!9423 = distinct !DILexicalBlock(scope: !9419, file: !9394, line: 100, column: 9)
!9424 = !DILocalVariable(name: "iter", scope: !9425, file: !9394, line: 194, type: !5480, align: 8)
!9425 = distinct !DILexicalBlock(scope: !9423, file: !9394, line: 101, column: 9)
!9426 = !DILocalVariable(name: "sep_bytes", scope: !9427, file: !9394, line: 194, type: !3491, align: 8)
!9427 = distinct !DILexicalBlock(scope: !9425, file: !9394, line: 102, column: 9)
!9428 = !DILocalVariable(name: "iter", scope: !9429, file: !9394, line: 194, type: !5480, align: 8)
!9429 = distinct !DILexicalBlock(scope: !9427, file: !9394, line: 108, column: 21)
!9430 = !DILocalVariable(name: "s", scope: !9431, file: !9394, line: 194, type: !3491, align: 8)
!9431 = distinct !DILexicalBlock(scope: !9429, file: !9394, line: 108, column: 35)
!9432 = !DILocalVariable(name: "len", scope: !9433, file: !9394, line: 194, type: !9, align: 8)
!9433 = distinct !DILexicalBlock(scope: !9431, file: !9394, line: 108, column: 35)
!9434 = !DILocalVariable(name: "head", scope: !9435, file: !9394, line: 194, type: !5962, align: 8)
!9435 = distinct !DILexicalBlock(scope: !9433, file: !9394, line: 108, column: 35)
!9436 = !DILocalVariable(name: "tail", scope: !9435, file: !9394, line: 194, type: !5962, align: 8)
!9437 = !DILocalVariable(name: "content_bytes", scope: !9438, file: !9394, line: 194, type: !3491, align: 8)
!9438 = distinct !DILexicalBlock(scope: !9435, file: !9394, line: 110, column: 25)
!9439 = !DILocalVariable(name: "len", scope: !9440, file: !9394, line: 194, type: !9, align: 8)
!9440 = distinct !DILexicalBlock(scope: !9438, file: !9394, line: 108, column: 35)
!9441 = !DILocalVariable(name: "head", scope: !9442, file: !9394, line: 194, type: !5962, align: 8)
!9442 = distinct !DILexicalBlock(scope: !9440, file: !9394, line: 108, column: 35)
!9443 = !DILocalVariable(name: "tail", scope: !9442, file: !9394, line: 194, type: !5962, align: 8)
!9444 = !DILocalVariable(name: "iter", scope: !9445, file: !9394, line: 194, type: !5480, align: 8)
!9445 = distinct !DILexicalBlock(scope: !9427, file: !9394, line: 108, column: 21)
!9446 = !DILocalVariable(name: "s", scope: !9447, file: !9394, line: 194, type: !3491, align: 8)
!9447 = distinct !DILexicalBlock(scope: !9445, file: !9394, line: 108, column: 35)
!9448 = !DILocalVariable(name: "len", scope: !9449, file: !9394, line: 194, type: !9, align: 8)
!9449 = distinct !DILexicalBlock(scope: !9447, file: !9394, line: 108, column: 35)
!9450 = !DILocalVariable(name: "head", scope: !9451, file: !9394, line: 194, type: !5962, align: 8)
!9451 = distinct !DILexicalBlock(scope: !9449, file: !9394, line: 108, column: 35)
!9452 = !DILocalVariable(name: "tail", scope: !9451, file: !9394, line: 194, type: !5962, align: 8)
!9453 = !DILocalVariable(name: "content_bytes", scope: !9454, file: !9394, line: 194, type: !3491, align: 8)
!9454 = distinct !DILexicalBlock(scope: !9451, file: !9394, line: 110, column: 25)
!9455 = !DILocalVariable(name: "len", scope: !9456, file: !9394, line: 194, type: !9, align: 8)
!9456 = distinct !DILexicalBlock(scope: !9454, file: !9394, line: 108, column: 35)
!9457 = !DILocalVariable(name: "head", scope: !9458, file: !9394, line: 194, type: !5962, align: 8)
!9458 = distinct !DILexicalBlock(scope: !9456, file: !9394, line: 108, column: 35)
!9459 = !DILocalVariable(name: "tail", scope: !9458, file: !9394, line: 194, type: !5962, align: 8)
!9460 = !DILocalVariable(name: "iter", scope: !9461, file: !9394, line: 194, type: !5480, align: 8)
!9461 = distinct !DILexicalBlock(scope: !9427, file: !9394, line: 108, column: 21)
!9462 = !DILocalVariable(name: "s", scope: !9463, file: !9394, line: 194, type: !3491, align: 8)
!9463 = distinct !DILexicalBlock(scope: !9461, file: !9394, line: 108, column: 35)
!9464 = !DILocalVariable(name: "len", scope: !9465, file: !9394, line: 194, type: !9, align: 8)
!9465 = distinct !DILexicalBlock(scope: !9463, file: !9394, line: 108, column: 35)
!9466 = !DILocalVariable(name: "head", scope: !9467, file: !9394, line: 194, type: !5962, align: 8)
!9467 = distinct !DILexicalBlock(scope: !9465, file: !9394, line: 108, column: 35)
!9468 = !DILocalVariable(name: "tail", scope: !9467, file: !9394, line: 194, type: !5962, align: 8)
!9469 = !DILocalVariable(name: "content_bytes", scope: !9470, file: !9394, line: 194, type: !3491, align: 8)
!9470 = distinct !DILexicalBlock(scope: !9467, file: !9394, line: 110, column: 25)
!9471 = !DILocalVariable(name: "len", scope: !9472, file: !9394, line: 194, type: !9, align: 8)
!9472 = distinct !DILexicalBlock(scope: !9470, file: !9394, line: 108, column: 35)
!9473 = !DILocalVariable(name: "head", scope: !9474, file: !9394, line: 194, type: !5962, align: 8)
!9474 = distinct !DILexicalBlock(scope: !9472, file: !9394, line: 108, column: 35)
!9475 = !DILocalVariable(name: "tail", scope: !9474, file: !9394, line: 194, type: !5962, align: 8)
!9476 = !DILocalVariable(name: "iter", scope: !9477, file: !9394, line: 194, type: !5480, align: 8)
!9477 = distinct !DILexicalBlock(scope: !9427, file: !9394, line: 108, column: 21)
!9478 = !DILocalVariable(name: "s", scope: !9479, file: !9394, line: 194, type: !3491, align: 8)
!9479 = distinct !DILexicalBlock(scope: !9477, file: !9394, line: 108, column: 35)
!9480 = !DILocalVariable(name: "len", scope: !9481, file: !9394, line: 194, type: !9, align: 8)
!9481 = distinct !DILexicalBlock(scope: !9479, file: !9394, line: 108, column: 35)
!9482 = !DILocalVariable(name: "head", scope: !9483, file: !9394, line: 194, type: !5962, align: 8)
!9483 = distinct !DILexicalBlock(scope: !9481, file: !9394, line: 108, column: 35)
!9484 = !DILocalVariable(name: "tail", scope: !9483, file: !9394, line: 194, type: !5962, align: 8)
!9485 = !DILocalVariable(name: "content_bytes", scope: !9486, file: !9394, line: 194, type: !3491, align: 8)
!9486 = distinct !DILexicalBlock(scope: !9483, file: !9394, line: 110, column: 25)
!9487 = !DILocalVariable(name: "len", scope: !9488, file: !9394, line: 194, type: !9, align: 8)
!9488 = distinct !DILexicalBlock(scope: !9486, file: !9394, line: 108, column: 35)
!9489 = !DILocalVariable(name: "head", scope: !9490, file: !9394, line: 194, type: !5962, align: 8)
!9490 = distinct !DILexicalBlock(scope: !9488, file: !9394, line: 108, column: 35)
!9491 = !DILocalVariable(name: "tail", scope: !9490, file: !9394, line: 194, type: !5962, align: 8)
!9492 = !DILocalVariable(name: "iter", scope: !9493, file: !9394, line: 194, type: !5480, align: 8)
!9493 = distinct !DILexicalBlock(scope: !9427, file: !9394, line: 108, column: 21)
!9494 = !DILocalVariable(name: "s", scope: !9495, file: !9394, line: 194, type: !3491, align: 8)
!9495 = distinct !DILexicalBlock(scope: !9493, file: !9394, line: 108, column: 35)
!9496 = !DILocalVariable(name: "len", scope: !9497, file: !9394, line: 194, type: !9, align: 8)
!9497 = distinct !DILexicalBlock(scope: !9495, file: !9394, line: 108, column: 35)
!9498 = !DILocalVariable(name: "head", scope: !9499, file: !9394, line: 194, type: !5962, align: 8)
!9499 = distinct !DILexicalBlock(scope: !9497, file: !9394, line: 108, column: 35)
!9500 = !DILocalVariable(name: "tail", scope: !9499, file: !9394, line: 194, type: !5962, align: 8)
!9501 = !DILocalVariable(name: "content_bytes", scope: !9502, file: !9394, line: 194, type: !3491, align: 8)
!9502 = distinct !DILexicalBlock(scope: !9499, file: !9394, line: 110, column: 25)
!9503 = !DILocalVariable(name: "len", scope: !9504, file: !9394, line: 194, type: !9, align: 8)
!9504 = distinct !DILexicalBlock(scope: !9502, file: !9394, line: 108, column: 35)
!9505 = !DILocalVariable(name: "head", scope: !9506, file: !9394, line: 194, type: !5962, align: 8)
!9506 = distinct !DILexicalBlock(scope: !9504, file: !9394, line: 108, column: 35)
!9507 = !DILocalVariable(name: "tail", scope: !9506, file: !9394, line: 194, type: !5962, align: 8)
!9508 = !DILocalVariable(name: "iter", scope: !9509, file: !9394, line: 194, type: !5480, align: 8)
!9509 = distinct !DILexicalBlock(scope: !9427, file: !9394, line: 117, column: 17)
!9510 = !DILocalVariable(name: "s", scope: !9511, file: !9394, line: 194, type: !3491, align: 8)
!9511 = distinct !DILexicalBlock(scope: !9509, file: !9394, line: 117, column: 31)
!9512 = !DILocalVariable(name: "len", scope: !9513, file: !9394, line: 194, type: !9, align: 8)
!9513 = distinct !DILexicalBlock(scope: !9511, file: !9394, line: 117, column: 31)
!9514 = !DILocalVariable(name: "head", scope: !9515, file: !9394, line: 194, type: !5962, align: 8)
!9515 = distinct !DILexicalBlock(scope: !9513, file: !9394, line: 117, column: 31)
!9516 = !DILocalVariable(name: "tail", scope: !9515, file: !9394, line: 194, type: !5962, align: 8)
!9517 = !DILocalVariable(name: "content_bytes", scope: !9518, file: !9394, line: 194, type: !3491, align: 8)
!9518 = distinct !DILexicalBlock(scope: !9515, file: !9394, line: 119, column: 21)
!9519 = !DILocalVariable(name: "len", scope: !9520, file: !9394, line: 194, type: !9, align: 8)
!9520 = distinct !DILexicalBlock(scope: !9518, file: !9394, line: 117, column: 31)
!9521 = !DILocalVariable(name: "head", scope: !9522, file: !9394, line: 194, type: !5962, align: 8)
!9522 = distinct !DILexicalBlock(scope: !9520, file: !9394, line: 117, column: 31)
!9523 = !DILocalVariable(name: "tail", scope: !9522, file: !9394, line: 194, type: !5962, align: 8)
!9524 = !DILocalVariable(name: "result_len", scope: !9525, file: !9394, line: 199, type: !9, align: 8)
!9525 = distinct !DILexicalBlock(scope: !9421, file: !9394, line: 199, column: 9)
!9526 = !{!2994, !331, !2812}
!9527 = !DILocation(line: 147, column: 31, scope: !9393)
!9528 = !DILocation(line: 147, column: 44, scope: !9393)
!9529 = !DILocation(line: 154, column: 9, scope: !9403)
!9530 = !DILocalVariable(name: "self", scope: !9531, file: !9394, line: 166, type: !455, align: 8)
!9531 = !DILexicalBlockFile(scope: !9532, file: !9394, discriminator: 0)
!9532 = distinct !DISubprogram(name: "expect<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6expect17h6435a0e3e01f1671E", scope: !455, file: !1664, line: 735, type: !9533, scopeLine: 735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !9535)
!9533 = !DISubroutineType(types: !9534)
!9534 = !{!9, !455, !137, !344}
!9535 = !{!9530, !9536, !9537}
!9536 = !DILocalVariable(name: "msg", scope: !9531, file: !9394, line: 166, type: !137, align: 8)
!9537 = !DILocalVariable(name: "val", scope: !9538, file: !9394, line: 166, type: !9, align: 8)
!9538 = !DILexicalBlockFile(scope: !9539, file: !9394, discriminator: 0)
!9539 = distinct !DILexicalBlock(scope: !9532, file: !1664, line: 737, column: 13)
!9540 = !DILocation(line: 166, column: 24, scope: !9531, inlinedAt: !9541)
!9541 = !DILocation(line: 166, column: 24, scope: !9405)
!9542 = !DILocation(line: 174, column: 9, scope: !9411)
!9543 = !DILocalVariable(name: "index", scope: !9544, file: !9394, line: 181, type: !5043, align: 8)
!9544 = !DILexicalBlockFile(scope: !9545, file: !9394, discriminator: 0)
!9545 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17he7b6a765cbe05cd1E", scope: !2489, file: !2488, line: 436, type: !9546, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9550, retainedNodes: !9548)
!9546 = !DISubroutineType(types: !9547)
!9547 = !{!5962, !5962, !5043}
!9548 = !{!9549, !9543}
!9549 = !DILocalVariable(name: "self", scope: !9544, file: !9394, line: 181, type: !5962, align: 8)
!9550 = !{!1004, !5049}
!9551 = !DILocation(line: 181, column: 22, scope: !9544, inlinedAt: !9552)
!9552 = !DILocation(line: 181, column: 22, scope: !9413)
!9553 = !DILocalVariable(name: "f", scope: !9554, file: !9394, line: 186, type: !3496, align: 1)
!9554 = !DILexicalBlockFile(scope: !9555, file: !9394, discriminator: 0)
!9555 = distinct !DISubprogram(name: "map<core::slice::iter::Iter<&str>, &[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17hb547a2bceee5c4adE", scope: !5228, file: !5227, line: 776, type: !5485, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9558, retainedNodes: !9556)
!9556 = !{!9557, !9553}
!9557 = !DILocalVariable(name: "self", scope: !9554, file: !9394, line: 186, type: !472, align: 8)
!9558 = !{!5426, !9559, !3505}
!9559 = !DITemplateTypeParameter(name: "B", type: !3491)
!9560 = !DILocation(line: 186, column: 27, scope: !9554, inlinedAt: !9561)
!9561 = !DILocation(line: 186, column: 27, scope: !9417)
!9562 = !DILocation(line: 194, column: 22, scope: !9423)
!9563 = !DILocation(line: 194, column: 22, scope: !9429)
!9564 = !DILocation(line: 194, column: 22, scope: !9445)
!9565 = !DILocation(line: 194, column: 22, scope: !9461)
!9566 = !DILocation(line: 194, column: 22, scope: !9477)
!9567 = !DILocation(line: 194, column: 22, scope: !9493)
!9568 = !DILocation(line: 194, column: 22, scope: !9509)
!9569 = !DILocalVariable(name: "alloc", scope: !9570, file: !9394, line: 174, type: !336, align: 1)
!9570 = !DILexicalBlockFile(scope: !9571, file: !9394, discriminator: 0)
!9571 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h2708341dc1ab903cE", scope: !315, file: !362, line: 640, type: !9572, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !9574)
!9572 = !DISubroutineType(types: !9573)
!9573 = !{!315, !9, !336}
!9574 = !{!9575, !9569}
!9575 = !DILocalVariable(name: "capacity", scope: !9570, file: !9394, line: 174, type: !9, align: 8)
!9576 = !DILocation(line: 174, column: 22, scope: !9570, inlinedAt: !9577)
!9577 = !DILocation(line: 483, column: 9, scope: !9578, inlinedAt: !9584)
!9578 = distinct !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17h0021896cdd95c975E", scope: !315, file: !362, line: 482, type: !9579, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !9581)
!9579 = !DISubroutineType(types: !9580)
!9580 = !{!315, !9}
!9581 = !{!9582}
!9582 = !DILocalVariable(name: "capacity", scope: !9583, file: !9394, line: 174, type: !9, align: 8)
!9583 = !DILexicalBlockFile(scope: !9578, file: !9394, discriminator: 0)
!9584 = !DILocation(line: 174, column: 22, scope: !9409)
!9585 = !DILocalVariable(name: "alloc", scope: !9586, file: !9394, line: 174, type: !336, align: 1)
!9586 = !DILexicalBlockFile(scope: !9587, file: !9394, discriminator: 0)
!9587 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17hf4fc2a0ff0b2afe9E", scope: !319, file: !9588, line: 130, type: !9589, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !9591)
!9588 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!9589 = !DISubroutineType(types: !9590)
!9590 = !{!319, !9, !336}
!9591 = !{!9592, !9585}
!9592 = !DILocalVariable(name: "capacity", scope: !9586, file: !9394, line: 174, type: !9, align: 8)
!9593 = !DILocation(line: 174, column: 22, scope: !9586, inlinedAt: !9594)
!9594 = !DILocation(line: 641, column: 20, scope: !9571, inlinedAt: !9577)
!9595 = !DILocation(line: 153, column: 19, scope: !9393)
!9596 = !DILocation(line: 153, column: 9, scope: !9401)
!9597 = !DILocation(line: 154, column: 20, scope: !9401)
!9598 = !DILocalVariable(name: "self", scope: !9599, file: !9394, line: 154, type: !2068, align: 8)
!9599 = !DILexicalBlockFile(scope: !9600, file: !9394, discriminator: 0)
!9600 = distinct !DISubprogram(name: "iter<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb4456b994ba02408E", scope: !2489, file: !2488, line: 734, type: !6255, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !9601)
!9601 = !{!9598}
!9602 = !DILocation(line: 154, column: 20, scope: !9599, inlinedAt: !9597)
!9603 = !DILocation(line: 157, column: 23, scope: !9403)
!9604 = !DILocation(line: 157, column: 17, scope: !9403)
!9605 = !DILocation(line: 159, column: 24, scope: !9606, inlinedAt: !9610)
!9606 = !DILexicalBlockFile(scope: !9607, file: !9394, discriminator: 0)
!9607 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h295fcc974fe60ecaE", scope: !315, file: !362, line: 424, type: !9608, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!9608 = !DISubroutineType(types: !9609)
!9609 = !{!315}
!9610 = !DILocation(line: 44, column: 36, scope: !9611)
!9611 = !DILexicalBlockFile(scope: !9403, file: !9612, discriminator: 0)
!9612 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "01273458e8d6db9c7d8d25445bca74ed")
!9613 = !DILocation(line: 203, column: 2, scope: !9393)
!9614 = !DILocation(line: 158, column: 14, scope: !9403)
!9615 = !DILocation(line: 158, column: 14, scope: !9407)
!9616 = !DILocation(line: 158, column: 24, scope: !9407)
!9617 = !DILocation(line: 157, column: 9, scope: !9405)
!9618 = !DILocation(line: 167, column: 22, scope: !9405)
!9619 = !DILocalVariable(name: "self", scope: !9620, file: !9394, line: 167, type: !9624, align: 8)
!9620 = !DILexicalBlockFile(scope: !9621, file: !9394, discriminator: 0)
!9621 = distinct !DISubprogram(name: "len<&str>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h89b484c060c1dd19E", scope: !609, file: !608, line: 119, type: !9622, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !9625)
!9622 = !DISubroutineType(types: !9623)
!9623 = !{!9, !9624}
!9624 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<&str>", baseType: !472, size: 64, align: 64, dwarfAddressSpace: 0)
!9625 = !{!9619, !9626, !9629, !9632}
!9626 = !DILocalVariable(name: "start", scope: !9627, file: !9394, line: 167, type: !476, align: 8)
!9627 = !DILexicalBlockFile(scope: !9628, file: !9394, discriminator: 0)
!9628 = distinct !DILexicalBlock(scope: !9621, file: !608, line: 18, column: 9)
!9629 = !DILocalVariable(name: "size", scope: !9630, file: !9394, line: 167, type: !9, align: 8)
!9630 = !DILexicalBlockFile(scope: !9631, file: !9394, discriminator: 0)
!9631 = distinct !DILexicalBlock(scope: !9628, file: !608, line: 19, column: 9)
!9632 = !DILocalVariable(name: "diff", scope: !9633, file: !9394, line: 167, type: !9, align: 8)
!9633 = !DILexicalBlockFile(scope: !9634, file: !9394, discriminator: 0)
!9634 = distinct !DILexicalBlock(scope: !9631, file: !608, line: 29, column: 13)
!9635 = !DILocation(line: 167, column: 22, scope: !9620, inlinedAt: !9618)
!9636 = !DILocation(line: 167, column: 22, scope: !9627, inlinedAt: !9618)
!9637 = !DILocation(line: 167, column: 22, scope: !9638, inlinedAt: !9640)
!9638 = !DILexicalBlockFile(scope: !9639, file: !9394, discriminator: 0)
!9639 = distinct !DISubprogram(name: "size_of<&str>", linkageName: "_ZN4core3mem7size_of17h14c2bfcc0e5ddbbaE", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !23)
!9640 = !DILocation(line: 41, column: 5, scope: !9641, inlinedAt: !9644)
!9641 = distinct !DISubprogram(name: "size_from_ptr<&str>", linkageName: "_ZN4core5slice4iter13size_from_ptr17ha328efe7ea2f3008E", scope: !473, file: !632, line: 40, type: !9642, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !23)
!9642 = !DISubroutineType(types: !9643)
!9643 = !{!9, !479}
!9644 = !DILocation(line: 19, column: 20, scope: !9628, inlinedAt: !9618)
!9645 = !DILocation(line: 167, column: 22, scope: !9630, inlinedAt: !9618)
!9646 = !DILocalVariable(name: "self", scope: !9647, file: !9394, line: 167, type: !479, align: 8)
!9647 = !DILexicalBlockFile(scope: !9648, file: !9394, discriminator: 0)
!9648 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hb31e440cf06e8bdaE", scope: !414, file: !413, line: 178, type: !9642, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !9649)
!9649 = !{!9646}
!9650 = !DILocation(line: 167, column: 22, scope: !9647, inlinedAt: !9651)
!9651 = !DILocation(line: 23, column: 13, scope: !9631, inlinedAt: !9618)
!9652 = !DILocalVariable(name: "self", scope: !9653, file: !9394, line: 167, type: !9, align: 8)
!9653 = !DILexicalBlockFile(scope: !9654, file: !9394, discriminator: 0)
!9654 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !2929, file: !2928, line: 1231, type: !2917, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !9655)
!9655 = !{!9652, !9656}
!9656 = !DILocalVariable(name: "rhs", scope: !9653, file: !9394, line: 167, type: !9, align: 8)
!9657 = !DILocation(line: 167, column: 22, scope: !9653, inlinedAt: !9651)
!9658 = !DILocalVariable(name: "self", scope: !9659, file: !9394, line: 167, type: !479, align: 8)
!9659 = !DILexicalBlockFile(scope: !9660, file: !9394, discriminator: 0)
!9660 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hb31e440cf06e8bdaE", scope: !414, file: !413, line: 178, type: !9642, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !9661)
!9661 = !{!9658}
!9662 = !DILocation(line: 167, column: 22, scope: !9659, inlinedAt: !9663)
!9663 = !DILocation(line: 29, column: 47, scope: !9631, inlinedAt: !9618)
!9664 = !DILocalVariable(name: "self", scope: !9665, file: !9394, line: 167, type: !476, align: 8)
!9665 = !DILexicalBlockFile(scope: !9666, file: !9394, discriminator: 0)
!9666 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h61f3f49968f444dfE", scope: !476, file: !646, line: 330, type: !9667, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !9669)
!9667 = !DISubroutineType(types: !9668)
!9668 = !{!6348, !476}
!9669 = !{!9664}
!9670 = !DILocation(line: 167, column: 22, scope: !9665, inlinedAt: !9671)
!9671 = !DILocation(line: 29, column: 65, scope: !9631, inlinedAt: !9618)
!9672 = !DILocalVariable(name: "self", scope: !9673, file: !9394, line: 167, type: !6348, align: 8)
!9673 = !DILexicalBlockFile(scope: !9674, file: !9394, discriminator: 0)
!9674 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h436eff8010e49a95E", scope: !657, file: !656, line: 184, type: !9675, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !9677)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{!9, !6348}
!9677 = !{!9672}
!9678 = !DILocation(line: 167, column: 22, scope: !9673, inlinedAt: !9671)
!9679 = !DILocation(line: 167, column: 22, scope: !9633, inlinedAt: !9618)
!9680 = !DILocalVariable(name: "self", scope: !9681, file: !9394, line: 167, type: !476, align: 8)
!9681 = !DILexicalBlockFile(scope: !9682, file: !9394, discriminator: 0)
!9682 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h61f3f49968f444dfE", scope: !476, file: !646, line: 330, type: !9667, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !9683)
!9683 = !{!9680}
!9684 = !DILocation(line: 167, column: 22, scope: !9681, inlinedAt: !9685)
!9685 = !DILocation(line: 23, column: 43, scope: !9631, inlinedAt: !9618)
!9686 = !DILocalVariable(name: "self", scope: !9687, file: !9394, line: 167, type: !6348, align: 8)
!9687 = !DILexicalBlockFile(scope: !9688, file: !9394, discriminator: 0)
!9688 = distinct !DISubprogram(name: "addr<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h436eff8010e49a95E", scope: !657, file: !656, line: 184, type: !9675, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !9689)
!9689 = !{!9686}
!9690 = !DILocation(line: 167, column: 22, scope: !9687, inlinedAt: !9685)
!9691 = !DILocation(line: 168, column: 19, scope: !9405)
!9692 = !DILocation(line: 171, column: 17, scope: !9405)
!9693 = !DILocation(line: 166, column: 9, scope: !9409)
!9694 = !DILocation(line: 166, column: 24, scope: !9538, inlinedAt: !9541)
!9695 = !DILocation(line: 174, column: 41, scope: !9409)
!9696 = !DILocation(line: 174, column: 22, scope: !9583, inlinedAt: !9584)
!9697 = !DILocation(line: 177, column: 30, scope: !9411)
!9698 = !DILocation(line: 203, column: 1, scope: !9409)
!9699 = !DILocation(line: 177, column: 5, scope: !9411)
!9700 = !DILocation(line: 180, column: 19, scope: !9411)
!9701 = !DILocalVariable(name: "self", scope: !9702, file: !9394, line: 180, type: !370, align: 8)
!9702 = !DILexicalBlockFile(scope: !9703, file: !9394, discriminator: 0)
!9703 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h0ff6fdd913c8e487E", scope: !315, file: !362, line: 1945, type: !9704, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !9706)
!9704 = !DISubroutineType(types: !9705)
!9705 = !{!9, !370}
!9706 = !{!9701}
!9707 = !DILocation(line: 180, column: 19, scope: !9702, inlinedAt: !9700)
!9708 = !DILocation(line: 180, column: 13, scope: !9413)
!9709 = !DILocation(line: 181, column: 70, scope: !9413)
!9710 = !DILocation(line: 181, column: 68, scope: !9413)
!9711 = !DILocalVariable(name: "self", scope: !9712, file: !9394, line: 181, type: !5043, align: 8)
!9712 = !DILexicalBlockFile(scope: !9713, file: !9394, discriminator: 0)
!9713 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h7fa6f76486bb00e6E", scope: !5118, file: !818, line: 344, type: !9714, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9716)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!977, !5043, !977}
!9716 = !{!9711, !9717}
!9717 = !DILocalVariable(name: "slice", scope: !9712, file: !9394, line: 181, type: !977, align: 8)
!9718 = !DILocation(line: 181, column: 22, scope: !9712, inlinedAt: !9719)
!9719 = !DILocation(line: 443, column: 24, scope: !9545, inlinedAt: !9552)
!9720 = !DILocation(line: 181, column: 13, scope: !9415)
!9721 = !DILocation(line: 185, column: 54, scope: !9415)
!9722 = !DILocalVariable(name: "self", scope: !9723, file: !9394, line: 185, type: !366, align: 8)
!9723 = !DILexicalBlockFile(scope: !9724, file: !9394, discriminator: 0)
!9724 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hfb764dfa8292fb8fE", scope: !2489, file: !2488, line: 476, type: !6191, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !9725)
!9725 = !{!9722}
!9726 = !DILocation(line: 185, column: 54, scope: !9723, inlinedAt: !9721)
!9727 = !DILocalVariable(name: "self", scope: !9728, file: !9394, line: 185, type: !329, align: 8)
!9728 = !DILexicalBlockFile(scope: !9729, file: !9394, discriminator: 0)
!9729 = distinct !DISubprogram(name: "cast<u8, core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h3b6ff4f0d3592662E", scope: !414, file: !413, line: 46, type: !9730, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9733, retainedNodes: !9732)
!9730 = !DISubroutineType(types: !9731)
!9731 = !{!5991, !329}
!9732 = !{!9727}
!9733 = !{!331, !9734}
!9734 = !DITemplateTypeParameter(name: "U", type: !981)
!9735 = !DILocation(line: 185, column: 54, scope: !9728, inlinedAt: !9721)
!9736 = !DILocalVariable(name: "data", scope: !9737, file: !9394, line: 185, type: !5991, align: 8)
!9737 = !DILexicalBlockFile(scope: !9738, file: !9394, discriminator: 0)
!9738 = distinct !DISubprogram(name: "from_raw_parts<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h1cb9eb0cc58e4196E", scope: !377, file: !376, line: 90, type: !9739, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9741)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{!3491, !5991, !9}
!9741 = !{!9736, !9742, !9743}
!9742 = !DILocalVariable(name: "len", scope: !9737, file: !9394, line: 185, type: !9, align: 8)
!9743 = !DILocalVariable(name: "runtime", scope: !9744, file: !9394, line: 185, type: !9746, align: 8)
!9744 = !DILexicalBlockFile(scope: !9745, file: !9394, discriminator: 0)
!9745 = distinct !DILexicalBlock(scope: !9738, file: !386, line: 2336, column: 13)
!9746 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::mem::maybe_uninit::MaybeUninit<u8>>", scope: !388, file: !2, size: 128, align: 64, elements: !9747, templateParams: !23, identifier: "211eab0efd92751d7641dd514cf7d5e")
!9747 = !{!9748, !9749}
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__data", scope: !9746, file: !2, baseType: !6001, size: 64, align: 64)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !9746, file: !2, baseType: !393, size: 64, align: 64, offset: 64)
!9750 = !DILocation(line: 185, column: 26, scope: !9737, inlinedAt: !9751)
!9751 = !DILocation(line: 185, column: 26, scope: !9415)
!9752 = !DILocation(line: 185, column: 75, scope: !9415)
!9753 = !DILocalVariable(name: "self", scope: !9754, file: !9394, line: 185, type: !366, align: 8)
!9754 = !DILexicalBlockFile(scope: !9755, file: !9394, discriminator: 0)
!9755 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17h28bb65bdcc0790f5E", scope: !2489, file: !2488, line: 129, type: !9756, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !9758)
!9756 = !DISubroutineType(types: !9757)
!9757 = !{!9, !366}
!9758 = !{!9753}
!9759 = !DILocation(line: 185, column: 75, scope: !9754, inlinedAt: !9752)
!9760 = !DILocalVariable(name: "data", scope: !9761, file: !9394, line: 185, type: !5991, align: 8)
!9761 = !DILexicalBlockFile(scope: !9762, file: !9394, discriminator: 0)
!9762 = distinct !DISubprogram(name: "slice_from_raw_parts<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h57119213f3530555E", scope: !43, file: !399, line: 695, type: !9763, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9769)
!9763 = !DISubroutineType(types: !9764)
!9764 = !{!9765, !5991, !9}
!9765 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 128, align: 64, elements: !9766, templateParams: !23, identifier: "6870a0d38725ecc6fe8f465175f45586")
!9766 = !{!9767, !9768}
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !9765, file: !2, baseType: !980, size: 64, align: 64)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9765, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9769 = !{!9760, !9770}
!9770 = !DILocalVariable(name: "len", scope: !9761, file: !9394, line: 185, type: !9, align: 8)
!9771 = !DILocation(line: 185, column: 26, scope: !9761, inlinedAt: !9772)
!9772 = !DILocation(line: 97, column: 11, scope: !9738, inlinedAt: !9751)
!9773 = !DILocalVariable(name: "self", scope: !9774, file: !9394, line: 185, type: !5991, align: 8)
!9774 = !DILexicalBlockFile(scope: !9775, file: !9394, discriminator: 0)
!9775 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h0a3c59c596aafb15E", scope: !414, file: !413, line: 46, type: !9776, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1051, retainedNodes: !9778)
!9776 = !DISubroutineType(types: !9777)
!9777 = !{!6, !5991}
!9778 = !{!9773}
!9779 = !DILocation(line: 185, column: 26, scope: !9774, inlinedAt: !9780)
!9780 = !DILocation(line: 696, column: 20, scope: !9762, inlinedAt: !9772)
!9781 = !DILocalVariable(name: "data_address", scope: !9782, file: !9394, line: 185, type: !6, align: 8)
!9782 = !DILexicalBlockFile(scope: !9783, file: !9394, discriminator: 0)
!9783 = distinct !DISubprogram(name: "from_raw_parts<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h12d89bcc885f83ddE", scope: !427, file: !426, line: 110, type: !9784, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9786)
!9784 = !DISubroutineType(types: !9785)
!9785 = !{!9765, !6, !9}
!9786 = !{!9781, !9787}
!9787 = !DILocalVariable(name: "metadata", scope: !9782, file: !9394, line: 185, type: !9, align: 8)
!9788 = !DILocation(line: 185, column: 26, scope: !9782, inlinedAt: !9789)
!9789 = !DILocation(line: 696, column: 5, scope: !9762, inlinedAt: !9772)
!9790 = !DILocation(line: 185, column: 13, scope: !9417)
!9791 = !DILocation(line: 186, column: 13, scope: !9419)
!9792 = !DILocation(line: 194, column: 58, scope: !9419)
!9793 = !DILocation(line: 194, column: 66, scope: !9423)
!9794 = !DILocation(line: 194, column: 22, scope: !9425)
!9795 = !DILocation(line: 194, column: 46, scope: !9425)
!9796 = !DILocation(line: 194, column: 22, scope: !9427)
!9797 = !DILocalVariable(name: "self", scope: !9798, file: !9394, line: 194, type: !3491, align: 8)
!9798 = !DILexicalBlockFile(scope: !9799, file: !9394, discriminator: 0)
!9799 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9802)
!9800 = !DISubroutineType(types: !9801)
!9801 = !{!9, !3491}
!9802 = !{!9797}
!9803 = !DILocation(line: 194, column: 22, scope: !9798, inlinedAt: !9804)
!9804 = !DILocation(line: 103, column: 15, scope: !9427)
!9805 = !DILocalVariable(name: "self", scope: !9806, file: !9394, line: 194, type: !5480, align: 8)
!9806 = !DILexicalBlockFile(scope: !9807, file: !9394, discriminator: 0)
!9807 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h634040ce9d3a3dc8E", scope: !5281, file: !5280, line: 271, type: !9808, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9811, retainedNodes: !9810)
!9808 = !DISubroutineType(types: !9809)
!9809 = !{!5480, !5480}
!9810 = !{!9805}
!9811 = !{!9812}
!9812 = !DITemplateTypeParameter(name: "I", type: !5480)
!9813 = !DILocation(line: 194, column: 22, scope: !9806, inlinedAt: !9814)
!9814 = !DILocation(line: 117, column: 26, scope: !9427)
!9815 = !DILocalVariable(name: "self", scope: !9816, file: !9394, line: 194, type: !5480, align: 8)
!9816 = !DILexicalBlockFile(scope: !9817, file: !9394, discriminator: 0)
!9817 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h634040ce9d3a3dc8E", scope: !5281, file: !5280, line: 271, type: !9808, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9811, retainedNodes: !9818)
!9818 = !{!9815}
!9819 = !DILocation(line: 194, column: 22, scope: !9816, inlinedAt: !9820)
!9820 = !DILocation(line: 108, column: 30, scope: !9427)
!9821 = !DILocalVariable(name: "self", scope: !9822, file: !9394, line: 194, type: !5480, align: 8)
!9822 = !DILexicalBlockFile(scope: !9823, file: !9394, discriminator: 0)
!9823 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h634040ce9d3a3dc8E", scope: !5281, file: !5280, line: 271, type: !9808, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9811, retainedNodes: !9824)
!9824 = !{!9821}
!9825 = !DILocation(line: 194, column: 22, scope: !9822, inlinedAt: !9820)
!9826 = !DILocalVariable(name: "self", scope: !9827, file: !9394, line: 194, type: !5480, align: 8)
!9827 = !DILexicalBlockFile(scope: !9828, file: !9394, discriminator: 0)
!9828 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h634040ce9d3a3dc8E", scope: !5281, file: !5280, line: 271, type: !9808, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9811, retainedNodes: !9829)
!9829 = !{!9826}
!9830 = !DILocation(line: 194, column: 22, scope: !9827, inlinedAt: !9820)
!9831 = !DILocalVariable(name: "self", scope: !9832, file: !9394, line: 194, type: !5480, align: 8)
!9832 = !DILexicalBlockFile(scope: !9833, file: !9394, discriminator: 0)
!9833 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h634040ce9d3a3dc8E", scope: !5281, file: !5280, line: 271, type: !9808, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9811, retainedNodes: !9834)
!9834 = !{!9831}
!9835 = !DILocation(line: 194, column: 22, scope: !9832, inlinedAt: !9820)
!9836 = !DILocalVariable(name: "self", scope: !9837, file: !9394, line: 194, type: !5480, align: 8)
!9837 = !DILexicalBlockFile(scope: !9838, file: !9394, discriminator: 0)
!9838 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h634040ce9d3a3dc8E", scope: !5281, file: !5280, line: 271, type: !9808, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9811, retainedNodes: !9839)
!9839 = !{!9836}
!9840 = !DILocation(line: 194, column: 22, scope: !9837, inlinedAt: !9820)
!9841 = !DILocalVariable(name: "self", scope: !9842, file: !9394, line: 194, type: !9846, align: 8)
!9842 = !DILexicalBlockFile(scope: !9843, file: !9394, discriminator: 0)
!9843 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h43fc4382180a495eE", scope: !449, file: !448, line: 102, type: !9844, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9848, retainedNodes: !9847)
!9844 = !DISubroutineType(types: !9845)
!9845 = !{!6909, !9846}
!9846 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", baseType: !5480, size: 64, align: 64, dwarfAddressSpace: 0)
!9847 = !{!9841}
!9848 = !{!9559, !491, !3505}
!9849 = !DILocation(line: 194, column: 22, scope: !9842, inlinedAt: !9850)
!9850 = !DILocation(line: 117, column: 26, scope: !9509)
!9851 = !DILocation(line: 194, column: 22, scope: !9511)
!9852 = !DILocalVariable(name: "self", scope: !9853, file: !9394, line: 194, type: !3491, align: 8)
!9853 = !DILexicalBlockFile(scope: !9854, file: !9394, discriminator: 0)
!9854 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9855)
!9855 = !{!9852}
!9856 = !DILocation(line: 194, column: 22, scope: !9853, inlinedAt: !9857)
!9857 = !DILocation(line: 131, column: 19, scope: !9511)
!9858 = !DILocation(line: 194, column: 22, scope: !9513)
!9859 = !DILocation(line: 194, column: 22, scope: !9515)
!9860 = !DILocation(line: 194, column: 22, scope: !9518)
!9861 = !DILocalVariable(name: "self", scope: !9862, file: !9394, line: 194, type: !3491, align: 8)
!9862 = !DILexicalBlockFile(scope: !9863, file: !9394, discriminator: 0)
!9863 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9864)
!9864 = !{!9861}
!9865 = !DILocation(line: 194, column: 22, scope: !9862, inlinedAt: !9866)
!9866 = !DILocation(line: 131, column: 19, scope: !9518)
!9867 = !DILocation(line: 194, column: 22, scope: !9520)
!9868 = !DILocation(line: 194, column: 22, scope: !9522)
!9869 = !DILocation(line: 194, column: 22, scope: !9419)
!9870 = !DILocation(line: 194, column: 13, scope: !9421)
!9871 = !DILocation(line: 199, column: 41, scope: !9421)
!9872 = !DILocalVariable(name: "self", scope: !9873, file: !9394, line: 199, type: !3491, align: 8)
!9873 = !DILexicalBlockFile(scope: !9874, file: !9394, discriminator: 0)
!9874 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9875)
!9875 = !{!9872}
!9876 = !DILocation(line: 199, column: 41, scope: !9873, inlinedAt: !9871)
!9877 = !DILocation(line: 199, column: 26, scope: !9421)
!9878 = !DILocation(line: 199, column: 13, scope: !9525)
!9879 = !DILocation(line: 200, column: 9, scope: !9525)
!9880 = !DILocalVariable(name: "self", scope: !9881, file: !9394, line: 200, type: !1802, align: 8)
!9881 = !DILexicalBlockFile(scope: !9882, file: !9394, discriminator: 0)
!9882 = distinct !DISubprogram(name: "set_len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17hf22dca193a63cdb8E", scope: !315, file: !362, line: 1301, type: !9883, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !9885)
!9883 = !DISubroutineType(types: !9884)
!9884 = !{null, !1802, !9}
!9885 = !{!9880, !9886}
!9886 = !DILocalVariable(name: "new_len", scope: !9881, file: !9394, line: 200, type: !9, align: 8)
!9887 = !DILocation(line: 200, column: 9, scope: !9881, inlinedAt: !9879)
!9888 = !DILocation(line: 200, column: 24, scope: !9525)
!9889 = !DILocation(line: 202, column: 5, scope: !9411)
!9890 = !DILocalVariable(name: "self", scope: !9891, file: !9394, line: 194, type: !9846, align: 8)
!9891 = !DILexicalBlockFile(scope: !9892, file: !9394, discriminator: 0)
!9892 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h43fc4382180a495eE", scope: !449, file: !448, line: 102, type: !9844, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9848, retainedNodes: !9893)
!9893 = !{!9890}
!9894 = !DILocation(line: 194, column: 22, scope: !9891, inlinedAt: !9895)
!9895 = !DILocation(line: 108, column: 30, scope: !9493)
!9896 = !DILocation(line: 194, column: 22, scope: !9495)
!9897 = !DILocalVariable(name: "self", scope: !9898, file: !9394, line: 194, type: !3491, align: 8)
!9898 = !DILexicalBlockFile(scope: !9899, file: !9394, discriminator: 0)
!9899 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9900)
!9900 = !{!9897}
!9901 = !DILocation(line: 194, column: 22, scope: !9898, inlinedAt: !9902)
!9902 = !DILocation(line: 131, column: 19, scope: !9495)
!9903 = !DILocation(line: 194, column: 22, scope: !9497)
!9904 = !DILocation(line: 194, column: 22, scope: !9499)
!9905 = !DILocation(line: 194, column: 22, scope: !9502)
!9906 = !DILocalVariable(name: "self", scope: !9907, file: !9394, line: 194, type: !3491, align: 8)
!9907 = !DILexicalBlockFile(scope: !9908, file: !9394, discriminator: 0)
!9908 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9909)
!9909 = !{!9906}
!9910 = !DILocation(line: 194, column: 22, scope: !9907, inlinedAt: !9911)
!9911 = !DILocation(line: 131, column: 19, scope: !9502)
!9912 = !DILocation(line: 194, column: 22, scope: !9504)
!9913 = !DILocation(line: 194, column: 22, scope: !9506)
!9914 = !DILocalVariable(name: "self", scope: !9915, file: !9394, line: 194, type: !9846, align: 8)
!9915 = !DILexicalBlockFile(scope: !9916, file: !9394, discriminator: 0)
!9916 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h43fc4382180a495eE", scope: !449, file: !448, line: 102, type: !9844, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9848, retainedNodes: !9917)
!9917 = !{!9914}
!9918 = !DILocation(line: 194, column: 22, scope: !9915, inlinedAt: !9919)
!9919 = !DILocation(line: 108, column: 30, scope: !9477)
!9920 = !DILocation(line: 194, column: 22, scope: !9479)
!9921 = !DILocalVariable(name: "self", scope: !9922, file: !9394, line: 194, type: !3491, align: 8)
!9922 = !DILexicalBlockFile(scope: !9923, file: !9394, discriminator: 0)
!9923 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9924)
!9924 = !{!9921}
!9925 = !DILocation(line: 194, column: 22, scope: !9922, inlinedAt: !9926)
!9926 = !DILocation(line: 131, column: 19, scope: !9479)
!9927 = !DILocation(line: 194, column: 22, scope: !9481)
!9928 = !DILocation(line: 194, column: 22, scope: !9483)
!9929 = !DILocation(line: 194, column: 22, scope: !9486)
!9930 = !DILocalVariable(name: "self", scope: !9931, file: !9394, line: 194, type: !3491, align: 8)
!9931 = !DILexicalBlockFile(scope: !9932, file: !9394, discriminator: 0)
!9932 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9933)
!9933 = !{!9930}
!9934 = !DILocation(line: 194, column: 22, scope: !9931, inlinedAt: !9935)
!9935 = !DILocation(line: 131, column: 19, scope: !9486)
!9936 = !DILocation(line: 194, column: 22, scope: !9488)
!9937 = !DILocation(line: 194, column: 22, scope: !9490)
!9938 = !DILocalVariable(name: "self", scope: !9939, file: !9394, line: 194, type: !9846, align: 8)
!9939 = !DILexicalBlockFile(scope: !9940, file: !9394, discriminator: 0)
!9940 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h43fc4382180a495eE", scope: !449, file: !448, line: 102, type: !9844, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9848, retainedNodes: !9941)
!9941 = !{!9938}
!9942 = !DILocation(line: 194, column: 22, scope: !9939, inlinedAt: !9943)
!9943 = !DILocation(line: 108, column: 30, scope: !9461)
!9944 = !DILocation(line: 194, column: 22, scope: !9463)
!9945 = !DILocalVariable(name: "self", scope: !9946, file: !9394, line: 194, type: !3491, align: 8)
!9946 = !DILexicalBlockFile(scope: !9947, file: !9394, discriminator: 0)
!9947 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9948)
!9948 = !{!9945}
!9949 = !DILocation(line: 194, column: 22, scope: !9946, inlinedAt: !9950)
!9950 = !DILocation(line: 131, column: 19, scope: !9463)
!9951 = !DILocation(line: 194, column: 22, scope: !9465)
!9952 = !DILocation(line: 194, column: 22, scope: !9467)
!9953 = !DILocation(line: 194, column: 22, scope: !9470)
!9954 = !DILocalVariable(name: "self", scope: !9955, file: !9394, line: 194, type: !3491, align: 8)
!9955 = !DILexicalBlockFile(scope: !9956, file: !9394, discriminator: 0)
!9956 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9957)
!9957 = !{!9954}
!9958 = !DILocation(line: 194, column: 22, scope: !9955, inlinedAt: !9959)
!9959 = !DILocation(line: 131, column: 19, scope: !9470)
!9960 = !DILocation(line: 194, column: 22, scope: !9472)
!9961 = !DILocation(line: 194, column: 22, scope: !9474)
!9962 = !DILocalVariable(name: "self", scope: !9963, file: !9394, line: 194, type: !9846, align: 8)
!9963 = !DILexicalBlockFile(scope: !9964, file: !9394, discriminator: 0)
!9964 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h43fc4382180a495eE", scope: !449, file: !448, line: 102, type: !9844, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9848, retainedNodes: !9965)
!9965 = !{!9962}
!9966 = !DILocation(line: 194, column: 22, scope: !9963, inlinedAt: !9967)
!9967 = !DILocation(line: 108, column: 30, scope: !9445)
!9968 = !DILocation(line: 194, column: 22, scope: !9447)
!9969 = !DILocalVariable(name: "self", scope: !9970, file: !9394, line: 194, type: !3491, align: 8)
!9970 = !DILexicalBlockFile(scope: !9971, file: !9394, discriminator: 0)
!9971 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9972)
!9972 = !{!9969}
!9973 = !DILocation(line: 194, column: 22, scope: !9970, inlinedAt: !9974)
!9974 = !DILocation(line: 131, column: 19, scope: !9447)
!9975 = !DILocation(line: 194, column: 22, scope: !9449)
!9976 = !DILocation(line: 194, column: 22, scope: !9451)
!9977 = !DILocation(line: 194, column: 22, scope: !9454)
!9978 = !DILocalVariable(name: "self", scope: !9979, file: !9394, line: 194, type: !3491, align: 8)
!9979 = !DILexicalBlockFile(scope: !9980, file: !9394, discriminator: 0)
!9980 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9981)
!9981 = !{!9978}
!9982 = !DILocation(line: 194, column: 22, scope: !9979, inlinedAt: !9983)
!9983 = !DILocation(line: 131, column: 19, scope: !9454)
!9984 = !DILocation(line: 194, column: 22, scope: !9456)
!9985 = !DILocation(line: 194, column: 22, scope: !9458)
!9986 = !DILocalVariable(name: "self", scope: !9987, file: !9394, line: 194, type: !9846, align: 8)
!9987 = !DILexicalBlockFile(scope: !9988, file: !9394, discriminator: 0)
!9988 = distinct !DISubprogram(name: "next<&[core::mem::maybe_uninit::MaybeUninit<u8>], core::slice::iter::Iter<&str>, alloc::str::join_generic_copy::{closure_env#1}<str, u8, &str>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h43fc4382180a495eE", scope: !449, file: !448, line: 102, type: !9844, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9848, retainedNodes: !9989)
!9989 = !{!9986}
!9990 = !DILocation(line: 194, column: 22, scope: !9987, inlinedAt: !9991)
!9991 = !DILocation(line: 108, column: 30, scope: !9429)
!9992 = !DILocation(line: 194, column: 22, scope: !9431)
!9993 = !DILocalVariable(name: "self", scope: !9994, file: !9394, line: 194, type: !3491, align: 8)
!9994 = !DILexicalBlockFile(scope: !9995, file: !9394, discriminator: 0)
!9995 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !9996)
!9996 = !{!9993}
!9997 = !DILocation(line: 194, column: 22, scope: !9994, inlinedAt: !9998)
!9998 = !DILocation(line: 131, column: 19, scope: !9431)
!9999 = !DILocation(line: 194, column: 22, scope: !9433)
!10000 = !DILocation(line: 194, column: 22, scope: !9435)
!10001 = !DILocation(line: 194, column: 22, scope: !9438)
!10002 = !DILocalVariable(name: "self", scope: !10003, file: !9394, line: 194, type: !3491, align: 8)
!10003 = !DILexicalBlockFile(scope: !10004, file: !9394, discriminator: 0)
!10004 = distinct !DISubprogram(name: "len<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3len17hcdaaabd68faf5e38E", scope: !2489, file: !2488, line: 129, type: !9800, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !10005)
!10005 = !{!10002}
!10006 = !DILocation(line: 194, column: 22, scope: !10003, inlinedAt: !10007)
!10007 = !DILocation(line: 131, column: 19, scope: !9438)
!10008 = !DILocation(line: 194, column: 22, scope: !9440)
!10009 = !DILocation(line: 194, column: 22, scope: !9442)
!10010 = !DILocation(line: 147, column: 1, scope: !9393)
!10011 = distinct !DISubprogram(name: "{closure#1}<str, u8, &str>", linkageName: "_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h2d47737fcc58c300E", scope: !488, file: !9394, line: 186, type: !3489, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9526, retainedNodes: !10012)
!10012 = !{!10013, !10014, !10016}
!10013 = !DILocalVariable(name: "it", arg: 2, scope: !10011, file: !9394, line: 186, type: !199)
!10014 = !DILocalVariable(name: "it", scope: !10015, file: !9394, line: 187, type: !366, align: 8)
!10015 = distinct !DILexicalBlock(scope: !10011, file: !9394, line: 187, column: 13)
!10016 = !DILocalVariable(arg: 1, scope: !10011, file: !9394, line: 186, type: !3495)
!10017 = !DILocation(line: 186, column: 36, scope: !10011)
!10018 = !DILocation(line: 186, column: 37, scope: !10011)
!10019 = !DILocation(line: 187, column: 22, scope: !10011)
!10020 = !DILocation(line: 187, column: 17, scope: !10015)
!10021 = !DILocation(line: 188, column: 41, scope: !10015)
!10022 = !DILocalVariable(name: "self", scope: !10023, file: !9394, line: 188, type: !366, align: 8)
!10023 = !DILexicalBlockFile(scope: !10024, file: !9394, discriminator: 0)
!10024 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hfb764dfa8292fb8fE", scope: !2489, file: !2488, line: 476, type: !6191, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10025)
!10025 = !{!10022}
!10026 = !DILocation(line: 188, column: 41, scope: !10023, inlinedAt: !10021)
!10027 = !DILocalVariable(name: "self", scope: !10028, file: !9394, line: 188, type: !329, align: 8)
!10028 = !DILexicalBlockFile(scope: !10029, file: !9394, discriminator: 0)
!10029 = distinct !DISubprogram(name: "cast<u8, core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h3b6ff4f0d3592662E", scope: !414, file: !413, line: 46, type: !9730, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9733, retainedNodes: !10030)
!10030 = !{!10027}
!10031 = !DILocation(line: 188, column: 41, scope: !10028, inlinedAt: !10021)
!10032 = !DILocalVariable(name: "data", scope: !10033, file: !9394, line: 188, type: !5991, align: 8)
!10033 = !DILexicalBlockFile(scope: !10034, file: !9394, discriminator: 0)
!10034 = distinct !DISubprogram(name: "from_raw_parts<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw14from_raw_parts17h1cb9eb0cc58e4196E", scope: !377, file: !376, line: 90, type: !9739, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !10035)
!10035 = !{!10032, !10036, !10037}
!10036 = !DILocalVariable(name: "len", scope: !10033, file: !9394, line: 188, type: !9, align: 8)
!10037 = !DILocalVariable(name: "runtime", scope: !10038, file: !9394, line: 188, type: !9746, align: 8)
!10038 = !DILexicalBlockFile(scope: !10039, file: !9394, discriminator: 0)
!10039 = distinct !DILexicalBlock(scope: !10034, file: !386, line: 2336, column: 13)
!10040 = !DILocation(line: 188, column: 13, scope: !10033, inlinedAt: !10041)
!10041 = !DILocation(line: 188, column: 13, scope: !10015)
!10042 = !DILocation(line: 188, column: 61, scope: !10015)
!10043 = !DILocalVariable(name: "data", scope: !10044, file: !9394, line: 188, type: !5991, align: 8)
!10044 = !DILexicalBlockFile(scope: !10045, file: !9394, discriminator: 0)
!10045 = distinct !DISubprogram(name: "slice_from_raw_parts<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h57119213f3530555E", scope: !43, file: !399, line: 695, type: !9763, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !10046)
!10046 = !{!10043, !10047}
!10047 = !DILocalVariable(name: "len", scope: !10044, file: !9394, line: 188, type: !9, align: 8)
!10048 = !DILocation(line: 188, column: 13, scope: !10044, inlinedAt: !10049)
!10049 = !DILocation(line: 97, column: 11, scope: !10034, inlinedAt: !10041)
!10050 = !DILocalVariable(name: "self", scope: !10051, file: !9394, line: 188, type: !5991, align: 8)
!10051 = !DILexicalBlockFile(scope: !10052, file: !9394, discriminator: 0)
!10052 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h0a3c59c596aafb15E", scope: !414, file: !413, line: 46, type: !9776, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1051, retainedNodes: !10053)
!10053 = !{!10050}
!10054 = !DILocation(line: 188, column: 13, scope: !10051, inlinedAt: !10055)
!10055 = !DILocation(line: 696, column: 20, scope: !10045, inlinedAt: !10049)
!10056 = !DILocalVariable(name: "data_address", scope: !10057, file: !9394, line: 188, type: !6, align: 8)
!10057 = !DILexicalBlockFile(scope: !10058, file: !9394, discriminator: 0)
!10058 = distinct !DISubprogram(name: "from_raw_parts<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h12d89bcc885f83ddE", scope: !427, file: !426, line: 110, type: !9784, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !10059)
!10059 = !{!10056, !10060}
!10060 = !DILocalVariable(name: "metadata", scope: !10057, file: !9394, line: 188, type: !9, align: 8)
!10061 = !DILocation(line: 188, column: 13, scope: !10057, inlinedAt: !10062)
!10062 = !DILocation(line: 696, column: 5, scope: !10045, inlinedAt: !10049)
!10063 = !DILocation(line: 186, column: 40, scope: !10011)
!10064 = distinct !DISubprogram(name: "{closure#0}<str, u8, &str>", linkageName: "_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hb06c30b16be46e74E", scope: !488, file: !9394, line: 168, type: !10065, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9526, retainedNodes: !10067)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{!455, !7049, !9}
!10067 = !{!10068, !10069}
!10068 = !DILocalVariable(name: "n", arg: 2, scope: !10064, file: !9394, line: 168, type: !9)
!10069 = !DILocalVariable(name: "slice", scope: !10064, file: !9394, line: 147, type: !137, align: 8)
!10070 = !DILocation(line: 147, column: 31, scope: !10064)
!10071 = !DILocation(line: 168, column: 20, scope: !10064)
!10072 = !DILocalVariable(name: "f", scope: !10073, file: !9394, line: 169, type: !486, align: 1)
!10073 = !DILexicalBlockFile(scope: !10074, file: !9394, discriminator: 0)
!10074 = distinct !DISubprogram(name: "map<core::slice::iter::Iter<&str>, usize, alloc::str::join_generic_copy::{closure#0}::{closure_env#0}<str, u8, &str>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h2cc1f5e4499b4b11E", scope: !5228, file: !5227, line: 776, type: !5495, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !10077, retainedNodes: !10075)
!10075 = !{!10076, !10072}
!10076 = !DILocalVariable(name: "self", scope: !10073, file: !9394, line: 169, type: !472, align: 8)
!10077 = !{!5426, !501, !492}
!10078 = !DILocation(line: 169, column: 13, scope: !10073, inlinedAt: !10079)
!10079 = !DILocation(line: 169, column: 13, scope: !10064)
!10080 = !DILocalVariable(name: "self", scope: !10081, file: !9394, line: 169, type: !2068, align: 8)
!10081 = !DILexicalBlockFile(scope: !10082, file: !9394, discriminator: 0)
!10082 = distinct !DISubprogram(name: "iter<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hb4456b994ba02408E", scope: !2489, file: !2488, line: 734, type: !6255, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !10083)
!10083 = !{!10080}
!10084 = !DILocation(line: 169, column: 13, scope: !10081, inlinedAt: !10079)
!10085 = !DILocation(line: 168, column: 22, scope: !10064)
!10086 = distinct !DISubprogram(name: "{closure#0}<str, u8, &str>", linkageName: "_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h9c4954e6196e7c1dE", scope: !487, file: !9394, line: 169, type: !10087, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !9526, retainedNodes: !10089)
!10087 = !DISubroutineType(types: !10088)
!10088 = !{!9, !5412, !199}
!10089 = !{!10090, !10091}
!10090 = !DILocalVariable(name: "s", arg: 2, scope: !10086, file: !9394, line: 169, type: !199)
!10091 = !DILocalVariable(arg: 1, scope: !10086, file: !9394, line: 169, type: !5412)
!10092 = !DILocation(line: 169, column: 30, scope: !10086)
!10093 = !DILocation(line: 169, column: 31, scope: !10086)
!10094 = !DILocation(line: 169, column: 34, scope: !10086)
!10095 = !DILocation(line: 169, column: 33, scope: !10086)
!10096 = distinct !DISubprogram(name: "join<&str>", linkageName: "_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h651595d769c8765eE", scope: !10097, file: !9394, line: 92, type: !10098, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2811, retainedNodes: !10100)
!10097 = !DINamespace(name: "{impl#1}", scope: !489)
!10098 = !DISubroutineType(types: !10099)
!10099 = !{!312, !2068, !137}
!10100 = !{!10101, !10102}
!10101 = !DILocalVariable(name: "slice", arg: 1, scope: !10096, file: !9394, line: 92, type: !2068)
!10102 = !DILocalVariable(name: "sep", arg: 2, scope: !10096, file: !9394, line: 92, type: !137)
!10103 = !DILocation(line: 92, column: 13, scope: !10096)
!10104 = !DILocation(line: 92, column: 27, scope: !10096)
!10105 = !DILocalVariable(name: "bytes", scope: !10106, file: !9394, line: 93, type: !315, align: 8)
!10106 = !DILexicalBlockFile(scope: !10107, file: !9394, discriminator: 0)
!10107 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17hd57695a62156f189E", scope: !312, file: !306, line: 844, type: !10108, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10110)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{!312, !315}
!10110 = !{!10105}
!10111 = !DILocation(line: 93, column: 18, scope: !10106, inlinedAt: !10112)
!10112 = !DILocation(line: 93, column: 18, scope: !10096)
!10113 = !DILocation(line: 93, column: 71, scope: !10096)
!10114 = !DILocalVariable(name: "self", scope: !10115, file: !9394, line: 93, type: !137, align: 8)
!10115 = !DILexicalBlockFile(scope: !10116, file: !9394, discriminator: 0)
!10116 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10117)
!10117 = !{!10114}
!10118 = !DILocation(line: 93, column: 71, scope: !10115, inlinedAt: !10113)
!10119 = !DILocation(line: 93, column: 46, scope: !10096)
!10120 = !DILocation(line: 94, column: 6, scope: !10096)
!10121 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h79436617013f5de6E", scope: !315, file: !362, line: 1204, type: !10122, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10124)
!10122 = !DISubroutineType(types: !10123)
!10123 = !{!649, !1802}
!10124 = !{!10125, !10126}
!10125 = !DILocalVariable(name: "self", arg: 1, scope: !10121, file: !362, line: 1204, type: !1802)
!10126 = !DILocalVariable(name: "ptr", scope: !10127, file: !362, line: 1207, type: !649, align: 8)
!10127 = distinct !DILexicalBlock(scope: !10121, file: !362, line: 1207, column: 9)
!10128 = !DILocation(line: 1204, column: 23, scope: !10121)
!10129 = !DILocalVariable(name: "metadata", scope: !10130, file: !362, line: 1209, type: !7, align: 1)
!10130 = !DILexicalBlockFile(scope: !10131, file: !362, discriminator: 0)
!10131 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10132)
!10132 = !{!10133, !10129}
!10133 = !DILocalVariable(name: "data_address", scope: !10130, file: !362, line: 1209, type: !960, align: 8)
!10134 = !DILocation(line: 1209, column: 21, scope: !10130, inlinedAt: !10135)
!10135 = !DILocation(line: 668, column: 5, scope: !10136, inlinedAt: !10137)
!10136 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!10137 = !DILocation(line: 38, column: 41, scope: !10138, inlinedAt: !10142)
!10138 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd134781c17b0a8a9E", scope: !657, file: !656, line: 35, type: !1157, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10139)
!10139 = !{!10140}
!10140 = !DILocalVariable(name: "self", scope: !10141, file: !362, line: 1209, type: !649, align: 8)
!10141 = !DILexicalBlockFile(scope: !10138, file: !362, discriminator: 0)
!10142 = !DILocation(line: 1209, column: 21, scope: !10127)
!10143 = !DILocation(line: 1207, column: 19, scope: !10121)
!10144 = !DILocalVariable(name: "self", scope: !10145, file: !362, line: 1207, type: !10149, align: 8)
!10145 = !DILexicalBlockFile(scope: !10146, file: !362, discriminator: 0)
!10146 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h453b1da850305d81E", scope: !319, file: !9588, line: 223, type: !10147, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10150)
!10147 = !DISubroutineType(types: !10148)
!10148 = !{!649, !10149}
!10149 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !319, size: 64, align: 64, dwarfAddressSpace: 0)
!10150 = !{!10144}
!10151 = !DILocation(line: 1207, column: 19, scope: !10145, inlinedAt: !10143)
!10152 = !DILocalVariable(name: "self", scope: !10153, file: !362, line: 1207, type: !322, align: 8)
!10153 = !DILexicalBlockFile(scope: !10154, file: !362, discriminator: 0)
!10154 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha4a6fb266c1c2a9eE", scope: !322, file: !1743, line: 103, type: !1744, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10155)
!10155 = !{!10152}
!10156 = !DILocation(line: 1207, column: 19, scope: !10153, inlinedAt: !10157)
!10157 = !DILocation(line: 224, column: 9, scope: !10146, inlinedAt: !10143)
!10158 = !DILocalVariable(name: "self", scope: !10159, file: !362, line: 1207, type: !326, align: 8)
!10159 = !DILexicalBlockFile(scope: !10160, file: !362, discriminator: 0)
!10160 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10161)
!10161 = !{!10158}
!10162 = !DILocation(line: 1207, column: 19, scope: !10159, inlinedAt: !10163)
!10163 = !DILocation(line: 104, column: 9, scope: !10154, inlinedAt: !10157)
!10164 = !DILocation(line: 1207, column: 13, scope: !10127)
!10165 = !DILocation(line: 1209, column: 21, scope: !10141, inlinedAt: !10142)
!10166 = !DILocalVariable(name: "self", scope: !10167, file: !362, line: 1209, type: !649, align: 8)
!10167 = !DILexicalBlockFile(scope: !10168, file: !362, discriminator: 0)
!10168 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10169)
!10169 = !{!10166, !10170}
!10170 = !DILocalVariable(name: "other", scope: !10167, file: !362, line: 1209, type: !649, align: 8)
!10171 = !DILocation(line: 1209, column: 21, scope: !10167, inlinedAt: !10172)
!10172 = !DILocation(line: 38, column: 9, scope: !10138, inlinedAt: !10142)
!10173 = !DILocation(line: 1209, column: 21, scope: !10174, inlinedAt: !10178)
!10174 = !DILexicalBlockFile(scope: !10175, file: !362, discriminator: 0)
!10175 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !10176)
!10176 = !{!10177}
!10177 = !DILocalVariable(name: "addr", scope: !10174, file: !362, line: 1209, type: !9, align: 8)
!10178 = !DILocation(line: 668, column: 24, scope: !10136, inlinedAt: !10137)
!10179 = !DILocation(line: 1209, column: 20, scope: !10127)
!10180 = !DILocation(line: 1209, column: 13, scope: !10127)
!10181 = !DILocation(line: 1212, column: 6, scope: !10121)
!10182 = distinct !DISubprogram(name: "as_mut_ptr<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h910caaf7abb314fcE", scope: !2605, file: !362, line: 1204, type: !10183, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2624, retainedNodes: !10186)
!10183 = !DISubroutineType(types: !10184)
!10184 = !{!3709, !10185}
!10185 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2605, size: 64, align: 64, dwarfAddressSpace: 0)
!10186 = !{!10187, !10188}
!10187 = !DILocalVariable(name: "self", arg: 1, scope: !10182, file: !362, line: 1204, type: !10185)
!10188 = !DILocalVariable(name: "ptr", scope: !10189, file: !362, line: 1207, type: !3709, align: 8)
!10189 = distinct !DILexicalBlock(scope: !10182, file: !362, line: 1207, column: 9)
!10190 = !DILocation(line: 1204, column: 23, scope: !10182)
!10191 = !DILocalVariable(name: "metadata", scope: !10192, file: !362, line: 1209, type: !7, align: 1)
!10192 = !DILexicalBlockFile(scope: !10193, file: !362, discriminator: 0)
!10193 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10194)
!10194 = !{!10195, !10191}
!10195 = !DILocalVariable(name: "data_address", scope: !10192, file: !362, line: 1209, type: !960, align: 8)
!10196 = !DILocation(line: 1209, column: 21, scope: !10192, inlinedAt: !10197)
!10197 = !DILocation(line: 668, column: 5, scope: !10198, inlinedAt: !10199)
!10198 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!10199 = !DILocation(line: 38, column: 41, scope: !10200, inlinedAt: !10206)
!10200 = distinct !DISubprogram(name: "is_null<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h4fcd288d03b3f8c5E", scope: !657, file: !656, line: 35, type: !10201, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !10203)
!10201 = !DISubroutineType(types: !10202)
!10202 = !{!1159, !3709}
!10203 = !{!10204}
!10204 = !DILocalVariable(name: "self", scope: !10205, file: !362, line: 1209, type: !3709, align: 8)
!10205 = !DILexicalBlockFile(scope: !10200, file: !362, discriminator: 0)
!10206 = !DILocation(line: 1209, column: 21, scope: !10189)
!10207 = !DILocation(line: 1207, column: 19, scope: !10182)
!10208 = !DILocalVariable(name: "self", scope: !10209, file: !362, line: 1207, type: !10213, align: 8)
!10209 = !DILexicalBlockFile(scope: !10210, file: !362, discriminator: 0)
!10210 = distinct !DISubprogram(name: "ptr<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hfc3e0299a9b40d72E", scope: !2608, file: !9588, line: 223, type: !10211, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2624, retainedNodes: !10214)
!10211 = !DISubroutineType(types: !10212)
!10212 = !{!3709, !10213}
!10213 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2608, size: 64, align: 64, dwarfAddressSpace: 0)
!10214 = !{!10208}
!10215 = !DILocation(line: 1207, column: 19, scope: !10209, inlinedAt: !10207)
!10216 = !DILocalVariable(name: "self", scope: !10217, file: !362, line: 1207, type: !2611, align: 8)
!10217 = !DILexicalBlockFile(scope: !10218, file: !362, discriminator: 0)
!10218 = distinct !DISubprogram(name: "as_ptr<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h38a6f9ab116c72deE", scope: !2611, file: !1743, line: 103, type: !10219, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !10221)
!10219 = !DISubroutineType(types: !10220)
!10220 = !{!3709, !2611}
!10221 = !{!10216}
!10222 = !DILocation(line: 1207, column: 19, scope: !10217, inlinedAt: !10223)
!10223 = !DILocation(line: 224, column: 9, scope: !10210, inlinedAt: !10207)
!10224 = !DILocalVariable(name: "self", scope: !10225, file: !362, line: 1207, type: !2614, align: 8)
!10225 = !DILexicalBlockFile(scope: !10226, file: !362, discriminator: 0)
!10226 = distinct !DISubprogram(name: "as_ptr<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb21906f82f863b08E", scope: !2614, file: !646, line: 330, type: !10227, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !10229)
!10227 = !DISubroutineType(types: !10228)
!10228 = !{!3709, !2614}
!10229 = !{!10224}
!10230 = !DILocation(line: 1207, column: 19, scope: !10225, inlinedAt: !10231)
!10231 = !DILocation(line: 104, column: 9, scope: !10218, inlinedAt: !10223)
!10232 = !DILocation(line: 1207, column: 13, scope: !10189)
!10233 = !DILocation(line: 1209, column: 21, scope: !10205, inlinedAt: !10206)
!10234 = !DILocalVariable(name: "self", scope: !10235, file: !362, line: 1209, type: !649, align: 8)
!10235 = !DILexicalBlockFile(scope: !10236, file: !362, discriminator: 0)
!10236 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10237)
!10237 = !{!10234, !10238}
!10238 = !DILocalVariable(name: "other", scope: !10235, file: !362, line: 1209, type: !649, align: 8)
!10239 = !DILocation(line: 1209, column: 21, scope: !10235, inlinedAt: !10240)
!10240 = !DILocation(line: 38, column: 9, scope: !10200, inlinedAt: !10206)
!10241 = !DILocation(line: 1209, column: 21, scope: !10242, inlinedAt: !10246)
!10242 = !DILexicalBlockFile(scope: !10243, file: !362, discriminator: 0)
!10243 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !10244)
!10244 = !{!10245}
!10245 = !DILocalVariable(name: "addr", scope: !10242, file: !362, line: 1209, type: !9, align: 8)
!10246 = !DILocation(line: 668, column: 24, scope: !10198, inlinedAt: !10199)
!10247 = !DILocation(line: 1209, column: 20, scope: !10189)
!10248 = !DILocation(line: 1209, column: 13, scope: !10189)
!10249 = !DILocation(line: 1212, column: 6, scope: !10182)
!10250 = distinct !DISubprogram(name: "as_mut_ptr<*const i8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hca17794ebab158c9E", scope: !2630, file: !362, line: 1204, type: !10251, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2650, retainedNodes: !10255)
!10251 = !DISubroutineType(types: !10252)
!10252 = !{!10253, !10254}
!10253 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut *const i8", baseType: !2643, size: 64, align: 64, dwarfAddressSpace: 0)
!10254 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<*const i8, alloc::alloc::Global>", baseType: !2630, size: 64, align: 64, dwarfAddressSpace: 0)
!10255 = !{!10256, !10257}
!10256 = !DILocalVariable(name: "self", arg: 1, scope: !10250, file: !362, line: 1204, type: !10254)
!10257 = !DILocalVariable(name: "ptr", scope: !10258, file: !362, line: 1207, type: !10253, align: 8)
!10258 = distinct !DILexicalBlock(scope: !10250, file: !362, line: 1207, column: 9)
!10259 = !DILocation(line: 1204, column: 23, scope: !10250)
!10260 = !DILocalVariable(name: "metadata", scope: !10261, file: !362, line: 1209, type: !7, align: 1)
!10261 = !DILexicalBlockFile(scope: !10262, file: !362, discriminator: 0)
!10262 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10263)
!10263 = !{!10264, !10260}
!10264 = !DILocalVariable(name: "data_address", scope: !10261, file: !362, line: 1209, type: !960, align: 8)
!10265 = !DILocation(line: 1209, column: 21, scope: !10261, inlinedAt: !10266)
!10266 = !DILocation(line: 668, column: 5, scope: !10267, inlinedAt: !10268)
!10267 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!10268 = !DILocation(line: 38, column: 41, scope: !10269, inlinedAt: !10275)
!10269 = distinct !DISubprogram(name: "is_null<*const i8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h45156b104ec42737E", scope: !657, file: !656, line: 35, type: !10270, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2644, retainedNodes: !10272)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{!1159, !10253}
!10272 = !{!10273}
!10273 = !DILocalVariable(name: "self", scope: !10274, file: !362, line: 1209, type: !10253, align: 8)
!10274 = !DILexicalBlockFile(scope: !10269, file: !362, discriminator: 0)
!10275 = !DILocation(line: 1209, column: 21, scope: !10258)
!10276 = !DILocation(line: 1207, column: 19, scope: !10250)
!10277 = !DILocalVariable(name: "self", scope: !10278, file: !362, line: 1207, type: !10282, align: 8)
!10278 = !DILexicalBlockFile(scope: !10279, file: !362, discriminator: 0)
!10279 = distinct !DISubprogram(name: "ptr<*const i8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h8055be600844d109E", scope: !2633, file: !9588, line: 223, type: !10280, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2650, retainedNodes: !10283)
!10280 = !DISubroutineType(types: !10281)
!10281 = !{!10253, !10282}
!10282 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<*const i8, alloc::alloc::Global>", baseType: !2633, size: 64, align: 64, dwarfAddressSpace: 0)
!10283 = !{!10277}
!10284 = !DILocation(line: 1207, column: 19, scope: !10278, inlinedAt: !10276)
!10285 = !DILocalVariable(name: "self", scope: !10286, file: !362, line: 1207, type: !2636, align: 8)
!10286 = !DILexicalBlockFile(scope: !10287, file: !362, discriminator: 0)
!10287 = distinct !DISubprogram(name: "as_ptr<*const i8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hb0ceedebcd9700e5E", scope: !2636, file: !1743, line: 103, type: !10288, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2644, retainedNodes: !10290)
!10288 = !DISubroutineType(types: !10289)
!10289 = !{!10253, !2636}
!10290 = !{!10285}
!10291 = !DILocation(line: 1207, column: 19, scope: !10286, inlinedAt: !10292)
!10292 = !DILocation(line: 224, column: 9, scope: !10279, inlinedAt: !10276)
!10293 = !DILocalVariable(name: "self", scope: !10294, file: !362, line: 1207, type: !2639, align: 8)
!10294 = !DILexicalBlockFile(scope: !10295, file: !362, discriminator: 0)
!10295 = distinct !DISubprogram(name: "as_ptr<*const i8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha2f725abf8a521b9E", scope: !2639, file: !646, line: 330, type: !10296, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2644, retainedNodes: !10298)
!10296 = !DISubroutineType(types: !10297)
!10297 = !{!10253, !2639}
!10298 = !{!10293}
!10299 = !DILocation(line: 1207, column: 19, scope: !10294, inlinedAt: !10300)
!10300 = !DILocation(line: 104, column: 9, scope: !10287, inlinedAt: !10292)
!10301 = !DILocation(line: 1207, column: 13, scope: !10258)
!10302 = !DILocation(line: 1209, column: 21, scope: !10274, inlinedAt: !10275)
!10303 = !DILocalVariable(name: "self", scope: !10304, file: !362, line: 1209, type: !649, align: 8)
!10304 = !DILexicalBlockFile(scope: !10305, file: !362, discriminator: 0)
!10305 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10306)
!10306 = !{!10303, !10307}
!10307 = !DILocalVariable(name: "other", scope: !10304, file: !362, line: 1209, type: !649, align: 8)
!10308 = !DILocation(line: 1209, column: 21, scope: !10304, inlinedAt: !10309)
!10309 = !DILocation(line: 38, column: 9, scope: !10269, inlinedAt: !10275)
!10310 = !DILocation(line: 1209, column: 21, scope: !10311, inlinedAt: !10315)
!10311 = !DILexicalBlockFile(scope: !10312, file: !362, discriminator: 0)
!10312 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !10313)
!10313 = !{!10314}
!10314 = !DILocalVariable(name: "addr", scope: !10311, file: !362, line: 1209, type: !9, align: 8)
!10315 = !DILocation(line: 668, column: 24, scope: !10267, inlinedAt: !10268)
!10316 = !DILocation(line: 1209, column: 20, scope: !10258)
!10317 = !DILocation(line: 1209, column: 13, scope: !10258)
!10318 = !DILocation(line: 1212, column: 6, scope: !10250)
!10319 = distinct !DISubprogram(name: "as_mut_ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17hfef026a6d1b36ffcE", scope: !2688, file: !362, line: 1204, type: !10320, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2713, retainedNodes: !10323)
!10320 = !DISubroutineType(types: !10321)
!10321 = !{!3585, !10322}
!10322 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2688, size: 64, align: 64, dwarfAddressSpace: 0)
!10323 = !{!10324, !10325}
!10324 = !DILocalVariable(name: "self", arg: 1, scope: !10319, file: !362, line: 1204, type: !10322)
!10325 = !DILocalVariable(name: "ptr", scope: !10326, file: !362, line: 1207, type: !3585, align: 8)
!10326 = distinct !DILexicalBlock(scope: !10319, file: !362, line: 1207, column: 9)
!10327 = !DILocation(line: 1204, column: 23, scope: !10319)
!10328 = !DILocalVariable(name: "metadata", scope: !10329, file: !362, line: 1209, type: !7, align: 1)
!10329 = !DILexicalBlockFile(scope: !10330, file: !362, discriminator: 0)
!10330 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10331)
!10331 = !{!10332, !10328}
!10332 = !DILocalVariable(name: "data_address", scope: !10329, file: !362, line: 1209, type: !960, align: 8)
!10333 = !DILocation(line: 1209, column: 21, scope: !10329, inlinedAt: !10334)
!10334 = !DILocation(line: 668, column: 5, scope: !10335, inlinedAt: !10336)
!10335 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!10336 = !DILocation(line: 38, column: 41, scope: !10337, inlinedAt: !10343)
!10337 = distinct !DISubprogram(name: "is_null<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17ha336f6701181a751E", scope: !657, file: !656, line: 35, type: !10338, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !10340)
!10338 = !DISubroutineType(types: !10339)
!10339 = !{!1159, !3585}
!10340 = !{!10341}
!10341 = !DILocalVariable(name: "self", scope: !10342, file: !362, line: 1209, type: !3585, align: 8)
!10342 = !DILexicalBlockFile(scope: !10337, file: !362, discriminator: 0)
!10343 = !DILocation(line: 1209, column: 21, scope: !10326)
!10344 = !DILocation(line: 1207, column: 19, scope: !10319)
!10345 = !DILocalVariable(name: "self", scope: !10346, file: !362, line: 1207, type: !10350, align: 8)
!10346 = !DILexicalBlockFile(scope: !10347, file: !362, discriminator: 0)
!10347 = distinct !DISubprogram(name: "ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17hff87e9ab2be2a281E", scope: !2691, file: !9588, line: 223, type: !10348, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2713, retainedNodes: !10351)
!10348 = !DISubroutineType(types: !10349)
!10349 = !{!3585, !10350}
!10350 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2691, size: 64, align: 64, dwarfAddressSpace: 0)
!10351 = !{!10345}
!10352 = !DILocation(line: 1207, column: 19, scope: !10346, inlinedAt: !10344)
!10353 = !DILocalVariable(name: "self", scope: !10354, file: !362, line: 1207, type: !2694, align: 8)
!10354 = !DILexicalBlockFile(scope: !10355, file: !362, discriminator: 0)
!10355 = distinct !DISubprogram(name: "as_ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h215160b66ca76f69E", scope: !2694, file: !1743, line: 103, type: !10356, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !10358)
!10356 = !DISubroutineType(types: !10357)
!10357 = !{!3585, !2694}
!10358 = !{!10353}
!10359 = !DILocation(line: 1207, column: 19, scope: !10354, inlinedAt: !10360)
!10360 = !DILocation(line: 224, column: 9, scope: !10347, inlinedAt: !10344)
!10361 = !DILocalVariable(name: "self", scope: !10362, file: !362, line: 1207, type: !2697, align: 8)
!10362 = !DILexicalBlockFile(scope: !10363, file: !362, discriminator: 0)
!10363 = distinct !DISubprogram(name: "as_ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd6449f95196d166aE", scope: !2697, file: !646, line: 330, type: !10364, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !10366)
!10364 = !DISubroutineType(types: !10365)
!10365 = !{!3585, !2697}
!10366 = !{!10361}
!10367 = !DILocation(line: 1207, column: 19, scope: !10362, inlinedAt: !10368)
!10368 = !DILocation(line: 104, column: 9, scope: !10355, inlinedAt: !10360)
!10369 = !DILocation(line: 1207, column: 13, scope: !10326)
!10370 = !DILocation(line: 1209, column: 21, scope: !10342, inlinedAt: !10343)
!10371 = !DILocalVariable(name: "self", scope: !10372, file: !362, line: 1209, type: !649, align: 8)
!10372 = !DILexicalBlockFile(scope: !10373, file: !362, discriminator: 0)
!10373 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10374)
!10374 = !{!10371, !10375}
!10375 = !DILocalVariable(name: "other", scope: !10372, file: !362, line: 1209, type: !649, align: 8)
!10376 = !DILocation(line: 1209, column: 21, scope: !10372, inlinedAt: !10377)
!10377 = !DILocation(line: 38, column: 9, scope: !10337, inlinedAt: !10343)
!10378 = !DILocation(line: 1209, column: 21, scope: !10379, inlinedAt: !10383)
!10379 = !DILexicalBlockFile(scope: !10380, file: !362, discriminator: 0)
!10380 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !10381)
!10381 = !{!10382}
!10382 = !DILocalVariable(name: "addr", scope: !10379, file: !362, line: 1209, type: !9, align: 8)
!10383 = !DILocation(line: 668, column: 24, scope: !10335, inlinedAt: !10336)
!10384 = !DILocation(line: 1209, column: 20, scope: !10326)
!10385 = !DILocation(line: 1209, column: 13, scope: !10326)
!10386 = !DILocation(line: 1212, column: 6, scope: !10319)
!10387 = distinct !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17hb0491b9b26179efeE", scope: !315, file: !362, line: 1832, type: !10388, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10390)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{null, !1802, !402}
!10390 = !{!10391, !10392, !10393, !10395}
!10391 = !DILocalVariable(name: "self", arg: 1, scope: !10387, file: !362, line: 1832, type: !1802)
!10392 = !DILocalVariable(name: "other", arg: 2, scope: !10387, file: !362, line: 1832, type: !402)
!10393 = !DILocalVariable(name: "count", scope: !10394, file: !362, line: 1833, type: !9, align: 8)
!10394 = distinct !DILexicalBlock(scope: !10387, file: !362, line: 1833, column: 9)
!10395 = !DILocalVariable(name: "len", scope: !10396, file: !362, line: 1835, type: !9, align: 8)
!10396 = distinct !DILexicalBlock(scope: !10394, file: !362, line: 1835, column: 9)
!10397 = !DILocation(line: 1832, column: 31, scope: !10387)
!10398 = !DILocation(line: 1832, column: 42, scope: !10387)
!10399 = !DILocalVariable(name: "runtime", scope: !10400, file: !362, line: 1836, type: !10410, align: 8)
!10400 = !DILexicalBlockFile(scope: !10401, file: !362, discriminator: 0)
!10401 = distinct !DILexicalBlock(scope: !10402, file: !386, line: 2336, column: 13)
!10402 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hae1545660843a279E", scope: !5988, file: !386, line: 2458, type: !10403, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10405)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{null, !329, !649, !9}
!10405 = !{!10406, !10408, !10409, !10399}
!10406 = !DILocalVariable(name: "src", scope: !10407, file: !362, line: 1836, type: !329, align: 8)
!10407 = !DILexicalBlockFile(scope: !10402, file: !362, discriminator: 0)
!10408 = !DILocalVariable(name: "dst", scope: !10407, file: !362, line: 1836, type: !649, align: 8)
!10409 = !DILocalVariable(name: "count", scope: !10407, file: !362, line: 1836, type: !9, align: 8)
!10410 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !5998, file: !2, size: 192, align: 64, elements: !10411, templateParams: !23, identifier: "fb5d8c4998ddcc045cba0da9a8307400")
!10411 = !{!10412, !10413, !10415}
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !10410, file: !2, baseType: !391, size: 64, align: 64)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !10410, file: !2, baseType: !10414, size: 64, align: 64, offset: 64)
!10414 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut u8", baseType: !649, size: 64, align: 64, dwarfAddressSpace: 0)
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !10410, file: !2, baseType: !393, size: 64, align: 64, offset: 128)
!10416 = !DILocation(line: 1836, column: 18, scope: !10400, inlinedAt: !10417)
!10417 = !DILocation(line: 1836, column: 18, scope: !10396)
!10418 = !DILocation(line: 1833, column: 30, scope: !10387)
!10419 = !DILocation(line: 1833, column: 13, scope: !10394)
!10420 = !DILocation(line: 1834, column: 9, scope: !10394)
!10421 = !DILocation(line: 1835, column: 19, scope: !10394)
!10422 = !DILocalVariable(name: "self", scope: !10423, file: !362, line: 1835, type: !370, align: 8)
!10423 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h0ff6fdd913c8e487E", scope: !315, file: !362, line: 1945, type: !9704, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10424)
!10424 = !{!10422}
!10425 = !DILocation(line: 1835, column: 19, scope: !10423, inlinedAt: !10421)
!10426 = !DILocation(line: 1835, column: 13, scope: !10396)
!10427 = !DILocation(line: 1836, column: 43, scope: !10396)
!10428 = !DILocation(line: 1836, column: 18, scope: !10407, inlinedAt: !10417)
!10429 = !DILocation(line: 1836, column: 62, scope: !10396)
!10430 = !DILocalVariable(name: "self", scope: !10431, file: !362, line: 1836, type: !649, align: 8)
!10431 = !DILexicalBlockFile(scope: !10432, file: !362, discriminator: 0)
!10432 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce9ae179be503a7aE", scope: !657, file: !656, line: 985, type: !930, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10433)
!10433 = !{!10430, !10434}
!10434 = !DILocalVariable(name: "count", scope: !10431, file: !362, line: 1836, type: !9, align: 8)
!10435 = !DILocation(line: 1836, column: 62, scope: !10431, inlinedAt: !10429)
!10436 = !DILocation(line: 1836, column: 84, scope: !10396)
!10437 = !DILocalVariable(name: "self", scope: !10438, file: !362, line: 1836, type: !649, align: 8)
!10438 = !DILexicalBlockFile(scope: !10439, file: !362, discriminator: 0)
!10439 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h7a151f4cf998d469E", scope: !657, file: !656, line: 465, type: !939, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10440)
!10440 = !{!10437, !10441}
!10441 = !DILocalVariable(name: "count", scope: !10438, file: !362, line: 1836, type: !868, align: 8)
!10442 = !DILocation(line: 1836, column: 62, scope: !10438, inlinedAt: !10443)
!10443 = !DILocation(line: 990, column: 18, scope: !10432, inlinedAt: !10429)
!10444 = !DILocation(line: 1836, column: 90, scope: !10396)
!10445 = !DILocation(line: 1837, column: 9, scope: !10396)
!10446 = !DILocation(line: 1838, column: 6, scope: !10387)
!10447 = distinct !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h9dbb13095de8647bE", scope: !315, file: !362, line: 2282, type: !10448, scopeLine: 2282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10450)
!10448 = !DISubroutineType(types: !10449)
!10449 = !{null, !1802, !366}
!10450 = !{!10451, !10452}
!10451 = !DILocalVariable(name: "self", arg: 1, scope: !10447, file: !362, line: 2282, type: !1802)
!10452 = !DILocalVariable(name: "other", arg: 2, scope: !10447, file: !362, line: 2282, type: !366)
!10453 = !DILocation(line: 2282, column: 30, scope: !10447)
!10454 = !DILocation(line: 2282, column: 41, scope: !10447)
!10455 = !DILocation(line: 2283, column: 26, scope: !10447)
!10456 = !DILocalVariable(name: "self", scope: !10457, file: !362, line: 2283, type: !366, align: 8)
!10457 = !DILexicalBlockFile(scope: !10458, file: !362, discriminator: 0)
!10458 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he6f0451bd5ba00ccE", scope: !2489, file: !2488, line: 734, type: !6163, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10459)
!10459 = !{!10456}
!10460 = !DILocation(line: 2283, column: 26, scope: !10457, inlinedAt: !10455)
!10461 = !DILocation(line: 2283, column: 9, scope: !10447)
!10462 = !DILocation(line: 2284, column: 6, scope: !10447)
!10463 = distinct !DISubprogram(name: "spare_capacity_mut<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hbcd51560ec106435E", scope: !315, file: !362, line: 2126, type: !10464, scopeLine: 2126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10466)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{!5962, !1802}
!10466 = !{!10467}
!10467 = !DILocalVariable(name: "self", arg: 1, scope: !10463, file: !362, line: 2126, type: !1802)
!10468 = !DILocation(line: 2126, column: 31, scope: !10463)
!10469 = !DILocation(line: 2132, column: 17, scope: !10463)
!10470 = !DILocalVariable(name: "self", scope: !10471, file: !362, line: 2132, type: !649, align: 8)
!10471 = !DILexicalBlockFile(scope: !10472, file: !362, discriminator: 0)
!10472 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce9ae179be503a7aE", scope: !657, file: !656, line: 985, type: !930, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10473)
!10473 = !{!10470, !10474}
!10474 = !DILocalVariable(name: "count", scope: !10471, file: !362, line: 2132, type: !9, align: 8)
!10475 = !DILocation(line: 2132, column: 17, scope: !10471, inlinedAt: !10469)
!10476 = !DILocation(line: 2132, column: 39, scope: !10463)
!10477 = !DILocalVariable(name: "self", scope: !10478, file: !362, line: 2132, type: !649, align: 8)
!10478 = !DILexicalBlockFile(scope: !10479, file: !362, discriminator: 0)
!10479 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h7a151f4cf998d469E", scope: !657, file: !656, line: 465, type: !939, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10480)
!10480 = !{!10477, !10481}
!10481 = !DILocalVariable(name: "count", scope: !10478, file: !362, line: 2132, type: !868, align: 8)
!10482 = !DILocation(line: 2132, column: 17, scope: !10478, inlinedAt: !10483)
!10483 = !DILocation(line: 990, column: 18, scope: !10472, inlinedAt: !10469)
!10484 = !DILocalVariable(name: "data", scope: !10485, file: !362, line: 2131, type: !1014, align: 8)
!10485 = !DILexicalBlockFile(scope: !10486, file: !362, discriminator: 0)
!10486 = distinct !DISubprogram(name: "from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h30b12356e6c762c4E", scope: !377, file: !376, line: 134, type: !6058, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !10487)
!10487 = !{!10484, !10488, !10489}
!10488 = !DILocalVariable(name: "len", scope: !10485, file: !362, line: 2131, type: !9, align: 8)
!10489 = !DILocalVariable(name: "runtime", scope: !10490, file: !362, line: 2131, type: !6065, align: 8)
!10490 = !DILexicalBlockFile(scope: !10491, file: !362, discriminator: 0)
!10491 = distinct !DILexicalBlock(scope: !10486, file: !386, line: 2336, column: 13)
!10492 = !DILocation(line: 2131, column: 13, scope: !10485, inlinedAt: !10493)
!10493 = !DILocation(line: 2131, column: 13, scope: !10463)
!10494 = !DILocation(line: 2133, column: 17, scope: !10463)
!10495 = !DILocalVariable(name: "self", scope: !10496, file: !362, line: 2133, type: !10149, align: 8)
!10496 = !DILexicalBlockFile(scope: !10497, file: !362, discriminator: 0)
!10497 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17hf142d6b502d6e714E", scope: !319, file: !9588, line: 231, type: !10498, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10500)
!10498 = !DISubroutineType(types: !10499)
!10499 = !{!9, !10149}
!10500 = !{!10495}
!10501 = !DILocation(line: 2133, column: 17, scope: !10496, inlinedAt: !10494)
!10502 = !DILocation(line: 2133, column: 39, scope: !10463)
!10503 = !DILocalVariable(name: "data", scope: !10504, file: !362, line: 2131, type: !1014, align: 8)
!10504 = !DILexicalBlockFile(scope: !10505, file: !362, discriminator: 0)
!10505 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hb6b24e962d1c0c17E", scope: !43, file: !399, line: 727, type: !1038, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !10506)
!10506 = !{!10503, !10507}
!10507 = !DILocalVariable(name: "len", scope: !10504, file: !362, line: 2131, type: !9, align: 8)
!10508 = !DILocation(line: 2131, column: 13, scope: !10504, inlinedAt: !10509)
!10509 = !DILocation(line: 141, column: 15, scope: !10486, inlinedAt: !10493)
!10510 = !DILocalVariable(name: "self", scope: !10511, file: !362, line: 2131, type: !1014, align: 8)
!10511 = !DILexicalBlockFile(scope: !10512, file: !362, discriminator: 0)
!10512 = distinct !DISubprogram(name: "cast<core::mem::maybe_uninit::MaybeUninit<u8>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h643fd9cf5c2a8b02E", scope: !657, file: !656, line: 45, type: !1048, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1051, retainedNodes: !10513)
!10513 = !{!10510}
!10514 = !DILocation(line: 2131, column: 13, scope: !10511, inlinedAt: !10515)
!10515 = !DILocation(line: 728, column: 24, scope: !10505, inlinedAt: !10509)
!10516 = !DILocalVariable(name: "data_address", scope: !10517, file: !362, line: 2131, type: !960, align: 8)
!10517 = !DILexicalBlockFile(scope: !10518, file: !362, discriminator: 0)
!10518 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h5301a74ec7cc69e3E", scope: !427, file: !426, line: 127, type: !1057, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !10519)
!10519 = !{!10516, !10520}
!10520 = !DILocalVariable(name: "metadata", scope: !10517, file: !362, line: 2131, type: !9, align: 8)
!10521 = !DILocation(line: 2131, column: 13, scope: !10517, inlinedAt: !10522)
!10522 = !DILocation(line: 728, column: 5, scope: !10505, inlinedAt: !10509)
!10523 = !DILocation(line: 2136, column: 6, scope: !10463)
!10524 = distinct !DISubprogram(name: "as_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hcda8ebe428aaf363E", scope: !315, file: !362, line: 1167, type: !10525, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10527)
!10525 = !DISubroutineType(types: !10526)
!10526 = !{!329, !370}
!10527 = !{!10528, !10529}
!10528 = !DILocalVariable(name: "self", arg: 1, scope: !10524, file: !362, line: 1167, type: !370)
!10529 = !DILocalVariable(name: "ptr", scope: !10530, file: !362, line: 1170, type: !649, align: 8)
!10530 = distinct !DILexicalBlock(scope: !10524, file: !362, line: 1170, column: 9)
!10531 = !DILocation(line: 1167, column: 19, scope: !10524)
!10532 = !DILocalVariable(name: "metadata", scope: !10533, file: !362, line: 1172, type: !7, align: 1)
!10533 = !DILexicalBlockFile(scope: !10534, file: !362, discriminator: 0)
!10534 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10535)
!10535 = !{!10536, !10532}
!10536 = !DILocalVariable(name: "data_address", scope: !10533, file: !362, line: 1172, type: !960, align: 8)
!10537 = !DILocation(line: 1172, column: 21, scope: !10533, inlinedAt: !10538)
!10538 = !DILocation(line: 668, column: 5, scope: !10539, inlinedAt: !10540)
!10539 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!10540 = !DILocation(line: 38, column: 41, scope: !10541, inlinedAt: !10545)
!10541 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd134781c17b0a8a9E", scope: !657, file: !656, line: 35, type: !1157, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10542)
!10542 = !{!10543}
!10543 = !DILocalVariable(name: "self", scope: !10544, file: !362, line: 1172, type: !649, align: 8)
!10544 = !DILexicalBlockFile(scope: !10541, file: !362, discriminator: 0)
!10545 = !DILocation(line: 1172, column: 21, scope: !10530)
!10546 = !DILocation(line: 1170, column: 19, scope: !10524)
!10547 = !DILocalVariable(name: "self", scope: !10548, file: !362, line: 1170, type: !10149, align: 8)
!10548 = !DILexicalBlockFile(scope: !10549, file: !362, discriminator: 0)
!10549 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h453b1da850305d81E", scope: !319, file: !9588, line: 223, type: !10147, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10550)
!10550 = !{!10547}
!10551 = !DILocation(line: 1170, column: 19, scope: !10548, inlinedAt: !10546)
!10552 = !DILocalVariable(name: "self", scope: !10553, file: !362, line: 1170, type: !322, align: 8)
!10553 = !DILexicalBlockFile(scope: !10554, file: !362, discriminator: 0)
!10554 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha4a6fb266c1c2a9eE", scope: !322, file: !1743, line: 103, type: !1744, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10555)
!10555 = !{!10552}
!10556 = !DILocation(line: 1170, column: 19, scope: !10553, inlinedAt: !10557)
!10557 = !DILocation(line: 224, column: 9, scope: !10549, inlinedAt: !10546)
!10558 = !DILocalVariable(name: "self", scope: !10559, file: !362, line: 1170, type: !326, align: 8)
!10559 = !DILexicalBlockFile(scope: !10560, file: !362, discriminator: 0)
!10560 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10561)
!10561 = !{!10558}
!10562 = !DILocation(line: 1170, column: 19, scope: !10559, inlinedAt: !10563)
!10563 = !DILocation(line: 104, column: 9, scope: !10554, inlinedAt: !10557)
!10564 = !DILocation(line: 1170, column: 13, scope: !10530)
!10565 = !DILocation(line: 1172, column: 21, scope: !10544, inlinedAt: !10545)
!10566 = !DILocalVariable(name: "self", scope: !10567, file: !362, line: 1172, type: !649, align: 8)
!10567 = !DILexicalBlockFile(scope: !10568, file: !362, discriminator: 0)
!10568 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10569)
!10569 = !{!10566, !10570}
!10570 = !DILocalVariable(name: "other", scope: !10567, file: !362, line: 1172, type: !649, align: 8)
!10571 = !DILocation(line: 1172, column: 21, scope: !10567, inlinedAt: !10572)
!10572 = !DILocation(line: 38, column: 9, scope: !10541, inlinedAt: !10545)
!10573 = !DILocation(line: 1172, column: 21, scope: !10574, inlinedAt: !10578)
!10574 = !DILexicalBlockFile(scope: !10575, file: !362, discriminator: 0)
!10575 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !10576)
!10576 = !{!10577}
!10577 = !DILocalVariable(name: "addr", scope: !10574, file: !362, line: 1172, type: !9, align: 8)
!10578 = !DILocation(line: 668, column: 24, scope: !10539, inlinedAt: !10540)
!10579 = !DILocation(line: 1172, column: 20, scope: !10530)
!10580 = !DILocation(line: 1172, column: 13, scope: !10530)
!10581 = !DILocation(line: 1175, column: 6, scope: !10524)
!10582 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17hd863dc2932758bc4E", scope: !315, file: !362, line: 840, type: !9883, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10583)
!10583 = !{!10584, !10585}
!10584 = !DILocalVariable(name: "self", arg: 1, scope: !10582, file: !362, line: 840, type: !1802)
!10585 = !DILocalVariable(name: "additional", arg: 2, scope: !10582, file: !362, line: 840, type: !9)
!10586 = !DILocation(line: 840, column: 20, scope: !10582)
!10587 = !DILocation(line: 840, column: 31, scope: !10582)
!10588 = !DILocation(line: 841, column: 9, scope: !10582)
!10589 = !DILocation(line: 841, column: 26, scope: !10582)
!10590 = !DILocation(line: 842, column: 6, scope: !10582)
!10591 = distinct !DISubprogram(name: "as_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h06c2d6b0b8cceaa7E", scope: !315, file: !362, line: 1118, type: !364, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10592)
!10592 = !{!10593}
!10593 = !DILocalVariable(name: "self", arg: 1, scope: !10591, file: !362, line: 1118, type: !370)
!10594 = !DILocation(line: 1118, column: 21, scope: !10591)
!10595 = !DILocation(line: 1119, column: 9, scope: !10591)
!10596 = !DILocalVariable(name: "self", scope: !10597, file: !362, line: 1119, type: !370, align: 8)
!10597 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2b77cc1908e440a5E", scope: !363, file: !362, line: 2531, type: !364, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !10598)
!10598 = !{!10596}
!10599 = !DILocation(line: 1119, column: 9, scope: !10597, inlinedAt: !10595)
!10600 = !DILocalVariable(name: "data", scope: !10601, file: !362, line: 1119, type: !329, align: 8)
!10601 = !DILexicalBlockFile(scope: !10602, file: !362, discriminator: 0)
!10602 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hc9808a0b8f9d77eeE", scope: !377, file: !376, line: 90, type: !379, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10603)
!10603 = !{!10600, !10604, !10605}
!10604 = !DILocalVariable(name: "len", scope: !10601, file: !362, line: 1119, type: !9, align: 8)
!10605 = !DILocalVariable(name: "runtime", scope: !10606, file: !362, line: 1119, type: !387, align: 8)
!10606 = !DILexicalBlockFile(scope: !10607, file: !362, discriminator: 0)
!10607 = distinct !DILexicalBlock(scope: !10602, file: !386, line: 2336, column: 13)
!10608 = !DILocation(line: 1119, column: 9, scope: !10601, inlinedAt: !10609)
!10609 = !DILocation(line: 2532, column: 18, scope: !10597, inlinedAt: !10595)
!10610 = !DILocalVariable(name: "data", scope: !10611, file: !362, line: 1119, type: !329, align: 8)
!10611 = !DILexicalBlockFile(scope: !10612, file: !362, discriminator: 0)
!10612 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6a66992555506ab5E", scope: !43, file: !399, line: 695, type: !400, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10613)
!10613 = !{!10610, !10614}
!10614 = !DILocalVariable(name: "len", scope: !10611, file: !362, line: 1119, type: !9, align: 8)
!10615 = !DILocation(line: 1119, column: 9, scope: !10611, inlinedAt: !10616)
!10616 = !DILocation(line: 97, column: 11, scope: !10602, inlinedAt: !10609)
!10617 = !DILocalVariable(name: "self", scope: !10618, file: !362, line: 1119, type: !329, align: 8)
!10618 = !DILexicalBlockFile(scope: !10619, file: !362, discriminator: 0)
!10619 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb951d44ade26c9c5E", scope: !414, file: !413, line: 46, type: !416, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !10620)
!10620 = !{!10617}
!10621 = !DILocation(line: 1119, column: 9, scope: !10618, inlinedAt: !10622)
!10622 = !DILocation(line: 696, column: 20, scope: !10612, inlinedAt: !10616)
!10623 = !DILocalVariable(name: "data_address", scope: !10624, file: !362, line: 1119, type: !6, align: 8)
!10624 = !DILexicalBlockFile(scope: !10625, file: !362, discriminator: 0)
!10625 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h9dc36a19d85d94baE", scope: !427, file: !426, line: 110, type: !428, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10626)
!10626 = !{!10623, !10627}
!10627 = !DILocalVariable(name: "metadata", scope: !10624, file: !362, line: 1119, type: !9, align: 8)
!10628 = !DILocation(line: 1119, column: 9, scope: !10624, inlinedAt: !10629)
!10629 = !DILocation(line: 696, column: 5, scope: !10612, inlinedAt: !10616)
!10630 = !DILocation(line: 1120, column: 6, scope: !10591)
!10631 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17he3827ab2a2518c8dE", scope: !336, file: !7859, line: 172, type: !10632, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10634)
!10632 = !DISubroutineType(types: !10633)
!10633 = !{!7481, !7863, !1779, !1159}
!10634 = !{!10635, !10636, !10637, !10638, !10640, !10642, !10644, !10659}
!10635 = !DILocalVariable(name: "self", arg: 1, scope: !10631, file: !7859, line: 172, type: !7863)
!10636 = !DILocalVariable(name: "layout", arg: 2, scope: !10631, file: !7859, line: 172, type: !1779)
!10637 = !DILocalVariable(name: "zeroed", arg: 3, scope: !10631, file: !7859, line: 172, type: !1159)
!10638 = !DILocalVariable(name: "size", scope: !10639, file: !7859, line: 176, type: !9, align: 8)
!10639 = distinct !DILexicalBlock(scope: !10631, file: !7859, line: 176, column: 13)
!10640 = !DILocalVariable(name: "raw_ptr", scope: !10641, file: !7859, line: 177, type: !649, align: 8)
!10641 = distinct !DILexicalBlock(scope: !10639, file: !7859, line: 177, column: 17)
!10642 = !DILocalVariable(name: "ptr", scope: !10643, file: !7859, line: 178, type: !326, align: 8)
!10643 = distinct !DILexicalBlock(scope: !10641, file: !7859, line: 178, column: 17)
!10644 = !DILocalVariable(name: "residual", scope: !10645, file: !7859, line: 178, type: !10646, align: 1)
!10645 = distinct !DILexicalBlock(scope: !10641, file: !7859, line: 178, column: 66)
!10646 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !2134, file: !2, align: 8, elements: !10647, templateParams: !23, identifier: "572d358f2a12b97961cfb71e38e53f04")
!10647 = !{!10648}
!10648 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10646, file: !2, align: 8, elements: !10649, templateParams: !23, identifier: "88663002e18d2fe1148d606c86c1d5ff")
!10649 = !{!10650, !10655}
!10650 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10648, file: !2, baseType: !10651, align: 8)
!10651 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10646, file: !2, align: 8, elements: !10652, templateParams: !10654, identifier: "be577e6defde51b29863ecc8d4e2e22a")
!10652 = !{!10653}
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10651, file: !2, baseType: !4077, align: 8)
!10654 = !{!4076, !7494}
!10655 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10648, file: !2, baseType: !10656, align: 8)
!10656 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10646, file: !2, align: 8, elements: !10657, templateParams: !10654, identifier: "1bce49b0456cc0581bfad8a74808f72")
!10657 = !{!10658}
!10658 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10656, file: !2, baseType: !7495, align: 8)
!10659 = !DILocalVariable(name: "val", scope: !10660, file: !7859, line: 178, type: !326, align: 8)
!10660 = distinct !DILexicalBlock(scope: !10641, file: !7859, line: 178, column: 27)
!10661 = !DILocation(line: 172, column: 19, scope: !10631)
!10662 = !DILocation(line: 172, column: 26, scope: !10631)
!10663 = !DILocation(line: 172, column: 42, scope: !10631)
!10664 = !DILocalVariable(name: "data", scope: !10665, file: !7859, line: 174, type: !326, align: 8)
!10665 = !DILexicalBlockFile(scope: !10666, file: !7859, discriminator: 0)
!10666 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h1de9854a0e3f4cc4E", scope: !7489, file: !646, line: 487, type: !10667, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10669)
!10667 = !DISubroutineType(types: !10668)
!10668 = !{!7489, !326, !9}
!10669 = !{!10664, !10670}
!10670 = !DILocalVariable(name: "len", scope: !10665, file: !7859, line: 174, type: !9, align: 8)
!10671 = !DILocation(line: 174, column: 21, scope: !10665, inlinedAt: !10672)
!10672 = !DILocation(line: 174, column: 21, scope: !10631)
!10673 = !DILocation(line: 177, column: 21, scope: !10641)
!10674 = !DILocalVariable(name: "layout", scope: !10675, file: !7859, line: 177, type: !1779, align: 8)
!10675 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17h60312aa1dc585dabE", scope: !337, file: !7859, line: 165, type: !10676, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10678)
!10676 = !DISubroutineType(types: !10677)
!10677 = !{!649, !1779}
!10678 = !{!10674}
!10679 = !DILocation(line: 177, column: 43, scope: !10675, inlinedAt: !10680)
!10680 = !DILocation(line: 177, column: 43, scope: !10639)
!10681 = !DILocalVariable(name: "layout", scope: !10682, file: !7859, line: 177, type: !1779, align: 8)
!10682 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h6f891d3fd1d0bdd8E", scope: !337, file: !7859, line: 94, type: !10676, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10683)
!10683 = !{!10681}
!10684 = !DILocation(line: 177, column: 73, scope: !10682, inlinedAt: !10685)
!10685 = !DILocation(line: 177, column: 73, scope: !10639)
!10686 = !DILocalVariable(name: "self", scope: !10687, file: !7859, line: 178, type: !10707, align: 8)
!10687 = !DILexicalBlockFile(scope: !10688, file: !7859, discriminator: 0)
!10688 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf38535a1ae3b46d2E", scope: !5611, file: !5292, line: 2117, type: !10689, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !10715, retainedNodes: !10721)
!10689 = !DISubroutineType(types: !10690)
!10690 = !{!10691, !10707}
!10691 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !4109, file: !2, size: 64, align: 64, elements: !10692, templateParams: !23, identifier: "7f8c65b25026163a60482c903b940372")
!10692 = !{!10693}
!10693 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10691, file: !2, size: 64, align: 64, elements: !10694, templateParams: !23, identifier: "a5a8c50ac5e6502472acbdda15ae7613", discriminator: !10706)
!10694 = !{!10695, !10702}
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !10693, file: !2, baseType: !10696, size: 64, align: 64)
!10696 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !10691, file: !2, size: 64, align: 64, elements: !10697, templateParams: !10699, identifier: "d2ac067f6845ce1e8a08fbb330350406")
!10697 = !{!10698}
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10696, file: !2, baseType: !326, size: 64, align: 64)
!10699 = !{!10700, !10701}
!10700 = !DITemplateTypeParameter(name: "B", type: !10646)
!10701 = !DITemplateTypeParameter(name: "C", type: !326)
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !10693, file: !2, baseType: !10703, size: 64, align: 64, extraData: i64 0)
!10703 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !10691, file: !2, size: 64, align: 64, elements: !10704, templateParams: !10699, identifier: "81bddfbc89a9f0c5cc1c72e49b9ff534")
!10704 = !{!10705}
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10703, file: !2, baseType: !10646, align: 8)
!10706 = !DIDerivedType(tag: DW_TAG_member, scope: !10691, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!10707 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !2134, file: !2, size: 64, align: 64, elements: !10708, templateParams: !23, identifier: "e71566aa277061ca8abc5a83ae5b9729")
!10708 = !{!10709}
!10709 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10707, file: !2, size: 64, align: 64, elements: !10710, templateParams: !23, identifier: "4a74327c407a883ea599f67b3290ba83", discriminator: !10720)
!10710 = !{!10711, !10716}
!10711 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10709, file: !2, baseType: !10712, size: 64, align: 64)
!10712 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10707, file: !2, size: 64, align: 64, elements: !10713, templateParams: !10715, identifier: "71a196ee6c186d8bac41245f54989593")
!10713 = !{!10714}
!10714 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10712, file: !2, baseType: !326, size: 64, align: 64)
!10715 = !{!3979, !7494}
!10716 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10709, file: !2, baseType: !10717, size: 64, align: 64, extraData: i64 0)
!10717 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10707, file: !2, size: 64, align: 64, elements: !10718, templateParams: !10715, identifier: "fc861602d066f2f1f51a40a0537349e6")
!10718 = !{!10719}
!10719 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10717, file: !2, baseType: !7495, align: 8)
!10720 = !DIDerivedType(tag: DW_TAG_member, scope: !10707, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!10721 = !{!10686, !10722, !10725}
!10722 = !DILocalVariable(name: "v", scope: !10723, file: !7859, line: 178, type: !326, align: 8)
!10723 = !DILexicalBlockFile(scope: !10724, file: !7859, discriminator: 0)
!10724 = distinct !DILexicalBlock(scope: !10688, file: !5292, line: 2119, column: 13)
!10725 = !DILocalVariable(name: "e", scope: !10726, file: !7859, line: 178, type: !7495, align: 1)
!10726 = !DILexicalBlockFile(scope: !10727, file: !7859, discriminator: 0)
!10727 = distinct !DILexicalBlock(scope: !10688, file: !5292, line: 2120, column: 13)
!10728 = !DILocation(line: 178, column: 27, scope: !10687, inlinedAt: !10729)
!10729 = !DILocation(line: 178, column: 27, scope: !10641)
!10730 = !DILocalVariable(name: "self", scope: !10731, file: !7859, line: 178, type: !3972, align: 8)
!10731 = !DILexicalBlockFile(scope: !10732, file: !7859, discriminator: 0)
!10732 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hfc9f7764fef30814E", scope: !3972, file: !1664, line: 1051, type: !10733, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !10715, retainedNodes: !10735)
!10733 = !DISubroutineType(types: !10734)
!10734 = !{!10707, !3972, !7495}
!10735 = !{!10730, !10736, !10737}
!10736 = !DILocalVariable(name: "err", scope: !10731, file: !7859, line: 178, type: !7495, align: 1)
!10737 = !DILocalVariable(name: "v", scope: !10738, file: !7859, line: 178, type: !326, align: 8)
!10738 = !DILexicalBlockFile(scope: !10739, file: !7859, discriminator: 0)
!10739 = distinct !DILexicalBlock(scope: !10732, file: !1664, line: 1056, column: 13)
!10740 = !DILocation(line: 178, column: 27, scope: !10731, inlinedAt: !10729)
!10741 = !DILocation(line: 178, column: 66, scope: !10645)
!10742 = !DILocalVariable(name: "residual", scope: !10743, file: !7859, line: 178, type: !10646, align: 1)
!10743 = !DILexicalBlockFile(scope: !10744, file: !7859, discriminator: 0)
!10744 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2d00e477ca03b3edE", scope: !5293, file: !5292, line: 2132, type: !10745, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !10751, retainedNodes: !10747)
!10745 = !DISubroutineType(types: !10746)
!10746 = !{!7481, !10646, !344}
!10747 = !{!10742, !10748}
!10748 = !DILocalVariable(name: "e", scope: !10749, file: !7859, line: 178, type: !7495, align: 1)
!10749 = !DILexicalBlockFile(scope: !10750, file: !7859, discriminator: 0)
!10750 = distinct !DILexicalBlock(scope: !10744, file: !5292, line: 2134, column: 13)
!10751 = !{!7493, !7494, !10752}
!10752 = !DITemplateTypeParameter(name: "F", type: !7495)
!10753 = !DILocation(line: 178, column: 27, scope: !10743, inlinedAt: !10754)
!10754 = !DILocation(line: 178, column: 27, scope: !10645)
!10755 = !DILocalVariable(name: "self", scope: !10756, file: !7859, line: 174, type: !5542, align: 8)
!10756 = !DILexicalBlockFile(scope: !10757, file: !7859, discriminator: 0)
!10757 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10758)
!10758 = !{!10755}
!10759 = !DILocation(line: 174, column: 51, scope: !10756, inlinedAt: !10760)
!10760 = !DILocation(line: 131, column: 9, scope: !10761, inlinedAt: !10767)
!10761 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h3e0d62183062772bE", scope: !1779, file: !5505, line: 130, type: !10762, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10764)
!10762 = !DISubroutineType(types: !10763)
!10763 = !{!9, !7521}
!10764 = !{!10765}
!10765 = !DILocalVariable(name: "self", scope: !10766, file: !7859, line: 174, type: !7521, align: 8)
!10766 = !DILexicalBlockFile(scope: !10761, file: !7859, discriminator: 0)
!10767 = !DILocation(line: 205, column: 71, scope: !10768, inlinedAt: !10774)
!10768 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h7e3ecd55dd5ddc50E", scope: !1779, file: !5505, line: 203, type: !10769, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10771)
!10769 = !DISubroutineType(types: !10770)
!10770 = !{!326, !7521}
!10771 = !{!10772}
!10772 = !DILocalVariable(name: "self", scope: !10773, file: !7859, line: 174, type: !7521, align: 8)
!10773 = !DILexicalBlockFile(scope: !10768, file: !7859, discriminator: 0)
!10774 = !DILocation(line: 174, column: 51, scope: !10631)
!10775 = !DILocalVariable(name: "self", scope: !10776, file: !7859, line: 174, type: !1785, align: 8)
!10776 = !DILexicalBlockFile(scope: !10777, file: !7859, discriminator: 0)
!10777 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10778)
!10778 = !{!10775}
!10779 = !DILocation(line: 174, column: 51, scope: !10776, inlinedAt: !10760)
!10780 = !DILocalVariable(name: "self", scope: !10781, file: !7859, line: 177, type: !5542, align: 8)
!10781 = !DILexicalBlockFile(scope: !10782, file: !7859, discriminator: 0)
!10782 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10783)
!10783 = !{!10780}
!10784 = !DILocation(line: 177, column: 43, scope: !10781, inlinedAt: !10785)
!10785 = !DILocation(line: 131, column: 9, scope: !10786, inlinedAt: !10790)
!10786 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h3e0d62183062772bE", scope: !1779, file: !5505, line: 130, type: !10762, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10787)
!10787 = !{!10788}
!10788 = !DILocalVariable(name: "self", scope: !10789, file: !7859, line: 177, type: !7521, align: 8)
!10789 = !DILexicalBlockFile(scope: !10786, file: !7859, discriminator: 0)
!10790 = !DILocation(line: 166, column: 49, scope: !10675, inlinedAt: !10680)
!10791 = !DILocalVariable(name: "self", scope: !10792, file: !7859, line: 177, type: !1785, align: 8)
!10792 = !DILexicalBlockFile(scope: !10793, file: !7859, discriminator: 0)
!10793 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10794)
!10794 = !{!10791}
!10795 = !DILocation(line: 177, column: 43, scope: !10792, inlinedAt: !10785)
!10796 = !DILocalVariable(name: "self", scope: !10797, file: !7859, line: 177, type: !5542, align: 8)
!10797 = !DILexicalBlockFile(scope: !10798, file: !7859, discriminator: 0)
!10798 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10799)
!10799 = !{!10796}
!10800 = !DILocation(line: 177, column: 73, scope: !10797, inlinedAt: !10801)
!10801 = !DILocation(line: 131, column: 9, scope: !10802, inlinedAt: !10806)
!10802 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h3e0d62183062772bE", scope: !1779, file: !5505, line: 130, type: !10762, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10803)
!10803 = !{!10804}
!10804 = !DILocalVariable(name: "self", scope: !10805, file: !7859, line: 177, type: !7521, align: 8)
!10805 = !DILexicalBlockFile(scope: !10802, file: !7859, discriminator: 0)
!10806 = !DILocation(line: 95, column: 42, scope: !10682, inlinedAt: !10685)
!10807 = !DILocalVariable(name: "self", scope: !10808, file: !7859, line: 177, type: !1785, align: 8)
!10808 = !DILexicalBlockFile(scope: !10809, file: !7859, discriminator: 0)
!10809 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10810)
!10810 = !{!10807}
!10811 = !DILocation(line: 177, column: 73, scope: !10808, inlinedAt: !10801)
!10812 = !DILocation(line: 178, column: 27, scope: !10726, inlinedAt: !10729)
!10813 = !DILocation(line: 178, column: 27, scope: !10749, inlinedAt: !10754)
!10814 = !DILocation(line: 173, column: 15, scope: !10631)
!10815 = !DILocalVariable(name: "self", scope: !10816, file: !7859, line: 173, type: !7521, align: 8)
!10816 = !DILexicalBlockFile(scope: !10817, file: !7859, discriminator: 0)
!10817 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hbd42faa40e199470E", scope: !1779, file: !5505, line: 120, type: !10762, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10818)
!10818 = !{!10815}
!10819 = !DILocation(line: 173, column: 15, scope: !10816, inlinedAt: !10814)
!10820 = !DILocation(line: 173, column: 9, scope: !10631)
!10821 = !DILocation(line: 174, column: 51, scope: !10773, inlinedAt: !10774)
!10822 = !DILocation(line: 174, column: 51, scope: !10766, inlinedAt: !10767)
!10823 = !DILocalVariable(name: "n", scope: !10824, file: !7859, line: 174, type: !9, align: 8)
!10824 = !DILexicalBlockFile(scope: !10825, file: !7859, discriminator: 0)
!10825 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10826)
!10826 = !{!10823, !10827}
!10827 = !DILocalVariable(name: "runtime", scope: !10828, file: !7859, line: 174, type: !5569, align: 8)
!10828 = !DILexicalBlockFile(scope: !10829, file: !7859, discriminator: 0)
!10829 = distinct !DILexicalBlock(scope: !10825, file: !386, line: 2336, column: 13)
!10830 = !DILocation(line: 174, column: 51, scope: !10824, inlinedAt: !10831)
!10831 = !DILocation(line: 41, column: 18, scope: !10777, inlinedAt: !10760)
!10832 = !DILocalVariable(name: "addr", scope: !10833, file: !7859, line: 174, type: !9, align: 8)
!10833 = !DILexicalBlockFile(scope: !10834, file: !7859, discriminator: 0)
!10834 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h110b4e97c6262135E", scope: !43, file: !399, line: 569, type: !10835, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10837)
!10835 = !DISubroutineType(types: !10836)
!10836 = !{!649, !9}
!10837 = !{!10832}
!10838 = !DILocation(line: 174, column: 51, scope: !10833, inlinedAt: !10839)
!10839 = !DILocation(line: 205, column: 41, scope: !10768, inlinedAt: !10774)
!10840 = !DILocalVariable(name: "ptr", scope: !10841, file: !7859, line: 174, type: !649, align: 8)
!10841 = !DILexicalBlockFile(scope: !10842, file: !7859, discriminator: 0)
!10842 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10843)
!10843 = !{!10840}
!10844 = !DILocation(line: 174, column: 51, scope: !10841, inlinedAt: !10845)
!10845 = !DILocation(line: 205, column: 18, scope: !10768, inlinedAt: !10774)
!10846 = !DILocation(line: 176, column: 13, scope: !10631)
!10847 = !DILocation(line: 176, column: 13, scope: !10639)
!10848 = !DILocation(line: 177, column: 34, scope: !10639)
!10849 = !DILocation(line: 177, column: 79, scope: !10639)
!10850 = !DILocalVariable(name: "self", scope: !10851, file: !7859, line: 177, type: !7521, align: 8)
!10851 = !DILexicalBlockFile(scope: !10852, file: !7859, discriminator: 0)
!10852 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hbd42faa40e199470E", scope: !1779, file: !5505, line: 120, type: !10762, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10853)
!10853 = !{!10850}
!10854 = !DILocation(line: 177, column: 73, scope: !10851, inlinedAt: !10855)
!10855 = !DILocation(line: 95, column: 27, scope: !10682, inlinedAt: !10685)
!10856 = !DILocation(line: 177, column: 73, scope: !10805, inlinedAt: !10806)
!10857 = !DILocalVariable(name: "n", scope: !10858, file: !7859, line: 177, type: !9, align: 8)
!10858 = !DILexicalBlockFile(scope: !10859, file: !7859, discriminator: 0)
!10859 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10860)
!10860 = !{!10857, !10861}
!10861 = !DILocalVariable(name: "runtime", scope: !10862, file: !7859, line: 177, type: !5569, align: 8)
!10862 = !DILexicalBlockFile(scope: !10863, file: !7859, discriminator: 0)
!10863 = distinct !DILexicalBlock(scope: !10859, file: !386, line: 2336, column: 13)
!10864 = !DILocation(line: 177, column: 73, scope: !10858, inlinedAt: !10865)
!10865 = !DILocation(line: 41, column: 18, scope: !10809, inlinedAt: !10801)
!10866 = !DILocation(line: 177, column: 56, scope: !10639)
!10867 = !DILocalVariable(name: "self", scope: !10868, file: !7859, line: 177, type: !7521, align: 8)
!10868 = !DILexicalBlockFile(scope: !10869, file: !7859, discriminator: 0)
!10869 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hbd42faa40e199470E", scope: !1779, file: !5505, line: 120, type: !10762, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10870)
!10870 = !{!10867}
!10871 = !DILocation(line: 177, column: 43, scope: !10868, inlinedAt: !10872)
!10872 = !DILocation(line: 166, column: 34, scope: !10675, inlinedAt: !10680)
!10873 = !DILocation(line: 177, column: 43, scope: !10789, inlinedAt: !10790)
!10874 = !DILocalVariable(name: "n", scope: !10875, file: !7859, line: 177, type: !9, align: 8)
!10875 = !DILexicalBlockFile(scope: !10876, file: !7859, discriminator: 0)
!10876 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10877)
!10877 = !{!10874, !10878}
!10878 = !DILocalVariable(name: "runtime", scope: !10879, file: !7859, line: 177, type: !5569, align: 8)
!10879 = !DILexicalBlockFile(scope: !10880, file: !7859, discriminator: 0)
!10880 = distinct !DILexicalBlock(scope: !10876, file: !386, line: 2336, column: 13)
!10881 = !DILocation(line: 177, column: 43, scope: !10875, inlinedAt: !10882)
!10882 = !DILocation(line: 41, column: 18, scope: !10793, inlinedAt: !10785)
!10883 = !DILocation(line: 177, column: 31, scope: !10639)
!10884 = !DILocation(line: 178, column: 40, scope: !10641)
!10885 = !DILocation(line: 178, column: 27, scope: !10738, inlinedAt: !10729)
!10886 = !DILocation(line: 178, column: 27, scope: !10723, inlinedAt: !10729)
!10887 = !DILocation(line: 178, column: 27, scope: !10660)
!10888 = !DILocation(line: 178, column: 21, scope: !10643)
!10889 = !DILocation(line: 179, column: 50, scope: !10643)
!10890 = !DILocalVariable(name: "data", scope: !10891, file: !7859, line: 179, type: !326, align: 8)
!10891 = !DILexicalBlockFile(scope: !10892, file: !7859, discriminator: 0)
!10892 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h1de9854a0e3f4cc4E", scope: !7489, file: !646, line: 487, type: !10667, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10893)
!10893 = !{!10890, !10894}
!10894 = !DILocalVariable(name: "len", scope: !10891, file: !7859, line: 179, type: !9, align: 8)
!10895 = !DILocation(line: 179, column: 20, scope: !10891, inlinedAt: !10896)
!10896 = !DILocation(line: 179, column: 20, scope: !10643)
!10897 = !DILocation(line: 179, column: 55, scope: !10643)
!10898 = !DILocalVariable(name: "self", scope: !10899, file: !7859, line: 179, type: !326, align: 8)
!10899 = !DILexicalBlockFile(scope: !10900, file: !7859, discriminator: 0)
!10900 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10901)
!10901 = !{!10898}
!10902 = !DILocation(line: 179, column: 20, scope: !10899, inlinedAt: !10903)
!10903 = !DILocation(line: 489, column: 70, scope: !10892, inlinedAt: !10896)
!10904 = !DILocalVariable(name: "data", scope: !10905, file: !7859, line: 179, type: !649, align: 8)
!10905 = !DILexicalBlockFile(scope: !10906, file: !7859, discriminator: 0)
!10906 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17he9d89cd098aed2e1E", scope: !43, file: !399, line: 727, type: !948, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10907)
!10907 = !{!10904, !10908}
!10908 = !DILocalVariable(name: "len", scope: !10905, file: !7859, line: 179, type: !9, align: 8)
!10909 = !DILocation(line: 179, column: 20, scope: !10905, inlinedAt: !10910)
!10910 = !DILocation(line: 489, column: 38, scope: !10892, inlinedAt: !10896)
!10911 = !DILocalVariable(name: "self", scope: !10912, file: !7859, line: 179, type: !649, align: 8)
!10912 = !DILexicalBlockFile(scope: !10913, file: !7859, discriminator: 0)
!10913 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hef927cab6f2be5beE", scope: !657, file: !656, line: 45, type: !958, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !10914)
!10914 = !{!10911}
!10915 = !DILocation(line: 179, column: 20, scope: !10912, inlinedAt: !10916)
!10916 = !DILocation(line: 728, column: 24, scope: !10906, inlinedAt: !10910)
!10917 = !DILocalVariable(name: "data_address", scope: !10918, file: !7859, line: 179, type: !960, align: 8)
!10918 = !DILexicalBlockFile(scope: !10919, file: !7859, discriminator: 0)
!10919 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb43c8ca59c3ce57eE", scope: !427, file: !426, line: 127, type: !967, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10920)
!10920 = !{!10917, !10921}
!10921 = !DILocalVariable(name: "metadata", scope: !10918, file: !7859, line: 179, type: !9, align: 8)
!10922 = !DILocation(line: 179, column: 20, scope: !10918, inlinedAt: !10923)
!10923 = !DILocation(line: 728, column: 5, scope: !10906, inlinedAt: !10910)
!10924 = !DILocalVariable(name: "ptr", scope: !10925, file: !7859, line: 179, type: !898, align: 8)
!10925 = !DILexicalBlockFile(scope: !10926, file: !7859, discriminator: 0)
!10926 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h09ab6dbcb2b4f3f5E", scope: !7489, file: !646, line: 196, type: !10927, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10929)
!10927 = !DISubroutineType(types: !10928)
!10928 = !{!7489, !898}
!10929 = !{!10924}
!10930 = !DILocation(line: 179, column: 20, scope: !10925, inlinedAt: !10931)
!10931 = !DILocation(line: 489, column: 18, scope: !10892, inlinedAt: !10896)
!10932 = !DILocation(line: 179, column: 17, scope: !10643)
!10933 = !DILocation(line: 180, column: 13, scope: !10631)
!10934 = !DILocation(line: 182, column: 6, scope: !10631)
!10935 = !DILocalVariable(name: "self", scope: !10936, file: !7859, line: 174, type: !326, align: 8)
!10936 = !DILexicalBlockFile(scope: !10937, file: !7859, discriminator: 0)
!10937 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10938)
!10938 = !{!10935}
!10939 = !DILocation(line: 174, column: 21, scope: !10936, inlinedAt: !10940)
!10940 = !DILocation(line: 489, column: 70, scope: !10666, inlinedAt: !10672)
!10941 = !DILocalVariable(name: "data", scope: !10942, file: !7859, line: 174, type: !649, align: 8)
!10942 = !DILexicalBlockFile(scope: !10943, file: !7859, discriminator: 0)
!10943 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17he9d89cd098aed2e1E", scope: !43, file: !399, line: 727, type: !948, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10944)
!10944 = !{!10941, !10945}
!10945 = !DILocalVariable(name: "len", scope: !10942, file: !7859, line: 174, type: !9, align: 8)
!10946 = !DILocation(line: 174, column: 21, scope: !10942, inlinedAt: !10947)
!10947 = !DILocation(line: 489, column: 38, scope: !10666, inlinedAt: !10672)
!10948 = !DILocalVariable(name: "self", scope: !10949, file: !7859, line: 174, type: !649, align: 8)
!10949 = !DILexicalBlockFile(scope: !10950, file: !7859, discriminator: 0)
!10950 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hef927cab6f2be5beE", scope: !657, file: !656, line: 45, type: !958, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !10951)
!10951 = !{!10948}
!10952 = !DILocation(line: 174, column: 21, scope: !10949, inlinedAt: !10953)
!10953 = !DILocation(line: 728, column: 24, scope: !10943, inlinedAt: !10947)
!10954 = !DILocalVariable(name: "data_address", scope: !10955, file: !7859, line: 174, type: !960, align: 8)
!10955 = !DILexicalBlockFile(scope: !10956, file: !7859, discriminator: 0)
!10956 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb43c8ca59c3ce57eE", scope: !427, file: !426, line: 127, type: !967, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10957)
!10957 = !{!10954, !10958}
!10958 = !DILocalVariable(name: "metadata", scope: !10955, file: !7859, line: 174, type: !9, align: 8)
!10959 = !DILocation(line: 174, column: 21, scope: !10955, inlinedAt: !10960)
!10960 = !DILocation(line: 728, column: 5, scope: !10943, inlinedAt: !10947)
!10961 = !DILocalVariable(name: "ptr", scope: !10962, file: !7859, line: 174, type: !898, align: 8)
!10962 = !DILexicalBlockFile(scope: !10963, file: !7859, discriminator: 0)
!10963 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h09ab6dbcb2b4f3f5E", scope: !7489, file: !646, line: 196, type: !10927, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !10964)
!10964 = !{!10961}
!10965 = !DILocation(line: 174, column: 21, scope: !10962, inlinedAt: !10966)
!10966 = !DILocation(line: 489, column: 18, scope: !10666, inlinedAt: !10672)
!10967 = !DILocation(line: 174, column: 18, scope: !10631)
!10968 = !DILocation(line: 174, column: 72, scope: !10631)
!10969 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h18238a86a3089a62E", scope: !336, file: !7859, line: 186, type: !10970, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !10972)
!10970 = !DISubroutineType(types: !10971)
!10971 = !{!7481, !7863, !326, !1779, !1779, !1159}
!10972 = !{!10973, !10974, !10975, !10976, !10977, !10978, !10980, !10981, !10983, !10985, !10987, !10989, !10991, !10993, !10995, !10997}
!10973 = !DILocalVariable(name: "self", arg: 1, scope: !10969, file: !7859, line: 187, type: !7863)
!10974 = !DILocalVariable(name: "ptr", arg: 2, scope: !10969, file: !7859, line: 188, type: !326)
!10975 = !DILocalVariable(name: "old_layout", arg: 3, scope: !10969, file: !7859, line: 189, type: !1779)
!10976 = !DILocalVariable(name: "new_layout", arg: 4, scope: !10969, file: !7859, line: 190, type: !1779)
!10977 = !DILocalVariable(name: "zeroed", arg: 5, scope: !10969, file: !7859, line: 191, type: !1159)
!10978 = !DILocalVariable(name: "old_size", scope: !10979, file: !7859, line: 203, type: !9, align: 8)
!10979 = distinct !DILexicalBlock(scope: !10969, file: !7859, line: 203, column: 13)
!10980 = !DILocalVariable(name: "old_size", scope: !10979, file: !7859, line: 203, type: !393, align: 8)
!10981 = !DILocalVariable(name: "new_size", scope: !10982, file: !7859, line: 204, type: !9, align: 8)
!10982 = distinct !DILexicalBlock(scope: !10979, file: !7859, line: 204, column: 17)
!10983 = !DILocalVariable(name: "raw_ptr", scope: !10984, file: !7859, line: 209, type: !649, align: 8)
!10984 = distinct !DILexicalBlock(scope: !10982, file: !7859, line: 209, column: 17)
!10985 = !DILocalVariable(name: "ptr", scope: !10986, file: !7859, line: 210, type: !326, align: 8)
!10986 = distinct !DILexicalBlock(scope: !10984, file: !7859, line: 210, column: 17)
!10987 = !DILocalVariable(name: "residual", scope: !10988, file: !7859, line: 210, type: !10646, align: 1)
!10988 = distinct !DILexicalBlock(scope: !10984, file: !7859, line: 210, column: 66)
!10989 = !DILocalVariable(name: "val", scope: !10990, file: !7859, line: 210, type: !326, align: 8)
!10990 = distinct !DILexicalBlock(scope: !10984, file: !7859, line: 210, column: 27)
!10991 = !DILocalVariable(name: "old_size", scope: !10992, file: !7859, line: 222, type: !9, align: 8)
!10992 = distinct !DILexicalBlock(scope: !10969, file: !7859, line: 222, column: 13)
!10993 = !DILocalVariable(name: "new_ptr", scope: !10994, file: !7859, line: 223, type: !7489, align: 8)
!10994 = distinct !DILexicalBlock(scope: !10992, file: !7859, line: 223, column: 17)
!10995 = !DILocalVariable(name: "residual", scope: !10996, file: !7859, line: 223, type: !10646, align: 1)
!10996 = distinct !DILexicalBlock(scope: !10992, file: !7859, line: 223, column: 66)
!10997 = !DILocalVariable(name: "val", scope: !10998, file: !7859, line: 223, type: !7489, align: 8)
!10998 = distinct !DILexicalBlock(scope: !10992, file: !7859, line: 223, column: 31)
!10999 = !DILocation(line: 187, column: 9, scope: !10969)
!11000 = !DILocation(line: 188, column: 9, scope: !10969)
!11001 = !DILocation(line: 189, column: 9, scope: !10969)
!11002 = !DILocation(line: 190, column: 9, scope: !10969)
!11003 = !DILocation(line: 191, column: 9, scope: !10969)
!11004 = !DILocalVariable(name: "layout", scope: !11005, file: !7859, line: 209, type: !1779, align: 8)
!11005 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17h6ce193535a475cdfE", scope: !337, file: !7859, line: 131, type: !11006, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11008)
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!649, !649, !1779, !9}
!11008 = !{!11009, !11004, !11010}
!11009 = !DILocalVariable(name: "ptr", scope: !11005, file: !7859, line: 209, type: !649, align: 8)
!11010 = !DILocalVariable(name: "new_size", scope: !11005, file: !7859, line: 209, type: !9, align: 8)
!11011 = !DILocation(line: 209, column: 31, scope: !11005, inlinedAt: !11012)
!11012 = !DILocation(line: 209, column: 31, scope: !10982)
!11013 = !DILocalVariable(name: "self", scope: !11014, file: !7859, line: 210, type: !10707, align: 8)
!11014 = !DILexicalBlockFile(scope: !11015, file: !7859, discriminator: 0)
!11015 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf38535a1ae3b46d2E", scope: !5611, file: !5292, line: 2117, type: !10689, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !10715, retainedNodes: !11016)
!11016 = !{!11013, !11017, !11020}
!11017 = !DILocalVariable(name: "v", scope: !11018, file: !7859, line: 210, type: !326, align: 8)
!11018 = !DILexicalBlockFile(scope: !11019, file: !7859, discriminator: 0)
!11019 = distinct !DILexicalBlock(scope: !11015, file: !5292, line: 2119, column: 13)
!11020 = !DILocalVariable(name: "e", scope: !11021, file: !7859, line: 210, type: !7495, align: 1)
!11021 = !DILexicalBlockFile(scope: !11022, file: !7859, discriminator: 0)
!11022 = distinct !DILexicalBlock(scope: !11015, file: !5292, line: 2120, column: 13)
!11023 = !DILocation(line: 210, column: 27, scope: !11014, inlinedAt: !11024)
!11024 = !DILocation(line: 210, column: 27, scope: !10984)
!11025 = !DILocalVariable(name: "self", scope: !11026, file: !7859, line: 210, type: !3972, align: 8)
!11026 = !DILexicalBlockFile(scope: !11027, file: !7859, discriminator: 0)
!11027 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hfc9f7764fef30814E", scope: !3972, file: !1664, line: 1051, type: !10733, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !10715, retainedNodes: !11028)
!11028 = !{!11025, !11029, !11030}
!11029 = !DILocalVariable(name: "err", scope: !11026, file: !7859, line: 210, type: !7495, align: 1)
!11030 = !DILocalVariable(name: "v", scope: !11031, file: !7859, line: 210, type: !326, align: 8)
!11031 = !DILexicalBlockFile(scope: !11032, file: !7859, discriminator: 0)
!11032 = distinct !DILexicalBlock(scope: !11027, file: !1664, line: 1056, column: 13)
!11033 = !DILocation(line: 210, column: 27, scope: !11026, inlinedAt: !11024)
!11034 = !DILocation(line: 210, column: 66, scope: !10988)
!11035 = !DILocalVariable(name: "residual", scope: !11036, file: !7859, line: 210, type: !10646, align: 1)
!11036 = !DILexicalBlockFile(scope: !11037, file: !7859, discriminator: 0)
!11037 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2d00e477ca03b3edE", scope: !5293, file: !5292, line: 2132, type: !10745, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !10751, retainedNodes: !11038)
!11038 = !{!11035, !11039}
!11039 = !DILocalVariable(name: "e", scope: !11040, file: !7859, line: 210, type: !7495, align: 1)
!11040 = !DILexicalBlockFile(scope: !11041, file: !7859, discriminator: 0)
!11041 = distinct !DILexicalBlock(scope: !11037, file: !5292, line: 2134, column: 13)
!11042 = !DILocation(line: 210, column: 27, scope: !11036, inlinedAt: !11043)
!11043 = !DILocation(line: 210, column: 27, scope: !10988)
!11044 = !DILocalVariable(name: "self", scope: !11045, file: !7859, line: 223, type: !7481, align: 8)
!11045 = !DILexicalBlockFile(scope: !11046, file: !7859, discriminator: 0)
!11046 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb17fe53c3b57974cE", scope: !5611, file: !5292, line: 2117, type: !11047, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7492, retainedNodes: !11064)
!11047 = !DISubroutineType(types: !11048)
!11048 = !{!11049, !7481}
!11049 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !4109, file: !2, size: 128, align: 64, elements: !11050, templateParams: !23, identifier: "742106b60153cc66c591376c04358a32")
!11050 = !{!11051}
!11051 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11049, file: !2, size: 128, align: 64, elements: !11052, templateParams: !23, identifier: "51e560db12d8945267902f7758889ab2", discriminator: !11063)
!11052 = !{!11053, !11059}
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !11051, file: !2, baseType: !11054, size: 128, align: 64)
!11054 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !11049, file: !2, size: 128, align: 64, elements: !11055, templateParams: !11057, identifier: "7a7db6f08dd8181ffbc0406581832086")
!11055 = !{!11056}
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11054, file: !2, baseType: !7489, size: 128, align: 64)
!11057 = !{!10700, !11058}
!11058 = !DITemplateTypeParameter(name: "C", type: !7489)
!11059 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !11051, file: !2, baseType: !11060, size: 128, align: 64, extraData: i64 0)
!11060 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !11049, file: !2, size: 128, align: 64, elements: !11061, templateParams: !11057, identifier: "520e4a70aaf12c465e959335c5fb5ede")
!11061 = !{!11062}
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11060, file: !2, baseType: !10646, align: 8)
!11063 = !DIDerivedType(tag: DW_TAG_member, scope: !11049, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!11064 = !{!11044, !11065, !11068}
!11065 = !DILocalVariable(name: "v", scope: !11066, file: !7859, line: 223, type: !7489, align: 8)
!11066 = !DILexicalBlockFile(scope: !11067, file: !7859, discriminator: 0)
!11067 = distinct !DILexicalBlock(scope: !11046, file: !5292, line: 2119, column: 13)
!11068 = !DILocalVariable(name: "e", scope: !11069, file: !7859, line: 223, type: !7495, align: 1)
!11069 = !DILexicalBlockFile(scope: !11070, file: !7859, discriminator: 0)
!11070 = distinct !DILexicalBlock(scope: !11046, file: !5292, line: 2120, column: 13)
!11071 = !DILocation(line: 223, column: 31, scope: !11045, inlinedAt: !11072)
!11072 = !DILocation(line: 223, column: 31, scope: !10992)
!11073 = !DILocation(line: 223, column: 66, scope: !10996)
!11074 = !DILocalVariable(name: "residual", scope: !11075, file: !7859, line: 223, type: !10646, align: 1)
!11075 = !DILexicalBlockFile(scope: !11076, file: !7859, discriminator: 0)
!11076 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2d00e477ca03b3edE", scope: !5293, file: !5292, line: 2132, type: !10745, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !10751, retainedNodes: !11077)
!11077 = !{!11074, !11078}
!11078 = !DILocalVariable(name: "e", scope: !11079, file: !7859, line: 223, type: !7495, align: 1)
!11079 = !DILexicalBlockFile(scope: !11080, file: !7859, discriminator: 0)
!11080 = distinct !DILexicalBlock(scope: !11076, file: !5292, line: 2134, column: 13)
!11081 = !DILocation(line: 223, column: 31, scope: !11075, inlinedAt: !11082)
!11082 = !DILocation(line: 223, column: 31, scope: !10996)
!11083 = !DILocalVariable(name: "self", scope: !11084, file: !7859, line: 203, type: !5542, align: 8)
!11084 = !DILexicalBlockFile(scope: !11085, file: !7859, discriminator: 0)
!11085 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11086)
!11086 = !{!11083}
!11087 = !DILocation(line: 203, column: 25, scope: !11084, inlinedAt: !11088)
!11088 = !DILocation(line: 131, column: 9, scope: !11089, inlinedAt: !11093)
!11089 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h3e0d62183062772bE", scope: !1779, file: !5505, line: 130, type: !10762, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11090)
!11090 = !{!11091}
!11091 = !DILocalVariable(name: "self", scope: !11092, file: !7859, line: 203, type: !7521, align: 8)
!11092 = !DILexicalBlockFile(scope: !11089, file: !7859, discriminator: 0)
!11093 = !DILocation(line: 203, column: 25, scope: !10969)
!11094 = !DILocalVariable(name: "self", scope: !11095, file: !7859, line: 203, type: !1785, align: 8)
!11095 = !DILexicalBlockFile(scope: !11096, file: !7859, discriminator: 0)
!11096 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11097)
!11097 = !{!11094}
!11098 = !DILocation(line: 203, column: 25, scope: !11095, inlinedAt: !11088)
!11099 = !DILocalVariable(name: "self", scope: !11100, file: !7859, line: 203, type: !5542, align: 8)
!11100 = !DILexicalBlockFile(scope: !11101, file: !7859, discriminator: 0)
!11101 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11102)
!11102 = !{!11099}
!11103 = !DILocation(line: 203, column: 47, scope: !11100, inlinedAt: !11104)
!11104 = !DILocation(line: 131, column: 9, scope: !11105, inlinedAt: !11109)
!11105 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h3e0d62183062772bE", scope: !1779, file: !5505, line: 130, type: !10762, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11106)
!11106 = !{!11107}
!11107 = !DILocalVariable(name: "self", scope: !11108, file: !7859, line: 203, type: !7521, align: 8)
!11108 = !DILexicalBlockFile(scope: !11105, file: !7859, discriminator: 0)
!11109 = !DILocation(line: 203, column: 47, scope: !10969)
!11110 = !DILocalVariable(name: "self", scope: !11111, file: !7859, line: 203, type: !1785, align: 8)
!11111 = !DILexicalBlockFile(scope: !11112, file: !7859, discriminator: 0)
!11112 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11113)
!11113 = !{!11110}
!11114 = !DILocation(line: 203, column: 47, scope: !11111, inlinedAt: !11104)
!11115 = !DILocalVariable(name: "self", scope: !11116, file: !7859, line: 209, type: !5542, align: 8)
!11116 = !DILexicalBlockFile(scope: !11117, file: !7859, discriminator: 0)
!11117 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11118)
!11118 = !{!11115}
!11119 = !DILocation(line: 209, column: 31, scope: !11116, inlinedAt: !11120)
!11120 = !DILocation(line: 131, column: 9, scope: !11121, inlinedAt: !11125)
!11121 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h3e0d62183062772bE", scope: !1779, file: !5505, line: 130, type: !10762, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11122)
!11122 = !{!11123}
!11123 = !DILocalVariable(name: "self", scope: !11124, file: !7859, line: 209, type: !7521, align: 8)
!11124 = !DILexicalBlockFile(scope: !11121, file: !7859, discriminator: 0)
!11125 = !DILocation(line: 132, column: 49, scope: !11005, inlinedAt: !11012)
!11126 = !DILocalVariable(name: "self", scope: !11127, file: !7859, line: 209, type: !1785, align: 8)
!11127 = !DILexicalBlockFile(scope: !11128, file: !7859, discriminator: 0)
!11128 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11129)
!11129 = !{!11126}
!11130 = !DILocation(line: 209, column: 31, scope: !11127, inlinedAt: !11120)
!11131 = !DILocation(line: 210, column: 27, scope: !11021, inlinedAt: !11024)
!11132 = !DILocation(line: 210, column: 27, scope: !11040, inlinedAt: !11043)
!11133 = !DILocation(line: 223, column: 31, scope: !11069, inlinedAt: !11072)
!11134 = !DILocation(line: 223, column: 31, scope: !11079, inlinedAt: !11082)
!11135 = !DILocalVariable(name: "self", scope: !11136, file: !7859, line: 224, type: !326, align: 8)
!11136 = !DILexicalBlockFile(scope: !11137, file: !7859, discriminator: 0)
!11137 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11138)
!11138 = !{!11135}
!11139 = !DILocation(line: 224, column: 56, scope: !11136, inlinedAt: !11140)
!11140 = !DILocation(line: 553, column: 9, scope: !11141, inlinedAt: !11147)
!11141 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h853a0299440f7314E", scope: !7489, file: !646, line: 552, type: !11142, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11144)
!11142 = !DISubroutineType(types: !11143)
!11143 = !{!649, !7489}
!11144 = !{!11145}
!11145 = !DILocalVariable(name: "self", scope: !11146, file: !7859, line: 224, type: !7489, align: 8)
!11146 = !DILexicalBlockFile(scope: !11141, file: !7859, discriminator: 0)
!11147 = !DILocation(line: 224, column: 56, scope: !10994)
!11148 = !DILocalVariable(name: "runtime", scope: !11149, file: !7859, line: 224, type: !10410, align: 8)
!11149 = !DILexicalBlockFile(scope: !11150, file: !7859, discriminator: 0)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !386, line: 2336, column: 13)
!11151 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hae1545660843a279E", scope: !5988, file: !386, line: 2458, type: !10403, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11152)
!11152 = !{!11153, !11155, !11156, !11148}
!11153 = !DILocalVariable(name: "src", scope: !11154, file: !7859, line: 224, type: !329, align: 8)
!11154 = !DILexicalBlockFile(scope: !11151, file: !7859, discriminator: 0)
!11155 = !DILocalVariable(name: "dst", scope: !11154, file: !7859, line: 224, type: !649, align: 8)
!11156 = !DILocalVariable(name: "count", scope: !11154, file: !7859, line: 224, type: !9, align: 8)
!11157 = !DILocation(line: 224, column: 17, scope: !11149, inlinedAt: !11158)
!11158 = !DILocation(line: 224, column: 17, scope: !10994)
!11159 = !DILocation(line: 198, column: 15, scope: !10969)
!11160 = !DILocalVariable(name: "self", scope: !11161, file: !7859, line: 198, type: !7521, align: 8)
!11161 = !DILexicalBlockFile(scope: !11162, file: !7859, discriminator: 0)
!11162 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hbd42faa40e199470E", scope: !1779, file: !5505, line: 120, type: !10762, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11163)
!11163 = !{!11160}
!11164 = !DILocation(line: 198, column: 15, scope: !11161, inlinedAt: !11159)
!11165 = !DILocation(line: 198, column: 9, scope: !10969)
!11166 = !DILocation(line: 199, column: 34, scope: !10969)
!11167 = !DILocation(line: 199, column: 18, scope: !10969)
!11168 = !DILocation(line: 203, column: 25, scope: !11092, inlinedAt: !11093)
!11169 = !DILocalVariable(name: "n", scope: !11170, file: !7859, line: 203, type: !9, align: 8)
!11170 = !DILexicalBlockFile(scope: !11171, file: !7859, discriminator: 0)
!11171 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11172)
!11172 = !{!11169, !11173}
!11173 = !DILocalVariable(name: "runtime", scope: !11174, file: !7859, line: 203, type: !5569, align: 8)
!11174 = !DILexicalBlockFile(scope: !11175, file: !7859, discriminator: 0)
!11175 = distinct !DILexicalBlock(scope: !11171, file: !386, line: 2336, column: 13)
!11176 = !DILocation(line: 203, column: 25, scope: !11170, inlinedAt: !11177)
!11177 = !DILocation(line: 41, column: 18, scope: !11096, inlinedAt: !11088)
!11178 = !DILocation(line: 203, column: 47, scope: !11108, inlinedAt: !11109)
!11179 = !DILocalVariable(name: "n", scope: !11180, file: !7859, line: 203, type: !9, align: 8)
!11180 = !DILexicalBlockFile(scope: !11181, file: !7859, discriminator: 0)
!11181 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11182)
!11182 = !{!11179, !11183}
!11183 = !DILocalVariable(name: "runtime", scope: !11184, file: !7859, line: 203, type: !5569, align: 8)
!11184 = !DILexicalBlockFile(scope: !11185, file: !7859, discriminator: 0)
!11185 = distinct !DILexicalBlock(scope: !11181, file: !386, line: 2336, column: 13)
!11186 = !DILocation(line: 203, column: 47, scope: !11180, inlinedAt: !11187)
!11187 = !DILocation(line: 41, column: 18, scope: !11112, inlinedAt: !11104)
!11188 = !DILocation(line: 222, column: 13, scope: !10969)
!11189 = !DILocation(line: 222, column: 13, scope: !10992)
!11190 = !DILocation(line: 223, column: 47, scope: !10992)
!11191 = !DILocation(line: 203, column: 13, scope: !10969)
!11192 = !DILocation(line: 203, column: 13, scope: !10979)
!11193 = !DILocation(line: 204, column: 32, scope: !10979)
!11194 = !DILocalVariable(name: "self", scope: !11195, file: !7859, line: 204, type: !7521, align: 8)
!11195 = !DILexicalBlockFile(scope: !11196, file: !7859, discriminator: 0)
!11196 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hbd42faa40e199470E", scope: !1779, file: !5505, line: 120, type: !10762, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11197)
!11197 = !{!11194}
!11198 = !DILocation(line: 204, column: 32, scope: !11195, inlinedAt: !11193)
!11199 = !DILocation(line: 204, column: 21, scope: !10982)
!11200 = !DILocation(line: 207, column: 48, scope: !10982)
!11201 = !DILocalVariable(name: "self", scope: !11202, file: !7859, line: 207, type: !7521, align: 8)
!11202 = !DILexicalBlockFile(scope: !11203, file: !7859, discriminator: 0)
!11203 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hbd42faa40e199470E", scope: !1779, file: !5505, line: 120, type: !10762, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11204)
!11204 = !{!11201}
!11205 = !DILocation(line: 207, column: 48, scope: !11202, inlinedAt: !11200)
!11206 = !DILocation(line: 207, column: 36, scope: !10982)
!11207 = !DILocation(line: 207, column: 17, scope: !10982)
!11208 = !DILocation(line: 209, column: 39, scope: !10982)
!11209 = !DILocalVariable(name: "self", scope: !11210, file: !7859, line: 209, type: !326, align: 8)
!11210 = !DILexicalBlockFile(scope: !11211, file: !7859, discriminator: 0)
!11211 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11212)
!11212 = !{!11209}
!11213 = !DILocation(line: 209, column: 39, scope: !11210, inlinedAt: !11208)
!11214 = !DILocation(line: 209, column: 53, scope: !10982)
!11215 = !DILocation(line: 209, column: 65, scope: !10982)
!11216 = !DILocalVariable(name: "self", scope: !11217, file: !7859, line: 209, type: !7521, align: 8)
!11217 = !DILexicalBlockFile(scope: !11218, file: !7859, discriminator: 0)
!11218 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hbd42faa40e199470E", scope: !1779, file: !5505, line: 120, type: !10762, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11219)
!11219 = !{!11216}
!11220 = !DILocation(line: 209, column: 31, scope: !11217, inlinedAt: !11221)
!11221 = !DILocation(line: 132, column: 34, scope: !11005, inlinedAt: !11012)
!11222 = !DILocation(line: 209, column: 31, scope: !11124, inlinedAt: !11125)
!11223 = !DILocalVariable(name: "n", scope: !11224, file: !7859, line: 209, type: !9, align: 8)
!11224 = !DILexicalBlockFile(scope: !11225, file: !7859, discriminator: 0)
!11225 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11226)
!11226 = !{!11223, !11227}
!11227 = !DILocalVariable(name: "runtime", scope: !11228, file: !7859, line: 209, type: !5569, align: 8)
!11228 = !DILexicalBlockFile(scope: !11229, file: !7859, discriminator: 0)
!11229 = distinct !DILexicalBlock(scope: !11225, file: !386, line: 2336, column: 13)
!11230 = !DILocation(line: 209, column: 31, scope: !11224, inlinedAt: !11231)
!11231 = !DILocation(line: 41, column: 18, scope: !11128, inlinedAt: !11120)
!11232 = !DILocation(line: 209, column: 21, scope: !10984)
!11233 = !DILocation(line: 210, column: 27, scope: !11031, inlinedAt: !11024)
!11234 = !DILocation(line: 210, column: 27, scope: !11018, inlinedAt: !11024)
!11235 = !DILocation(line: 210, column: 27, scope: !10990)
!11236 = !DILocation(line: 210, column: 21, scope: !10986)
!11237 = !DILocation(line: 211, column: 20, scope: !10986)
!11238 = !DILocation(line: 1, column: 1, scope: !11239)
!11239 = !DILexicalBlockFile(scope: !10969, file: !4178, discriminator: 0)
!11240 = !DILocation(line: 229, column: 6, scope: !10969)
!11241 = !DILocation(line: 214, column: 50, scope: !10986)
!11242 = !DILocalVariable(name: "data", scope: !11243, file: !7859, line: 214, type: !326, align: 8)
!11243 = !DILexicalBlockFile(scope: !11244, file: !7859, discriminator: 0)
!11244 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h1de9854a0e3f4cc4E", scope: !7489, file: !646, line: 487, type: !10667, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11245)
!11245 = !{!11242, !11246}
!11246 = !DILocalVariable(name: "len", scope: !11243, file: !7859, line: 214, type: !9, align: 8)
!11247 = !DILocation(line: 214, column: 20, scope: !11243, inlinedAt: !11248)
!11248 = !DILocation(line: 214, column: 20, scope: !10986)
!11249 = !DILocation(line: 214, column: 55, scope: !10986)
!11250 = !DILocalVariable(name: "self", scope: !11251, file: !7859, line: 214, type: !326, align: 8)
!11251 = !DILexicalBlockFile(scope: !11252, file: !7859, discriminator: 0)
!11252 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11253)
!11253 = !{!11250}
!11254 = !DILocation(line: 214, column: 20, scope: !11251, inlinedAt: !11255)
!11255 = !DILocation(line: 489, column: 70, scope: !11244, inlinedAt: !11248)
!11256 = !DILocalVariable(name: "data", scope: !11257, file: !7859, line: 214, type: !649, align: 8)
!11257 = !DILexicalBlockFile(scope: !11258, file: !7859, discriminator: 0)
!11258 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17he9d89cd098aed2e1E", scope: !43, file: !399, line: 727, type: !948, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11259)
!11259 = !{!11256, !11260}
!11260 = !DILocalVariable(name: "len", scope: !11257, file: !7859, line: 214, type: !9, align: 8)
!11261 = !DILocation(line: 214, column: 20, scope: !11257, inlinedAt: !11262)
!11262 = !DILocation(line: 489, column: 38, scope: !11244, inlinedAt: !11248)
!11263 = !DILocalVariable(name: "self", scope: !11264, file: !7859, line: 214, type: !649, align: 8)
!11264 = !DILexicalBlockFile(scope: !11265, file: !7859, discriminator: 0)
!11265 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hef927cab6f2be5beE", scope: !657, file: !656, line: 45, type: !958, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !11266)
!11266 = !{!11263}
!11267 = !DILocation(line: 214, column: 20, scope: !11264, inlinedAt: !11268)
!11268 = !DILocation(line: 728, column: 24, scope: !11258, inlinedAt: !11262)
!11269 = !DILocalVariable(name: "data_address", scope: !11270, file: !7859, line: 214, type: !960, align: 8)
!11270 = !DILexicalBlockFile(scope: !11271, file: !7859, discriminator: 0)
!11271 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb43c8ca59c3ce57eE", scope: !427, file: !426, line: 127, type: !967, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11272)
!11272 = !{!11269, !11273}
!11273 = !DILocalVariable(name: "metadata", scope: !11270, file: !7859, line: 214, type: !9, align: 8)
!11274 = !DILocation(line: 214, column: 20, scope: !11270, inlinedAt: !11275)
!11275 = !DILocation(line: 728, column: 5, scope: !11258, inlinedAt: !11262)
!11276 = !DILocalVariable(name: "ptr", scope: !11277, file: !7859, line: 214, type: !898, align: 8)
!11277 = !DILexicalBlockFile(scope: !11278, file: !7859, discriminator: 0)
!11278 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h09ab6dbcb2b4f3f5E", scope: !7489, file: !646, line: 196, type: !10927, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11279)
!11279 = !{!11276}
!11280 = !DILocation(line: 214, column: 20, scope: !11277, inlinedAt: !11281)
!11281 = !DILocation(line: 489, column: 18, scope: !11244, inlinedAt: !11248)
!11282 = !DILocation(line: 214, column: 17, scope: !10986)
!11283 = !DILocation(line: 215, column: 13, scope: !10969)
!11284 = !DILocation(line: 212, column: 21, scope: !10986)
!11285 = !DILocalVariable(name: "self", scope: !11286, file: !7859, line: 212, type: !649, align: 8)
!11286 = !DILexicalBlockFile(scope: !11287, file: !7859, discriminator: 0)
!11287 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce9ae179be503a7aE", scope: !657, file: !656, line: 985, type: !930, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11288)
!11288 = !{!11285, !11289}
!11289 = !DILocalVariable(name: "count", scope: !11286, file: !7859, line: 212, type: !9, align: 8)
!11290 = !DILocation(line: 212, column: 21, scope: !11286, inlinedAt: !11284)
!11291 = !DILocation(line: 212, column: 33, scope: !10986)
!11292 = !DILocalVariable(name: "self", scope: !11293, file: !7859, line: 212, type: !649, align: 8)
!11293 = !DILexicalBlockFile(scope: !11294, file: !7859, discriminator: 0)
!11294 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h7a151f4cf998d469E", scope: !657, file: !656, line: 465, type: !939, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11295)
!11295 = !{!11292, !11296}
!11296 = !DILocalVariable(name: "count", scope: !11293, file: !7859, line: 212, type: !868, align: 8)
!11297 = !DILocation(line: 212, column: 21, scope: !11293, inlinedAt: !11298)
!11298 = !DILocation(line: 990, column: 18, scope: !11287, inlinedAt: !11284)
!11299 = !DILocalVariable(name: "self", scope: !11300, file: !7859, line: 212, type: !649, align: 8)
!11300 = !DILexicalBlockFile(scope: !11301, file: !7859, discriminator: 0)
!11301 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17had873b3ce0213d9bE", scope: !657, file: !656, line: 1441, type: !11302, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11304)
!11302 = !DISubroutineType(types: !11303)
!11303 = !{null, !649, !70, !9}
!11304 = !{!11299, !11305, !11306}
!11305 = !DILocalVariable(name: "val", scope: !11300, file: !7859, line: 212, type: !70, align: 1)
!11306 = !DILocalVariable(name: "count", scope: !11300, file: !7859, line: 212, type: !9, align: 8)
!11307 = !DILocation(line: 212, column: 21, scope: !11300, inlinedAt: !11284)
!11308 = !DILocation(line: 212, column: 58, scope: !10986)
!11309 = !DILocalVariable(name: "dst", scope: !11310, file: !7859, line: 212, type: !649, align: 8)
!11310 = !DILexicalBlockFile(scope: !11311, file: !7859, discriminator: 0)
!11311 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17hca5f6cb53bbe9a69E", scope: !5988, file: !386, line: 2613, type: !11302, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11312)
!11312 = !{!11309, !11313, !11314, !11315}
!11313 = !DILocalVariable(name: "val", scope: !11310, file: !7859, line: 212, type: !70, align: 1)
!11314 = !DILocalVariable(name: "count", scope: !11310, file: !7859, line: 212, type: !9, align: 8)
!11315 = !DILocalVariable(name: "runtime", scope: !11316, file: !7859, line: 212, type: !11318, align: 8)
!11316 = !DILexicalBlockFile(scope: !11317, file: !7859, discriminator: 0)
!11317 = distinct !DILexicalBlock(scope: !11311, file: !386, line: 2336, column: 13)
!11318 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !11319, file: !2, size: 64, align: 64, elements: !11320, templateParams: !23, identifier: "6002da543977e8e7318dc1c6e6a51af")
!11319 = !DINamespace(name: "write_bytes", scope: !5988)
!11320 = !{!11321}
!11321 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !11318, file: !2, baseType: !10414, size: 64, align: 64)
!11322 = !DILocation(line: 212, column: 21, scope: !11310, inlinedAt: !11323)
!11323 = !DILocation(line: 1446, column: 18, scope: !11301, inlinedAt: !11284)
!11324 = !DILocation(line: 211, column: 17, scope: !10986)
!11325 = !DILocation(line: 223, column: 31, scope: !11066, inlinedAt: !11072)
!11326 = !DILocation(line: 223, column: 31, scope: !10998)
!11327 = !DILocation(line: 223, column: 21, scope: !10994)
!11328 = !DILocation(line: 224, column: 42, scope: !10994)
!11329 = !DILocalVariable(name: "self", scope: !11330, file: !7859, line: 224, type: !326, align: 8)
!11330 = !DILexicalBlockFile(scope: !11331, file: !7859, discriminator: 0)
!11331 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11332)
!11332 = !{!11329}
!11333 = !DILocation(line: 224, column: 42, scope: !11330, inlinedAt: !11328)
!11334 = !DILocation(line: 224, column: 17, scope: !11154, inlinedAt: !11158)
!11335 = !DILocation(line: 224, column: 56, scope: !11146, inlinedAt: !11147)
!11336 = !DILocalVariable(name: "self", scope: !11337, file: !7859, line: 224, type: !7489, align: 8)
!11337 = !DILexicalBlockFile(scope: !11338, file: !7859, discriminator: 0)
!11338 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h45e681aeabace12dE", scope: !7489, file: !646, line: 532, type: !11339, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11341)
!11339 = !DISubroutineType(types: !11340)
!11340 = !{!326, !7489}
!11341 = !{!11336}
!11342 = !DILocation(line: 224, column: 56, scope: !11337, inlinedAt: !11140)
!11343 = !DILocalVariable(name: "self", scope: !11344, file: !7859, line: 224, type: !7489, align: 8)
!11344 = !DILexicalBlockFile(scope: !11345, file: !7859, discriminator: 0)
!11345 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h078a6a703e08f315E", scope: !7489, file: !646, line: 330, type: !11346, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11348)
!11346 = !DISubroutineType(types: !11347)
!11347 = !{!898, !7489}
!11348 = !{!11343}
!11349 = !DILocation(line: 224, column: 56, scope: !11344, inlinedAt: !11350)
!11350 = !DILocation(line: 534, column: 41, scope: !11338, inlinedAt: !11140)
!11351 = !DILocalVariable(name: "self", scope: !11352, file: !7859, line: 224, type: !898, align: 8)
!11352 = !DILexicalBlockFile(scope: !11353, file: !7859, discriminator: 0)
!11353 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hdbeffb196cf668a7E", scope: !922, file: !656, line: 1778, type: !923, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11354)
!11354 = !{!11351}
!11355 = !DILocation(line: 224, column: 56, scope: !11352, inlinedAt: !11350)
!11356 = !DILocalVariable(name: "ptr", scope: !11357, file: !7859, line: 224, type: !649, align: 8)
!11357 = !DILexicalBlockFile(scope: !11358, file: !7859, discriminator: 0)
!11358 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11359)
!11359 = !{!11356}
!11360 = !DILocation(line: 224, column: 56, scope: !11357, inlinedAt: !11361)
!11361 = !DILocation(line: 534, column: 18, scope: !11338, inlinedAt: !11140)
!11362 = !DILocation(line: 224, column: 78, scope: !10994)
!11363 = !DILocation(line: 225, column: 38, scope: !10994)
!11364 = !DILocation(line: 225, column: 17, scope: !10994)
!11365 = !DILocation(line: 226, column: 17, scope: !10994)
!11366 = !DILocation(line: 227, column: 13, scope: !10969)
!11367 = !DILocation(line: 199, column: 52, scope: !10969)
!11368 = distinct !DISubprogram(name: "box_free<[u32], alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17h4b1fc673c5cb9615E", scope: !337, file: !7859, line: 340, type: !11369, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11392, retainedNodes: !11383)
!11369 = !DISubroutineType(types: !11370)
!11370 = !{null, !11371, !336}
!11371 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u32]>", scope: !323, file: !2, size: 128, align: 64, elements: !11372, templateParams: !2678, identifier: "e4d7f3677474468a431d7be8243e2012")
!11372 = !{!11373, !11381}
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11371, file: !2, baseType: !11374, size: 128, align: 64)
!11374 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u32]>", scope: !42, file: !2, size: 128, align: 64, elements: !11375, templateParams: !2678, identifier: "af48cf4b0e4c7759d4e6ebddfd8dbc5a")
!11375 = !{!11376}
!11376 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11374, file: !2, baseType: !11377, size: 128, align: 64)
!11377 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u32]", file: !2, size: 128, align: 64, elements: !11378, templateParams: !23, identifier: "e33f23ed2fbada25e0d97da9bc9cd540")
!11378 = !{!11379, !11380}
!11379 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !11377, file: !2, baseType: !2727, size: 64, align: 64)
!11380 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11377, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !11371, file: !2, baseType: !11382, align: 8)
!11382 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u32]>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !2678, identifier: "4cdcfcf5962e2982ccbb910bd81ef360")
!11383 = !{!11384, !11385, !11386, !11388, !11390}
!11384 = !DILocalVariable(name: "ptr", arg: 1, scope: !11368, file: !7859, line: 341, type: !11371)
!11385 = !DILocalVariable(name: "alloc", arg: 2, scope: !11368, file: !7859, line: 342, type: !336)
!11386 = !DILocalVariable(name: "size", scope: !11387, file: !7859, line: 345, type: !9, align: 8)
!11387 = distinct !DILexicalBlock(scope: !11368, file: !7859, line: 345, column: 9)
!11388 = !DILocalVariable(name: "align", scope: !11389, file: !7859, line: 346, type: !9, align: 8)
!11389 = distinct !DILexicalBlock(scope: !11387, file: !7859, line: 346, column: 9)
!11390 = !DILocalVariable(name: "layout", scope: !11391, file: !7859, line: 347, type: !1779, align: 8)
!11391 = distinct !DILexicalBlock(scope: !11389, file: !7859, line: 347, column: 9)
!11392 = !{!2679, !339}
!11393 = !DILocation(line: 341, column: 5, scope: !11368)
!11394 = !DILocation(line: 342, column: 5, scope: !11368)
!11395 = !DILocation(line: 347, column: 13, scope: !11391)
!11396 = !DILocalVariable(name: "unique", scope: !11397, file: !7859, line: 348, type: !322, align: 8)
!11397 = !DILexicalBlockFile(scope: !11398, file: !7859, discriminator: 0)
!11398 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h235423854f80c95bE", scope: !1733, file: !646, line: 770, type: !1734, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11399)
!11399 = !{!11396}
!11400 = !DILocation(line: 348, column: 26, scope: !11397, inlinedAt: !11401)
!11401 = !DILocation(line: 348, column: 26, scope: !11391)
!11402 = !DILocalVariable(name: "pointer", scope: !11403, file: !7859, line: 348, type: !326, align: 8)
!11403 = !DILexicalBlockFile(scope: !11404, file: !7859, discriminator: 0)
!11404 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11408)
!11405 = !DINamespace(name: "{impl#11}", scope: !323)
!11406 = !DISubroutineType(types: !11407)
!11407 = !{!322, !326}
!11408 = !{!11402}
!11409 = !DILocation(line: 348, column: 37, scope: !11403, inlinedAt: !11410)
!11410 = !DILocation(line: 137, column: 9, scope: !11411, inlinedAt: !11418)
!11411 = distinct !DISubprogram(name: "cast<[u32], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h3dffd0abe09dec71E", scope: !11371, file: !1743, line: 136, type: !11412, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11417, retainedNodes: !11414)
!11412 = !DISubroutineType(types: !11413)
!11413 = !{!322, !11371}
!11414 = !{!11415}
!11415 = !DILocalVariable(name: "self", scope: !11416, file: !7859, line: 348, type: !11371, align: 8)
!11416 = !DILexicalBlockFile(scope: !11411, file: !7859, discriminator: 0)
!11417 = !{!2679, !2018}
!11418 = !DILocation(line: 348, column: 37, scope: !11391)
!11419 = !DILocation(line: 345, column: 32, scope: !11368)
!11420 = !DILocalVariable(name: "self", scope: !11421, file: !7859, line: 345, type: !11429, align: 8)
!11421 = !DILexicalBlockFile(scope: !11422, file: !7859, discriminator: 0)
!11422 = distinct !DISubprogram(name: "as_ref<[u32]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hcf58e704dbfb17beE", scope: !11371, file: !1743, line: 114, type: !11423, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !11430)
!11423 = !DISubroutineType(types: !11424)
!11424 = !{!11425, !11429}
!11425 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u32]", file: !2, size: 128, align: 64, elements: !11426, templateParams: !23, identifier: "ceabaa3234527e8fd9f4b155390e057f")
!11426 = !{!11427, !11428}
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !11425, file: !2, baseType: !2727, size: 64, align: 64)
!11428 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11425, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!11429 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<[u32]>", baseType: !11371, size: 64, align: 64, dwarfAddressSpace: 0)
!11430 = !{!11420}
!11431 = !DILocation(line: 345, column: 32, scope: !11421, inlinedAt: !11419)
!11432 = !DILocalVariable(name: "self", scope: !11433, file: !7859, line: 345, type: !11437, align: 8)
!11433 = !DILexicalBlockFile(scope: !11434, file: !7859, discriminator: 0)
!11434 = distinct !DISubprogram(name: "as_ref<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hf9bcca1cd4186352E", scope: !11374, file: !646, line: 378, type: !11435, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !11438)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!11425, !11437}
!11437 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u32]>", baseType: !11374, size: 64, align: 64, dwarfAddressSpace: 0)
!11438 = !{!11432}
!11439 = !DILocation(line: 345, column: 32, scope: !11433, inlinedAt: !11440)
!11440 = !DILocation(line: 117, column: 18, scope: !11422, inlinedAt: !11419)
!11441 = !DILocalVariable(name: "self", scope: !11442, file: !7859, line: 345, type: !11374, align: 8)
!11442 = !DILexicalBlockFile(scope: !11443, file: !7859, discriminator: 0)
!11443 = distinct !DISubprogram(name: "as_ptr<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h91bf2ebdaa2763daE", scope: !11374, file: !646, line: 330, type: !11444, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !11450)
!11444 = !DISubroutineType(types: !11445)
!11445 = !{!11446, !11374}
!11446 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u32]", file: !2, size: 128, align: 64, elements: !11447, templateParams: !23, identifier: "feb60d61d2db6da74cd74d46fb7ee4a0")
!11447 = !{!11448, !11449}
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !11446, file: !2, baseType: !2727, size: 64, align: 64)
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11446, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!11450 = !{!11441}
!11451 = !DILocation(line: 345, column: 32, scope: !11442, inlinedAt: !11452)
!11452 = !DILocation(line: 381, column: 20, scope: !11434, inlinedAt: !11440)
!11453 = !DILocation(line: 345, column: 20, scope: !11368)
!11454 = !DILocation(line: 345, column: 13, scope: !11387)
!11455 = !DILocation(line: 346, column: 38, scope: !11387)
!11456 = !DILocalVariable(name: "self", scope: !11457, file: !7859, line: 346, type: !11429, align: 8)
!11457 = !DILexicalBlockFile(scope: !11458, file: !7859, discriminator: 0)
!11458 = distinct !DISubprogram(name: "as_ref<[u32]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hcf58e704dbfb17beE", scope: !11371, file: !1743, line: 114, type: !11423, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !11459)
!11459 = !{!11456}
!11460 = !DILocation(line: 346, column: 38, scope: !11457, inlinedAt: !11455)
!11461 = !DILocalVariable(name: "self", scope: !11462, file: !7859, line: 346, type: !11437, align: 8)
!11462 = !DILexicalBlockFile(scope: !11463, file: !7859, discriminator: 0)
!11463 = distinct !DISubprogram(name: "as_ref<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hf9bcca1cd4186352E", scope: !11374, file: !646, line: 378, type: !11435, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !11464)
!11464 = !{!11461}
!11465 = !DILocation(line: 346, column: 38, scope: !11462, inlinedAt: !11466)
!11466 = !DILocation(line: 117, column: 18, scope: !11458, inlinedAt: !11455)
!11467 = !DILocalVariable(name: "self", scope: !11468, file: !7859, line: 346, type: !11374, align: 8)
!11468 = !DILexicalBlockFile(scope: !11469, file: !7859, discriminator: 0)
!11469 = distinct !DISubprogram(name: "as_ptr<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h91bf2ebdaa2763daE", scope: !11374, file: !646, line: 330, type: !11444, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !11470)
!11470 = !{!11467}
!11471 = !DILocation(line: 346, column: 38, scope: !11468, inlinedAt: !11472)
!11472 = !DILocation(line: 381, column: 20, scope: !11463, inlinedAt: !11466)
!11473 = !DILocation(line: 346, column: 21, scope: !11387)
!11474 = !DILocation(line: 346, column: 13, scope: !11389)
!11475 = !DILocation(line: 347, column: 56, scope: !11389)
!11476 = !DILocalVariable(name: "size", scope: !11477, file: !7859, line: 347, type: !9, align: 8)
!11477 = !DILexicalBlockFile(scope: !11478, file: !7859, discriminator: 0)
!11478 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h985d01966f78b156E", scope: !1779, file: !5505, line: 110, type: !8118, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11479)
!11479 = !{!11476, !11480}
!11480 = !DILocalVariable(name: "align", scope: !11477, file: !7859, line: 347, type: !9, align: 8)
!11481 = !DILocation(line: 347, column: 22, scope: !11477, inlinedAt: !11482)
!11482 = !DILocation(line: 347, column: 22, scope: !11389)
!11483 = !DILocation(line: 347, column: 62, scope: !11389)
!11484 = !DILocalVariable(name: "align", scope: !11485, file: !7859, line: 347, type: !9, align: 8)
!11485 = !DILexicalBlockFile(scope: !11486, file: !7859, discriminator: 0)
!11486 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11487)
!11487 = !{!11484, !11488}
!11488 = !DILocalVariable(name: "runtime", scope: !11489, file: !7859, line: 347, type: !5701, align: 8)
!11489 = !DILexicalBlockFile(scope: !11490, file: !7859, discriminator: 0)
!11490 = distinct !DILexicalBlock(scope: !11486, file: !386, line: 2336, column: 13)
!11491 = !DILocation(line: 347, column: 22, scope: !11485, inlinedAt: !11492)
!11492 = !DILocation(line: 112, column: 40, scope: !11478, inlinedAt: !11482)
!11493 = !DILocation(line: 348, column: 37, scope: !11416, inlinedAt: !11418)
!11494 = !DILocalVariable(name: "self", scope: !11495, file: !7859, line: 348, type: !11374, align: 8)
!11495 = !DILexicalBlockFile(scope: !11496, file: !7859, discriminator: 0)
!11496 = distinct !DISubprogram(name: "cast<[u32], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd3ff2982e23f523dE", scope: !11374, file: !646, line: 453, type: !11497, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11417, retainedNodes: !11499)
!11497 = !DISubroutineType(types: !11498)
!11498 = !{!326, !11374}
!11499 = !{!11494}
!11500 = !DILocation(line: 348, column: 37, scope: !11495, inlinedAt: !11501)
!11501 = !DILocation(line: 137, column: 22, scope: !11411, inlinedAt: !11418)
!11502 = !DILocalVariable(name: "self", scope: !11503, file: !7859, line: 348, type: !11374, align: 8)
!11503 = !DILexicalBlockFile(scope: !11504, file: !7859, discriminator: 0)
!11504 = distinct !DISubprogram(name: "as_ptr<[u32]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h91bf2ebdaa2763daE", scope: !11374, file: !646, line: 330, type: !11444, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2678, retainedNodes: !11505)
!11505 = !{!11502}
!11506 = !DILocation(line: 348, column: 37, scope: !11503, inlinedAt: !11507)
!11507 = !DILocation(line: 455, column: 41, scope: !11496, inlinedAt: !11501)
!11508 = !DILocalVariable(name: "ptr", scope: !11509, file: !7859, line: 348, type: !649, align: 8)
!11509 = !DILexicalBlockFile(scope: !11510, file: !7859, discriminator: 0)
!11510 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11511)
!11511 = !{!11508}
!11512 = !DILocation(line: 348, column: 37, scope: !11509, inlinedAt: !11513)
!11513 = !DILocation(line: 455, column: 18, scope: !11496, inlinedAt: !11501)
!11514 = !DILocalVariable(name: "self", scope: !11515, file: !7859, line: 348, type: !322, align: 8)
!11515 = !DILexicalBlockFile(scope: !11516, file: !7859, discriminator: 0)
!11516 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha4a6fb266c1c2a9eE", scope: !322, file: !1743, line: 103, type: !1744, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11517)
!11517 = !{!11514}
!11518 = !DILocation(line: 348, column: 26, scope: !11515, inlinedAt: !11519)
!11519 = !DILocation(line: 773, column: 41, scope: !11398, inlinedAt: !11401)
!11520 = !DILocalVariable(name: "self", scope: !11521, file: !7859, line: 348, type: !326, align: 8)
!11521 = !DILexicalBlockFile(scope: !11522, file: !7859, discriminator: 0)
!11522 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11523)
!11523 = !{!11520}
!11524 = !DILocation(line: 348, column: 26, scope: !11521, inlinedAt: !11525)
!11525 = !DILocation(line: 104, column: 9, scope: !11516, inlinedAt: !11519)
!11526 = !DILocalVariable(name: "ptr", scope: !11527, file: !7859, line: 348, type: !649, align: 8)
!11527 = !DILexicalBlockFile(scope: !11528, file: !7859, discriminator: 0)
!11528 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11529)
!11529 = !{!11526}
!11530 = !DILocation(line: 348, column: 26, scope: !11527, inlinedAt: !11531)
!11531 = !DILocation(line: 773, column: 18, scope: !11398, inlinedAt: !11401)
!11532 = !DILocation(line: 348, column: 50, scope: !11391)
!11533 = !DILocation(line: 348, column: 9, scope: !11391)
!11534 = !DILocation(line: 350, column: 1, scope: !11368)
!11535 = !DILocation(line: 340, column: 1, scope: !11368)
!11536 = !DILocation(line: 350, column: 2, scope: !11368)
!11537 = distinct !DISubprogram(name: "box_free<(dyn std::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17h703b187b3615a7b3E", scope: !337, file: !7859, line: 340, type: !11538, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11561, retainedNodes: !11552)
!11538 = !DISubroutineType(types: !11539)
!11539 = !{null, !11540, !336}
!11540 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !323, file: !2, size: 128, align: 64, elements: !11541, templateParams: !4045, identifier: "63fff1a9ae0f9cab44e4779ad80822b")
!11541 = !{!11542, !11550}
!11542 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11540, file: !2, baseType: !11543, size: 128, align: 64)
!11543 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !42, file: !2, size: 128, align: 64, elements: !11544, templateParams: !4045, identifier: "95cfe13953bd00298c7689aed1482ec")
!11544 = !{!11545}
!11545 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11543, file: !2, baseType: !11546, size: 128, align: 64)
!11546 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const (dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !11547, templateParams: !23, identifier: "21116f06b2f8717ed9296c860aef0d85")
!11547 = !{!11548, !11549}
!11548 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11546, file: !2, baseType: !117, size: 64, align: 64)
!11549 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11546, file: !2, baseType: !120, size: 64, align: 64, offset: 64)
!11550 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !11540, file: !2, baseType: !11551, align: 8)
!11551 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !4045, identifier: "3639c19c90b91409f3c0ea8292b2817d")
!11552 = !{!11553, !11554, !11555, !11557, !11559}
!11553 = !DILocalVariable(name: "ptr", arg: 1, scope: !11537, file: !7859, line: 341, type: !11540)
!11554 = !DILocalVariable(name: "alloc", arg: 2, scope: !11537, file: !7859, line: 342, type: !336)
!11555 = !DILocalVariable(name: "size", scope: !11556, file: !7859, line: 345, type: !9, align: 8)
!11556 = distinct !DILexicalBlock(scope: !11537, file: !7859, line: 345, column: 9)
!11557 = !DILocalVariable(name: "align", scope: !11558, file: !7859, line: 346, type: !9, align: 8)
!11558 = distinct !DILexicalBlock(scope: !11556, file: !7859, line: 346, column: 9)
!11559 = !DILocalVariable(name: "layout", scope: !11560, file: !7859, line: 347, type: !1779, align: 8)
!11560 = distinct !DILexicalBlock(scope: !11558, file: !7859, line: 347, column: 9)
!11561 = !{!4046, !339}
!11562 = !DILocation(line: 341, column: 5, scope: !11537)
!11563 = !DILocation(line: 342, column: 5, scope: !11537)
!11564 = !DILocation(line: 347, column: 13, scope: !11560)
!11565 = !DILocalVariable(name: "unique", scope: !11566, file: !7859, line: 348, type: !322, align: 8)
!11566 = !DILexicalBlockFile(scope: !11567, file: !7859, discriminator: 0)
!11567 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h235423854f80c95bE", scope: !1733, file: !646, line: 770, type: !1734, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11568)
!11568 = !{!11565}
!11569 = !DILocation(line: 348, column: 26, scope: !11566, inlinedAt: !11570)
!11570 = !DILocation(line: 348, column: 26, scope: !11560)
!11571 = !DILocalVariable(name: "pointer", scope: !11572, file: !7859, line: 348, type: !326, align: 8)
!11572 = !DILexicalBlockFile(scope: !11573, file: !7859, discriminator: 0)
!11573 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11574)
!11574 = !{!11571}
!11575 = !DILocation(line: 348, column: 37, scope: !11572, inlinedAt: !11576)
!11576 = !DILocation(line: 137, column: 9, scope: !11577, inlinedAt: !11584)
!11577 = distinct !DISubprogram(name: "cast<(dyn std::error::Error + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h72035cc973f52549E", scope: !11540, file: !1743, line: 136, type: !11578, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11583, retainedNodes: !11580)
!11578 = !DISubroutineType(types: !11579)
!11579 = !{!322, !11540}
!11580 = !{!11581}
!11581 = !DILocalVariable(name: "self", scope: !11582, file: !7859, line: 348, type: !11540, align: 8)
!11582 = !DILexicalBlockFile(scope: !11577, file: !7859, discriminator: 0)
!11583 = !{!4046, !2018}
!11584 = !DILocation(line: 348, column: 37, scope: !11560)
!11585 = !DILocation(line: 345, column: 32, scope: !11537)
!11586 = !DILocalVariable(name: "self", scope: !11587, file: !7859, line: 345, type: !11595, align: 8)
!11587 = !DILexicalBlockFile(scope: !11588, file: !7859, discriminator: 0)
!11588 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h31f2cd2fd98764feE", scope: !11540, file: !1743, line: 114, type: !11589, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4045, retainedNodes: !11596)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{!11591, !11595}
!11591 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn std::error::Error + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !11592, templateParams: !23, identifier: "acb9b04c18bec29a64f42cc13969440")
!11592 = !{!11593, !11594}
!11593 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11591, file: !2, baseType: !117, size: 64, align: 64)
!11594 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11591, file: !2, baseType: !120, size: 64, align: 64, offset: 64)
!11595 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", baseType: !11540, size: 64, align: 64, dwarfAddressSpace: 0)
!11596 = !{!11586}
!11597 = !DILocation(line: 345, column: 32, scope: !11587, inlinedAt: !11585)
!11598 = !DILocalVariable(name: "self", scope: !11599, file: !7859, line: 345, type: !11603, align: 8)
!11599 = !DILexicalBlockFile(scope: !11600, file: !7859, discriminator: 0)
!11600 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hda463898af179c3dE", scope: !11543, file: !646, line: 378, type: !11601, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4045, retainedNodes: !11604)
!11601 = !DISubroutineType(types: !11602)
!11602 = !{!11591, !11603}
!11603 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", baseType: !11543, size: 64, align: 64, dwarfAddressSpace: 0)
!11604 = !{!11598}
!11605 = !DILocation(line: 345, column: 32, scope: !11599, inlinedAt: !11606)
!11606 = !DILocation(line: 117, column: 18, scope: !11588, inlinedAt: !11585)
!11607 = !DILocalVariable(name: "self", scope: !11608, file: !7859, line: 345, type: !11543, align: 8)
!11608 = !DILexicalBlockFile(scope: !11609, file: !7859, discriminator: 0)
!11609 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e2f2d65d13a66c2E", scope: !11543, file: !646, line: 330, type: !11610, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4045, retainedNodes: !11612)
!11610 = !DISubroutineType(types: !11611)
!11611 = !{!4039, !11543}
!11612 = !{!11607}
!11613 = !DILocation(line: 345, column: 32, scope: !11608, inlinedAt: !11614)
!11614 = !DILocation(line: 381, column: 20, scope: !11600, inlinedAt: !11606)
!11615 = !DILocation(line: 345, column: 20, scope: !11537)
!11616 = !{i64 1, i64 0}
!11617 = !DILocation(line: 345, column: 13, scope: !11556)
!11618 = !DILocation(line: 346, column: 38, scope: !11556)
!11619 = !DILocalVariable(name: "self", scope: !11620, file: !7859, line: 346, type: !11595, align: 8)
!11620 = !DILexicalBlockFile(scope: !11621, file: !7859, discriminator: 0)
!11621 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h31f2cd2fd98764feE", scope: !11540, file: !1743, line: 114, type: !11589, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4045, retainedNodes: !11622)
!11622 = !{!11619}
!11623 = !DILocation(line: 346, column: 38, scope: !11620, inlinedAt: !11618)
!11624 = !DILocalVariable(name: "self", scope: !11625, file: !7859, line: 346, type: !11603, align: 8)
!11625 = !DILexicalBlockFile(scope: !11626, file: !7859, discriminator: 0)
!11626 = distinct !DISubprogram(name: "as_ref<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hda463898af179c3dE", scope: !11543, file: !646, line: 378, type: !11601, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4045, retainedNodes: !11627)
!11627 = !{!11624}
!11628 = !DILocation(line: 346, column: 38, scope: !11625, inlinedAt: !11629)
!11629 = !DILocation(line: 117, column: 18, scope: !11621, inlinedAt: !11618)
!11630 = !DILocalVariable(name: "self", scope: !11631, file: !7859, line: 346, type: !11543, align: 8)
!11631 = !DILexicalBlockFile(scope: !11632, file: !7859, discriminator: 0)
!11632 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e2f2d65d13a66c2E", scope: !11543, file: !646, line: 330, type: !11610, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4045, retainedNodes: !11633)
!11633 = !{!11630}
!11634 = !DILocation(line: 346, column: 38, scope: !11631, inlinedAt: !11635)
!11635 = !DILocation(line: 381, column: 20, scope: !11626, inlinedAt: !11629)
!11636 = !DILocation(line: 346, column: 21, scope: !11556)
!11637 = !DILocation(line: 346, column: 13, scope: !11558)
!11638 = !DILocation(line: 347, column: 56, scope: !11558)
!11639 = !DILocalVariable(name: "size", scope: !11640, file: !7859, line: 347, type: !9, align: 8)
!11640 = !DILexicalBlockFile(scope: !11641, file: !7859, discriminator: 0)
!11641 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h985d01966f78b156E", scope: !1779, file: !5505, line: 110, type: !8118, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11642)
!11642 = !{!11639, !11643}
!11643 = !DILocalVariable(name: "align", scope: !11640, file: !7859, line: 347, type: !9, align: 8)
!11644 = !DILocation(line: 347, column: 22, scope: !11640, inlinedAt: !11645)
!11645 = !DILocation(line: 347, column: 22, scope: !11558)
!11646 = !DILocation(line: 347, column: 62, scope: !11558)
!11647 = !DILocalVariable(name: "align", scope: !11648, file: !7859, line: 347, type: !9, align: 8)
!11648 = !DILexicalBlockFile(scope: !11649, file: !7859, discriminator: 0)
!11649 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11650)
!11650 = !{!11647, !11651}
!11651 = !DILocalVariable(name: "runtime", scope: !11652, file: !7859, line: 347, type: !5701, align: 8)
!11652 = !DILexicalBlockFile(scope: !11653, file: !7859, discriminator: 0)
!11653 = distinct !DILexicalBlock(scope: !11649, file: !386, line: 2336, column: 13)
!11654 = !DILocation(line: 347, column: 22, scope: !11648, inlinedAt: !11655)
!11655 = !DILocation(line: 112, column: 40, scope: !11641, inlinedAt: !11645)
!11656 = !DILocation(line: 348, column: 37, scope: !11582, inlinedAt: !11584)
!11657 = !DILocalVariable(name: "self", scope: !11658, file: !7859, line: 348, type: !11543, align: 8)
!11658 = !DILexicalBlockFile(scope: !11659, file: !7859, discriminator: 0)
!11659 = distinct !DISubprogram(name: "cast<(dyn std::error::Error + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hd37c30849771c874E", scope: !11543, file: !646, line: 453, type: !11660, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11583, retainedNodes: !11662)
!11660 = !DISubroutineType(types: !11661)
!11661 = !{!326, !11543}
!11662 = !{!11657}
!11663 = !DILocation(line: 348, column: 37, scope: !11658, inlinedAt: !11664)
!11664 = !DILocation(line: 137, column: 22, scope: !11577, inlinedAt: !11584)
!11665 = !DILocalVariable(name: "self", scope: !11666, file: !7859, line: 348, type: !11543, align: 8)
!11666 = !DILexicalBlockFile(scope: !11667, file: !7859, discriminator: 0)
!11667 = distinct !DISubprogram(name: "as_ptr<(dyn std::error::Error + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e2f2d65d13a66c2E", scope: !11543, file: !646, line: 330, type: !11610, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4045, retainedNodes: !11668)
!11668 = !{!11665}
!11669 = !DILocation(line: 348, column: 37, scope: !11666, inlinedAt: !11670)
!11670 = !DILocation(line: 455, column: 41, scope: !11659, inlinedAt: !11664)
!11671 = !DILocalVariable(name: "ptr", scope: !11672, file: !7859, line: 348, type: !649, align: 8)
!11672 = !DILexicalBlockFile(scope: !11673, file: !7859, discriminator: 0)
!11673 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11674)
!11674 = !{!11671}
!11675 = !DILocation(line: 348, column: 37, scope: !11672, inlinedAt: !11676)
!11676 = !DILocation(line: 455, column: 18, scope: !11659, inlinedAt: !11664)
!11677 = !DILocalVariable(name: "self", scope: !11678, file: !7859, line: 348, type: !322, align: 8)
!11678 = !DILexicalBlockFile(scope: !11679, file: !7859, discriminator: 0)
!11679 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha4a6fb266c1c2a9eE", scope: !322, file: !1743, line: 103, type: !1744, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11680)
!11680 = !{!11677}
!11681 = !DILocation(line: 348, column: 26, scope: !11678, inlinedAt: !11682)
!11682 = !DILocation(line: 773, column: 41, scope: !11567, inlinedAt: !11570)
!11683 = !DILocalVariable(name: "self", scope: !11684, file: !7859, line: 348, type: !326, align: 8)
!11684 = !DILexicalBlockFile(scope: !11685, file: !7859, discriminator: 0)
!11685 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11686)
!11686 = !{!11683}
!11687 = !DILocation(line: 348, column: 26, scope: !11684, inlinedAt: !11688)
!11688 = !DILocation(line: 104, column: 9, scope: !11679, inlinedAt: !11682)
!11689 = !DILocalVariable(name: "ptr", scope: !11690, file: !7859, line: 348, type: !649, align: 8)
!11690 = !DILexicalBlockFile(scope: !11691, file: !7859, discriminator: 0)
!11691 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11692)
!11692 = !{!11689}
!11693 = !DILocation(line: 348, column: 26, scope: !11690, inlinedAt: !11694)
!11694 = !DILocation(line: 773, column: 18, scope: !11567, inlinedAt: !11570)
!11695 = !DILocation(line: 348, column: 50, scope: !11560)
!11696 = !DILocation(line: 348, column: 9, scope: !11560)
!11697 = !DILocation(line: 350, column: 1, scope: !11537)
!11698 = !DILocation(line: 340, column: 1, scope: !11537)
!11699 = !DILocation(line: 350, column: 2, scope: !11537)
!11700 = distinct !DISubprogram(name: "box_free<std::io::error::Custom, alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17he04ba104dc105ff4E", scope: !337, file: !7859, line: 340, type: !11701, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11721, retainedNodes: !11712)
!11701 = !DISubroutineType(types: !11702)
!11702 = !{null, !11703, !336}
!11703 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<std::io::error::Custom>", scope: !323, file: !2, size: 64, align: 64, elements: !11704, templateParams: !3694, identifier: "ed2218c422fd8d1b5d8ef5cc9a32b804")
!11704 = !{!11705, !11710}
!11705 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11703, file: !2, baseType: !11706, size: 64, align: 64)
!11706 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<std::io::error::Custom>", scope: !42, file: !2, size: 64, align: 64, elements: !11707, templateParams: !3694, identifier: "25ba20889606cb13c9fe774102412775")
!11707 = !{!11708}
!11708 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11706, file: !2, baseType: !11709, size: 64, align: 64)
!11709 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const std::io::error::Custom", baseType: !66, size: 64, align: 64, dwarfAddressSpace: 0)
!11710 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !11703, file: !2, baseType: !11711, align: 8)
!11711 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<std::io::error::Custom>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !3694, identifier: "7657d0e04d24756529c60def68783989")
!11712 = !{!11713, !11714, !11715, !11717, !11719}
!11713 = !DILocalVariable(name: "ptr", arg: 1, scope: !11700, file: !7859, line: 341, type: !11703)
!11714 = !DILocalVariable(name: "alloc", arg: 2, scope: !11700, file: !7859, line: 342, type: !336)
!11715 = !DILocalVariable(name: "size", scope: !11716, file: !7859, line: 345, type: !9, align: 8)
!11716 = distinct !DILexicalBlock(scope: !11700, file: !7859, line: 345, column: 9)
!11717 = !DILocalVariable(name: "align", scope: !11718, file: !7859, line: 346, type: !9, align: 8)
!11718 = distinct !DILexicalBlock(scope: !11716, file: !7859, line: 346, column: 9)
!11719 = !DILocalVariable(name: "layout", scope: !11720, file: !7859, line: 347, type: !1779, align: 8)
!11720 = distinct !DILexicalBlock(scope: !11718, file: !7859, line: 347, column: 9)
!11721 = !{!3695, !339}
!11722 = !DILocation(line: 341, column: 5, scope: !11700)
!11723 = !DILocation(line: 342, column: 5, scope: !11700)
!11724 = !DILocation(line: 347, column: 13, scope: !11720)
!11725 = !DILocalVariable(name: "unique", scope: !11726, file: !7859, line: 348, type: !322, align: 8)
!11726 = !DILexicalBlockFile(scope: !11727, file: !7859, discriminator: 0)
!11727 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h235423854f80c95bE", scope: !1733, file: !646, line: 770, type: !1734, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11728)
!11728 = !{!11725}
!11729 = !DILocation(line: 348, column: 26, scope: !11726, inlinedAt: !11730)
!11730 = !DILocation(line: 348, column: 26, scope: !11720)
!11731 = !DILocalVariable(name: "pointer", scope: !11732, file: !7859, line: 348, type: !326, align: 8)
!11732 = !DILexicalBlockFile(scope: !11733, file: !7859, discriminator: 0)
!11733 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11734)
!11734 = !{!11731}
!11735 = !DILocation(line: 348, column: 37, scope: !11732, inlinedAt: !11736)
!11736 = !DILocation(line: 137, column: 9, scope: !11737, inlinedAt: !11744)
!11737 = distinct !DISubprogram(name: "cast<std::io::error::Custom, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h04856fb504ec30a8E", scope: !11703, file: !1743, line: 136, type: !11738, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11743, retainedNodes: !11740)
!11738 = !DISubroutineType(types: !11739)
!11739 = !{!322, !11703}
!11740 = !{!11741}
!11741 = !DILocalVariable(name: "self", scope: !11742, file: !7859, line: 348, type: !11703, align: 8)
!11742 = !DILexicalBlockFile(scope: !11737, file: !7859, discriminator: 0)
!11743 = !{!3695, !2018}
!11744 = !DILocation(line: 348, column: 37, scope: !11720)
!11745 = !DILocation(line: 345, column: 32, scope: !11700)
!11746 = !DILocalVariable(name: "self", scope: !11747, file: !7859, line: 345, type: !11752, align: 8)
!11747 = !DILexicalBlockFile(scope: !11748, file: !7859, discriminator: 0)
!11748 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hfbc984cdd431b977E", scope: !11703, file: !1743, line: 114, type: !11749, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !11753)
!11749 = !DISubroutineType(types: !11750)
!11750 = !{!11751, !11752}
!11751 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::io::error::Custom", baseType: !66, size: 64, align: 64, dwarfAddressSpace: 0)
!11752 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<std::io::error::Custom>", baseType: !11703, size: 64, align: 64, dwarfAddressSpace: 0)
!11753 = !{!11746}
!11754 = !DILocation(line: 345, column: 32, scope: !11747, inlinedAt: !11745)
!11755 = !DILocalVariable(name: "self", scope: !11756, file: !7859, line: 345, type: !11760, align: 8)
!11756 = !DILexicalBlockFile(scope: !11757, file: !7859, discriminator: 0)
!11757 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h4e37005c64590d4fE", scope: !11706, file: !646, line: 378, type: !11758, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !11761)
!11758 = !DISubroutineType(types: !11759)
!11759 = !{!11751, !11760}
!11760 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<std::io::error::Custom>", baseType: !11706, size: 64, align: 64, dwarfAddressSpace: 0)
!11761 = !{!11755}
!11762 = !DILocation(line: 345, column: 32, scope: !11756, inlinedAt: !11763)
!11763 = !DILocation(line: 117, column: 18, scope: !11748, inlinedAt: !11745)
!11764 = !DILocalVariable(name: "self", scope: !11765, file: !7859, line: 345, type: !11706, align: 8)
!11765 = !DILexicalBlockFile(scope: !11766, file: !7859, discriminator: 0)
!11766 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h38ed2bfcc38da41cE", scope: !11706, file: !646, line: 330, type: !11767, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !11769)
!11767 = !DISubroutineType(types: !11768)
!11768 = !{!1899, !11706}
!11769 = !{!11764}
!11770 = !DILocation(line: 345, column: 32, scope: !11765, inlinedAt: !11771)
!11771 = !DILocation(line: 381, column: 20, scope: !11757, inlinedAt: !11763)
!11772 = !DILocation(line: 345, column: 20, scope: !11700)
!11773 = !DILocation(line: 345, column: 13, scope: !11716)
!11774 = !DILocation(line: 346, column: 38, scope: !11716)
!11775 = !DILocalVariable(name: "self", scope: !11776, file: !7859, line: 346, type: !11752, align: 8)
!11776 = !DILexicalBlockFile(scope: !11777, file: !7859, discriminator: 0)
!11777 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17hfbc984cdd431b977E", scope: !11703, file: !1743, line: 114, type: !11749, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !11778)
!11778 = !{!11775}
!11779 = !DILocation(line: 346, column: 38, scope: !11776, inlinedAt: !11774)
!11780 = !DILocalVariable(name: "self", scope: !11781, file: !7859, line: 346, type: !11760, align: 8)
!11781 = !DILexicalBlockFile(scope: !11782, file: !7859, discriminator: 0)
!11782 = distinct !DISubprogram(name: "as_ref<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h4e37005c64590d4fE", scope: !11706, file: !646, line: 378, type: !11758, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !11783)
!11783 = !{!11780}
!11784 = !DILocation(line: 346, column: 38, scope: !11781, inlinedAt: !11785)
!11785 = !DILocation(line: 117, column: 18, scope: !11777, inlinedAt: !11774)
!11786 = !DILocalVariable(name: "self", scope: !11787, file: !7859, line: 346, type: !11706, align: 8)
!11787 = !DILexicalBlockFile(scope: !11788, file: !7859, discriminator: 0)
!11788 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h38ed2bfcc38da41cE", scope: !11706, file: !646, line: 330, type: !11767, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !11789)
!11789 = !{!11786}
!11790 = !DILocation(line: 346, column: 38, scope: !11787, inlinedAt: !11791)
!11791 = !DILocation(line: 381, column: 20, scope: !11782, inlinedAt: !11785)
!11792 = !DILocation(line: 346, column: 21, scope: !11716)
!11793 = !DILocation(line: 346, column: 13, scope: !11718)
!11794 = !DILocation(line: 347, column: 56, scope: !11718)
!11795 = !DILocalVariable(name: "size", scope: !11796, file: !7859, line: 347, type: !9, align: 8)
!11796 = !DILexicalBlockFile(scope: !11797, file: !7859, discriminator: 0)
!11797 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h985d01966f78b156E", scope: !1779, file: !5505, line: 110, type: !8118, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11798)
!11798 = !{!11795, !11799}
!11799 = !DILocalVariable(name: "align", scope: !11796, file: !7859, line: 347, type: !9, align: 8)
!11800 = !DILocation(line: 347, column: 22, scope: !11796, inlinedAt: !11801)
!11801 = !DILocation(line: 347, column: 22, scope: !11718)
!11802 = !DILocation(line: 347, column: 62, scope: !11718)
!11803 = !DILocalVariable(name: "align", scope: !11804, file: !7859, line: 347, type: !9, align: 8)
!11804 = !DILexicalBlockFile(scope: !11805, file: !7859, discriminator: 0)
!11805 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11806)
!11806 = !{!11803, !11807}
!11807 = !DILocalVariable(name: "runtime", scope: !11808, file: !7859, line: 347, type: !5701, align: 8)
!11808 = !DILexicalBlockFile(scope: !11809, file: !7859, discriminator: 0)
!11809 = distinct !DILexicalBlock(scope: !11805, file: !386, line: 2336, column: 13)
!11810 = !DILocation(line: 347, column: 22, scope: !11804, inlinedAt: !11811)
!11811 = !DILocation(line: 112, column: 40, scope: !11797, inlinedAt: !11801)
!11812 = !DILocation(line: 348, column: 37, scope: !11742, inlinedAt: !11744)
!11813 = !DILocalVariable(name: "self", scope: !11814, file: !7859, line: 348, type: !11706, align: 8)
!11814 = !DILexicalBlockFile(scope: !11815, file: !7859, discriminator: 0)
!11815 = distinct !DISubprogram(name: "cast<std::io::error::Custom, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h18c5eeb8c8dd7f3fE", scope: !11706, file: !646, line: 453, type: !11816, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11743, retainedNodes: !11818)
!11816 = !DISubroutineType(types: !11817)
!11817 = !{!326, !11706}
!11818 = !{!11813}
!11819 = !DILocation(line: 348, column: 37, scope: !11814, inlinedAt: !11820)
!11820 = !DILocation(line: 137, column: 22, scope: !11737, inlinedAt: !11744)
!11821 = !DILocalVariable(name: "self", scope: !11822, file: !7859, line: 348, type: !11706, align: 8)
!11822 = !DILexicalBlockFile(scope: !11823, file: !7859, discriminator: 0)
!11823 = distinct !DISubprogram(name: "as_ptr<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h38ed2bfcc38da41cE", scope: !11706, file: !646, line: 330, type: !11767, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !11824)
!11824 = !{!11821}
!11825 = !DILocation(line: 348, column: 37, scope: !11822, inlinedAt: !11826)
!11826 = !DILocation(line: 455, column: 41, scope: !11815, inlinedAt: !11820)
!11827 = !DILocalVariable(name: "ptr", scope: !11828, file: !7859, line: 348, type: !649, align: 8)
!11828 = !DILexicalBlockFile(scope: !11829, file: !7859, discriminator: 0)
!11829 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11830)
!11830 = !{!11827}
!11831 = !DILocation(line: 348, column: 37, scope: !11828, inlinedAt: !11832)
!11832 = !DILocation(line: 455, column: 18, scope: !11815, inlinedAt: !11820)
!11833 = !DILocalVariable(name: "self", scope: !11834, file: !7859, line: 348, type: !322, align: 8)
!11834 = !DILexicalBlockFile(scope: !11835, file: !7859, discriminator: 0)
!11835 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha4a6fb266c1c2a9eE", scope: !322, file: !1743, line: 103, type: !1744, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11836)
!11836 = !{!11833}
!11837 = !DILocation(line: 348, column: 26, scope: !11834, inlinedAt: !11838)
!11838 = !DILocation(line: 773, column: 41, scope: !11727, inlinedAt: !11730)
!11839 = !DILocalVariable(name: "self", scope: !11840, file: !7859, line: 348, type: !326, align: 8)
!11840 = !DILexicalBlockFile(scope: !11841, file: !7859, discriminator: 0)
!11841 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11842)
!11842 = !{!11839}
!11843 = !DILocation(line: 348, column: 26, scope: !11840, inlinedAt: !11844)
!11844 = !DILocation(line: 104, column: 9, scope: !11835, inlinedAt: !11838)
!11845 = !DILocalVariable(name: "ptr", scope: !11846, file: !7859, line: 348, type: !649, align: 8)
!11846 = !DILexicalBlockFile(scope: !11847, file: !7859, discriminator: 0)
!11847 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11848)
!11848 = !{!11845}
!11849 = !DILocation(line: 348, column: 26, scope: !11846, inlinedAt: !11850)
!11850 = !DILocation(line: 773, column: 18, scope: !11727, inlinedAt: !11730)
!11851 = !DILocation(line: 348, column: 50, scope: !11720)
!11852 = !DILocation(line: 348, column: 9, scope: !11720)
!11853 = !DILocation(line: 350, column: 1, scope: !11700)
!11854 = !DILocation(line: 340, column: 1, scope: !11700)
!11855 = !DILocation(line: 350, column: 2, scope: !11700)
!11856 = distinct !DISubprogram(name: "box_free<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hf5ecefe57bddb78cE", scope: !337, file: !7859, line: 340, type: !11857, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11880, retainedNodes: !11871)
!11857 = !DISubroutineType(types: !11858)
!11858 = !{null, !11859, !336}
!11859 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", scope: !323, file: !2, size: 128, align: 64, elements: !11860, templateParams: !3579, identifier: "ac54cfc008ecfa8ddb0a36d3b4334737")
!11860 = !{!11861, !11869}
!11861 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11859, file: !2, baseType: !11862, size: 128, align: 64)
!11862 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", scope: !42, file: !2, size: 128, align: 64, elements: !11863, templateParams: !3579, identifier: "a98cf1a4c656d7f3b924c8e30d812545")
!11863 = !{!11864}
!11864 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11862, file: !2, baseType: !11865, size: 128, align: 64)
!11865 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const (dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !11866, templateParams: !23, identifier: "fbcc41dc5d891a0770d1f2624842b333")
!11866 = !{!11867, !11868}
!11867 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11865, file: !2, baseType: !2704, size: 64, align: 64)
!11868 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11865, file: !2, baseType: !120, size: 64, align: 64, offset: 64)
!11869 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !11859, file: !2, baseType: !11870, align: 8)
!11870 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !3579, identifier: "940ba82652550bdd264cfdcdf1eaeb51")
!11871 = !{!11872, !11873, !11874, !11876, !11878}
!11872 = !DILocalVariable(name: "ptr", arg: 1, scope: !11856, file: !7859, line: 341, type: !11859)
!11873 = !DILocalVariable(name: "alloc", arg: 2, scope: !11856, file: !7859, line: 342, type: !336)
!11874 = !DILocalVariable(name: "size", scope: !11875, file: !7859, line: 345, type: !9, align: 8)
!11875 = distinct !DILexicalBlock(scope: !11856, file: !7859, line: 345, column: 9)
!11876 = !DILocalVariable(name: "align", scope: !11877, file: !7859, line: 346, type: !9, align: 8)
!11877 = distinct !DILexicalBlock(scope: !11875, file: !7859, line: 346, column: 9)
!11878 = !DILocalVariable(name: "layout", scope: !11879, file: !7859, line: 347, type: !1779, align: 8)
!11879 = distinct !DILexicalBlock(scope: !11877, file: !7859, line: 347, column: 9)
!11880 = !{!3580, !339}
!11881 = !DILocation(line: 341, column: 5, scope: !11856)
!11882 = !DILocation(line: 342, column: 5, scope: !11856)
!11883 = !DILocation(line: 347, column: 13, scope: !11879)
!11884 = !DILocalVariable(name: "unique", scope: !11885, file: !7859, line: 348, type: !322, align: 8)
!11885 = !DILexicalBlockFile(scope: !11886, file: !7859, discriminator: 0)
!11886 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h235423854f80c95bE", scope: !1733, file: !646, line: 770, type: !1734, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11887)
!11887 = !{!11884}
!11888 = !DILocation(line: 348, column: 26, scope: !11885, inlinedAt: !11889)
!11889 = !DILocation(line: 348, column: 26, scope: !11879)
!11890 = !DILocalVariable(name: "pointer", scope: !11891, file: !7859, line: 348, type: !326, align: 8)
!11891 = !DILexicalBlockFile(scope: !11892, file: !7859, discriminator: 0)
!11892 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11893)
!11893 = !{!11890}
!11894 = !DILocation(line: 348, column: 37, scope: !11891, inlinedAt: !11895)
!11895 = !DILocation(line: 137, column: 9, scope: !11896, inlinedAt: !11903)
!11896 = distinct !DISubprogram(name: "cast<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h5e230bb5437b7028E", scope: !11859, file: !1743, line: 136, type: !11897, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11902, retainedNodes: !11899)
!11897 = !DISubroutineType(types: !11898)
!11898 = !{!322, !11859}
!11899 = !{!11900}
!11900 = !DILocalVariable(name: "self", scope: !11901, file: !7859, line: 348, type: !11859, align: 8)
!11901 = !DILexicalBlockFile(scope: !11896, file: !7859, discriminator: 0)
!11902 = !{!3580, !2018}
!11903 = !DILocation(line: 348, column: 37, scope: !11879)
!11904 = !DILocation(line: 345, column: 32, scope: !11856)
!11905 = !DILocalVariable(name: "self", scope: !11906, file: !7859, line: 345, type: !11914, align: 8)
!11906 = !DILexicalBlockFile(scope: !11907, file: !7859, discriminator: 0)
!11907 = distinct !DISubprogram(name: "as_ref<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h6ba58f85fd4fd869E", scope: !11859, file: !1743, line: 114, type: !11908, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3579, retainedNodes: !11915)
!11908 = !DISubroutineType(types: !11909)
!11909 = !{!11910, !11914}
!11910 = !DICompositeType(tag: DW_TAG_structure_type, name: "&(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)", file: !2, size: 128, align: 64, elements: !11911, templateParams: !23, identifier: "afd3cb7d5b15548210e9319e8f3fa95e")
!11911 = !{!11912, !11913}
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !11910, file: !2, baseType: !2704, size: 64, align: 64)
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !11910, file: !2, baseType: !120, size: 64, align: 64, offset: 64)
!11914 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", baseType: !11859, size: 64, align: 64, dwarfAddressSpace: 0)
!11915 = !{!11905}
!11916 = !DILocation(line: 345, column: 32, scope: !11906, inlinedAt: !11904)
!11917 = !DILocalVariable(name: "self", scope: !11918, file: !7859, line: 345, type: !11922, align: 8)
!11918 = !DILexicalBlockFile(scope: !11919, file: !7859, discriminator: 0)
!11919 = distinct !DISubprogram(name: "as_ref<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hf86c0f5cb5a91747E", scope: !11862, file: !646, line: 378, type: !11920, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3579, retainedNodes: !11923)
!11920 = !DISubroutineType(types: !11921)
!11921 = !{!11910, !11922}
!11922 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", baseType: !11862, size: 64, align: 64, dwarfAddressSpace: 0)
!11923 = !{!11917}
!11924 = !DILocation(line: 345, column: 32, scope: !11918, inlinedAt: !11925)
!11925 = !DILocation(line: 117, column: 18, scope: !11907, inlinedAt: !11904)
!11926 = !DILocalVariable(name: "self", scope: !11927, file: !7859, line: 345, type: !11862, align: 8)
!11927 = !DILexicalBlockFile(scope: !11928, file: !7859, discriminator: 0)
!11928 = distinct !DISubprogram(name: "as_ptr<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h53612d67474a798eE", scope: !11862, file: !646, line: 330, type: !11929, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3579, retainedNodes: !11931)
!11929 = !DISubroutineType(types: !11930)
!11930 = !{!3573, !11862}
!11931 = !{!11926}
!11932 = !DILocation(line: 345, column: 32, scope: !11927, inlinedAt: !11933)
!11933 = !DILocation(line: 381, column: 20, scope: !11919, inlinedAt: !11925)
!11934 = !DILocation(line: 345, column: 20, scope: !11856)
!11935 = !DILocation(line: 345, column: 13, scope: !11875)
!11936 = !DILocation(line: 346, column: 38, scope: !11875)
!11937 = !DILocalVariable(name: "self", scope: !11938, file: !7859, line: 346, type: !11914, align: 8)
!11938 = !DILexicalBlockFile(scope: !11939, file: !7859, discriminator: 0)
!11939 = distinct !DISubprogram(name: "as_ref<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h6ba58f85fd4fd869E", scope: !11859, file: !1743, line: 114, type: !11908, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3579, retainedNodes: !11940)
!11940 = !{!11937}
!11941 = !DILocation(line: 346, column: 38, scope: !11938, inlinedAt: !11936)
!11942 = !DILocalVariable(name: "self", scope: !11943, file: !7859, line: 346, type: !11922, align: 8)
!11943 = !DILexicalBlockFile(scope: !11944, file: !7859, discriminator: 0)
!11944 = distinct !DISubprogram(name: "as_ref<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hf86c0f5cb5a91747E", scope: !11862, file: !646, line: 378, type: !11920, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3579, retainedNodes: !11945)
!11945 = !{!11942}
!11946 = !DILocation(line: 346, column: 38, scope: !11943, inlinedAt: !11947)
!11947 = !DILocation(line: 117, column: 18, scope: !11939, inlinedAt: !11936)
!11948 = !DILocalVariable(name: "self", scope: !11949, file: !7859, line: 346, type: !11862, align: 8)
!11949 = !DILexicalBlockFile(scope: !11950, file: !7859, discriminator: 0)
!11950 = distinct !DISubprogram(name: "as_ptr<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h53612d67474a798eE", scope: !11862, file: !646, line: 330, type: !11929, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3579, retainedNodes: !11951)
!11951 = !{!11948}
!11952 = !DILocation(line: 346, column: 38, scope: !11949, inlinedAt: !11953)
!11953 = !DILocation(line: 381, column: 20, scope: !11944, inlinedAt: !11947)
!11954 = !DILocation(line: 346, column: 21, scope: !11875)
!11955 = !DILocation(line: 346, column: 13, scope: !11877)
!11956 = !DILocation(line: 347, column: 56, scope: !11877)
!11957 = !DILocalVariable(name: "size", scope: !11958, file: !7859, line: 347, type: !9, align: 8)
!11958 = !DILexicalBlockFile(scope: !11959, file: !7859, discriminator: 0)
!11959 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h985d01966f78b156E", scope: !1779, file: !5505, line: 110, type: !8118, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11960)
!11960 = !{!11957, !11961}
!11961 = !DILocalVariable(name: "align", scope: !11958, file: !7859, line: 347, type: !9, align: 8)
!11962 = !DILocation(line: 347, column: 22, scope: !11958, inlinedAt: !11963)
!11963 = !DILocation(line: 347, column: 22, scope: !11877)
!11964 = !DILocation(line: 347, column: 62, scope: !11877)
!11965 = !DILocalVariable(name: "align", scope: !11966, file: !7859, line: 347, type: !9, align: 8)
!11966 = !DILexicalBlockFile(scope: !11967, file: !7859, discriminator: 0)
!11967 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !11968)
!11968 = !{!11965, !11969}
!11969 = !DILocalVariable(name: "runtime", scope: !11970, file: !7859, line: 347, type: !5701, align: 8)
!11970 = !DILexicalBlockFile(scope: !11971, file: !7859, discriminator: 0)
!11971 = distinct !DILexicalBlock(scope: !11967, file: !386, line: 2336, column: 13)
!11972 = !DILocation(line: 347, column: 22, scope: !11966, inlinedAt: !11973)
!11973 = !DILocation(line: 112, column: 40, scope: !11959, inlinedAt: !11963)
!11974 = !DILocation(line: 348, column: 37, scope: !11901, inlinedAt: !11903)
!11975 = !DILocalVariable(name: "self", scope: !11976, file: !7859, line: 348, type: !11862, align: 8)
!11976 = !DILexicalBlockFile(scope: !11977, file: !7859, discriminator: 0)
!11977 = distinct !DISubprogram(name: "cast<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h8478a5ed7458105cE", scope: !11862, file: !646, line: 453, type: !11978, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11902, retainedNodes: !11980)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{!326, !11862}
!11980 = !{!11975}
!11981 = !DILocation(line: 348, column: 37, scope: !11976, inlinedAt: !11982)
!11982 = !DILocation(line: 137, column: 22, scope: !11896, inlinedAt: !11903)
!11983 = !DILocalVariable(name: "self", scope: !11984, file: !7859, line: 348, type: !11862, align: 8)
!11984 = !DILexicalBlockFile(scope: !11985, file: !7859, discriminator: 0)
!11985 = distinct !DISubprogram(name: "as_ptr<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h53612d67474a798eE", scope: !11862, file: !646, line: 330, type: !11929, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3579, retainedNodes: !11986)
!11986 = !{!11983}
!11987 = !DILocation(line: 348, column: 37, scope: !11984, inlinedAt: !11988)
!11988 = !DILocation(line: 455, column: 41, scope: !11977, inlinedAt: !11982)
!11989 = !DILocalVariable(name: "ptr", scope: !11990, file: !7859, line: 348, type: !649, align: 8)
!11990 = !DILexicalBlockFile(scope: !11991, file: !7859, discriminator: 0)
!11991 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11992)
!11992 = !{!11989}
!11993 = !DILocation(line: 348, column: 37, scope: !11990, inlinedAt: !11994)
!11994 = !DILocation(line: 455, column: 18, scope: !11977, inlinedAt: !11982)
!11995 = !DILocalVariable(name: "self", scope: !11996, file: !7859, line: 348, type: !322, align: 8)
!11996 = !DILexicalBlockFile(scope: !11997, file: !7859, discriminator: 0)
!11997 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha4a6fb266c1c2a9eE", scope: !322, file: !1743, line: 103, type: !1744, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !11998)
!11998 = !{!11995}
!11999 = !DILocation(line: 348, column: 26, scope: !11996, inlinedAt: !12000)
!12000 = !DILocation(line: 773, column: 41, scope: !11886, inlinedAt: !11889)
!12001 = !DILocalVariable(name: "self", scope: !12002, file: !7859, line: 348, type: !326, align: 8)
!12002 = !DILexicalBlockFile(scope: !12003, file: !7859, discriminator: 0)
!12003 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12004)
!12004 = !{!12001}
!12005 = !DILocation(line: 348, column: 26, scope: !12002, inlinedAt: !12006)
!12006 = !DILocation(line: 104, column: 9, scope: !11997, inlinedAt: !12000)
!12007 = !DILocalVariable(name: "ptr", scope: !12008, file: !7859, line: 348, type: !649, align: 8)
!12008 = !DILexicalBlockFile(scope: !12009, file: !7859, discriminator: 0)
!12009 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12010)
!12010 = !{!12007}
!12011 = !DILocation(line: 348, column: 26, scope: !12008, inlinedAt: !12012)
!12012 = !DILocation(line: 773, column: 18, scope: !11886, inlinedAt: !11889)
!12013 = !DILocation(line: 348, column: 50, scope: !11879)
!12014 = !DILocation(line: 348, column: 9, scope: !11879)
!12015 = !DILocation(line: 350, column: 1, scope: !11856)
!12016 = !DILocation(line: 340, column: 1, scope: !11856)
!12017 = !DILocation(line: 350, column: 2, scope: !11856)
!12018 = distinct !DISubprogram(name: "box_free<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5alloc8box_free17hfb2cd30f7e79faf9E", scope: !337, file: !7859, line: 340, type: !12019, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !12026)
!12019 = !DISubroutineType(types: !12020)
!12020 = !{null, !12021, !336}
!12021 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8]>", scope: !323, file: !2, size: 128, align: 64, elements: !12022, templateParams: !330, identifier: "1d2099a8a4c8cae7160ee7e4073563b1")
!12022 = !{!12023, !12024}
!12023 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !12021, file: !2, baseType: !7489, size: 128, align: 64)
!12024 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !12021, file: !2, baseType: !12025, align: 8)
!12025 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8]>", scope: !51, file: !2, align: 8, elements: !23, templateParams: !330, identifier: "a99a42a9ed7127b2f458504cb45b588")
!12026 = !{!12027, !12028, !12029, !12031, !12033}
!12027 = !DILocalVariable(name: "ptr", arg: 1, scope: !12018, file: !7859, line: 341, type: !12021)
!12028 = !DILocalVariable(name: "alloc", arg: 2, scope: !12018, file: !7859, line: 342, type: !336)
!12029 = !DILocalVariable(name: "size", scope: !12030, file: !7859, line: 345, type: !9, align: 8)
!12030 = distinct !DILexicalBlock(scope: !12018, file: !7859, line: 345, column: 9)
!12031 = !DILocalVariable(name: "align", scope: !12032, file: !7859, line: 346, type: !9, align: 8)
!12032 = distinct !DILexicalBlock(scope: !12030, file: !7859, line: 346, column: 9)
!12033 = !DILocalVariable(name: "layout", scope: !12034, file: !7859, line: 347, type: !1779, align: 8)
!12034 = distinct !DILexicalBlock(scope: !12032, file: !7859, line: 347, column: 9)
!12035 = !DILocation(line: 341, column: 5, scope: !12018)
!12036 = !DILocation(line: 342, column: 5, scope: !12018)
!12037 = !DILocation(line: 347, column: 13, scope: !12034)
!12038 = !DILocalVariable(name: "unique", scope: !12039, file: !7859, line: 348, type: !322, align: 8)
!12039 = !DILexicalBlockFile(scope: !12040, file: !7859, discriminator: 0)
!12040 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h235423854f80c95bE", scope: !1733, file: !646, line: 770, type: !1734, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12041)
!12041 = !{!12038}
!12042 = !DILocation(line: 348, column: 26, scope: !12039, inlinedAt: !12043)
!12043 = !DILocation(line: 348, column: 26, scope: !12034)
!12044 = !DILocalVariable(name: "pointer", scope: !12045, file: !7859, line: 348, type: !326, align: 8)
!12045 = !DILexicalBlockFile(scope: !12046, file: !7859, discriminator: 0)
!12046 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12047)
!12047 = !{!12044}
!12048 = !DILocation(line: 348, column: 37, scope: !12045, inlinedAt: !12049)
!12049 = !DILocation(line: 137, column: 9, scope: !12050, inlinedAt: !12057)
!12050 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h29f23a64f8cf7fc7E", scope: !12021, file: !1743, line: 136, type: !12051, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12056, retainedNodes: !12053)
!12051 = !DISubroutineType(types: !12052)
!12052 = !{!322, !12021}
!12053 = !{!12054}
!12054 = !DILocalVariable(name: "self", scope: !12055, file: !7859, line: 348, type: !12021, align: 8)
!12055 = !DILexicalBlockFile(scope: !12050, file: !7859, discriminator: 0)
!12056 = !{!331, !2018}
!12057 = !DILocation(line: 348, column: 37, scope: !12034)
!12058 = !DILocation(line: 345, column: 32, scope: !12018)
!12059 = !DILocalVariable(name: "self", scope: !12060, file: !7859, line: 345, type: !12064, align: 8)
!12060 = !DILexicalBlockFile(scope: !12061, file: !7859, discriminator: 0)
!12061 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h945a9df6bb5a21afE", scope: !12021, file: !1743, line: 114, type: !12062, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12065)
!12062 = !DISubroutineType(types: !12063)
!12063 = !{!366, !12064}
!12064 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::unique::Unique<[u8]>", baseType: !12021, size: 64, align: 64, dwarfAddressSpace: 0)
!12065 = !{!12059}
!12066 = !DILocation(line: 345, column: 32, scope: !12060, inlinedAt: !12058)
!12067 = !DILocalVariable(name: "self", scope: !12068, file: !7859, line: 345, type: !12072, align: 8)
!12068 = !DILexicalBlockFile(scope: !12069, file: !7859, discriminator: 0)
!12069 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hd22604e96ac37f3dE", scope: !7489, file: !646, line: 378, type: !12070, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12073)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!366, !12072}
!12072 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u8]>", baseType: !7489, size: 64, align: 64, dwarfAddressSpace: 0)
!12073 = !{!12067}
!12074 = !DILocation(line: 345, column: 32, scope: !12068, inlinedAt: !12075)
!12075 = !DILocation(line: 117, column: 18, scope: !12061, inlinedAt: !12058)
!12076 = !DILocalVariable(name: "self", scope: !12077, file: !7859, line: 345, type: !7489, align: 8)
!12077 = !DILexicalBlockFile(scope: !12078, file: !7859, discriminator: 0)
!12078 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h078a6a703e08f315E", scope: !7489, file: !646, line: 330, type: !11346, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12079)
!12079 = !{!12076}
!12080 = !DILocation(line: 345, column: 32, scope: !12077, inlinedAt: !12081)
!12081 = !DILocation(line: 381, column: 20, scope: !12069, inlinedAt: !12075)
!12082 = !DILocation(line: 345, column: 20, scope: !12018)
!12083 = !DILocation(line: 345, column: 13, scope: !12030)
!12084 = !DILocation(line: 346, column: 38, scope: !12030)
!12085 = !DILocalVariable(name: "self", scope: !12086, file: !7859, line: 346, type: !12064, align: 8)
!12086 = !DILexicalBlockFile(scope: !12087, file: !7859, discriminator: 0)
!12087 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ref17h945a9df6bb5a21afE", scope: !12021, file: !1743, line: 114, type: !12062, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12088)
!12088 = !{!12085}
!12089 = !DILocation(line: 346, column: 38, scope: !12086, inlinedAt: !12084)
!12090 = !DILocalVariable(name: "self", scope: !12091, file: !7859, line: 346, type: !12072, align: 8)
!12091 = !DILexicalBlockFile(scope: !12092, file: !7859, discriminator: 0)
!12092 = distinct !DISubprogram(name: "as_ref<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17hd22604e96ac37f3dE", scope: !7489, file: !646, line: 378, type: !12070, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12093)
!12093 = !{!12090}
!12094 = !DILocation(line: 346, column: 38, scope: !12091, inlinedAt: !12095)
!12095 = !DILocation(line: 117, column: 18, scope: !12087, inlinedAt: !12084)
!12096 = !DILocalVariable(name: "self", scope: !12097, file: !7859, line: 346, type: !7489, align: 8)
!12097 = !DILexicalBlockFile(scope: !12098, file: !7859, discriminator: 0)
!12098 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h078a6a703e08f315E", scope: !7489, file: !646, line: 330, type: !11346, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12099)
!12099 = !{!12096}
!12100 = !DILocation(line: 346, column: 38, scope: !12097, inlinedAt: !12101)
!12101 = !DILocation(line: 381, column: 20, scope: !12092, inlinedAt: !12095)
!12102 = !DILocation(line: 346, column: 21, scope: !12030)
!12103 = !DILocation(line: 346, column: 13, scope: !12032)
!12104 = !DILocation(line: 347, column: 56, scope: !12032)
!12105 = !DILocalVariable(name: "size", scope: !12106, file: !7859, line: 347, type: !9, align: 8)
!12106 = !DILexicalBlockFile(scope: !12107, file: !7859, discriminator: 0)
!12107 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h985d01966f78b156E", scope: !1779, file: !5505, line: 110, type: !8118, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12108)
!12108 = !{!12105, !12109}
!12109 = !DILocalVariable(name: "align", scope: !12106, file: !7859, line: 347, type: !9, align: 8)
!12110 = !DILocation(line: 347, column: 22, scope: !12106, inlinedAt: !12111)
!12111 = !DILocation(line: 347, column: 22, scope: !12032)
!12112 = !DILocation(line: 347, column: 62, scope: !12032)
!12113 = !DILocalVariable(name: "align", scope: !12114, file: !7859, line: 347, type: !9, align: 8)
!12114 = !DILexicalBlockFile(scope: !12115, file: !7859, discriminator: 0)
!12115 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h2090effeb777c160E", scope: !1785, file: !5554, line: 29, type: !5695, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12116)
!12116 = !{!12113, !12117}
!12117 = !DILocalVariable(name: "runtime", scope: !12118, file: !7859, line: 347, type: !5701, align: 8)
!12118 = !DILexicalBlockFile(scope: !12119, file: !7859, discriminator: 0)
!12119 = distinct !DILexicalBlock(scope: !12115, file: !386, line: 2336, column: 13)
!12120 = !DILocation(line: 347, column: 22, scope: !12114, inlinedAt: !12121)
!12121 = !DILocation(line: 112, column: 40, scope: !12107, inlinedAt: !12111)
!12122 = !DILocation(line: 348, column: 37, scope: !12055, inlinedAt: !12057)
!12123 = !DILocalVariable(name: "self", scope: !12124, file: !7859, line: 348, type: !7489, align: 8)
!12124 = !DILexicalBlockFile(scope: !12125, file: !7859, discriminator: 0)
!12125 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5229867b445db90dE", scope: !7489, file: !646, line: 453, type: !11339, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12056, retainedNodes: !12126)
!12126 = !{!12123}
!12127 = !DILocation(line: 348, column: 37, scope: !12124, inlinedAt: !12128)
!12128 = !DILocation(line: 137, column: 22, scope: !12050, inlinedAt: !12057)
!12129 = !DILocalVariable(name: "self", scope: !12130, file: !7859, line: 348, type: !7489, align: 8)
!12130 = !DILexicalBlockFile(scope: !12131, file: !7859, discriminator: 0)
!12131 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h078a6a703e08f315E", scope: !7489, file: !646, line: 330, type: !11346, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12132)
!12132 = !{!12129}
!12133 = !DILocation(line: 348, column: 37, scope: !12130, inlinedAt: !12134)
!12134 = !DILocation(line: 455, column: 41, scope: !12125, inlinedAt: !12128)
!12135 = !DILocalVariable(name: "ptr", scope: !12136, file: !7859, line: 348, type: !649, align: 8)
!12136 = !DILexicalBlockFile(scope: !12137, file: !7859, discriminator: 0)
!12137 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12138)
!12138 = !{!12135}
!12139 = !DILocation(line: 348, column: 37, scope: !12136, inlinedAt: !12140)
!12140 = !DILocation(line: 455, column: 18, scope: !12125, inlinedAt: !12128)
!12141 = !DILocalVariable(name: "self", scope: !12142, file: !7859, line: 348, type: !322, align: 8)
!12142 = !DILexicalBlockFile(scope: !12143, file: !7859, discriminator: 0)
!12143 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha4a6fb266c1c2a9eE", scope: !322, file: !1743, line: 103, type: !1744, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12144)
!12144 = !{!12141}
!12145 = !DILocation(line: 348, column: 26, scope: !12142, inlinedAt: !12146)
!12146 = !DILocation(line: 773, column: 41, scope: !12040, inlinedAt: !12043)
!12147 = !DILocalVariable(name: "self", scope: !12148, file: !7859, line: 348, type: !326, align: 8)
!12148 = !DILexicalBlockFile(scope: !12149, file: !7859, discriminator: 0)
!12149 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12150)
!12150 = !{!12147}
!12151 = !DILocation(line: 348, column: 26, scope: !12148, inlinedAt: !12152)
!12152 = !DILocation(line: 104, column: 9, scope: !12143, inlinedAt: !12146)
!12153 = !DILocalVariable(name: "ptr", scope: !12154, file: !7859, line: 348, type: !649, align: 8)
!12154 = !DILexicalBlockFile(scope: !12155, file: !7859, discriminator: 0)
!12155 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12156)
!12156 = !{!12153}
!12157 = !DILocation(line: 348, column: 26, scope: !12154, inlinedAt: !12158)
!12158 = !DILocation(line: 773, column: 18, scope: !12040, inlinedAt: !12043)
!12159 = !DILocation(line: 348, column: 50, scope: !12034)
!12160 = !DILocation(line: 348, column: 9, scope: !12034)
!12161 = !DILocation(line: 350, column: 1, scope: !12018)
!12162 = !DILocation(line: 340, column: 1, scope: !12018)
!12163 = !DILocation(line: 350, column: 2, scope: !12018)
!12164 = distinct !DISubprogram(name: "join<&str, &str>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17h867228384328236eE", scope: !12166, file: !12165, line: 643, type: !10098, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12171, retainedNodes: !12168)
!12165 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/slice.rs", directory: "", checksumkind: CSK_MD5, checksum: "a8fd291b91f3283bd7dca3e6d9be9bc7")
!12166 = !DINamespace(name: "{impl#0}", scope: !12167)
!12167 = !DINamespace(name: "slice", scope: !300)
!12168 = !{!12169, !12170}
!12169 = !DILocalVariable(name: "self", arg: 1, scope: !12164, file: !12165, line: 643, type: !2068)
!12170 = !DILocalVariable(name: "sep", arg: 2, scope: !12164, file: !12165, line: 643, type: !137)
!12171 = !{!184, !12172}
!12172 = !DITemplateTypeParameter(name: "Separator", type: !137)
!12173 = !DILocation(line: 643, column: 28, scope: !12164)
!12174 = !DILocation(line: 643, column: 35, scope: !12164)
!12175 = !DILocation(line: 647, column: 9, scope: !12164)
!12176 = !DILocation(line: 648, column: 6, scope: !12164)
!12177 = distinct !DISubprogram(name: "from_utf8", linkageName: "_ZN5alloc6string6String9from_utf817hd78bfefcdef25b62E", scope: !312, file: !306, line: 571, type: !12178, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12180)
!12178 = !DISubroutineType(types: !12179)
!12179 = !{!7230, !315}
!12180 = !{!12181, !12182}
!12181 = !DILocalVariable(name: "vec", arg: 1, scope: !12177, file: !306, line: 571, type: !315)
!12182 = !DILocalVariable(name: "e", scope: !12183, file: !306, line: 574, type: !3745, align: 8)
!12183 = distinct !DILexicalBlock(scope: !12177, file: !306, line: 574, column: 13)
!12184 = !DILocation(line: 571, column: 22, scope: !12177)
!12185 = !DILocation(line: 574, column: 17, scope: !12183)
!12186 = !DILocation(line: 572, column: 30, scope: !12177)
!12187 = !DILocalVariable(name: "self", scope: !12188, file: !306, line: 572, type: !370, align: 8)
!12188 = !DILexicalBlockFile(scope: !12189, file: !306, discriminator: 0)
!12189 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2b77cc1908e440a5E", scope: !363, file: !362, line: 2531, type: !364, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !12190)
!12190 = !{!12187}
!12191 = !DILocation(line: 572, column: 30, scope: !12188, inlinedAt: !12186)
!12192 = !DILocation(line: 576, column: 5, scope: !12177)
!12193 = !DILocalVariable(name: "data", scope: !12194, file: !306, line: 572, type: !329, align: 8)
!12194 = !DILexicalBlockFile(scope: !12195, file: !306, discriminator: 0)
!12195 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hc9808a0b8f9d77eeE", scope: !377, file: !376, line: 90, type: !379, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12196)
!12196 = !{!12193, !12197, !12198}
!12197 = !DILocalVariable(name: "len", scope: !12194, file: !306, line: 572, type: !9, align: 8)
!12198 = !DILocalVariable(name: "runtime", scope: !12199, file: !306, line: 572, type: !387, align: 8)
!12199 = !DILexicalBlockFile(scope: !12200, file: !306, discriminator: 0)
!12200 = distinct !DILexicalBlock(scope: !12195, file: !386, line: 2336, column: 13)
!12201 = !DILocation(line: 572, column: 30, scope: !12194, inlinedAt: !12202)
!12202 = !DILocation(line: 2532, column: 18, scope: !12189, inlinedAt: !12186)
!12203 = !DILocalVariable(name: "data", scope: !12204, file: !306, line: 572, type: !329, align: 8)
!12204 = !DILexicalBlockFile(scope: !12205, file: !306, discriminator: 0)
!12205 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6a66992555506ab5E", scope: !43, file: !399, line: 695, type: !400, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12206)
!12206 = !{!12203, !12207}
!12207 = !DILocalVariable(name: "len", scope: !12204, file: !306, line: 572, type: !9, align: 8)
!12208 = !DILocation(line: 572, column: 30, scope: !12204, inlinedAt: !12209)
!12209 = !DILocation(line: 97, column: 11, scope: !12195, inlinedAt: !12202)
!12210 = !DILocalVariable(name: "self", scope: !12211, file: !306, line: 572, type: !329, align: 8)
!12211 = !DILexicalBlockFile(scope: !12212, file: !306, discriminator: 0)
!12212 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb951d44ade26c9c5E", scope: !414, file: !413, line: 46, type: !416, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !12213)
!12213 = !{!12210}
!12214 = !DILocation(line: 572, column: 30, scope: !12211, inlinedAt: !12215)
!12215 = !DILocation(line: 696, column: 20, scope: !12205, inlinedAt: !12209)
!12216 = !DILocalVariable(name: "data_address", scope: !12217, file: !306, line: 572, type: !6, align: 8)
!12217 = !DILexicalBlockFile(scope: !12218, file: !306, discriminator: 0)
!12218 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h9dc36a19d85d94baE", scope: !427, file: !426, line: 110, type: !428, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12219)
!12219 = !{!12216, !12220}
!12220 = !DILocalVariable(name: "metadata", scope: !12217, file: !306, line: 572, type: !9, align: 8)
!12221 = !DILocation(line: 572, column: 30, scope: !12217, inlinedAt: !12222)
!12222 = !DILocation(line: 696, column: 5, scope: !12205, inlinedAt: !12209)
!12223 = !DILocation(line: 572, column: 15, scope: !12177)
!12224 = !DILocation(line: 572, column: 9, scope: !12177)
!12225 = !DILocation(line: 571, column: 5, scope: !12177)
!12226 = !DILocation(line: 573, column: 35, scope: !12177)
!12227 = !DILocation(line: 573, column: 26, scope: !12177)
!12228 = !DILocation(line: 573, column: 23, scope: !12177)
!12229 = !DILocation(line: 573, column: 40, scope: !12177)
!12230 = !DILocation(line: 574, column: 17, scope: !12177)
!12231 = !DILocation(line: 574, column: 50, scope: !12183)
!12232 = !DILocation(line: 574, column: 62, scope: !12183)
!12233 = !DILocation(line: 574, column: 27, scope: !12183)
!12234 = !DILocation(line: 574, column: 23, scope: !12183)
!12235 = !DILocation(line: 574, column: 65, scope: !12177)
!12236 = !DILocation(line: 576, column: 6, scope: !12177)
!12237 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17hbe07facdea092d41E", scope: !299, file: !9588, line: 448, type: !12238, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12311, retainedNodes: !12258)
!12238 = !DISubroutineType(types: !12239)
!12239 = !{!7503, !5516, !12240, !12257}
!12240 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !177, file: !2, size: 192, align: 64, elements: !12241, templateParams: !23, identifier: "2441bf159aec13ad0ba597f59aeb1a1")
!12241 = !{!12242}
!12242 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12240, file: !2, size: 192, align: 64, elements: !12243, templateParams: !23, identifier: "d785942d6e728cf8ed28d4d1a571b7a3", discriminator: !12256)
!12243 = !{!12244, !12252}
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !12242, file: !2, baseType: !12245, size: 192, align: 64, extraData: i64 0)
!12245 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !12240, file: !2, size: 192, align: 64, elements: !23, templateParams: !12246, identifier: "4d71821a6a04b7dadd5f931d25e98cb2")
!12246 = !{!12247}
!12247 = !DITemplateTypeParameter(name: "T", type: !12248)
!12248 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !12249, templateParams: !23, identifier: "c358a41279bc49b48121f0f71b1b3c8")
!12249 = !{!12250, !12251}
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12248, file: !2, baseType: !326, size: 64, align: 64)
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12248, file: !2, baseType: !1779, size: 128, align: 64, offset: 64)
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !12242, file: !2, baseType: !12253, size: 192, align: 64)
!12253 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !12240, file: !2, size: 192, align: 64, elements: !12254, templateParams: !12246, identifier: "3a54c5b1a06a194b358330f440d65fe5")
!12254 = !{!12255}
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12253, file: !2, baseType: !12248, size: 192, align: 64)
!12256 = !DIDerivedType(tag: DW_TAG_member, scope: !12240, file: !2, baseType: !190, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!12257 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !336, size: 64, align: 64, dwarfAddressSpace: 0)
!12258 = !{!12259, !12260, !12261, !12262, !12264, !12279, !12281, !12296, !12298, !12300, !12302, !12303, !12307, !12308}
!12259 = !DILocalVariable(name: "new_layout", arg: 1, scope: !12237, file: !9588, line: 449, type: !5516)
!12260 = !DILocalVariable(name: "current_memory", arg: 2, scope: !12237, file: !9588, line: 450, type: !12240)
!12261 = !DILocalVariable(name: "alloc", arg: 3, scope: !12237, file: !9588, line: 451, type: !12257)
!12262 = !DILocalVariable(name: "new_layout", scope: !12263, file: !9588, line: 457, type: !1779, align: 8)
!12263 = distinct !DILexicalBlock(scope: !12237, file: !9588, line: 457, column: 5)
!12264 = !DILocalVariable(name: "residual", scope: !12265, file: !9588, line: 457, type: !12266, align: 8)
!12265 = distinct !DILexicalBlock(scope: !12237, file: !9588, line: 457, column: 62)
!12266 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !2134, file: !2, size: 128, align: 64, elements: !12267, templateParams: !23, identifier: "5ef5f21a6f46a0206241b0c7f330dfa3")
!12267 = !{!12268}
!12268 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12266, file: !2, size: 128, align: 64, elements: !12269, templateParams: !23, identifier: "cb4858a3f71ae3f451b3ee0e26a669a0")
!12269 = !{!12270, !12275}
!12270 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12268, file: !2, baseType: !12271, size: 128, align: 64)
!12271 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12266, file: !2, size: 128, align: 64, elements: !12272, templateParams: !12274, identifier: "416344365d509c704ad8ffe5dcfb70fa")
!12272 = !{!12273}
!12273 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12271, file: !2, baseType: !4077, align: 8)
!12274 = !{!4076, !7448}
!12275 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12268, file: !2, baseType: !12276, size: 128, align: 64)
!12276 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12266, file: !2, size: 128, align: 64, elements: !12277, templateParams: !12274, identifier: "554770741a2c8057e7f8529a99308bf0")
!12277 = !{!12278}
!12278 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12276, file: !2, baseType: !1769, size: 128, align: 64)
!12279 = !DILocalVariable(name: "val", scope: !12280, file: !9588, line: 457, type: !1779, align: 8)
!12280 = distinct !DILexicalBlock(scope: !12237, file: !9588, line: 457, column: 22)
!12281 = !DILocalVariable(name: "residual", scope: !12282, file: !9588, line: 459, type: !12283, align: 8)
!12282 = distinct !DILexicalBlock(scope: !12263, file: !9588, line: 459, column: 35)
!12283 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !2134, file: !2, size: 128, align: 64, elements: !12284, templateParams: !23, identifier: "c0cf86a3acbcbe62e1045ffe1b8697")
!12284 = !{!12285}
!12285 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12283, file: !2, size: 128, align: 64, elements: !12286, templateParams: !23, identifier: "542941ded386c5d0b8832b89b5bc0159")
!12286 = !{!12287, !12292}
!12287 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12285, file: !2, baseType: !12288, size: 128, align: 64)
!12288 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12283, file: !2, size: 128, align: 64, elements: !12289, templateParams: !12291, identifier: "172bc5836ee47c35d518a78511939b12")
!12289 = !{!12290}
!12290 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12288, file: !2, baseType: !4077, align: 8)
!12291 = !{!4076, !7512}
!12292 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12285, file: !2, baseType: !12293, size: 128, align: 64)
!12293 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12283, file: !2, size: 128, align: 64, elements: !12294, templateParams: !12291, identifier: "adf3f686a95f61b9c3558b4df539adb8")
!12294 = !{!12295}
!12295 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12293, file: !2, baseType: !1766, size: 128, align: 64)
!12296 = !DILocalVariable(name: "val", scope: !12297, file: !9588, line: 459, type: !7, align: 1)
!12297 = distinct !DILexicalBlock(scope: !12263, file: !9588, line: 459, column: 5)
!12298 = !DILocalVariable(name: "memory", scope: !12299, file: !9588, line: 461, type: !7481, align: 8)
!12299 = distinct !DILexicalBlock(scope: !12263, file: !9588, line: 461, column: 5)
!12300 = !DILocalVariable(name: "ptr", scope: !12301, file: !9588, line: 461, type: !326, align: 8)
!12301 = distinct !DILexicalBlock(scope: !12263, file: !9588, line: 461, column: 66)
!12302 = !DILocalVariable(name: "old_layout", scope: !12301, file: !9588, line: 461, type: !1779, align: 8)
!12303 = !DILocalVariable(name: "left_val", scope: !12304, file: !9588, line: 462, type: !393, align: 8)
!12304 = !DILexicalBlockFile(scope: !12305, file: !9588, discriminator: 0)
!12305 = distinct !DILexicalBlock(scope: !12301, file: !12306, line: 39, column: 13)
!12306 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "92818cc67b0fce20f16574f7676a5426")
!12307 = !DILocalVariable(name: "right_val", scope: !12304, file: !9588, line: 462, type: !393, align: 8)
!12308 = !DILocalVariable(name: "kind", scope: !12309, file: !9588, line: 462, type: !292, align: 1)
!12309 = !DILexicalBlockFile(scope: !12310, file: !9588, discriminator: 0)
!12310 = distinct !DILexicalBlock(scope: !12305, file: !12306, line: 41, column: 21)
!12311 = !{!339}
!12312 = !DILocation(line: 449, column: 5, scope: !12237)
!12313 = !DILocation(line: 450, column: 5, scope: !12237)
!12314 = !DILocation(line: 451, column: 5, scope: !12237)
!12315 = !DILocation(line: 457, column: 9, scope: !12263)
!12316 = !DILocalVariable(name: "self", scope: !12317, file: !9588, line: 457, type: !7439, align: 8)
!12317 = !DILexicalBlockFile(scope: !12318, file: !9588, discriminator: 0)
!12318 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hbb1fdd47108d3591E", scope: !5611, file: !5292, line: 2117, type: !12319, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7447, retainedNodes: !12337)
!12319 = !DISubroutineType(types: !12320)
!12320 = !{!12321, !7439}
!12321 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !4109, file: !2, size: 192, align: 64, elements: !12322, templateParams: !23, identifier: "30c77f8de40d27cc25bb1f117e102368")
!12322 = !{!12323}
!12323 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12321, file: !2, size: 192, align: 64, elements: !12324, templateParams: !23, identifier: "873dd87a14009e5aa4571f77c2255abd", discriminator: !12336)
!12324 = !{!12325, !12332}
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !12323, file: !2, baseType: !12326, size: 192, align: 64, extraData: i64 0)
!12326 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !12321, file: !2, size: 192, align: 64, elements: !12327, templateParams: !12329, identifier: "44b658dc6aeebfb637fc0f71177a37ae")
!12327 = !{!12328}
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12326, file: !2, baseType: !1779, size: 128, align: 64, offset: 64)
!12329 = !{!12330, !12331}
!12330 = !DITemplateTypeParameter(name: "B", type: !12266)
!12331 = !DITemplateTypeParameter(name: "C", type: !1779)
!12332 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !12323, file: !2, baseType: !12333, size: 192, align: 64, extraData: i64 1)
!12333 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !12321, file: !2, size: 192, align: 64, elements: !12334, templateParams: !12329, identifier: "a45e3c8f49f3878b531df9d7bb0c1ddb")
!12334 = !{!12335}
!12335 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12333, file: !2, baseType: !12266, size: 128, align: 64, offset: 64)
!12336 = !DIDerivedType(tag: DW_TAG_member, scope: !12321, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!12337 = !{!12316, !12338, !12341}
!12338 = !DILocalVariable(name: "v", scope: !12339, file: !9588, line: 457, type: !1779, align: 8)
!12339 = !DILexicalBlockFile(scope: !12340, file: !9588, discriminator: 0)
!12340 = distinct !DILexicalBlock(scope: !12318, file: !5292, line: 2119, column: 13)
!12341 = !DILocalVariable(name: "e", scope: !12342, file: !9588, line: 457, type: !1769, align: 8)
!12342 = !DILexicalBlockFile(scope: !12343, file: !9588, discriminator: 0)
!12343 = distinct !DILexicalBlock(scope: !12318, file: !5292, line: 2120, column: 13)
!12344 = !DILocation(line: 457, column: 22, scope: !12317, inlinedAt: !12345)
!12345 = !DILocation(line: 457, column: 22, scope: !12237)
!12346 = !DILocalVariable(name: "residual", scope: !12347, file: !9588, line: 457, type: !12266, align: 8)
!12347 = !DILexicalBlockFile(scope: !12348, file: !9588, discriminator: 0)
!12348 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbe295a94df225bc3E", scope: !5293, file: !5292, line: 2132, type: !12349, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12355, retainedNodes: !12351)
!12349 = !DISubroutineType(types: !12350)
!12350 = !{!7503, !12266, !344}
!12351 = !{!12346, !12352}
!12352 = !DILocalVariable(name: "e", scope: !12353, file: !9588, line: 457, type: !1769, align: 8)
!12353 = !DILexicalBlockFile(scope: !12354, file: !9588, discriminator: 0)
!12354 = distinct !DILexicalBlock(scope: !12348, file: !5292, line: 2134, column: 13)
!12355 = !{!7493, !7448, !7530}
!12356 = !DILocation(line: 457, column: 22, scope: !12347, inlinedAt: !12357)
!12357 = !DILocation(line: 457, column: 22, scope: !12265)
!12358 = !DILocalVariable(name: "self", scope: !12359, file: !9588, line: 459, type: !7547, align: 8)
!12359 = !DILexicalBlockFile(scope: !12360, file: !9588, discriminator: 0)
!12360 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hff82a3ef98c11aedE", scope: !5611, file: !5292, line: 2117, type: !12361, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7555, retainedNodes: !12378)
!12361 = !DISubroutineType(types: !12362)
!12362 = !{!12363, !7547}
!12363 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !4109, file: !2, size: 128, align: 64, elements: !12364, templateParams: !23, identifier: "dd182185d8f5b2b7cb5665cc5c5ccb07")
!12364 = !{!12365}
!12365 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12363, file: !2, size: 128, align: 64, elements: !12366, templateParams: !23, identifier: "57751adeae8e77576883f29d0a97ac09", discriminator: !12377)
!12366 = !{!12367, !12373}
!12367 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !12365, file: !2, baseType: !12368, size: 128, align: 64, extraData: i64 -9223372036854775807)
!12368 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !12363, file: !2, size: 128, align: 64, elements: !12369, templateParams: !12371, identifier: "35a87d623a367fdaec857f7d914f3ad9")
!12369 = !{!12370}
!12370 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12368, file: !2, baseType: !7, align: 8)
!12371 = !{!12372, !5352}
!12372 = !DITemplateTypeParameter(name: "B", type: !12283)
!12373 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !12365, file: !2, baseType: !12374, size: 128, align: 64)
!12374 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !12363, file: !2, size: 128, align: 64, elements: !12375, templateParams: !12371, identifier: "f5790c13a1dcecaf1cf858de99ad1734")
!12375 = !{!12376}
!12376 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12374, file: !2, baseType: !12283, size: 128, align: 64)
!12377 = !DIDerivedType(tag: DW_TAG_member, scope: !12363, file: !2, baseType: !190, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!12378 = !{!12358, !12379, !12382}
!12379 = !DILocalVariable(name: "v", scope: !12380, file: !9588, line: 459, type: !7, align: 1)
!12380 = !DILexicalBlockFile(scope: !12381, file: !9588, discriminator: 0)
!12381 = distinct !DILexicalBlock(scope: !12360, file: !5292, line: 2119, column: 13)
!12382 = !DILocalVariable(name: "e", scope: !12383, file: !9588, line: 459, type: !1766, align: 8)
!12383 = !DILexicalBlockFile(scope: !12384, file: !9588, discriminator: 0)
!12384 = distinct !DILexicalBlock(scope: !12360, file: !5292, line: 2120, column: 13)
!12385 = !DILocation(line: 459, column: 5, scope: !12359, inlinedAt: !12386)
!12386 = !DILocation(line: 459, column: 5, scope: !12263)
!12387 = !DILocalVariable(name: "residual", scope: !12388, file: !9588, line: 459, type: !12283, align: 8)
!12388 = !DILexicalBlockFile(scope: !12389, file: !9588, discriminator: 0)
!12389 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h2c867d0df4e2c946E", scope: !5293, file: !5292, line: 2132, type: !12390, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12396, retainedNodes: !12392)
!12390 = !DISubroutineType(types: !12391)
!12391 = !{!7503, !12283, !344}
!12392 = !{!12387, !12393}
!12393 = !DILocalVariable(name: "e", scope: !12394, file: !9588, line: 459, type: !1766, align: 8)
!12394 = !DILexicalBlockFile(scope: !12395, file: !9588, discriminator: 0)
!12395 = distinct !DILexicalBlock(scope: !12389, file: !5292, line: 2134, column: 13)
!12396 = !{!7493, !7512, !7530}
!12397 = !DILocation(line: 459, column: 5, scope: !12388, inlinedAt: !12398)
!12398 = !DILocation(line: 459, column: 5, scope: !12282)
!12399 = !DILocation(line: 459, column: 5, scope: !12297)
!12400 = !DILocation(line: 461, column: 9, scope: !12299)
!12401 = !DILocation(line: 461, column: 36, scope: !12301)
!12402 = !DILocation(line: 459, column: 5, scope: !12380, inlinedAt: !12386)
!12403 = !DILocalVariable(name: "self", scope: !12404, file: !9588, line: 465, type: !5542, align: 8)
!12404 = !DILexicalBlockFile(scope: !12405, file: !9588, discriminator: 0)
!12405 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12406)
!12406 = !{!12403}
!12407 = !DILocation(line: 465, column: 32, scope: !12404, inlinedAt: !12408)
!12408 = !DILocation(line: 131, column: 9, scope: !12409, inlinedAt: !12413)
!12409 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h3e0d62183062772bE", scope: !1779, file: !5505, line: 130, type: !10762, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12410)
!12410 = !{!12411}
!12411 = !DILocalVariable(name: "self", scope: !12412, file: !9588, line: 465, type: !7521, align: 8)
!12412 = !DILexicalBlockFile(scope: !12409, file: !9588, discriminator: 0)
!12413 = !DILocation(line: 465, column: 32, scope: !12301)
!12414 = !DILocalVariable(name: "self", scope: !12415, file: !9588, line: 465, type: !1785, align: 8)
!12415 = !DILexicalBlockFile(scope: !12416, file: !9588, discriminator: 0)
!12416 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12417)
!12417 = !{!12414}
!12418 = !DILocation(line: 465, column: 32, scope: !12415, inlinedAt: !12408)
!12419 = !DILocalVariable(name: "self", scope: !12420, file: !9588, line: 465, type: !5542, align: 8)
!12420 = !DILexicalBlockFile(scope: !12421, file: !9588, discriminator: 0)
!12421 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12422)
!12422 = !{!12419}
!12423 = !DILocation(line: 465, column: 54, scope: !12420, inlinedAt: !12424)
!12424 = !DILocation(line: 131, column: 9, scope: !12425, inlinedAt: !12429)
!12425 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h3e0d62183062772bE", scope: !1779, file: !5505, line: 130, type: !10762, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12426)
!12426 = !{!12427}
!12427 = !DILocalVariable(name: "self", scope: !12428, file: !9588, line: 465, type: !7521, align: 8)
!12428 = !DILexicalBlockFile(scope: !12425, file: !9588, discriminator: 0)
!12429 = !DILocation(line: 465, column: 54, scope: !12301)
!12430 = !DILocalVariable(name: "self", scope: !12431, file: !9588, line: 465, type: !1785, align: 8)
!12431 = !DILexicalBlockFile(scope: !12432, file: !9588, discriminator: 0)
!12432 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12433)
!12433 = !{!12430}
!12434 = !DILocation(line: 465, column: 54, scope: !12431, inlinedAt: !12424)
!12435 = !DILocation(line: 457, column: 22, scope: !12339, inlinedAt: !12345)
!12436 = !DILocation(line: 457, column: 22, scope: !12342, inlinedAt: !12345)
!12437 = !DILocation(line: 457, column: 22, scope: !12280)
!12438 = !DILocation(line: 459, column: 5, scope: !12439, inlinedAt: !12386)
!12439 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17h33f97db4aab9185fE", scope: !299, file: !9588, line: 505, type: !12440, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12442)
!12440 = !DISubroutineType(types: !12441)
!12441 = !{!7547, !9}
!12442 = !{!12443}
!12443 = !DILocalVariable(name: "alloc_size", scope: !12439, file: !9588, line: 459, type: !9, align: 8)
!12444 = !DILocation(line: 457, column: 62, scope: !12237)
!12445 = !DILocation(line: 457, column: 62, scope: !12265)
!12446 = !DILocation(line: 457, column: 22, scope: !12353, inlinedAt: !12357)
!12447 = !DILocalVariable(name: "kind", scope: !12448, file: !9588, line: 457, type: !1769, align: 8)
!12448 = !DILexicalBlockFile(scope: !12449, file: !9588, discriminator: 0)
!12449 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h546a7d4f068a885bE", scope: !1763, file: !1762, line: 116, type: !1764, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12450)
!12450 = !{!12447}
!12451 = !DILocation(line: 457, column: 22, scope: !12448, inlinedAt: !12452)
!12452 = !DILocation(line: 2134, column: 27, scope: !12354, inlinedAt: !12357)
!12453 = !DILocation(line: 1, column: 1, scope: !12454)
!12454 = !DILexicalBlockFile(scope: !12237, file: !4178, discriminator: 0)
!12455 = !DILocation(line: 473, column: 2, scope: !12237)
!12456 = !DILocation(line: 459, column: 5, scope: !12383, inlinedAt: !12386)
!12457 = !DILocation(line: 461, column: 25, scope: !12301)
!12458 = !DILocation(line: 459, column: 35, scope: !12263)
!12459 = !DILocation(line: 459, column: 35, scope: !12282)
!12460 = !DILocation(line: 459, column: 5, scope: !12394, inlinedAt: !12398)
!12461 = !DILocation(line: 1, column: 1, scope: !12462)
!12462 = !DILexicalBlockFile(scope: !12263, file: !4178, discriminator: 0)
!12463 = !DILocation(line: 461, column: 31, scope: !12301)
!12464 = !DILocation(line: 465, column: 32, scope: !12412, inlinedAt: !12413)
!12465 = !DILocalVariable(name: "n", scope: !12466, file: !9588, line: 465, type: !9, align: 8)
!12466 = !DILexicalBlockFile(scope: !12467, file: !9588, discriminator: 0)
!12467 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12468)
!12468 = !{!12465, !12469}
!12469 = !DILocalVariable(name: "runtime", scope: !12470, file: !9588, line: 465, type: !5569, align: 8)
!12470 = !DILexicalBlockFile(scope: !12471, file: !9588, discriminator: 0)
!12471 = distinct !DILexicalBlock(scope: !12467, file: !386, line: 2336, column: 13)
!12472 = !DILocation(line: 465, column: 32, scope: !12466, inlinedAt: !12473)
!12473 = !DILocation(line: 41, column: 18, scope: !12416, inlinedAt: !12408)
!12474 = !DILocation(line: 465, column: 54, scope: !12428, inlinedAt: !12429)
!12475 = !DILocalVariable(name: "n", scope: !12476, file: !9588, line: 465, type: !9, align: 8)
!12476 = !DILexicalBlockFile(scope: !12477, file: !9588, discriminator: 0)
!12477 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12478)
!12478 = !{!12475, !12479}
!12479 = !DILocalVariable(name: "runtime", scope: !12480, file: !9588, line: 465, type: !5569, align: 8)
!12480 = !DILexicalBlockFile(scope: !12481, file: !9588, discriminator: 0)
!12481 = distinct !DILexicalBlock(scope: !12477, file: !386, line: 2336, column: 13)
!12482 = !DILocation(line: 465, column: 54, scope: !12476, inlinedAt: !12483)
!12483 = !DILocation(line: 41, column: 18, scope: !12432, inlinedAt: !12424)
!12484 = !DILocation(line: 465, column: 13, scope: !12301)
!12485 = !DILocation(line: 469, column: 24, scope: !12263)
!12486 = !DILocation(line: 469, column: 9, scope: !12263)
!12487 = !DILocation(line: 461, column: 18, scope: !12263)
!12488 = !DILocation(line: 472, column: 5, scope: !12299)
!12489 = !DILocation(line: 472, column: 20, scope: !12299)
!12490 = !DILocation(line: 466, column: 29, scope: !12301)
!12491 = !DILocation(line: 466, column: 41, scope: !12301)
!12492 = !DILocation(line: 466, column: 13, scope: !12301)
!12493 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h07e7c4c910121c76E", scope: !7455, file: !9588, line: 457, type: !12494, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12311, retainedNodes: !12496)
!12494 = !DISubroutineType(types: !12495)
!12495 = !{!1769, !7454, !5527}
!12496 = !{!12497, !12498}
!12497 = !DILocalVariable(arg: 1, scope: !12493, file: !9588, line: 457, type: !7454)
!12498 = !DILocalVariable(arg: 2, scope: !12493, file: !9588, line: 457, type: !5527)
!12499 = !DILocation(line: 457, column: 41, scope: !12493)
!12500 = !DILocation(line: 457, column: 42, scope: !12493)
!12501 = !DILocation(line: 457, column: 45, scope: !12493)
!12502 = !DILocation(line: 457, column: 44, scope: !12493)
!12503 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h3934b48ad60c67afE", scope: !7455, file: !9588, line: 472, type: !12504, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12311, retainedNodes: !12506)
!12504 = !DISubroutineType(types: !12505)
!12505 = !{!1766, !7518, !7495}
!12506 = !{!12507, !12508}
!12507 = !DILocalVariable(name: "new_layout", scope: !12503, file: !9588, line: 457, type: !1779, align: 8)
!12508 = !DILocalVariable(arg: 2, scope: !12503, file: !9588, line: 472, type: !7495)
!12509 = !DILocation(line: 457, column: 9, scope: !12503)
!12510 = !DILocation(line: 472, column: 21, scope: !12503)
!12511 = !DILocation(line: 472, column: 45, scope: !12503)
!12512 = !DILocation(line: 472, column: 24, scope: !12503)
!12513 = !DILocation(line: 472, column: 23, scope: !12503)
!12514 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17h794891bae32dc8a6E", scope: !299, file: !9588, line: 487, type: !12515, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12517)
!12515 = !DISubroutineType(types: !12516)
!12516 = !{null, !7547}
!12517 = !{!12518, !12519}
!12518 = !DILocalVariable(name: "result", arg: 1, scope: !12514, file: !9588, line: 487, type: !7547)
!12519 = !DILocalVariable(name: "layout", scope: !12520, file: !9588, line: 490, type: !1779, align: 8)
!12520 = distinct !DILexicalBlock(scope: !12514, file: !9588, line: 490, column: 9)
!12521 = !DILocation(line: 487, column: 19, scope: !12514)
!12522 = !DILocation(line: 488, column: 11, scope: !12514)
!12523 = !DILocation(line: 488, column: 5, scope: !12514)
!12524 = !DILocation(line: 493, column: 2, scope: !12514)
!12525 = !DILocation(line: 489, column: 34, scope: !12514)
!12526 = !DILocation(line: 490, column: 26, scope: !12514)
!12527 = !DILocation(line: 490, column: 26, scope: !12520)
!12528 = !DILocation(line: 490, column: 43, scope: !12520)
!12529 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h647e2068a8dc7d5bE", scope: !7578, file: !9588, line: 488, type: !12530, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12532)
!12530 = !DISubroutineType(types: !12531)
!12531 = !{!1769, !7577, !1766}
!12532 = !{!12533, !12534}
!12533 = !DILocalVariable(name: "e", arg: 2, scope: !12529, file: !9588, line: 488, type: !1766)
!12534 = !DILocalVariable(arg: 1, scope: !12529, file: !9588, line: 488, type: !7577)
!12535 = !DILocation(line: 488, column: 26, scope: !12529)
!12536 = !DILocation(line: 488, column: 27, scope: !12529)
!12537 = !DILocation(line: 488, column: 30, scope: !12529)
!12538 = !DILocalVariable(name: "self", scope: !12539, file: !9588, line: 488, type: !12543, align: 8)
!12539 = !DILexicalBlockFile(scope: !12540, file: !9588, discriminator: 0)
!12540 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17he6e3fd4d0bb9b97fE", scope: !1766, file: !1762, line: 74, type: !12541, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12544)
!12541 = !DISubroutineType(types: !12542)
!12542 = !{!1769, !12543}
!12543 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !1766, size: 64, align: 64, dwarfAddressSpace: 0)
!12544 = !{!12538}
!12545 = !DILocation(line: 488, column: 30, scope: !12539, inlinedAt: !12537)
!12546 = !DILocalVariable(name: "self", scope: !12547, file: !9588, line: 488, type: !12552, align: 8)
!12547 = !DILexicalBlockFile(scope: !12548, file: !9588, discriminator: 0)
!12548 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h76869ebefb4e6c69E", scope: !12549, file: !1762, line: 80, type: !12550, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12553)
!12549 = !DINamespace(name: "{impl#10}", scope: !1308)
!12550 = !DISubroutineType(types: !12551)
!12551 = !{!1769, !12552}
!12552 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !1769, size: 64, align: 64, dwarfAddressSpace: 0)
!12553 = !{!12546, !12554, !12557}
!12554 = !DILocalVariable(name: "__self_0", scope: !12555, file: !9588, line: 488, type: !7521, align: 8)
!12555 = !DILexicalBlockFile(scope: !12556, file: !9588, discriminator: 0)
!12556 = distinct !DILexicalBlock(scope: !12548, file: !1762, line: 80, column: 10)
!12557 = !DILocalVariable(name: "__self_1", scope: !12555, file: !9588, line: 488, type: !12558, align: 8)
!12558 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!12559 = !DILocation(line: 488, column: 30, scope: !12547, inlinedAt: !12560)
!12560 = !DILocation(line: 75, column: 9, scope: !12540, inlinedAt: !12537)
!12561 = !DILocation(line: 488, column: 30, scope: !12555, inlinedAt: !12560)
!12562 = !DILocalVariable(name: "self", scope: !12563, file: !9588, line: 488, type: !7521, align: 8)
!12563 = !DILexicalBlockFile(scope: !12564, file: !9588, discriminator: 0)
!12564 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h230c6f07dfbe5051E", scope: !12565, file: !5505, line: 35, type: !12566, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12568)
!12565 = !DINamespace(name: "{impl#3}", scope: !1780)
!12566 = !DISubroutineType(types: !12567)
!12567 = !{!1779, !7521}
!12568 = !{!12562}
!12569 = !DILocation(line: 488, column: 30, scope: !12563, inlinedAt: !12570)
!12570 = !DILocation(line: 94, column: 9, scope: !12556, inlinedAt: !12560)
!12571 = !DILocation(line: 488, column: 29, scope: !12529)
!12572 = distinct !DISubprogram(name: "allocate_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17hdee41fa7d0ae0decE", scope: !319, file: !9588, line: 169, type: !12573, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !12575)
!12573 = !DISubroutineType(types: !12574)
!12574 = !{!319, !9, !298, !336}
!12575 = !{!12576, !12577, !12578, !12579, !12581, !12583, !12585, !12587}
!12576 = !DILocalVariable(name: "capacity", arg: 1, scope: !12572, file: !9588, line: 169, type: !9)
!12577 = !DILocalVariable(name: "init", arg: 2, scope: !12572, file: !9588, line: 169, type: !298)
!12578 = !DILocalVariable(name: "alloc", arg: 3, scope: !12572, file: !9588, line: 169, type: !336)
!12579 = !DILocalVariable(name: "layout", scope: !12580, file: !9588, line: 176, type: !1779, align: 8)
!12580 = distinct !DILexicalBlock(scope: !12572, file: !9588, line: 176, column: 13)
!12581 = !DILocalVariable(name: "layout", scope: !12582, file: !9588, line: 177, type: !1779, align: 8)
!12582 = distinct !DILexicalBlock(scope: !12572, file: !9588, line: 177, column: 17)
!12583 = !DILocalVariable(name: "result", scope: !12584, file: !9588, line: 184, type: !7481, align: 8)
!12584 = distinct !DILexicalBlock(scope: !12580, file: !9588, line: 184, column: 13)
!12585 = !DILocalVariable(name: "ptr", scope: !12586, file: !9588, line: 188, type: !7489, align: 8)
!12586 = distinct !DILexicalBlock(scope: !12584, file: !9588, line: 188, column: 13)
!12587 = !DILocalVariable(name: "ptr", scope: !12588, file: !9588, line: 189, type: !7489, align: 8)
!12588 = distinct !DILexicalBlock(scope: !12584, file: !9588, line: 189, column: 17)
!12589 = !DILocation(line: 169, column: 20, scope: !12572)
!12590 = !DILocation(line: 169, column: 37, scope: !12572)
!12591 = !DILocation(line: 169, column: 54, scope: !12572)
!12592 = !DILocation(line: 184, column: 17, scope: !12584)
!12593 = !DILocalVariable(name: "self", scope: !12594, file: !9588, line: 197, type: !326, align: 8)
!12594 = !DILexicalBlockFile(scope: !12595, file: !9588, discriminator: 0)
!12595 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12596)
!12596 = !{!12593}
!12597 = !DILocation(line: 197, column: 53, scope: !12594, inlinedAt: !12598)
!12598 = !DILocation(line: 197, column: 53, scope: !12586)
!12599 = !DILocation(line: 171, column: 12, scope: !12572)
!12600 = !DILocation(line: 171, column: 40, scope: !12572)
!12601 = !DILocation(line: 176, column: 32, scope: !12572)
!12602 = !DILocation(line: 172, column: 26, scope: !12572)
!12603 = !DILocation(line: 172, column: 13, scope: !12572)
!12604 = !DILocation(line: 202, column: 5, scope: !12572)
!12605 = !DILocation(line: 171, column: 9, scope: !12572)
!12606 = !DILocation(line: 202, column: 6, scope: !12572)
!12607 = !DILocation(line: 176, column: 26, scope: !12572)
!12608 = !DILocation(line: 177, column: 20, scope: !12572)
!12609 = !DILocation(line: 177, column: 20, scope: !12582)
!12610 = !DILocation(line: 177, column: 31, scope: !12582)
!12611 = !DILocation(line: 176, column: 17, scope: !12580)
!12612 = !DILocation(line: 180, column: 19, scope: !12613, inlinedAt: !12616)
!12613 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17h33f97db4aab9185fE", scope: !299, file: !9588, line: 505, type: !12440, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12614)
!12614 = !{!12615}
!12615 = !DILocalVariable(name: "alloc_size", scope: !12613, file: !9588, line: 180, type: !9, align: 8)
!12616 = !DILocation(line: 180, column: 19, scope: !12580)
!12617 = !DILocation(line: 180, column: 13, scope: !12580)
!12618 = !DILocation(line: 178, column: 27, scope: !12572)
!12619 = !DILocation(line: 184, column: 32, scope: !12580)
!12620 = !DILocation(line: 184, column: 26, scope: !12580)
!12621 = !DILocation(line: 182, column: 27, scope: !12580)
!12622 = !DILocation(line: 185, column: 45, scope: !12580)
!12623 = !DILocation(line: 186, column: 38, scope: !12580)
!12624 = !DILocation(line: 186, column: 66, scope: !12580)
!12625 = !DILocation(line: 188, column: 29, scope: !12584)
!12626 = !DILocation(line: 188, column: 23, scope: !12584)
!12627 = !DILocation(line: 185, column: 66, scope: !12580)
!12628 = !DILocation(line: 189, column: 20, scope: !12584)
!12629 = !DILocation(line: 189, column: 20, scope: !12588)
!12630 = !DILocation(line: 189, column: 28, scope: !12588)
!12631 = !DILocation(line: 188, column: 17, scope: !12586)
!12632 = !DILocalVariable(name: "self", scope: !12633, file: !9588, line: 197, type: !7489, align: 8)
!12633 = !DILexicalBlockFile(scope: !12634, file: !9588, discriminator: 0)
!12634 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5229867b445db90dE", scope: !7489, file: !646, line: 453, type: !11339, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12056, retainedNodes: !12635)
!12635 = !{!12632}
!12636 = !DILocation(line: 197, column: 53, scope: !12633, inlinedAt: !12598)
!12637 = !DILocalVariable(name: "self", scope: !12638, file: !9588, line: 197, type: !7489, align: 8)
!12638 = !DILexicalBlockFile(scope: !12639, file: !9588, discriminator: 0)
!12639 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h078a6a703e08f315E", scope: !7489, file: !646, line: 330, type: !11346, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12640)
!12640 = !{!12637}
!12641 = !DILocation(line: 197, column: 53, scope: !12638, inlinedAt: !12642)
!12642 = !DILocation(line: 455, column: 41, scope: !12634, inlinedAt: !12598)
!12643 = !DILocalVariable(name: "ptr", scope: !12644, file: !9588, line: 197, type: !649, align: 8)
!12644 = !DILexicalBlockFile(scope: !12645, file: !9588, discriminator: 0)
!12645 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12646)
!12646 = !{!12643}
!12647 = !DILocation(line: 197, column: 53, scope: !12644, inlinedAt: !12648)
!12648 = !DILocation(line: 455, column: 18, scope: !12634, inlinedAt: !12598)
!12649 = !DILocalVariable(name: "ptr", scope: !12650, file: !9588, line: 197, type: !649, align: 8)
!12650 = !DILexicalBlockFile(scope: !12651, file: !9588, discriminator: 0)
!12651 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h76dc1591046a42dbE", scope: !322, file: !1743, line: 85, type: !12652, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12654)
!12652 = !DISubroutineType(types: !12653)
!12653 = !{!322, !649}
!12654 = !{!12649}
!12655 = !DILocation(line: 197, column: 31, scope: !12650, inlinedAt: !12656)
!12656 = !DILocation(line: 197, column: 31, scope: !12586)
!12657 = !DILocalVariable(name: "ptr", scope: !12658, file: !9588, line: 197, type: !649, align: 8)
!12658 = !DILexicalBlockFile(scope: !12659, file: !9588, discriminator: 0)
!12659 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12660)
!12660 = !{!12657}
!12661 = !DILocation(line: 197, column: 31, scope: !12658, inlinedAt: !12662)
!12662 = !DILocation(line: 87, column: 36, scope: !12651, inlinedAt: !12656)
!12663 = !DILocation(line: 196, column: 13, scope: !12586)
!12664 = !DILocation(line: 190, column: 27, scope: !12584)
!12665 = !DILocation(line: 169, column: 5, scope: !12572)
!12666 = distinct !DISubprogram(name: "needs_to_grow<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h3d2d49d54f3a60bdE", scope: !319, file: !9588, line: 360, type: !12667, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !12669)
!12667 = !DISubroutineType(types: !12668)
!12668 = !{!1159, !10149, !9, !9}
!12669 = !{!12670, !12671, !12672}
!12670 = !DILocalVariable(name: "self", arg: 1, scope: !12666, file: !9588, line: 360, type: !10149)
!12671 = !DILocalVariable(name: "len", arg: 2, scope: !12666, file: !9588, line: 360, type: !9)
!12672 = !DILocalVariable(name: "additional", arg: 3, scope: !12666, file: !9588, line: 360, type: !9)
!12673 = !DILocation(line: 360, column: 22, scope: !12666)
!12674 = !DILocation(line: 360, column: 29, scope: !12666)
!12675 = !DILocation(line: 360, column: 41, scope: !12666)
!12676 = !DILocalVariable(name: "self", scope: !12677, file: !9588, line: 361, type: !9, align: 8)
!12677 = !DILexicalBlockFile(scope: !12678, file: !9588, discriminator: 0)
!12678 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !2929, file: !2928, line: 1231, type: !2917, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !12679)
!12679 = !{!12676, !12680}
!12680 = !DILocalVariable(name: "rhs", scope: !12677, file: !9588, line: 361, type: !9, align: 8)
!12681 = !DILocation(line: 361, column: 22, scope: !12677, inlinedAt: !12682)
!12682 = !DILocation(line: 361, column: 22, scope: !12666)
!12683 = !DILocalVariable(name: "self", scope: !12684, file: !9588, line: 361, type: !10149, align: 8)
!12684 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17hf142d6b502d6e714E", scope: !319, file: !9588, line: 231, type: !10498, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !12685)
!12685 = !{!12683}
!12686 = !DILocation(line: 361, column: 22, scope: !12684, inlinedAt: !12682)
!12687 = !DILocation(line: 361, column: 51, scope: !12666)
!12688 = !DILocation(line: 361, column: 9, scope: !12666)
!12689 = !DILocation(line: 362, column: 6, scope: !12666)
!12690 = distinct !DISubprogram(name: "current_memory<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h0ded22c4c0f9d25fE", scope: !2608, file: !9588, line: 240, type: !12691, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2624, retainedNodes: !12693)
!12691 = !DISubroutineType(types: !12692)
!12692 = !{!12240, !10213}
!12693 = !{!12694, !12695}
!12694 = !DILocalVariable(name: "self", arg: 1, scope: !12690, file: !9588, line: 240, type: !10213)
!12695 = !DILocalVariable(name: "layout", scope: !12696, file: !9588, line: 247, type: !1779, align: 8)
!12696 = distinct !DILexicalBlock(scope: !12690, file: !9588, line: 247, column: 17)
!12697 = !DILocation(line: 240, column: 23, scope: !12690)
!12698 = !DILocalVariable(name: "self", scope: !12699, file: !9588, line: 247, type: !5516, align: 8)
!12699 = !DILexicalBlockFile(scope: !12700, file: !9588, discriminator: 0)
!12700 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h146659e66f3980f7E", scope: !5516, file: !5292, line: 1520, type: !12701, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5524, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{!1779, !5516, !344}
!12703 = !{!12698, !12704}
!12704 = !DILocalVariable(name: "t", scope: !12705, file: !9588, line: 247, type: !1779, align: 8)
!12705 = !DILexicalBlockFile(scope: !12706, file: !9588, discriminator: 0)
!12706 = distinct !DILexicalBlock(scope: !12700, file: !5292, line: 1523, column: 13)
!12707 = !DILocation(line: 247, column: 30, scope: !12699, inlinedAt: !12708)
!12708 = !DILocation(line: 247, column: 30, scope: !12690)
!12709 = !DILocalVariable(name: "pointer", scope: !12710, file: !9588, line: 248, type: !326, align: 8)
!12710 = !DILexicalBlockFile(scope: !12711, file: !9588, discriminator: 0)
!12711 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12712)
!12712 = !{!12709}
!12713 = !DILocation(line: 248, column: 23, scope: !12710, inlinedAt: !12714)
!12714 = !DILocation(line: 137, column: 9, scope: !12715, inlinedAt: !12722)
!12715 = distinct !DISubprogram(name: "cast<alloc::ffi::c_str::CString, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h16fc9257e81aa4a8E", scope: !2611, file: !1743, line: 136, type: !12716, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12721, retainedNodes: !12718)
!12716 = !DISubroutineType(types: !12717)
!12717 = !{!322, !2611}
!12718 = !{!12719}
!12719 = !DILocalVariable(name: "self", scope: !12720, file: !9588, line: 248, type: !2611, align: 8)
!12720 = !DILexicalBlockFile(scope: !12715, file: !9588, discriminator: 0)
!12721 = !{!2619, !2018}
!12722 = !DILocation(line: 248, column: 23, scope: !12696)
!12723 = !DILocation(line: 241, column: 12, scope: !12690)
!12724 = !DILocation(line: 241, column: 40, scope: !12690)
!12725 = !DILocation(line: 247, column: 49, scope: !12690)
!12726 = !DILocation(line: 242, column: 13, scope: !12690)
!12727 = !DILocation(line: 241, column: 9, scope: !12690)
!12728 = !DILocation(line: 251, column: 6, scope: !12690)
!12729 = !DILocation(line: 247, column: 30, scope: !12705, inlinedAt: !12708)
!12730 = !DILocation(line: 247, column: 21, scope: !12696)
!12731 = !DILocation(line: 248, column: 23, scope: !12720, inlinedAt: !12722)
!12732 = !DILocalVariable(name: "self", scope: !12733, file: !9588, line: 248, type: !2614, align: 8)
!12733 = !DILexicalBlockFile(scope: !12734, file: !9588, discriminator: 0)
!12734 = distinct !DISubprogram(name: "cast<alloc::ffi::c_str::CString, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h3905e2ab359010a4E", scope: !2614, file: !646, line: 453, type: !12735, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12721, retainedNodes: !12737)
!12735 = !DISubroutineType(types: !12736)
!12736 = !{!326, !2614}
!12737 = !{!12732}
!12738 = !DILocation(line: 248, column: 23, scope: !12733, inlinedAt: !12739)
!12739 = !DILocation(line: 137, column: 22, scope: !12715, inlinedAt: !12722)
!12740 = !DILocalVariable(name: "self", scope: !12741, file: !9588, line: 248, type: !2614, align: 8)
!12741 = !DILexicalBlockFile(scope: !12742, file: !9588, discriminator: 0)
!12742 = distinct !DISubprogram(name: "as_ptr<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb21906f82f863b08E", scope: !2614, file: !646, line: 330, type: !10227, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !12743)
!12743 = !{!12740}
!12744 = !DILocation(line: 248, column: 23, scope: !12741, inlinedAt: !12745)
!12745 = !DILocation(line: 455, column: 41, scope: !12734, inlinedAt: !12739)
!12746 = !DILocalVariable(name: "ptr", scope: !12747, file: !9588, line: 248, type: !649, align: 8)
!12747 = !DILexicalBlockFile(scope: !12748, file: !9588, discriminator: 0)
!12748 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12749)
!12749 = !{!12746}
!12750 = !DILocation(line: 248, column: 23, scope: !12747, inlinedAt: !12751)
!12751 = !DILocation(line: 455, column: 18, scope: !12734, inlinedAt: !12739)
!12752 = !DILocation(line: 247, column: 30, scope: !12753, inlinedAt: !12755)
!12753 = !DILexicalBlockFile(scope: !12754, file: !9588, discriminator: 0)
!12754 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!12755 = !DILocation(line: 1525, column: 32, scope: !12700, inlinedAt: !12708)
!12756 = !DILocation(line: 248, column: 22, scope: !12696)
!12757 = !DILocation(line: 248, column: 17, scope: !12696)
!12758 = distinct !DISubprogram(name: "current_memory<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h5bcf1a131c06d2c2E", scope: !319, file: !9588, line: 240, type: !12759, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !12761)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{!12240, !10149}
!12761 = !{!12762, !12763}
!12762 = !DILocalVariable(name: "self", arg: 1, scope: !12758, file: !9588, line: 240, type: !10149)
!12763 = !DILocalVariable(name: "layout", scope: !12764, file: !9588, line: 247, type: !1779, align: 8)
!12764 = distinct !DILexicalBlock(scope: !12758, file: !9588, line: 247, column: 17)
!12765 = !DILocation(line: 240, column: 23, scope: !12758)
!12766 = !DILocalVariable(name: "self", scope: !12767, file: !9588, line: 247, type: !5516, align: 8)
!12767 = !DILexicalBlockFile(scope: !12768, file: !9588, discriminator: 0)
!12768 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h146659e66f3980f7E", scope: !5516, file: !5292, line: 1520, type: !12701, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5524, retainedNodes: !12769)
!12769 = !{!12766, !12770}
!12770 = !DILocalVariable(name: "t", scope: !12771, file: !9588, line: 247, type: !1779, align: 8)
!12771 = !DILexicalBlockFile(scope: !12772, file: !9588, discriminator: 0)
!12772 = distinct !DILexicalBlock(scope: !12768, file: !5292, line: 1523, column: 13)
!12773 = !DILocation(line: 247, column: 30, scope: !12767, inlinedAt: !12774)
!12774 = !DILocation(line: 247, column: 30, scope: !12758)
!12775 = !DILocalVariable(name: "pointer", scope: !12776, file: !9588, line: 248, type: !326, align: 8)
!12776 = !DILexicalBlockFile(scope: !12777, file: !9588, discriminator: 0)
!12777 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12778)
!12778 = !{!12775}
!12779 = !DILocation(line: 248, column: 23, scope: !12776, inlinedAt: !12780)
!12780 = !DILocation(line: 137, column: 9, scope: !12781, inlinedAt: !12787)
!12781 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h3565bc5b07c6dd5dE", scope: !322, file: !1743, line: 136, type: !12782, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12056, retainedNodes: !12784)
!12782 = !DISubroutineType(types: !12783)
!12783 = !{!322, !322}
!12784 = !{!12785}
!12785 = !DILocalVariable(name: "self", scope: !12786, file: !9588, line: 248, type: !322, align: 8)
!12786 = !DILexicalBlockFile(scope: !12781, file: !9588, discriminator: 0)
!12787 = !DILocation(line: 248, column: 23, scope: !12764)
!12788 = !DILocation(line: 241, column: 12, scope: !12758)
!12789 = !DILocation(line: 241, column: 40, scope: !12758)
!12790 = !DILocation(line: 247, column: 49, scope: !12758)
!12791 = !DILocation(line: 242, column: 13, scope: !12758)
!12792 = !DILocation(line: 241, column: 9, scope: !12758)
!12793 = !DILocation(line: 251, column: 6, scope: !12758)
!12794 = !DILocation(line: 247, column: 30, scope: !12771, inlinedAt: !12774)
!12795 = !DILocation(line: 247, column: 21, scope: !12764)
!12796 = !DILocation(line: 248, column: 23, scope: !12786, inlinedAt: !12787)
!12797 = !DILocalVariable(name: "self", scope: !12798, file: !9588, line: 248, type: !326, align: 8)
!12798 = !DILexicalBlockFile(scope: !12799, file: !9588, discriminator: 0)
!12799 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h6c184c1b0c7546b6E", scope: !326, file: !646, line: 453, type: !12800, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12056, retainedNodes: !12802)
!12800 = !DISubroutineType(types: !12801)
!12801 = !{!326, !326}
!12802 = !{!12797}
!12803 = !DILocation(line: 248, column: 23, scope: !12798, inlinedAt: !12804)
!12804 = !DILocation(line: 137, column: 22, scope: !12781, inlinedAt: !12787)
!12805 = !DILocalVariable(name: "self", scope: !12806, file: !9588, line: 248, type: !326, align: 8)
!12806 = !DILexicalBlockFile(scope: !12807, file: !9588, discriminator: 0)
!12807 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12808)
!12808 = !{!12805}
!12809 = !DILocation(line: 248, column: 23, scope: !12806, inlinedAt: !12810)
!12810 = !DILocation(line: 455, column: 41, scope: !12799, inlinedAt: !12804)
!12811 = !DILocalVariable(name: "ptr", scope: !12812, file: !9588, line: 248, type: !649, align: 8)
!12812 = !DILexicalBlockFile(scope: !12813, file: !9588, discriminator: 0)
!12813 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12814)
!12814 = !{!12811}
!12815 = !DILocation(line: 248, column: 23, scope: !12812, inlinedAt: !12816)
!12816 = !DILocation(line: 455, column: 18, scope: !12799, inlinedAt: !12804)
!12817 = !DILocation(line: 247, column: 30, scope: !12818, inlinedAt: !12820)
!12818 = !DILexicalBlockFile(scope: !12819, file: !9588, discriminator: 0)
!12819 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!12820 = !DILocation(line: 1525, column: 32, scope: !12768, inlinedAt: !12774)
!12821 = !DILocation(line: 248, column: 22, scope: !12764)
!12822 = !DILocation(line: 248, column: 17, scope: !12764)
!12823 = distinct !DISubprogram(name: "current_memory<*const i8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h66b2c208eef723b2E", scope: !2633, file: !9588, line: 240, type: !12824, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2650, retainedNodes: !12826)
!12824 = !DISubroutineType(types: !12825)
!12825 = !{!12240, !10282}
!12826 = !{!12827, !12828}
!12827 = !DILocalVariable(name: "self", arg: 1, scope: !12823, file: !9588, line: 240, type: !10282)
!12828 = !DILocalVariable(name: "layout", scope: !12829, file: !9588, line: 247, type: !1779, align: 8)
!12829 = distinct !DILexicalBlock(scope: !12823, file: !9588, line: 247, column: 17)
!12830 = !DILocation(line: 240, column: 23, scope: !12823)
!12831 = !DILocalVariable(name: "self", scope: !12832, file: !9588, line: 247, type: !5516, align: 8)
!12832 = !DILexicalBlockFile(scope: !12833, file: !9588, discriminator: 0)
!12833 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h146659e66f3980f7E", scope: !5516, file: !5292, line: 1520, type: !12701, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5524, retainedNodes: !12834)
!12834 = !{!12831, !12835}
!12835 = !DILocalVariable(name: "t", scope: !12836, file: !9588, line: 247, type: !1779, align: 8)
!12836 = !DILexicalBlockFile(scope: !12837, file: !9588, discriminator: 0)
!12837 = distinct !DILexicalBlock(scope: !12833, file: !5292, line: 1523, column: 13)
!12838 = !DILocation(line: 247, column: 30, scope: !12832, inlinedAt: !12839)
!12839 = !DILocation(line: 247, column: 30, scope: !12823)
!12840 = !DILocalVariable(name: "pointer", scope: !12841, file: !9588, line: 248, type: !326, align: 8)
!12841 = !DILexicalBlockFile(scope: !12842, file: !9588, discriminator: 0)
!12842 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12843)
!12843 = !{!12840}
!12844 = !DILocation(line: 248, column: 23, scope: !12841, inlinedAt: !12845)
!12845 = !DILocation(line: 137, column: 9, scope: !12846, inlinedAt: !12853)
!12846 = distinct !DISubprogram(name: "cast<*const i8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h27a23973a049b278E", scope: !2636, file: !1743, line: 136, type: !12847, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12852, retainedNodes: !12849)
!12847 = !DISubroutineType(types: !12848)
!12848 = !{!322, !2636}
!12849 = !{!12850}
!12850 = !DILocalVariable(name: "self", scope: !12851, file: !9588, line: 248, type: !2636, align: 8)
!12851 = !DILexicalBlockFile(scope: !12846, file: !9588, discriminator: 0)
!12852 = !{!2645, !2018}
!12853 = !DILocation(line: 248, column: 23, scope: !12829)
!12854 = !DILocation(line: 241, column: 12, scope: !12823)
!12855 = !DILocation(line: 241, column: 40, scope: !12823)
!12856 = !DILocation(line: 247, column: 49, scope: !12823)
!12857 = !DILocation(line: 242, column: 13, scope: !12823)
!12858 = !DILocation(line: 241, column: 9, scope: !12823)
!12859 = !DILocation(line: 251, column: 6, scope: !12823)
!12860 = !DILocation(line: 247, column: 30, scope: !12836, inlinedAt: !12839)
!12861 = !DILocation(line: 247, column: 21, scope: !12829)
!12862 = !DILocation(line: 248, column: 23, scope: !12851, inlinedAt: !12853)
!12863 = !DILocalVariable(name: "self", scope: !12864, file: !9588, line: 248, type: !2639, align: 8)
!12864 = !DILexicalBlockFile(scope: !12865, file: !9588, discriminator: 0)
!12865 = distinct !DISubprogram(name: "cast<*const i8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha0fa034882d4a7deE", scope: !2639, file: !646, line: 453, type: !12866, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12852, retainedNodes: !12868)
!12866 = !DISubroutineType(types: !12867)
!12867 = !{!326, !2639}
!12868 = !{!12863}
!12869 = !DILocation(line: 248, column: 23, scope: !12864, inlinedAt: !12870)
!12870 = !DILocation(line: 137, column: 22, scope: !12846, inlinedAt: !12853)
!12871 = !DILocalVariable(name: "self", scope: !12872, file: !9588, line: 248, type: !2639, align: 8)
!12872 = !DILexicalBlockFile(scope: !12873, file: !9588, discriminator: 0)
!12873 = distinct !DISubprogram(name: "as_ptr<*const i8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17ha2f725abf8a521b9E", scope: !2639, file: !646, line: 330, type: !10296, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2644, retainedNodes: !12874)
!12874 = !{!12871}
!12875 = !DILocation(line: 248, column: 23, scope: !12872, inlinedAt: !12876)
!12876 = !DILocation(line: 455, column: 41, scope: !12865, inlinedAt: !12870)
!12877 = !DILocalVariable(name: "ptr", scope: !12878, file: !9588, line: 248, type: !649, align: 8)
!12878 = !DILexicalBlockFile(scope: !12879, file: !9588, discriminator: 0)
!12879 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12880)
!12880 = !{!12877}
!12881 = !DILocation(line: 248, column: 23, scope: !12878, inlinedAt: !12882)
!12882 = !DILocation(line: 455, column: 18, scope: !12865, inlinedAt: !12870)
!12883 = !DILocation(line: 247, column: 30, scope: !12884, inlinedAt: !12886)
!12884 = !DILexicalBlockFile(scope: !12885, file: !9588, discriminator: 0)
!12885 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!12886 = !DILocation(line: 1525, column: 32, scope: !12833, inlinedAt: !12839)
!12887 = !DILocation(line: 248, column: 22, scope: !12829)
!12888 = !DILocation(line: 248, column: 17, scope: !12829)
!12889 = distinct !DISubprogram(name: "current_memory<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hcf5ccc989e11caaeE", scope: !2691, file: !9588, line: 240, type: !12890, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2713, retainedNodes: !12892)
!12890 = !DISubroutineType(types: !12891)
!12891 = !{!12240, !10350}
!12892 = !{!12893, !12894}
!12893 = !DILocalVariable(name: "self", arg: 1, scope: !12889, file: !9588, line: 240, type: !10350)
!12894 = !DILocalVariable(name: "layout", scope: !12895, file: !9588, line: 247, type: !1779, align: 8)
!12895 = distinct !DILexicalBlock(scope: !12889, file: !9588, line: 247, column: 17)
!12896 = !DILocation(line: 240, column: 23, scope: !12889)
!12897 = !DILocalVariable(name: "self", scope: !12898, file: !9588, line: 247, type: !5516, align: 8)
!12898 = !DILexicalBlockFile(scope: !12899, file: !9588, discriminator: 0)
!12899 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h146659e66f3980f7E", scope: !5516, file: !5292, line: 1520, type: !12701, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !5524, retainedNodes: !12900)
!12900 = !{!12897, !12901}
!12901 = !DILocalVariable(name: "t", scope: !12902, file: !9588, line: 247, type: !1779, align: 8)
!12902 = !DILexicalBlockFile(scope: !12903, file: !9588, discriminator: 0)
!12903 = distinct !DILexicalBlock(scope: !12899, file: !5292, line: 1523, column: 13)
!12904 = !DILocation(line: 247, column: 30, scope: !12898, inlinedAt: !12905)
!12905 = !DILocation(line: 247, column: 30, scope: !12889)
!12906 = !DILocalVariable(name: "pointer", scope: !12907, file: !9588, line: 248, type: !326, align: 8)
!12907 = !DILexicalBlockFile(scope: !12908, file: !9588, discriminator: 0)
!12908 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12909)
!12909 = !{!12906}
!12910 = !DILocation(line: 248, column: 23, scope: !12907, inlinedAt: !12911)
!12911 = !DILocation(line: 137, column: 9, scope: !12912, inlinedAt: !12919)
!12912 = distinct !DISubprogram(name: "cast<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17he71fb3e36ab26cb3E", scope: !2694, file: !1743, line: 136, type: !12913, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12918, retainedNodes: !12915)
!12913 = !DISubroutineType(types: !12914)
!12914 = !{!322, !2694}
!12915 = !{!12916}
!12916 = !DILocalVariable(name: "self", scope: !12917, file: !9588, line: 248, type: !2694, align: 8)
!12917 = !DILexicalBlockFile(scope: !12912, file: !9588, discriminator: 0)
!12918 = !{!2708, !2018}
!12919 = !DILocation(line: 248, column: 23, scope: !12895)
!12920 = !DILocation(line: 241, column: 12, scope: !12889)
!12921 = !DILocation(line: 241, column: 40, scope: !12889)
!12922 = !DILocation(line: 247, column: 49, scope: !12889)
!12923 = !DILocation(line: 242, column: 13, scope: !12889)
!12924 = !DILocation(line: 241, column: 9, scope: !12889)
!12925 = !DILocation(line: 251, column: 6, scope: !12889)
!12926 = !DILocation(line: 247, column: 30, scope: !12902, inlinedAt: !12905)
!12927 = !DILocation(line: 247, column: 21, scope: !12895)
!12928 = !DILocation(line: 248, column: 23, scope: !12917, inlinedAt: !12919)
!12929 = !DILocalVariable(name: "self", scope: !12930, file: !9588, line: 248, type: !2697, align: 8)
!12930 = !DILexicalBlockFile(scope: !12931, file: !9588, discriminator: 0)
!12931 = distinct !DISubprogram(name: "cast<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h4fe2660cbd8bd489E", scope: !2697, file: !646, line: 453, type: !12932, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12918, retainedNodes: !12934)
!12932 = !DISubroutineType(types: !12933)
!12933 = !{!326, !2697}
!12934 = !{!12929}
!12935 = !DILocation(line: 248, column: 23, scope: !12930, inlinedAt: !12936)
!12936 = !DILocation(line: 137, column: 22, scope: !12912, inlinedAt: !12919)
!12937 = !DILocalVariable(name: "self", scope: !12938, file: !9588, line: 248, type: !2697, align: 8)
!12938 = !DILexicalBlockFile(scope: !12939, file: !9588, discriminator: 0)
!12939 = distinct !DISubprogram(name: "as_ptr<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd6449f95196d166aE", scope: !2697, file: !646, line: 330, type: !10364, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !12940)
!12940 = !{!12937}
!12941 = !DILocation(line: 248, column: 23, scope: !12938, inlinedAt: !12942)
!12942 = !DILocation(line: 455, column: 41, scope: !12931, inlinedAt: !12936)
!12943 = !DILocalVariable(name: "ptr", scope: !12944, file: !9588, line: 248, type: !649, align: 8)
!12944 = !DILexicalBlockFile(scope: !12945, file: !9588, discriminator: 0)
!12945 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !12946)
!12946 = !{!12943}
!12947 = !DILocation(line: 248, column: 23, scope: !12944, inlinedAt: !12948)
!12948 = !DILocation(line: 455, column: 18, scope: !12931, inlinedAt: !12936)
!12949 = !DILocation(line: 247, column: 30, scope: !12950, inlinedAt: !12952)
!12950 = !DILexicalBlockFile(scope: !12951, file: !9588, discriminator: 0)
!12951 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17ha82ea39894c2756aE", scope: !1868, file: !1867, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!12952 = !DILocation(line: 1525, column: 32, scope: !12899, inlinedAt: !12905)
!12953 = !DILocation(line: 248, column: 22, scope: !12895)
!12954 = !DILocation(line: 248, column: 17, scope: !12895)
!12955 = distinct !DISubprogram(name: "grow_amortized<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h3306748c6f3fc176E", scope: !319, file: !9588, line: 379, type: !12956, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !12959)
!12956 = !DISubroutineType(types: !12957)
!12957 = !{!7547, !12958, !9, !9}
!12958 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !319, size: 64, align: 64, dwarfAddressSpace: 0)
!12959 = !{!12960, !12961, !12962, !12963, !12965, !12967, !12969, !12971, !12973, !12975, !12977, !12979}
!12960 = !DILocalVariable(name: "self", arg: 1, scope: !12955, file: !9588, line: 379, type: !12958)
!12961 = !DILocalVariable(name: "len", arg: 2, scope: !12955, file: !9588, line: 379, type: !9)
!12962 = !DILocalVariable(name: "additional", arg: 3, scope: !12955, file: !9588, line: 379, type: !9)
!12963 = !DILocalVariable(name: "required_cap", scope: !12964, file: !9588, line: 390, type: !9, align: 8)
!12964 = distinct !DILexicalBlock(scope: !12955, file: !9588, line: 390, column: 9)
!12965 = !DILocalVariable(name: "residual", scope: !12966, file: !9588, line: 390, type: !12266, align: 8)
!12966 = distinct !DILexicalBlock(scope: !12955, file: !9588, line: 390, column: 79)
!12967 = !DILocalVariable(name: "val", scope: !12968, file: !9588, line: 390, type: !9, align: 8)
!12968 = distinct !DILexicalBlock(scope: !12955, file: !9588, line: 390, column: 28)
!12969 = !DILocalVariable(name: "cap", scope: !12970, file: !9588, line: 394, type: !9, align: 8)
!12970 = distinct !DILexicalBlock(scope: !12964, file: !9588, line: 394, column: 9)
!12971 = !DILocalVariable(name: "cap", scope: !12972, file: !9588, line: 395, type: !9, align: 8)
!12972 = distinct !DILexicalBlock(scope: !12970, file: !9588, line: 395, column: 9)
!12973 = !DILocalVariable(name: "new_layout", scope: !12974, file: !9588, line: 397, type: !5516, align: 8)
!12974 = distinct !DILexicalBlock(scope: !12972, file: !9588, line: 397, column: 9)
!12975 = !DILocalVariable(name: "ptr", scope: !12976, file: !9588, line: 400, type: !7489, align: 8)
!12976 = distinct !DILexicalBlock(scope: !12974, file: !9588, line: 400, column: 9)
!12977 = !DILocalVariable(name: "residual", scope: !12978, file: !9588, line: 400, type: !12283, align: 8)
!12978 = distinct !DILexicalBlock(scope: !12974, file: !9588, line: 400, column: 82)
!12979 = !DILocalVariable(name: "val", scope: !12980, file: !9588, line: 400, type: !7489, align: 8)
!12980 = distinct !DILexicalBlock(scope: !12974, file: !9588, line: 400, column: 19)
!12981 = !DILocation(line: 379, column: 23, scope: !12955)
!12982 = !DILocation(line: 379, column: 34, scope: !12955)
!12983 = !DILocation(line: 379, column: 46, scope: !12955)
!12984 = !DILocalVariable(name: "self", scope: !12985, file: !9588, line: 390, type: !13003, align: 8)
!12985 = !DILexicalBlockFile(scope: !12986, file: !9588, discriminator: 0)
!12986 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h067fbcc057d8bbd8E", scope: !5611, file: !5292, line: 2117, type: !12987, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !13011, retainedNodes: !13017)
!12987 = !DISubroutineType(types: !12988)
!12988 = !{!12989, !13003}
!12989 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !4109, file: !2, size: 192, align: 64, elements: !12990, templateParams: !23, identifier: "aaa47d4c01b9e814e1128564379fb1ed")
!12990 = !{!12991}
!12991 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12989, file: !2, size: 192, align: 64, elements: !12992, templateParams: !23, identifier: "52bc498f97dcf0aebe4be722096289fa", discriminator: !13002)
!12992 = !{!12993, !12998}
!12993 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !12991, file: !2, baseType: !12994, size: 192, align: 64, extraData: i64 0)
!12994 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !12989, file: !2, size: 192, align: 64, elements: !12995, templateParams: !12997, identifier: "aa7cd1170a8c6991d015bac63ac068a0")
!12995 = !{!12996}
!12996 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12994, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!12997 = !{!12330, !5624}
!12998 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !12991, file: !2, baseType: !12999, size: 192, align: 64, extraData: i64 1)
!12999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !12989, file: !2, size: 192, align: 64, elements: !13000, templateParams: !12997, identifier: "364459b0de7a7982990d34cdf2f986eb")
!13000 = !{!13001}
!13001 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12999, file: !2, baseType: !12266, size: 128, align: 64, offset: 64)
!13002 = !DIDerivedType(tag: DW_TAG_member, scope: !12989, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!13003 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !2134, file: !2, size: 192, align: 64, elements: !13004, templateParams: !23, identifier: "3631237889770fa7267d5501216770d")
!13004 = !{!13005}
!13005 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13003, file: !2, size: 192, align: 64, elements: !13006, templateParams: !23, identifier: "1d1f45ee59d9f1cfc391058ed79e0cae", discriminator: !13016)
!13006 = !{!13007, !13012}
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !13005, file: !2, baseType: !13008, size: 192, align: 64, extraData: i64 0)
!13008 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !13003, file: !2, size: 192, align: 64, elements: !13009, templateParams: !13011, identifier: "e350c9849d9dffdf1ffb40e48a20f918")
!13009 = !{!13010}
!13010 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13008, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!13011 = !{!462, !7448}
!13012 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !13005, file: !2, baseType: !13013, size: 192, align: 64, extraData: i64 1)
!13013 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !13003, file: !2, size: 192, align: 64, elements: !13014, templateParams: !13011, identifier: "4805f2b2529d263fd0f1d3d0e43e54f8")
!13014 = !{!13015}
!13015 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13013, file: !2, baseType: !1769, size: 128, align: 64, offset: 64)
!13016 = !DIDerivedType(tag: DW_TAG_member, scope: !13003, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!13017 = !{!12984, !13018, !13021}
!13018 = !DILocalVariable(name: "v", scope: !13019, file: !9588, line: 390, type: !9, align: 8)
!13019 = !DILexicalBlockFile(scope: !13020, file: !9588, discriminator: 0)
!13020 = distinct !DILexicalBlock(scope: !12986, file: !5292, line: 2119, column: 13)
!13021 = !DILocalVariable(name: "e", scope: !13022, file: !9588, line: 390, type: !1769, align: 8)
!13022 = !DILexicalBlockFile(scope: !13023, file: !9588, discriminator: 0)
!13023 = distinct !DILexicalBlock(scope: !12986, file: !5292, line: 2120, column: 13)
!13024 = !DILocation(line: 390, column: 28, scope: !12985, inlinedAt: !13025)
!13025 = !DILocation(line: 390, column: 28, scope: !12955)
!13026 = !DILocalVariable(name: "self", scope: !13027, file: !9588, line: 390, type: !455, align: 8)
!13027 = !DILexicalBlockFile(scope: !13028, file: !9588, discriminator: 0)
!13028 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h12c562618c67f7f2E", scope: !455, file: !1664, line: 1051, type: !13029, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !13011, retainedNodes: !13031)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{!13003, !455, !1769}
!13031 = !{!13026, !13032, !13033}
!13032 = !DILocalVariable(name: "err", scope: !13027, file: !9588, line: 390, type: !1769, align: 8)
!13033 = !DILocalVariable(name: "v", scope: !13034, file: !9588, line: 390, type: !9, align: 8)
!13034 = !DILexicalBlockFile(scope: !13035, file: !9588, discriminator: 0)
!13035 = distinct !DILexicalBlock(scope: !13028, file: !1664, line: 1056, column: 13)
!13036 = !DILocation(line: 390, column: 28, scope: !13027, inlinedAt: !13025)
!13037 = !DILocalVariable(name: "residual", scope: !13038, file: !9588, line: 390, type: !12266, align: 8)
!13038 = !DILexicalBlockFile(scope: !13039, file: !9588, discriminator: 0)
!13039 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h68857f8f139c3323E", scope: !5293, file: !5292, line: 2132, type: !13040, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !13046, retainedNodes: !13042)
!13040 = !DISubroutineType(types: !13041)
!13041 = !{!7547, !12266, !344}
!13042 = !{!13037, !13043}
!13043 = !DILocalVariable(name: "e", scope: !13044, file: !9588, line: 390, type: !1769, align: 8)
!13044 = !DILexicalBlockFile(scope: !13045, file: !9588, discriminator: 0)
!13045 = distinct !DILexicalBlock(scope: !13039, file: !5292, line: 2134, column: 13)
!13046 = !{!48, !7448, !7530}
!13047 = !DILocation(line: 390, column: 28, scope: !13038, inlinedAt: !13048)
!13048 = !DILocation(line: 390, column: 28, scope: !12966)
!13049 = !DILocalVariable(name: "self", scope: !13050, file: !9588, line: 400, type: !7503, align: 8)
!13050 = !DILexicalBlockFile(scope: !13051, file: !9588, discriminator: 0)
!13051 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h23f4c7911ade07c7E", scope: !5611, file: !5292, line: 2117, type: !13052, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7511, retainedNodes: !13068)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!13054, !7503}
!13054 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !4109, file: !2, size: 192, align: 64, elements: !13055, templateParams: !23, identifier: "79c6e5125639b127cfa81db755c4cffd")
!13055 = !{!13056}
!13056 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13054, file: !2, size: 192, align: 64, elements: !13057, templateParams: !23, identifier: "bdca6637e968c25e4fe4c2dfef1c199f", discriminator: !13067)
!13057 = !{!13058, !13063}
!13058 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13056, file: !2, baseType: !13059, size: 192, align: 64, extraData: i64 0)
!13059 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13054, file: !2, size: 192, align: 64, elements: !13060, templateParams: !13062, identifier: "15ba5a416f94883524aa415e9e484c18")
!13060 = !{!13061}
!13061 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13059, file: !2, baseType: !7489, size: 128, align: 64, offset: 64)
!13062 = !{!12372, !11058}
!13063 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13056, file: !2, baseType: !13064, size: 192, align: 64, extraData: i64 1)
!13064 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13054, file: !2, size: 192, align: 64, elements: !13065, templateParams: !13062, identifier: "e100a24ff060842f7e06542fb969c57c")
!13065 = !{!13066}
!13066 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13064, file: !2, baseType: !12283, size: 128, align: 64, offset: 64)
!13067 = !DIDerivedType(tag: DW_TAG_member, scope: !13054, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!13068 = !{!13049, !13069, !13072}
!13069 = !DILocalVariable(name: "v", scope: !13070, file: !9588, line: 400, type: !7489, align: 8)
!13070 = !DILexicalBlockFile(scope: !13071, file: !9588, discriminator: 0)
!13071 = distinct !DILexicalBlock(scope: !13051, file: !5292, line: 2119, column: 13)
!13072 = !DILocalVariable(name: "e", scope: !13073, file: !9588, line: 400, type: !1766, align: 8)
!13073 = !DILexicalBlockFile(scope: !13074, file: !9588, discriminator: 0)
!13074 = distinct !DILexicalBlock(scope: !13051, file: !5292, line: 2120, column: 13)
!13075 = !DILocation(line: 400, column: 19, scope: !13050, inlinedAt: !13076)
!13076 = !DILocation(line: 400, column: 19, scope: !12974)
!13077 = !DILocalVariable(name: "residual", scope: !13078, file: !9588, line: 400, type: !12283, align: 8)
!13078 = !DILexicalBlockFile(scope: !13079, file: !9588, discriminator: 0)
!13079 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha1caac143b423cccE", scope: !5293, file: !5292, line: 2132, type: !13080, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !13086, retainedNodes: !13082)
!13080 = !DISubroutineType(types: !13081)
!13081 = !{!7547, !12283, !344}
!13082 = !{!13077, !13083}
!13083 = !DILocalVariable(name: "e", scope: !13084, file: !9588, line: 400, type: !1766, align: 8)
!13084 = !DILexicalBlockFile(scope: !13085, file: !9588, discriminator: 0)
!13085 = distinct !DILexicalBlock(scope: !13079, file: !5292, line: 2134, column: 13)
!13086 = !{!48, !7512, !7530}
!13087 = !DILocation(line: 400, column: 19, scope: !13078, inlinedAt: !13088)
!13088 = !DILocation(line: 400, column: 19, scope: !12978)
!13089 = !DILocation(line: 383, column: 12, scope: !12955)
!13090 = !DILocation(line: 386, column: 24, scope: !12955)
!13091 = !DILocation(line: 390, column: 62, scope: !12955)
!13092 = !DILocation(line: 390, column: 28, scope: !13034, inlinedAt: !13025)
!13093 = !DILocation(line: 390, column: 28, scope: !13019, inlinedAt: !13025)
!13094 = !DILocation(line: 390, column: 28, scope: !13022, inlinedAt: !13025)
!13095 = !DILocation(line: 390, column: 28, scope: !12968)
!13096 = !DILocation(line: 390, column: 13, scope: !12964)
!13097 = !DILocation(line: 394, column: 28, scope: !12964)
!13098 = !DILocalVariable(name: "v1", scope: !13099, file: !9588, line: 394, type: !9, align: 8)
!13099 = !DILexicalBlockFile(scope: !13100, file: !9588, discriminator: 0)
!13100 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17ha3986f0d3266fd91E", scope: !286, file: !2936, line: 1278, type: !2917, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !13101)
!13101 = !{!13098, !13102}
!13102 = !DILocalVariable(name: "v2", scope: !13099, file: !9588, line: 394, type: !9, align: 8)
!13103 = !DILocation(line: 394, column: 19, scope: !13099, inlinedAt: !13104)
!13104 = !DILocation(line: 394, column: 19, scope: !12964)
!13105 = !DILocation(line: 394, column: 42, scope: !12964)
!13106 = !DILocation(line: 394, column: 13, scope: !12970)
!13107 = !DILocation(line: 390, column: 79, scope: !12955)
!13108 = !DILocation(line: 390, column: 79, scope: !12966)
!13109 = !DILocation(line: 390, column: 28, scope: !13044, inlinedAt: !13048)
!13110 = !DILocalVariable(name: "kind", scope: !13111, file: !9588, line: 390, type: !1769, align: 8)
!13111 = !DILexicalBlockFile(scope: !13112, file: !9588, discriminator: 0)
!13112 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h546a7d4f068a885bE", scope: !1763, file: !1762, line: 116, type: !1764, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13113)
!13113 = !{!13110}
!13114 = !DILocation(line: 390, column: 28, scope: !13111, inlinedAt: !13115)
!13115 = !DILocation(line: 2134, column: 27, scope: !13045, inlinedAt: !13048)
!13116 = !DILocation(line: 1, column: 1, scope: !13117)
!13117 = !DILexicalBlockFile(scope: !12955, file: !4178, discriminator: 0)
!13118 = !DILocation(line: 395, column: 52, scope: !12970)
!13119 = !DILocalVariable(name: "v2", scope: !13120, file: !9588, line: 395, type: !9, align: 8)
!13120 = !DILexicalBlockFile(scope: !13121, file: !9588, discriminator: 0)
!13121 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17ha3986f0d3266fd91E", scope: !286, file: !2936, line: 1278, type: !2917, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !13122)
!13122 = !{!13123, !13119}
!13123 = !DILocalVariable(name: "v1", scope: !13120, file: !9588, line: 395, type: !9, align: 8)
!13124 = !DILocation(line: 395, column: 19, scope: !13120, inlinedAt: !13125)
!13125 = !DILocation(line: 395, column: 19, scope: !12970)
!13126 = !DILocation(line: 395, column: 13, scope: !12972)
!13127 = !DILocation(line: 397, column: 26, scope: !12972)
!13128 = !DILocation(line: 397, column: 13, scope: !12974)
!13129 = !DILocation(line: 400, column: 43, scope: !12974)
!13130 = !DILocation(line: 400, column: 66, scope: !12974)
!13131 = !DILocation(line: 400, column: 19, scope: !13070, inlinedAt: !13076)
!13132 = !DILocation(line: 400, column: 19, scope: !13073, inlinedAt: !13076)
!13133 = !DILocation(line: 400, column: 19, scope: !12980)
!13134 = !DILocation(line: 400, column: 13, scope: !12976)
!13135 = !DILocation(line: 401, column: 9, scope: !12976)
!13136 = !DILocation(line: 400, column: 82, scope: !12974)
!13137 = !DILocation(line: 400, column: 82, scope: !12978)
!13138 = !DILocation(line: 400, column: 19, scope: !13084, inlinedAt: !13088)
!13139 = !DILocation(line: 1, column: 1, scope: !13140)
!13140 = !DILexicalBlockFile(scope: !12964, file: !4178, discriminator: 0)
!13141 = !DILocation(line: 403, column: 6, scope: !12955)
!13142 = !DILocation(line: 402, column: 9, scope: !12976)
!13143 = !DILocation(line: 386, column: 20, scope: !12955)
!13144 = distinct !DISubprogram(name: "set_ptr_and_cap<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h65020c8da3b106aaE", scope: !319, file: !9588, line: 364, type: !13145, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !13147)
!13145 = !DISubroutineType(types: !13146)
!13146 = !{null, !12958, !7489, !9}
!13147 = !{!13148, !13149, !13150}
!13148 = !DILocalVariable(name: "self", arg: 1, scope: !13144, file: !9588, line: 364, type: !12958)
!13149 = !DILocalVariable(name: "ptr", arg: 2, scope: !13144, file: !9588, line: 364, type: !7489)
!13150 = !DILocalVariable(name: "cap", arg: 3, scope: !13144, file: !9588, line: 364, type: !9)
!13151 = !DILocation(line: 364, column: 24, scope: !13144)
!13152 = !DILocation(line: 364, column: 35, scope: !13144)
!13153 = !DILocation(line: 364, column: 55, scope: !13144)
!13154 = !DILocalVariable(name: "self", scope: !13155, file: !9588, line: 368, type: !326, align: 8)
!13155 = !DILexicalBlockFile(scope: !13156, file: !9588, discriminator: 0)
!13156 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13157)
!13157 = !{!13154}
!13158 = !DILocation(line: 368, column: 51, scope: !13155, inlinedAt: !13159)
!13159 = !DILocation(line: 368, column: 51, scope: !13144)
!13160 = !DILocalVariable(name: "self", scope: !13161, file: !9588, line: 368, type: !7489, align: 8)
!13161 = !DILexicalBlockFile(scope: !13162, file: !9588, discriminator: 0)
!13162 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5229867b445db90dE", scope: !7489, file: !646, line: 453, type: !11339, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !12056, retainedNodes: !13163)
!13163 = !{!13160}
!13164 = !DILocation(line: 368, column: 51, scope: !13161, inlinedAt: !13159)
!13165 = !DILocalVariable(name: "self", scope: !13166, file: !9588, line: 368, type: !7489, align: 8)
!13166 = !DILexicalBlockFile(scope: !13167, file: !9588, discriminator: 0)
!13167 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h078a6a703e08f315E", scope: !7489, file: !646, line: 330, type: !11346, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13168)
!13168 = !{!13165}
!13169 = !DILocation(line: 368, column: 51, scope: !13166, inlinedAt: !13170)
!13170 = !DILocation(line: 455, column: 41, scope: !13162, inlinedAt: !13159)
!13171 = !DILocalVariable(name: "ptr", scope: !13172, file: !9588, line: 368, type: !649, align: 8)
!13172 = !DILexicalBlockFile(scope: !13173, file: !9588, discriminator: 0)
!13173 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13174)
!13174 = !{!13171}
!13175 = !DILocation(line: 368, column: 51, scope: !13172, inlinedAt: !13176)
!13176 = !DILocation(line: 455, column: 18, scope: !13162, inlinedAt: !13159)
!13177 = !DILocalVariable(name: "ptr", scope: !13178, file: !9588, line: 368, type: !649, align: 8)
!13178 = !DILexicalBlockFile(scope: !13179, file: !9588, discriminator: 0)
!13179 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h76dc1591046a42dbE", scope: !322, file: !1743, line: 85, type: !12652, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13180)
!13180 = !{!13177}
!13181 = !DILocation(line: 368, column: 29, scope: !13178, inlinedAt: !13182)
!13182 = !DILocation(line: 368, column: 29, scope: !13144)
!13183 = !DILocalVariable(name: "ptr", scope: !13184, file: !9588, line: 368, type: !649, align: 8)
!13184 = !DILexicalBlockFile(scope: !13185, file: !9588, discriminator: 0)
!13185 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13186)
!13186 = !{!13183}
!13187 = !DILocation(line: 368, column: 29, scope: !13184, inlinedAt: !13188)
!13188 = !DILocation(line: 87, column: 36, scope: !13179, inlinedAt: !13182)
!13189 = !DILocation(line: 368, column: 9, scope: !13144)
!13190 = !DILocation(line: 369, column: 9, scope: !13144)
!13191 = !DILocation(line: 370, column: 6, scope: !13144)
!13192 = distinct !DISubprogram(name: "new_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h436abdc57eb7e83aE", scope: !319, file: !9588, line: 121, type: !13193, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !13195)
!13193 = !DISubroutineType(types: !13194)
!13194 = !{!319, !336}
!13195 = !{!13196}
!13196 = !DILocalVariable(name: "alloc", arg: 1, scope: !13192, file: !9588, line: 121, type: !336)
!13197 = !DILocation(line: 121, column: 25, scope: !13192)
!13198 = !DILocalVariable(name: "pointer", scope: !13199, file: !9588, line: 123, type: !326, align: 8)
!13199 = !DILexicalBlockFile(scope: !13200, file: !9588, discriminator: 0)
!13200 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hea5c3c9f5f4f0d42E", scope: !11405, file: !1743, line: 190, type: !11406, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13201)
!13201 = !{!13198}
!13202 = !DILocation(line: 123, column: 21, scope: !13199, inlinedAt: !13203)
!13203 = !DILocation(line: 73, column: 9, scope: !13204, inlinedAt: !13207)
!13204 = distinct !DISubprogram(name: "dangling<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h917415f75a6d4bd0E", scope: !322, file: !1743, line: 72, type: !13205, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!13205 = !DISubroutineType(types: !13206)
!13206 = !{!322}
!13207 = !DILocation(line: 123, column: 21, scope: !13192)
!13208 = !DILocation(line: 123, column: 21, scope: !13209, inlinedAt: !13211)
!13209 = !DILexicalBlockFile(scope: !13210, file: !9588, discriminator: 0)
!13210 = distinct !DISubprogram(name: "align_of<u8>", linkageName: "_ZN4core3mem8align_of17h5221b0874f0c01ccE", scope: !210, file: !627, line: 464, type: !628, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!13211 = !DILocation(line: 95, column: 52, scope: !13212, inlinedAt: !13219)
!13212 = distinct !DISubprogram(name: "dangling<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h3c63f234e5dea971E", scope: !326, file: !646, line: 90, type: !13213, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13215)
!13213 = !DISubroutineType(types: !13214)
!13214 = !{!326}
!13215 = !{!13216}
!13216 = !DILocalVariable(name: "ptr", scope: !13217, file: !9588, line: 123, type: !649, align: 8)
!13217 = !DILexicalBlockFile(scope: !13218, file: !9588, discriminator: 0)
!13218 = distinct !DILexicalBlock(scope: !13212, file: !646, line: 95, column: 13)
!13219 = !DILocation(line: 73, column: 20, scope: !13204, inlinedAt: !13207)
!13220 = !DILocalVariable(name: "addr", scope: !13221, file: !9588, line: 123, type: !9, align: 8)
!13221 = !DILexicalBlockFile(scope: !13222, file: !9588, discriminator: 0)
!13222 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h110b4e97c6262135E", scope: !43, file: !399, line: 569, type: !10835, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13223)
!13223 = !{!13220}
!13224 = !DILocation(line: 123, column: 21, scope: !13221, inlinedAt: !13225)
!13225 = !DILocation(line: 95, column: 23, scope: !13212, inlinedAt: !13219)
!13226 = !DILocation(line: 123, column: 21, scope: !13217, inlinedAt: !13219)
!13227 = !DILocalVariable(name: "ptr", scope: !13228, file: !9588, line: 123, type: !649, align: 8)
!13228 = !DILexicalBlockFile(scope: !13229, file: !9588, discriminator: 0)
!13229 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13230)
!13230 = !{!13227}
!13231 = !DILocation(line: 123, column: 21, scope: !13228, inlinedAt: !13232)
!13232 = !DILocation(line: 96, column: 13, scope: !13218, inlinedAt: !13219)
!13233 = !DILocation(line: 123, column: 9, scope: !13192)
!13234 = !DILocation(line: 124, column: 6, scope: !13192)
!13235 = !DILocation(line: 124, column: 5, scope: !13192)
!13236 = !DILocation(line: 121, column: 5, scope: !13192)
!13237 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h1c09bbfa83d176d6E", scope: !319, file: !9588, line: 274, type: !13238, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !13240)
!13238 = !DISubroutineType(types: !13239)
!13239 = !{null, !12958, !9, !9}
!13240 = !{!13241, !13242, !13243}
!13241 = !DILocalVariable(name: "self", arg: 1, scope: !13237, file: !9588, line: 274, type: !12958)
!13242 = !DILocalVariable(name: "len", arg: 2, scope: !13237, file: !9588, line: 274, type: !9)
!13243 = !DILocalVariable(name: "additional", arg: 3, scope: !13237, file: !9588, line: 274, type: !9)
!13244 = !DILocation(line: 274, column: 20, scope: !13237)
!13245 = !DILocation(line: 274, column: 31, scope: !13237)
!13246 = !DILocation(line: 274, column: 43, scope: !13237)
!13247 = !DILocation(line: 288, column: 12, scope: !13237)
!13248 = !DILocation(line: 291, column: 6, scope: !13237)
!13249 = !DILocation(line: 289, column: 13, scope: !13237)
!13250 = !DILocation(line: 288, column: 9, scope: !13237)
!13251 = distinct !DISubprogram(name: "do_reserve_and_handle<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9e5fa404d7577aaeE", scope: !13252, file: !9588, line: 280, type: !13238, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !13254)
!13252 = !DINamespace(name: "reserve", scope: !13253)
!13253 = !DINamespace(name: "{impl#1}", scope: !299)
!13254 = !{!13255, !13256, !13257}
!13255 = !DILocalVariable(name: "slf", arg: 1, scope: !13251, file: !9588, line: 281, type: !12958)
!13256 = !DILocalVariable(name: "len", arg: 2, scope: !13251, file: !9588, line: 282, type: !9)
!13257 = !DILocalVariable(name: "additional", arg: 3, scope: !13251, file: !9588, line: 283, type: !9)
!13258 = !DILocation(line: 281, column: 13, scope: !13251)
!13259 = !DILocation(line: 282, column: 13, scope: !13251)
!13260 = !DILocation(line: 283, column: 13, scope: !13251)
!13261 = !DILocation(line: 285, column: 28, scope: !13251)
!13262 = !DILocation(line: 285, column: 13, scope: !13251)
!13263 = !DILocation(line: 286, column: 10, scope: !13251)
!13264 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hcfbfb7ac5f978e32E", scope: !13265, file: !306, line: 2227, type: !3014, scopeLine: 2227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13266)
!13265 = !DINamespace(name: "{impl#20}", scope: !308)
!13266 = !{!13267, !13268}
!13267 = !DILocalVariable(name: "self", arg: 1, scope: !13264, file: !306, line: 2227, type: !311)
!13268 = !DILocalVariable(name: "f", arg: 2, scope: !13264, file: !306, line: 2227, type: !2150)
!13269 = !DILocation(line: 2227, column: 12, scope: !13264)
!13270 = !DILocation(line: 2227, column: 19, scope: !13264)
!13271 = !DILocation(line: 2228, column: 28, scope: !13264)
!13272 = !DILocation(line: 2228, column: 9, scope: !13264)
!13273 = !DILocation(line: 2229, column: 6, scope: !13264)
!13274 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hc18953163df21e41E", scope: !13275, file: !7859, line: 246, type: !13276, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13278)
!13275 = !DINamespace(name: "{impl#1}", scope: !337)
!13276 = !DISubroutineType(types: !13277)
!13277 = !{null, !7863, !326, !1779}
!13278 = !{!13279, !13280, !13281}
!13279 = !DILocalVariable(name: "self", arg: 1, scope: !13274, file: !7859, line: 246, type: !7863)
!13280 = !DILocalVariable(name: "ptr", arg: 2, scope: !13274, file: !7859, line: 246, type: !326)
!13281 = !DILocalVariable(name: "layout", arg: 3, scope: !13274, file: !7859, line: 246, type: !1779)
!13282 = !DILocation(line: 246, column: 26, scope: !13274)
!13283 = !DILocation(line: 246, column: 33, scope: !13274)
!13284 = !DILocation(line: 246, column: 51, scope: !13274)
!13285 = !DILocalVariable(name: "layout", scope: !13286, file: !7859, line: 250, type: !1779, align: 8)
!13286 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h5d81fbfccf5fed7eE", scope: !337, file: !7859, line: 112, type: !13287, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13289)
!13287 = !DISubroutineType(types: !13288)
!13288 = !{null, !649, !1779}
!13289 = !{!13290, !13285}
!13290 = !DILocalVariable(name: "ptr", scope: !13286, file: !7859, line: 250, type: !649, align: 8)
!13291 = !DILocation(line: 250, column: 22, scope: !13286, inlinedAt: !13292)
!13292 = !DILocation(line: 250, column: 22, scope: !13274)
!13293 = !DILocalVariable(name: "self", scope: !13294, file: !7859, line: 250, type: !5542, align: 8)
!13294 = !DILexicalBlockFile(scope: !13295, file: !7859, discriminator: 0)
!13295 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h7f806ad5ab662e58E", scope: !5542, file: !5541, line: 82, type: !5546, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13296)
!13296 = !{!13293}
!13297 = !DILocation(line: 250, column: 22, scope: !13294, inlinedAt: !13298)
!13298 = !DILocation(line: 131, column: 9, scope: !13299, inlinedAt: !13303)
!13299 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h3e0d62183062772bE", scope: !1779, file: !5505, line: 130, type: !10762, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13300)
!13300 = !{!13301}
!13301 = !DILocalVariable(name: "self", scope: !13302, file: !7859, line: 250, type: !7521, align: 8)
!13302 = !DILexicalBlockFile(scope: !13299, file: !7859, discriminator: 0)
!13303 = !DILocation(line: 113, column: 49, scope: !13286, inlinedAt: !13292)
!13304 = !DILocalVariable(name: "self", scope: !13305, file: !7859, line: 250, type: !1785, align: 8)
!13305 = !DILexicalBlockFile(scope: !13306, file: !7859, discriminator: 0)
!13306 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1e82be90dc0c6709E", scope: !1785, file: !5554, line: 39, type: !5555, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13307)
!13307 = !{!13304}
!13308 = !DILocation(line: 250, column: 22, scope: !13305, inlinedAt: !13298)
!13309 = !DILocation(line: 247, column: 12, scope: !13274)
!13310 = !DILocalVariable(name: "self", scope: !13311, file: !7859, line: 247, type: !7521, align: 8)
!13311 = !DILexicalBlockFile(scope: !13312, file: !7859, discriminator: 0)
!13312 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hbd42faa40e199470E", scope: !1779, file: !5505, line: 120, type: !10762, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13313)
!13313 = !{!13310}
!13314 = !DILocation(line: 247, column: 12, scope: !13311, inlinedAt: !13309)
!13315 = !DILocation(line: 247, column: 9, scope: !13274)
!13316 = !DILocation(line: 250, column: 30, scope: !13274)
!13317 = !DILocalVariable(name: "self", scope: !13318, file: !7859, line: 250, type: !326, align: 8)
!13318 = !DILexicalBlockFile(scope: !13319, file: !7859, discriminator: 0)
!13319 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13320)
!13320 = !{!13317}
!13321 = !DILocation(line: 250, column: 30, scope: !13318, inlinedAt: !13316)
!13322 = !DILocation(line: 250, column: 44, scope: !13274)
!13323 = !DILocalVariable(name: "self", scope: !13324, file: !7859, line: 250, type: !7521, align: 8)
!13324 = !DILexicalBlockFile(scope: !13325, file: !7859, discriminator: 0)
!13325 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17hbd42faa40e199470E", scope: !1779, file: !5505, line: 120, type: !10762, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13326)
!13326 = !{!13323}
!13327 = !DILocation(line: 250, column: 22, scope: !13324, inlinedAt: !13328)
!13328 = !DILocation(line: 113, column: 34, scope: !13286, inlinedAt: !13292)
!13329 = !DILocation(line: 250, column: 22, scope: !13302, inlinedAt: !13303)
!13330 = !DILocalVariable(name: "n", scope: !13331, file: !7859, line: 250, type: !9, align: 8)
!13331 = !DILexicalBlockFile(scope: !13332, file: !7859, discriminator: 0)
!13332 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha90a789d0493167fE", scope: !5542, file: !5541, line: 56, type: !5563, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13333)
!13333 = !{!13330, !13334}
!13334 = !DILocalVariable(name: "runtime", scope: !13335, file: !7859, line: 250, type: !5569, align: 8)
!13335 = !DILexicalBlockFile(scope: !13336, file: !7859, discriminator: 0)
!13336 = distinct !DILexicalBlock(scope: !13332, file: !386, line: 2336, column: 13)
!13337 = !DILocation(line: 250, column: 22, scope: !13331, inlinedAt: !13338)
!13338 = !DILocation(line: 41, column: 18, scope: !13306, inlinedAt: !13298)
!13339 = !DILocation(line: 252, column: 6, scope: !13274)
!13340 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h53c6b5eb8ad323aeE", scope: !13275, file: !7859, line: 241, type: !13341, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13343)
!13341 = !DISubroutineType(types: !13342)
!13342 = !{!7481, !7863, !1779}
!13343 = !{!13344, !13345}
!13344 = !DILocalVariable(name: "self", arg: 1, scope: !13340, file: !7859, line: 241, type: !7863)
!13345 = !DILocalVariable(name: "layout", arg: 2, scope: !13340, file: !7859, line: 241, type: !1779)
!13346 = !DILocation(line: 241, column: 24, scope: !13340)
!13347 = !DILocation(line: 241, column: 31, scope: !13340)
!13348 = !DILocation(line: 242, column: 9, scope: !13340)
!13349 = !DILocation(line: 243, column: 6, scope: !13340)
!13350 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17h9d4d09305fd7e816E", scope: !13275, file: !7859, line: 255, type: !13351, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13353)
!13351 = !DISubroutineType(types: !13352)
!13352 = !{!7481, !7863, !326, !1779, !1779}
!13353 = !{!13354, !13355, !13356, !13357}
!13354 = !DILocalVariable(name: "self", arg: 1, scope: !13350, file: !7859, line: 256, type: !7863)
!13355 = !DILocalVariable(name: "ptr", arg: 2, scope: !13350, file: !7859, line: 257, type: !326)
!13356 = !DILocalVariable(name: "old_layout", arg: 3, scope: !13350, file: !7859, line: 258, type: !1779)
!13357 = !DILocalVariable(name: "new_layout", arg: 4, scope: !13350, file: !7859, line: 259, type: !1779)
!13358 = !DILocation(line: 256, column: 9, scope: !13350)
!13359 = !DILocation(line: 257, column: 9, scope: !13350)
!13360 = !DILocation(line: 258, column: 9, scope: !13350)
!13361 = !DILocation(line: 259, column: 9, scope: !13350)
!13362 = !DILocation(line: 262, column: 18, scope: !13350)
!13363 = !DILocation(line: 263, column: 6, scope: !13350)
!13364 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h5362ef78c2fe951dE", scope: !13275, file: !7859, line: 236, type: !13341, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13365)
!13365 = !{!13366, !13367}
!13366 = !DILocalVariable(name: "self", arg: 1, scope: !13364, file: !7859, line: 236, type: !7863)
!13367 = !DILocalVariable(name: "layout", arg: 2, scope: !13364, file: !7859, line: 236, type: !1779)
!13368 = !DILocation(line: 236, column: 17, scope: !13364)
!13369 = !DILocation(line: 236, column: 24, scope: !13364)
!13370 = !DILocation(line: 237, column: 9, scope: !13364)
!13371 = !DILocation(line: 238, column: 6, scope: !13364)
!13372 = distinct !DISubprogram(name: "default", linkageName: "_ZN64_$LT$alloc..string..String$u20$as$u20$core..default..Default$GT$7default17h769a922eb9f1dd50E", scope: !13373, file: !306, line: 2219, type: !13374, scopeLine: 2219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!13373 = !DINamespace(name: "{impl#19}", scope: !308)
!13374 = !DISubroutineType(types: !13375)
!13375 = !{!312}
!13376 = !DILocation(line: 2220, column: 9, scope: !13377, inlinedAt: !13379)
!13377 = !DILexicalBlockFile(scope: !13378, file: !306, discriminator: 0)
!13378 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h295fcc974fe60ecaE", scope: !315, file: !362, line: 424, type: !9608, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!13379 = !DILocation(line: 455, column: 23, scope: !13380, inlinedAt: !13381)
!13380 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc6string6String3new17h2b02ff5249b4c826E", scope: !312, file: !306, line: 454, type: !13374, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !23)
!13381 = !DILocation(line: 2220, column: 9, scope: !13372)
!13382 = !DILocation(line: 2220, column: 9, scope: !13380, inlinedAt: !13381)
!13383 = !DILocation(line: 2221, column: 6, scope: !13372)
!13384 = distinct !DISubprogram(name: "deref", linkageName: "_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17hafbae0a21e2ab543E", scope: !13385, file: !306, line: 2412, type: !13386, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13388)
!13385 = !DINamespace(name: "{impl#37}", scope: !308)
!13386 = !DISubroutineType(types: !13387)
!13387 = !{!137, !311}
!13388 = !{!13389}
!13389 = !DILocalVariable(name: "self", arg: 1, scope: !13384, file: !306, line: 2412, type: !311)
!13390 = !DILocation(line: 2412, column: 14, scope: !13384)
!13391 = !DILocation(line: 2413, column: 43, scope: !13384)
!13392 = !DILocalVariable(name: "self", scope: !13393, file: !306, line: 2413, type: !370, align: 8)
!13393 = !DILexicalBlockFile(scope: !13394, file: !306, discriminator: 0)
!13394 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2b77cc1908e440a5E", scope: !363, file: !362, line: 2531, type: !364, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !13395)
!13395 = !{!13392}
!13396 = !DILocation(line: 2413, column: 43, scope: !13393, inlinedAt: !13391)
!13397 = !DILocalVariable(name: "data", scope: !13398, file: !306, line: 2413, type: !329, align: 8)
!13398 = !DILexicalBlockFile(scope: !13399, file: !306, discriminator: 0)
!13399 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hc9808a0b8f9d77eeE", scope: !377, file: !376, line: 90, type: !379, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13400)
!13400 = !{!13397, !13401, !13402}
!13401 = !DILocalVariable(name: "len", scope: !13398, file: !306, line: 2413, type: !9, align: 8)
!13402 = !DILocalVariable(name: "runtime", scope: !13403, file: !306, line: 2413, type: !387, align: 8)
!13403 = !DILexicalBlockFile(scope: !13404, file: !306, discriminator: 0)
!13404 = distinct !DILexicalBlock(scope: !13399, file: !386, line: 2336, column: 13)
!13405 = !DILocation(line: 2413, column: 43, scope: !13398, inlinedAt: !13406)
!13406 = !DILocation(line: 2532, column: 18, scope: !13394, inlinedAt: !13391)
!13407 = !DILocalVariable(name: "data", scope: !13408, file: !306, line: 2413, type: !329, align: 8)
!13408 = !DILexicalBlockFile(scope: !13409, file: !306, discriminator: 0)
!13409 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6a66992555506ab5E", scope: !43, file: !399, line: 695, type: !400, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13410)
!13410 = !{!13407, !13411}
!13411 = !DILocalVariable(name: "len", scope: !13408, file: !306, line: 2413, type: !9, align: 8)
!13412 = !DILocation(line: 2413, column: 43, scope: !13408, inlinedAt: !13413)
!13413 = !DILocation(line: 97, column: 11, scope: !13399, inlinedAt: !13406)
!13414 = !DILocalVariable(name: "self", scope: !13415, file: !306, line: 2413, type: !329, align: 8)
!13415 = !DILexicalBlockFile(scope: !13416, file: !306, discriminator: 0)
!13416 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb951d44ade26c9c5E", scope: !414, file: !413, line: 46, type: !416, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !13417)
!13417 = !{!13414}
!13418 = !DILocation(line: 2413, column: 43, scope: !13415, inlinedAt: !13419)
!13419 = !DILocation(line: 696, column: 20, scope: !13409, inlinedAt: !13413)
!13420 = !DILocalVariable(name: "data_address", scope: !13421, file: !306, line: 2413, type: !6, align: 8)
!13421 = !DILexicalBlockFile(scope: !13422, file: !306, discriminator: 0)
!13422 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h9dc36a19d85d94baE", scope: !427, file: !426, line: 110, type: !428, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13423)
!13423 = !{!13420, !13424}
!13424 = !DILocalVariable(name: "metadata", scope: !13421, file: !306, line: 2413, type: !9, align: 8)
!13425 = !DILocation(line: 2413, column: 43, scope: !13421, inlinedAt: !13426)
!13426 = !DILocation(line: 696, column: 5, scope: !13409, inlinedAt: !13413)
!13427 = !DILocalVariable(name: "v", scope: !13428, file: !306, line: 2413, type: !366, align: 8)
!13428 = !DILexicalBlockFile(scope: !13429, file: !306, discriminator: 0)
!13429 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17h8c139c294e9791faE", scope: !438, file: !437, line: 170, type: !440, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13430)
!13430 = !{!13427}
!13431 = !DILocation(line: 2413, column: 18, scope: !13428, inlinedAt: !13432)
!13432 = !DILocation(line: 2413, column: 18, scope: !13384)
!13433 = !DILocation(line: 2414, column: 6, scope: !13384)
!13434 = distinct !DISubprogram(name: "fmt<str>", linkageName: "_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17h0082b1a9c3918ff0E", scope: !13436, file: !13435, line: 402, type: !3109, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3092, retainedNodes: !13437)
!13435 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/borrow.rs", directory: "", checksumkind: CSK_MD5, checksum: "05347f44369ceb571d9f4592b25a187e")
!13436 = !DINamespace(name: "{impl#10}", scope: !3084)
!13437 = !{!13438, !13439, !13440, !13442}
!13438 = !DILocalVariable(name: "self", arg: 1, scope: !13434, file: !13435, line: 402, type: !3082)
!13439 = !DILocalVariable(name: "f", arg: 2, scope: !13434, file: !13435, line: 402, type: !2150)
!13440 = !DILocalVariable(name: "b", scope: !13441, file: !13435, line: 404, type: !199, align: 8)
!13441 = distinct !DILexicalBlock(scope: !13434, file: !13435, line: 404, column: 13)
!13442 = !DILocalVariable(name: "o", scope: !13443, file: !13435, line: 405, type: !311, align: 8)
!13443 = distinct !DILexicalBlock(scope: !13434, file: !13435, line: 405, column: 13)
!13444 = !DILocation(line: 402, column: 12, scope: !13434)
!13445 = !DILocation(line: 402, column: 19, scope: !13434)
!13446 = !DILocation(line: 403, column: 15, scope: !13434)
!13447 = !DILocation(line: 403, column: 9, scope: !13434)
!13448 = !DILocation(line: 404, column: 22, scope: !13434)
!13449 = !DILocation(line: 404, column: 22, scope: !13441)
!13450 = !DILocation(line: 404, column: 32, scope: !13441)
!13451 = !DILocation(line: 405, column: 19, scope: !13434)
!13452 = !DILocation(line: 405, column: 19, scope: !13443)
!13453 = !DILocation(line: 405, column: 29, scope: !13443)
!13454 = !DILocation(line: 405, column: 51, scope: !13434)
!13455 = !DILocation(line: 407, column: 6, scope: !13434)
!13456 = !DILocation(line: 404, column: 54, scope: !13434)
!13457 = distinct !DISubprogram(name: "fmt<&str>", linkageName: "_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hefaa21c78fc9c5fbE", scope: !13458, file: !1664, line: 515, type: !13459, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !13461)
!13458 = !DINamespace(name: "{impl#47}", scope: !177)
!13459 = !DISubroutineType(types: !13460)
!13460 = !{!2133, !175, !2150}
!13461 = !{!13462, !13463, !13464}
!13462 = !DILocalVariable(name: "self", arg: 1, scope: !13457, file: !1664, line: 515, type: !175)
!13463 = !DILocalVariable(name: "f", arg: 2, scope: !13457, file: !1664, line: 515, type: !2150)
!13464 = !DILocalVariable(name: "__self_0", scope: !13465, file: !1664, line: 526, type: !199, align: 8)
!13465 = distinct !DILexicalBlock(scope: !13457, file: !1664, line: 515, column: 48)
!13466 = !DILocation(line: 515, column: 48, scope: !13457)
!13467 = !DILocation(line: 526, column: 56, scope: !13465)
!13468 = !DILocation(line: 526, column: 56, scope: !13457)
!13469 = !DILocation(line: 515, column: 48, scope: !13465)
!13470 = !DILocation(line: 515, column: 52, scope: !13457)
!13471 = !DILocation(line: 515, column: 53, scope: !13457)
!13472 = distinct !DISubprogram(name: "drop", linkageName: "_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17he8a0e41e7ccbaa0aE", scope: !13474, file: !13473, line: 701, type: !13475, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13478)
!13473 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "6e5500bcb59fd49c7b9dab08f5bff02d")
!13474 = !DINamespace(name: "{impl#2}", scope: !2596)
!13475 = !DISubroutineType(types: !13476)
!13476 = !{null, !13477}
!13477 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::ffi::c_str::CString", baseType: !2595, size: 64, align: 64, dwarfAddressSpace: 0)
!13478 = !{!13479}
!13479 = !DILocalVariable(name: "self", arg: 1, scope: !13472, file: !13473, line: 701, type: !13477)
!13480 = !DILocation(line: 701, column: 13, scope: !13472)
!13481 = !DILocation(line: 703, column: 14, scope: !13472)
!13482 = !DILocalVariable(name: "self", scope: !13483, file: !13473, line: 703, type: !1109, align: 8)
!13483 = !DILexicalBlockFile(scope: !13484, file: !13473, discriminator: 0)
!13484 = distinct !DISubprogram(name: "get_unchecked_mut<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hc7f5908efafc00b9E", scope: !2489, file: !2488, line: 436, type: !13485, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !13489, retainedNodes: !13487)
!13485 = !DISubroutineType(types: !13486)
!13486 = !{!5010, !1109, !9}
!13487 = !{!13482, !13488}
!13488 = !DILocalVariable(name: "index", scope: !13483, file: !13473, line: 703, type: !9, align: 8)
!13489 = !{!331, !8339}
!13490 = !DILocation(line: 703, column: 14, scope: !13483, inlinedAt: !13481)
!13491 = !DILocalVariable(name: "slice", scope: !13492, file: !13473, line: 703, type: !898, align: 8)
!13492 = !DILexicalBlockFile(scope: !13493, file: !13473, discriminator: 0)
!13493 = distinct !DISubprogram(name: "get_unchecked_mut<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h211ec7b546c1784fE", scope: !8345, file: !818, line: 231, type: !13494, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13496)
!13494 = !DISubroutineType(types: !13495)
!13495 = !{!649, !9, !898}
!13496 = !{!13497, !13491, !13498}
!13497 = !DILocalVariable(name: "self", scope: !13492, file: !13473, line: 703, type: !9, align: 8)
!13498 = !DILocalVariable(name: "runtime", scope: !13499, file: !13473, line: 703, type: !13501, align: 8)
!13499 = !DILexicalBlockFile(scope: !13500, file: !13473, discriminator: 0)
!13500 = distinct !DILexicalBlock(scope: !13493, file: !386, line: 2336, column: 13)
!13501 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !8359, file: !2, size: 128, align: 64, elements: !13502, templateParams: !23, identifier: "d62b7ba1fd49927eee591e95c4576f60")
!13502 = !{!13503, !13504}
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !13501, file: !2, baseType: !393, size: 64, align: 64)
!13504 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !13501, file: !2, baseType: !914, size: 64, align: 64, offset: 64)
!13505 = !DILocation(line: 703, column: 14, scope: !13492, inlinedAt: !13506)
!13506 = !DILocation(line: 443, column: 24, scope: !13484, inlinedAt: !13481)
!13507 = !DILocalVariable(name: "self", scope: !13508, file: !13473, line: 703, type: !898, align: 8)
!13508 = !DILexicalBlockFile(scope: !13509, file: !13473, discriminator: 0)
!13509 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hdbeffb196cf668a7E", scope: !922, file: !656, line: 1778, type: !923, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13510)
!13510 = !{!13507}
!13511 = !DILocation(line: 703, column: 14, scope: !13508, inlinedAt: !13512)
!13512 = !DILocation(line: 235, column: 13, scope: !13493, inlinedAt: !13506)
!13513 = !DILocalVariable(name: "self", scope: !13514, file: !13473, line: 703, type: !649, align: 8)
!13514 = !DILexicalBlockFile(scope: !13515, file: !13473, discriminator: 0)
!13515 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hce9ae179be503a7aE", scope: !657, file: !656, line: 985, type: !930, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13516)
!13516 = !{!13513, !13517}
!13517 = !DILocalVariable(name: "count", scope: !13514, file: !13473, line: 703, type: !9, align: 8)
!13518 = !DILocation(line: 703, column: 14, scope: !13514, inlinedAt: !13512)
!13519 = !DILocalVariable(name: "self", scope: !13520, file: !13473, line: 703, type: !649, align: 8)
!13520 = !DILexicalBlockFile(scope: !13521, file: !13473, discriminator: 0)
!13521 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h7a151f4cf998d469E", scope: !657, file: !656, line: 465, type: !939, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13522)
!13522 = !{!13519, !13523}
!13523 = !DILocalVariable(name: "count", scope: !13520, file: !13473, line: 703, type: !868, align: 8)
!13524 = !DILocation(line: 703, column: 14, scope: !13520, inlinedAt: !13525)
!13525 = !DILocation(line: 990, column: 18, scope: !13515, inlinedAt: !13512)
!13526 = !DILocation(line: 703, column: 13, scope: !13472)
!13527 = !DILocation(line: 705, column: 6, scope: !13472)
!13528 = distinct !DISubprogram(name: "drop", linkageName: "_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8a4c2bd86d948212E", scope: !13530, file: !13529, line: 168, type: !13531, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13534)
!13529 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/os/fd/owned.rs", directory: "", checksumkind: CSK_MD5, checksum: "bac691de2b636d9ce659271bd9aab484")
!13530 = !DINamespace(name: "{impl#7}", scope: !2762)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{null, !13533}
!13533 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::os::fd::owned::OwnedFd", baseType: !2761, size: 64, align: 64, dwarfAddressSpace: 0)
!13534 = !{!13535}
!13535 = !DILocalVariable(name: "self", arg: 1, scope: !13528, file: !13529, line: 168, type: !13533)
!13536 = !DILocation(line: 168, column: 13, scope: !13528)
!13537 = !DILocation(line: 175, column: 33, scope: !13528)
!13538 = !DILocation(line: 175, column: 21, scope: !13528)
!13539 = !DILocation(line: 177, column: 6, scope: !13528)
!13540 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h01da44811e7732aeE", scope: !13541, file: !362, line: 2915, type: !13542, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !13544)
!13541 = !DINamespace(name: "{impl#28}", scope: !316)
!13542 = !DISubroutineType(types: !13543)
!13543 = !{null, !1802}
!13544 = !{!13545}
!13545 = !DILocalVariable(name: "self", arg: 1, scope: !13540, file: !362, line: 2915, type: !1802)
!13546 = !DILocation(line: 2915, column: 13, scope: !13540)
!13547 = !DILocation(line: 2920, column: 62, scope: !13540)
!13548 = !DILocalVariable(name: "data", scope: !13549, file: !362, line: 2920, type: !649, align: 8)
!13549 = !DILexicalBlockFile(scope: !13550, file: !362, discriminator: 0)
!13550 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17he9d89cd098aed2e1E", scope: !43, file: !399, line: 727, type: !948, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13551)
!13551 = !{!13548, !13552}
!13552 = !DILocalVariable(name: "len", scope: !13549, file: !362, line: 2920, type: !9, align: 8)
!13553 = !DILocation(line: 2920, column: 32, scope: !13549, inlinedAt: !13554)
!13554 = !DILocation(line: 2920, column: 32, scope: !13540)
!13555 = !DILocation(line: 2920, column: 81, scope: !13540)
!13556 = !DILocalVariable(name: "self", scope: !13557, file: !362, line: 2920, type: !649, align: 8)
!13557 = !DILexicalBlockFile(scope: !13558, file: !362, discriminator: 0)
!13558 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hef927cab6f2be5beE", scope: !657, file: !656, line: 45, type: !958, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !13559)
!13559 = !{!13556}
!13560 = !DILocation(line: 2920, column: 32, scope: !13557, inlinedAt: !13561)
!13561 = !DILocation(line: 728, column: 24, scope: !13550, inlinedAt: !13554)
!13562 = !DILocalVariable(name: "data_address", scope: !13563, file: !362, line: 2920, type: !960, align: 8)
!13563 = !DILexicalBlockFile(scope: !13564, file: !362, discriminator: 0)
!13564 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hb43c8ca59c3ce57eE", scope: !427, file: !426, line: 127, type: !967, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13565)
!13565 = !{!13562, !13566}
!13566 = !DILocalVariable(name: "metadata", scope: !13563, file: !362, line: 2920, type: !9, align: 8)
!13567 = !DILocation(line: 2920, column: 32, scope: !13563, inlinedAt: !13568)
!13568 = !DILocation(line: 728, column: 5, scope: !13550, inlinedAt: !13554)
!13569 = !DILocation(line: 2920, column: 13, scope: !13540)
!13570 = !DILocation(line: 2923, column: 6, scope: !13540)
!13571 = distinct !DISubprogram(name: "drop<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h463cdfb33676b2f8E", scope: !13541, file: !362, line: 2915, type: !13572, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2713, retainedNodes: !13574)
!13572 = !DISubroutineType(types: !13573)
!13573 = !{null, !10322}
!13574 = !{!13575}
!13575 = !DILocalVariable(name: "self", arg: 1, scope: !13571, file: !362, line: 2915, type: !10322)
!13576 = !DILocation(line: 2915, column: 13, scope: !13571)
!13577 = !DILocation(line: 2920, column: 62, scope: !13571)
!13578 = !DILocalVariable(name: "data", scope: !13579, file: !362, line: 2920, type: !3585, align: 8)
!13579 = !DILexicalBlockFile(scope: !13580, file: !362, discriminator: 0)
!13580 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h6264d6161960cc92E", scope: !43, file: !399, line: 727, type: !13581, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !13583)
!13581 = !DISubroutineType(types: !13582)
!13582 = !{!3592, !3585, !9}
!13583 = !{!13578, !13584}
!13584 = !DILocalVariable(name: "len", scope: !13579, file: !362, line: 2920, type: !9, align: 8)
!13585 = !DILocation(line: 2920, column: 32, scope: !13579, inlinedAt: !13586)
!13586 = !DILocation(line: 2920, column: 32, scope: !13571)
!13587 = !DILocation(line: 2920, column: 81, scope: !13571)
!13588 = !DILocalVariable(name: "self", scope: !13589, file: !362, line: 2920, type: !3585, align: 8)
!13589 = !DILexicalBlockFile(scope: !13590, file: !362, discriminator: 0)
!13590 = distinct !DISubprogram(name: "cast<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hbb7b978817be33d9E", scope: !657, file: !656, line: 45, type: !13591, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !13594, retainedNodes: !13593)
!13591 = !DISubroutineType(types: !13592)
!13592 = !{!960, !3585}
!13593 = !{!13588}
!13594 = !{!2708, !420}
!13595 = !DILocation(line: 2920, column: 32, scope: !13589, inlinedAt: !13596)
!13596 = !DILocation(line: 728, column: 24, scope: !13580, inlinedAt: !13586)
!13597 = !DILocalVariable(name: "data_address", scope: !13598, file: !362, line: 2920, type: !960, align: 8)
!13598 = !DILexicalBlockFile(scope: !13599, file: !362, discriminator: 0)
!13599 = distinct !DISubprogram(name: "from_raw_parts_mut<[alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hf411cc19175c1f92E", scope: !427, file: !426, line: 127, type: !13600, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2707, retainedNodes: !13602)
!13600 = !DISubroutineType(types: !13601)
!13601 = !{!3592, !960, !9}
!13602 = !{!13597, !13603}
!13603 = !DILocalVariable(name: "metadata", scope: !13598, file: !362, line: 2920, type: !9, align: 8)
!13604 = !DILocation(line: 2920, column: 32, scope: !13598, inlinedAt: !13605)
!13605 = !DILocation(line: 728, column: 5, scope: !13580, inlinedAt: !13586)
!13606 = !DILocation(line: 2920, column: 13, scope: !13571)
!13607 = !DILocation(line: 2923, column: 6, scope: !13571)
!13608 = distinct !DISubprogram(name: "drop<*const i8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h511be7b7fe589a0eE", scope: !13541, file: !362, line: 2915, type: !13609, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2650, retainedNodes: !13611)
!13609 = !DISubroutineType(types: !13610)
!13610 = !{null, !10254}
!13611 = !{!13612}
!13612 = !DILocalVariable(name: "self", arg: 1, scope: !13608, file: !362, line: 2915, type: !10254)
!13613 = !DILocation(line: 2915, column: 13, scope: !13608)
!13614 = !DILocation(line: 2920, column: 62, scope: !13608)
!13615 = !DILocalVariable(name: "data", scope: !13616, file: !362, line: 2920, type: !10253, align: 8)
!13616 = !DILexicalBlockFile(scope: !13617, file: !362, discriminator: 0)
!13617 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<*const i8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17hb13d6c81245223c4E", scope: !43, file: !399, line: 727, type: !13618, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2644, retainedNodes: !13625)
!13618 = !DISubroutineType(types: !13619)
!13619 = !{!13620, !10253, !9}
!13620 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [*const i8]", file: !2, size: 128, align: 64, elements: !13621, templateParams: !23, identifier: "f41f9146ba318492dae6ccc311a0441c")
!13621 = !{!13622, !13624}
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !13620, file: !2, baseType: !13623, size: 64, align: 64)
!13623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64, align: 64, dwarfAddressSpace: 0)
!13624 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !13620, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!13625 = !{!13615, !13626}
!13626 = !DILocalVariable(name: "len", scope: !13616, file: !362, line: 2920, type: !9, align: 8)
!13627 = !DILocation(line: 2920, column: 32, scope: !13616, inlinedAt: !13628)
!13628 = !DILocation(line: 2920, column: 32, scope: !13608)
!13629 = !DILocation(line: 2920, column: 81, scope: !13608)
!13630 = !DILocalVariable(name: "self", scope: !13631, file: !362, line: 2920, type: !10253, align: 8)
!13631 = !DILexicalBlockFile(scope: !13632, file: !362, discriminator: 0)
!13632 = distinct !DISubprogram(name: "cast<*const i8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17hbcef3a8f3eed7010E", scope: !657, file: !656, line: 45, type: !13633, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !13636, retainedNodes: !13635)
!13633 = !DISubroutineType(types: !13634)
!13634 = !{!960, !10253}
!13635 = !{!13630}
!13636 = !{!2645, !420}
!13637 = !DILocation(line: 2920, column: 32, scope: !13631, inlinedAt: !13638)
!13638 = !DILocation(line: 728, column: 24, scope: !13617, inlinedAt: !13628)
!13639 = !DILocalVariable(name: "data_address", scope: !13640, file: !362, line: 2920, type: !960, align: 8)
!13640 = !DILexicalBlockFile(scope: !13641, file: !362, discriminator: 0)
!13641 = distinct !DISubprogram(name: "from_raw_parts_mut<[*const i8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h2385cfd5fac7303aE", scope: !427, file: !426, line: 127, type: !13642, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2644, retainedNodes: !13644)
!13642 = !DISubroutineType(types: !13643)
!13643 = !{!13620, !960, !9}
!13644 = !{!13639, !13645}
!13645 = !DILocalVariable(name: "metadata", scope: !13640, file: !362, line: 2920, type: !9, align: 8)
!13646 = !DILocation(line: 2920, column: 32, scope: !13640, inlinedAt: !13647)
!13647 = !DILocation(line: 728, column: 5, scope: !13617, inlinedAt: !13628)
!13648 = !DILocation(line: 2920, column: 13, scope: !13608)
!13649 = !DILocation(line: 2923, column: 6, scope: !13608)
!13650 = distinct !DISubprogram(name: "drop<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb5222ef95bf26be8E", scope: !13541, file: !362, line: 2915, type: !13651, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2624, retainedNodes: !13653)
!13651 = !DISubroutineType(types: !13652)
!13652 = !{null, !10185}
!13653 = !{!13654}
!13654 = !DILocalVariable(name: "self", arg: 1, scope: !13650, file: !362, line: 2915, type: !10185)
!13655 = !DILocation(line: 2915, column: 13, scope: !13650)
!13656 = !DILocation(line: 2920, column: 62, scope: !13650)
!13657 = !DILocalVariable(name: "data", scope: !13658, file: !362, line: 2920, type: !3709, align: 8)
!13658 = !DILexicalBlockFile(scope: !13659, file: !362, discriminator: 0)
!13659 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h400ff0b2808413d8E", scope: !43, file: !399, line: 727, type: !13660, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !13662)
!13660 = !DISubroutineType(types: !13661)
!13661 = !{!3803, !3709, !9}
!13662 = !{!13657, !13663}
!13663 = !DILocalVariable(name: "len", scope: !13658, file: !362, line: 2920, type: !9, align: 8)
!13664 = !DILocation(line: 2920, column: 32, scope: !13658, inlinedAt: !13665)
!13665 = !DILocation(line: 2920, column: 32, scope: !13650)
!13666 = !DILocation(line: 2920, column: 81, scope: !13650)
!13667 = !DILocalVariable(name: "self", scope: !13668, file: !362, line: 2920, type: !3709, align: 8)
!13668 = !DILexicalBlockFile(scope: !13669, file: !362, discriminator: 0)
!13669 = distinct !DISubprogram(name: "cast<alloc::ffi::c_str::CString, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h7e2681056cdc0317E", scope: !657, file: !656, line: 45, type: !13670, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !13673, retainedNodes: !13672)
!13670 = !DISubroutineType(types: !13671)
!13671 = !{!960, !3709}
!13672 = !{!13667}
!13673 = !{!2619, !420}
!13674 = !DILocation(line: 2920, column: 32, scope: !13668, inlinedAt: !13675)
!13675 = !DILocation(line: 728, column: 24, scope: !13659, inlinedAt: !13665)
!13676 = !DILocalVariable(name: "data_address", scope: !13677, file: !362, line: 2920, type: !960, align: 8)
!13677 = !DILexicalBlockFile(scope: !13678, file: !362, discriminator: 0)
!13678 = distinct !DISubprogram(name: "from_raw_parts_mut<[alloc::ffi::c_str::CString]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h07c311c0ab6c3ccbE", scope: !427, file: !426, line: 127, type: !13679, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2618, retainedNodes: !13681)
!13679 = !DISubroutineType(types: !13680)
!13680 = !{!3803, !960, !9}
!13681 = !{!13676, !13682}
!13682 = !DILocalVariable(name: "metadata", scope: !13677, file: !362, line: 2920, type: !9, align: 8)
!13683 = !DILocation(line: 2920, column: 32, scope: !13677, inlinedAt: !13684)
!13684 = !DILocation(line: 728, column: 5, scope: !13659, inlinedAt: !13665)
!13685 = !DILocation(line: 2920, column: 13, scope: !13650)
!13686 = !DILocation(line: 2923, column: 6, scope: !13650)
!13687 = distinct !DISubprogram(name: "eq<&str>", linkageName: "_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hdc99657694d9fe4dE", scope: !13688, file: !1664, line: 515, type: !13689, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !13691)
!13688 = !DINamespace(name: "{impl#42}", scope: !177)
!13689 = !DISubroutineType(types: !13690)
!13690 = !{!1159, !175, !175}
!13691 = !{!13692, !13693, !13694, !13696, !13698, !13700}
!13692 = !DILocalVariable(name: "self", arg: 1, scope: !13687, file: !1664, line: 515, type: !175)
!13693 = !DILocalVariable(name: "other", arg: 2, scope: !13687, file: !1664, line: 515, type: !175)
!13694 = !DILocalVariable(name: "__self_tag", scope: !13695, file: !1664, line: 515, type: !868, align: 8)
!13695 = distinct !DILexicalBlock(scope: !13687, file: !1664, line: 515, column: 16)
!13696 = !DILocalVariable(name: "__arg1_tag", scope: !13697, file: !1664, line: 515, type: !868, align: 8)
!13697 = distinct !DILexicalBlock(scope: !13695, file: !1664, line: 515, column: 16)
!13698 = !DILocalVariable(name: "__self_0", scope: !13699, file: !1664, line: 526, type: !199, align: 8)
!13699 = distinct !DILexicalBlock(scope: !13697, file: !1664, line: 515, column: 16)
!13700 = !DILocalVariable(name: "__arg1_0", scope: !13699, file: !1664, line: 526, type: !199, align: 8)
!13701 = !DILocation(line: 515, column: 16, scope: !13687)
!13702 = !DILocation(line: 515, column: 16, scope: !13695)
!13703 = !DILocation(line: 515, column: 16, scope: !13697)
!13704 = !DILocation(line: 526, column: 56, scope: !13697)
!13705 = !DILocation(line: 526, column: 56, scope: !13699)
!13706 = !DILocation(line: 515, column: 24, scope: !13697)
!13707 = !DILocation(line: 515, column: 25, scope: !13687)
!13708 = distinct !DISubprogram(name: "deref", linkageName: "_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9daeb037d4eadd5cE", scope: !13709, file: !2467, line: 513, type: !13710, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13713)
!13709 = !DINamespace(name: "{impl#7}", scope: !1377)
!13710 = !DISubroutineType(types: !13711)
!13711 = !{!2476, !13712}
!13712 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::ffi::os_str::OsString", baseType: !1376, size: 64, align: 64, dwarfAddressSpace: 0)
!13713 = !{!13714}
!13714 = !DILocalVariable(name: "self", arg: 1, scope: !13708, file: !2467, line: 513, type: !13712)
!13715 = !DILocation(line: 513, column: 14, scope: !13708)
!13716 = !DILocalVariable(name: "_index", scope: !13717, file: !2467, line: 514, type: !341, align: 1)
!13717 = distinct !DISubprogram(name: "index", linkageName: "_ZN105_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17hdeffd929715c7d72E", scope: !13718, file: !2467, line: 495, type: !13719, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13721)
!13718 = !DINamespace(name: "{impl#5}", scope: !1377)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!2476, !13712, !341, !344}
!13721 = !{!13722, !13716}
!13722 = !DILocalVariable(name: "self", scope: !13717, file: !2467, line: 514, type: !13712, align: 8)
!13723 = !DILocation(line: 514, column: 10, scope: !13717, inlinedAt: !13724)
!13724 = !DILocation(line: 514, column: 10, scope: !13708)
!13725 = !DILocalVariable(name: "inner", scope: !13726, file: !2467, line: 514, type: !2509, align: 8)
!13726 = distinct !DISubprogram(name: "from_inner", linkageName: "_ZN3std3ffi6os_str5OsStr10from_inner17hdedc03f1dd08ee10E", scope: !2468, file: !2467, line: 671, type: !2536, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13727)
!13727 = !{!13725}
!13728 = !DILocation(line: 514, column: 10, scope: !13726, inlinedAt: !13729)
!13729 = !DILocation(line: 496, column: 9, scope: !13717, inlinedAt: !13724)
!13730 = !DILocation(line: 515, column: 6, scope: !13708)
!13731 = distinct !DISubprogram(name: "as_ref<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17h85593544e4cde7c2E", scope: !13732, file: !7636, line: 615, type: !7694, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1003, retainedNodes: !13733)
!13732 = !DINamespace(name: "{impl#8}", scope: !4078)
!13733 = !{!13734}
!13734 = !DILocalVariable(name: "self", arg: 1, scope: !13731, file: !7636, line: 615, type: !3491)
!13735 = !DILocation(line: 615, column: 15, scope: !13731)
!13736 = !DILocation(line: 617, column: 6, scope: !13731)
!13737 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h2b77cc1908e440a5E", scope: !363, file: !362, line: 2531, type: !364, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !13738)
!13738 = !{!13739}
!13739 = !DILocalVariable(name: "self", arg: 1, scope: !13737, file: !362, line: 2531, type: !370)
!13740 = !DILocation(line: 2531, column: 14, scope: !13737)
!13741 = !DILocation(line: 2532, column: 40, scope: !13737)
!13742 = !DILocalVariable(name: "data", scope: !13743, file: !362, line: 2532, type: !329, align: 8)
!13743 = !DILexicalBlockFile(scope: !13744, file: !362, discriminator: 0)
!13744 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hc9808a0b8f9d77eeE", scope: !377, file: !376, line: 90, type: !379, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13745)
!13745 = !{!13742, !13746, !13747}
!13746 = !DILocalVariable(name: "len", scope: !13743, file: !362, line: 2532, type: !9, align: 8)
!13747 = !DILocalVariable(name: "runtime", scope: !13748, file: !362, line: 2532, type: !387, align: 8)
!13748 = !DILexicalBlockFile(scope: !13749, file: !362, discriminator: 0)
!13749 = distinct !DILexicalBlock(scope: !13744, file: !386, line: 2336, column: 13)
!13750 = !DILocation(line: 2532, column: 18, scope: !13743, inlinedAt: !13751)
!13751 = !DILocation(line: 2532, column: 18, scope: !13737)
!13752 = !DILocation(line: 2532, column: 55, scope: !13737)
!13753 = !DILocalVariable(name: "data", scope: !13754, file: !362, line: 2532, type: !329, align: 8)
!13754 = !DILexicalBlockFile(scope: !13755, file: !362, discriminator: 0)
!13755 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6a66992555506ab5E", scope: !43, file: !399, line: 695, type: !400, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13756)
!13756 = !{!13753, !13757}
!13757 = !DILocalVariable(name: "len", scope: !13754, file: !362, line: 2532, type: !9, align: 8)
!13758 = !DILocation(line: 2532, column: 18, scope: !13754, inlinedAt: !13759)
!13759 = !DILocation(line: 97, column: 11, scope: !13744, inlinedAt: !13751)
!13760 = !DILocalVariable(name: "self", scope: !13761, file: !362, line: 2532, type: !329, align: 8)
!13761 = !DILexicalBlockFile(scope: !13762, file: !362, discriminator: 0)
!13762 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb951d44ade26c9c5E", scope: !414, file: !413, line: 46, type: !416, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !419, retainedNodes: !13763)
!13763 = !{!13760}
!13764 = !DILocation(line: 2532, column: 18, scope: !13761, inlinedAt: !13765)
!13765 = !DILocation(line: 696, column: 20, scope: !13755, inlinedAt: !13759)
!13766 = !DILocalVariable(name: "data_address", scope: !13767, file: !362, line: 2532, type: !6, align: 8)
!13767 = !DILexicalBlockFile(scope: !13768, file: !362, discriminator: 0)
!13768 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h9dc36a19d85d94baE", scope: !427, file: !426, line: 110, type: !428, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13769)
!13769 = !{!13766, !13770}
!13770 = !DILocalVariable(name: "metadata", scope: !13767, file: !362, line: 2532, type: !9, align: 8)
!13771 = !DILocation(line: 2532, column: 18, scope: !13767, inlinedAt: !13772)
!13772 = !DILocation(line: 696, column: 5, scope: !13755, inlinedAt: !13759)
!13773 = !DILocation(line: 2533, column: 6, scope: !13737)
!13774 = distinct !DISubprogram(name: "equal<u8, u8>", linkageName: "_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17he95f9a11ce31a4b6E", scope: !13775, file: !6152, line: 82, type: !5915, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2992, retainedNodes: !13776)
!13775 = !DINamespace(name: "{impl#5}", scope: !6154)
!13776 = !{!13777, !13778, !13779}
!13777 = !DILocalVariable(name: "self", arg: 1, scope: !13774, file: !6152, line: 82, type: !366)
!13778 = !DILocalVariable(name: "other", arg: 2, scope: !13774, file: !6152, line: 82, type: !366)
!13779 = !DILocalVariable(name: "size", scope: !13780, file: !6152, line: 90, type: !9, align: 8)
!13780 = distinct !DILexicalBlock(scope: !13774, file: !6152, line: 90, column: 13)
!13781 = !DILocation(line: 82, column: 14, scope: !13774)
!13782 = !DILocation(line: 82, column: 21, scope: !13774)
!13783 = !DILocation(line: 83, column: 12, scope: !13774)
!13784 = !DILocation(line: 90, column: 41, scope: !13774)
!13785 = !DILocalVariable(name: "val", scope: !13786, file: !6152, line: 90, type: !366, align: 8)
!13786 = !DILexicalBlockFile(scope: !13787, file: !6152, discriminator: 0)
!13787 = distinct !DISubprogram(name: "size_of_val<[u8]>", linkageName: "_ZN4core3mem11size_of_val17hcfadce7aa58aeaf7E", scope: !210, file: !627, line: 342, type: !9756, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13788)
!13788 = !{!13785}
!13789 = !DILocation(line: 90, column: 24, scope: !13786, inlinedAt: !13790)
!13790 = !DILocation(line: 90, column: 24, scope: !13774)
!13791 = !DILocation(line: 90, column: 17, scope: !13780)
!13792 = !DILocation(line: 84, column: 20, scope: !13774)
!13793 = !DILocation(line: 93, column: 6, scope: !13774)
!13794 = !DILocation(line: 91, column: 20, scope: !13780)
!13795 = !DILocalVariable(name: "self", scope: !13796, file: !6152, line: 91, type: !366, align: 8)
!13796 = !DILexicalBlockFile(scope: !13797, file: !6152, discriminator: 0)
!13797 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hfb764dfa8292fb8fE", scope: !2489, file: !2488, line: 476, type: !6191, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13798)
!13798 = !{!13795}
!13799 = !DILocation(line: 91, column: 20, scope: !13796, inlinedAt: !13794)
!13800 = !DILocation(line: 91, column: 48, scope: !13780)
!13801 = !DILocalVariable(name: "self", scope: !13802, file: !6152, line: 91, type: !366, align: 8)
!13802 = !DILexicalBlockFile(scope: !13803, file: !6152, discriminator: 0)
!13803 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hfb764dfa8292fb8fE", scope: !2489, file: !2488, line: 476, type: !6191, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !13804)
!13804 = !{!13801}
!13805 = !DILocation(line: 91, column: 48, scope: !13802, inlinedAt: !13800)
!13806 = !DILocation(line: 91, column: 13, scope: !13780)
!13807 = distinct !DISubprogram(name: "into_searcher<2>", linkageName: "_ZN73_$LT$$u5b$char$u3b$$u20$N$u5d$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h8b847401d3708913E", scope: !13808, file: !669, line: 704, type: !13809, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13811)
!13808 = !DINamespace(name: "{impl#12}", scope: !671)
!13809 = !DISubroutineType(types: !13810)
!13810 = !{!4643, !4649, !137}
!13811 = !{!13812, !13813}
!13812 = !DILocalVariable(name: "self", arg: 1, scope: !13807, file: !669, line: 704, type: !4649)
!13813 = !DILocalVariable(name: "haystack", arg: 2, scope: !13807, file: !669, line: 704, type: !137)
!13814 = !DILocation(line: 704, column: 26, scope: !13807)
!13815 = !DILocation(line: 704, column: 32, scope: !13807)
!13816 = !DILocation(line: 705, column: 29, scope: !13807)
!13817 = !DILocation(line: 705, column: 21, scope: !13807)
!13818 = !DILocation(line: 705, column: 13, scope: !13807)
!13819 = !DILocation(line: 706, column: 10, scope: !13807)
!13820 = distinct !DISubprogram(name: "from_output<usize>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17ha57357068f46e474E", scope: !4105, file: !1664, line: 2285, type: !13821, scopeLine: 2285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !13823)
!13821 = !DISubroutineType(types: !13822)
!13822 = !{!455, !9}
!13823 = !{!13824}
!13824 = !DILocalVariable(name: "output", arg: 1, scope: !13820, file: !1664, line: 2285, type: !9)
!13825 = !DILocation(line: 2285, column: 20, scope: !13820)
!13826 = !DILocation(line: 2286, column: 9, scope: !13820)
!13827 = !DILocation(line: 2287, column: 6, scope: !13820)
!13828 = distinct !DISubprogram(name: "branch<usize>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8616beab22fb2dd3E", scope: !4105, file: !1664, line: 2290, type: !13829, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !13845)
!13829 = !DISubroutineType(types: !13830)
!13830 = !{!13831, !455}
!13831 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, usize>", scope: !4109, file: !2, size: 128, align: 64, elements: !13832, templateParams: !23, identifier: "c7ab760f5090fb00ca278c600275212e")
!13832 = !{!13833}
!13833 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13831, file: !2, size: 128, align: 64, elements: !13834, templateParams: !23, identifier: "12f0847d4378c51c5a81e2e81aef8ee6", discriminator: !13844)
!13834 = !{!13835, !13840}
!13835 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13833, file: !2, baseType: !13836, size: 128, align: 64, extraData: i64 0)
!13836 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13831, file: !2, size: 128, align: 64, elements: !13837, templateParams: !13839, identifier: "d044538d393ea269247d3118ace35fe3")
!13837 = !{!13838}
!13838 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13836, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!13839 = !{!4118, !5624}
!13840 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13833, file: !2, baseType: !13841, size: 128, align: 64, extraData: i64 1)
!13841 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13831, file: !2, size: 128, align: 64, elements: !13842, templateParams: !13839, identifier: "6f719dc6c9c4b99bc712985ef26fd7c6")
!13842 = !{!13843}
!13843 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13841, file: !2, baseType: !4069, align: 8, offset: 64)
!13844 = !DIDerivedType(tag: DW_TAG_member, scope: !13831, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!13845 = !{!13846, !13847}
!13846 = !DILocalVariable(name: "self", arg: 1, scope: !13828, file: !1664, line: 2290, type: !455)
!13847 = !DILocalVariable(name: "v", scope: !13848, file: !1664, line: 2292, type: !9, align: 8)
!13848 = distinct !DILexicalBlock(scope: !13828, file: !1664, line: 2292, column: 13)
!13849 = !DILocation(line: 2290, column: 15, scope: !13828)
!13850 = !DILocation(line: 2291, column: 15, scope: !13828)
!13851 = !DILocation(line: 2291, column: 9, scope: !13828)
!13852 = !DILocation(line: 2293, column: 21, scope: !13828)
!13853 = !DILocation(line: 2293, column: 44, scope: !13828)
!13854 = !DILocation(line: 2292, column: 18, scope: !13828)
!13855 = !DILocation(line: 2292, column: 18, scope: !13848)
!13856 = !DILocation(line: 2292, column: 24, scope: !13848)
!13857 = !DILocation(line: 2295, column: 5, scope: !13828)
!13858 = !DILocation(line: 2295, column: 6, scope: !13828)
!13859 = distinct !DISubprogram(name: "branch<std::process::Output>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd35e8556e45aa856E", scope: !4105, file: !1664, line: 2290, type: !13860, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3661, retainedNodes: !13877)
!13860 = !DISubroutineType(types: !13861)
!13861 = !{!13862, !7352}
!13862 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, std::process::Output>", scope: !4109, file: !2, size: 448, align: 64, elements: !13863, templateParams: !23, identifier: "30aa5a735dea25a5d07fce16243ccb3b")
!13863 = !{!13864}
!13864 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13862, file: !2, size: 448, align: 64, elements: !13865, templateParams: !23, identifier: "78b97b371655a7205a1581b6dbd3e601", discriminator: !13876)
!13865 = !{!13866, !13872}
!13866 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13864, file: !2, baseType: !13867, size: 448, align: 64)
!13867 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13862, file: !2, size: 448, align: 64, elements: !13868, templateParams: !13870, identifier: "8f85839fe1606868f309c8df55e1a3df")
!13868 = !{!13869}
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13867, file: !2, baseType: !3647, size: 448, align: 64)
!13870 = !{!4118, !13871}
!13871 = !DITemplateTypeParameter(name: "C", type: !3647)
!13872 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13864, file: !2, baseType: !13873, size: 448, align: 64, extraData: i64 0)
!13873 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13862, file: !2, size: 448, align: 64, elements: !13874, templateParams: !13870, identifier: "ed82b0028bebc789a1d1732cbd3f9fb0")
!13874 = !{!13875}
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13873, file: !2, baseType: !4069, align: 8)
!13876 = !DIDerivedType(tag: DW_TAG_member, scope: !13862, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!13877 = !{!13878, !13879}
!13878 = !DILocalVariable(name: "self", arg: 1, scope: !13859, file: !1664, line: 2290, type: !7352)
!13879 = !DILocalVariable(name: "v", scope: !13880, file: !1664, line: 2292, type: !3647, align: 8)
!13880 = distinct !DILexicalBlock(scope: !13859, file: !1664, line: 2292, column: 13)
!13881 = !DILocation(line: 2290, column: 15, scope: !13859)
!13882 = !DILocation(line: 2292, column: 18, scope: !13880)
!13883 = !DILocation(line: 2291, column: 15, scope: !13859)
!13884 = !DILocation(line: 2291, column: 9, scope: !13859)
!13885 = !DILocation(line: 2293, column: 21, scope: !13859)
!13886 = !DILocation(line: 2293, column: 44, scope: !13859)
!13887 = !DILocation(line: 2292, column: 18, scope: !13859)
!13888 = !DILocation(line: 2292, column: 46, scope: !13880)
!13889 = !DILocation(line: 2292, column: 24, scope: !13880)
!13890 = !DILocation(line: 2295, column: 5, scope: !13859)
!13891 = !DILocation(line: 2295, column: 6, scope: !13859)
!13892 = distinct !DISubprogram(name: "branch<alloc::string::String>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf5332cef795be0afE", scope: !4105, file: !1664, line: 2290, type: !13893, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3006, retainedNodes: !13910)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{!13895, !7247}
!13895 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, alloc::string::String>", scope: !4109, file: !2, size: 192, align: 64, elements: !13896, templateParams: !23, identifier: "f31cf4edbf4f7acc2e1ea70f4b233d2e")
!13896 = !{!13897}
!13897 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13895, file: !2, size: 192, align: 64, elements: !13898, templateParams: !23, identifier: "53a232aa63d182203e46936c4a177e0b", discriminator: !13909)
!13898 = !{!13899, !13905}
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13897, file: !2, baseType: !13900, size: 192, align: 64)
!13900 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13895, file: !2, size: 192, align: 64, elements: !13901, templateParams: !13903, identifier: "c37c0062d9fc759aa138f51721604f72")
!13901 = !{!13902}
!13902 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13900, file: !2, baseType: !312, size: 192, align: 64)
!13903 = !{!4118, !13904}
!13904 = !DITemplateTypeParameter(name: "C", type: !312)
!13905 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13897, file: !2, baseType: !13906, size: 192, align: 64, extraData: i64 0)
!13906 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13895, file: !2, size: 192, align: 64, elements: !13907, templateParams: !13903, identifier: "b0d0f669c355cb9dd9003565e723d3f7")
!13907 = !{!13908}
!13908 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13906, file: !2, baseType: !4069, align: 8)
!13909 = !DIDerivedType(tag: DW_TAG_member, scope: !13895, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!13910 = !{!13911, !13912}
!13911 = !DILocalVariable(name: "self", arg: 1, scope: !13892, file: !1664, line: 2290, type: !7247)
!13912 = !DILocalVariable(name: "v", scope: !13913, file: !1664, line: 2292, type: !312, align: 8)
!13913 = distinct !DILexicalBlock(scope: !13892, file: !1664, line: 2292, column: 13)
!13914 = !DILocation(line: 2290, column: 15, scope: !13892)
!13915 = !DILocation(line: 2292, column: 18, scope: !13913)
!13916 = !DILocation(line: 2291, column: 15, scope: !13892)
!13917 = !DILocation(line: 2291, column: 9, scope: !13892)
!13918 = !DILocation(line: 2293, column: 21, scope: !13892)
!13919 = !DILocation(line: 2293, column: 44, scope: !13892)
!13920 = !DILocation(line: 2292, column: 18, scope: !13892)
!13921 = !DILocation(line: 2292, column: 46, scope: !13913)
!13922 = !DILocation(line: 2292, column: 24, scope: !13913)
!13923 = !DILocation(line: 2295, column: 5, scope: !13892)
!13924 = !DILocation(line: 2295, column: 6, scope: !13892)
!13925 = distinct !DISubprogram(name: "matches<2>", linkageName: "_ZN77_$LT$$u5b$char$u3b$$u20$N$u5d$$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h5dbf005c64097323E", scope: !13926, file: !669, line: 613, type: !13927, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13930)
!13926 = !DINamespace(name: "{impl#5}", scope: !671)
!13927 = !DISubroutineType(types: !13928)
!13928 = !{!1159, !13929, !534}
!13929 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [char; 2]", baseType: !4649, size: 64, align: 64, dwarfAddressSpace: 0)
!13930 = !{!13931, !13932}
!13931 = !DILocalVariable(name: "self", arg: 1, scope: !13925, file: !669, line: 613, type: !13929)
!13932 = !DILocalVariable(name: "c", arg: 2, scope: !13925, file: !669, line: 613, type: !534)
!13933 = !DILocation(line: 613, column: 16, scope: !13925)
!13934 = !DILocation(line: 613, column: 27, scope: !13925)
!13935 = !DILocation(line: 614, column: 9, scope: !13925)
!13936 = !DILocalVariable(name: "self", scope: !13937, file: !669, line: 614, type: !6496, align: 8)
!13937 = !DILexicalBlockFile(scope: !13938, file: !669, discriminator: 0)
!13938 = distinct !DISubprogram(name: "iter<char>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hf38484d44bcbeb7cE", scope: !2489, file: !2488, line: 734, type: !6494, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !13939)
!13939 = !{!13936}
!13940 = !DILocation(line: 614, column: 9, scope: !13937, inlinedAt: !13935)
!13941 = !DILocation(line: 614, column: 25, scope: !13925)
!13942 = !{i64 4}
!13943 = !DILocation(line: 615, column: 6, scope: !13925)
!13944 = distinct !DISubprogram(name: "{closure#0}<2>", linkageName: "_ZN77_$LT$$u5b$char$u3b$$u20$N$u5d$$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches28_$u7b$$u7b$closure$u7d$$u7d$17h83d846dc05fc2a5dE", scope: !13945, file: !669, line: 614, type: !13946, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !13952)
!13945 = !DINamespace(name: "matches", scope: !13926)
!13946 = !DISubroutineType(types: !13947)
!13947 = !{!1159, !13948, !6493}
!13948 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::{impl#5}::matches::{closure_env#0}<2>", baseType: !13949, size: 64, align: 64, dwarfAddressSpace: 0)
!13949 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<2>", scope: !13945, file: !2, size: 64, align: 64, elements: !13950, templateParams: !23, identifier: "40375c9e2e6d85edb13ba7930c971cbe")
!13950 = !{!13951}
!13951 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__c", scope: !13949, file: !2, baseType: !6493, size: 64, align: 64)
!13952 = !{!13953, !13954, !13956}
!13953 = !DILocalVariable(name: "c", scope: !13944, file: !669, line: 613, type: !534, align: 4)
!13954 = !DILocalVariable(name: "m", scope: !13955, file: !669, line: 614, type: !534, align: 4)
!13955 = distinct !DILexicalBlock(scope: !13944, file: !669, line: 614, column: 30)
!13956 = !DILocalVariable(arg: 2, scope: !13944, file: !669, line: 614, type: !6493)
!13957 = !DILocation(line: 613, column: 27, scope: !13944)
!13958 = !DILocation(line: 614, column: 26, scope: !13944)
!13959 = !DILocation(line: 614, column: 27, scope: !13944)
!13960 = !DILocation(line: 614, column: 27, scope: !13955)
!13961 = !DILocation(line: 614, column: 35, scope: !13955)
!13962 = !DILocation(line: 614, column: 30, scope: !13955)
!13963 = !DILocation(line: 614, column: 29, scope: !13944)
!13964 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h42b6e46e2ad84c19E", scope: !13965, file: !9588, line: 477, type: !13966, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !338, retainedNodes: !13968)
!13965 = !DINamespace(name: "{impl#3}", scope: !299)
!13966 = !DISubroutineType(types: !13967)
!13967 = !{null, !12958}
!13968 = !{!13969, !13970, !13972}
!13969 = !DILocalVariable(name: "self", arg: 1, scope: !13964, file: !9588, line: 477, type: !12958)
!13970 = !DILocalVariable(name: "ptr", scope: !13971, file: !9588, line: 478, type: !326, align: 8)
!13971 = distinct !DILexicalBlock(scope: !13964, file: !9588, line: 478, column: 60)
!13972 = !DILocalVariable(name: "layout", scope: !13971, file: !9588, line: 478, type: !1779, align: 8)
!13973 = !DILocation(line: 477, column: 13, scope: !13964)
!13974 = !DILocation(line: 478, column: 38, scope: !13971)
!13975 = !DILocation(line: 478, column: 16, scope: !13971)
!13976 = !DILocation(line: 478, column: 22, scope: !13971)
!13977 = !DILocation(line: 478, column: 27, scope: !13971)
!13978 = !DILocation(line: 479, column: 22, scope: !13971)
!13979 = !DILocation(line: 481, column: 6, scope: !13964)
!13980 = !DILocation(line: 478, column: 9, scope: !13964)
!13981 = distinct !DISubprogram(name: "drop<*const i8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h65dcb9afe758c0d8E", scope: !13965, file: !9588, line: 477, type: !13982, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2650, retainedNodes: !13985)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{null, !13984}
!13984 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<*const i8, alloc::alloc::Global>", baseType: !2633, size: 64, align: 64, dwarfAddressSpace: 0)
!13985 = !{!13986, !13987, !13989}
!13986 = !DILocalVariable(name: "self", arg: 1, scope: !13981, file: !9588, line: 477, type: !13984)
!13987 = !DILocalVariable(name: "ptr", scope: !13988, file: !9588, line: 478, type: !326, align: 8)
!13988 = distinct !DILexicalBlock(scope: !13981, file: !9588, line: 478, column: 60)
!13989 = !DILocalVariable(name: "layout", scope: !13988, file: !9588, line: 478, type: !1779, align: 8)
!13990 = !DILocation(line: 477, column: 13, scope: !13981)
!13991 = !DILocation(line: 478, column: 38, scope: !13988)
!13992 = !DILocation(line: 478, column: 16, scope: !13988)
!13993 = !DILocation(line: 478, column: 22, scope: !13988)
!13994 = !DILocation(line: 478, column: 27, scope: !13988)
!13995 = !DILocation(line: 479, column: 22, scope: !13988)
!13996 = !DILocation(line: 481, column: 6, scope: !13981)
!13997 = !DILocation(line: 478, column: 9, scope: !13981)
!13998 = distinct !DISubprogram(name: "drop<alloc::ffi::c_str::CString, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h97298da8e3a6412dE", scope: !13965, file: !9588, line: 477, type: !13999, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2624, retainedNodes: !14002)
!13999 = !DISubroutineType(types: !14000)
!14000 = !{null, !14001}
!14001 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<alloc::ffi::c_str::CString, alloc::alloc::Global>", baseType: !2608, size: 64, align: 64, dwarfAddressSpace: 0)
!14002 = !{!14003, !14004, !14006}
!14003 = !DILocalVariable(name: "self", arg: 1, scope: !13998, file: !9588, line: 477, type: !14001)
!14004 = !DILocalVariable(name: "ptr", scope: !14005, file: !9588, line: 478, type: !326, align: 8)
!14005 = distinct !DILexicalBlock(scope: !13998, file: !9588, line: 478, column: 60)
!14006 = !DILocalVariable(name: "layout", scope: !14005, file: !9588, line: 478, type: !1779, align: 8)
!14007 = !DILocation(line: 477, column: 13, scope: !13998)
!14008 = !DILocation(line: 478, column: 38, scope: !14005)
!14009 = !DILocation(line: 478, column: 16, scope: !14005)
!14010 = !DILocation(line: 478, column: 22, scope: !14005)
!14011 = !DILocation(line: 478, column: 27, scope: !14005)
!14012 = !DILocation(line: 479, column: 22, scope: !14005)
!14013 = !DILocation(line: 481, column: 6, scope: !13998)
!14014 = !DILocation(line: 478, column: 9, scope: !13998)
!14015 = distinct !DISubprogram(name: "drop<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hacdcb6083e4f06ffE", scope: !13965, file: !9588, line: 477, type: !14016, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2713, retainedNodes: !14019)
!14016 = !DISubroutineType(types: !14017)
!14017 = !{null, !14018}
!14018 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<alloc::boxed::Box<(dyn core::ops::function::FnMut<(), Output=core::result::Result<(), std::io::error::Error>> + core::marker::Send + core::marker::Sync), alloc::alloc::Global>, alloc::alloc::Global>", baseType: !2691, size: 64, align: 64, dwarfAddressSpace: 0)
!14019 = !{!14020, !14021, !14023}
!14020 = !DILocalVariable(name: "self", arg: 1, scope: !14015, file: !9588, line: 477, type: !14018)
!14021 = !DILocalVariable(name: "ptr", scope: !14022, file: !9588, line: 478, type: !326, align: 8)
!14022 = distinct !DILexicalBlock(scope: !14015, file: !9588, line: 478, column: 60)
!14023 = !DILocalVariable(name: "layout", scope: !14022, file: !9588, line: 478, type: !1779, align: 8)
!14024 = !DILocation(line: 477, column: 13, scope: !14015)
!14025 = !DILocation(line: 478, column: 38, scope: !14022)
!14026 = !DILocation(line: 478, column: 16, scope: !14022)
!14027 = !DILocation(line: 478, column: 22, scope: !14022)
!14028 = !DILocation(line: 478, column: 27, scope: !14022)
!14029 = !DILocation(line: 479, column: 22, scope: !14022)
!14030 = !DILocation(line: 481, column: 6, scope: !14015)
!14031 = !DILocation(line: 478, column: 9, scope: !14015)
!14032 = distinct !DISubprogram(name: "eq", linkageName: "_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2eq17hfc18d38ccd5a719eE", scope: !14033, file: !306, line: 2181, type: !14034, scopeLine: 2181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14036)
!14033 = !DINamespace(name: "{impl#88}", scope: !308)
!14034 = !DISubroutineType(types: !14035)
!14035 = !{!1159, !311, !199}
!14036 = !{!14037, !14038}
!14037 = !DILocalVariable(name: "self", arg: 1, scope: !14032, file: !306, line: 2181, type: !311)
!14038 = !DILocalVariable(name: "other", arg: 2, scope: !14032, file: !306, line: 2181, type: !199)
!14039 = !DILocation(line: 2181, column: 19, scope: !14032)
!14040 = !DILocation(line: 2181, column: 26, scope: !14032)
!14041 = !DILocalVariable(name: "index", scope: !14042, file: !306, line: 2182, type: !341, align: 1)
!14042 = !DILexicalBlockFile(scope: !14043, file: !306, discriminator: 0)
!14043 = distinct !DISubprogram(name: "index<core::ops::range::RangeFull>", linkageName: "_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h8c20b7174a022dfeE", scope: !14044, file: !4814, line: 64, type: !14045, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !14049, retainedNodes: !14047)
!14044 = !DINamespace(name: "{impl#4}", scope: !4816)
!14045 = !DISubroutineType(types: !14046)
!14046 = !{!137, !137, !341, !344}
!14047 = !{!14048, !14041}
!14048 = !DILocalVariable(name: "self", scope: !14042, file: !306, line: 2182, type: !137, align: 8)
!14049 = !{!5035}
!14050 = !DILocation(line: 2182, column: 43, scope: !14042, inlinedAt: !14051)
!14051 = !DILocation(line: 2182, column: 43, scope: !14032)
!14052 = !DILocalVariable(name: "self", scope: !14053, file: !306, line: 2182, type: !341, align: 1)
!14053 = !DILexicalBlockFile(scope: !14054, file: !306, discriminator: 0)
!14054 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17he6a8831674c04c8dE", scope: !14055, file: !4814, line: 121, type: !14056, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14058)
!14055 = !DINamespace(name: "{impl#6}", scope: !4816)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{!137, !341, !137, !344}
!14058 = !{!14052, !14059}
!14059 = !DILocalVariable(name: "slice", scope: !14053, file: !306, line: 2182, type: !137, align: 8)
!14060 = !DILocation(line: 2182, column: 43, scope: !14053, inlinedAt: !14061)
!14061 = !DILocation(line: 65, column: 9, scope: !14043, inlinedAt: !14051)
!14062 = !DILocation(line: 2182, column: 32, scope: !14032)
!14063 = !DILocation(line: 2182, column: 17, scope: !14032)
!14064 = !DILocation(line: 2183, column: 14, scope: !14032)
!14065 = distinct !DISubprogram(name: "ne", linkageName: "_ZN77_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$LT$$RF$str$GT$$GT$2ne17hf4f082ba020c7022E", scope: !14033, file: !306, line: 2185, type: !14034, scopeLine: 2185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14066)
!14066 = !{!14067, !14068}
!14067 = !DILocalVariable(name: "self", arg: 1, scope: !14065, file: !306, line: 2185, type: !311)
!14068 = !DILocalVariable(name: "other", arg: 2, scope: !14065, file: !306, line: 2185, type: !199)
!14069 = !DILocation(line: 2185, column: 19, scope: !14065)
!14070 = !DILocation(line: 2185, column: 26, scope: !14065)
!14071 = !DILocalVariable(name: "index", scope: !14072, file: !306, line: 2186, type: !341, align: 1)
!14072 = !DILexicalBlockFile(scope: !14073, file: !306, discriminator: 0)
!14073 = distinct !DISubprogram(name: "index<core::ops::range::RangeFull>", linkageName: "_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h8c20b7174a022dfeE", scope: !14044, file: !4814, line: 64, type: !14045, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !14049, retainedNodes: !14074)
!14074 = !{!14075, !14071}
!14075 = !DILocalVariable(name: "self", scope: !14072, file: !306, line: 2186, type: !137, align: 8)
!14076 = !DILocation(line: 2186, column: 43, scope: !14072, inlinedAt: !14077)
!14077 = !DILocation(line: 2186, column: 43, scope: !14065)
!14078 = !DILocalVariable(name: "self", scope: !14079, file: !306, line: 2186, type: !341, align: 1)
!14079 = !DILexicalBlockFile(scope: !14080, file: !306, discriminator: 0)
!14080 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17he6a8831674c04c8dE", scope: !14055, file: !4814, line: 121, type: !14056, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14081)
!14081 = !{!14078, !14082}
!14082 = !DILocalVariable(name: "slice", scope: !14079, file: !306, line: 2186, type: !137, align: 8)
!14083 = !DILocation(line: 2186, column: 43, scope: !14079, inlinedAt: !14084)
!14084 = !DILocation(line: 65, column: 9, scope: !14073, inlinedAt: !14077)
!14085 = !DILocation(line: 2186, column: 32, scope: !14065)
!14086 = !DILocation(line: 2186, column: 31, scope: !14065)
!14087 = !DILocalVariable(name: "self", scope: !14088, file: !306, line: 2186, type: !137, align: 8)
!14088 = !DILexicalBlockFile(scope: !14089, file: !306, discriminator: 0)
!14089 = distinct !DISubprogram(name: "ne", linkageName: "_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2ne17h7826be6beb256f79E", scope: !4883, file: !4814, line: 32, type: !4425, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14090)
!14090 = !{!14087, !14091}
!14091 = !DILocalVariable(name: "other", scope: !14088, file: !306, line: 2186, type: !137, align: 8)
!14092 = !DILocation(line: 2186, column: 17, scope: !14088, inlinedAt: !14093)
!14093 = !DILocation(line: 2186, column: 17, scope: !14065)
!14094 = !DILocation(line: 2186, column: 42, scope: !14065)
!14095 = !DILocation(line: 2187, column: 14, scope: !14065)
!14096 = distinct !DISubprogram(name: "drop", linkageName: "_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h65a8325589ab0e8aE", scope: !1885, file: !1880, line: 232, type: !14097, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14100)
!14097 = !DISubroutineType(types: !14098)
!14098 = !{null, !14099}
!14099 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut std::io::error::repr_bitpacked::Repr", baseType: !37, size: 64, align: 64, dwarfAddressSpace: 0)
!14100 = !{!14101}
!14101 = !DILocalVariable(name: "self", arg: 1, scope: !14096, file: !1880, line: 232, type: !14099)
!14102 = !DILocation(line: 232, column: 13, scope: !14096)
!14103 = !DILocation(line: 236, column: 33, scope: !14096)
!14104 = !DILocation(line: 236, column: 21, scope: !14096)
!14105 = !DILocation(line: 236, column: 72, scope: !14096)
!14106 = !DILocation(line: 238, column: 6, scope: !14096)
!14107 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h216229d3035f3cdbE", scope: !1884, file: !1880, line: 236, type: !14108, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14110)
!14108 = !DISubroutineType(types: !14109)
!14109 = !{!65, !1883, !1899}
!14110 = !{!14111, !14112}
!14111 = !DILocalVariable(name: "p", arg: 2, scope: !14107, file: !1880, line: 236, type: !1899)
!14112 = !DILocalVariable(arg: 1, scope: !14107, file: !1880, line: 236, type: !1883)
!14113 = !DILocation(line: 236, column: 41, scope: !14107)
!14114 = !DILocation(line: 236, column: 42, scope: !14107)
!14115 = !DILocalVariable(name: "alloc", scope: !14116, file: !1880, line: 236, type: !336, align: 1)
!14116 = !DILexicalBlockFile(scope: !14117, file: !1880, discriminator: 0)
!14117 = distinct !DISubprogram(name: "from_raw_in<std::io::error::Custom, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h2a5a40b906581978E", scope: !14119, file: !14118, line: 1009, type: !14121, scopeLine: 1009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !11721, retainedNodes: !14123)
!14118 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/boxed.rs", directory: "", checksumkind: CSK_MD5, checksum: "9efa3237c64a7f41bc63e23af752c9d3")
!14119 = !DINamespace(name: "{impl#7}", scope: !14120)
!14120 = !DINamespace(name: "boxed", scope: !300)
!14121 = !DISubroutineType(types: !14122)
!14122 = !{!65, !1899, !336}
!14123 = !{!14124, !14115}
!14124 = !DILocalVariable(name: "raw", scope: !14116, file: !1880, line: 236, type: !1899, align: 8)
!14125 = !DILocation(line: 236, column: 45, scope: !14116, inlinedAt: !14126)
!14126 = !DILocation(line: 954, column: 18, scope: !14127, inlinedAt: !14134)
!14127 = distinct !DISubprogram(name: "from_raw<std::io::error::Custom>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h43c5121486d503ffE", scope: !14128, file: !14118, line: 953, type: !14129, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !14131)
!14128 = !DINamespace(name: "{impl#6}", scope: !14120)
!14129 = !DISubroutineType(types: !14130)
!14130 = !{!65, !1899}
!14131 = !{!14132}
!14132 = !DILocalVariable(name: "raw", scope: !14133, file: !1880, line: 236, type: !1899, align: 8)
!14133 = !DILexicalBlockFile(scope: !14127, file: !1880, discriminator: 0)
!14134 = !DILocation(line: 236, column: 45, scope: !14107)
!14135 = !DILocation(line: 236, column: 69, scope: !14107)
!14136 = !DILocation(line: 236, column: 45, scope: !14133, inlinedAt: !14134)
!14137 = !DILocalVariable(name: "ptr", scope: !14138, file: !1880, line: 236, type: !1899, align: 8)
!14138 = !DILexicalBlockFile(scope: !14139, file: !1880, discriminator: 0)
!14139 = distinct !DISubprogram(name: "new_unchecked<std::io::error::Custom>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h7ef2256b168c468fE", scope: !11703, file: !1743, line: 85, type: !14140, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !14142)
!14140 = !DISubroutineType(types: !14141)
!14141 = !{!11703, !1899}
!14142 = !{!14137}
!14143 = !DILocation(line: 236, column: 45, scope: !14138, inlinedAt: !14144)
!14144 = !DILocation(line: 1010, column: 22, scope: !14117, inlinedAt: !14126)
!14145 = !DILocalVariable(name: "ptr", scope: !14146, file: !1880, line: 236, type: !1899, align: 8)
!14146 = !DILexicalBlockFile(scope: !14147, file: !1880, discriminator: 0)
!14147 = distinct !DISubprogram(name: "new_unchecked<std::io::error::Custom>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hac21f0edfe88a1e0E", scope: !11706, file: !646, line: 196, type: !14148, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3694, retainedNodes: !14150)
!14148 = !DISubroutineType(types: !14149)
!14149 = !{!11706, !1899}
!14150 = !{!14145}
!14151 = !DILocation(line: 236, column: 45, scope: !14146, inlinedAt: !14152)
!14152 = !DILocation(line: 87, column: 36, scope: !14139, inlinedAt: !14144)
!14153 = !DILocation(line: 236, column: 44, scope: !14107)
!14154 = distinct !DISubprogram(name: "branch<&str, usize>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb030faf09e4c671cE", scope: !5611, file: !5292, line: 2117, type: !14155, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6978, retainedNodes: !14173)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{!14157, !6970}
!14157 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, usize>, &str>", scope: !4109, file: !2, size: 192, align: 64, elements: !14158, templateParams: !23, identifier: "b9f7a6c7b534f1bc3a410d7d95ccdc22")
!14158 = !{!14159}
!14159 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14157, file: !2, size: 192, align: 64, elements: !14160, templateParams: !23, identifier: "89bee8120e6f287c1a876b01b83c4dd5", discriminator: !14172)
!14160 = !{!14161, !14168}
!14161 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !14159, file: !2, baseType: !14162, size: 192, align: 64, extraData: i64 0)
!14162 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !14157, file: !2, size: 192, align: 64, elements: !14163, templateParams: !14165, identifier: "b0d8c0f37b4ed477352eaa5990d632ba")
!14163 = !{!14164}
!14164 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14162, file: !2, baseType: !137, size: 128, align: 64, offset: 64)
!14165 = !{!14166, !14167}
!14166 = !DITemplateTypeParameter(name: "B", type: !5258)
!14167 = !DITemplateTypeParameter(name: "C", type: !137)
!14168 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !14159, file: !2, baseType: !14169, size: 192, align: 64, extraData: i64 1)
!14169 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !14157, file: !2, size: 192, align: 64, elements: !14170, templateParams: !14165, identifier: "53f5a657b1d4a3003fee432f405320cc")
!14170 = !{!14171}
!14171 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14169, file: !2, baseType: !5258, size: 64, align: 64, offset: 64)
!14172 = !DIDerivedType(tag: DW_TAG_member, scope: !14157, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!14173 = !{!14174, !14175, !14177}
!14174 = !DILocalVariable(name: "self", arg: 1, scope: !14154, file: !5292, line: 2117, type: !6970)
!14175 = !DILocalVariable(name: "v", scope: !14176, file: !5292, line: 2119, type: !137, align: 8)
!14176 = distinct !DILexicalBlock(scope: !14154, file: !5292, line: 2119, column: 13)
!14177 = !DILocalVariable(name: "e", scope: !14178, file: !5292, line: 2120, type: !9, align: 8)
!14178 = distinct !DILexicalBlock(scope: !14154, file: !5292, line: 2120, column: 13)
!14179 = !DILocation(line: 2117, column: 15, scope: !14154)
!14180 = !DILocation(line: 2118, column: 15, scope: !14154)
!14181 = !DILocation(line: 2118, column: 9, scope: !14154)
!14182 = !DILocation(line: 2119, column: 16, scope: !14154)
!14183 = !DILocation(line: 2119, column: 16, scope: !14176)
!14184 = !DILocation(line: 2119, column: 22, scope: !14176)
!14185 = !DILocation(line: 2119, column: 45, scope: !14154)
!14186 = !DILocation(line: 2120, column: 17, scope: !14154)
!14187 = !DILocation(line: 2120, column: 17, scope: !14178)
!14188 = !DILocation(line: 2120, column: 42, scope: !14178)
!14189 = !DILocation(line: 2120, column: 23, scope: !14178)
!14190 = !DILocation(line: 2120, column: 48, scope: !14154)
!14191 = !DILocation(line: 2122, column: 6, scope: !14154)
!14192 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hda4272c37b6cef10E", scope: !6946, file: !517, line: 44, type: !14193, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14195)
!14193 = !DISubroutineType(types: !14194)
!14194 = !{!534, !6945, !351}
!14195 = !{!14196, !14197}
!14196 = !DILocalVariable(name: "ch", arg: 2, scope: !14192, file: !517, line: 44, type: !351)
!14197 = !DILocalVariable(arg: 1, scope: !14192, file: !517, line: 44, type: !6945)
!14198 = !DILocation(line: 44, column: 54, scope: !14192)
!14199 = !DILocation(line: 44, column: 55, scope: !14192)
!14200 = !DILocation(line: 44, column: 84, scope: !14192)
!14201 = !DILocalVariable(name: "i", scope: !14202, file: !517, line: 44, type: !351, align: 4)
!14202 = !DILexicalBlockFile(scope: !14203, file: !517, discriminator: 0)
!14203 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char18from_u32_unchecked17h05c16ed8c0d03abcE", scope: !5000, file: !14204, line: 123, type: !14205, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14207)
!14204 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "d5e58489a0433b5803d74ec8aa0d2891")
!14205 = !DISubroutineType(types: !14206)
!14206 = !{!534, !351}
!14207 = !{!14201}
!14208 = !DILocation(line: 44, column: 59, scope: !14202, inlinedAt: !14209)
!14209 = !DILocation(line: 44, column: 59, scope: !14192)
!14210 = !DILocalVariable(name: "i", scope: !14211, file: !517, line: 44, type: !351, align: 4)
!14211 = !DILexicalBlockFile(scope: !14212, file: !517, discriminator: 0)
!14212 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17h4f36345ab63a3b7eE", scope: !14214, file: !14213, line: 24, type: !14205, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14215)
!14213 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "682330ec4e366d97d021bfdf78a11076")
!14214 = !DINamespace(name: "convert", scope: !5000)
!14215 = !{!14210}
!14216 = !DILocation(line: 44, column: 59, scope: !14211, inlinedAt: !14217)
!14217 = !DILocation(line: 125, column: 14, scope: !14203, inlinedAt: !14209)
!14218 = !DILocation(line: 44, column: 58, scope: !14192)
!14219 = distinct !DISubprogram(name: "next_match", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17hbac8f4cc31f9a4ccE", scope: !14220, file: !669, line: 410, type: !14221, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14224)
!14220 = !DINamespace(name: "{impl#0}", scope: !671)
!14221 = !DISubroutineType(types: !14222)
!14222 = !{!1275, !14223}
!14223 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharSearcher", baseType: !4594, size: 64, align: 64, dwarfAddressSpace: 0)
!14224 = !{!14225, !14226, !14228, !14230, !14232, !14234, !14236, !14238}
!14225 = !DILocalVariable(name: "self", arg: 1, scope: !14219, file: !669, line: 410, type: !14223)
!14226 = !DILocalVariable(name: "bytes", scope: !14227, file: !669, line: 413, type: !366, align: 8)
!14227 = distinct !DILexicalBlock(scope: !14219, file: !669, line: 413, column: 13)
!14228 = !DILocalVariable(name: "residual", scope: !14229, file: !669, line: 413, type: !4069, align: 1)
!14229 = distinct !DILexicalBlock(scope: !14219, file: !669, line: 413, column: 84)
!14230 = !DILocalVariable(name: "val", scope: !14231, file: !669, line: 413, type: !366, align: 8)
!14231 = distinct !DILexicalBlock(scope: !14219, file: !669, line: 413, column: 25)
!14232 = !DILocalVariable(name: "last_byte", scope: !14233, file: !669, line: 416, type: !70, align: 1)
!14233 = distinct !DILexicalBlock(scope: !14227, file: !669, line: 416, column: 13)
!14234 = !DILocalVariable(name: "index", scope: !14235, file: !669, line: 417, type: !9, align: 8)
!14235 = distinct !DILexicalBlock(scope: !14233, file: !669, line: 417, column: 67)
!14236 = !DILocalVariable(name: "found_char", scope: !14237, file: !669, line: 437, type: !9, align: 8)
!14237 = distinct !DILexicalBlock(scope: !14235, file: !669, line: 437, column: 21)
!14238 = !DILocalVariable(name: "slice", scope: !14239, file: !669, line: 438, type: !366, align: 8)
!14239 = distinct !DILexicalBlock(scope: !14237, file: !669, line: 438, column: 96)
!14240 = !DILocation(line: 410, column: 19, scope: !14219)
!14241 = !DILocalVariable(name: "self", scope: !14242, file: !669, line: 413, type: !1067, align: 8)
!14242 = !DILexicalBlockFile(scope: !14243, file: !669, discriminator: 0)
!14243 = distinct !DISubprogram(name: "branch<&[u8]>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h16b97478e6ec17a3E", scope: !4105, file: !1664, line: 2290, type: !14244, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1073, retainedNodes: !14261)
!14244 = !DISubroutineType(types: !14245)
!14245 = !{!14246, !1067}
!14246 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &[u8]>", scope: !4109, file: !2, size: 128, align: 64, elements: !14247, templateParams: !23, identifier: "2990b45dad552e5a8d7cad1abaaa086")
!14247 = !{!14248}
!14248 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14246, file: !2, size: 128, align: 64, elements: !14249, templateParams: !23, identifier: "a61fddfb98ad6ea2f195e3ee2f8c66e3", discriminator: !14260)
!14249 = !{!14250, !14256}
!14250 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !14248, file: !2, baseType: !14251, size: 128, align: 64)
!14251 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !14246, file: !2, size: 128, align: 64, elements: !14252, templateParams: !14254, identifier: "efa0d2a36143818ed52fe0d2ee8767f4")
!14252 = !{!14253}
!14253 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14251, file: !2, baseType: !366, size: 128, align: 64)
!14254 = !{!4118, !14255}
!14255 = !DITemplateTypeParameter(name: "C", type: !366)
!14256 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !14248, file: !2, baseType: !14257, size: 128, align: 64, extraData: i64 0)
!14257 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !14246, file: !2, size: 128, align: 64, elements: !14258, templateParams: !14254, identifier: "adf0aa8fc506ad64ce41932fb4a8d651")
!14258 = !{!14259}
!14259 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14257, file: !2, baseType: !4069, align: 8)
!14260 = !DIDerivedType(tag: DW_TAG_member, scope: !14246, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!14261 = !{!14241, !14262}
!14262 = !DILocalVariable(name: "v", scope: !14263, file: !669, line: 413, type: !366, align: 8)
!14263 = !DILexicalBlockFile(scope: !14264, file: !669, discriminator: 0)
!14264 = distinct !DILexicalBlock(scope: !14243, file: !1664, line: 2292, column: 13)
!14265 = !DILocation(line: 413, column: 25, scope: !14242, inlinedAt: !14266)
!14266 = !DILocation(line: 413, column: 25, scope: !14219)
!14267 = !DILocalVariable(name: "index", scope: !14268, file: !669, line: 413, type: !823, align: 8)
!14268 = !DILexicalBlockFile(scope: !14269, file: !669, discriminator: 0)
!14269 = distinct !DISubprogram(name: "get<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h9cf1db5c010938e1E", scope: !2489, file: !2488, line: 339, type: !14270, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !14274, retainedNodes: !14272)
!14270 = !DISubroutineType(types: !14271)
!14271 = !{!1067, !366, !823}
!14272 = !{!14273, !14267}
!14273 = !DILocalVariable(name: "self", scope: !14268, file: !669, line: 413, type: !366, align: 8)
!14274 = !{!331, !4467}
!14275 = !DILocation(line: 413, column: 25, scope: !14268, inlinedAt: !14266)
!14276 = !DILocation(line: 413, column: 84, scope: !14229)
!14277 = !DILocalVariable(name: "residual", scope: !14278, file: !669, line: 413, type: !4069, align: 1)
!14278 = !DILexicalBlockFile(scope: !14279, file: !669, discriminator: 0)
!14279 = distinct !DISubprogram(name: "from_residual<(usize, usize)>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17heb0ba1c00e467aa0E", scope: !4135, file: !1664, line: 2302, type: !14280, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1281, retainedNodes: !14282)
!14280 = !DISubroutineType(types: !14281)
!14281 = !{!1275, !4069}
!14282 = !{!14277}
!14283 = !DILocation(line: 413, column: 25, scope: !14278, inlinedAt: !14284)
!14284 = !DILocation(line: 413, column: 25, scope: !14229)
!14285 = !DILocalVariable(name: "index", scope: !14286, file: !669, line: 438, type: !823, align: 8)
!14286 = !DILexicalBlockFile(scope: !14287, file: !669, discriminator: 0)
!14287 = distinct !DISubprogram(name: "get<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h9cf1db5c010938e1E", scope: !2489, file: !2488, line: 339, type: !14270, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !14274, retainedNodes: !14288)
!14288 = !{!14289, !14285}
!14289 = !DILocalVariable(name: "self", scope: !14286, file: !669, line: 438, type: !366, align: 8)
!14290 = !DILocation(line: 438, column: 42, scope: !14286, inlinedAt: !14291)
!14291 = !DILocation(line: 438, column: 42, scope: !14239)
!14292 = !DILocation(line: 438, column: 33, scope: !14239)
!14293 = !DILocalVariable(name: "index", scope: !14294, file: !669, line: 439, type: !823, align: 8)
!14294 = !DILexicalBlockFile(scope: !14295, file: !669, discriminator: 0)
!14295 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>, 4>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hec9a5344f8228036E", scope: !14297, file: !14296, line: 285, type: !14299, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !14274, retainedNodes: !14302)
!14296 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e237aff39bff30ac55984ee183267020")
!14297 = !DINamespace(name: "{impl#15}", scope: !14298)
!14298 = !DINamespace(name: "array", scope: !44)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{!366, !14301, !823, !344}
!14301 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 4]", baseType: !4602, size: 64, align: 64, dwarfAddressSpace: 0)
!14302 = !{!14303, !14293}
!14303 = !DILocalVariable(name: "self", scope: !14294, file: !669, line: 439, type: !14301, align: 8)
!14304 = !DILocation(line: 439, column: 38, scope: !14294, inlinedAt: !14305)
!14305 = !DILocation(line: 439, column: 38, scope: !14239)
!14306 = !DILocation(line: 411, column: 9, scope: !14219)
!14307 = !DILocalVariable(name: "self", scope: !14308, file: !669, line: 413, type: !137, align: 8)
!14308 = !DILexicalBlockFile(scope: !14309, file: !669, discriminator: 0)
!14309 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14310)
!14310 = !{!14307}
!14311 = !DILocation(line: 413, column: 25, scope: !14308, inlinedAt: !14266)
!14312 = !DILocation(line: 413, column: 54, scope: !14219)
!14313 = !DILocation(line: 413, column: 67, scope: !14219)
!14314 = !DILocation(line: 413, column: 25, scope: !14263, inlinedAt: !14266)
!14315 = !DILocation(line: 413, column: 25, scope: !14231)
!14316 = !DILocation(line: 413, column: 17, scope: !14227)
!14317 = !DILocation(line: 416, column: 39, scope: !14227)
!14318 = !DILocalVariable(name: "self", scope: !14319, file: !669, line: 416, type: !366, align: 8)
!14319 = !DILexicalBlockFile(scope: !14320, file: !669, discriminator: 0)
!14320 = distinct !DISubprogram(name: "get_unchecked<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h81eb5fe47626ee4cE", scope: !2489, file: !2488, line: 398, type: !14321, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !13489, retainedNodes: !14323)
!14321 = !DISubroutineType(types: !14322)
!14322 = !{!556, !366, !9}
!14323 = !{!14318, !14324}
!14324 = !DILocalVariable(name: "index", scope: !14319, file: !669, line: 416, type: !9, align: 8)
!14325 = !DILocation(line: 416, column: 39, scope: !14319, inlinedAt: !14317)
!14326 = !DILocation(line: 416, column: 71, scope: !14227)
!14327 = !DILocalVariable(name: "self", scope: !14328, file: !669, line: 416, type: !9, align: 8)
!14328 = !DILexicalBlockFile(scope: !14329, file: !669, discriminator: 0)
!14329 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h0ba11f7cdc46bd7aE", scope: !8345, file: !818, line: 219, type: !14330, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14332)
!14330 = !DISubroutineType(types: !14331)
!14331 = !{!329, !9, !402}
!14332 = !{!14327, !14333, !14334}
!14333 = !DILocalVariable(name: "slice", scope: !14328, file: !669, line: 416, type: !402, align: 8)
!14334 = !DILocalVariable(name: "runtime", scope: !14335, file: !669, line: 416, type: !14337, align: 8)
!14335 = !DILexicalBlockFile(scope: !14336, file: !669, discriminator: 0)
!14336 = distinct !DILexicalBlock(scope: !14329, file: !386, line: 2336, column: 13)
!14337 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !8550, file: !2, size: 128, align: 64, elements: !14338, templateParams: !23, identifier: "7104d3ced1030246c65aea384aa33b26")
!14338 = !{!14339, !14340}
!14339 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !14337, file: !2, baseType: !393, size: 64, align: 64)
!14340 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__slice", scope: !14337, file: !2, baseType: !841, size: 64, align: 64, offset: 64)
!14341 = !DILocation(line: 416, column: 39, scope: !14328, inlinedAt: !14342)
!14342 = !DILocation(line: 405, column: 20, scope: !14320, inlinedAt: !14317)
!14343 = !DILocalVariable(name: "self", scope: !14344, file: !669, line: 416, type: !402, align: 8)
!14344 = !DILexicalBlockFile(scope: !14345, file: !669, discriminator: 0)
!14345 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h53ba0de6333377efE", scope: !849, file: !413, line: 1385, type: !850, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14346)
!14346 = !{!14343}
!14347 = !DILocation(line: 416, column: 39, scope: !14344, inlinedAt: !14348)
!14348 = !DILocation(line: 226, column: 13, scope: !14329, inlinedAt: !14342)
!14349 = !DILocalVariable(name: "self", scope: !14350, file: !669, line: 416, type: !329, align: 8)
!14350 = !DILexicalBlockFile(scope: !14351, file: !669, discriminator: 0)
!14351 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17hd93d5f335c24c154E", scope: !414, file: !413, line: 871, type: !857, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14352)
!14352 = !{!14349, !14353}
!14353 = !DILocalVariable(name: "count", scope: !14350, file: !669, line: 416, type: !9, align: 8)
!14354 = !DILocation(line: 416, column: 39, scope: !14350, inlinedAt: !14348)
!14355 = !DILocalVariable(name: "self", scope: !14356, file: !669, line: 416, type: !329, align: 8)
!14356 = !DILexicalBlockFile(scope: !14357, file: !669, discriminator: 0)
!14357 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hcb6b1a5987c5a17eE", scope: !414, file: !413, line: 453, type: !866, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14358)
!14358 = !{!14355, !14359}
!14359 = !DILocalVariable(name: "count", scope: !14356, file: !669, line: 416, type: !868, align: 8)
!14360 = !DILocation(line: 416, column: 39, scope: !14356, inlinedAt: !14361)
!14361 = !DILocation(line: 876, column: 18, scope: !14351, inlinedAt: !14348)
!14362 = !DILocation(line: 1, column: 1, scope: !14363)
!14363 = !DILexicalBlockFile(scope: !14219, file: !4178, discriminator: 0)
!14364 = !DILocation(line: 450, column: 6, scope: !14219)
!14365 = !DILocation(line: 416, column: 38, scope: !14227)
!14366 = !DILocation(line: 416, column: 17, scope: !14233)
!14367 = !DILocation(line: 417, column: 34, scope: !14235)
!14368 = !DILocation(line: 417, column: 20, scope: !14235)
!14369 = !DILocation(line: 417, column: 25, scope: !14235)
!14370 = !DILocation(line: 435, column: 32, scope: !14235)
!14371 = !DILocation(line: 435, column: 17, scope: !14235)
!14372 = !DILocation(line: 436, column: 20, scope: !14235)
!14373 = !DILocation(line: 436, column: 35, scope: !14235)
!14374 = !DILocation(line: 446, column: 31, scope: !14233)
!14375 = !DILocation(line: 446, column: 17, scope: !14233)
!14376 = !DILocation(line: 447, column: 24, scope: !14233)
!14377 = !DILocation(line: 447, column: 17, scope: !14233)
!14378 = !DILocation(line: 437, column: 38, scope: !14235)
!14379 = !DILocation(line: 437, column: 52, scope: !14235)
!14380 = !DILocation(line: 437, column: 25, scope: !14237)
!14381 = !DILocalVariable(name: "self", scope: !14382, file: !669, line: 438, type: !137, align: 8)
!14382 = !DILexicalBlockFile(scope: !14383, file: !669, discriminator: 0)
!14383 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14384)
!14384 = !{!14381}
!14385 = !DILocation(line: 438, column: 42, scope: !14382, inlinedAt: !14291)
!14386 = !DILocation(line: 438, column: 83, scope: !14239)
!14387 = !DILocation(line: 438, column: 71, scope: !14239)
!14388 = !DILocation(line: 438, column: 28, scope: !14239)
!14389 = !DILocation(line: 439, column: 28, scope: !14239)
!14390 = !DILocalVariable(name: "self", scope: !14391, file: !669, line: 439, type: !4900, align: 8)
!14391 = !DILexicalBlockFile(scope: !14392, file: !669, discriminator: 0)
!14392 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hfa90257108112eabE", scope: !2986, file: !2936, line: 1512, type: !4898, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2992, retainedNodes: !14393)
!14393 = !{!14390, !14394}
!14394 = !DILocalVariable(name: "other", scope: !14391, file: !669, line: 439, type: !4900, align: 8)
!14395 = !DILocation(line: 439, column: 28, scope: !14391, inlinedAt: !14389)
!14396 = !DILocation(line: 439, column: 59, scope: !14239)
!14397 = !DILocation(line: 439, column: 56, scope: !14239)
!14398 = !DILocalVariable(name: "self", scope: !14399, file: !669, line: 439, type: !366, align: 8)
!14399 = !DILexicalBlockFile(scope: !14400, file: !669, discriminator: 0)
!14400 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h4faf2fe7f4f7cbf4E", scope: !5927, file: !818, line: 17, type: !14401, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !14274, retainedNodes: !14403)
!14401 = !DISubroutineType(types: !14402)
!14402 = !{!366, !366, !823, !344}
!14403 = !{!14398, !14404}
!14404 = !DILocalVariable(name: "index", scope: !14399, file: !669, line: 439, type: !823, align: 8)
!14405 = !DILocation(line: 439, column: 38, scope: !14399, inlinedAt: !14406)
!14406 = !DILocation(line: 286, column: 9, scope: !14295, inlinedAt: !14305)
!14407 = !DILocation(line: 436, column: 17, scope: !14235)
!14408 = !DILocation(line: 439, column: 37, scope: !14239)
!14409 = !DILocation(line: 438, column: 21, scope: !14237)
!14410 = !DILocation(line: 440, column: 54, scope: !14239)
!14411 = !DILocation(line: 440, column: 41, scope: !14239)
!14412 = !DILocation(line: 440, column: 36, scope: !14239)
!14413 = !DILocation(line: 1, column: 1, scope: !14414)
!14414 = !DILexicalBlockFile(scope: !14233, file: !4178, discriminator: 0)
!14415 = distinct !DISubprogram(name: "haystack", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h5b45f91e8f6b6713E", scope: !14220, file: !669, line: 379, type: !14416, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14419)
!14416 = !DISubroutineType(types: !14417)
!14417 = !{!137, !14418}
!14418 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::CharSearcher", baseType: !4594, size: 64, align: 64, dwarfAddressSpace: 0)
!14419 = !{!14420}
!14420 = !DILocalVariable(name: "self", arg: 1, scope: !14415, file: !669, line: 379, type: !14418)
!14421 = !DILocation(line: 379, column: 17, scope: !14415)
!14422 = !DILocation(line: 380, column: 9, scope: !14415)
!14423 = !DILocation(line: 381, column: 6, scope: !14415)
!14424 = distinct !DISubprogram(name: "from_residual<usize>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h063192d14cb62140E", scope: !4135, file: !1664, line: 2302, type: !14425, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !14427)
!14425 = !DISubroutineType(types: !14426)
!14426 = !{!455, !4069}
!14427 = !{!14428}
!14428 = !DILocalVariable(name: "residual", arg: 1, scope: !14424, file: !1664, line: 2302, type: !4069)
!14429 = !DILocation(line: 2302, column: 22, scope: !14424)
!14430 = !DILocation(line: 2304, column: 21, scope: !14424)
!14431 = !DILocation(line: 2306, column: 6, scope: !14424)
!14432 = distinct !DISubprogram(name: "from_residual<i32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha2738e9bf57d9605E", scope: !4135, file: !1664, line: 2302, type: !14433, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !2783, retainedNodes: !14435)
!14433 = !DISubroutineType(types: !14434)
!14434 = !{!2777, !4069}
!14435 = !{!14436}
!14436 = !DILocalVariable(name: "residual", arg: 1, scope: !14432, file: !1664, line: 2302, type: !4069)
!14437 = !DILocation(line: 2302, column: 22, scope: !14432)
!14438 = !DILocation(line: 2304, column: 21, scope: !14432)
!14439 = !DILocation(line: 2306, column: 6, scope: !14432)
!14440 = distinct !DISubprogram(name: "from_residual<u64>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha6f2bf65a9752053E", scope: !4135, file: !1664, line: 2302, type: !14441, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !7080, retainedNodes: !14443)
!14441 = !DISubroutineType(types: !14442)
!14442 = !{!7074, !4069}
!14443 = !{!14444}
!14444 = !DILocalVariable(name: "residual", arg: 1, scope: !14440, file: !1664, line: 2302, type: !4069)
!14445 = !DILocation(line: 2302, column: 22, scope: !14440)
!14446 = !DILocation(line: 2304, column: 21, scope: !14440)
!14447 = !DILocation(line: 2306, column: 6, scope: !14440)
!14448 = distinct !DISubprogram(name: "next", linkageName: "_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee517ea8e92987d3E", scope: !14449, file: !517, line: 138, type: !520, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14450)
!14449 = !DINamespace(name: "{impl#5}", scope: !519)
!14450 = !{!14451, !14452, !14454, !14456, !14458}
!14451 = !DILocalVariable(name: "self", arg: 1, scope: !14448, file: !517, line: 138, type: !540)
!14452 = !DILocalVariable(name: "pre_len", scope: !14453, file: !517, line: 139, type: !9, align: 8)
!14453 = distinct !DILexicalBlock(scope: !14448, file: !517, line: 139, column: 9)
!14454 = !DILocalVariable(name: "ch", scope: !14455, file: !517, line: 142, type: !534, align: 4)
!14455 = distinct !DILexicalBlock(scope: !14453, file: !517, line: 142, column: 13)
!14456 = !DILocalVariable(name: "index", scope: !14457, file: !517, line: 143, type: !9, align: 8)
!14457 = distinct !DILexicalBlock(scope: !14455, file: !517, line: 143, column: 17)
!14458 = !DILocalVariable(name: "len", scope: !14459, file: !517, line: 144, type: !9, align: 8)
!14459 = distinct !DILexicalBlock(scope: !14457, file: !517, line: 144, column: 17)
!14460 = !DILocation(line: 138, column: 13, scope: !14448)
!14461 = !DILocation(line: 139, column: 23, scope: !14448)
!14462 = !DILocalVariable(name: "self", scope: !14463, file: !517, line: 139, type: !594, align: 8)
!14463 = !DILexicalBlockFile(scope: !14464, file: !517, discriminator: 0)
!14464 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb43e37bf6ff01ebbE", scope: !609, file: !608, line: 119, type: !610, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14465)
!14465 = !{!14462, !14466, !14469, !14472}
!14466 = !DILocalVariable(name: "start", scope: !14467, file: !517, line: 139, type: !326, align: 8)
!14467 = !DILexicalBlockFile(scope: !14468, file: !517, discriminator: 0)
!14468 = distinct !DILexicalBlock(scope: !14464, file: !608, line: 18, column: 9)
!14469 = !DILocalVariable(name: "size", scope: !14470, file: !517, line: 139, type: !9, align: 8)
!14470 = !DILexicalBlockFile(scope: !14471, file: !517, discriminator: 0)
!14471 = distinct !DILexicalBlock(scope: !14468, file: !608, line: 19, column: 9)
!14472 = !DILocalVariable(name: "diff", scope: !14473, file: !517, line: 139, type: !9, align: 8)
!14473 = !DILexicalBlockFile(scope: !14474, file: !517, discriminator: 0)
!14474 = distinct !DILexicalBlock(scope: !14471, file: !608, line: 29, column: 13)
!14475 = !DILocation(line: 139, column: 23, scope: !14463, inlinedAt: !14461)
!14476 = !DILocation(line: 139, column: 23, scope: !14467, inlinedAt: !14461)
!14477 = !DILocation(line: 139, column: 23, scope: !14478, inlinedAt: !14480)
!14478 = !DILexicalBlockFile(scope: !14479, file: !517, discriminator: 0)
!14479 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14480 = !DILocation(line: 41, column: 5, scope: !14481, inlinedAt: !14482)
!14481 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14482 = !DILocation(line: 19, column: 20, scope: !14468, inlinedAt: !14461)
!14483 = !DILocation(line: 139, column: 23, scope: !14470, inlinedAt: !14461)
!14484 = !DILocalVariable(name: "self", scope: !14485, file: !517, line: 139, type: !329, align: 8)
!14485 = !DILexicalBlockFile(scope: !14486, file: !517, discriminator: 0)
!14486 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14487)
!14487 = !{!14484}
!14488 = !DILocation(line: 139, column: 23, scope: !14485, inlinedAt: !14489)
!14489 = !DILocation(line: 29, column: 47, scope: !14471, inlinedAt: !14461)
!14490 = !DILocalVariable(name: "self", scope: !14491, file: !517, line: 139, type: !326, align: 8)
!14491 = !DILexicalBlockFile(scope: !14492, file: !517, discriminator: 0)
!14492 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14493)
!14493 = !{!14490}
!14494 = !DILocation(line: 139, column: 23, scope: !14491, inlinedAt: !14495)
!14495 = !DILocation(line: 29, column: 65, scope: !14471, inlinedAt: !14461)
!14496 = !DILocalVariable(name: "self", scope: !14497, file: !517, line: 139, type: !649, align: 8)
!14497 = !DILexicalBlockFile(scope: !14498, file: !517, discriminator: 0)
!14498 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14499)
!14499 = !{!14496}
!14500 = !DILocation(line: 139, column: 23, scope: !14497, inlinedAt: !14495)
!14501 = !DILocation(line: 139, column: 23, scope: !14473, inlinedAt: !14461)
!14502 = !DILocation(line: 139, column: 13, scope: !14453)
!14503 = !DILocation(line: 140, column: 15, scope: !14453)
!14504 = !DILocalVariable(name: "self", scope: !14505, file: !517, line: 140, type: !579, align: 8)
!14505 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6ad23422ea4a6390E", scope: !6947, file: !517, line: 41, type: !564, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !14506)
!14506 = !{!14504}
!14507 = !DILocation(line: 140, column: 15, scope: !14505, inlinedAt: !14503)
!14508 = !DILocation(line: 140, column: 9, scope: !14453)
!14509 = !DILocation(line: 141, column: 21, scope: !14453)
!14510 = !DILocation(line: 142, column: 18, scope: !14453)
!14511 = !DILocation(line: 142, column: 18, scope: !14455)
!14512 = !DILocation(line: 143, column: 29, scope: !14455)
!14513 = !DILocation(line: 143, column: 21, scope: !14457)
!14514 = !DILocation(line: 144, column: 27, scope: !14457)
!14515 = !DILocalVariable(name: "self", scope: !14516, file: !517, line: 144, type: !594, align: 8)
!14516 = !DILexicalBlockFile(scope: !14517, file: !517, discriminator: 0)
!14517 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb43e37bf6ff01ebbE", scope: !609, file: !608, line: 119, type: !610, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14518)
!14518 = !{!14515, !14519, !14522, !14525}
!14519 = !DILocalVariable(name: "start", scope: !14520, file: !517, line: 144, type: !326, align: 8)
!14520 = !DILexicalBlockFile(scope: !14521, file: !517, discriminator: 0)
!14521 = distinct !DILexicalBlock(scope: !14517, file: !608, line: 18, column: 9)
!14522 = !DILocalVariable(name: "size", scope: !14523, file: !517, line: 144, type: !9, align: 8)
!14523 = !DILexicalBlockFile(scope: !14524, file: !517, discriminator: 0)
!14524 = distinct !DILexicalBlock(scope: !14521, file: !608, line: 19, column: 9)
!14525 = !DILocalVariable(name: "diff", scope: !14526, file: !517, line: 144, type: !9, align: 8)
!14526 = !DILexicalBlockFile(scope: !14527, file: !517, discriminator: 0)
!14527 = distinct !DILexicalBlock(scope: !14524, file: !608, line: 29, column: 13)
!14528 = !DILocation(line: 144, column: 27, scope: !14516, inlinedAt: !14514)
!14529 = !DILocation(line: 144, column: 27, scope: !14520, inlinedAt: !14514)
!14530 = !DILocation(line: 144, column: 27, scope: !14531, inlinedAt: !14533)
!14531 = !DILexicalBlockFile(scope: !14532, file: !517, discriminator: 0)
!14532 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14533 = !DILocation(line: 41, column: 5, scope: !14534, inlinedAt: !14535)
!14534 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14535 = !DILocation(line: 19, column: 20, scope: !14521, inlinedAt: !14514)
!14536 = !DILocation(line: 144, column: 27, scope: !14523, inlinedAt: !14514)
!14537 = !DILocalVariable(name: "self", scope: !14538, file: !517, line: 144, type: !329, align: 8)
!14538 = !DILexicalBlockFile(scope: !14539, file: !517, discriminator: 0)
!14539 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14540)
!14540 = !{!14537}
!14541 = !DILocation(line: 144, column: 27, scope: !14538, inlinedAt: !14542)
!14542 = !DILocation(line: 29, column: 47, scope: !14524, inlinedAt: !14514)
!14543 = !DILocalVariable(name: "self", scope: !14544, file: !517, line: 144, type: !326, align: 8)
!14544 = !DILexicalBlockFile(scope: !14545, file: !517, discriminator: 0)
!14545 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14546)
!14546 = !{!14543}
!14547 = !DILocation(line: 144, column: 27, scope: !14544, inlinedAt: !14548)
!14548 = !DILocation(line: 29, column: 65, scope: !14524, inlinedAt: !14514)
!14549 = !DILocalVariable(name: "self", scope: !14550, file: !517, line: 144, type: !649, align: 8)
!14550 = !DILexicalBlockFile(scope: !14551, file: !517, discriminator: 0)
!14551 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14552)
!14552 = !{!14549}
!14553 = !DILocation(line: 144, column: 27, scope: !14550, inlinedAt: !14548)
!14554 = !DILocation(line: 144, column: 27, scope: !14526, inlinedAt: !14514)
!14555 = !DILocation(line: 144, column: 21, scope: !14459)
!14556 = !DILocation(line: 145, column: 38, scope: !14459)
!14557 = !DILocation(line: 145, column: 17, scope: !14459)
!14558 = !DILocation(line: 146, column: 22, scope: !14459)
!14559 = !DILocation(line: 146, column: 17, scope: !14459)
!14560 = !DILocation(line: 147, column: 13, scope: !14453)
!14561 = !DILocation(line: 149, column: 6, scope: !14448)
!14562 = distinct !DISubprogram(name: "spec_next<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17hf15cad5564cfbb15E", scope: !14563, file: !2914, line: 620, type: !5309, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !461, retainedNodes: !14564)
!14563 = !DINamespace(name: "{impl#2}", scope: !2916)
!14564 = !{!14565, !14566}
!14565 = !DILocalVariable(name: "self", arg: 1, scope: !14562, file: !2914, line: 620, type: !5311)
!14566 = !DILocalVariable(name: "n", scope: !14567, file: !2914, line: 623, type: !9, align: 8)
!14567 = distinct !DILexicalBlock(scope: !14562, file: !2914, line: 623, column: 13)
!14568 = !DILocation(line: 620, column: 18, scope: !14562)
!14569 = !DILocation(line: 621, column: 12, scope: !14562)
!14570 = !DILocation(line: 621, column: 25, scope: !14562)
!14571 = !DILocation(line: 626, column: 13, scope: !14562)
!14572 = !DILocation(line: 621, column: 9, scope: !14562)
!14573 = !DILocation(line: 623, column: 54, scope: !14562)
!14574 = !DILocation(line: 623, column: 30, scope: !14562)
!14575 = !DILocation(line: 623, column: 17, scope: !14567)
!14576 = !DILocation(line: 624, column: 31, scope: !14567)
!14577 = !DILocation(line: 624, column: 18, scope: !14567)
!14578 = !DILocation(line: 624, column: 13, scope: !14567)
!14579 = !DILocation(line: 628, column: 6, scope: !14562)
!14580 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h5ce0bf41ffb7e76aE", scope: !14581, file: !517, line: 456, type: !14582, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4607, retainedNodes: !14584)
!14581 = !DINamespace(name: "{impl#60}", scope: !519)
!14582 = !DISubroutineType(types: !14583)
!14583 = !{!176, !5248}
!14584 = !{!14585}
!14585 = !DILocalVariable(name: "self", arg: 1, scope: !14580, file: !517, line: 456, type: !5248)
!14586 = !DILocation(line: 456, column: 21, scope: !14580)
!14587 = !DILocation(line: 457, column: 17, scope: !14580)
!14588 = !DILocation(line: 458, column: 14, scope: !14580)
!14589 = distinct !DISubprogram(name: "next<[char; 2]>", linkageName: "_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haffff965e8aa3b1fE", scope: !14581, file: !517, line: 456, type: !14590, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4658, retainedNodes: !14593)
!14590 = !DISubroutineType(types: !14591)
!14591 = !{!176, !14592}
!14592 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Split<[char; 2]>", baseType: !4635, size: 64, align: 64, dwarfAddressSpace: 0)
!14593 = !{!14594}
!14594 = !DILocalVariable(name: "self", arg: 1, scope: !14589, file: !517, line: 456, type: !14592)
!14595 = !DILocation(line: 456, column: 21, scope: !14589)
!14596 = !DILocation(line: 457, column: 17, scope: !14589)
!14597 = !DILocation(line: 458, column: 14, scope: !14589)
!14598 = distinct !DISubprogram(name: "any<char, core::str::pattern::{impl#5}::matches::{closure_env#0}<2>>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h3b6fe6445cd4211cE", scope: !14599, file: !608, line: 236, type: !14600, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !14608, retainedNodes: !14603)
!14599 = !DINamespace(name: "{impl#181}", scope: !473)
!14600 = !DISubroutineType(types: !14601)
!14601 = !{!1159, !14602, !13949}
!14602 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<char>", baseType: !6481, size: 64, align: 64, dwarfAddressSpace: 0)
!14603 = !{!14604, !14605, !14606}
!14604 = !DILocalVariable(name: "self", arg: 1, scope: !14598, file: !608, line: 236, type: !14602)
!14605 = !DILocalVariable(name: "f", arg: 2, scope: !14598, file: !608, line: 236, type: !13949)
!14606 = !DILocalVariable(name: "x", scope: !14607, file: !608, line: 241, type: !6493, align: 8)
!14607 = distinct !DILexicalBlock(scope: !14598, file: !608, line: 241, column: 49)
!14608 = !{!573, !14609}
!14609 = !DITemplateTypeParameter(name: "F", type: !13949)
!14610 = !DILocation(line: 236, column: 23, scope: !14598)
!14611 = !DILocation(line: 236, column: 34, scope: !14598)
!14612 = !DILocation(line: 241, column: 17, scope: !14598)
!14613 = !DILocation(line: 241, column: 37, scope: !14607)
!14614 = !DILocation(line: 247, column: 13, scope: !14598)
!14615 = !DILocation(line: 241, column: 27, scope: !14607)
!14616 = !DILocation(line: 241, column: 32, scope: !14607)
!14617 = !DILocation(line: 242, column: 24, scope: !14607)
!14618 = !DILocation(line: 246, column: 17, scope: !14598)
!14619 = !DILocation(line: 247, column: 14, scope: !14598)
!14620 = !DILocation(line: 236, column: 13, scope: !14598)
!14621 = !DILocation(line: 243, column: 32, scope: !14607)
!14622 = distinct !DISubprogram(name: "any<&str, core::slice::cmp::{impl#11}::slice_contains::{closure_env#0}<&str>>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hffabf1f380f522a1E", scope: !14599, file: !608, line: 236, type: !14623, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !14630, retainedNodes: !14625)
!14623 = !DISubroutineType(types: !14624)
!14624 = !{!1159, !5406, !7798}
!14625 = !{!14626, !14627, !14628}
!14626 = !DILocalVariable(name: "self", arg: 1, scope: !14622, file: !608, line: 236, type: !5406)
!14627 = !DILocalVariable(name: "f", arg: 2, scope: !14622, file: !608, line: 236, type: !7798)
!14628 = !DILocalVariable(name: "x", scope: !14629, file: !608, line: 241, type: !199, align: 8)
!14629 = distinct !DILexicalBlock(scope: !14622, file: !608, line: 241, column: 49)
!14630 = !{!184, !14631}
!14631 = !DITemplateTypeParameter(name: "F", type: !7798)
!14632 = !DILocation(line: 236, column: 23, scope: !14622)
!14633 = !DILocation(line: 236, column: 34, scope: !14622)
!14634 = !DILocation(line: 241, column: 17, scope: !14622)
!14635 = !DILocation(line: 241, column: 37, scope: !14629)
!14636 = !DILocation(line: 247, column: 13, scope: !14622)
!14637 = !DILocation(line: 241, column: 27, scope: !14629)
!14638 = !DILocation(line: 241, column: 32, scope: !14629)
!14639 = !DILocation(line: 242, column: 24, scope: !14629)
!14640 = !DILocation(line: 246, column: 17, scope: !14622)
!14641 = !DILocation(line: 247, column: 14, scope: !14622)
!14642 = !DILocation(line: 236, column: 13, scope: !14622)
!14643 = !DILocation(line: 243, column: 32, scope: !14629)
!14644 = distinct !DISubprogram(name: "next<&str>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h01884079d93402d2E", scope: !14599, file: !608, line: 134, type: !14645, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14647)
!14645 = !DISubroutineType(types: !14646)
!14646 = !{!6896, !5406}
!14647 = !{!14648}
!14648 = !DILocalVariable(name: "self", arg: 1, scope: !14644, file: !608, line: 134, type: !5406)
!14649 = !DILocation(line: 134, column: 21, scope: !14644)
!14650 = !DILocalVariable(name: "metadata", scope: !14651, file: !608, line: 142, type: !7, align: 1)
!14651 = !DILexicalBlockFile(scope: !14652, file: !608, discriminator: 0)
!14652 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14653)
!14653 = !{!14654, !14650}
!14654 = !DILocalVariable(name: "data_address", scope: !14651, file: !608, line: 142, type: !960, align: 8)
!14655 = !DILocation(line: 142, column: 29, scope: !14651, inlinedAt: !14656)
!14656 = !DILocation(line: 668, column: 5, scope: !14657, inlinedAt: !14658)
!14657 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14658 = !DILocation(line: 38, column: 41, scope: !14659, inlinedAt: !14665)
!14659 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hfde027e3eb6d93c1E", scope: !657, file: !656, line: 35, type: !14660, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14662)
!14660 = !DISubroutineType(types: !14661)
!14661 = !{!1159, !6348}
!14662 = !{!14663}
!14663 = !DILocalVariable(name: "self", scope: !14664, file: !608, line: 142, type: !6348, align: 8)
!14664 = !DILexicalBlockFile(scope: !14659, file: !608, discriminator: 0)
!14665 = !DILocation(line: 142, column: 29, scope: !14644)
!14666 = !DILocalVariable(name: "metadata", scope: !14667, file: !608, line: 144, type: !7, align: 1)
!14667 = !DILexicalBlockFile(scope: !14668, file: !608, discriminator: 0)
!14668 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17ha110c0ee121a06dbE", scope: !427, file: !426, line: 110, type: !1167, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14669)
!14669 = !{!14670, !14666}
!14670 = !DILocalVariable(name: "data_address", scope: !14667, file: !608, line: 144, type: !6, align: 8)
!14671 = !DILocation(line: 144, column: 33, scope: !14667, inlinedAt: !14672)
!14672 = !DILocation(line: 513, column: 5, scope: !14673, inlinedAt: !14674)
!14673 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17ha2d8dbbe516802bdE", scope: !43, file: !399, line: 512, type: !1174, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14674 = !DILocation(line: 39, column: 43, scope: !14675, inlinedAt: !14679)
!14675 = distinct !DISubprogram(name: "is_null<&str>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h20de5921ed95fe89E", scope: !414, file: !413, line: 36, type: !6275, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14676)
!14676 = !{!14677}
!14677 = !DILocalVariable(name: "self", scope: !14678, file: !608, line: 144, type: !479, align: 8)
!14678 = !DILexicalBlockFile(scope: !14675, file: !608, discriminator: 0)
!14679 = !DILocation(line: 144, column: 33, scope: !14644)
!14680 = !DILocalVariable(name: "self", scope: !14681, file: !608, line: 142, type: !476, align: 8)
!14681 = !DILexicalBlockFile(scope: !14682, file: !608, discriminator: 0)
!14682 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h61f3f49968f444dfE", scope: !476, file: !646, line: 330, type: !9667, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14683)
!14683 = !{!14680}
!14684 = !DILocation(line: 142, column: 29, scope: !14681, inlinedAt: !14665)
!14685 = !DILocation(line: 142, column: 29, scope: !14664, inlinedAt: !14665)
!14686 = !DILocalVariable(name: "self", scope: !14687, file: !608, line: 142, type: !649, align: 8)
!14687 = !DILexicalBlockFile(scope: !14688, file: !608, discriminator: 0)
!14688 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14689)
!14689 = !{!14686, !14690}
!14690 = !DILocalVariable(name: "other", scope: !14687, file: !608, line: 142, type: !649, align: 8)
!14691 = !DILocation(line: 142, column: 29, scope: !14687, inlinedAt: !14692)
!14692 = !DILocation(line: 38, column: 9, scope: !14659, inlinedAt: !14665)
!14693 = !DILocation(line: 142, column: 29, scope: !14694, inlinedAt: !14698)
!14694 = !DILexicalBlockFile(scope: !14695, file: !608, discriminator: 0)
!14695 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !14696)
!14696 = !{!14697}
!14697 = !DILocalVariable(name: "addr", scope: !14694, file: !608, line: 142, type: !9, align: 8)
!14698 = !DILocation(line: 668, column: 24, scope: !14657, inlinedAt: !14658)
!14699 = !DILocation(line: 142, column: 28, scope: !14644)
!14700 = !DILocation(line: 142, column: 21, scope: !14644)
!14701 = !DILocation(line: 143, column: 24, scope: !14644)
!14702 = !DILocation(line: 143, column: 21, scope: !14644)
!14703 = !DILocation(line: 144, column: 33, scope: !14678, inlinedAt: !14679)
!14704 = !DILocalVariable(name: "self", scope: !14705, file: !608, line: 144, type: !329, align: 8)
!14705 = !DILexicalBlockFile(scope: !14706, file: !608, discriminator: 0)
!14706 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17ha4d0530636a6b1ddE", scope: !414, file: !413, line: 777, type: !1215, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14707)
!14707 = !{!14704, !14708}
!14708 = !DILocalVariable(name: "other", scope: !14705, file: !608, line: 144, type: !329, align: 8)
!14709 = !DILocation(line: 144, column: 33, scope: !14705, inlinedAt: !14710)
!14710 = !DILocation(line: 39, column: 9, scope: !14675, inlinedAt: !14679)
!14711 = !DILocation(line: 144, column: 33, scope: !14712, inlinedAt: !14716)
!14712 = !DILexicalBlockFile(scope: !14713, file: !608, discriminator: 0)
!14713 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h5c8467dab22abe2fE", scope: !43, file: !399, line: 538, type: !1224, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !14714)
!14714 = !{!14715}
!14715 = !DILocalVariable(name: "addr", scope: !14712, file: !608, line: 144, type: !9, align: 8)
!14716 = !DILocation(line: 513, column: 20, scope: !14673, inlinedAt: !14674)
!14717 = !DILocation(line: 144, column: 32, scope: !14644)
!14718 = !DILocation(line: 144, column: 25, scope: !14644)
!14719 = !DILocation(line: 146, column: 24, scope: !14644)
!14720 = !DILocalVariable(name: "self", scope: !14721, file: !608, line: 146, type: !476, align: 8)
!14721 = !DILexicalBlockFile(scope: !14722, file: !608, discriminator: 0)
!14722 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h61f3f49968f444dfE", scope: !476, file: !646, line: 330, type: !9667, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14723)
!14723 = !{!14720}
!14724 = !DILocation(line: 146, column: 24, scope: !14721, inlinedAt: !14725)
!14725 = !DILocation(line: 8, column: 9, scope: !14644)
!14726 = !DILocation(line: 149, column: 30, scope: !14644)
!14727 = !DILocalVariable(name: "self", scope: !14728, file: !608, line: 149, type: !5406, align: 8)
!14728 = distinct !DISubprogram(name: "post_inc_start<&str>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17hc5a68bc849fbee32E", scope: !472, file: !608, line: 85, type: !14729, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14731)
!14729 = !DISubroutineType(types: !14730)
!14730 = !{!479, !5406, !868}
!14731 = !{!14727, !14732, !14733}
!14732 = !DILocalVariable(name: "offset", scope: !14728, file: !608, line: 149, type: !868, align: 8)
!14733 = !DILocalVariable(name: "old", scope: !14734, file: !608, line: 149, type: !6348, align: 8)
!14734 = distinct !DILexicalBlock(scope: !14728, file: !608, line: 90, column: 21)
!14735 = !DILocation(line: 149, column: 30, scope: !14728, inlinedAt: !14736)
!14736 = !DILocation(line: 53, column: 47, scope: !14644)
!14737 = !DILocation(line: 147, column: 25, scope: !14644)
!14738 = !DILocation(line: 146, column: 21, scope: !14644)
!14739 = !DILocation(line: 152, column: 14, scope: !14644)
!14740 = !DILocalVariable(name: "self", scope: !14741, file: !608, line: 149, type: !329, align: 8)
!14741 = !DILexicalBlockFile(scope: !14742, file: !608, discriminator: 0)
!14742 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h5c4e7a2ea5ca6880E", scope: !414, file: !413, line: 536, type: !866, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14743)
!14743 = !{!14740, !14744}
!14744 = !DILocalVariable(name: "count", scope: !14741, file: !608, line: 149, type: !868, align: 8)
!14745 = !DILocation(line: 149, column: 30, scope: !14741, inlinedAt: !14746)
!14746 = !DILocation(line: 67, column: 29, scope: !14728, inlinedAt: !14736)
!14747 = !DILocalVariable(name: "self", scope: !14748, file: !608, line: 149, type: !476, align: 8)
!14748 = !DILexicalBlockFile(scope: !14749, file: !608, discriminator: 0)
!14749 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h61f3f49968f444dfE", scope: !476, file: !646, line: 330, type: !9667, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14750)
!14750 = !{!14747}
!14751 = !DILocation(line: 149, column: 30, scope: !14748, inlinedAt: !14752)
!14752 = !DILocation(line: 90, column: 31, scope: !14728, inlinedAt: !14736)
!14753 = !DILocation(line: 149, column: 30, scope: !14734, inlinedAt: !14736)
!14754 = !DILocalVariable(name: "self", scope: !14755, file: !608, line: 149, type: !476, align: 8)
!14755 = !DILexicalBlockFile(scope: !14756, file: !608, discriminator: 0)
!14756 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h61f3f49968f444dfE", scope: !476, file: !646, line: 330, type: !9667, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14757)
!14757 = !{!14754}
!14758 = !DILocation(line: 149, column: 30, scope: !14755, inlinedAt: !14759)
!14759 = !DILocation(line: 93, column: 64, scope: !14734, inlinedAt: !14736)
!14760 = !DILocalVariable(name: "self", scope: !14761, file: !608, line: 149, type: !6348, align: 8)
!14761 = !DILexicalBlockFile(scope: !14762, file: !608, discriminator: 0)
!14762 = distinct !DISubprogram(name: "offset<&str>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hc3b3d9f4a7b5c5cbE", scope: !657, file: !656, line: 465, type: !14763, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14765)
!14763 = !DISubroutineType(types: !14764)
!14764 = !{!6348, !6348, !868}
!14765 = !{!14760, !14766}
!14766 = !DILocalVariable(name: "count", scope: !14761, file: !608, line: 149, type: !868, align: 8)
!14767 = !DILocation(line: 149, column: 30, scope: !14761, inlinedAt: !14759)
!14768 = !DILocalVariable(name: "ptr", scope: !14769, file: !608, line: 149, type: !6348, align: 8)
!14769 = !DILexicalBlockFile(scope: !14770, file: !608, discriminator: 0)
!14770 = distinct !DISubprogram(name: "new_unchecked<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hca71b165166f52e5E", scope: !476, file: !646, line: 196, type: !6346, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14771)
!14771 = !{!14768}
!14772 = !DILocation(line: 149, column: 30, scope: !14769, inlinedAt: !14773)
!14773 = !DILocation(line: 93, column: 41, scope: !14734, inlinedAt: !14736)
!14774 = !DILocation(line: 149, column: 25, scope: !14644)
!14775 = !DILocalVariable(name: "self", scope: !14776, file: !608, line: 149, type: !476, align: 8)
!14776 = !DILexicalBlockFile(scope: !14777, file: !608, discriminator: 0)
!14777 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h61f3f49968f444dfE", scope: !476, file: !646, line: 330, type: !9667, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !183, retainedNodes: !14778)
!14778 = !{!14775}
!14779 = !DILocation(line: 149, column: 30, scope: !14776, inlinedAt: !14780)
!14780 = !DILocation(line: 88, column: 21, scope: !14728, inlinedAt: !14736)
!14781 = distinct !DISubprogram(name: "next<(&str, &[&str])>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha8eecab141ec909bE", scope: !14599, file: !608, line: 134, type: !14782, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14796)
!14782 = !DISubroutineType(types: !14783)
!14783 = !{!14784, !14795}
!14784 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&(&str, &[&str])>", scope: !177, file: !2, size: 64, align: 64, elements: !14785, templateParams: !23, identifier: "7cc7fdf924e1e855eda3a2309fa705")
!14785 = !{!14786}
!14786 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14784, file: !2, size: 64, align: 64, elements: !14787, templateParams: !23, identifier: "3d97692dee1e2e912b90af9b4b6b63b0", discriminator: !14794)
!14787 = !{!14788, !14790}
!14788 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !14786, file: !2, baseType: !14789, size: 64, align: 64, extraData: i64 0)
!14789 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !14784, file: !2, size: 64, align: 64, elements: !23, templateParams: !6372, identifier: "f4aad8fd4a62031cc6c4f852894b1d1f")
!14790 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !14786, file: !2, baseType: !14791, size: 64, align: 64)
!14791 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !14784, file: !2, size: 64, align: 64, elements: !14792, templateParams: !6372, identifier: "3904d73710deb5ef781cd71f3ea3d0bf")
!14792 = !{!14793}
!14793 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14791, file: !2, baseType: !6374, size: 64, align: 64)
!14794 = !DIDerivedType(tag: DW_TAG_member, scope: !14784, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!14795 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<(&str, &[&str])>", baseType: !6356, size: 64, align: 64, dwarfAddressSpace: 0)
!14796 = !{!14797}
!14797 = !DILocalVariable(name: "self", arg: 1, scope: !14781, file: !608, line: 134, type: !14795)
!14798 = !DILocation(line: 134, column: 21, scope: !14781)
!14799 = !DILocalVariable(name: "metadata", scope: !14800, file: !608, line: 142, type: !7, align: 1)
!14800 = !DILexicalBlockFile(scope: !14801, file: !608, discriminator: 0)
!14801 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14802)
!14802 = !{!14803, !14799}
!14803 = !DILocalVariable(name: "data_address", scope: !14800, file: !608, line: 142, type: !960, align: 8)
!14804 = !DILocation(line: 142, column: 29, scope: !14800, inlinedAt: !14805)
!14805 = !DILocation(line: 668, column: 5, scope: !14806, inlinedAt: !14807)
!14806 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14807 = !DILocation(line: 38, column: 41, scope: !14808, inlinedAt: !14814)
!14808 = distinct !DISubprogram(name: "is_null<(&str, &[&str])>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h0a459d1ba49f6b1dE", scope: !657, file: !656, line: 35, type: !14809, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14811)
!14809 = !DISubroutineType(types: !14810)
!14810 = !{!1159, !6473}
!14811 = !{!14812}
!14812 = !DILocalVariable(name: "self", scope: !14813, file: !608, line: 142, type: !6473, align: 8)
!14813 = !DILexicalBlockFile(scope: !14808, file: !608, discriminator: 0)
!14814 = !DILocation(line: 142, column: 29, scope: !14781)
!14815 = !DILocalVariable(name: "metadata", scope: !14816, file: !608, line: 144, type: !7, align: 1)
!14816 = !DILexicalBlockFile(scope: !14817, file: !608, discriminator: 0)
!14817 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17ha110c0ee121a06dbE", scope: !427, file: !426, line: 110, type: !1167, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14818)
!14818 = !{!14819, !14815}
!14819 = !DILocalVariable(name: "data_address", scope: !14816, file: !608, line: 144, type: !6, align: 8)
!14820 = !DILocation(line: 144, column: 33, scope: !14816, inlinedAt: !14821)
!14821 = !DILocation(line: 513, column: 5, scope: !14822, inlinedAt: !14823)
!14822 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17ha2d8dbbe516802bdE", scope: !43, file: !399, line: 512, type: !1174, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14823 = !DILocation(line: 39, column: 43, scope: !14824, inlinedAt: !14828)
!14824 = distinct !DISubprogram(name: "is_null<(&str, &[&str])>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h796e39dd82ad5a29E", scope: !414, file: !413, line: 36, type: !6400, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14825)
!14825 = !{!14826}
!14826 = !DILocalVariable(name: "self", scope: !14827, file: !608, line: 144, type: !6362, align: 8)
!14827 = !DILexicalBlockFile(scope: !14824, file: !608, discriminator: 0)
!14828 = !DILocation(line: 144, column: 33, scope: !14781)
!14829 = !DILocalVariable(name: "self", scope: !14830, file: !608, line: 142, type: !6359, align: 8)
!14830 = !DILexicalBlockFile(scope: !14831, file: !608, discriminator: 0)
!14831 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7cdd797b3dfdcbbfE", scope: !6359, file: !646, line: 330, type: !14832, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14834)
!14832 = !DISubroutineType(types: !14833)
!14833 = !{!6473, !6359}
!14834 = !{!14829}
!14835 = !DILocation(line: 142, column: 29, scope: !14830, inlinedAt: !14814)
!14836 = !DILocation(line: 142, column: 29, scope: !14813, inlinedAt: !14814)
!14837 = !DILocalVariable(name: "self", scope: !14838, file: !608, line: 142, type: !649, align: 8)
!14838 = !DILexicalBlockFile(scope: !14839, file: !608, discriminator: 0)
!14839 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14840)
!14840 = !{!14837, !14841}
!14841 = !DILocalVariable(name: "other", scope: !14838, file: !608, line: 142, type: !649, align: 8)
!14842 = !DILocation(line: 142, column: 29, scope: !14838, inlinedAt: !14843)
!14843 = !DILocation(line: 38, column: 9, scope: !14808, inlinedAt: !14814)
!14844 = !DILocation(line: 142, column: 29, scope: !14845, inlinedAt: !14849)
!14845 = !DILexicalBlockFile(scope: !14846, file: !608, discriminator: 0)
!14846 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !14847)
!14847 = !{!14848}
!14848 = !DILocalVariable(name: "addr", scope: !14845, file: !608, line: 142, type: !9, align: 8)
!14849 = !DILocation(line: 668, column: 24, scope: !14806, inlinedAt: !14807)
!14850 = !DILocation(line: 142, column: 28, scope: !14781)
!14851 = !DILocation(line: 142, column: 21, scope: !14781)
!14852 = !DILocation(line: 143, column: 24, scope: !14781)
!14853 = !DILocation(line: 143, column: 21, scope: !14781)
!14854 = !DILocation(line: 144, column: 33, scope: !14827, inlinedAt: !14828)
!14855 = !DILocalVariable(name: "self", scope: !14856, file: !608, line: 144, type: !329, align: 8)
!14856 = !DILexicalBlockFile(scope: !14857, file: !608, discriminator: 0)
!14857 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17ha4d0530636a6b1ddE", scope: !414, file: !413, line: 777, type: !1215, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14858)
!14858 = !{!14855, !14859}
!14859 = !DILocalVariable(name: "other", scope: !14856, file: !608, line: 144, type: !329, align: 8)
!14860 = !DILocation(line: 144, column: 33, scope: !14856, inlinedAt: !14861)
!14861 = !DILocation(line: 39, column: 9, scope: !14824, inlinedAt: !14828)
!14862 = !DILocation(line: 144, column: 33, scope: !14863, inlinedAt: !14867)
!14863 = !DILexicalBlockFile(scope: !14864, file: !608, discriminator: 0)
!14864 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h5c8467dab22abe2fE", scope: !43, file: !399, line: 538, type: !1224, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !14865)
!14865 = !{!14866}
!14866 = !DILocalVariable(name: "addr", scope: !14863, file: !608, line: 144, type: !9, align: 8)
!14867 = !DILocation(line: 513, column: 20, scope: !14822, inlinedAt: !14823)
!14868 = !DILocation(line: 144, column: 32, scope: !14781)
!14869 = !DILocation(line: 144, column: 25, scope: !14781)
!14870 = !DILocation(line: 146, column: 24, scope: !14781)
!14871 = !DILocalVariable(name: "self", scope: !14872, file: !608, line: 146, type: !6359, align: 8)
!14872 = !DILexicalBlockFile(scope: !14873, file: !608, discriminator: 0)
!14873 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7cdd797b3dfdcbbfE", scope: !6359, file: !646, line: 330, type: !14832, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14874)
!14874 = !{!14871}
!14875 = !DILocation(line: 146, column: 24, scope: !14872, inlinedAt: !14876)
!14876 = !DILocation(line: 8, column: 9, scope: !14781)
!14877 = !DILocation(line: 149, column: 30, scope: !14781)
!14878 = !DILocalVariable(name: "self", scope: !14879, file: !608, line: 149, type: !14795, align: 8)
!14879 = distinct !DISubprogram(name: "post_inc_start<(&str, &[&str])>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h5eba88f6b583f6bbE", scope: !6356, file: !608, line: 85, type: !14880, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14882)
!14880 = !DISubroutineType(types: !14881)
!14881 = !{!6362, !14795, !868}
!14882 = !{!14878, !14883, !14884}
!14883 = !DILocalVariable(name: "offset", scope: !14879, file: !608, line: 149, type: !868, align: 8)
!14884 = !DILocalVariable(name: "old", scope: !14885, file: !608, line: 149, type: !6473, align: 8)
!14885 = distinct !DILexicalBlock(scope: !14879, file: !608, line: 90, column: 21)
!14886 = !DILocation(line: 149, column: 30, scope: !14879, inlinedAt: !14887)
!14887 = !DILocation(line: 53, column: 47, scope: !14781)
!14888 = !DILocation(line: 147, column: 25, scope: !14781)
!14889 = !DILocation(line: 146, column: 21, scope: !14781)
!14890 = !DILocation(line: 152, column: 14, scope: !14781)
!14891 = !DILocalVariable(name: "self", scope: !14892, file: !608, line: 149, type: !329, align: 8)
!14892 = !DILexicalBlockFile(scope: !14893, file: !608, discriminator: 0)
!14893 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h5c4e7a2ea5ca6880E", scope: !414, file: !413, line: 536, type: !866, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14894)
!14894 = !{!14891, !14895}
!14895 = !DILocalVariable(name: "count", scope: !14892, file: !608, line: 149, type: !868, align: 8)
!14896 = !DILocation(line: 149, column: 30, scope: !14892, inlinedAt: !14897)
!14897 = !DILocation(line: 67, column: 29, scope: !14879, inlinedAt: !14887)
!14898 = !DILocalVariable(name: "self", scope: !14899, file: !608, line: 149, type: !6359, align: 8)
!14899 = !DILexicalBlockFile(scope: !14900, file: !608, discriminator: 0)
!14900 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7cdd797b3dfdcbbfE", scope: !6359, file: !646, line: 330, type: !14832, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14901)
!14901 = !{!14898}
!14902 = !DILocation(line: 149, column: 30, scope: !14899, inlinedAt: !14903)
!14903 = !DILocation(line: 90, column: 31, scope: !14879, inlinedAt: !14887)
!14904 = !DILocation(line: 149, column: 30, scope: !14885, inlinedAt: !14887)
!14905 = !DILocalVariable(name: "self", scope: !14906, file: !608, line: 149, type: !6359, align: 8)
!14906 = !DILexicalBlockFile(scope: !14907, file: !608, discriminator: 0)
!14907 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7cdd797b3dfdcbbfE", scope: !6359, file: !646, line: 330, type: !14832, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14908)
!14908 = !{!14905}
!14909 = !DILocation(line: 149, column: 30, scope: !14906, inlinedAt: !14910)
!14910 = !DILocation(line: 93, column: 64, scope: !14885, inlinedAt: !14887)
!14911 = !DILocalVariable(name: "self", scope: !14912, file: !608, line: 149, type: !6473, align: 8)
!14912 = !DILexicalBlockFile(scope: !14913, file: !608, discriminator: 0)
!14913 = distinct !DISubprogram(name: "offset<(&str, &[&str])>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h3a3993004ce36827E", scope: !657, file: !656, line: 465, type: !14914, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14916)
!14914 = !DISubroutineType(types: !14915)
!14915 = !{!6473, !6473, !868}
!14916 = !{!14911, !14917}
!14917 = !DILocalVariable(name: "count", scope: !14912, file: !608, line: 149, type: !868, align: 8)
!14918 = !DILocation(line: 149, column: 30, scope: !14912, inlinedAt: !14910)
!14919 = !DILocalVariable(name: "ptr", scope: !14920, file: !608, line: 149, type: !6473, align: 8)
!14920 = !DILexicalBlockFile(scope: !14921, file: !608, discriminator: 0)
!14921 = distinct !DISubprogram(name: "new_unchecked<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h397ee0b8504e49b8E", scope: !6359, file: !646, line: 196, type: !6471, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14922)
!14922 = !{!14919}
!14923 = !DILocation(line: 149, column: 30, scope: !14920, inlinedAt: !14924)
!14924 = !DILocation(line: 93, column: 41, scope: !14885, inlinedAt: !14887)
!14925 = !DILocation(line: 149, column: 25, scope: !14781)
!14926 = !DILocalVariable(name: "self", scope: !14927, file: !608, line: 149, type: !6359, align: 8)
!14927 = !DILexicalBlockFile(scope: !14928, file: !608, discriminator: 0)
!14928 = distinct !DISubprogram(name: "as_ptr<(&str, &[&str])>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7cdd797b3dfdcbbfE", scope: !6359, file: !646, line: 330, type: !14832, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !6367, retainedNodes: !14929)
!14929 = !{!14926}
!14930 = !DILocation(line: 149, column: 30, scope: !14927, inlinedAt: !14931)
!14931 = !DILocation(line: 88, column: 21, scope: !14879, inlinedAt: !14887)
!14932 = distinct !DISubprogram(name: "next<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hccc9d4a4f7ed0572E", scope: !14599, file: !608, line: 134, type: !1126, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14933)
!14933 = !{!14934}
!14934 = !DILocalVariable(name: "self", arg: 1, scope: !14932, file: !608, line: 134, type: !1139)
!14935 = !DILocation(line: 134, column: 21, scope: !14932)
!14936 = !DILocalVariable(name: "metadata", scope: !14937, file: !608, line: 142, type: !7, align: 1)
!14937 = !DILexicalBlockFile(scope: !14938, file: !608, discriminator: 0)
!14938 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14939)
!14939 = !{!14940, !14936}
!14940 = !DILocalVariable(name: "data_address", scope: !14937, file: !608, line: 142, type: !960, align: 8)
!14941 = !DILocation(line: 142, column: 29, scope: !14937, inlinedAt: !14942)
!14942 = !DILocation(line: 668, column: 5, scope: !14943, inlinedAt: !14944)
!14943 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14944 = !DILocation(line: 38, column: 41, scope: !14945, inlinedAt: !14949)
!14945 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hd134781c17b0a8a9E", scope: !657, file: !656, line: 35, type: !1157, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14946)
!14946 = !{!14947}
!14947 = !DILocalVariable(name: "self", scope: !14948, file: !608, line: 142, type: !649, align: 8)
!14948 = !DILexicalBlockFile(scope: !14945, file: !608, discriminator: 0)
!14949 = !DILocation(line: 142, column: 29, scope: !14932)
!14950 = !DILocalVariable(name: "metadata", scope: !14951, file: !608, line: 144, type: !7, align: 1)
!14951 = !DILexicalBlockFile(scope: !14952, file: !608, discriminator: 0)
!14952 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17ha110c0ee121a06dbE", scope: !427, file: !426, line: 110, type: !1167, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14953)
!14953 = !{!14954, !14950}
!14954 = !DILocalVariable(name: "data_address", scope: !14951, file: !608, line: 144, type: !6, align: 8)
!14955 = !DILocation(line: 144, column: 33, scope: !14951, inlinedAt: !14956)
!14956 = !DILocation(line: 513, column: 5, scope: !14957, inlinedAt: !14958)
!14957 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17ha2d8dbbe516802bdE", scope: !43, file: !399, line: 512, type: !1174, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!14958 = !DILocation(line: 39, column: 43, scope: !14959, inlinedAt: !14963)
!14959 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd0ff5b2f156018f3E", scope: !414, file: !413, line: 36, type: !1178, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14960)
!14960 = !{!14961}
!14961 = !DILocalVariable(name: "self", scope: !14962, file: !608, line: 144, type: !329, align: 8)
!14962 = !DILexicalBlockFile(scope: !14959, file: !608, discriminator: 0)
!14963 = !DILocation(line: 144, column: 33, scope: !14932)
!14964 = !DILocalVariable(name: "self", scope: !14965, file: !608, line: 142, type: !326, align: 8)
!14965 = !DILexicalBlockFile(scope: !14966, file: !608, discriminator: 0)
!14966 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14967)
!14967 = !{!14964}
!14968 = !DILocation(line: 142, column: 29, scope: !14965, inlinedAt: !14949)
!14969 = !DILocation(line: 142, column: 29, scope: !14948, inlinedAt: !14949)
!14970 = !DILocalVariable(name: "self", scope: !14971, file: !608, line: 142, type: !649, align: 8)
!14971 = !DILexicalBlockFile(scope: !14972, file: !608, discriminator: 0)
!14972 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14973)
!14973 = !{!14970, !14974}
!14974 = !DILocalVariable(name: "other", scope: !14971, file: !608, line: 142, type: !649, align: 8)
!14975 = !DILocation(line: 142, column: 29, scope: !14971, inlinedAt: !14976)
!14976 = !DILocation(line: 38, column: 9, scope: !14945, inlinedAt: !14949)
!14977 = !DILocation(line: 142, column: 29, scope: !14978, inlinedAt: !14982)
!14978 = !DILexicalBlockFile(scope: !14979, file: !608, discriminator: 0)
!14979 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !14980)
!14980 = !{!14981}
!14981 = !DILocalVariable(name: "addr", scope: !14978, file: !608, line: 142, type: !9, align: 8)
!14982 = !DILocation(line: 668, column: 24, scope: !14943, inlinedAt: !14944)
!14983 = !DILocation(line: 142, column: 28, scope: !14932)
!14984 = !DILocation(line: 142, column: 21, scope: !14932)
!14985 = !DILocation(line: 143, column: 24, scope: !14932)
!14986 = !DILocation(line: 143, column: 21, scope: !14932)
!14987 = !DILocation(line: 144, column: 33, scope: !14962, inlinedAt: !14963)
!14988 = !DILocalVariable(name: "self", scope: !14989, file: !608, line: 144, type: !329, align: 8)
!14989 = !DILexicalBlockFile(scope: !14990, file: !608, discriminator: 0)
!14990 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17ha4d0530636a6b1ddE", scope: !414, file: !413, line: 777, type: !1215, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !14991)
!14991 = !{!14988, !14992}
!14992 = !DILocalVariable(name: "other", scope: !14989, file: !608, line: 144, type: !329, align: 8)
!14993 = !DILocation(line: 144, column: 33, scope: !14989, inlinedAt: !14994)
!14994 = !DILocation(line: 39, column: 9, scope: !14959, inlinedAt: !14963)
!14995 = !DILocation(line: 144, column: 33, scope: !14996, inlinedAt: !15000)
!14996 = !DILexicalBlockFile(scope: !14997, file: !608, discriminator: 0)
!14997 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h5c8467dab22abe2fE", scope: !43, file: !399, line: 538, type: !1224, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !14998)
!14998 = !{!14999}
!14999 = !DILocalVariable(name: "addr", scope: !14996, file: !608, line: 144, type: !9, align: 8)
!15000 = !DILocation(line: 513, column: 20, scope: !14957, inlinedAt: !14958)
!15001 = !DILocation(line: 144, column: 32, scope: !14932)
!15002 = !DILocation(line: 144, column: 25, scope: !14932)
!15003 = !DILocation(line: 146, column: 24, scope: !14932)
!15004 = !DILocalVariable(name: "self", scope: !15005, file: !608, line: 146, type: !326, align: 8)
!15005 = !DILexicalBlockFile(scope: !15006, file: !608, discriminator: 0)
!15006 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15007)
!15007 = !{!15004}
!15008 = !DILocation(line: 146, column: 24, scope: !15005, inlinedAt: !15009)
!15009 = !DILocation(line: 8, column: 9, scope: !14932)
!15010 = !DILocation(line: 149, column: 30, scope: !14932)
!15011 = !DILocalVariable(name: "self", scope: !15012, file: !608, line: 149, type: !1139, align: 8)
!15012 = distinct !DISubprogram(name: "post_inc_start<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h1ef5588ffa26ac42E", scope: !548, file: !608, line: 85, type: !1241, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15013)
!15013 = !{!15011, !15014, !15015}
!15014 = !DILocalVariable(name: "offset", scope: !15012, file: !608, line: 149, type: !868, align: 8)
!15015 = !DILocalVariable(name: "old", scope: !15016, file: !608, line: 149, type: !649, align: 8)
!15016 = distinct !DILexicalBlock(scope: !15012, file: !608, line: 90, column: 21)
!15017 = !DILocation(line: 149, column: 30, scope: !15012, inlinedAt: !15018)
!15018 = !DILocation(line: 53, column: 47, scope: !14932)
!15019 = !DILocation(line: 147, column: 25, scope: !14932)
!15020 = !DILocation(line: 146, column: 21, scope: !14932)
!15021 = !DILocation(line: 152, column: 14, scope: !14932)
!15022 = !DILocalVariable(name: "self", scope: !15023, file: !608, line: 149, type: !329, align: 8)
!15023 = !DILexicalBlockFile(scope: !15024, file: !608, discriminator: 0)
!15024 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h5c4e7a2ea5ca6880E", scope: !414, file: !413, line: 536, type: !866, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15025)
!15025 = !{!15022, !15026}
!15026 = !DILocalVariable(name: "count", scope: !15023, file: !608, line: 149, type: !868, align: 8)
!15027 = !DILocation(line: 149, column: 30, scope: !15023, inlinedAt: !15028)
!15028 = !DILocation(line: 67, column: 29, scope: !15012, inlinedAt: !15018)
!15029 = !DILocalVariable(name: "self", scope: !15030, file: !608, line: 149, type: !326, align: 8)
!15030 = !DILexicalBlockFile(scope: !15031, file: !608, discriminator: 0)
!15031 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15032)
!15032 = !{!15029}
!15033 = !DILocation(line: 149, column: 30, scope: !15030, inlinedAt: !15034)
!15034 = !DILocation(line: 90, column: 31, scope: !15012, inlinedAt: !15018)
!15035 = !DILocation(line: 149, column: 30, scope: !15016, inlinedAt: !15018)
!15036 = !DILocalVariable(name: "self", scope: !15037, file: !608, line: 149, type: !326, align: 8)
!15037 = !DILexicalBlockFile(scope: !15038, file: !608, discriminator: 0)
!15038 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15039)
!15039 = !{!15036}
!15040 = !DILocation(line: 149, column: 30, scope: !15037, inlinedAt: !15041)
!15041 = !DILocation(line: 93, column: 64, scope: !15016, inlinedAt: !15018)
!15042 = !DILocalVariable(name: "self", scope: !15043, file: !608, line: 149, type: !649, align: 8)
!15043 = !DILexicalBlockFile(scope: !15044, file: !608, discriminator: 0)
!15044 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h7a151f4cf998d469E", scope: !657, file: !656, line: 465, type: !939, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15045)
!15045 = !{!15042, !15046}
!15046 = !DILocalVariable(name: "count", scope: !15043, file: !608, line: 149, type: !868, align: 8)
!15047 = !DILocation(line: 149, column: 30, scope: !15043, inlinedAt: !15041)
!15048 = !DILocalVariable(name: "ptr", scope: !15049, file: !608, line: 149, type: !649, align: 8)
!15049 = !DILexicalBlockFile(scope: !15050, file: !608, discriminator: 0)
!15050 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h258e2558e59526f5E", scope: !326, file: !646, line: 196, type: !1755, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15051)
!15051 = !{!15048}
!15052 = !DILocation(line: 149, column: 30, scope: !15049, inlinedAt: !15053)
!15053 = !DILocation(line: 93, column: 41, scope: !15016, inlinedAt: !15018)
!15054 = !DILocation(line: 149, column: 25, scope: !14932)
!15055 = !DILocalVariable(name: "self", scope: !15056, file: !608, line: 149, type: !326, align: 8)
!15056 = !DILexicalBlockFile(scope: !15057, file: !608, discriminator: 0)
!15057 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15058)
!15058 = !{!15055}
!15059 = !DILocation(line: 149, column: 30, scope: !15056, inlinedAt: !15060)
!15060 = !DILocation(line: 88, column: 21, scope: !15012, inlinedAt: !15018)
!15061 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he0f6905c7078f1f0E", scope: !14599, file: !608, line: 134, type: !15062, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15075)
!15062 = !DISubroutineType(types: !15063)
!15063 = !{!15064, !14602}
!15064 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&char>", scope: !177, file: !2, size: 64, align: 64, elements: !15065, templateParams: !23, identifier: "84a7afb89b12eeaf270f206d6e1fc6af")
!15065 = !{!15066}
!15066 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15064, file: !2, size: 64, align: 64, elements: !15067, templateParams: !23, identifier: "8a20cbd1e42b057d4b02aaf29452adcd", discriminator: !15074)
!15067 = !{!15068, !15070}
!15068 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !15066, file: !2, baseType: !15069, size: 64, align: 64, extraData: i64 0)
!15069 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !15064, file: !2, size: 64, align: 64, elements: !23, templateParams: !6491, identifier: "793a51d7fd44c822fed50954fe2e0680")
!15070 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !15066, file: !2, baseType: !15071, size: 64, align: 64)
!15071 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !15064, file: !2, size: 64, align: 64, elements: !15072, templateParams: !6491, identifier: "bb0c8785b719878a99adf9aa0b1bcafe")
!15072 = !{!15073}
!15073 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15071, file: !2, baseType: !6493, size: 64, align: 64)
!15074 = !DIDerivedType(tag: DW_TAG_member, scope: !15064, file: !2, baseType: !190, size: 64, align: 64, flags: DIFlagArtificial)
!15075 = !{!15076}
!15076 = !DILocalVariable(name: "self", arg: 1, scope: !15061, file: !608, line: 134, type: !14602)
!15077 = !DILocation(line: 134, column: 21, scope: !15061)
!15078 = !DILocalVariable(name: "metadata", scope: !15079, file: !608, line: 142, type: !7, align: 1)
!15079 = !DILexicalBlockFile(scope: !15080, file: !608, discriminator: 0)
!15080 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h20445fdfecd161caE", scope: !427, file: !426, line: 127, type: !1146, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15081)
!15081 = !{!15082, !15078}
!15082 = !DILocalVariable(name: "data_address", scope: !15079, file: !608, line: 142, type: !960, align: 8)
!15083 = !DILocation(line: 142, column: 29, scope: !15079, inlinedAt: !15084)
!15084 = !DILocation(line: 668, column: 5, scope: !15085, inlinedAt: !15086)
!15085 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17hfc69a6e029e2e729E", scope: !43, file: !399, line: 667, type: !1153, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15086 = !DILocation(line: 38, column: 41, scope: !15087, inlinedAt: !15093)
!15087 = distinct !DISubprogram(name: "is_null<char>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hce45b3ae3257fdd5E", scope: !657, file: !656, line: 35, type: !15088, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15090)
!15088 = !DISubroutineType(types: !15089)
!15089 = !{!1159, !6592}
!15090 = !{!15091}
!15091 = !DILocalVariable(name: "self", scope: !15092, file: !608, line: 142, type: !6592, align: 8)
!15092 = !DILexicalBlockFile(scope: !15087, file: !608, discriminator: 0)
!15093 = !DILocation(line: 142, column: 29, scope: !15061)
!15094 = !DILocalVariable(name: "metadata", scope: !15095, file: !608, line: 144, type: !7, align: 1)
!15095 = !DILexicalBlockFile(scope: !15096, file: !608, discriminator: 0)
!15096 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17ha110c0ee121a06dbE", scope: !427, file: !426, line: 110, type: !1167, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15097)
!15097 = !{!15098, !15094}
!15098 = !DILocalVariable(name: "data_address", scope: !15095, file: !608, line: 144, type: !6, align: 8)
!15099 = !DILocation(line: 144, column: 33, scope: !15095, inlinedAt: !15100)
!15100 = !DILocation(line: 513, column: 5, scope: !15101, inlinedAt: !15102)
!15101 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17ha2d8dbbe516802bdE", scope: !43, file: !399, line: 512, type: !1174, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15102 = !DILocation(line: 39, column: 43, scope: !15103, inlinedAt: !15107)
!15103 = distinct !DISubprogram(name: "is_null<char>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hd2ae23fd4dfb1783E", scope: !414, file: !413, line: 36, type: !6519, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15104)
!15104 = !{!15105}
!15105 = !DILocalVariable(name: "self", scope: !15106, file: !608, line: 144, type: !6487, align: 8)
!15106 = !DILexicalBlockFile(scope: !15103, file: !608, discriminator: 0)
!15107 = !DILocation(line: 144, column: 33, scope: !15061)
!15108 = !DILocalVariable(name: "self", scope: !15109, file: !608, line: 142, type: !6484, align: 8)
!15109 = !DILexicalBlockFile(scope: !15110, file: !608, discriminator: 0)
!15110 = distinct !DISubprogram(name: "as_ptr<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h59aca98ea80ef503E", scope: !6484, file: !646, line: 330, type: !15111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15113)
!15111 = !DISubroutineType(types: !15112)
!15112 = !{!6592, !6484}
!15113 = !{!15108}
!15114 = !DILocation(line: 142, column: 29, scope: !15109, inlinedAt: !15093)
!15115 = !DILocation(line: 142, column: 29, scope: !15092, inlinedAt: !15093)
!15116 = !DILocalVariable(name: "self", scope: !15117, file: !608, line: 142, type: !649, align: 8)
!15117 = !DILexicalBlockFile(scope: !15118, file: !608, discriminator: 0)
!15118 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hadfd80e0ffe79a5dE", scope: !657, file: !656, line: 707, type: !1193, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15119)
!15119 = !{!15116, !15120}
!15120 = !DILocalVariable(name: "other", scope: !15117, file: !608, line: 142, type: !649, align: 8)
!15121 = !DILocation(line: 142, column: 29, scope: !15117, inlinedAt: !15122)
!15122 = !DILocation(line: 38, column: 9, scope: !15087, inlinedAt: !15093)
!15123 = !DILocation(line: 142, column: 29, scope: !15124, inlinedAt: !15128)
!15124 = !DILexicalBlockFile(scope: !15125, file: !608, discriminator: 0)
!15125 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h4e8e97b0bc0bf7e0E", scope: !43, file: !399, line: 569, type: !1202, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !15126)
!15126 = !{!15127}
!15127 = !DILocalVariable(name: "addr", scope: !15124, file: !608, line: 142, type: !9, align: 8)
!15128 = !DILocation(line: 668, column: 24, scope: !15085, inlinedAt: !15086)
!15129 = !DILocation(line: 142, column: 28, scope: !15061)
!15130 = !DILocation(line: 142, column: 21, scope: !15061)
!15131 = !DILocation(line: 143, column: 24, scope: !15061)
!15132 = !DILocation(line: 143, column: 21, scope: !15061)
!15133 = !DILocation(line: 144, column: 33, scope: !15106, inlinedAt: !15107)
!15134 = !DILocalVariable(name: "self", scope: !15135, file: !608, line: 144, type: !329, align: 8)
!15135 = !DILexicalBlockFile(scope: !15136, file: !608, discriminator: 0)
!15136 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17ha4d0530636a6b1ddE", scope: !414, file: !413, line: 777, type: !1215, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15137)
!15137 = !{!15134, !15138}
!15138 = !DILocalVariable(name: "other", scope: !15135, file: !608, line: 144, type: !329, align: 8)
!15139 = !DILocation(line: 144, column: 33, scope: !15135, inlinedAt: !15140)
!15140 = !DILocation(line: 39, column: 9, scope: !15103, inlinedAt: !15107)
!15141 = !DILocation(line: 144, column: 33, scope: !15142, inlinedAt: !15146)
!15142 = !DILexicalBlockFile(scope: !15143, file: !608, discriminator: 0)
!15143 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h5c8467dab22abe2fE", scope: !43, file: !399, line: 538, type: !1224, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !47, retainedNodes: !15144)
!15144 = !{!15145}
!15145 = !DILocalVariable(name: "addr", scope: !15142, file: !608, line: 144, type: !9, align: 8)
!15146 = !DILocation(line: 513, column: 20, scope: !15101, inlinedAt: !15102)
!15147 = !DILocation(line: 144, column: 32, scope: !15061)
!15148 = !DILocation(line: 144, column: 25, scope: !15061)
!15149 = !DILocation(line: 146, column: 24, scope: !15061)
!15150 = !DILocalVariable(name: "self", scope: !15151, file: !608, line: 146, type: !6484, align: 8)
!15151 = !DILexicalBlockFile(scope: !15152, file: !608, discriminator: 0)
!15152 = distinct !DISubprogram(name: "as_ptr<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h59aca98ea80ef503E", scope: !6484, file: !646, line: 330, type: !15111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15153)
!15153 = !{!15150}
!15154 = !DILocation(line: 146, column: 24, scope: !15151, inlinedAt: !15155)
!15155 = !DILocation(line: 8, column: 9, scope: !15061)
!15156 = !DILocation(line: 149, column: 30, scope: !15061)
!15157 = !DILocalVariable(name: "self", scope: !15158, file: !608, line: 149, type: !14602, align: 8)
!15158 = distinct !DISubprogram(name: "post_inc_start<char>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h1f6a0b36043f996fE", scope: !6481, file: !608, line: 85, type: !15159, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15161)
!15159 = !DISubroutineType(types: !15160)
!15160 = !{!6487, !14602, !868}
!15161 = !{!15157, !15162, !15163}
!15162 = !DILocalVariable(name: "offset", scope: !15158, file: !608, line: 149, type: !868, align: 8)
!15163 = !DILocalVariable(name: "old", scope: !15164, file: !608, line: 149, type: !6592, align: 8)
!15164 = distinct !DILexicalBlock(scope: !15158, file: !608, line: 90, column: 21)
!15165 = !DILocation(line: 149, column: 30, scope: !15158, inlinedAt: !15166)
!15166 = !DILocation(line: 53, column: 47, scope: !15061)
!15167 = !DILocation(line: 147, column: 25, scope: !15061)
!15168 = !DILocation(line: 146, column: 21, scope: !15061)
!15169 = !DILocation(line: 152, column: 14, scope: !15061)
!15170 = !DILocalVariable(name: "self", scope: !15171, file: !608, line: 149, type: !329, align: 8)
!15171 = !DILexicalBlockFile(scope: !15172, file: !608, discriminator: 0)
!15172 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h5c4e7a2ea5ca6880E", scope: !414, file: !413, line: 536, type: !866, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15173)
!15173 = !{!15170, !15174}
!15174 = !DILocalVariable(name: "count", scope: !15171, file: !608, line: 149, type: !868, align: 8)
!15175 = !DILocation(line: 149, column: 30, scope: !15171, inlinedAt: !15176)
!15176 = !DILocation(line: 67, column: 29, scope: !15158, inlinedAt: !15166)
!15177 = !DILocalVariable(name: "self", scope: !15178, file: !608, line: 149, type: !6484, align: 8)
!15178 = !DILexicalBlockFile(scope: !15179, file: !608, discriminator: 0)
!15179 = distinct !DISubprogram(name: "as_ptr<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h59aca98ea80ef503E", scope: !6484, file: !646, line: 330, type: !15111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15180)
!15180 = !{!15177}
!15181 = !DILocation(line: 149, column: 30, scope: !15178, inlinedAt: !15182)
!15182 = !DILocation(line: 90, column: 31, scope: !15158, inlinedAt: !15166)
!15183 = !DILocation(line: 149, column: 30, scope: !15164, inlinedAt: !15166)
!15184 = !DILocalVariable(name: "self", scope: !15185, file: !608, line: 149, type: !6484, align: 8)
!15185 = !DILexicalBlockFile(scope: !15186, file: !608, discriminator: 0)
!15186 = distinct !DISubprogram(name: "as_ptr<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h59aca98ea80ef503E", scope: !6484, file: !646, line: 330, type: !15111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15187)
!15187 = !{!15184}
!15188 = !DILocation(line: 149, column: 30, scope: !15185, inlinedAt: !15189)
!15189 = !DILocation(line: 93, column: 64, scope: !15164, inlinedAt: !15166)
!15190 = !DILocalVariable(name: "self", scope: !15191, file: !608, line: 149, type: !6592, align: 8)
!15191 = !DILexicalBlockFile(scope: !15192, file: !608, discriminator: 0)
!15192 = distinct !DISubprogram(name: "offset<char>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hf288c98d88588ffbE", scope: !657, file: !656, line: 465, type: !15193, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15195)
!15193 = !DISubroutineType(types: !15194)
!15194 = !{!6592, !6592, !868}
!15195 = !{!15190, !15196}
!15196 = !DILocalVariable(name: "count", scope: !15191, file: !608, line: 149, type: !868, align: 8)
!15197 = !DILocation(line: 149, column: 30, scope: !15191, inlinedAt: !15189)
!15198 = !DILocalVariable(name: "ptr", scope: !15199, file: !608, line: 149, type: !6592, align: 8)
!15199 = !DILexicalBlockFile(scope: !15200, file: !608, discriminator: 0)
!15200 = distinct !DISubprogram(name: "new_unchecked<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h59e9ac2f9cbcb022E", scope: !6484, file: !646, line: 196, type: !6590, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15201)
!15201 = !{!15198}
!15202 = !DILocation(line: 149, column: 30, scope: !15199, inlinedAt: !15203)
!15203 = !DILocation(line: 93, column: 41, scope: !15164, inlinedAt: !15166)
!15204 = !DILocation(line: 149, column: 25, scope: !15061)
!15205 = !DILocalVariable(name: "self", scope: !15206, file: !608, line: 149, type: !6484, align: 8)
!15206 = !DILexicalBlockFile(scope: !15207, file: !608, discriminator: 0)
!15207 = distinct !DISubprogram(name: "as_ptr<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h59aca98ea80ef503E", scope: !6484, file: !646, line: 330, type: !15111, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !572, retainedNodes: !15208)
!15208 = !{!15205}
!15209 = !DILocation(line: 149, column: 30, scope: !15206, inlinedAt: !15210)
!15210 = !DILocation(line: 88, column: 21, scope: !15158, inlinedAt: !15166)
!15211 = distinct !DISubprogram(name: "position<u8, core::slice::memchr::memchr::{closure_env#0}>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8position17h36f4baea55f29ac9E", scope: !14599, file: !608, line: 288, type: !15212, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !15229, retainedNodes: !15214)
!15212 = !DISubroutineType(types: !15213)
!15213 = !{!455, !1139, !6755}
!15214 = !{!15215, !15216, !15217, !15219, !15221, !15223, !15225, !15227}
!15215 = !DILocalVariable(name: "self", arg: 1, scope: !15211, file: !608, line: 288, type: !1139)
!15216 = !DILocalVariable(name: "predicate", arg: 2, scope: !15211, file: !608, line: 288, type: !6755)
!15217 = !DILocalVariable(name: "n", scope: !15218, file: !608, line: 292, type: !9, align: 8)
!15218 = distinct !DILexicalBlock(scope: !15211, file: !608, line: 292, column: 17)
!15219 = !DILocalVariable(name: "start", scope: !15220, file: !608, line: 292, type: !326, align: 8)
!15220 = distinct !DILexicalBlock(scope: !15211, file: !608, line: 18, column: 9)
!15221 = !DILocalVariable(name: "size", scope: !15222, file: !608, line: 292, type: !9, align: 8)
!15222 = distinct !DILexicalBlock(scope: !15220, file: !608, line: 19, column: 9)
!15223 = !DILocalVariable(name: "diff", scope: !15224, file: !608, line: 292, type: !9, align: 8)
!15224 = distinct !DILexicalBlock(scope: !15222, file: !608, line: 29, column: 13)
!15225 = !DILocalVariable(name: "i", scope: !15226, file: !608, line: 293, type: !9, align: 8)
!15226 = distinct !DILexicalBlock(scope: !15218, file: !608, line: 293, column: 17)
!15227 = !DILocalVariable(name: "x", scope: !15228, file: !608, line: 294, type: !556, align: 8)
!15228 = distinct !DILexicalBlock(scope: !15226, file: !608, line: 294, column: 49)
!15229 = !{!331, !15230}
!15230 = !DITemplateTypeParameter(name: "P", type: !6755)
!15231 = !DILocation(line: 288, column: 28, scope: !15211)
!15232 = !DILocation(line: 288, column: 39, scope: !15211)
!15233 = !DILocation(line: 292, column: 21, scope: !15218)
!15234 = !DILocation(line: 293, column: 21, scope: !15226)
!15235 = !DILocation(line: 292, column: 25, scope: !15211)
!15236 = !DILocation(line: 292, column: 25, scope: !15220)
!15237 = !DILocation(line: 292, column: 25, scope: !15238, inlinedAt: !15240)
!15238 = !DILexicalBlockFile(scope: !15239, file: !608, discriminator: 0)
!15239 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15240 = !DILocation(line: 41, column: 5, scope: !15241, inlinedAt: !15242)
!15241 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15242 = !DILocation(line: 19, column: 20, scope: !15220)
!15243 = !DILocation(line: 292, column: 25, scope: !15222)
!15244 = !DILocalVariable(name: "self", scope: !15245, file: !608, line: 292, type: !329, align: 8)
!15245 = !DILexicalBlockFile(scope: !15246, file: !608, discriminator: 0)
!15246 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15247)
!15247 = !{!15244}
!15248 = !DILocation(line: 292, column: 25, scope: !15245, inlinedAt: !15249)
!15249 = !DILocation(line: 23, column: 13, scope: !15222)
!15250 = !DILocalVariable(name: "self", scope: !15251, file: !608, line: 292, type: !9, align: 8)
!15251 = !DILexicalBlockFile(scope: !15252, file: !608, discriminator: 0)
!15252 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !2929, file: !2928, line: 1231, type: !2917, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15253)
!15253 = !{!15250, !15254}
!15254 = !DILocalVariable(name: "rhs", scope: !15251, file: !608, line: 292, type: !9, align: 8)
!15255 = !DILocation(line: 292, column: 25, scope: !15251, inlinedAt: !15249)
!15256 = !DILocalVariable(name: "self", scope: !15257, file: !608, line: 292, type: !329, align: 8)
!15257 = !DILexicalBlockFile(scope: !15258, file: !608, discriminator: 0)
!15258 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15259)
!15259 = !{!15256}
!15260 = !DILocation(line: 292, column: 25, scope: !15257, inlinedAt: !15261)
!15261 = !DILocation(line: 29, column: 47, scope: !15222)
!15262 = !DILocalVariable(name: "self", scope: !15263, file: !608, line: 292, type: !326, align: 8)
!15263 = !DILexicalBlockFile(scope: !15264, file: !608, discriminator: 0)
!15264 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15265)
!15265 = !{!15262}
!15266 = !DILocation(line: 292, column: 25, scope: !15263, inlinedAt: !15267)
!15267 = !DILocation(line: 29, column: 65, scope: !15222)
!15268 = !DILocalVariable(name: "self", scope: !15269, file: !608, line: 292, type: !649, align: 8)
!15269 = !DILexicalBlockFile(scope: !15270, file: !608, discriminator: 0)
!15270 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15271)
!15271 = !{!15268}
!15272 = !DILocation(line: 292, column: 25, scope: !15269, inlinedAt: !15267)
!15273 = !DILocation(line: 292, column: 25, scope: !15224)
!15274 = !DILocation(line: 293, column: 29, scope: !15218)
!15275 = !DILocation(line: 294, column: 17, scope: !15226)
!15276 = !DILocalVariable(name: "self", scope: !15277, file: !608, line: 292, type: !326, align: 8)
!15277 = !DILexicalBlockFile(scope: !15278, file: !608, discriminator: 0)
!15278 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15279)
!15279 = !{!15276}
!15280 = !DILocation(line: 292, column: 25, scope: !15277, inlinedAt: !15281)
!15281 = !DILocation(line: 23, column: 43, scope: !15222)
!15282 = !DILocalVariable(name: "self", scope: !15283, file: !608, line: 292, type: !649, align: 8)
!15283 = !DILexicalBlockFile(scope: !15284, file: !608, discriminator: 0)
!15284 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15285)
!15285 = !{!15282}
!15286 = !DILocation(line: 292, column: 25, scope: !15283, inlinedAt: !15281)
!15287 = !DILocation(line: 294, column: 37, scope: !15228)
!15288 = !DILocation(line: 304, column: 13, scope: !15211)
!15289 = !DILocation(line: 294, column: 27, scope: !15228)
!15290 = !DILocation(line: 294, column: 32, scope: !15228)
!15291 = !DILocation(line: 295, column: 24, scope: !15228)
!15292 = !DILocation(line: 303, column: 17, scope: !15226)
!15293 = !DILocation(line: 304, column: 14, scope: !15211)
!15294 = !DILocation(line: 301, column: 21, scope: !15228)
!15295 = !DILocation(line: 298, column: 41, scope: !15228)
!15296 = !DILocation(line: 298, column: 45, scope: !15228)
!15297 = !DILocation(line: 298, column: 34, scope: !15228)
!15298 = !DILocation(line: 299, column: 37, scope: !15228)
!15299 = !DILocation(line: 299, column: 32, scope: !15228)
!15300 = !DILocation(line: 288, column: 13, scope: !15211)
!15301 = distinct !DISubprogram(name: "next_match<2>", linkageName: "_ZN95_$LT$core..str..pattern..CharArraySearcher$LT$_$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h54af7edd65943b5eE", scope: !15302, file: !669, line: 752, type: !15303, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15306)
!15302 = !DINamespace(name: "{impl#13}", scope: !671)
!15303 = !DISubroutineType(types: !15304)
!15304 = !{!1275, !15305}
!15305 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharArraySearcher<2>", baseType: !4643, size: 64, align: 64, dwarfAddressSpace: 0)
!15306 = !{!15307}
!15307 = !DILocalVariable(name: "self", arg: 1, scope: !15301, file: !669, line: 752, type: !15305)
!15308 = !DILocation(line: 752, column: 23, scope: !15301)
!15309 = !DILocation(line: 753, column: 13, scope: !15301)
!15310 = !DILocation(line: 754, column: 10, scope: !15301)
!15311 = distinct !DISubprogram(name: "haystack<2>", linkageName: "_ZN95_$LT$core..str..pattern..CharArraySearcher$LT$_$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hd2ef0c83d6342879E", scope: !15302, file: !669, line: 744, type: !15312, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15315)
!15312 = !DISubroutineType(types: !15313)
!15313 = !{!137, !15314}
!15314 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::CharArraySearcher<2>", baseType: !4643, size: 64, align: 64, dwarfAddressSpace: 0)
!15315 = !{!15316}
!15316 = !DILocalVariable(name: "self", arg: 1, scope: !15311, file: !669, line: 744, type: !15314)
!15317 = !DILocation(line: 744, column: 21, scope: !15311)
!15318 = !DILocation(line: 745, column: 13, scope: !15311)
!15319 = !DILocalVariable(name: "self", scope: !15320, file: !669, line: 745, type: !15324, align: 8)
!15320 = distinct !DISubprogram(name: "haystack<[char; 2]>", linkageName: "_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17h9458f0e19fa78f1cE", scope: !15321, file: !669, line: 652, type: !15322, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4654, retainedNodes: !15325)
!15321 = !DINamespace(name: "{impl#9}", scope: !671)
!15322 = !DISubroutineType(types: !15323)
!15323 = !{!137, !15324}
!15324 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::MultiCharEqSearcher<[char; 2]>", baseType: !4646, size: 64, align: 64, dwarfAddressSpace: 0)
!15325 = !{!15319}
!15326 = !DILocation(line: 745, column: 13, scope: !15320, inlinedAt: !15318)
!15327 = !DILocation(line: 746, column: 10, scope: !15311)
!15328 = distinct !DISubprogram(name: "into_searcher<[char; 2]>", linkageName: "_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h08ddf439b62a3decE", scope: !15329, file: !669, line: 645, type: !15330, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4654, retainedNodes: !15335)
!15329 = !DINamespace(name: "{impl#8}", scope: !671)
!15330 = !DISubroutineType(types: !15331)
!15331 = !{!4646, !15332, !137}
!15332 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqPattern<[char; 2]>", scope: !671, file: !2, size: 64, align: 32, elements: !15333, templateParams: !4654, identifier: "1479764cf3915cc223a046c6c1280e13")
!15333 = !{!15334}
!15334 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15332, file: !2, baseType: !4649, size: 64, align: 32)
!15335 = !{!15336, !15337}
!15336 = !DILocalVariable(name: "self", arg: 1, scope: !15328, file: !669, line: 645, type: !15332)
!15337 = !DILocalVariable(name: "haystack", arg: 2, scope: !15328, file: !669, line: 645, type: !137)
!15338 = !DILocation(line: 645, column: 22, scope: !15328)
!15339 = !DILocation(line: 645, column: 28, scope: !15328)
!15340 = !DILocation(line: 646, column: 50, scope: !15328)
!15341 = !DILocation(line: 646, column: 72, scope: !15328)
!15342 = !DILocalVariable(name: "self", scope: !15343, file: !669, line: 646, type: !137, align: 8)
!15343 = !DILexicalBlockFile(scope: !15344, file: !669, discriminator: 0)
!15344 = distinct !DISubprogram(name: "char_indices", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hd3619ec8d4f3c273E", scope: !697, file: !2520, line: 837, type: !15345, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15347)
!15345 = !DISubroutineType(types: !15346)
!15346 = !{!541, !137}
!15347 = !{!15342}
!15348 = !DILocation(line: 646, column: 72, scope: !15343, inlinedAt: !15341)
!15349 = !DILocalVariable(name: "self", scope: !15350, file: !669, line: 646, type: !137, align: 8)
!15350 = !DILexicalBlockFile(scope: !15351, file: !669, discriminator: 0)
!15351 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hd208cb08832fcc47E", scope: !697, file: !2520, line: 780, type: !15352, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15354)
!15352 = !DISubroutineType(types: !15353)
!15353 = !{!545, !137}
!15354 = !{!15349}
!15355 = !DILocation(line: 646, column: 72, scope: !15350, inlinedAt: !15356)
!15356 = !DILocation(line: 838, column: 46, scope: !15344, inlinedAt: !15341)
!15357 = !DILocalVariable(name: "self", scope: !15358, file: !669, line: 646, type: !137, align: 8)
!15358 = !DILexicalBlockFile(scope: !15359, file: !669, discriminator: 0)
!15359 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15360)
!15360 = !{!15357}
!15361 = !DILocation(line: 646, column: 72, scope: !15358, inlinedAt: !15362)
!15362 = !DILocation(line: 781, column: 23, scope: !15351, inlinedAt: !15356)
!15363 = !DILocalVariable(name: "self", scope: !15364, file: !669, line: 646, type: !366, align: 8)
!15364 = !DILexicalBlockFile(scope: !15365, file: !669, discriminator: 0)
!15365 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he6f0451bd5ba00ccE", scope: !2489, file: !2488, line: 734, type: !6163, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15366)
!15366 = !{!15363}
!15367 = !DILocation(line: 646, column: 72, scope: !15364, inlinedAt: !15362)
!15368 = !DILocation(line: 646, column: 96, scope: !15328)
!15369 = !DILocation(line: 646, column: 9, scope: !15328)
!15370 = !DILocation(line: 647, column: 6, scope: !15328)
!15371 = !DILocation(line: 645, column: 5, scope: !15328)
!15372 = distinct !DISubprogram(name: "into_searcher<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h91860eee0c889734E", scope: !15329, file: !669, line: 645, type: !15373, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !700, retainedNodes: !15378)
!15373 = !DISubroutineType(types: !15374)
!15374 = !{!692, !15375, !137}
!15375 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqPattern<core::str::{impl#0}::trim::{closure_env#0}>", scope: !671, file: !2, align: 8, elements: !15376, templateParams: !700, identifier: "35d352e50631f05c639750781ae10be8")
!15376 = !{!15377}
!15377 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15375, file: !2, baseType: !695, align: 8)
!15378 = !{!15379, !15380}
!15379 = !DILocalVariable(name: "self", arg: 1, scope: !15372, file: !669, line: 645, type: !15375)
!15380 = !DILocalVariable(name: "haystack", arg: 2, scope: !15372, file: !669, line: 645, type: !137)
!15381 = !DILocation(line: 645, column: 22, scope: !15372)
!15382 = !DILocation(line: 645, column: 28, scope: !15372)
!15383 = !DILocation(line: 646, column: 72, scope: !15372)
!15384 = !DILocalVariable(name: "self", scope: !15385, file: !669, line: 646, type: !137, align: 8)
!15385 = !DILexicalBlockFile(scope: !15386, file: !669, discriminator: 0)
!15386 = distinct !DISubprogram(name: "char_indices", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17hd3619ec8d4f3c273E", scope: !697, file: !2520, line: 837, type: !15345, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15387)
!15387 = !{!15384}
!15388 = !DILocation(line: 646, column: 72, scope: !15385, inlinedAt: !15383)
!15389 = !DILocalVariable(name: "self", scope: !15390, file: !669, line: 646, type: !137, align: 8)
!15390 = !DILexicalBlockFile(scope: !15391, file: !669, discriminator: 0)
!15391 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hd208cb08832fcc47E", scope: !697, file: !2520, line: 780, type: !15352, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15392)
!15392 = !{!15389}
!15393 = !DILocation(line: 646, column: 72, scope: !15390, inlinedAt: !15394)
!15394 = !DILocation(line: 838, column: 46, scope: !15386, inlinedAt: !15383)
!15395 = !DILocalVariable(name: "self", scope: !15396, file: !669, line: 646, type: !137, align: 8)
!15396 = !DILexicalBlockFile(scope: !15397, file: !669, discriminator: 0)
!15397 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h13d800590348b3c6E", scope: !697, file: !2520, line: 323, type: !2521, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15398)
!15398 = !{!15395}
!15399 = !DILocation(line: 646, column: 72, scope: !15396, inlinedAt: !15400)
!15400 = !DILocation(line: 781, column: 23, scope: !15391, inlinedAt: !15394)
!15401 = !DILocalVariable(name: "self", scope: !15402, file: !669, line: 646, type: !366, align: 8)
!15402 = !DILexicalBlockFile(scope: !15403, file: !669, discriminator: 0)
!15403 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17he6f0451bd5ba00ccE", scope: !2489, file: !2488, line: 734, type: !6163, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15404)
!15404 = !{!15401}
!15405 = !DILocation(line: 646, column: 72, scope: !15402, inlinedAt: !15400)
!15406 = !DILocation(line: 646, column: 96, scope: !15372)
!15407 = !DILocation(line: 646, column: 9, scope: !15372)
!15408 = !DILocation(line: 647, column: 6, scope: !15372)
!15409 = !DILocation(line: 645, column: 5, scope: !15372)
!15410 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17h529587772334d22fE", scope: !6874, file: !517, line: 84, type: !15411, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15413)
!15411 = !DISubroutineType(types: !15412)
!15412 = !{!534, !6873, !351}
!15413 = !{!15414, !15415}
!15414 = !DILocalVariable(name: "ch", arg: 2, scope: !15410, file: !517, line: 84, type: !351)
!15415 = !DILocalVariable(arg: 1, scope: !15410, file: !517, line: 84, type: !6873)
!15416 = !DILocation(line: 84, column: 62, scope: !15410)
!15417 = !DILocation(line: 84, column: 63, scope: !15410)
!15418 = !DILocation(line: 84, column: 92, scope: !15410)
!15419 = !DILocalVariable(name: "i", scope: !15420, file: !517, line: 84, type: !351, align: 4)
!15420 = !DILexicalBlockFile(scope: !15421, file: !517, discriminator: 0)
!15421 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char18from_u32_unchecked17h05c16ed8c0d03abcE", scope: !5000, file: !14204, line: 123, type: !14205, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15422)
!15422 = !{!15419}
!15423 = !DILocation(line: 84, column: 67, scope: !15420, inlinedAt: !15424)
!15424 = !DILocation(line: 84, column: 67, scope: !15410)
!15425 = !DILocalVariable(name: "i", scope: !15426, file: !517, line: 84, type: !351, align: 4)
!15426 = !DILexicalBlockFile(scope: !15427, file: !517, discriminator: 0)
!15427 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17h4f36345ab63a3b7eE", scope: !14214, file: !14213, line: 24, type: !14205, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15428)
!15428 = !{!15425}
!15429 = !DILocation(line: 84, column: 67, scope: !15426, inlinedAt: !15430)
!15430 = !DILocation(line: 125, column: 14, scope: !15421, inlinedAt: !15424)
!15431 = !DILocation(line: 84, column: 66, scope: !15410)
!15432 = distinct !DISubprogram(name: "next<[char; 2]>", linkageName: "_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h10d2da9364c3a8c8E", scope: !15321, file: !669, line: 657, type: !15433, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !4654, retainedNodes: !15435)
!15433 = !DISubroutineType(types: !15434)
!15434 = !{!674, !4953}
!15435 = !{!15436, !15437, !15439, !15441, !15443, !15444, !15446}
!15436 = !DILocalVariable(name: "self", arg: 1, scope: !15432, file: !669, line: 657, type: !4953)
!15437 = !DILocalVariable(name: "s", scope: !15438, file: !669, line: 658, type: !540, align: 8)
!15438 = distinct !DILexicalBlock(scope: !15432, file: !669, line: 658, column: 9)
!15439 = !DILocalVariable(name: "pre_len", scope: !15440, file: !669, line: 661, type: !9, align: 8)
!15440 = distinct !DILexicalBlock(scope: !15438, file: !669, line: 661, column: 9)
!15441 = !DILocalVariable(name: "i", scope: !15442, file: !669, line: 662, type: !9, align: 8)
!15442 = distinct !DILexicalBlock(scope: !15440, file: !669, line: 662, column: 40)
!15443 = !DILocalVariable(name: "c", scope: !15442, file: !669, line: 662, type: !534, align: 4)
!15444 = !DILocalVariable(name: "len", scope: !15445, file: !669, line: 663, type: !9, align: 8)
!15445 = distinct !DILexicalBlock(scope: !15442, file: !669, line: 663, column: 13)
!15446 = !DILocalVariable(name: "char_len", scope: !15447, file: !669, line: 664, type: !9, align: 8)
!15447 = distinct !DILexicalBlock(scope: !15445, file: !669, line: 664, column: 13)
!15448 = !DILocation(line: 657, column: 13, scope: !15432)
!15449 = !DILocation(line: 658, column: 17, scope: !15432)
!15450 = !DILocation(line: 658, column: 13, scope: !15438)
!15451 = !DILocation(line: 661, column: 23, scope: !15438)
!15452 = !DILocalVariable(name: "self", scope: !15453, file: !669, line: 661, type: !594, align: 8)
!15453 = !DILexicalBlockFile(scope: !15454, file: !669, discriminator: 0)
!15454 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb43e37bf6ff01ebbE", scope: !609, file: !608, line: 119, type: !610, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15455)
!15455 = !{!15452, !15456, !15459, !15462}
!15456 = !DILocalVariable(name: "start", scope: !15457, file: !669, line: 661, type: !326, align: 8)
!15457 = !DILexicalBlockFile(scope: !15458, file: !669, discriminator: 0)
!15458 = distinct !DILexicalBlock(scope: !15454, file: !608, line: 18, column: 9)
!15459 = !DILocalVariable(name: "size", scope: !15460, file: !669, line: 661, type: !9, align: 8)
!15460 = !DILexicalBlockFile(scope: !15461, file: !669, discriminator: 0)
!15461 = distinct !DILexicalBlock(scope: !15458, file: !608, line: 19, column: 9)
!15462 = !DILocalVariable(name: "diff", scope: !15463, file: !669, line: 661, type: !9, align: 8)
!15463 = !DILexicalBlockFile(scope: !15464, file: !669, discriminator: 0)
!15464 = distinct !DILexicalBlock(scope: !15461, file: !608, line: 29, column: 13)
!15465 = !DILocation(line: 661, column: 23, scope: !15453, inlinedAt: !15451)
!15466 = !DILocation(line: 661, column: 23, scope: !15457, inlinedAt: !15451)
!15467 = !DILocation(line: 661, column: 23, scope: !15468, inlinedAt: !15470)
!15468 = !DILexicalBlockFile(scope: !15469, file: !669, discriminator: 0)
!15469 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15470 = !DILocation(line: 41, column: 5, scope: !15471, inlinedAt: !15472)
!15471 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15472 = !DILocation(line: 19, column: 20, scope: !15458, inlinedAt: !15451)
!15473 = !DILocation(line: 661, column: 23, scope: !15460, inlinedAt: !15451)
!15474 = !DILocalVariable(name: "self", scope: !15475, file: !669, line: 661, type: !329, align: 8)
!15475 = !DILexicalBlockFile(scope: !15476, file: !669, discriminator: 0)
!15476 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15477)
!15477 = !{!15474}
!15478 = !DILocation(line: 661, column: 23, scope: !15475, inlinedAt: !15479)
!15479 = !DILocation(line: 29, column: 47, scope: !15461, inlinedAt: !15451)
!15480 = !DILocalVariable(name: "self", scope: !15481, file: !669, line: 661, type: !326, align: 8)
!15481 = !DILexicalBlockFile(scope: !15482, file: !669, discriminator: 0)
!15482 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15483)
!15483 = !{!15480}
!15484 = !DILocation(line: 661, column: 23, scope: !15481, inlinedAt: !15485)
!15485 = !DILocation(line: 29, column: 65, scope: !15461, inlinedAt: !15451)
!15486 = !DILocalVariable(name: "self", scope: !15487, file: !669, line: 661, type: !649, align: 8)
!15487 = !DILexicalBlockFile(scope: !15488, file: !669, discriminator: 0)
!15488 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15489)
!15489 = !{!15486}
!15490 = !DILocation(line: 661, column: 23, scope: !15487, inlinedAt: !15485)
!15491 = !DILocation(line: 661, column: 23, scope: !15463, inlinedAt: !15451)
!15492 = !DILocation(line: 661, column: 13, scope: !15440)
!15493 = !DILocation(line: 662, column: 31, scope: !15442)
!15494 = !DILocation(line: 662, column: 16, scope: !15442)
!15495 = !DILocation(line: 662, column: 22, scope: !15442)
!15496 = !DILocation(line: 662, column: 25, scope: !15442)
!15497 = !DILocation(line: 663, column: 23, scope: !15442)
!15498 = !DILocalVariable(name: "self", scope: !15499, file: !669, line: 663, type: !594, align: 8)
!15499 = !DILexicalBlockFile(scope: !15500, file: !669, discriminator: 0)
!15500 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb43e37bf6ff01ebbE", scope: !609, file: !608, line: 119, type: !610, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15501)
!15501 = !{!15498, !15502, !15505, !15508}
!15502 = !DILocalVariable(name: "start", scope: !15503, file: !669, line: 663, type: !326, align: 8)
!15503 = !DILexicalBlockFile(scope: !15504, file: !669, discriminator: 0)
!15504 = distinct !DILexicalBlock(scope: !15500, file: !608, line: 18, column: 9)
!15505 = !DILocalVariable(name: "size", scope: !15506, file: !669, line: 663, type: !9, align: 8)
!15506 = !DILexicalBlockFile(scope: !15507, file: !669, discriminator: 0)
!15507 = distinct !DILexicalBlock(scope: !15504, file: !608, line: 19, column: 9)
!15508 = !DILocalVariable(name: "diff", scope: !15509, file: !669, line: 663, type: !9, align: 8)
!15509 = !DILexicalBlockFile(scope: !15510, file: !669, discriminator: 0)
!15510 = distinct !DILexicalBlock(scope: !15507, file: !608, line: 29, column: 13)
!15511 = !DILocation(line: 663, column: 23, scope: !15499, inlinedAt: !15497)
!15512 = !DILocation(line: 663, column: 23, scope: !15503, inlinedAt: !15497)
!15513 = !DILocation(line: 663, column: 23, scope: !15514, inlinedAt: !15516)
!15514 = !DILexicalBlockFile(scope: !15515, file: !669, discriminator: 0)
!15515 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15516 = !DILocation(line: 41, column: 5, scope: !15517, inlinedAt: !15518)
!15517 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15518 = !DILocation(line: 19, column: 20, scope: !15504, inlinedAt: !15497)
!15519 = !DILocation(line: 663, column: 23, scope: !15506, inlinedAt: !15497)
!15520 = !DILocalVariable(name: "self", scope: !15521, file: !669, line: 663, type: !329, align: 8)
!15521 = !DILexicalBlockFile(scope: !15522, file: !669, discriminator: 0)
!15522 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15523)
!15523 = !{!15520}
!15524 = !DILocation(line: 663, column: 23, scope: !15521, inlinedAt: !15525)
!15525 = !DILocation(line: 29, column: 47, scope: !15507, inlinedAt: !15497)
!15526 = !DILocation(line: 671, column: 9, scope: !15440)
!15527 = !DILocation(line: 672, column: 6, scope: !15432)
!15528 = !DILocalVariable(name: "self", scope: !15529, file: !669, line: 663, type: !326, align: 8)
!15529 = !DILexicalBlockFile(scope: !15530, file: !669, discriminator: 0)
!15530 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15531)
!15531 = !{!15528}
!15532 = !DILocation(line: 663, column: 23, scope: !15529, inlinedAt: !15533)
!15533 = !DILocation(line: 29, column: 65, scope: !15507, inlinedAt: !15497)
!15534 = !DILocalVariable(name: "self", scope: !15535, file: !669, line: 663, type: !649, align: 8)
!15535 = !DILexicalBlockFile(scope: !15536, file: !669, discriminator: 0)
!15536 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15537)
!15537 = !{!15534}
!15538 = !DILocation(line: 663, column: 23, scope: !15535, inlinedAt: !15533)
!15539 = !DILocation(line: 663, column: 23, scope: !15509, inlinedAt: !15497)
!15540 = !DILocation(line: 663, column: 17, scope: !15445)
!15541 = !DILocation(line: 664, column: 28, scope: !15445)
!15542 = !DILocation(line: 664, column: 17, scope: !15447)
!15543 = !DILocation(line: 665, column: 16, scope: !15447)
!15544 = !DILocation(line: 668, column: 46, scope: !15447)
!15545 = !DILocation(line: 668, column: 24, scope: !15447)
!15546 = !DILocation(line: 668, column: 17, scope: !15447)
!15547 = !DILocation(line: 666, column: 45, scope: !15447)
!15548 = !DILocation(line: 666, column: 24, scope: !15447)
!15549 = !DILocation(line: 666, column: 17, scope: !15447)
!15550 = distinct !DISubprogram(name: "next<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h716145b75f37cbccE", scope: !15321, file: !669, line: 657, type: !672, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !700, retainedNodes: !15551)
!15551 = !{!15552, !15553, !15555, !15557, !15559, !15560, !15562}
!15552 = !DILocalVariable(name: "self", arg: 1, scope: !15550, file: !669, line: 657, type: !691)
!15553 = !DILocalVariable(name: "s", scope: !15554, file: !669, line: 658, type: !540, align: 8)
!15554 = distinct !DILexicalBlock(scope: !15550, file: !669, line: 658, column: 9)
!15555 = !DILocalVariable(name: "pre_len", scope: !15556, file: !669, line: 661, type: !9, align: 8)
!15556 = distinct !DILexicalBlock(scope: !15554, file: !669, line: 661, column: 9)
!15557 = !DILocalVariable(name: "i", scope: !15558, file: !669, line: 662, type: !9, align: 8)
!15558 = distinct !DILexicalBlock(scope: !15556, file: !669, line: 662, column: 40)
!15559 = !DILocalVariable(name: "c", scope: !15558, file: !669, line: 662, type: !534, align: 4)
!15560 = !DILocalVariable(name: "len", scope: !15561, file: !669, line: 663, type: !9, align: 8)
!15561 = distinct !DILexicalBlock(scope: !15558, file: !669, line: 663, column: 13)
!15562 = !DILocalVariable(name: "char_len", scope: !15563, file: !669, line: 664, type: !9, align: 8)
!15563 = distinct !DILexicalBlock(scope: !15561, file: !669, line: 664, column: 13)
!15564 = !DILocation(line: 657, column: 13, scope: !15550)
!15565 = !DILocation(line: 658, column: 17, scope: !15550)
!15566 = !DILocation(line: 658, column: 13, scope: !15554)
!15567 = !DILocation(line: 661, column: 23, scope: !15554)
!15568 = !DILocalVariable(name: "self", scope: !15569, file: !669, line: 661, type: !594, align: 8)
!15569 = !DILexicalBlockFile(scope: !15570, file: !669, discriminator: 0)
!15570 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb43e37bf6ff01ebbE", scope: !609, file: !608, line: 119, type: !610, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15571)
!15571 = !{!15568, !15572, !15575, !15578}
!15572 = !DILocalVariable(name: "start", scope: !15573, file: !669, line: 661, type: !326, align: 8)
!15573 = !DILexicalBlockFile(scope: !15574, file: !669, discriminator: 0)
!15574 = distinct !DILexicalBlock(scope: !15570, file: !608, line: 18, column: 9)
!15575 = !DILocalVariable(name: "size", scope: !15576, file: !669, line: 661, type: !9, align: 8)
!15576 = !DILexicalBlockFile(scope: !15577, file: !669, discriminator: 0)
!15577 = distinct !DILexicalBlock(scope: !15574, file: !608, line: 19, column: 9)
!15578 = !DILocalVariable(name: "diff", scope: !15579, file: !669, line: 661, type: !9, align: 8)
!15579 = !DILexicalBlockFile(scope: !15580, file: !669, discriminator: 0)
!15580 = distinct !DILexicalBlock(scope: !15577, file: !608, line: 29, column: 13)
!15581 = !DILocation(line: 661, column: 23, scope: !15569, inlinedAt: !15567)
!15582 = !DILocation(line: 661, column: 23, scope: !15573, inlinedAt: !15567)
!15583 = !DILocation(line: 661, column: 23, scope: !15584, inlinedAt: !15586)
!15584 = !DILexicalBlockFile(scope: !15585, file: !669, discriminator: 0)
!15585 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15586 = !DILocation(line: 41, column: 5, scope: !15587, inlinedAt: !15588)
!15587 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15588 = !DILocation(line: 19, column: 20, scope: !15574, inlinedAt: !15567)
!15589 = !DILocation(line: 661, column: 23, scope: !15576, inlinedAt: !15567)
!15590 = !DILocalVariable(name: "self", scope: !15591, file: !669, line: 661, type: !329, align: 8)
!15591 = !DILexicalBlockFile(scope: !15592, file: !669, discriminator: 0)
!15592 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15593)
!15593 = !{!15590}
!15594 = !DILocation(line: 661, column: 23, scope: !15591, inlinedAt: !15595)
!15595 = !DILocation(line: 29, column: 47, scope: !15577, inlinedAt: !15567)
!15596 = !DILocalVariable(name: "self", scope: !15597, file: !669, line: 661, type: !326, align: 8)
!15597 = !DILexicalBlockFile(scope: !15598, file: !669, discriminator: 0)
!15598 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15599)
!15599 = !{!15596}
!15600 = !DILocation(line: 661, column: 23, scope: !15597, inlinedAt: !15601)
!15601 = !DILocation(line: 29, column: 65, scope: !15577, inlinedAt: !15567)
!15602 = !DILocalVariable(name: "self", scope: !15603, file: !669, line: 661, type: !649, align: 8)
!15603 = !DILexicalBlockFile(scope: !15604, file: !669, discriminator: 0)
!15604 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15605)
!15605 = !{!15602}
!15606 = !DILocation(line: 661, column: 23, scope: !15603, inlinedAt: !15601)
!15607 = !DILocation(line: 661, column: 23, scope: !15579, inlinedAt: !15567)
!15608 = !DILocation(line: 661, column: 13, scope: !15556)
!15609 = !DILocation(line: 662, column: 31, scope: !15558)
!15610 = !DILocation(line: 662, column: 16, scope: !15558)
!15611 = !DILocation(line: 662, column: 22, scope: !15558)
!15612 = !DILocation(line: 662, column: 25, scope: !15558)
!15613 = !DILocation(line: 663, column: 23, scope: !15558)
!15614 = !DILocalVariable(name: "self", scope: !15615, file: !669, line: 663, type: !594, align: 8)
!15615 = !DILexicalBlockFile(scope: !15616, file: !669, discriminator: 0)
!15616 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb43e37bf6ff01ebbE", scope: !609, file: !608, line: 119, type: !610, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15617)
!15617 = !{!15614, !15618, !15621, !15624}
!15618 = !DILocalVariable(name: "start", scope: !15619, file: !669, line: 663, type: !326, align: 8)
!15619 = !DILexicalBlockFile(scope: !15620, file: !669, discriminator: 0)
!15620 = distinct !DILexicalBlock(scope: !15616, file: !608, line: 18, column: 9)
!15621 = !DILocalVariable(name: "size", scope: !15622, file: !669, line: 663, type: !9, align: 8)
!15622 = !DILexicalBlockFile(scope: !15623, file: !669, discriminator: 0)
!15623 = distinct !DILexicalBlock(scope: !15620, file: !608, line: 19, column: 9)
!15624 = !DILocalVariable(name: "diff", scope: !15625, file: !669, line: 663, type: !9, align: 8)
!15625 = !DILexicalBlockFile(scope: !15626, file: !669, discriminator: 0)
!15626 = distinct !DILexicalBlock(scope: !15623, file: !608, line: 29, column: 13)
!15627 = !DILocation(line: 663, column: 23, scope: !15615, inlinedAt: !15613)
!15628 = !DILocation(line: 663, column: 23, scope: !15619, inlinedAt: !15613)
!15629 = !DILocation(line: 663, column: 23, scope: !15630, inlinedAt: !15632)
!15630 = !DILexicalBlockFile(scope: !15631, file: !669, discriminator: 0)
!15631 = distinct !DISubprogram(name: "size_of<u8>", linkageName: "_ZN4core3mem7size_of17h2d039f310db62d16E", scope: !210, file: !627, line: 314, type: !628, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15632 = !DILocation(line: 41, column: 5, scope: !15633, inlinedAt: !15634)
!15633 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h6135cd0b88f54f36E", scope: !473, file: !632, line: 40, type: !633, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !23)
!15634 = !DILocation(line: 19, column: 20, scope: !15620, inlinedAt: !15613)
!15635 = !DILocation(line: 663, column: 23, scope: !15622, inlinedAt: !15613)
!15636 = !DILocalVariable(name: "self", scope: !15637, file: !669, line: 663, type: !329, align: 8)
!15637 = !DILexicalBlockFile(scope: !15638, file: !669, discriminator: 0)
!15638 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h0687ecf217c7b202E", scope: !414, file: !413, line: 178, type: !633, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15639)
!15639 = !{!15636}
!15640 = !DILocation(line: 663, column: 23, scope: !15637, inlinedAt: !15641)
!15641 = !DILocation(line: 29, column: 47, scope: !15623, inlinedAt: !15613)
!15642 = !DILocation(line: 671, column: 9, scope: !15556)
!15643 = !DILocation(line: 672, column: 6, scope: !15550)
!15644 = !DILocalVariable(name: "self", scope: !15645, file: !669, line: 663, type: !326, align: 8)
!15645 = !DILexicalBlockFile(scope: !15646, file: !669, discriminator: 0)
!15646 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7e9c1275b0aadbe3E", scope: !326, file: !646, line: 330, type: !647, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15647)
!15647 = !{!15644}
!15648 = !DILocation(line: 663, column: 23, scope: !15645, inlinedAt: !15649)
!15649 = !DILocation(line: 29, column: 65, scope: !15623, inlinedAt: !15613)
!15650 = !DILocalVariable(name: "self", scope: !15651, file: !669, line: 663, type: !649, align: 8)
!15651 = !DILexicalBlockFile(scope: !15652, file: !669, discriminator: 0)
!15652 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4addr17h9a747472bd9cd747E", scope: !657, file: !656, line: 184, type: !659, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !330, retainedNodes: !15653)
!15653 = !{!15650}
!15654 = !DILocation(line: 663, column: 23, scope: !15651, inlinedAt: !15649)
!15655 = !DILocation(line: 663, column: 23, scope: !15625, inlinedAt: !15613)
!15656 = !DILocation(line: 663, column: 17, scope: !15561)
!15657 = !DILocation(line: 664, column: 28, scope: !15561)
!15658 = !DILocation(line: 664, column: 17, scope: !15563)
!15659 = !DILocation(line: 665, column: 16, scope: !15563)
!15660 = !DILocation(line: 668, column: 46, scope: !15563)
!15661 = !DILocation(line: 668, column: 24, scope: !15563)
!15662 = !DILocation(line: 668, column: 17, scope: !15563)
!15663 = !DILocation(line: 666, column: 45, scope: !15563)
!15664 = !DILocation(line: 666, column: 24, scope: !15563)
!15665 = !DILocation(line: 666, column: 17, scope: !15563)
!15666 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17hd9b985f827e3ffcaE", scope: !15667, file: !2467, line: 1312, type: !13710, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15668)
!15667 = !DINamespace(name: "{impl#53}", scope: !1377)
!15668 = !{!15669}
!15669 = !DILocalVariable(name: "self", arg: 1, scope: !15666, file: !2467, line: 1312, type: !13712)
!15670 = !DILocation(line: 1312, column: 15, scope: !15666)
!15671 = !DILocalVariable(name: "_index", scope: !15672, file: !2467, line: 1313, type: !341, align: 1)
!15672 = distinct !DISubprogram(name: "index", linkageName: "_ZN105_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFull$GT$$GT$5index17hdeffd929715c7d72E", scope: !13718, file: !2467, line: 495, type: !13719, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15673)
!15673 = !{!15674, !15671}
!15674 = !DILocalVariable(name: "self", scope: !15672, file: !2467, line: 1313, type: !13712, align: 8)
!15675 = !DILocation(line: 1313, column: 9, scope: !15672, inlinedAt: !15676)
!15676 = !DILocation(line: 514, column: 10, scope: !15677, inlinedAt: !15680)
!15677 = distinct !DISubprogram(name: "deref", linkageName: "_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h9daeb037d4eadd5cE", scope: !13709, file: !2467, line: 513, type: !13710, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15678)
!15678 = !{!15679}
!15679 = !DILocalVariable(name: "self", scope: !15677, file: !2467, line: 1313, type: !13712, align: 8)
!15680 = !DILocation(line: 1313, column: 9, scope: !15666)
!15681 = !DILocation(line: 1313, column: 9, scope: !15677, inlinedAt: !15680)
!15682 = !DILocalVariable(name: "inner", scope: !15683, file: !2467, line: 1313, type: !2509, align: 8)
!15683 = distinct !DISubprogram(name: "from_inner", linkageName: "_ZN3std3ffi6os_str5OsStr10from_inner17hdedc03f1dd08ee10E", scope: !2468, file: !2467, line: 671, type: !2536, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15684)
!15684 = !{!15682}
!15685 = !DILocation(line: 1313, column: 9, scope: !15683, inlinedAt: !15686)
!15686 = !DILocation(line: 496, column: 9, scope: !15672, inlinedAt: !15676)
!15687 = !DILocation(line: 1314, column: 6, scope: !15666)
!15688 = distinct !DISubprogram(name: "drop<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN99_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9b975583e5441ae1E", scope: !15689, file: !1304, line: 187, type: !15690, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !15692)
!15689 = !DINamespace(name: "{impl#0}", scope: !1306)
!15690 = !DISubroutineType(types: !15691)
!15691 = !{null, !1657}
!15692 = !{!15693}
!15693 = !DILocalVariable(name: "self", arg: 1, scope: !15688, file: !1304, line: 187, type: !1657)
!15694 = !DILocation(line: 187, column: 13, scope: !15688)
!15695 = !DILocalVariable(name: "_x", scope: !15696, file: !1304, line: 188, type: !1311, align: 8)
!15696 = !DILexicalBlockFile(scope: !15697, file: !1304, discriminator: 0)
!15697 = distinct !DISubprogram(name: "drop<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem4drop17hfd6d62411293c587E", scope: !210, file: !627, line: 988, type: !15698, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !3567, retainedNodes: !15700)
!15698 = !DISubroutineType(types: !15699)
!15699 = !{null, !1311}
!15700 = !{!15695}
!15701 = !DILocation(line: 188, column: 9, scope: !15696, inlinedAt: !15702)
!15702 = !DILocation(line: 188, column: 9, scope: !15688)
!15703 = !DILocalVariable(name: "tmp", scope: !15704, file: !1304, line: 188, type: !15713, align: 8)
!15704 = !DILexicalBlockFile(scope: !15705, file: !1304, discriminator: 0)
!15705 = distinct !DILexicalBlock(scope: !15706, file: !399, line: 1107, column: 5)
!15706 = distinct !DISubprogram(name: "read<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read17h1f78a08912e502b4E", scope: !43, file: !399, line: 1099, type: !15707, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !15710)
!15707 = !DISubroutineType(types: !15708)
!15708 = !{!1508, !15709}
!15709 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", baseType: !1508, size: 64, align: 64, dwarfAddressSpace: 0)
!15710 = !{!15711, !15703}
!15711 = !DILocalVariable(name: "src", scope: !15712, file: !1304, line: 188, type: !15709, align: 8)
!15712 = !DILexicalBlockFile(scope: !15706, file: !1304, discriminator: 0)
!15713 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", scope: !982, file: !2, size: 192, align: 64, elements: !15714, templateParams: !1564, identifier: "906e6f94c5fa18d93f1e8d9c76d6ccd7")
!15714 = !{!15715, !15716}
!15715 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !15713, file: !2, baseType: !7, align: 8)
!15716 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !15713, file: !2, baseType: !1561, size: 192, align: 64)
!15717 = !DILocation(line: 188, column: 23, scope: !15704, inlinedAt: !15718)
!15718 = !DILocation(line: 188, column: 23, scope: !15688)
!15719 = !DILocalVariable(name: "self", scope: !15720, file: !1304, line: 188, type: !15713, align: 8)
!15720 = !DILexicalBlockFile(scope: !15721, file: !1304, discriminator: 0)
!15721 = distinct !DISubprogram(name: "assume_init<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h20515123ac4f9813E", scope: !15713, file: !1609, line: 629, type: !15722, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !15724)
!15722 = !DISubroutineType(types: !15723)
!15723 = !{!1508, !15713, !344}
!15724 = !{!15719}
!15725 = !DILocation(line: 188, column: 23, scope: !15720, inlinedAt: !15726)
!15726 = !DILocation(line: 1116, column: 9, scope: !15705, inlinedAt: !15718)
!15727 = !DILocalVariable(name: "slot", scope: !15728, file: !1304, line: 188, type: !1561, align: 8)
!15728 = !DILexicalBlockFile(scope: !15729, file: !1304, discriminator: 0)
!15729 = distinct !DISubprogram(name: "into_inner<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h896fc1efa274d597E", scope: !1561, file: !1575, line: 88, type: !15730, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !15732)
!15730 = !DISubroutineType(types: !15731)
!15731 = !{!1508, !1561}
!15732 = !{!15727}
!15733 = !DILocation(line: 188, column: 23, scope: !15728, inlinedAt: !15734)
!15734 = !DILocation(line: 634, column: 13, scope: !15721, inlinedAt: !15726)
!15735 = !DILocation(line: 188, column: 33, scope: !15688)
!15736 = !DILocation(line: 188, column: 23, scope: !15712, inlinedAt: !15718)
!15737 = !DILocation(line: 188, column: 23, scope: !15738, inlinedAt: !15742)
!15738 = !DILexicalBlockFile(scope: !15739, file: !1304, discriminator: 0)
!15739 = distinct !DISubprogram(name: "uninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17he9c15f5f9aa231b8E", scope: !15713, file: !1609, line: 320, type: !15740, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !23)
!15740 = !DISubroutineType(types: !15741)
!15741 = !{!15713}
!15742 = !DILocation(line: 1107, column: 19, scope: !15706, inlinedAt: !15718)
!15743 = !DILocalVariable(name: "self", scope: !15744, file: !1304, line: 188, type: !15748, align: 8)
!15744 = !DILexicalBlockFile(scope: !15745, file: !1304, discriminator: 0)
!15745 = distinct !DISubprogram(name: "as_mut_ptr<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17he69c24f18ccb0d22E", scope: !15713, file: !1609, line: 574, type: !15746, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1564, retainedNodes: !15749)
!15746 = !DISubroutineType(types: !15747)
!15747 = !{!3557, !15748}
!15748 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>>", baseType: !15713, size: 64, align: 64, dwarfAddressSpace: 0)
!15749 = !{!15743}
!15750 = !DILocation(line: 188, column: 23, scope: !15744, inlinedAt: !15751)
!15751 = !DILocation(line: 1115, column: 34, scope: !15705, inlinedAt: !15718)
!15752 = !DILocation(line: 188, column: 14, scope: !15688)
!15753 = !DILocation(line: 189, column: 6, scope: !15688)
!15754 = distinct !DISubprogram(name: "drop<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::alloc::Global>", linkageName: "_ZN99_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha7ce146287e506ffE", scope: !1817, file: !1304, line: 1640, type: !15755, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1507, retainedNodes: !15757)
!15755 = !DISubroutineType(types: !15756)
!15756 = !{null, !1824}
!15757 = !{!15758, !15759, !15761}
!15758 = !DILocalVariable(name: "self", arg: 1, scope: !15754, file: !1304, line: 1640, type: !1824)
!15759 = !DILocalVariable(name: "kv", scope: !15760, file: !1304, line: 1654, type: !1829, align: 8)
!15760 = distinct !DILexicalBlock(scope: !15754, file: !1304, line: 1654, column: 48)
!15761 = !DILocalVariable(name: "guard", scope: !15762, file: !1304, line: 1655, type: !1821, align: 8)
!15762 = distinct !DILexicalBlock(scope: !15760, file: !1304, line: 1655, column: 13)
!15763 = !DILocation(line: 1640, column: 13, scope: !15754)
!15764 = !DILocation(line: 1654, column: 24, scope: !15760)
!15765 = !DILocation(line: 1655, column: 17, scope: !15762)
!15766 = !DILocation(line: 1654, column: 9, scope: !15754)
!15767 = !DILocation(line: 1654, column: 30, scope: !15760)
!15768 = !DILocation(line: 1654, column: 19, scope: !15760)
!15769 = !DILocation(line: 1655, column: 25, scope: !15760)
!15770 = !DILocation(line: 1657, column: 22, scope: !15762)
!15771 = !DILocation(line: 1660, column: 6, scope: !15754)
!15772 = !DILocation(line: 1659, column: 9, scope: !15760)
!15773 = !DILocation(line: 1640, column: 5, scope: !15754)
!15774 = distinct !DISubprogram(name: "next_reject<core::str::{impl#0}::trim::{closure_env#0}>", linkageName: "_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$11next_reject17hd5a39d2be4573d4fE", scope: !15775, file: !669, line: 756, type: !1273, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !1296, retainedNodes: !15776)
!15775 = !DINamespace(name: "{impl#23}", scope: !671)
!15776 = !{!15777}
!15777 = !DILocalVariable(name: "self", arg: 1, scope: !15774, file: !669, line: 756, type: !1292)
!15778 = !DILocation(line: 756, column: 24, scope: !15774)
!15779 = !DILocation(line: 757, column: 13, scope: !15774)
!15780 = !DILocation(line: 758, column: 10, scope: !15774)
!15781 = distinct !DISubprogram(name: "main", linkageName: "_ZN18build_script_build4main17hb5f2302d848edaccE", scope: !7023, file: !4178, line: 48, type: !21, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagMainSubprogram, unit: !205, templateParams: !23, retainedNodes: !15782)
!15782 = !{!15783, !15785, !15786, !15788, !15790, !15792, !15794, !15796, !15798, !15800, !15802, !15804, !15806, !15807, !15809, !15811, !15813, !15815, !15817, !15818, !15820, !15821, !15823, !15824, !15826, !15827, !15829, !15831, !15833, !15835, !15836}
!15783 = !DILocalVariable(name: "rustc_minor_ver", scope: !15784, file: !4178, line: 52, type: !351, align: 4)
!15784 = distinct !DILexicalBlock(scope: !15781, file: !4178, line: 52, column: 5)
!15785 = !DILocalVariable(name: "_is_nightly", scope: !15784, file: !4178, line: 52, type: !1159, align: 1)
!15786 = !DILocalVariable(name: "rustc_dep_of_std", scope: !15787, file: !4178, line: 53, type: !1159, align: 1)
!15787 = distinct !DILexicalBlock(scope: !15784, file: !4178, line: 53, column: 5)
!15788 = !DILocalVariable(name: "libc_ci", scope: !15789, file: !4178, line: 54, type: !1159, align: 1)
!15789 = distinct !DILexicalBlock(scope: !15787, file: !4178, line: 54, column: 5)
!15790 = !DILocalVariable(name: "target_env", scope: !15791, file: !4178, line: 55, type: !312, align: 8)
!15791 = distinct !DILexicalBlock(scope: !15789, file: !4178, line: 55, column: 5)
!15792 = !DILocalVariable(name: "target_os", scope: !15793, file: !4178, line: 56, type: !312, align: 8)
!15793 = distinct !DILexicalBlock(scope: !15791, file: !4178, line: 56, column: 5)
!15794 = !DILocalVariable(name: "target_ptr_width", scope: !15795, file: !4178, line: 57, type: !312, align: 8)
!15795 = distinct !DILexicalBlock(scope: !15793, file: !4178, line: 57, column: 5)
!15796 = !DILocalVariable(name: "target_arch", scope: !15797, file: !4178, line: 58, type: !312, align: 8)
!15797 = distinct !DILexicalBlock(scope: !15795, file: !4178, line: 58, column: 5)
!15798 = !DILocalVariable(name: "which_freebsd", scope: !15799, file: !4178, line: 67, type: !62, align: 4)
!15799 = distinct !DILexicalBlock(scope: !15797, file: !4178, line: 67, column: 5)
!15800 = !DILocalVariable(name: "version", scope: !15801, file: !4178, line: 67, type: !312, align: 8)
!15801 = distinct !DILexicalBlock(scope: !15797, file: !4178, line: 67, column: 93)
!15802 = !DILocalVariable(name: "vers", scope: !15803, file: !4178, line: 68, type: !62, align: 4)
!15803 = distinct !DILexicalBlock(scope: !15801, file: !4178, line: 68, column: 9)
!15804 = !DILocalVariable(name: "x", scope: !15805, file: !4178, line: 80, type: !62, align: 4)
!15805 = distinct !DILexicalBlock(scope: !15799, file: !4178, line: 80, column: 9)
!15806 = !DILocalVariable(name: "x", scope: !15805, file: !4178, line: 80, type: !3043, align: 8)
!15807 = !DILocalVariable(name: "v", scope: !15808, file: !4178, line: 90, type: !190, align: 8)
!15808 = distinct !DILexicalBlock(scope: !15799, file: !4178, line: 90, column: 9)
!15809 = !DILocalVariable(name: "v", scope: !15808, file: !4178, line: 90, type: !15810, align: 8)
!15810 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !190, size: 64, align: 64, dwarfAddressSpace: 0)
!15811 = !DILocalVariable(name: "musl_v1_2_3", scope: !15812, file: !4178, line: 95, type: !1159, align: 1)
!15812 = distinct !DILexicalBlock(scope: !15799, file: !4178, line: 95, column: 5)
!15813 = !DILocalVariable(name: "linux_time_bits64", scope: !15814, file: !4178, line: 102, type: !1159, align: 1)
!15814 = distinct !DILexicalBlock(scope: !15812, file: !4178, line: 102, column: 5)
!15815 = !DILocalVariable(name: "val", scope: !15816, file: !4178, line: 116, type: !312, align: 8)
!15816 = distinct !DILexicalBlock(scope: !15814, file: !4178, line: 116, column: 13)
!15817 = !DILocalVariable(name: "val", scope: !15816, file: !4178, line: 116, type: !311, align: 8)
!15818 = !DILocalVariable(name: "val", scope: !15819, file: !4178, line: 121, type: !312, align: 8)
!15819 = distinct !DILexicalBlock(scope: !15814, file: !4178, line: 121, column: 13)
!15820 = !DILocalVariable(name: "val", scope: !15819, file: !4178, line: 121, type: !311, align: 8)
!15821 = !DILocalVariable(name: "val", scope: !15822, file: !4178, line: 126, type: !312, align: 8)
!15822 = distinct !DILexicalBlock(scope: !15814, file: !4178, line: 126, column: 21)
!15823 = !DILocalVariable(name: "val", scope: !15822, file: !4178, line: 126, type: !311, align: 8)
!15824 = !DILocalVariable(name: "val", scope: !15825, file: !4178, line: 129, type: !312, align: 8)
!15825 = distinct !DILexicalBlock(scope: !15814, file: !4178, line: 129, column: 21)
!15826 = !DILocalVariable(name: "val", scope: !15825, file: !4178, line: 129, type: !311, align: 8)
!15827 = !DILocalVariable(name: "iter", scope: !15828, file: !4178, line: 153, type: !472, align: 8)
!15828 = distinct !DILexicalBlock(scope: !15814, file: !4178, line: 153, column: 9)
!15829 = !DILocalVariable(name: "cfg", scope: !15830, file: !4178, line: 153, type: !199, align: 8)
!15830 = distinct !DILexicalBlock(scope: !15828, file: !4178, line: 153, column: 33)
!15831 = !DILocalVariable(name: "iter", scope: !15832, file: !4178, line: 160, type: !6356, align: 8)
!15832 = distinct !DILexicalBlock(scope: !15814, file: !4178, line: 160, column: 9)
!15833 = !DILocalVariable(name: "name", scope: !15834, file: !4178, line: 160, type: !137, align: 8)
!15834 = distinct !DILexicalBlock(scope: !15832, file: !4178, line: 160, column: 48)
!15835 = !DILocalVariable(name: "values", scope: !15834, file: !4178, line: 160, type: !2068, align: 8)
!15836 = !DILocalVariable(name: "values", scope: !15837, file: !4178, line: 161, type: !312, align: 8)
!15837 = distinct !DILexicalBlock(scope: !15834, file: !4178, line: 161, column: 13)
!15838 = !DILocation(line: 55, column: 9, scope: !15791)
!15839 = !DILocation(line: 56, column: 9, scope: !15793)
!15840 = !DILocation(line: 57, column: 9, scope: !15795)
!15841 = !DILocation(line: 58, column: 9, scope: !15797)
!15842 = !DILocation(line: 67, column: 9, scope: !15799)
!15843 = !DILocation(line: 67, column: 35, scope: !15801)
!15844 = !DILocation(line: 68, column: 13, scope: !15803)
!15845 = !DILocation(line: 116, column: 16, scope: !15816)
!15846 = !DILocation(line: 121, column: 16, scope: !15819)
!15847 = !DILocation(line: 126, column: 24, scope: !15822)
!15848 = !DILocation(line: 129, column: 24, scope: !15825)
!15849 = !DILocation(line: 153, column: 20, scope: !15828)
!15850 = !DILocation(line: 153, column: 13, scope: !15830)
!15851 = !DILocation(line: 160, column: 32, scope: !15832)
!15852 = !DILocation(line: 160, column: 15, scope: !15834)
!15853 = !DILocation(line: 161, column: 17, scope: !15837)
!15854 = !DILocation(line: 50, column: 5, scope: !15781)
!15855 = !DILocation(line: 52, column: 42, scope: !15781)
!15856 = !DILocation(line: 52, column: 10, scope: !15781)
!15857 = !DILocation(line: 52, column: 10, scope: !15784)
!15858 = !DILocation(line: 52, column: 27, scope: !15781)
!15859 = !DILocation(line: 52, column: 27, scope: !15784)
!15860 = !DILocation(line: 53, column: 28, scope: !15784)
!15861 = !DILocation(line: 53, column: 78, scope: !15784)
!15862 = !DILocation(line: 53, column: 9, scope: !15787)
!15863 = !DILocation(line: 48, column: 1, scope: !15781)
!15864 = !DILocation(line: 54, column: 19, scope: !15787)
!15865 = !DILocation(line: 54, column: 46, scope: !15787)
!15866 = !DILocation(line: 54, column: 9, scope: !15789)
!15867 = !DILocation(line: 55, column: 22, scope: !15789)
!15868 = !DILocation(line: 56, column: 21, scope: !15791)
!15869 = !DILocation(line: 169, column: 1, scope: !15789)
!15870 = !DILocation(line: 57, column: 28, scope: !15793)
!15871 = !DILocation(line: 169, column: 1, scope: !15791)
!15872 = !DILocation(line: 58, column: 23, scope: !15795)
!15873 = !DILocation(line: 169, column: 1, scope: !15793)
!15874 = !DILocation(line: 65, column: 5, scope: !15797)
!15875 = !DILocation(line: 169, column: 1, scope: !15795)
!15876 = !DILocation(line: 67, column: 46, scope: !15801)
!15877 = !DILocation(line: 67, column: 32, scope: !15801)
!15878 = !DILocation(line: 68, column: 20, scope: !15801)
!15879 = !DILocation(line: 71, column: 15, scope: !15797)
!15880 = !DILocation(line: 73, column: 15, scope: !15797)
!15881 = !DILocation(line: 72, column: 9, scope: !15797)
!15882 = !DILocation(line: 77, column: 6, scope: !15797)
!15883 = !DILocation(line: 76, column: 9, scope: !15797)
!15884 = !DILocation(line: 73, column: 12, scope: !15797)
!15885 = !DILocation(line: 74, column: 9, scope: !15797)
!15886 = !DILocation(line: 71, column: 5, scope: !15797)
!15887 = !DILocation(line: 69, column: 9, scope: !15803)
!15888 = !DILocation(line: 70, column: 9, scope: !15803)
!15889 = !DILocation(line: 80, column: 9, scope: !15799)
!15890 = !DILocation(line: 80, column: 9, scope: !15805)
!15891 = !DILocation(line: 80, column: 14, scope: !15799)
!15892 = !DILocation(line: 79, column: 5, scope: !15799)
!15893 = !DILocation(line: 80, column: 24, scope: !15805)
!15894 = !DILocation(line: 86, column: 14, scope: !15799)
!15895 = !DILocation(line: 81, column: 15, scope: !15799)
!15896 = !DILocation(line: 82, column: 15, scope: !15799)
!15897 = !DILocation(line: 83, column: 15, scope: !15799)
!15898 = !DILocation(line: 84, column: 15, scope: !15799)
!15899 = !DILocation(line: 85, column: 15, scope: !15799)
!15900 = !DILocation(line: 89, column: 11, scope: !15799)
!15901 = !DILocation(line: 89, column: 5, scope: !15799)
!15902 = !DILocation(line: 90, column: 14, scope: !15799)
!15903 = !DILocation(line: 90, column: 14, scope: !15808)
!15904 = !DILocation(line: 90, column: 21, scope: !15799)
!15905 = !DILocation(line: 90, column: 20, scope: !15799)
!15906 = !DILocation(line: 95, column: 23, scope: !15799)
!15907 = !DILocation(line: 90, column: 35, scope: !15808)
!15908 = !DILocation(line: 95, column: 73, scope: !15799)
!15909 = !DILocation(line: 95, column: 9, scope: !15812)
!15910 = !DILocation(line: 96, column: 5, scope: !15812)
!15911 = !DILocation(line: 98, column: 8, scope: !15812)
!15912 = !DILocation(line: 98, column: 23, scope: !15812)
!15913 = !DILocation(line: 98, column: 55, scope: !15812)
!15914 = !DILocation(line: 102, column: 29, scope: !15812)
!15915 = !DILocation(line: 100, column: 9, scope: !15812)
!15916 = !DILocation(line: 102, column: 85, scope: !15812)
!15917 = !DILocation(line: 102, column: 9, scope: !15814)
!15918 = !DILocation(line: 103, column: 5, scope: !15814)
!15919 = !DILocation(line: 104, column: 8, scope: !15814)
!15920 = !DILocation(line: 107, column: 5, scope: !15814)
!15921 = !DILocation(line: 105, column: 9, scope: !15814)
!15922 = !DILocation(line: 108, column: 5, scope: !15814)
!15923 = !DILocation(line: 109, column: 8, scope: !15814)
!15924 = !DILocation(line: 110, column: 12, scope: !15814)
!15925 = !DILocation(line: 111, column: 12, scope: !15814)
!15926 = !DILocation(line: 112, column: 12, scope: !15814)
!15927 = !DILocation(line: 113, column: 12, scope: !15814)
!15928 = !DILocation(line: 138, column: 8, scope: !15814)
!15929 = !DILocation(line: 115, column: 15, scope: !15814)
!15930 = !DILocation(line: 115, column: 9, scope: !15814)
!15931 = !DILocation(line: 116, column: 16, scope: !15814)
!15932 = !DILocation(line: 116, column: 24, scope: !15814)
!15933 = !DILocation(line: 125, column: 23, scope: !15814)
!15934 = !DILocation(line: 136, column: 5, scope: !15814)
!15935 = !DILocation(line: 121, column: 16, scope: !15814)
!15936 = !DILocation(line: 121, column: 24, scope: !15814)
!15937 = !DILocation(line: 117, column: 17, scope: !15816)
!15938 = !DILocation(line: 120, column: 13, scope: !15814)
!15939 = !DILocation(line: 118, column: 17, scope: !15816)
!15940 = !DILocation(line: 119, column: 17, scope: !15816)
!15941 = !DILocation(line: 122, column: 17, scope: !15819)
!15942 = !DILocation(line: 123, column: 13, scope: !15814)
!15943 = !DILocation(line: 125, column: 17, scope: !15814)
!15944 = !DILocation(line: 126, column: 24, scope: !15814)
!15945 = !DILocation(line: 126, column: 32, scope: !15814)
!15946 = !DILocation(line: 134, column: 13, scope: !15814)
!15947 = !DILocation(line: 129, column: 24, scope: !15814)
!15948 = !DILocation(line: 129, column: 32, scope: !15814)
!15949 = !DILocation(line: 127, column: 25, scope: !15822)
!15950 = !DILocation(line: 128, column: 21, scope: !15814)
!15951 = !DILocation(line: 130, column: 25, scope: !15825)
!15952 = !DILocation(line: 131, column: 21, scope: !15814)
!15953 = !DILocation(line: 109, column: 5, scope: !15814)
!15954 = !DILocation(line: 143, column: 8, scope: !15814)
!15955 = !DILocation(line: 139, column: 9, scope: !15814)
!15956 = !DILocation(line: 148, column: 5, scope: !15814)
!15957 = !DILocation(line: 144, column: 9, scope: !15814)
!15958 = !DILocation(line: 152, column: 8, scope: !15814)
!15959 = !DILocation(line: 153, column: 20, scope: !15814)
!15960 = !DILocation(line: 153, column: 9, scope: !15828)
!15961 = !DILocation(line: 160, column: 32, scope: !15814)
!15962 = !DILocation(line: 153, column: 13, scope: !15828)
!15963 = !DILocation(line: 154, column: 16, scope: !15830)
!15964 = !DILocation(line: 157, column: 17, scope: !15830)
!15965 = !DILocation(line: 155, column: 17, scope: !15830)
!15966 = !DILocation(line: 160, column: 9, scope: !15832)
!15967 = !DILocation(line: 160, column: 15, scope: !15832)
!15968 = !DILocation(line: 160, column: 21, scope: !15832)
!15969 = !DILocation(line: 160, column: 21, scope: !15834)
!15970 = !DILocation(line: 161, column: 26, scope: !15834)
!15971 = !DILocation(line: 162, column: 16, scope: !15837)
!15972 = !DILocation(line: 165, column: 17, scope: !15837)
!15973 = !DILocation(line: 163, column: 17, scope: !15837)
!15974 = !DILocation(line: 167, column: 9, scope: !15834)
!15975 = !DILocation(line: 169, column: 2, scope: !15781)
!15976 = distinct !DISubprogram(name: "rustc_version_cmd", linkageName: "_ZN18build_script_build17rustc_version_cmd17hb9ba91e067814cb6E", scope: !7023, file: !4178, line: 173, type: !15977, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !15979)
!15977 = !DISubroutineType(types: !15978)
!15978 = !{!3647, !1159}
!15979 = !{!15980, !15981, !15983, !15985, !15987, !15989, !15991, !15993}
!15980 = !DILocalVariable(name: "is_clippy_driver", arg: 1, scope: !15976, file: !4178, line: 173, type: !1159)
!15981 = !DILocalVariable(name: "rustc", scope: !15982, file: !4178, line: 174, type: !1376, align: 8)
!15982 = distinct !DILexicalBlock(scope: !15976, file: !4178, line: 174, column: 5)
!15983 = !DILocalVariable(name: "cmd", scope: !15984, file: !4178, line: 176, type: !2589, align: 8)
!15984 = distinct !DILexicalBlock(scope: !15982, file: !4178, line: 176, column: 5)
!15985 = !DILocalVariable(name: "wrapper", scope: !15986, file: !4178, line: 177, type: !13712, align: 8)
!15986 = distinct !DILexicalBlock(scope: !15982, file: !4178, line: 177, column: 9)
!15987 = !DILocalVariable(name: "wrapper", scope: !15986, file: !4178, line: 177, type: !15988, align: 8)
!15988 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&std::ffi::os_str::OsString", baseType: !13712, size: 64, align: 64, dwarfAddressSpace: 0)
!15989 = !DILocalVariable(name: "wrapper", scope: !15990, file: !4178, line: 178, type: !1376, align: 8)
!15990 = distinct !DILexicalBlock(scope: !15982, file: !4178, line: 178, column: 9)
!15991 = !DILocalVariable(name: "cmd", scope: !15992, file: !4178, line: 179, type: !2589, align: 8)
!15992 = distinct !DILexicalBlock(scope: !15990, file: !4178, line: 179, column: 13)
!15993 = !DILocalVariable(name: "output", scope: !15994, file: !4178, line: 192, type: !3647, align: 8)
!15994 = distinct !DILexicalBlock(scope: !15984, file: !4178, line: 192, column: 5)
!15995 = !DILocation(line: 192, column: 9, scope: !15994)
!15996 = !DILocation(line: 173, column: 22, scope: !15976)
!15997 = !DILocation(line: 174, column: 9, scope: !15982)
!15998 = !DILocation(line: 176, column: 9, scope: !15984)
!15999 = !DILocation(line: 177, column: 14, scope: !15986)
!16000 = !DILocation(line: 178, column: 14, scope: !15990)
!16001 = !DILocation(line: 179, column: 17, scope: !15992)
!16002 = !DILocation(line: 174, column: 9, scope: !15976)
!16003 = !DILocation(line: 174, column: 17, scope: !15976)
!16004 = !DILocation(line: 174, column: 93, scope: !15976)
!16005 = !DILocation(line: 176, column: 25, scope: !15982)
!16006 = !DILocation(line: 201, column: 1, scope: !15976)
!16007 = !DILocation(line: 176, column: 19, scope: !15982)
!16008 = !DILocation(line: 187, column: 30, scope: !15982)
!16009 = !DILocation(line: 187, column: 17, scope: !15982)
!16010 = !DILocation(line: 177, column: 14, scope: !15982)
!16011 = !DILocation(line: 177, column: 30, scope: !15982)
!16012 = !DILocation(line: 188, column: 6, scope: !15982)
!16013 = !DILocation(line: 178, column: 14, scope: !15982)
!16014 = !DILocation(line: 179, column: 40, scope: !15990)
!16015 = !DILocation(line: 179, column: 27, scope: !15990)
!16016 = !DILocation(line: 177, column: 65, scope: !15986)
!16017 = !DILocation(line: 177, column: 52, scope: !15986)
!16018 = !DILocation(line: 180, column: 21, scope: !15992)
!16019 = !DILocation(line: 180, column: 13, scope: !15992)
!16020 = !DILocation(line: 186, column: 9, scope: !15990)
!16021 = !DILocation(line: 181, column: 16, scope: !15992)
!16022 = !DILocation(line: 185, column: 13, scope: !15992)
!16023 = !DILocation(line: 186, column: 9, scope: !15982)
!16024 = !DILocation(line: 182, column: 17, scope: !15992)
!16025 = !DILocation(line: 173, column: 1, scope: !15976)
!16026 = !DILocation(line: 190, column: 5, scope: !15984)
!16027 = !DILocation(line: 201, column: 1, scope: !15982)
!16028 = !DILocation(line: 192, column: 18, scope: !15984)
!16029 = !DILocation(line: 195, column: 9, scope: !15994)
!16030 = !DILocation(line: 201, column: 1, scope: !15984)
!16031 = !DILocation(line: 194, column: 5, scope: !15994)
!16032 = !DILocation(line: 197, column: 33, scope: !15994)
!16033 = !DILocation(line: 197, column: 9, scope: !15994)
!16034 = !DILocation(line: 201, column: 2, scope: !15976)
!16035 = distinct !DISubprogram(name: "rustc_minor_nightly", linkageName: "_ZN18build_script_build19rustc_minor_nightly17hb15468b437acd172E", scope: !7023, file: !4178, line: 205, type: !16036, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !16042)
!16036 = !DISubroutineType(types: !16037)
!16037 = !{!16038}
!16038 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u32, bool)", file: !2, size: 64, align: 32, elements: !16039, templateParams: !23, identifier: "84eb7d995964264847e4a7fba45ab164")
!16039 = !{!16040, !16041}
!16040 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !16038, file: !2, baseType: !351, size: 32, align: 32)
!16041 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !16038, file: !2, baseType: !1159, size: 8, align: 8, offset: 32)
!16042 = !{!16043, !16045, !16047, !16049, !16051, !16053, !16056, !16057, !16060, !16062, !16064, !16066, !16068, !16070, !16072}
!16043 = !DILocalVariable(name: "output", scope: !16044, file: !4178, line: 215, type: !3647, align: 8)
!16044 = distinct !DILexicalBlock(scope: !16035, file: !4178, line: 215, column: 5)
!16045 = !DILocalVariable(name: "e", scope: !16046, file: !4178, line: 217, type: !137, align: 8)
!16046 = distinct !DILexicalBlock(scope: !16044, file: !4178, line: 209, column: 17)
!16047 = !DILocalVariable(name: "version", scope: !16048, file: !4178, line: 221, type: !137, align: 8)
!16048 = distinct !DILexicalBlock(scope: !16044, file: !4178, line: 221, column: 5)
!16049 = !DILocalVariable(name: "e", scope: !16050, file: !4178, line: 221, type: !137, align: 8)
!16050 = distinct !DILexicalBlock(scope: !16044, file: !4178, line: 209, column: 17)
!16051 = !DILocalVariable(name: "pieces", scope: !16052, file: !4178, line: 223, type: !4586, align: 8)
!16052 = distinct !DILexicalBlock(scope: !16048, file: !4178, line: 223, column: 5)
!16053 = !DILocalVariable(name: "left_val", scope: !16054, file: !4178, line: 225, type: !175, align: 8)
!16054 = !DILexicalBlockFile(scope: !16055, file: !4178, discriminator: 0)
!16055 = distinct !DILexicalBlock(scope: !16052, file: !12306, line: 52, column: 13)
!16056 = !DILocalVariable(name: "right_val", scope: !16054, file: !4178, line: 225, type: !175, align: 8)
!16057 = !DILocalVariable(name: "kind", scope: !16058, file: !4178, line: 225, type: !292, align: 1)
!16058 = !DILexicalBlockFile(scope: !16059, file: !4178, discriminator: 0)
!16059 = distinct !DILexicalBlock(scope: !16055, file: !12306, line: 54, column: 21)
!16060 = !DILocalVariable(name: "minor", scope: !16061, file: !4178, line: 231, type: !176, align: 8)
!16061 = distinct !DILexicalBlock(scope: !16052, file: !4178, line: 231, column: 5)
!16062 = !DILocalVariable(name: "nightly_raw", scope: !16063, file: !4178, line: 238, type: !176, align: 8)
!16063 = distinct !DILexicalBlock(scope: !16061, file: !4178, line: 238, column: 5)
!16064 = !DILocalVariable(name: "e", scope: !16065, file: !4178, line: 238, type: !137, align: 8)
!16065 = distinct !DILexicalBlock(scope: !16061, file: !4178, line: 209, column: 17)
!16066 = !DILocalVariable(name: "nightly", scope: !16067, file: !4178, line: 239, type: !1159, align: 1)
!16067 = distinct !DILexicalBlock(scope: !16063, file: !4178, line: 239, column: 5)
!16068 = !DILocalVariable(name: "minor", scope: !16069, file: !4178, line: 242, type: !351, align: 4)
!16069 = distinct !DILexicalBlock(scope: !16067, file: !4178, line: 242, column: 5)
!16070 = !DILocalVariable(name: "e", scope: !16071, file: !4178, line: 242, type: !137, align: 8)
!16071 = distinct !DILexicalBlock(scope: !16067, file: !4178, line: 209, column: 17)
!16072 = !DILocalVariable(name: "e", scope: !16073, file: !4178, line: 242, type: !351, align: 4)
!16073 = distinct !DILexicalBlock(scope: !16067, file: !4178, line: 209, column: 17)
!16074 = !DILocation(line: 215, column: 9, scope: !16044)
!16075 = !DILocation(line: 223, column: 9, scope: !16052)
!16076 = !DILocation(line: 225, column: 5, scope: !16058)
!16077 = !DILocation(line: 231, column: 9, scope: !16061)
!16078 = !DILocation(line: 215, column: 22, scope: !16035)
!16079 = !DILocation(line: 217, column: 29, scope: !16044)
!16080 = !DILocation(line: 245, column: 1, scope: !16035)
!16081 = !DILocation(line: 217, column: 14, scope: !16044)
!16082 = !DILocation(line: 217, column: 8, scope: !16044)
!16083 = !DILocation(line: 217, column: 8, scope: !16046)
!16084 = !DILocation(line: 221, column: 40, scope: !16044)
!16085 = !DILocation(line: 218, column: 18, scope: !16044)
!16086 = !DILocation(line: 218, column: 9, scope: !16044)
!16087 = !DILocation(line: 217, column: 5, scope: !16044)
!16088 = !DILocation(line: 221, column: 25, scope: !16044)
!16089 = !DILocation(line: 221, column: 19, scope: !16044)
!16090 = !DILocation(line: 221, column: 19, scope: !16050)
!16091 = !DILocation(line: 221, column: 9, scope: !16048)
!16092 = !DILocation(line: 223, column: 22, scope: !16048)
!16093 = !DILocation(line: 226, column: 9, scope: !16052)
!16094 = !DILocation(line: 225, column: 5, scope: !16052)
!16095 = !DILocation(line: 225, column: 5, scope: !16054)
!16096 = !DILocation(line: 231, column: 17, scope: !16052)
!16097 = !DILocation(line: 238, column: 29, scope: !16061)
!16098 = !DILocation(line: 238, column: 23, scope: !16061)
!16099 = !DILocation(line: 238, column: 23, scope: !16065)
!16100 = !DILocation(line: 238, column: 9, scope: !16063)
!16101 = !DILocation(line: 239, column: 19, scope: !16063)
!16102 = !DILocation(line: 239, column: 9, scope: !16067)
!16103 = !DILocation(line: 242, column: 29, scope: !16067)
!16104 = !DILocation(line: 242, column: 23, scope: !16067)
!16105 = !DILocation(line: 242, column: 23, scope: !16071)
!16106 = !DILocation(line: 242, column: 17, scope: !16067)
!16107 = !DILocation(line: 242, column: 17, scope: !16073)
!16108 = !DILocation(line: 242, column: 9, scope: !16069)
!16109 = !DILocation(line: 244, column: 5, scope: !16069)
!16110 = !DILocation(line: 245, column: 2, scope: !16035)
!16111 = !DILocation(line: 205, column: 1, scope: !16035)
!16112 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN18build_script_build19rustc_minor_nightly28_$u7b$$u7b$closure$u7d$$u7d$17hec1514df9de4aa18E", scope: !7022, file: !4178, line: 239, type: !16113, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !16115)
!16113 = !DISubroutineType(types: !16114)
!16114 = !{!1159, !7021, !137}
!16115 = !{!16116, !16117}
!16116 = !DILocalVariable(name: "raw", arg: 2, scope: !16112, file: !4178, line: 239, type: !137)
!16117 = !DILocalVariable(arg: 1, scope: !16112, file: !4178, line: 239, type: !7021)
!16118 = !DILocation(line: 239, column: 45, scope: !16112)
!16119 = !DILocation(line: 239, column: 46, scope: !16112)
!16120 = !DILocation(line: 240, column: 9, scope: !16112)
!16121 = !DILocation(line: 240, column: 35, scope: !16112)
!16122 = !DILocation(line: 239, column: 50, scope: !16112)
!16123 = distinct !DISubprogram(name: "which_freebsd", linkageName: "_ZN18build_script_build13which_freebsd17h13ef436e259eb0a7E", scope: !7023, file: !4178, line: 247, type: !16124, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !16126)
!16124 = !DISubroutineType(types: !16125)
!16125 = !{!2777}
!16126 = !{!16127, !16129, !16131, !16133, !16135, !16137, !16139, !16141, !16143, !16145, !16146, !16148, !16149, !16151, !16152, !16154, !16155, !16157}
!16127 = !DILocalVariable(name: "output", scope: !16128, file: !4178, line: 248, type: !3647, align: 8)
!16128 = distinct !DILexicalBlock(scope: !16123, file: !4178, line: 248, column: 5)
!16129 = !DILocalVariable(name: "residual", scope: !16130, file: !4178, line: 248, type: !4069, align: 1)
!16130 = distinct !DILexicalBlock(scope: !16123, file: !4178, line: 248, column: 63)
!16131 = !DILocalVariable(name: "val", scope: !16132, file: !4178, line: 248, type: !3647, align: 8)
!16132 = distinct !DILexicalBlock(scope: !16123, file: !4178, line: 248, column: 18)
!16133 = !DILocalVariable(name: "stdout", scope: !16134, file: !4178, line: 253, type: !312, align: 8)
!16134 = distinct !DILexicalBlock(scope: !16128, file: !4178, line: 253, column: 5)
!16135 = !DILocalVariable(name: "residual", scope: !16136, file: !4178, line: 253, type: !4069, align: 1)
!16136 = distinct !DILexicalBlock(scope: !16128, file: !4178, line: 253, column: 55)
!16137 = !DILocalVariable(name: "val", scope: !16138, file: !4178, line: 253, type: !312, align: 8)
!16138 = distinct !DILexicalBlock(scope: !16128, file: !4178, line: 253, column: 18)
!16139 = !DILocalVariable(name: "s", scope: !16140, file: !4178, line: 256, type: !311, align: 8)
!16140 = distinct !DILexicalBlock(scope: !16134, file: !4178, line: 256, column: 9)
!16141 = !DILocalVariable(name: "s", scope: !16140, file: !4178, line: 256, type: !16142, align: 8)
!16142 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&alloc::string::String", baseType: !311, size: 64, align: 64, dwarfAddressSpace: 0)
!16143 = !DILocalVariable(name: "s", scope: !16144, file: !4178, line: 257, type: !311, align: 8)
!16144 = distinct !DILexicalBlock(scope: !16134, file: !4178, line: 257, column: 9)
!16145 = !DILocalVariable(name: "s", scope: !16144, file: !4178, line: 257, type: !16142, align: 8)
!16146 = !DILocalVariable(name: "s", scope: !16147, file: !4178, line: 258, type: !311, align: 8)
!16147 = distinct !DILexicalBlock(scope: !16134, file: !4178, line: 258, column: 9)
!16148 = !DILocalVariable(name: "s", scope: !16147, file: !4178, line: 258, type: !16142, align: 8)
!16149 = !DILocalVariable(name: "s", scope: !16150, file: !4178, line: 259, type: !311, align: 8)
!16150 = distinct !DILexicalBlock(scope: !16134, file: !4178, line: 259, column: 9)
!16151 = !DILocalVariable(name: "s", scope: !16150, file: !4178, line: 259, type: !16142, align: 8)
!16152 = !DILocalVariable(name: "s", scope: !16153, file: !4178, line: 260, type: !311, align: 8)
!16153 = distinct !DILexicalBlock(scope: !16134, file: !4178, line: 260, column: 9)
!16154 = !DILocalVariable(name: "s", scope: !16153, file: !4178, line: 260, type: !16142, align: 8)
!16155 = !DILocalVariable(name: "s", scope: !16156, file: !4178, line: 261, type: !311, align: 8)
!16156 = distinct !DILexicalBlock(scope: !16134, file: !4178, line: 261, column: 9)
!16157 = !DILocalVariable(name: "s", scope: !16156, file: !4178, line: 261, type: !16142, align: 8)
!16158 = !DILocation(line: 248, column: 9, scope: !16128)
!16159 = !DILocation(line: 248, column: 63, scope: !16130)
!16160 = !DILocation(line: 248, column: 18, scope: !16132)
!16161 = !DILocation(line: 253, column: 9, scope: !16134)
!16162 = !DILocation(line: 253, column: 55, scope: !16136)
!16163 = !DILocation(line: 253, column: 18, scope: !16138)
!16164 = !DILocation(line: 248, column: 9, scope: !16123)
!16165 = !DILocation(line: 248, column: 18, scope: !16123)
!16166 = !DILocation(line: 248, column: 64, scope: !16123)
!16167 = !DILocation(line: 248, column: 18, scope: !16130)
!16168 = !DILocation(line: 247, column: 1, scope: !16123)
!16169 = !DILocation(line: 264, column: 1, scope: !16123)
!16170 = !DILocation(line: 264, column: 2, scope: !16123)
!16171 = !DILocation(line: 249, column: 9, scope: !16128)
!16172 = !DILocation(line: 249, column: 8, scope: !16128)
!16173 = !DILocation(line: 253, column: 36, scope: !16128)
!16174 = !DILocation(line: 253, column: 18, scope: !16128)
!16175 = !DILocation(line: 250, column: 16, scope: !16128)
!16176 = !DILocation(line: 1, column: 1, scope: !16128)
!16177 = !DILocation(line: 255, column: 11, scope: !16134)
!16178 = !DILocation(line: 256, column: 9, scope: !16134)
!16179 = !DILocation(line: 256, column: 9, scope: !16140)
!16180 = !DILocation(line: 256, column: 14, scope: !16134)
!16181 = !DILocation(line: 253, column: 18, scope: !16136)
!16182 = !DILocation(line: 253, column: 56, scope: !16128)
!16183 = !DILocation(line: 264, column: 1, scope: !16128)
!16184 = !DILocation(line: 257, column: 9, scope: !16134)
!16185 = !DILocation(line: 257, column: 9, scope: !16144)
!16186 = !DILocation(line: 257, column: 14, scope: !16134)
!16187 = !DILocation(line: 256, column: 37, scope: !16140)
!16188 = !DILocation(line: 256, column: 44, scope: !16134)
!16189 = !DILocation(line: 258, column: 9, scope: !16134)
!16190 = !DILocation(line: 258, column: 9, scope: !16147)
!16191 = !DILocation(line: 258, column: 14, scope: !16134)
!16192 = !DILocation(line: 257, column: 37, scope: !16144)
!16193 = !DILocation(line: 257, column: 44, scope: !16134)
!16194 = !DILocation(line: 259, column: 9, scope: !16134)
!16195 = !DILocation(line: 259, column: 9, scope: !16150)
!16196 = !DILocation(line: 259, column: 14, scope: !16134)
!16197 = !DILocation(line: 258, column: 37, scope: !16147)
!16198 = !DILocation(line: 258, column: 44, scope: !16134)
!16199 = !DILocation(line: 260, column: 9, scope: !16134)
!16200 = !DILocation(line: 260, column: 9, scope: !16153)
!16201 = !DILocation(line: 260, column: 14, scope: !16134)
!16202 = !DILocation(line: 259, column: 37, scope: !16150)
!16203 = !DILocation(line: 259, column: 44, scope: !16134)
!16204 = !DILocation(line: 261, column: 9, scope: !16134)
!16205 = !DILocation(line: 261, column: 9, scope: !16156)
!16206 = !DILocation(line: 261, column: 14, scope: !16134)
!16207 = !DILocation(line: 260, column: 37, scope: !16153)
!16208 = !DILocation(line: 260, column: 44, scope: !16134)
!16209 = !DILocation(line: 262, column: 14, scope: !16134)
!16210 = !DILocation(line: 261, column: 37, scope: !16156)
!16211 = !DILocation(line: 261, column: 44, scope: !16134)
!16212 = distinct !DISubprogram(name: "emcc_version_code", linkageName: "_ZN18build_script_build17emcc_version_code17haf23270efa161601E", scope: !7023, file: !4178, line: 266, type: !16213, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !16215)
!16213 = !DISubroutineType(types: !16214)
!16214 = !{!7074}
!16215 = !{!16216, !16218, !16220, !16222, !16224, !16226, !16228, !16230, !16232, !16234, !16236}
!16216 = !DILocalVariable(name: "emcc", scope: !16217, file: !4178, line: 267, type: !137, align: 8)
!16217 = distinct !DILexicalBlock(scope: !16212, file: !4178, line: 267, column: 5)
!16218 = !DILocalVariable(name: "output", scope: !16219, file: !4178, line: 273, type: !3647, align: 8)
!16219 = distinct !DILexicalBlock(scope: !16217, file: !4178, line: 273, column: 5)
!16220 = !DILocalVariable(name: "residual", scope: !16221, file: !4178, line: 273, type: !4069, align: 1)
!16221 = distinct !DILexicalBlock(scope: !16217, file: !4178, line: 273, column: 70)
!16222 = !DILocalVariable(name: "val", scope: !16223, file: !4178, line: 273, type: !3647, align: 8)
!16223 = distinct !DILexicalBlock(scope: !16217, file: !4178, line: 273, column: 18)
!16224 = !DILocalVariable(name: "version", scope: !16225, file: !4178, line: 278, type: !312, align: 8)
!16225 = distinct !DILexicalBlock(scope: !16219, file: !4178, line: 278, column: 5)
!16226 = !DILocalVariable(name: "residual", scope: !16227, file: !4178, line: 278, type: !4069, align: 1)
!16227 = distinct !DILexicalBlock(scope: !16219, file: !4178, line: 278, column: 56)
!16228 = !DILocalVariable(name: "val", scope: !16229, file: !4178, line: 278, type: !312, align: 8)
!16229 = distinct !DILexicalBlock(scope: !16219, file: !4178, line: 278, column: 19)
!16230 = !DILocalVariable(name: "pieces", scope: !16231, file: !4178, line: 282, type: !4635, align: 8)
!16231 = distinct !DILexicalBlock(scope: !16225, file: !4178, line: 282, column: 5)
!16232 = !DILocalVariable(name: "major", scope: !16233, file: !4178, line: 284, type: !190, align: 8)
!16233 = distinct !DILexicalBlock(scope: !16231, file: !4178, line: 284, column: 5)
!16234 = !DILocalVariable(name: "minor", scope: !16235, file: !4178, line: 285, type: !190, align: 8)
!16235 = distinct !DILexicalBlock(scope: !16233, file: !4178, line: 285, column: 5)
!16236 = !DILocalVariable(name: "patch", scope: !16237, file: !4178, line: 286, type: !190, align: 8)
!16237 = distinct !DILexicalBlock(scope: !16235, file: !4178, line: 286, column: 5)
!16238 = !DILocation(line: 273, column: 9, scope: !16219)
!16239 = !DILocation(line: 273, column: 70, scope: !16221)
!16240 = !DILocation(line: 273, column: 18, scope: !16223)
!16241 = !DILocation(line: 278, column: 9, scope: !16225)
!16242 = !DILocation(line: 278, column: 56, scope: !16227)
!16243 = !DILocation(line: 278, column: 19, scope: !16229)
!16244 = !DILocation(line: 282, column: 9, scope: !16231)
!16245 = !DILocation(line: 267, column: 9, scope: !16212)
!16246 = !DILocation(line: 270, column: 9, scope: !16212)
!16247 = !DILocation(line: 267, column: 9, scope: !16217)
!16248 = !DILocation(line: 273, column: 18, scope: !16217)
!16249 = !DILocation(line: 273, column: 71, scope: !16217)
!16250 = !DILocation(line: 273, column: 18, scope: !16221)
!16251 = !DILocation(line: 266, column: 1, scope: !16212)
!16252 = !DILocation(line: 289, column: 1, scope: !16217)
!16253 = !DILocation(line: 289, column: 2, scope: !16212)
!16254 = !DILocation(line: 274, column: 9, scope: !16219)
!16255 = !DILocation(line: 274, column: 8, scope: !16219)
!16256 = !DILocation(line: 278, column: 37, scope: !16219)
!16257 = !DILocation(line: 278, column: 19, scope: !16219)
!16258 = !DILocation(line: 275, column: 16, scope: !16219)
!16259 = !DILocation(line: 1, column: 1, scope: !16219)
!16260 = !DILocation(line: 282, column: 22, scope: !16225)
!16261 = !DILocation(line: 278, column: 19, scope: !16227)
!16262 = !DILocation(line: 278, column: 57, scope: !16219)
!16263 = !DILocation(line: 289, column: 1, scope: !16219)
!16264 = !DILocation(line: 282, column: 43, scope: !16225)
!16265 = !DILocation(line: 284, column: 17, scope: !16231)
!16266 = !DILocation(line: 284, column: 9, scope: !16233)
!16267 = !DILocation(line: 285, column: 17, scope: !16233)
!16268 = !DILocation(line: 285, column: 9, scope: !16235)
!16269 = !DILocation(line: 286, column: 17, scope: !16235)
!16270 = !DILocation(line: 286, column: 9, scope: !16237)
!16271 = !DILocation(line: 288, column: 10, scope: !16237)
!16272 = !DILocation(line: 288, column: 26, scope: !16237)
!16273 = !DILocation(line: 288, column: 5, scope: !16237)
!16274 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17hd3cda77f24883d13E", scope: !7087, file: !4178, line: 284, type: !16275, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !16277)
!16275 = !DISubroutineType(types: !16276)
!16276 = !{!7074, !7132, !137}
!16277 = !{!16278, !16279}
!16278 = !DILocalVariable(name: "x", arg: 2, scope: !16274, file: !4178, line: 284, type: !137)
!16279 = !DILocalVariable(arg: 1, scope: !16274, file: !4178, line: 284, type: !7132)
!16280 = !DILocation(line: 284, column: 40, scope: !16274)
!16281 = !DILocation(line: 284, column: 41, scope: !16274)
!16282 = !DILocation(line: 284, column: 44, scope: !16274)
!16283 = !DILocation(line: 284, column: 43, scope: !16274)
!16284 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17he794c5a67bef406fE", scope: !7087, file: !4178, line: 285, type: !16285, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !16287)
!16285 = !DISubroutineType(types: !16286)
!16286 = !{!7074, !7110, !137}
!16287 = !{!16288, !16289}
!16288 = !DILocalVariable(name: "x", arg: 2, scope: !16284, file: !4178, line: 285, type: !137)
!16289 = !DILocalVariable(arg: 1, scope: !16284, file: !4178, line: 285, type: !7110)
!16290 = !DILocation(line: 285, column: 40, scope: !16284)
!16291 = !DILocation(line: 285, column: 41, scope: !16284)
!16292 = !DILocation(line: 285, column: 44, scope: !16284)
!16293 = !DILocation(line: 285, column: 43, scope: !16284)
!16294 = distinct !DISubprogram(name: "{closure#2}", linkageName: "_ZN18build_script_build17emcc_version_code28_$u7b$$u7b$closure$u7d$$u7d$17h929c6ddb3af8e2bfE", scope: !7087, file: !4178, line: 286, type: !16295, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !16297)
!16295 = !DISubroutineType(types: !16296)
!16296 = !{!7074, !7086, !137}
!16297 = !{!16298, !16299}
!16298 = !DILocalVariable(name: "x", arg: 2, scope: !16294, file: !4178, line: 286, type: !137)
!16299 = !DILocalVariable(arg: 1, scope: !16294, file: !4178, line: 286, type: !7086)
!16300 = !DILocation(line: 286, column: 40, scope: !16294)
!16301 = !DILocation(line: 286, column: 41, scope: !16294)
!16302 = !DILocation(line: 286, column: 44, scope: !16294)
!16303 = !DILocation(line: 286, column: 43, scope: !16294)
!16304 = distinct !DISubprogram(name: "set_cfg", linkageName: "_ZN18build_script_build7set_cfg17h983f56089e58545aE", scope: !7023, file: !4178, line: 291, type: !16305, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !205, templateParams: !23, retainedNodes: !16307)
!16305 = !DISubroutineType(types: !16306)
!16306 = !{null, !137}
!16307 = !{!16308}
!16308 = !DILocalVariable(name: "cfg", arg: 1, scope: !16304, file: !4178, line: 291, type: !137)
!16309 = !DILocation(line: 291, column: 12, scope: !16304)
!16310 = !DILocation(line: 293, column: 9, scope: !16304)
!16311 = !DILocation(line: 292, column: 5, scope: !16304)
!16312 = !DILocation(line: 296, column: 5, scope: !16304)
!16313 = !DILocation(line: 297, column: 2, scope: !16304)
