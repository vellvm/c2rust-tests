; ModuleID = '1hgguzirg7c3m196'
source_filename = "1hgguzirg7c3m196"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::fmt::builders::DebugList" = type { %"core::fmt::builders::DebugInner" }
%"core::fmt::builders::DebugInner" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::fmt::Opaque" = type {}
%"core::fmt::Arguments" = type { { [0 x { [0 x i8]*, i64 }]*, i64 }, { i64*, i64 }, { [0 x { i8*, i64* }]*, i64 } }
%"core::panic::location::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"[closure@src/test_uninitialized.rs:11:1: 23:2]" = type {}
%"[closure@src/test_quicksort.rs:46:1: 61:2]" = type {}
%"[closure@src/test_typedef.rs:11:1: 27:2]" = type {}
%"[closure@src/test_memory.rs:31:1: 43:2]" = type {}
%"[closure@src/test_exprs.rs:12:1: 24:2]" = type {}
%"[closure@src/test_lvalues.rs:12:1: 24:2]" = type {}
%"[closure@src/test_quicksort.rs:14:1: 28:2]" = type {}
%"[closure@src/test_shadowing.rs:14:1: 21:2]" = type {}
%"[closure@src/test_sizeofs.rs:14:1: 26:2]" = type {}
%"[closure@src/test_memory.rs:16:1: 28:2]" = type {}
%"[closure@src/test_shadowing.rs:24:1: 36:2]" = type {}
%"[closure@src/test_quicksort.rs:31:1: 43:2]" = type {}
%"[closure@src/test_uninitialized.rs:26:1: 39:2]" = type {}
%"alloc::vec::Vec<i32>" = type { { i32*, i64 }, i64 }
%"alloc::vec::Vec<[i32; 4]>" = type { { i32*, i64 }, i64 }
%"core::ptr::metadata::PtrComponents<u8>" = type { {}*, {} }
%"core::ptr::metadata::PtrRepr<u8>" = type { [1 x i64] }
%"core::alloc::layout::LayoutError" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err" = type { %"core::alloc::layout::LayoutError" }
%"core::ops::range::RangeFull" = type {}
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]" = type {}
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::alloc::AllocError" = type {}
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok" = type { {} }
%"core::option::Option<core::fmt::Arguments>" = type { {}*, [5 x i64] }
%"core::option::Option<core::fmt::Arguments>::Some" = type { %"core::fmt::Arguments" }
%"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]" = type {}
%"alloc::vec::ExtendElement<[i32; 4]>" = type { [4 x i32] }
%"alloc::alloc::Global" = type {}
%"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err" = type { %"core::alloc::AllocError" }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]" = type { i8**, i8**, i64* }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [2 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"core::ptr::metadata::PtrRepr<[i32]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrRepr<[[i32; 4]]>" = type { [2 x i64] }
%"uninitialized::u" = type { [1 x i32] }
%"uninitialized::s" = type { %"uninitialized::u", i8, [3 x i8], i32 }
%"test::types::TestDescAndFn" = type { %"test::types::TestDesc", %"test::types::TestFn" }
%"test::types::TestDesc" = type { %"test::types::TestName", { i8*, i64 }, %"test::options::ShouldPanic", i8, i8, i8, i8, [4 x i8] }
%"test::types::TestName" = type { i8, [39 x i8] }
%"test::options::ShouldPanic" = type { i64, [2 x i64] }
%"test::types::TestFn" = type { i64, [2 x i64] }
%"unwind::libunwind::_Unwind_Exception" = type { i64, void (i32, %"unwind::libunwind::_Unwind_Exception"*)*, [6 x i64] }
%"unwind::libunwind::_Unwind_Context" = type { [0 x i8] }

@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, i8*, i8* }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hff7050e790475270E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i32 (i64**)* @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hf3480924c578e713E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h9976755c369c8586E" to i8*), i8* bitcast (i32 (i64**)* @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h9976755c369c8586E" to i8*) }>, align 8, !dbg !0
@alloc694 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"()" }>, align 1
@vtable.1 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void (i32**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h55f4c3eed93eff6cE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i32**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h325bf7e19275887aE" to i8*) }>, align 8, !dbg !24
@alloc202 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc203 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc202, i32 0, i32 0, i32 0), [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc193 = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc698 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs" }>, align 1
@alloc699 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc698, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\88\01\00\00\0D\00\00\00" }>, align 8
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ([10 x i32]**)* @"_ZN4core3ptr50drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$10$u5d$$GT$17hedff71cbd66a5e9fE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ([10 x i32]**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8453208e0de1799fE" to i8*) }>, align 8, !dbg !34
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ({}**)* @"_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17hc2274c1d1ec8c39aE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({}**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h70f892cf23d84968E" to i8*) }>, align 8, !dbg !46
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ([3 x i32]**)* @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$3$u5d$$GT$17h0af8c2383515be9bE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ([3 x i32]**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h588532a1b3e46bfcE" to i8*) }>, align 8, !dbg !55
@vtable.5 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ([1 x i32]**)* @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$1$u5d$$GT$17hd984f955d0e1083dE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ([1 x i32]**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h133358f10bce4bc6E" to i8*) }>, align 8, !dbg !67
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ([5 x i32]**)* @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$5$u5d$$GT$17h55c2f46b5138ef3cE" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ([5 x i32]**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb4053abcc1bbde9bE" to i8*) }>, align 8, !dbg !79
@vtable.7 = private unnamed_addr constant <{ i8*, [16 x i8], i8* }> <{ i8* bitcast (void ([6 x i32]**)* @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$6$u5d$$GT$17hfbc5c32dc62ea6d3E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ([6 x i32]**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha853fb7d2d322f68E" to i8*) }>, align 8, !dbg !91
@alloc344 = private unnamed_addr constant <{ [4 x i8] }> zeroinitializer, align 4
@alloc209 = private unnamed_addr constant <{ [67 x i8] }> <{ [67 x i8] c"the test returned a termination value with a non-zero status code (" }>, align 1
@alloc211 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c") which indicates a failure" }>, align 1
@alloc210 = private unnamed_addr constant <{ i8*, [8 x i8], i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [67 x i8] }>, <{ [67 x i8] }>* @alloc209, i32 0, i32 0, i32 0), [8 x i8] c"C\00\00\00\00\00\00\00", i8* getelementptr inbounds (<{ [27 x i8] }>, <{ [27 x i8] }>* @alloc211, i32 0, i32 0, i32 0), [8 x i8] c"\1B\00\00\00\00\00\00\00" }>, align 8
@alloc718 = private unnamed_addr constant <{ [71 x i8] }> <{ [71 x i8] c"/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/test/src/lib.rs" }>, align 1
@alloc719 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [71 x i8] }>, <{ [71 x i8] }>* @alloc718, i32 0, i32 0, i32 0), [16 x i8] c"G\00\00\00\00\00\00\00\B8\00\00\00\05\00\00\00" }>, align 8
@alloc724 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"src/malloc.rs" }>, align 1
@alloc721 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc724, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00\1E\00\00\00\09\00\00\00" }>, align 8
@str.8 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc723 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc724, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00(\00\00\00\09\00\00\00" }>, align 8
@alloc725 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [13 x i8] }>, <{ [13 x i8] }>* @alloc724, i32 0, i32 0, i32 0), [16 x i8] c"\0D\00\00\00\00\00\00\00+\00\00\00\09\00\00\00" }>, align 8
@alloc748 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"src/sizeofs.rs" }>, align 1
@alloc727 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\C1\00\00\00)\00\00\00" }>, align 8
@str.9 = internal constant [33 x i8] c"attempt to multiply with overflow"
@alloc729 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\C1\00\00\00(\00\00\00" }>, align 8
@alloc731 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\CA\00\00\00(\00\00\00" }>, align 8
@alloc733 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\D2\00\00\00)\00\00\00" }>, align 8
@alloc735 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\D2\00\00\00(\00\00\00" }>, align 8
@alloc737 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\EE\00\00\00A\00\00\00" }>, align 8
@alloc739 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\F3\00\00\00A\00\00\00" }>, align 8
@alloc741 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\0F\01\00\00)\00\00\00" }>, align 8
@alloc743 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\0F\01\00\00(\00\00\00" }>, align 8
@alloc745 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\18\01\00\00(\00\00\00" }>, align 8
@alloc747 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00!\01\00\00)\00\00\00" }>, align 8
@alloc749 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc748, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00!\01\00\00(\00\00\00" }>, align 8
@alloc23 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"i == n\00" }>, align 1
@alloc24 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"sizeofs.c\00" }>, align 1
@alloc25 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"void sizeofs(const unsigned int, int *const)\00" }>, align 1
@alloc754 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"src/shadowing.rs" }>, align 1
@alloc751 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc754, i32 0, i32 0, i32 0), [16 x i8] c"\10\00\00\00\00\00\00\00\0C\00\00\00\0C\00\00\00" }>, align 8
@alloc753 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc754, i32 0, i32 0, i32 0), [16 x i8] c"\10\00\00\00\00\00\00\00\19\00\00\00\09\00\00\00" }>, align 8
@alloc755 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [16 x i8] }>, <{ [16 x i8] }>* @alloc754, i32 0, i32 0, i32 0), [16 x i8] c"\10\00\00\00\00\00\00\00\1B\00\00\00\09\00\00\00" }>, align 8
@alloc760 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"src/exprs.rs" }>, align 1
@alloc757 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc760, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\00\16\00\00\00\05\00\00\00" }>, align 8
@str.a = internal constant [31 x i8] c"attempt to negate with overflow"
@alloc29 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc759 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc760, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\00\1F\00\00\00\05\00\00\00" }>, align 8
@alloc761 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc760, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\00!\00\00\00\05\00\00\00" }>, align 8
@alloc764 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"src/lvalues.rs" }>, align 1
@alloc763 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\11\00\00\00\05\00\00\00" }>, align 8
@alloc765 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [14 x i8] }>, <{ [14 x i8] }>* @alloc764, i32 0, i32 0, i32 0), [16 x i8] c"\0E\00\00\00\00\00\00\00\1E\00\00\00\05\00\00\00" }>, align 8
@alloc780 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"src/qsort.rs" }>, align 1
@alloc767 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc780, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\00\1A\00\00\00\22\00\00\00" }>, align 8
@str.b = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc769 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc780, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\00\1C\00\00\00\10\00\00\00" }>, align 8
@alloc771 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc780, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\00\1E\00\00\00\0D\00\00\00" }>, align 8
@alloc773 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc780, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\00\22\00\00\00\09\00\00\00" }>, align 8
@alloc775 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc780, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\00&\00\00\00\1A\00\00\00" }>, align 8
@alloc777 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc780, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\00)\00\00\00\0C\00\00\00" }>, align 8
@alloc779 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc780, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\003\00\00\00\22\00\00\00" }>, align 8
@alloc781 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [12 x i8] }>, <{ [12 x i8] }>* @alloc780, i32 0, i32 0, i32 0), [16 x i8] c"\0C\00\00\00\00\00\00\004\00\00\00\1D\00\00\00" }>, align 8
@alloc786 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"src/test_sizeofs.rs" }>, align 1
@alloc783 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc786, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\18\00\00\00\14\00\00\00" }>, align 8
@alloc785 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc786, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\18\00\00\00\1F\00\00\00" }>, align 8
@alloc570 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"index " }>, align 1
@alloc571 = private unnamed_addr constant <{ i8*, [8 x i8] }> <{ i8* getelementptr inbounds (<{ [6 x i8] }>, <{ [6 x i8] }>* @alloc570, i32 0, i32 0, i32 0), [8 x i8] c"\06\00\00\00\00\00\00\00" }>, align 8
@alloc787 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc786, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\18\00\00\00\09\00\00\00" }>, align 8
@alloc790 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"src/test_uninitialized.rs" }>, align 1
@alloc789 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc790, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00\15\00\00\00\05\00\00\00" }>, align 8
@alloc791 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc790, i32 0, i32 0, i32 0), [16 x i8] c"\19\00\00\00\00\00\00\00\16\00\00\00\05\00\00\00" }>, align 8
@alloc478 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\01\00\00\00" }>, align 4
@alloc484 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\02\00\00\00" }>, align 4
@alloc281 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"\03\00\00\00" }>, align 4
@alloc796 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"src/test_shadowing.rs" }>, align 1
@alloc793 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc796, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00\13\00\00\00\09\00\00\00" }>, align 8
@alloc795 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc796, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00\22\00\00\00\05\00\00\00" }>, align 8
@alloc797 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc796, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00#\00\00\00\05\00\00\00" }>, align 8
@alloc804 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"src/test_typedef.rs" }>, align 1
@alloc799 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc804, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\0E\00\00\00\05\00\00\00" }>, align 8
@alloc801 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc804, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\0F\00\00\00\05\00\00\00" }>, align 8
@alloc803 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc804, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\13\00\00\00\05\00\00\00" }>, align 8
@alloc805 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc804, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\19\00\00\00\09\00\00\00" }>, align 8
@alloc812 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"src/test_memory.rs" }>, align 1
@alloc807 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc812, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00\1A\00\00\00\05\00\00\00" }>, align 8
@alloc809 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc812, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00\1B\00\00\00\05\00\00\00" }>, align 8
@alloc811 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc812, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00)\00\00\00\05\00\00\00" }>, align 8
@alloc813 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [18 x i8] }>, <{ [18 x i8] }>* @alloc812, i32 0, i32 0, i32 0), [16 x i8] c"\12\00\00\00\00\00\00\00*\00\00\00\05\00\00\00" }>, align 8
@alloc816 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"src/test_lvalues.rs" }>, align 1
@alloc815 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc816, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\16\00\00\00\05\00\00\00" }>, align 8
@alloc817 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @alloc816, i32 0, i32 0, i32 0), [16 x i8] c"\13\00\00\00\00\00\00\00\17\00\00\00\05\00\00\00" }>, align 8
@alloc834 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"src/test_quicksort.rs" }>, align 1
@alloc819 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc834, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00\15\00\00\00\05\00\00\00" }>, align 8
@alloc821 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc834, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00\16\00\00\00\05\00\00\00" }>, align 8
@alloc823 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc834, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00\1A\00\00\00\05\00\00\00" }>, align 8
@alloc825 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc834, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00\1B\00\00\00\05\00\00\00" }>, align 8
@alloc827 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc834, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00)\00\00\00\05\00\00\00" }>, align 8
@alloc829 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc834, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00*\00\00\00\05\00\00\00" }>, align 8
@alloc831 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc834, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00:\00\00\00\05\00\00\00" }>, align 8
@alloc833 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc834, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00;\00\00\00\05\00\00\00" }>, align 8
@alloc835 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [21 x i8] }>, <{ [21 x i8] }>* @alloc834, i32 0, i32 0, i32 0), [16 x i8] c"\15\00\00\00\00\00\00\00<\00\00\00\05\00\00\00" }>, align 8
@alloc840 = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"src/test_exprs.rs" }>, align 1
@alloc837 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc840, i32 0, i32 0, i32 0), [16 x i8] c"\11\00\00\00\00\00\00\00\16\00\00\00\14\00\00\00" }>, align 8
@alloc839 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc840, i32 0, i32 0, i32 0), [16 x i8] c"\11\00\00\00\00\00\00\00\16\00\00\00\1F\00\00\00" }>, align 8
@alloc841 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [17 x i8] }>, <{ [17 x i8] }>* @alloc840, i32 0, i32 0, i32 0), [16 x i8] c"\11\00\00\00\00\00\00\00\16\00\00\00\09\00\00\00" }>, align 8
@alloc32 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"test_sizeofs::test_sizeofs" }>, align 1
@alloc590 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc32, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17he6cfa5965298963dE to i8*), [8 x i8] undef }>, align 8
@alloc42 = private unnamed_addr constant <{ [31 x i8] }> <{ [31 x i8] c"test_uninitialized::test_buffer" }>, align 1
@alloc591 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [31 x i8] }>, <{ [31 x i8] }>* @alloc42, i32 0, i32 0, i32 0), [8 x i8] c"\1F\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h2aaf47d9463627a6E to i8*), [8 x i8] undef }>, align 8
@alloc52 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"test_uninitialized::test_types" }>, align 1
@alloc592 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [30 x i8] }>, <{ [30 x i8] }>* @alloc52, i32 0, i32 0, i32 0), [8 x i8] c"\1E\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hffcafe7089bcdb86E to i8*), [8 x i8] undef }>, align 8
@alloc62 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"test_shadowing::test_twice" }>, align 1
@alloc593 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc62, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hd4e7d2f2cde61ecfE to i8*), [8 x i8] undef }>, align 8
@alloc72 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"test_shadowing::test_shadowing" }>, align 1
@alloc594 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [30 x i8] }>, <{ [30 x i8] }>* @alloc72, i32 0, i32 0, i32 0), [8 x i8] c"\1E\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hf3fbbd19834e62dcE to i8*), [8 x i8] undef }>, align 8
@alloc82 = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"test_typedef::test_typedef" }>, align 1
@alloc595 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [26 x i8] }>, <{ [26 x i8] }>* @alloc82, i32 0, i32 0, i32 0), [8 x i8] c"\1A\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h469d1cfeae6a1c89E to i8*), [8 x i8] undef }>, align 8
@alloc95 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"test_memory::test_malloc" }>, align 1
@alloc596 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @alloc95, i32 0, i32 0, i32 0), [8 x i8] c"\18\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hef526dcca281d131E to i8*), [8 x i8] undef }>, align 8
@alloc105 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"test_memory::test_memset" }>, align 1
@alloc597 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [24 x i8] }>, <{ [24 x i8] }>* @alloc105, i32 0, i32 0, i32 0), [8 x i8] c"\18\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h674999c85c10c66bE to i8*), [8 x i8] undef }>, align 8
@alloc115 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"test_lvalues::test_lvalue" }>, align 1
@alloc598 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc115, i32 0, i32 0, i32 0), [8 x i8] c"\19\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hc2838c4de4ab2d20E to i8*), [8 x i8] undef }>, align 8
@alloc125 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"test_quicksort::test_swap" }>, align 1
@alloc599 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [25 x i8] }>, <{ [25 x i8] }>* @alloc125, i32 0, i32 0, i32 0), [8 x i8] c"\19\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hd249bbf57cc3d7e7E to i8*), [8 x i8] undef }>, align 8
@alloc135 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"test_quicksort::test_partition" }>, align 1
@alloc600 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [30 x i8] }>, <{ [30 x i8] }>* @alloc135, i32 0, i32 0, i32 0), [8 x i8] c"\1E\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17hf8231621d30575b0E to i8*), [8 x i8] undef }>, align 8
@alloc145 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"test_quicksort::test_quicksort" }>, align 1
@alloc601 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [30 x i8] }>, <{ [30 x i8] }>* @alloc145, i32 0, i32 0, i32 0), [8 x i8] c"\1E\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h3ccad5d1263d321bE to i8*), [8 x i8] undef }>, align 8
@alloc155 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"test_exprs::test_exprs" }>, align 1
@alloc602 = private unnamed_addr constant <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }> <{ [1 x i8] zeroinitializer, [7 x i8] undef, i8* getelementptr inbounds (<{ [22 x i8] }>, <{ [22 x i8] }>* @alloc155, i32 0, i32 0, i32 0), [8 x i8] c"\16\00\00\00\00\00\00\00", [16 x i8] undef, [8 x i8] zeroinitializer, [8 x i8] undef, [8 x i8] zeroinitializer, [16 x i8] undef, [4 x i8] zeroinitializer, [4 x i8] undef, [8 x i8] zeroinitializer, i8* bitcast (void ()* @_ZN4core3ops8function6FnOnce9call_once17h9213feb16ac2742eE to i8*), [8 x i8] undef }>, align 8
@alloc603 = private unnamed_addr constant <{ i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }> <{ i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc590, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc591, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc592, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc593, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc594, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc595, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc596, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc597, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc598, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc599, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc600, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc601, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>, <{ [1 x i8], [7 x i8], i8*, [8 x i8], [16 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [4 x i8], [4 x i8], [8 x i8], i8*, [8 x i8] }>* @alloc602, i32 0, i32 0, i32 0) }>, align 8
@__rustc_debug_gdb_scripts_section__ = linkonce_odr unnamed_addr constant [34 x i8] c"\01gdb_load_rust_pretty_printers.py\00", section ".debug_gdb_scripts", align 1

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h8102e8b4a9951160E"(i8* %unique) unnamed_addr #0 !dbg !216 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %unique.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %unique, i8** %unique.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %unique.dbg.spill, metadata !237, metadata !DIExpression()), !dbg !238
  store i8* %unique, i8** %self.dbg.spill, align 8, !dbg !239
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !240, metadata !DIExpression()), !dbg !248
  store i8* %unique, i8** %self.dbg.spill1, align 8, !dbg !248
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !249, metadata !DIExpression()), !dbg !254
  store i8* %unique, i8** %ptr.dbg.spill, align 8, !dbg !254
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !256, metadata !DIExpression()), !dbg !261
  store i8* %unique, i8** %0, align 8, !dbg !261
  %1 = load i8*, i8** %0, align 8, !dbg !263, !nonnull !23, !noundef !23
  ret i8* %1, !dbg !263
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf590d0dc0bf2911aE"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !264 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !295, metadata !DIExpression()), !dbg !296
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !297
  store i64 %kind.0, i64* %3, align 8, !dbg !297
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !297
  store i64 %kind.1, i64* %4, align 8, !dbg !297
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !298
  %6 = load i64, i64* %5, align 8, !dbg !298
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !298
  %8 = load i64, i64* %7, align 8, !dbg !298, !range !299, !noundef !23
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !298
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !298
  ret { i64, i64 } %10, !dbg !298
}

; std::sys_common::backtrace::__rust_begin_short_backtrace
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h11418466094ac077E(void ()* %f) unnamed_addr #1 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !300 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %dummy.dbg.spill = alloca {}, align 1
  %f.dbg.spill = alloca void ()*, align 8
  %result.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !308, metadata !DIExpression()), !dbg !313
  store void ()* %f, void ()** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %f.dbg.spill, metadata !307, metadata !DIExpression()), !dbg !314
  call void @llvm.dbg.declare(metadata {}* %dummy.dbg.spill, metadata !315, metadata !DIExpression()), !dbg !324
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17hcb538e4adf9693b7E(void ()* %f), !dbg !326
  br label %bb1, !dbg !326

bb1:                                              ; preds = %start
  call void asm sideeffect "", "r,~{memory}"({}* undef), !dbg !324, !srcloc !327
  br label %bb4, !dbg !324

bb4:                                              ; preds = %bb1
  ret void, !dbg !328

bb2:                                              ; No predecessors!
  br label %bb3, !dbg !329

bb3:                                              ; preds = %bb2
  %1 = bitcast { i8*, i32 }* %0 to i8**, !dbg !330
  %2 = load i8*, i8** %1, align 8, !dbg !330
  %3 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !330
  %4 = load i32, i32* %3, align 8, !dbg !330
  %5 = insertvalue { i8*, i32 } undef, i8* %2, 0, !dbg !330
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1, !dbg !330
  resume { i8*, i32 } %6, !dbg !330
}

; std::rt::lang_start
; Function Attrs: nonlazybind uwtable
define hidden i64 @_ZN3std2rt10lang_start17hc5c05a1a5be45ca5E(void ()* %main, i64 %argc, i8** %argv) unnamed_addr #2 !dbg !331 {
start:
  %v.dbg.spill = alloca i64, align 8
  %argv.dbg.spill = alloca i8**, align 8
  %argc.dbg.spill = alloca i64, align 8
  %main.dbg.spill = alloca void ()*, align 8
  %_8 = alloca i64*, align 8
  %_4 = alloca i64, align 8
  store void ()* %main, void ()** %main.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %main.dbg.spill, metadata !338, metadata !DIExpression()), !dbg !343
  store i64 %argc, i64* %argc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %argc.dbg.spill, metadata !339, metadata !DIExpression()), !dbg !344
  store i8** %argv, i8*** %argv.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.dbg.spill, metadata !340, metadata !DIExpression()), !dbg !345
  %0 = bitcast i64** %_8 to void ()**, !dbg !346
  store void ()* %main, void ()** %0, align 8, !dbg !346
  %_5.0 = bitcast i64** %_8 to {}*, !dbg !347
; call std::rt::lang_start_internal
  %1 = call i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1 %_5.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8*, i8*, i8* }>* @vtable.0 to [3 x i64]*), i64 %argc, i8** %argv), !dbg !348
  store i64 %1, i64* %_4, align 8, !dbg !348
  br label %bb1, !dbg !348

bb1:                                              ; preds = %start
  %v = load i64, i64* %_4, align 8, !dbg !349
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !349
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !341, metadata !DIExpression()), !dbg !350
  ret i64 %v, !dbg !351
}

; std::rt::lang_start::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h9976755c369c8586E"(i64** align 8 %_1) unnamed_addr #0 !dbg !352 {
start:
  %self.dbg.spill = alloca i8*, align 8
  %_1.dbg.spill = alloca i64**, align 8
  %self = alloca i8, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  %0 = load i64**, i64*** %_1.dbg.spill, align 8, !nonnull !23, !align !358, !noundef !23
  %1 = bitcast i64** %0 to void ()**
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !357, metadata !DIExpression(DW_OP_deref)), !dbg !359
  call void @llvm.dbg.declare(metadata i8* %self, metadata !360, metadata !DIExpression()), !dbg !378
  %2 = bitcast i64** %_1 to void ()**, !dbg !380
  %_4 = load void ()*, void ()** %2, align 8, !dbg !380, !nonnull !23, !noundef !23
; call std::sys_common::backtrace::__rust_begin_short_backtrace
  call void @_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h11418466094ac077E(void ()* %_4), !dbg !379
  br label %bb1, !dbg !379

bb1:                                              ; preds = %start
; call <() as std::process::Termination>::report
  %3 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hcfdf933bfc0960b4E"(), !dbg !379
  store i8 %3, i8* %self, align 1, !dbg !379
  br label %bb2, !dbg !379

bb2:                                              ; preds = %bb1
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !378
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !381, metadata !DIExpression()), !dbg !389
  %_6 = load i8, i8* %self, align 1, !dbg !389
  %4 = zext i8 %_6 to i32, !dbg !389
  ret i32 %4, !dbg !391
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h133358f10bce4bc6E"([1 x i32]** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !392 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [1 x i32]**, align 8
  store [1 x i32]** %self, [1 x i32]*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i32]*** %self.dbg.spill, metadata !449, metadata !DIExpression()), !dbg !453
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !450, metadata !DIExpression()), !dbg !454
  %_6 = load [1 x i32]*, [1 x i32]** %self, align 8, !dbg !455, !nonnull !23, !align !456, !noundef !23
; call core::array::<impl core::fmt::Debug for [T; N]>::fmt
  %0 = call zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h053978c79cf2d9e5E"([1 x i32]* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !457
  br label %bb1, !dbg !457

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !458
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h325bf7e19275887aE"(i32** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !459 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32**, align 8
  store i32** %self, i32*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %self.dbg.spill, metadata !464, metadata !DIExpression()), !dbg !468
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !465, metadata !DIExpression()), !dbg !469
  %_6 = load i32*, i32** %self, align 8, !dbg !470, !nonnull !23, !align !456, !noundef !23
; call core::fmt::num::<impl core::fmt::Debug for i32>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hf0d3aeeaba475001E"(i32* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !471
  br label %bb1, !dbg !471

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !472
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h588532a1b3e46bfcE"([3 x i32]** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !473 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [3 x i32]**, align 8
  store [3 x i32]** %self, [3 x i32]*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i32]*** %self.dbg.spill, metadata !478, metadata !DIExpression()), !dbg !482
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !479, metadata !DIExpression()), !dbg !483
  %_6 = load [3 x i32]*, [3 x i32]** %self, align 8, !dbg !484, !nonnull !23, !align !456, !noundef !23
; call core::array::<impl core::fmt::Debug for [T; N]>::fmt
  %0 = call zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h6cf5eec818869c0cE"([3 x i32]* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !485
  br label %bb1, !dbg !485

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !486
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h70f892cf23d84968E"({}** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !487 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca {}**, align 8
  store {}** %self, {}*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}*** %self.dbg.spill, metadata !492, metadata !DIExpression()), !dbg !494
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !493, metadata !DIExpression()), !dbg !495
  %_6 = load {}*, {}** %self, align 8, !dbg !496, !nonnull !23, !align !497, !noundef !23
; call <() as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17hcd3e8f8771e87a4cE"({}* align 1 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !498
  br label %bb1, !dbg !498

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !499
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8453208e0de1799fE"([10 x i32]** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !500 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [10 x i32]**, align 8
  store [10 x i32]** %self, [10 x i32]*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i32]*** %self.dbg.spill, metadata !505, metadata !DIExpression()), !dbg !509
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !506, metadata !DIExpression()), !dbg !510
  %_6 = load [10 x i32]*, [10 x i32]** %self, align 8, !dbg !511, !nonnull !23, !align !456, !noundef !23
; call core::array::<impl core::fmt::Debug for [T; N]>::fmt
  %0 = call zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h4b00c9e669529a7dE"([10 x i32]* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !512
  br label %bb1, !dbg !512

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !513
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha853fb7d2d322f68E"([6 x i32]** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !514 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [6 x i32]**, align 8
  store [6 x i32]** %self, [6 x i32]*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i32]*** %self.dbg.spill, metadata !519, metadata !DIExpression()), !dbg !523
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !520, metadata !DIExpression()), !dbg !524
  %_6 = load [6 x i32]*, [6 x i32]** %self, align 8, !dbg !525, !nonnull !23, !align !456, !noundef !23
; call core::array::<impl core::fmt::Debug for [T; N]>::fmt
  %0 = call zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hee4abddf1f13537bE"([6 x i32]* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !526
  br label %bb1, !dbg !526

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !527
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb4053abcc1bbde9bE"([5 x i32]** align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !528 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [5 x i32]**, align 8
  store [5 x i32]** %self, [5 x i32]*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]*** %self.dbg.spill, metadata !533, metadata !DIExpression()), !dbg !537
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !534, metadata !DIExpression()), !dbg !538
  %_6 = load [5 x i32]*, [5 x i32]** %self, align 8, !dbg !539, !nonnull !23, !align !456, !noundef !23
; call core::array::<impl core::fmt::Debug for [T; N]>::fmt
  %0 = call zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hcfda82f1da1c4c29E"([5 x i32]* align 4 %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !540
  br label %bb1, !dbg !540

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !541
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfef8a23a17576969E"({ [0 x i32]*, i64 }* align 8 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !542 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }*, align 8
  store { [0 x i32]*, i64 }* %self, { [0 x i32]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }** %self.dbg.spill, metadata !552, metadata !DIExpression()), !dbg !554
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !553, metadata !DIExpression()), !dbg !555
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self, i32 0, i32 0, !dbg !556
  %_6.0 = load [0 x i32]*, [0 x i32]** %0, align 8, !dbg !556, !nonnull !23, !align !456, !noundef !23
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self, i32 0, i32 1, !dbg !556
  %_6.1 = load i64, i64* %1, align 8, !dbg !556
; call <[T] as core::fmt::Debug>::fmt
  %2 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hf1ad82ba7d10e26aE"([0 x i32]* align 4 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 %f), !dbg !557
  br label %bb1, !dbg !557

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !558
}

; <() as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17hcd3e8f8771e87a4cE"({}* align 1 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !559 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca {}*, align 8
  store {}* %self, {}** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill, metadata !564, metadata !DIExpression()), !dbg !566
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !565, metadata !DIExpression()), !dbg !567
; call core::fmt::Formatter::pad
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter3pad17h6f4380cf598a2e03E(%"core::fmt::Formatter"* align 8 %f, [0 x i8]* align 1 bitcast (<{ [2 x i8] }>* @alloc694 to [0 x i8]*), i64 2), !dbg !568
  br label %bb1, !dbg !568

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !569
}

; <i32 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h07e2e83ce07bcf79E"(i32 %start1, i64 %n) unnamed_addr #0 !dbg !570 {
start:
  %0 = alloca i32, align 4
  %rhs.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca i32, align 4
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i32, align 4
  store i32 %start1, i32* %start.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %start.dbg.spill, metadata !578, metadata !DIExpression()), !dbg !580
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !579, metadata !DIExpression()), !dbg !581
  store i32 %start1, i32* %self.dbg.spill, align 4, !dbg !582
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !583, metadata !DIExpression()), !dbg !593
  %rhs = trunc i64 %n to i32, !dbg !594
  store i32 %rhs, i32* %rhs.dbg.spill, align 4, !dbg !594
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill, metadata !592, metadata !DIExpression()), !dbg !593
  %1 = add nsw i32 %start1, %rhs, !dbg !593
  store i32 %1, i32* %0, align 4, !dbg !593
  %2 = load i32, i32* %0, align 4, !dbg !593
  br label %bb1, !dbg !593

bb1:                                              ; preds = %start
  ret i32 %2, !dbg !595
}

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hf1ad82ba7d10e26aE"([0 x i32]* align 4 %self.0, i64 %self.1, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !596 {
start:
  %self.dbg.spill1 = alloca { [0 x i32]*, i64 }, align 8
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %_6 = alloca %"core::fmt::builders::DebugList", align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !601, metadata !DIExpression()), !dbg !603
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !602, metadata !DIExpression()), !dbg !604
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17h2e70d1c34e8cb782E(%"core::fmt::builders::DebugList"* sret(%"core::fmt::builders::DebugList") %_6, %"core::fmt::Formatter"* align 8 %f), !dbg !605
  br label %bb1, !dbg !605

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !606
  store [0 x i32]* %self.0, [0 x i32]** %2, align 8, !dbg !606
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !606
  store i64 %self.1, i64* %3, align 8, !dbg !606
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill1, metadata !607, metadata !DIExpression()), !dbg !629
; call core::slice::iter::Iter<T>::new
  %4 = call { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hc8f477891223844fE"([0 x i32]* align 4 %self.0, i64 %self.1), !dbg !629
  %_8.0 = extractvalue { i32*, i32* } %4, 0, !dbg !629
  %_8.1 = extractvalue { i32*, i32* } %4, 1, !dbg !629
  br label %bb4, !dbg !629

bb4:                                              ; preds = %bb1
; call core::fmt::builders::DebugList::entries
  %_4 = call align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17he033867fae65c462E(%"core::fmt::builders::DebugList"* align 8 %_6, i32* %_8.0, i32* %_8.1), !dbg !605
  br label %bb2, !dbg !605

bb2:                                              ; preds = %bb4
; call core::fmt::builders::DebugList::finish
  %5 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha896c0aa3642bf32E(%"core::fmt::builders::DebugList"* align 8 %_4), !dbg !605
  br label %bb3, !dbg !605

bb3:                                              ; preds = %bb2
  ret i1 %5, !dbg !630
}

; <T as core::array::SpecArrayClone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN49_$LT$T$u20$as$u20$core..array..SpecArrayClone$GT$5clone17h07d9554687c29659E"([4 x i32]* sret([4 x i32]) %0, [4 x i32]* align 4 %array) unnamed_addr #0 !dbg !631 {
start:
  %array.dbg.spill = alloca [4 x i32]*, align 8
  store [4 x i32]* %array, [4 x i32]** %array.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4 x i32]** %array.dbg.spill, metadata !642, metadata !DIExpression()), !dbg !643
  %1 = bitcast [4 x i32]* %0 to i8*, !dbg !644
  %2 = bitcast [4 x i32]* %array to i8*, !dbg !644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 16, i1 false), !dbg !644
  ret void, !dbg !645
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h59e7e956e21d8993E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !646 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !651, metadata !DIExpression()), !dbg !653
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !652, metadata !DIExpression()), !dbg !654
  store i64 %start1, i64* %self.dbg.spill, align 8, !dbg !655
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !656, metadata !DIExpression()), !dbg !663
  store i64 %n, i64* %rhs.dbg.spill, align 8, !dbg !664
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !662, metadata !DIExpression()), !dbg !663
  %1 = add nuw i64 %start1, %n, !dbg !663
  store i64 %1, i64* %0, align 8, !dbg !663
  %2 = load i64, i64* %0, align 8, !dbg !663
  br label %bb1, !dbg !663

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !665
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3cmp3Ord3max17hb944eef8168f423aE(i64 %0, i64 %1) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !666 {
start:
  %2 = alloca { i8*, i32 }, align 8
  %_9 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_3 = alloca i8, align 1
  %3 = alloca i64, align 8
  %other = alloca i64, align 8
  %self = alloca i64, align 8
  store i64 %0, i64* %self, align 8
  store i64 %1, i64* %other, align 8
  call void @llvm.dbg.declare(metadata i64* %self, metadata !670, metadata !DIExpression()), !dbg !674
  call void @llvm.dbg.declare(metadata i64* %other, metadata !671, metadata !DIExpression()), !dbg !675
  store i8 1, i8* %_9, align 1, !dbg !676
  store i8 1, i8* %_8, align 1, !dbg !676
; invoke core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %4 = invoke i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h05ae9de739f93db7E"(i64* align 8 %self, i64* align 8 %other)
          to label %bb1 unwind label %cleanup, !dbg !676, !range !677

bb8:                                              ; preds = %cleanup
  br label %bb13, !dbg !678

cleanup:                                          ; preds = %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store i8 %4, i8* %_3, align 1, !dbg !676
  %_7 = load i8, i8* %_3, align 1, !dbg !676, !range !677, !noundef !23
  switch i8 %_7, label %bb3 [
    i8 -1, label %bb4
    i8 0, label %bb4
    i8 1, label %bb2
  ], !dbg !679

bb13:                                             ; preds = %bb8
  %10 = load i8, i8* %_9, align 1, !dbg !678, !range !680, !noundef !23
  %11 = trunc i8 %10 to i1, !dbg !678
  br i1 %11, label %bb12, label %bb9, !dbg !678

bb3:                                              ; preds = %bb1
  unreachable, !dbg !676

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_8, align 1, !dbg !681
  %12 = load i64, i64* %other, align 8, !dbg !681
  store i64 %12, i64* %3, align 8, !dbg !681
  br label %bb5, !dbg !681

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_9, align 1, !dbg !682
  %13 = load i64, i64* %self, align 8, !dbg !682
  store i64 %13, i64* %3, align 8, !dbg !682
  br label %bb5, !dbg !682

bb5:                                              ; preds = %bb4, %bb2
  %14 = load i8, i8* %_8, align 1, !dbg !678, !range !680, !noundef !23
  %15 = trunc i8 %14 to i1, !dbg !678
  br i1 %15, label %bb10, label %bb6, !dbg !678

bb6:                                              ; preds = %bb10, %bb5
  %16 = load i8, i8* %_9, align 1, !dbg !678, !range !680, !noundef !23
  %17 = trunc i8 %16 to i1, !dbg !678
  br i1 %17, label %bb11, label %bb7, !dbg !678

bb10:                                             ; preds = %bb5
  br label %bb6, !dbg !678

bb9:                                              ; preds = %bb12, %bb13
  %18 = bitcast { i8*, i32 }* %2 to i8**, !dbg !683
  %19 = load i8*, i8** %18, align 8, !dbg !683
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !683
  %21 = load i32, i32* %20, align 8, !dbg !683
  %22 = insertvalue { i8*, i32 } undef, i8* %19, 0, !dbg !683
  %23 = insertvalue { i8*, i32 } %22, i32 %21, 1, !dbg !683
  resume { i8*, i32 } %23, !dbg !683

bb12:                                             ; preds = %bb13
  br label %bb9, !dbg !678

bb7:                                              ; preds = %bb11, %bb6
  %24 = load i64, i64* %3, align 8, !dbg !684
  ret i64 %24, !dbg !684

bb11:                                             ; preds = %bb6
  br label %bb7, !dbg !678
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h05ae9de739f93db7E"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !685 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !692, metadata !DIExpression()), !dbg !694
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !693, metadata !DIExpression()), !dbg !695
  %_4 = load i64, i64* %self, align 8, !dbg !696
  %_5 = load i64, i64* %other, align 8, !dbg !697
  %_3 = icmp ult i64 %_4, %_5, !dbg !696
  br i1 %_3, label %bb1, label %bb2, !dbg !696

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !698
  %_8 = load i64, i64* %other, align 8, !dbg !699
  %_6 = icmp eq i64 %_7, %_8, !dbg !698
  br i1 %_6, label %bb3, label %bb4, !dbg !698

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !700
  br label %bb6, !dbg !701

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !702, !range !677, !noundef !23
  ret i8 %1, !dbg !702

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !703
  br label %bb5, !dbg !704

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !705
  br label %bb5, !dbg !704

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !701
}

; core::cmp::impls::<impl core::cmp::PartialOrd for i32>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h4a8da4c42e37e412E"(i32* align 4 %self, i32* align 4 %other) unnamed_addr #0 !dbg !706 {
start:
  %other.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !712, metadata !DIExpression()), !dbg !714
  store i32* %other, i32** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %other.dbg.spill, metadata !713, metadata !DIExpression()), !dbg !715
  %_3 = load i32, i32* %self, align 4, !dbg !716
  %_4 = load i32, i32* %other, align 4, !dbg !717
  %0 = icmp slt i32 %_3, %_4, !dbg !716
  ret i1 %0, !dbg !718
}

; core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h803e94e7826b17f6E"(i64* align 8 %self, i64* align 8 %other) unnamed_addr #0 !dbg !719 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !724, metadata !DIExpression()), !dbg !726
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !725, metadata !DIExpression()), !dbg !727
  %_3 = load i64, i64* %self, align 8, !dbg !728
  %_4 = load i64, i64* %other, align 8, !dbg !729
  %0 = icmp ult i64 %_3, %_4, !dbg !728
  ret i1 %0, !dbg !730
}

; core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h9b35e2cee4cb8532E"({}* align 1 %self, {}* align 1 %_other) unnamed_addr #0 !dbg !731 {
start:
  %_other.dbg.spill = alloca {}*, align 8
  %self.dbg.spill = alloca {}*, align 8
  store {}* %self, {}** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill, metadata !736, metadata !DIExpression()), !dbg !738
  store {}* %_other, {}** %_other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_other.dbg.spill, metadata !737, metadata !DIExpression()), !dbg !739
  ret i1 true, !dbg !740
}

; core::fmt::ArgumentV1::new_display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hdc27862aaaff6c82E(i64* align 8 %x) unnamed_addr #0 !dbg !741 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i64*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca i64*, align 8
  %x.dbg.spill = alloca i64*, align 8
  %2 = alloca { i8*, i64* }, align 8
  store i64* %x, i64** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill, metadata !755, metadata !DIExpression()), !dbg !756
  store i64* %x, i64** %x.dbg.spill1, align 8, !dbg !757
  call void @llvm.dbg.declare(metadata i64** %x.dbg.spill1, metadata !758, metadata !DIExpression()), !dbg !767
  store i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE", i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !769
  call void @llvm.dbg.declare(metadata i1 (i64*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !766, metadata !DIExpression()), !dbg !767
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i64*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !767
  %_4 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !767, !nonnull !23, !noundef !23
  br label %bb1, !dbg !767

bb1:                                              ; preds = %start
  %3 = bitcast i64* %x to %"core::fmt::Opaque"*, !dbg !767
  store %"core::fmt::Opaque"* %3, %"core::fmt::Opaque"** %0, align 8, !dbg !767
  %_6 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !767, !nonnull !23, !align !497, !noundef !23
  br label %bb2, !dbg !767

bb2:                                              ; preds = %bb1
  %4 = bitcast { i8*, i64* }* %2 to %"core::fmt::Opaque"**, !dbg !767
  store %"core::fmt::Opaque"* %_6, %"core::fmt::Opaque"** %4, align 8, !dbg !767
  %5 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !767
  %6 = bitcast i64** %5 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !767
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_4, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %6, align 8, !dbg !767
  %7 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 0, !dbg !770
  %8 = load i8*, i8** %7, align 8, !dbg !770, !nonnull !23, !align !497, !noundef !23
  %9 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %2, i32 0, i32 1, !dbg !770
  %10 = load i64*, i64** %9, align 8, !dbg !770, !nonnull !23, !noundef !23
  %11 = insertvalue { i8*, i64* } undef, i8* %8, 0, !dbg !770
  %12 = insertvalue { i8*, i64* } %11, i64* %10, 1, !dbg !770
  ret { i8*, i64* } %12, !dbg !770
}

; core::fmt::num::<impl core::fmt::Debug for i32>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hf0d3aeeaba475001E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #0 !dbg !771 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i32*, align 8
  %0 = alloca i8, align 1
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !778, metadata !DIExpression()), !dbg !780
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !779, metadata !DIExpression()), !dbg !781
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8 %f), !dbg !782
  br label %bb1, !dbg !782

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !782

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8 %f), !dbg !783
  br label %bb5, !dbg !783

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h46ab6094afed2354E"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !784
  %2 = zext i1 %1 to i8, !dbg !784
  store i8 %2, i8* %0, align 1, !dbg !784
  br label %bb3, !dbg !784

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !785

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !786, !range !680, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !786
  ret i1 %4, !dbg !786

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !783

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !787
  %6 = zext i1 %5 to i8, !dbg !787
  store i8 %6, i8* %0, align 1, !dbg !787
  br label %bb9, !dbg !787

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h827553a54a7e037dE"(i32* align 4 %self, %"core::fmt::Formatter"* align 8 %f), !dbg !788
  %8 = zext i1 %7 to i8, !dbg !788
  store i8 %8, i8* %0, align 1, !dbg !788
  br label %bb7, !dbg !788

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !789

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !785

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !789
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define internal align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList7entries17he033867fae65c462E(%"core::fmt::builders::DebugList"* align 8 %self, i32* %entries.0, i32* %entries.1) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !790 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %entries.dbg.spill = alloca { i32*, i32* }, align 8
  %self.dbg.spill = alloca %"core::fmt::builders::DebugList"*, align 8
  %entry = alloca i32*, align 8
  %_7 = alloca i32*, align 8
  %iter = alloca { i32*, i32* }, align 8
  store %"core::fmt::builders::DebugList"* %self, %"core::fmt::builders::DebugList"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::builders::DebugList"** %self.dbg.spill, metadata !805, metadata !DIExpression()), !dbg !814
  %1 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %entries.dbg.spill, i32 0, i32 0
  store i32* %entries.0, i32** %1, align 8
  %2 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %entries.dbg.spill, i32 0, i32 1
  store i32* %entries.1, i32** %2, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }* %entries.dbg.spill, metadata !806, metadata !DIExpression()), !dbg !815
  call void @llvm.dbg.declare(metadata { i32*, i32* }* %iter, metadata !807, metadata !DIExpression()), !dbg !816
  call void @llvm.dbg.declare(metadata i32** %entry, metadata !809, metadata !DIExpression()), !dbg !817
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %3 = call { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha0c076b82c67d947E"(i32* %entries.0, i32* %entries.1), !dbg !818
  %_4.0 = extractvalue { i32*, i32* } %3, 0, !dbg !818
  %_4.1 = extractvalue { i32*, i32* } %3, 1, !dbg !818
  br label %bb1, !dbg !818

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 0, !dbg !818
  store i32* %_4.0, i32** %4, align 8, !dbg !818
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %iter, i32 0, i32 1, !dbg !818
  store i32* %_4.1, i32** %5, align 8, !dbg !818
  br label %bb2, !dbg !819

bb2:                                              ; preds = %bb8, %bb1
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %6 = invoke align 4 i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9766c42dda2c44abE"({ i32*, i32* }* align 8 %iter)
          to label %bb3 unwind label %cleanup, !dbg !816

bb11:                                             ; preds = %bb10, %cleanup
  br label %bb12, !dbg !820

cleanup:                                          ; preds = %bb2
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %8, i8** %10, align 8
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %9, i32* %11, align 8
  br label %bb11

bb3:                                              ; preds = %bb2
  store i32* %6, i32** %_7, align 8, !dbg !816
  %12 = bitcast i32** %_7 to {}**, !dbg !816
  %13 = load {}*, {}** %12, align 8, !dbg !816
  %14 = icmp eq {}* %13, null, !dbg !816
  %_10 = select i1 %14, i64 0, i64 1, !dbg !816
  switch i64 %_10, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !816

bb5:                                              ; preds = %bb3
  unreachable, !dbg !816

bb6:                                              ; preds = %bb3
  br label %bb9, !dbg !820

bb4:                                              ; preds = %bb3
  %15 = load i32*, i32** %_7, align 8, !dbg !821, !nonnull !23, !align !456, !noundef !23
  store i32* %15, i32** %entry, align 8, !dbg !821
  %_14.0 = bitcast i32** %entry to {}*, !dbg !822
; invoke core::fmt::builders::DebugList::entry
  %_12 = invoke align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h5007920add23274dE(%"core::fmt::builders::DebugList"* align 8 %self, {}* align 1 %_14.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.1 to [3 x i64]*))
          to label %bb7 unwind label %cleanup1, !dbg !823

bb10:                                             ; preds = %cleanup1
  br label %bb11, !dbg !824

cleanup1:                                         ; preds = %bb4
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  %19 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  br label %bb10

bb7:                                              ; preds = %bb4
  br label %bb8, !dbg !824

bb8:                                              ; preds = %bb7
  br label %bb2, !dbg !819

bb12:                                             ; preds = %bb11
  %21 = bitcast { i8*, i32 }* %0 to i8**, !dbg !825
  %22 = load i8*, i8** %21, align 8, !dbg !825
  %23 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !825
  %24 = load i32, i32* %23, align 8, !dbg !825
  %25 = insertvalue { i8*, i32 } undef, i8* %22, 0, !dbg !825
  %26 = insertvalue { i8*, i32 } %25, i32 %24, 1, !dbg !825
  resume { i8*, i32 } %26, !dbg !825

bb9:                                              ; preds = %bb6
  ret %"core::fmt::builders::DebugList"* %self, !dbg !826
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h090b18600dc0d53dE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %0, [0 x { [0 x i8]*, i64 }]* align 8 %pieces.0, i64 %pieces.1, [0 x { i8*, i64* }]* align 8 %args.0, i64 %args.1) unnamed_addr #0 !dbg !827 {
start:
  %args.dbg.spill = alloca { [0 x { i8*, i64* }]*, i64 }, align 8
  %pieces.dbg.spill = alloca { [0 x { [0 x i8]*, i64 }]*, i64 }, align 8
  %_24 = alloca { i64*, i64 }, align 8
  %_16 = alloca %"core::fmt::Arguments", align 8
  %_3 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 0
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %1, align 8
  %2 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, i32 0, i32 1
  store i64 %pieces.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x { [0 x i8]*, i64 }]*, i64 }* %pieces.dbg.spill, metadata !895, metadata !DIExpression()), !dbg !897
  %3 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 0
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %3, align 8
  %4 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, i32 0, i32 1
  store i64 %args.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x { i8*, i64* }]*, i64 }* %args.dbg.spill, metadata !896, metadata !DIExpression()), !dbg !898
  %_4 = icmp ult i64 %pieces.1, %args.1, !dbg !899
  br i1 %_4, label %bb1, label %bb2, !dbg !899

bb2:                                              ; preds = %start
  %_12 = add i64 %args.1, 1, !dbg !900
  %_9 = icmp ugt i64 %pieces.1, %_12, !dbg !901
  %5 = zext i1 %_9 to i8, !dbg !899
  store i8 %5, i8* %_3, align 1, !dbg !899
  br label %bb3, !dbg !899

bb1:                                              ; preds = %start
  store i8 1, i8* %_3, align 1, !dbg !899
  br label %bb3, !dbg !899

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_3, align 1, !dbg !899, !range !680, !noundef !23
  %7 = trunc i8 %6 to i1, !dbg !899
  br i1 %7, label %bb4, label %bb6, !dbg !899

bb6:                                              ; preds = %bb3
  %8 = bitcast { i64*, i64 }* %_24 to {}**, !dbg !902
  store {}* null, {}** %8, align 8, !dbg !902
  %9 = bitcast %"core::fmt::Arguments"* %0 to { [0 x { [0 x i8]*, i64 }]*, i64 }*, !dbg !903
  %10 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 0, !dbg !903
  store [0 x { [0 x i8]*, i64 }]* %pieces.0, [0 x { [0 x i8]*, i64 }]** %10, align 8, !dbg !903
  %11 = getelementptr inbounds { [0 x { [0 x i8]*, i64 }]*, i64 }, { [0 x { [0 x i8]*, i64 }]*, i64 }* %9, i32 0, i32 1, !dbg !903
  store i64 %pieces.1, i64* %11, align 8, !dbg !903
  %12 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 1, !dbg !903
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 0, !dbg !903
  %14 = load i64*, i64** %13, align 8, !dbg !903, !align !358
  %15 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %_24, i32 0, i32 1, !dbg !903
  %16 = load i64, i64* %15, align 8, !dbg !903
  %17 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 0, !dbg !903
  store i64* %14, i64** %17, align 8, !dbg !903
  %18 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %12, i32 0, i32 1, !dbg !903
  store i64 %16, i64* %18, align 8, !dbg !903
  %19 = getelementptr inbounds %"core::fmt::Arguments", %"core::fmt::Arguments"* %0, i32 0, i32 2, !dbg !903
  %20 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 0, !dbg !903
  store [0 x { i8*, i64* }]* %args.0, [0 x { i8*, i64* }]** %20, align 8, !dbg !903
  %21 = getelementptr inbounds { [0 x { i8*, i64* }]*, i64 }, { [0 x { i8*, i64* }]*, i64 }* %19, i32 0, i32 1, !dbg !903
  store i64 %args.1, i64* %21, align 8, !dbg !903
  ret void, !dbg !904

bb4:                                              ; preds = %bb3
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h090b18600dc0d53dE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_16, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc203 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 bitcast (<{}>* @alloc193 to [0 x { i8*, i64* }]*), i64 0), !dbg !905
  br label %bb5, !dbg !905

bb5:                                              ; preds = %bb4
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"* %_16, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc699 to %"core::panic::location::Location"*)) #16, !dbg !905
  unreachable, !dbg !905
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3mem7replace17h6c3152bae60ef064E(i64* align 8 %dest, i64 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !906 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %result.dbg.spill = alloca i64, align 8
  %slot.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i64, align 8
  %self.dbg.spill = alloca i64*, align 8
  %src.dbg.spill2 = alloca i64*, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  %src1 = alloca i64, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !912, metadata !DIExpression()), !dbg !916
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !913, metadata !DIExpression()), !dbg !917
  call void @llvm.dbg.declare(metadata i64* %src1, metadata !918, metadata !DIExpression()), !dbg !927
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !929, metadata !DIExpression()), !dbg !948
  store i64* %dest, i64** %src.dbg.spill2, align 8, !dbg !950
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill2, metadata !937, metadata !DIExpression()), !dbg !951
  %1 = bitcast i64* %tmp to {}*, !dbg !952
  store i64* %tmp, i64** %self.dbg.spill, align 8, !dbg !948
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !959, metadata !DIExpression()), !dbg !966
  %2 = bitcast i64* %tmp to i8*, !dbg !948
  %3 = bitcast i64* %dest to i8*, !dbg !948
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !948
  %self = load i64, i64* %tmp, align 8, !dbg !948
  store i64 %self, i64* %self.dbg.spill3, align 8, !dbg !948
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill3, metadata !968, metadata !DIExpression()), !dbg !982
  br label %bb4, !dbg !982

bb4:                                              ; preds = %start
  store i64 %self, i64* %slot.dbg.spill, align 8, !dbg !982
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill, metadata !984, metadata !DIExpression()), !dbg !991
  store i64 %self, i64* %result.dbg.spill, align 8, !dbg !991
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !914, metadata !DIExpression()), !dbg !993
  store i64* %dest, i64** %dst.dbg.spill, align 8, !dbg !994
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !926, metadata !DIExpression()), !dbg !927
  store i64 %src, i64* %src1, align 8, !dbg !995
  %4 = bitcast i64* %dest to i8*, !dbg !927
  %5 = bitcast i64* %src1 to i8*, !dbg !927
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !927
  ret i64 %self, !dbg !996

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !997

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !998
  %7 = load i8*, i8** %6, align 8, !dbg !998
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !998
  %9 = load i32, i32* %8, align 8, !dbg !998
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !998
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !998
  resume { i8*, i32 } %11, !dbg !998

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !997
}

; core::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3mem7replace17hf1ca98093c8ae647E(i32* align 4 %dest, i32 %src) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !999 {
start:
  %dst.dbg.spill = alloca i32*, align 8
  %result.dbg.spill = alloca i32, align 4
  %slot.dbg.spill = alloca i32, align 4
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill3 = alloca i32, align 4
  %self.dbg.spill = alloca i32*, align 8
  %src.dbg.spill2 = alloca i32*, align 8
  %src.dbg.spill = alloca i32, align 4
  %dest.dbg.spill = alloca i32*, align 8
  %tmp = alloca i32, align 4
  %src1 = alloca i32, align 4
  store i32* %dest, i32** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %dest.dbg.spill, metadata !1004, metadata !DIExpression()), !dbg !1008
  store i32 %src, i32* %src.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %src.dbg.spill, metadata !1005, metadata !DIExpression()), !dbg !1009
  call void @llvm.dbg.declare(metadata i32* %src1, metadata !1010, metadata !DIExpression()), !dbg !1018
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !1020, metadata !DIExpression()), !dbg !1036
  store i32* %dest, i32** %src.dbg.spill2, align 8, !dbg !1038
  call void @llvm.dbg.declare(metadata i32** %src.dbg.spill2, metadata !1027, metadata !DIExpression()), !dbg !1039
  %1 = bitcast i32* %tmp to {}*, !dbg !1040
  store i32* %tmp, i32** %self.dbg.spill, align 8, !dbg !1036
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !1046, metadata !DIExpression()), !dbg !1053
  %2 = bitcast i32* %tmp to i8*, !dbg !1036
  %3 = bitcast i32* %dest to i8*, !dbg !1036
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false), !dbg !1036
  %self = load i32, i32* %tmp, align 4, !dbg !1036
  store i32 %self, i32* %self.dbg.spill3, align 4, !dbg !1036
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill3, metadata !1055, metadata !DIExpression()), !dbg !1061
  br label %bb4, !dbg !1061

bb4:                                              ; preds = %start
  store i32 %self, i32* %slot.dbg.spill, align 4, !dbg !1061
  call void @llvm.dbg.declare(metadata i32* %slot.dbg.spill, metadata !1063, metadata !DIExpression()), !dbg !1069
  store i32 %self, i32* %result.dbg.spill, align 4, !dbg !1069
  call void @llvm.dbg.declare(metadata i32* %result.dbg.spill, metadata !1006, metadata !DIExpression()), !dbg !1071
  store i32* %dest, i32** %dst.dbg.spill, align 8, !dbg !1072
  call void @llvm.dbg.declare(metadata i32** %dst.dbg.spill, metadata !1017, metadata !DIExpression()), !dbg !1018
  store i32 %src, i32* %src1, align 4, !dbg !1073
  %4 = bitcast i32* %dest to i8*, !dbg !1018
  %5 = bitcast i32* %src1 to i8*, !dbg !1018
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 4, i1 false), !dbg !1018
  ret i32 %self, !dbg !1074

bb3:                                              ; No predecessors!
  br i1 true, label %bb2, label %bb1, !dbg !1075

bb1:                                              ; preds = %bb2, %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1076
  %7 = load i8*, i8** %6, align 8, !dbg !1076
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1076
  %9 = load i32, i32* %8, align 8, !dbg !1076
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1076
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1076
  resume { i8*, i32 } %11, !dbg !1076

bb2:                                              ; preds = %bb3
  br label %bb1, !dbg !1075
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9a7ed23975e82aa2E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1077 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1081, metadata !DIExpression()), !dbg !1086
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1082, metadata !DIExpression()), !dbg !1087
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !1088
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !1089, metadata !DIExpression()), !dbg !1102
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !1103
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !1098, metadata !DIExpression()), !dbg !1102
  %3 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1102
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !1102
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !1102
  %6 = zext i1 %5 to i8, !dbg !1102
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !1102
  store i64 %4, i64* %7, align 8, !dbg !1102
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1102
  store i8 %6, i8* %8, align 8, !dbg !1102
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1102
  %_13.0 = load i64, i64* %9, align 8, !dbg !1102
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1102
  %11 = load i8, i8* %10, align 8, !dbg !1102, !range !680, !noundef !23
  %_13.1 = trunc i8 %11 to i1, !dbg !1102
  br label %bb5, !dbg !1102

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !1102
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1099, metadata !DIExpression()), !dbg !1104
  %12 = zext i1 %_13.1 to i8, !dbg !1102
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !1102
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1101, metadata !DIExpression()), !dbg !1104
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !1104
  store i64 %_13.0, i64* %13, align 8, !dbg !1104
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !1104
  %15 = zext i1 %_13.1 to i8, !dbg !1104
  store i8 %15, i8* %14, align 8, !dbg !1104
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !1105
  %a = load i64, i64* %16, align 8, !dbg !1105
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !1105
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !1083, metadata !DIExpression()), !dbg !1106
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !1107
  %18 = load i8, i8* %17, align 8, !dbg !1107, !range !680, !noundef !23
  %b = trunc i8 %18 to i1, !dbg !1107
  %19 = zext i1 %b to i8, !dbg !1107
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !1107
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !1085, metadata !DIExpression()), !dbg !1108
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !1109
  %21 = zext i1 %20 to i8, !dbg !1109
  store i8 %21, i8* %0, align 1, !dbg !1109
  %22 = load i8, i8* %0, align 1, !dbg !1109, !range !680, !noundef !23
  %_8 = trunc i8 %22 to i1, !dbg !1109
  br label %bb1, !dbg !1109

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !1109

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1110
  store i64 %a, i64* %23, align 8, !dbg !1110
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !1110
  store i64 1, i64* %24, align 8, !dbg !1110
  br label %bb4, !dbg !1111

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !1112
  store i64 0, i64* %25, align 8, !dbg !1112
  br label %bb4, !dbg !1111

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !1113
  %27 = load i64, i64* %26, align 8, !dbg !1113, !range !1114, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1113
  %29 = load i64, i64* %28, align 8, !dbg !1113
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !1113
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !1113
  ret { i64, i64 } %31, !dbg !1113
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf791a6b7be2128e2E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1115 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill4 = alloca i8, align 1
  %a.dbg.spill3 = alloca i64, align 8
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill2 = alloca i64, align 8
  %self.dbg.spill1 = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i8 }, align 8
  %2 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1117, metadata !DIExpression()), !dbg !1122
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1118, metadata !DIExpression()), !dbg !1123
  store i64 %self, i64* %self.dbg.spill1, align 8, !dbg !1124
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill1, metadata !1125, metadata !DIExpression()), !dbg !1132
  store i64 %rhs, i64* %rhs.dbg.spill2, align 8, !dbg !1133
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill2, metadata !1128, metadata !DIExpression()), !dbg !1132
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !1132
  %4 = extractvalue { i64, i1 } %3, 0, !dbg !1132
  %5 = extractvalue { i64, i1 } %3, 1, !dbg !1132
  %6 = zext i1 %5 to i8, !dbg !1132
  %7 = bitcast { i64, i8 }* %1 to i64*, !dbg !1132
  store i64 %4, i64* %7, align 8, !dbg !1132
  %8 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1132
  store i8 %6, i8* %8, align 8, !dbg !1132
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1132
  %_13.0 = load i64, i64* %9, align 8, !dbg !1132
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1132
  %11 = load i8, i8* %10, align 8, !dbg !1132, !range !680, !noundef !23
  %_13.1 = trunc i8 %11 to i1, !dbg !1132
  br label %bb5, !dbg !1132

bb5:                                              ; preds = %start
  store i64 %_13.0, i64* %a.dbg.spill, align 8, !dbg !1132
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1129, metadata !DIExpression()), !dbg !1134
  %12 = zext i1 %_13.1 to i8, !dbg !1132
  store i8 %12, i8* %b.dbg.spill, align 1, !dbg !1132
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1131, metadata !DIExpression()), !dbg !1134
  %13 = bitcast { i64, i8 }* %_5 to i64*, !dbg !1134
  store i64 %_13.0, i64* %13, align 8, !dbg !1134
  %14 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !1134
  %15 = zext i1 %_13.1 to i8, !dbg !1134
  store i8 %15, i8* %14, align 8, !dbg !1134
  %16 = bitcast { i64, i8 }* %_5 to i64*, !dbg !1135
  %a = load i64, i64* %16, align 8, !dbg !1135
  store i64 %a, i64* %a.dbg.spill3, align 8, !dbg !1135
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill3, metadata !1119, metadata !DIExpression()), !dbg !1136
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %_5, i32 0, i32 1, !dbg !1137
  %18 = load i8, i8* %17, align 8, !dbg !1137, !range !680, !noundef !23
  %b = trunc i8 %18 to i1, !dbg !1137
  %19 = zext i1 %b to i8, !dbg !1137
  store i8 %19, i8* %b.dbg.spill4, align 1, !dbg !1137
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill4, metadata !1121, metadata !DIExpression()), !dbg !1138
  %20 = call i1 @llvm.expect.i1(i1 %b, i1 false), !dbg !1139
  %21 = zext i1 %20 to i8, !dbg !1139
  store i8 %21, i8* %0, align 1, !dbg !1139
  %22 = load i8, i8* %0, align 1, !dbg !1139, !range !680, !noundef !23
  %_8 = trunc i8 %22 to i1, !dbg !1139
  br label %bb1, !dbg !1139

bb1:                                              ; preds = %bb5
  br i1 %_8, label %bb2, label %bb3, !dbg !1139

bb3:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1140
  store i64 %a, i64* %23, align 8, !dbg !1140
  %24 = bitcast { i64, i64 }* %2 to i64*, !dbg !1140
  store i64 1, i64* %24, align 8, !dbg !1140
  br label %bb4, !dbg !1141

bb2:                                              ; preds = %bb1
  %25 = bitcast { i64, i64 }* %2 to i64*, !dbg !1142
  store i64 0, i64* %25, align 8, !dbg !1142
  br label %bb4, !dbg !1141

bb4:                                              ; preds = %bb3, %bb2
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !1143
  %27 = load i64, i64* %26, align 8, !dbg !1143, !range !1114, !noundef !23
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !1143
  %29 = load i64, i64* %28, align 8, !dbg !1143
  %30 = insertvalue { i64, i64 } undef, i64 %27, 0, !dbg !1143
  %31 = insertvalue { i64, i64 } %30, i64 %29, 1, !dbg !1143
  ret { i64, i64 } %31, !dbg !1143
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3ops8function5FnMut8call_mut17hdb098b4208e965adE({}* align 1 %_1, i32* align 4 %0) unnamed_addr #0 !dbg !1144 {
start:
  %_1.dbg.spill = alloca {}*, align 8
  %_2 = alloca i32*, align 8
  store i32* %0, i32** %_2, align 8
  store {}* %_1, {}** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_1.dbg.spill, metadata !1156, metadata !DIExpression()), !dbg !1165
  call void @llvm.dbg.declare(metadata i32** %_2, metadata !1158, metadata !DIExpression()), !dbg !1165
  %1 = load i32*, i32** %_2, align 8, !dbg !1165, !nonnull !23, !align !456, !noundef !23
; call <i32 as alloc::vec::is_zero::IsZero>::is_zero
  %2 = call zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17hd885cb56167bc602E"(i32* align 4 %1), !dbg !1165
  br label %bb1, !dbg !1165

bb1:                                              ; preds = %start
  ret i1 %2, !dbg !1165
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hf3480924c578e713E"(i64** %_1) unnamed_addr #0 !dbg !1166 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  %_2 = alloca {}, align 1
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !1172, metadata !DIExpression()), !dbg !1177
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1173, metadata !DIExpression()), !dbg !1177
  %0 = load i64*, i64** %_1, align 8, !dbg !1177, !nonnull !23, !noundef !23
; call core::ops::function::FnOnce::call_once
  %1 = call i32 @_ZN4core3ops8function6FnOnce9call_once17hc939b7f1fb900d6aE(i64* %0), !dbg !1177
  br label %bb1, !dbg !1177

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !1177
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h2aaf47d9463627a6E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1178 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_uninitialized.rs:11:1: 23:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_uninitialized.rs:11:1: 23:2]"* %_1, metadata !1186, metadata !DIExpression()), !dbg !1190
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1187, metadata !DIExpression()), !dbg !1190
; invoke misc_tests::test_uninitialized::test_buffer::{{closure}}
  invoke void @"_ZN10misc_tests18test_uninitialized11test_buffer28_$u7b$$u7b$closure$u7d$$u7d$17h55bee68f352943a6E"(%"[closure@src/test_uninitialized.rs:11:1: 23:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1190

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1190

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1190

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1190
  %7 = load i8*, i8** %6, align 8, !dbg !1190
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1190
  %9 = load i32, i32* %8, align 8, !dbg !1190
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1190
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1190
  resume { i8*, i32 } %11, !dbg !1190

bb2:                                              ; preds = %bb1
  ret void, !dbg !1190
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h3ccad5d1263d321bE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1191 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_quicksort.rs:46:1: 61:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_quicksort.rs:46:1: 61:2]"* %_1, metadata !1198, metadata !DIExpression()), !dbg !1202
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1199, metadata !DIExpression()), !dbg !1202
; invoke misc_tests::test_quicksort::test_quicksort::{{closure}}
  invoke void @"_ZN10misc_tests14test_quicksort14test_quicksort28_$u7b$$u7b$closure$u7d$$u7d$17hfa9fc962a9d803daE"(%"[closure@src/test_quicksort.rs:46:1: 61:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1202

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1202

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1202

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1202
  %7 = load i8*, i8** %6, align 8, !dbg !1202
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1202
  %9 = load i32, i32* %8, align 8, !dbg !1202
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1202
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1202
  resume { i8*, i32 } %11, !dbg !1202

bb2:                                              ; preds = %bb1
  ret void, !dbg !1202
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h469d1cfeae6a1c89E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1203 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_typedef.rs:11:1: 27:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_typedef.rs:11:1: 27:2]"* %_1, metadata !1210, metadata !DIExpression()), !dbg !1214
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1211, metadata !DIExpression()), !dbg !1214
; invoke misc_tests::test_typedef::test_typedef::{{closure}}
  invoke void @"_ZN10misc_tests12test_typedef12test_typedef28_$u7b$$u7b$closure$u7d$$u7d$17hd7b10812bb99a067E"(%"[closure@src/test_typedef.rs:11:1: 27:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1214

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1214

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1214

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1214
  %7 = load i8*, i8** %6, align 8, !dbg !1214
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1214
  %9 = load i32, i32* %8, align 8, !dbg !1214
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1214
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1214
  resume { i8*, i32 } %11, !dbg !1214

bb2:                                              ; preds = %bb1
  ret void, !dbg !1214
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h674999c85c10c66bE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1215 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_memory.rs:31:1: 43:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_memory.rs:31:1: 43:2]"* %_1, metadata !1222, metadata !DIExpression()), !dbg !1226
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1223, metadata !DIExpression()), !dbg !1226
; invoke misc_tests::test_memory::test_memset::{{closure}}
  invoke void @"_ZN10misc_tests11test_memory11test_memset28_$u7b$$u7b$closure$u7d$$u7d$17h57776ad2bc7b9083E"(%"[closure@src/test_memory.rs:31:1: 43:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1226

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1226

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1226

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1226
  %7 = load i8*, i8** %6, align 8, !dbg !1226
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1226
  %9 = load i32, i32* %8, align 8, !dbg !1226
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1226
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1226
  resume { i8*, i32 } %11, !dbg !1226

bb2:                                              ; preds = %bb1
  ret void, !dbg !1226
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h9213feb16ac2742eE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1227 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_exprs.rs:12:1: 24:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_exprs.rs:12:1: 24:2]"* %_1, metadata !1234, metadata !DIExpression()), !dbg !1238
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1235, metadata !DIExpression()), !dbg !1238
; invoke misc_tests::test_exprs::test_exprs::{{closure}}
  invoke void @"_ZN10misc_tests10test_exprs10test_exprs28_$u7b$$u7b$closure$u7d$$u7d$17h0597e21984baff64E"(%"[closure@src/test_exprs.rs:12:1: 24:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1238

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1238

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1238

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1238
  %7 = load i8*, i8** %6, align 8, !dbg !1238
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1238
  %9 = load i32, i32* %8, align 8, !dbg !1238
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1238
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1238
  resume { i8*, i32 } %11, !dbg !1238

bb2:                                              ; preds = %bb1
  ret void, !dbg !1238
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hc2838c4de4ab2d20E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1239 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_lvalues.rs:12:1: 24:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_lvalues.rs:12:1: 24:2]"* %_1, metadata !1246, metadata !DIExpression()), !dbg !1250
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1247, metadata !DIExpression()), !dbg !1250
; invoke misc_tests::test_lvalues::test_lvalue::{{closure}}
  invoke void @"_ZN10misc_tests12test_lvalues11test_lvalue28_$u7b$$u7b$closure$u7d$$u7d$17h5e512760a21da14cE"(%"[closure@src/test_lvalues.rs:12:1: 24:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1250

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1250

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1250

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1250
  %7 = load i8*, i8** %6, align 8, !dbg !1250
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1250
  %9 = load i32, i32* %8, align 8, !dbg !1250
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1250
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1250
  resume { i8*, i32 } %11, !dbg !1250

bb2:                                              ; preds = %bb1
  ret void, !dbg !1250
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17hc939b7f1fb900d6aE(i64* %0) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1251 {
start:
  %1 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !1255, metadata !DIExpression()), !dbg !1257
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1256, metadata !DIExpression()), !dbg !1257
; invoke std::rt::lang_start::{{closure}}
  %2 = invoke i32 @"_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h9976755c369c8586E"(i64** align 8 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1257

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1257

cleanup:                                          ; preds = %start
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1257

bb4:                                              ; preds = %bb3
  %8 = bitcast { i8*, i32 }* %1 to i8**, !dbg !1257
  %9 = load i8*, i8** %8, align 8, !dbg !1257
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !1257
  %11 = load i32, i32* %10, align 8, !dbg !1257
  %12 = insertvalue { i8*, i32 } undef, i8* %9, 0, !dbg !1257
  %13 = insertvalue { i8*, i32 } %12, i32 %11, 1, !dbg !1257
  resume { i8*, i32 } %13, !dbg !1257

bb2:                                              ; preds = %bb1
  ret i32 %2, !dbg !1257
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hcb538e4adf9693b7E(void ()* %_1) unnamed_addr #0 !dbg !1258 {
start:
  %_1.dbg.spill = alloca void ()*, align 8
  %_2 = alloca {}, align 1
  store void ()* %_1, void ()** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata void ()** %_1.dbg.spill, metadata !1260, metadata !DIExpression()), !dbg !1264
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1261, metadata !DIExpression()), !dbg !1264
  call void %_1(), !dbg !1264
  br label %bb1, !dbg !1264

bb1:                                              ; preds = %start
  ret void, !dbg !1264
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hd249bbf57cc3d7e7E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1265 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_quicksort.rs:14:1: 28:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_quicksort.rs:14:1: 28:2]"* %_1, metadata !1271, metadata !DIExpression()), !dbg !1275
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1272, metadata !DIExpression()), !dbg !1275
; invoke misc_tests::test_quicksort::test_swap::{{closure}}
  invoke void @"_ZN10misc_tests14test_quicksort9test_swap28_$u7b$$u7b$closure$u7d$$u7d$17hc7ae43fd07ef6aa0E"(%"[closure@src/test_quicksort.rs:14:1: 28:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1275

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1275

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1275

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1275
  %7 = load i8*, i8** %6, align 8, !dbg !1275
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1275
  %9 = load i32, i32* %8, align 8, !dbg !1275
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1275
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1275
  resume { i8*, i32 } %11, !dbg !1275

bb2:                                              ; preds = %bb1
  ret void, !dbg !1275
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hd4e7d2f2cde61ecfE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1276 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_shadowing.rs:14:1: 21:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_shadowing.rs:14:1: 21:2]"* %_1, metadata !1283, metadata !DIExpression()), !dbg !1287
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1284, metadata !DIExpression()), !dbg !1287
; invoke misc_tests::test_shadowing::test_twice::{{closure}}
  invoke void @"_ZN10misc_tests14test_shadowing10test_twice28_$u7b$$u7b$closure$u7d$$u7d$17h91511127ca1da4aeE"(%"[closure@src/test_shadowing.rs:14:1: 21:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1287

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1287

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1287

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1287
  %7 = load i8*, i8** %6, align 8, !dbg !1287
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1287
  %9 = load i32, i32* %8, align 8, !dbg !1287
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1287
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1287
  resume { i8*, i32 } %11, !dbg !1287

bb2:                                              ; preds = %bb1
  ret void, !dbg !1287
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17he6cfa5965298963dE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1288 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_sizeofs.rs:14:1: 26:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_sizeofs.rs:14:1: 26:2]"* %_1, metadata !1295, metadata !DIExpression()), !dbg !1299
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1296, metadata !DIExpression()), !dbg !1299
; invoke misc_tests::test_sizeofs::test_sizeofs::{{closure}}
  invoke void @"_ZN10misc_tests12test_sizeofs12test_sizeofs28_$u7b$$u7b$closure$u7d$$u7d$17h7ba3292778a18d8aE"(%"[closure@src/test_sizeofs.rs:14:1: 26:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1299

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1299

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1299

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1299
  %7 = load i8*, i8** %6, align 8, !dbg !1299
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1299
  %9 = load i32, i32* %8, align 8, !dbg !1299
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1299
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1299
  resume { i8*, i32 } %11, !dbg !1299

bb2:                                              ; preds = %bb1
  ret void, !dbg !1299
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hef526dcca281d131E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1300 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_memory.rs:16:1: 28:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_memory.rs:16:1: 28:2]"* %_1, metadata !1306, metadata !DIExpression()), !dbg !1310
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1307, metadata !DIExpression()), !dbg !1310
; invoke misc_tests::test_memory::test_malloc::{{closure}}
  invoke void @"_ZN10misc_tests11test_memory11test_malloc28_$u7b$$u7b$closure$u7d$$u7d$17h4c6d6ecf073736baE"(%"[closure@src/test_memory.rs:16:1: 28:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1310

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1310

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1310

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1310
  %7 = load i8*, i8** %6, align 8, !dbg !1310
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1310
  %9 = load i32, i32* %8, align 8, !dbg !1310
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1310
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1310
  resume { i8*, i32 } %11, !dbg !1310

bb2:                                              ; preds = %bb1
  ret void, !dbg !1310
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hf3fbbd19834e62dcE() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1311 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_shadowing.rs:24:1: 36:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_shadowing.rs:24:1: 36:2]"* %_1, metadata !1317, metadata !DIExpression()), !dbg !1321
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1318, metadata !DIExpression()), !dbg !1321
; invoke misc_tests::test_shadowing::test_shadowing::{{closure}}
  invoke void @"_ZN10misc_tests14test_shadowing14test_shadowing28_$u7b$$u7b$closure$u7d$$u7d$17h21f84b91f0cde026E"(%"[closure@src/test_shadowing.rs:24:1: 36:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1321

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1321

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1321

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1321
  %7 = load i8*, i8** %6, align 8, !dbg !1321
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1321
  %9 = load i32, i32* %8, align 8, !dbg !1321
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1321
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1321
  resume { i8*, i32 } %11, !dbg !1321

bb2:                                              ; preds = %bb1
  ret void, !dbg !1321
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hf8231621d30575b0E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1322 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_quicksort.rs:31:1: 43:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_quicksort.rs:31:1: 43:2]"* %_1, metadata !1328, metadata !DIExpression()), !dbg !1332
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1329, metadata !DIExpression()), !dbg !1332
; invoke misc_tests::test_quicksort::test_partition::{{closure}}
  invoke void @"_ZN10misc_tests14test_quicksort14test_partition28_$u7b$$u7b$closure$u7d$$u7d$17he20c6d4d533c755dE"(%"[closure@src/test_quicksort.rs:31:1: 43:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1332

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1332

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1332

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1332
  %7 = load i8*, i8** %6, align 8, !dbg !1332
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1332
  %9 = load i32, i32* %8, align 8, !dbg !1332
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1332
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1332
  resume { i8*, i32 } %11, !dbg !1332

bb2:                                              ; preds = %bb1
  ret void, !dbg !1332
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hffcafe7089bcdb86E() unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1333 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca %"[closure@src/test_uninitialized.rs:26:1: 39:2]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@src/test_uninitialized.rs:26:1: 39:2]"* %_1, metadata !1339, metadata !DIExpression()), !dbg !1343
  call void @llvm.dbg.declare(metadata {}* %_2, metadata !1340, metadata !DIExpression()), !dbg !1343
; invoke misc_tests::test_uninitialized::test_types::{{closure}}
  invoke void @"_ZN10misc_tests18test_uninitialized10test_types28_$u7b$$u7b$closure$u7d$$u7d$17h62f328f61d4fc5a7E"(%"[closure@src/test_uninitialized.rs:26:1: 39:2]"* align 1 %_1)
          to label %bb1 unwind label %cleanup, !dbg !1343

bb3:                                              ; preds = %cleanup
  br label %bb4, !dbg !1343

cleanup:                                          ; preds = %start
  %1 = landingpad { i8*, i32 }
          cleanup
  %2 = extractvalue { i8*, i32 } %1, 0
  %3 = extractvalue { i8*, i32 } %1, 1
  %4 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  br label %bb3

bb1:                                              ; preds = %start
  br label %bb2, !dbg !1343

bb4:                                              ; preds = %bb3
  %6 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1343
  %7 = load i8*, i8** %6, align 8, !dbg !1343
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1343
  %9 = load i32, i32* %8, align 8, !dbg !1343
  %10 = insertvalue { i8*, i32 } undef, i8* %7, 0, !dbg !1343
  %11 = insertvalue { i8*, i32 } %10, i32 %9, 1, !dbg !1343
  resume { i8*, i32 } %11, !dbg !1343

bb2:                                              ; preds = %bb1
  ret void, !dbg !1343
}

; core::ptr::drop_in_place<&i32>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h55f4c3eed93eff6cE"(i32** %_1) unnamed_addr #0 !dbg !1344 {
start:
  %_1.dbg.spill = alloca i32**, align 8
  store i32** %_1, i32*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32*** %_1.dbg.spill, metadata !1349, metadata !DIExpression()), !dbg !1350
  ret void, !dbg !1350
}

; core::ptr::drop_in_place<&()>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17hc2274c1d1ec8c39aE"({}** %_1) unnamed_addr #0 !dbg !1351 {
start:
  %_1.dbg.spill = alloca {}**, align 8
  store {}** %_1, {}*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}*** %_1.dbg.spill, metadata !1356, metadata !DIExpression()), !dbg !1359
  ret void, !dbg !1359
}

; core::ptr::drop_in_place<alloc::vec::Vec<i32>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17hc42f131b2d017f6fE"(%"alloc::vec::Vec<i32>"* %_1) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1360 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  store %"alloc::vec::Vec<i32>"* %_1, %"alloc::vec::Vec<i32>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %_1.dbg.spill, metadata !1384, metadata !DIExpression()), !dbg !1387
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5df701328a99ba49E"(%"alloc::vec::Vec<i32>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !1387

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<i32>"* %_1 to { i32*, i64 }*, !dbg !1387
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  invoke void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17hb3aaa09deee1536aE"({ i32*, i64 }* %1) #17
          to label %bb1 unwind label %abort, !dbg !1387

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<i32>"* %_1 to { i32*, i64 }*, !dbg !1387
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
  call void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17hb3aaa09deee1536aE"({ i32*, i64 }* %7), !dbg !1387
  br label %bb2, !dbg !1387

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !1387
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #18, !dbg !1387
  unreachable, !dbg !1387

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1387
  %10 = load i8*, i8** %9, align 8, !dbg !1387
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1387
  %12 = load i32, i32* %11, align 8, !dbg !1387
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !1387
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !1387
  resume { i8*, i32 } %14, !dbg !1387

bb2:                                              ; preds = %bb4
  ret void, !dbg !1387
}

; core::ptr::drop_in_place<&[i32; 1]>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$1$u5d$$GT$17hd984f955d0e1083dE"([1 x i32]** %_1) unnamed_addr #0 !dbg !1388 {
start:
  %_1.dbg.spill = alloca [1 x i32]**, align 8
  store [1 x i32]** %_1, [1 x i32]*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i32]*** %_1.dbg.spill, metadata !1393, metadata !DIExpression()), !dbg !1396
  ret void, !dbg !1396
}

; core::ptr::drop_in_place<&[i32; 3]>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$3$u5d$$GT$17h0af8c2383515be9bE"([3 x i32]** %_1) unnamed_addr #0 !dbg !1397 {
start:
  %_1.dbg.spill = alloca [3 x i32]**, align 8
  store [3 x i32]** %_1, [3 x i32]*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i32]*** %_1.dbg.spill, metadata !1402, metadata !DIExpression()), !dbg !1405
  ret void, !dbg !1405
}

; core::ptr::drop_in_place<&[i32; 5]>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$5$u5d$$GT$17h55c2f46b5138ef3cE"([5 x i32]** %_1) unnamed_addr #0 !dbg !1406 {
start:
  %_1.dbg.spill = alloca [5 x i32]**, align 8
  store [5 x i32]** %_1, [5 x i32]*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]*** %_1.dbg.spill, metadata !1411, metadata !DIExpression()), !dbg !1414
  ret void, !dbg !1414
}

; core::ptr::drop_in_place<&[i32; 6]>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$6$u5d$$GT$17hfbc5c32dc62ea6d3E"([6 x i32]** %_1) unnamed_addr #0 !dbg !1415 {
start:
  %_1.dbg.spill = alloca [6 x i32]**, align 8
  store [6 x i32]** %_1, [6 x i32]*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i32]*** %_1.dbg.spill, metadata !1420, metadata !DIExpression()), !dbg !1423
  ret void, !dbg !1423
}

; core::ptr::drop_in_place<&[i32; 10]>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr50drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$10$u5d$$GT$17hedff71cbd66a5e9fE"([10 x i32]** %_1) unnamed_addr #0 !dbg !1424 {
start:
  %_1.dbg.spill = alloca [10 x i32]**, align 8
  store [10 x i32]** %_1, [10 x i32]*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i32]*** %_1.dbg.spill, metadata !1429, metadata !DIExpression()), !dbg !1432
  ret void, !dbg !1432
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<i32>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17hb3aaa09deee1536aE"({ i32*, i64 }* %_1) unnamed_addr #2 !dbg !1433 {
start:
  %_1.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %_1, { i32*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %_1.dbg.spill, metadata !1438, metadata !DIExpression()), !dbg !1441
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hee40db5093132691E"({ i32*, i64 }* align 8 %_1), !dbg !1441
  br label %bb1, !dbg !1441

bb1:                                              ; preds = %start
  ret void, !dbg !1441
}

; core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17haf88146aabe3cfcdE"({ i64*, i64 }* %_1) unnamed_addr #2 !dbg !1442 {
start:
  %_1.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %_1, { i64*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %_1.dbg.spill, metadata !1452, metadata !DIExpression()), !dbg !1455
; call <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h04d8fe95e94e9f97E"({ i64*, i64 }* align 8 %_1), !dbg !1455
  br label %bb1, !dbg !1455

bb1:                                              ; preds = %start
  ret void, !dbg !1455
}

; core::ptr::drop_in_place<alloc::vec::Vec<[i32; 4]>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr68drop_in_place$LT$alloc..vec..Vec$LT$$u5b$i32$u3b$$u20$4$u5d$$GT$$GT$17hf07e1a2a4e158af9E"(%"alloc::vec::Vec<[i32; 4]>"* %_1) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !1456 {
start:
  %0 = alloca { i8*, i32 }, align 8
  %_1.dbg.spill = alloca %"alloc::vec::Vec<[i32; 4]>"*, align 8
  store %"alloc::vec::Vec<[i32; 4]>"* %_1, %"alloc::vec::Vec<[i32; 4]>"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<[i32; 4]>"** %_1.dbg.spill, metadata !1482, metadata !DIExpression()), !dbg !1485
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb4fef587a28f2bddE"(%"alloc::vec::Vec<[i32; 4]>"* align 8 %_1)
          to label %bb4 unwind label %cleanup, !dbg !1485

bb3:                                              ; preds = %cleanup
  %1 = bitcast %"alloc::vec::Vec<[i32; 4]>"* %_1 to { i32*, i64 }*, !dbg !1485
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<[i32; 4]>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$alloc..raw_vec..RawVec$LT$$u5b$i32$u3b$$u20$4$u5d$$GT$$GT$17hd325950bbc3ab561E"({ i32*, i64 }* %1) #17
          to label %bb1 unwind label %abort, !dbg !1485

cleanup:                                          ; preds = %start
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  %5 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %4, i32* %6, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %7 = bitcast %"alloc::vec::Vec<[i32; 4]>"* %_1 to { i32*, i64 }*, !dbg !1485
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<[i32; 4]>>
  call void @"_ZN4core3ptr75drop_in_place$LT$alloc..raw_vec..RawVec$LT$$u5b$i32$u3b$$u20$4$u5d$$GT$$GT$17hd325950bbc3ab561E"({ i32*, i64 }* %7), !dbg !1485
  br label %bb2, !dbg !1485

abort:                                            ; preds = %bb3
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !1485
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #18, !dbg !1485
  unreachable, !dbg !1485

bb1:                                              ; preds = %bb3
  %9 = bitcast { i8*, i32 }* %0 to i8**, !dbg !1485
  %10 = load i8*, i8** %9, align 8, !dbg !1485
  %11 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !1485
  %12 = load i32, i32* %11, align 8, !dbg !1485
  %13 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !1485
  %14 = insertvalue { i8*, i32 } %13, i32 %12, 1, !dbg !1485
  resume { i8*, i32 } %14, !dbg !1485

bb2:                                              ; preds = %bb4
  ret void, !dbg !1485
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<[i32; 4]>>
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN4core3ptr75drop_in_place$LT$alloc..raw_vec..RawVec$LT$$u5b$i32$u3b$$u20$4$u5d$$GT$$GT$17hd325950bbc3ab561E"({ i32*, i64 }* %_1) unnamed_addr #2 !dbg !1486 {
start:
  %_1.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %_1, { i32*, i64 }** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %_1.dbg.spill, metadata !1491, metadata !DIExpression()), !dbg !1494
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he52222e5fff1b3f5E"({ i32*, i64 }* align 8 %_1), !dbg !1494
  br label %bb1, !dbg !1494

bb1:                                              ; preds = %start
  ret void, !dbg !1494
}

; core::ptr::drop_in_place<std::rt::lang_start<()>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hff7050e790475270E"(i64** %_1) unnamed_addr #0 !dbg !1495 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !1499, metadata !DIExpression()), !dbg !1502
  ret void, !dbg !1502
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hd3bacb1f2d9d38d1E"(i8* %ptr) unnamed_addr #0 !dbg !1503 {
start:
  %ptr.dbg.spill2 = alloca i8*, align 8
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill1 = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_5 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1520, metadata !DIExpression()), !dbg !1521
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !1522, metadata !DIExpression()), !dbg !1532
  store i8* %ptr, i8** %self.dbg.spill, align 8, !dbg !1547
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1545, metadata !DIExpression()), !dbg !1548
  store i8* %ptr, i8** %self.dbg.spill1, align 8, !dbg !1548
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill1, metadata !1549, metadata !DIExpression()), !dbg !1556
  %3 = bitcast {}** %1 to i64*, !dbg !1558
  store i64 0, i64* %3, align 8, !dbg !1558
  %data_address = load {}*, {}** %1, align 8, !dbg !1558
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !1558
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1531, metadata !DIExpression()), !dbg !1532
  br label %bb4, !dbg !1558

bb4:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to {}**, !dbg !1532
  store {}* %data_address, {}** %4, align 8, !dbg !1532
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !1532
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !1532
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_15 to i8*, !dbg !1532
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !1532
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_14 to i8**, !dbg !1532
  %other = load i8*, i8** %8, align 8, !dbg !1532
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !1532
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !1555, metadata !DIExpression()), !dbg !1556
  %9 = icmp eq i8* %ptr, %other, !dbg !1556
  %10 = zext i1 %9 to i8, !dbg !1556
  store i8 %10, i8* %0, align 1, !dbg !1556
  %11 = load i8, i8* %0, align 1, !dbg !1556, !range !680, !noundef !23
  %_3 = trunc i8 %11 to i1, !dbg !1556
  br label %bb5, !dbg !1556

bb5:                                              ; preds = %bb4
  %_2 = xor i1 %_3, true, !dbg !1566
  br i1 %_2, label %bb1, label %bb2, !dbg !1566

bb2:                                              ; preds = %bb5
  %12 = bitcast i8** %2 to {}**, !dbg !1567
  store {}* null, {}** %12, align 8, !dbg !1567
  br label %bb3, !dbg !1568

bb1:                                              ; preds = %bb5
  store i8* %ptr, i8** %ptr.dbg.spill2, align 8, !dbg !1569
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill2, metadata !1570, metadata !DIExpression()), !dbg !1573
  store i8* %ptr, i8** %_5, align 8, !dbg !1573
  %13 = load i8*, i8** %_5, align 8, !dbg !1575, !nonnull !23, !noundef !23
  store i8* %13, i8** %2, align 8, !dbg !1575
  br label %bb3, !dbg !1568

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8*, i8** %2, align 8, !dbg !1576
  ret i8* %14, !dbg !1576
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h6fb1179d75a4beb0E"({ i32, i32 }* align 4 %self) unnamed_addr #0 !dbg !1577 {
start:
  %self.dbg.spill = alloca { i32, i32 }*, align 8
  store { i32, i32 }* %self, { i32, i32 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %self.dbg.spill, metadata !1601, metadata !DIExpression()), !dbg !1604
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17ha3f59215a7fe2bcfE"({ i32, i32 }* align 4 %self), !dbg !1605
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !1605
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !1605
  br label %bb1, !dbg !1605

bb1:                                              ; preds = %start
  %3 = insertvalue { i32, i32 } undef, i32 %1, 0, !dbg !1606
  %4 = insertvalue { i32, i32 } %3, i32 %2, 1, !dbg !1606
  ret { i32, i32 } %4, !dbg !1606
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h7b1637b1988718b5E"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !1607 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1618, metadata !DIExpression()), !dbg !1621
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h013f4cf64bb64df5E"({ i64, i64 }* align 8 %self), !dbg !1622
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !1622
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !1622
  br label %bb1, !dbg !1622

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !1623
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !1623
  ret { i64, i64 } %4, !dbg !1623
}

; core::alloc::layout::Layout::from_size_valid_align
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h2bd876eb57732763E(i64 %size, i64 %align) unnamed_addr #0 !dbg !1624 {
start:
  %n.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %_11 = alloca { i64, i64 }, align 8
  %self1 = alloca i64, align 8
  %self = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1646, metadata !DIExpression()), !dbg !1648
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1647, metadata !DIExpression()), !dbg !1649
  call void @llvm.dbg.declare(metadata i64* %self, metadata !1650, metadata !DIExpression()), !dbg !1661
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !1663, metadata !DIExpression()), !dbg !1670
  store i64 %align, i64* %self1, align 8, !dbg !1662
  %_15 = load i64, i64* %self1, align 8, !dbg !1670, !range !1671, !noundef !23
  store i64 %_15, i64* %n.dbg.spill, align 8, !dbg !1670
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1672, metadata !DIExpression()), !dbg !1687
  store i64 %_15, i64* %self, align 8, !dbg !1687
  %_8 = load i64, i64* %self, align 8, !dbg !1661
  %_7 = sub i64 %_8, 1, !dbg !1689
  %_5 = sub i64 9223372036854775807, %_7, !dbg !1690
  %_3 = icmp ugt i64 %size, %_5, !dbg !1691
  br i1 %_3, label %bb1, label %bb2, !dbg !1691

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %_11 to i64*, !dbg !1692
  store i64 %size, i64* %1, align 8, !dbg !1692
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !1692
  store i64 %align, i64* %2, align 8, !dbg !1692
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 0, !dbg !1693
  %4 = load i64, i64* %3, align 8, !dbg !1693
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_11, i32 0, i32 1, !dbg !1693
  %6 = load i64, i64* %5, align 8, !dbg !1693, !range !1671, !noundef !23
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1693
  store i64 %4, i64* %7, align 8, !dbg !1693
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1693
  store i64 %6, i64* %8, align 8, !dbg !1693
  br label %bb3, !dbg !1694

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1695
  store i64 0, i64* %9, align 8, !dbg !1695
  br label %bb3, !dbg !1694

bb3:                                              ; preds = %bb2, %bb1
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1694
  %11 = load i64, i64* %10, align 8, !dbg !1694
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1694
  %13 = load i64, i64* %12, align 8, !dbg !1694, !range !299, !noundef !23
  %14 = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !1694
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1, !dbg !1694
  ret { i64, i64 } %15, !dbg !1694
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h21430b4bd37f8f85E(i64 %n) unnamed_addr #0 !dbg !1696 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1700, metadata !DIExpression()), !dbg !1725
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1726, metadata !DIExpression()), !dbg !1771
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !1773, metadata !DIExpression()), !dbg !1784
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !1780, metadata !DIExpression()), !dbg !1784
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !1703, metadata !DIExpression()), !dbg !1785
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !1786, metadata !DIExpression()), !dbg !1798
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !1768, metadata !DIExpression()), !dbg !1800
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !1793, metadata !DIExpression()), !dbg !1801
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf791a6b7be2128e2E"(i64 16, i64 %n), !dbg !1772
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !1772
  br label %bb1, !dbg !1772

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !1784
  %_15 = load i64, i64* %3, align 8, !dbg !1784, !range !1114, !noundef !23
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !1784

bb9:                                              ; preds = %bb1
  unreachable, !dbg !1784

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !1784
  store i64 1, i64* %4, align 8, !dbg !1784
  br label %bb11, !dbg !1784

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !1784
  %v = load i64, i64* %5, align 8, !dbg !1784
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !1784
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !1781, metadata !DIExpression()), !dbg !1802
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1802
  store i64 %v, i64* %6, align 8, !dbg !1802
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !1802
  store i64 0, i64* %7, align 8, !dbg !1802
  br label %bb11, !dbg !1784

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !1771
  %_18 = load i64, i64* %8, align 8, !dbg !1771, !range !1114, !noundef !23
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !1771

bb13:                                             ; preds = %bb11
  unreachable, !dbg !1771

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1771
  %v4 = load i64, i64* %9, align 8, !dbg !1771
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !1771
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !1765, metadata !DIExpression()), !dbg !1803
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1803
  store i64 %v4, i64* %10, align 8, !dbg !1803
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1803
  store i64 0, i64* %11, align 8, !dbg !1803
  br label %bb2, !dbg !1771

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1800
  store i64 1, i64* %12, align 8, !dbg !1800
  br label %bb2, !dbg !1771

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1772
  %_9 = load i64, i64* %13, align 8, !dbg !1772, !range !1114, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !1772

bb4:                                              ; preds = %bb2
  unreachable, !dbg !1772

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1772
  %val = load i64, i64* %14, align 8, !dbg !1772
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1772
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1723, metadata !DIExpression()), !dbg !1804
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !1804
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !1701, metadata !DIExpression()), !dbg !1805
  store i64 4, i64* %align.dbg.spill, align 8, !dbg !1806
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1816, metadata !DIExpression()), !dbg !1830
  store i64 4, i64* %0, align 8, !dbg !1830
  %_14 = load i64, i64* %0, align 8, !dbg !1830, !range !1671, !noundef !23
  br label %bb15, !dbg !1830

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2602f275c11ff874E"(), !dbg !1801
  br label %bb16, !dbg !1801

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1801
  store i64 0, i64* %15, align 8, !dbg !1801
  br label %bb7, !dbg !1832

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1832
  %17 = load i64, i64* %16, align 8, !dbg !1832
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1832
  %19 = load i64, i64* %18, align 8, !dbg !1832, !range !299, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !1832
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !1832
  ret { i64, i64 } %21, !dbg !1832

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h2bd876eb57732763E(i64 %val, i64 %_14), !dbg !1833
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !1833
  br label %bb6, !dbg !1833

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !1832
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h27fd1a567895a074E(i64 %n) unnamed_addr #0 !dbg !1834 {
start:
  %0 = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %array_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %v.dbg.spill5 = alloca i64, align 8
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill3 = alloca %"core::alloc::layout::LayoutError", align 1
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %residual.dbg.spill2 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %n.dbg.spill = alloca i64, align 8
  %self1 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %_3 = alloca { i64, i64 }, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1836, metadata !DIExpression()), !dbg !1843
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !1844, metadata !DIExpression()), !dbg !1854
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !1856, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %err.dbg.spill, metadata !1860, metadata !DIExpression()), !dbg !1864
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill, metadata !1839, metadata !DIExpression()), !dbg !1865
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>::Err"* %residual.dbg.spill2, metadata !1866, metadata !DIExpression()), !dbg !1873
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !1851, metadata !DIExpression()), !dbg !1875
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill3, metadata !1870, metadata !DIExpression()), !dbg !1876
; call core::num::<impl usize>::checked_mul
  %2 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf791a6b7be2128e2E"(i64 4, i64 %n), !dbg !1855
  store { i64, i64 } %2, { i64, i64 }* %self1, align 8, !dbg !1855
  br label %bb1, !dbg !1855

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %self1 to i64*, !dbg !1864
  %_15 = load i64, i64* %3, align 8, !dbg !1864, !range !1114, !noundef !23
  switch i64 %_15, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !1864

bb9:                                              ; preds = %bb1
  unreachable, !dbg !1864

bb8:                                              ; preds = %bb1
  %4 = bitcast { i64, i64 }* %self to i64*, !dbg !1864
  store i64 1, i64* %4, align 8, !dbg !1864
  br label %bb11, !dbg !1864

bb10:                                             ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !1864
  %v = load i64, i64* %5, align 8, !dbg !1864
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !1864
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !1861, metadata !DIExpression()), !dbg !1877
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1877
  store i64 %v, i64* %6, align 8, !dbg !1877
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !1877
  store i64 0, i64* %7, align 8, !dbg !1877
  br label %bb11, !dbg !1864

bb11:                                             ; preds = %bb8, %bb10
  %8 = bitcast { i64, i64 }* %self to i64*, !dbg !1854
  %_18 = load i64, i64* %8, align 8, !dbg !1854, !range !1114, !noundef !23
  switch i64 %_18, label %bb13 [
    i64 0, label %bb14
    i64 1, label %bb12
  ], !dbg !1854

bb13:                                             ; preds = %bb11
  unreachable, !dbg !1854

bb14:                                             ; preds = %bb11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1854
  %v4 = load i64, i64* %9, align 8, !dbg !1854
  store i64 %v4, i64* %v.dbg.spill5, align 8, !dbg !1854
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill5, metadata !1848, metadata !DIExpression()), !dbg !1878
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1878
  store i64 %v4, i64* %10, align 8, !dbg !1878
  %11 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1878
  store i64 0, i64* %11, align 8, !dbg !1878
  br label %bb2, !dbg !1854

bb12:                                             ; preds = %bb11
  %12 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1875
  store i64 1, i64* %12, align 8, !dbg !1875
  br label %bb2, !dbg !1854

bb2:                                              ; preds = %bb14, %bb12
  %13 = bitcast { i64, i64 }* %_3 to i64*, !dbg !1855
  %_9 = load i64, i64* %13, align 8, !dbg !1855, !range !1114, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !1855

bb4:                                              ; preds = %bb2
  unreachable, !dbg !1855

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !1855
  %val = load i64, i64* %14, align 8, !dbg !1855
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1855
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1841, metadata !DIExpression()), !dbg !1879
  store i64 %val, i64* %array_size.dbg.spill, align 8, !dbg !1879
  call void @llvm.dbg.declare(metadata i64* %array_size.dbg.spill, metadata !1837, metadata !DIExpression()), !dbg !1880
  store i64 4, i64* %align.dbg.spill, align 8, !dbg !1881
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1887, metadata !DIExpression()), !dbg !1894
  store i64 4, i64* %0, align 8, !dbg !1894
  %_14 = load i64, i64* %0, align 8, !dbg !1894, !range !1671, !noundef !23
  br label %bb15, !dbg !1894

bb5:                                              ; preds = %bb2
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2602f275c11ff874E"(), !dbg !1876
  br label %bb16, !dbg !1876

bb16:                                             ; preds = %bb5
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1876
  store i64 0, i64* %15, align 8, !dbg !1876
  br label %bb7, !dbg !1896

bb7:                                              ; preds = %bb6, %bb16
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1896
  %17 = load i64, i64* %16, align 8, !dbg !1896
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1896
  %19 = load i64, i64* %18, align 8, !dbg !1896, !range !299, !noundef !23
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !1896
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !1896
  ret { i64, i64 } %21, !dbg !1896

bb15:                                             ; preds = %bb3
; call core::alloc::layout::Layout::from_size_valid_align
  %22 = call { i64, i64 } @_ZN4core5alloc6layout6Layout21from_size_valid_align17h2bd876eb57732763E(i64 %val, i64 %_14), !dbg !1897
  store { i64, i64 } %22, { i64, i64 }* %1, align 8, !dbg !1897
  br label %bb6, !dbg !1897

bb6:                                              ; preds = %bb15
  br label %bb7, !dbg !1896
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h053978c79cf2d9e5E"([1 x i32]* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !1898 {
start:
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill3 = alloca [1 x i32]*, align 8
  %self.dbg.spill2 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [1 x i32]*, align 8
  %_5 = alloca { [0 x i32]*, i64 }, align 8
  store [1 x i32]* %self, [1 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i32]** %self.dbg.spill, metadata !1903, metadata !DIExpression()), !dbg !1905
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !1904, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !1907, metadata !DIExpression()), !dbg !1917
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill1, metadata !1919, metadata !DIExpression()), !dbg !1929
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill2, metadata !1931, metadata !DIExpression()), !dbg !1939
  store [1 x i32]* %self, [1 x i32]** %self.dbg.spill3, align 8, !dbg !1918
  call void @llvm.dbg.declare(metadata [1 x i32]** %self.dbg.spill3, metadata !1914, metadata !DIExpression()), !dbg !1917
  %_11.0 = bitcast [1 x i32]* %self to [0 x i32]*, !dbg !1917
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !1917
  store [0 x i32]* %_11.0, [0 x i32]** %0, align 8, !dbg !1917
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !1917
  store i64 1, i64* %1, align 8, !dbg !1917
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill4, metadata !1928, metadata !DIExpression()), !dbg !1929
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !1929
  store [0 x i32]* %_11.0, [0 x i32]** %2, align 8, !dbg !1929
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !1929
  store i64 1, i64* %3, align 8, !dbg !1929
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !1938, metadata !DIExpression()), !dbg !1939
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 0, !dbg !1941
  store [0 x i32]* %_11.0, [0 x i32]** %4, align 8, !dbg !1941
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 1, !dbg !1941
  store i64 1, i64* %5, align 8, !dbg !1941
; call <&T as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfef8a23a17576969E"({ [0 x i32]*, i64 }* align 8 %_5, %"core::fmt::Formatter"* align 8 %f), !dbg !1942
  br label %bb1, !dbg !1942

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !1943
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h4b00c9e669529a7dE"([10 x i32]* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !1944 {
start:
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill3 = alloca [10 x i32]*, align 8
  %self.dbg.spill2 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [10 x i32]*, align 8
  %_5 = alloca { [0 x i32]*, i64 }, align 8
  store [10 x i32]* %self, [10 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i32]** %self.dbg.spill, metadata !1948, metadata !DIExpression()), !dbg !1950
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !1949, metadata !DIExpression()), !dbg !1951
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !1952, metadata !DIExpression()), !dbg !1958
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill1, metadata !1960, metadata !DIExpression()), !dbg !1965
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill2, metadata !1967, metadata !DIExpression()), !dbg !1972
  store [10 x i32]* %self, [10 x i32]** %self.dbg.spill3, align 8, !dbg !1959
  call void @llvm.dbg.declare(metadata [10 x i32]** %self.dbg.spill3, metadata !1957, metadata !DIExpression()), !dbg !1958
  %_11.0 = bitcast [10 x i32]* %self to [0 x i32]*, !dbg !1958
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !1958
  store [0 x i32]* %_11.0, [0 x i32]** %0, align 8, !dbg !1958
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !1958
  store i64 10, i64* %1, align 8, !dbg !1958
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill4, metadata !1964, metadata !DIExpression()), !dbg !1965
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !1965
  store [0 x i32]* %_11.0, [0 x i32]** %2, align 8, !dbg !1965
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !1965
  store i64 10, i64* %3, align 8, !dbg !1965
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !1971, metadata !DIExpression()), !dbg !1972
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 0, !dbg !1974
  store [0 x i32]* %_11.0, [0 x i32]** %4, align 8, !dbg !1974
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 1, !dbg !1974
  store i64 10, i64* %5, align 8, !dbg !1974
; call <&T as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfef8a23a17576969E"({ [0 x i32]*, i64 }* align 8 %_5, %"core::fmt::Formatter"* align 8 %f), !dbg !1975
  br label %bb1, !dbg !1975

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !1976
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h6cf5eec818869c0cE"([3 x i32]* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !1977 {
start:
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill3 = alloca [3 x i32]*, align 8
  %self.dbg.spill2 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [3 x i32]*, align 8
  %_5 = alloca { [0 x i32]*, i64 }, align 8
  store [3 x i32]* %self, [3 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i32]** %self.dbg.spill, metadata !1981, metadata !DIExpression()), !dbg !1983
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !1982, metadata !DIExpression()), !dbg !1984
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !1985, metadata !DIExpression()), !dbg !1991
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill1, metadata !1993, metadata !DIExpression()), !dbg !1998
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill2, metadata !2000, metadata !DIExpression()), !dbg !2005
  store [3 x i32]* %self, [3 x i32]** %self.dbg.spill3, align 8, !dbg !1992
  call void @llvm.dbg.declare(metadata [3 x i32]** %self.dbg.spill3, metadata !1990, metadata !DIExpression()), !dbg !1991
  %_11.0 = bitcast [3 x i32]* %self to [0 x i32]*, !dbg !1991
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !1991
  store [0 x i32]* %_11.0, [0 x i32]** %0, align 8, !dbg !1991
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !1991
  store i64 3, i64* %1, align 8, !dbg !1991
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill4, metadata !1997, metadata !DIExpression()), !dbg !1998
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !1998
  store [0 x i32]* %_11.0, [0 x i32]** %2, align 8, !dbg !1998
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !1998
  store i64 3, i64* %3, align 8, !dbg !1998
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !2004, metadata !DIExpression()), !dbg !2005
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 0, !dbg !2007
  store [0 x i32]* %_11.0, [0 x i32]** %4, align 8, !dbg !2007
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 1, !dbg !2007
  store i64 3, i64* %5, align 8, !dbg !2007
; call <&T as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfef8a23a17576969E"({ [0 x i32]*, i64 }* align 8 %_5, %"core::fmt::Formatter"* align 8 %f), !dbg !2008
  br label %bb1, !dbg !2008

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !2009
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hcfda82f1da1c4c29E"([5 x i32]* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !2010 {
start:
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill3 = alloca [5 x i32]*, align 8
  %self.dbg.spill2 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [5 x i32]*, align 8
  %_5 = alloca { [0 x i32]*, i64 }, align 8
  store [5 x i32]* %self, [5 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]** %self.dbg.spill, metadata !2014, metadata !DIExpression()), !dbg !2016
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2015, metadata !DIExpression()), !dbg !2017
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !2018, metadata !DIExpression()), !dbg !2024
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill1, metadata !2026, metadata !DIExpression()), !dbg !2031
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill2, metadata !2033, metadata !DIExpression()), !dbg !2038
  store [5 x i32]* %self, [5 x i32]** %self.dbg.spill3, align 8, !dbg !2025
  call void @llvm.dbg.declare(metadata [5 x i32]** %self.dbg.spill3, metadata !2023, metadata !DIExpression()), !dbg !2024
  %_11.0 = bitcast [5 x i32]* %self to [0 x i32]*, !dbg !2024
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !2024
  store [0 x i32]* %_11.0, [0 x i32]** %0, align 8, !dbg !2024
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !2024
  store i64 5, i64* %1, align 8, !dbg !2024
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill4, metadata !2030, metadata !DIExpression()), !dbg !2031
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !2031
  store [0 x i32]* %_11.0, [0 x i32]** %2, align 8, !dbg !2031
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !2031
  store i64 5, i64* %3, align 8, !dbg !2031
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !2037, metadata !DIExpression()), !dbg !2038
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 0, !dbg !2040
  store [0 x i32]* %_11.0, [0 x i32]** %4, align 8, !dbg !2040
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 1, !dbg !2040
  store i64 5, i64* %5, align 8, !dbg !2040
; call <&T as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfef8a23a17576969E"({ [0 x i32]*, i64 }* align 8 %_5, %"core::fmt::Formatter"* align 8 %f), !dbg !2041
  br label %bb1, !dbg !2041

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !2042
}

; core::array::<impl core::fmt::Debug for [T; N]>::fmt
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hee4abddf1f13537bE"([6 x i32]* align 4 %self, %"core::fmt::Formatter"* align 8 %f) unnamed_addr #2 !dbg !2043 {
start:
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill4 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill3 = alloca [6 x i32]*, align 8
  %self.dbg.spill2 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill1 = alloca %"core::ops::range::RangeFull", align 1
  %index.dbg.spill = alloca %"core::ops::range::RangeFull", align 1
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca [6 x i32]*, align 8
  %_5 = alloca { [0 x i32]*, i64 }, align 8
  store [6 x i32]* %self, [6 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i32]** %self.dbg.spill, metadata !2047, metadata !DIExpression()), !dbg !2049
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !2048, metadata !DIExpression()), !dbg !2050
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill, metadata !2051, metadata !DIExpression()), !dbg !2057
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %index.dbg.spill1, metadata !2059, metadata !DIExpression()), !dbg !2064
  call void @llvm.dbg.declare(metadata %"core::ops::range::RangeFull"* %self.dbg.spill2, metadata !2066, metadata !DIExpression()), !dbg !2071
  store [6 x i32]* %self, [6 x i32]** %self.dbg.spill3, align 8, !dbg !2058
  call void @llvm.dbg.declare(metadata [6 x i32]** %self.dbg.spill3, metadata !2056, metadata !DIExpression()), !dbg !2057
  %_11.0 = bitcast [6 x i32]* %self to [0 x i32]*, !dbg !2057
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 0, !dbg !2057
  store [0 x i32]* %_11.0, [0 x i32]** %0, align 8, !dbg !2057
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill4, i32 0, i32 1, !dbg !2057
  store i64 6, i64* %1, align 8, !dbg !2057
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill4, metadata !2063, metadata !DIExpression()), !dbg !2064
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0, !dbg !2064
  store [0 x i32]* %_11.0, [0 x i32]** %2, align 8, !dbg !2064
  %3 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1, !dbg !2064
  store i64 6, i64* %3, align 8, !dbg !2064
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !2070, metadata !DIExpression()), !dbg !2071
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 0, !dbg !2073
  store [0 x i32]* %_11.0, [0 x i32]** %4, align 8, !dbg !2073
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %_5, i32 0, i32 1, !dbg !2073
  store i64 6, i64* %5, align 8, !dbg !2073
; call <&T as core::fmt::Debug>::fmt
  %6 = call zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfef8a23a17576969E"({ [0 x i32]*, i64 }* align 8 %_5, %"core::fmt::Formatter"* align 8 %f), !dbg !2074
  br label %bb1, !dbg !2074

bb1:                                              ; preds = %start
  ret i1 %6, !dbg !2075
}

; core::array::<impl core::clone::Clone for [T; N]>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core5array71_$LT$impl$u20$core..clone..Clone$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5clone17hb83dcd290f124dd7E"([4 x i32]* sret([4 x i32]) %0, [4 x i32]* align 4 %self) unnamed_addr #0 !dbg !2076 {
start:
  %self.dbg.spill = alloca [4 x i32]*, align 8
  store [4 x i32]* %self, [4 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4 x i32]** %self.dbg.spill, metadata !2079, metadata !DIExpression()), !dbg !2080
; call <T as core::array::SpecArrayClone>::clone
  call void @"_ZN49_$LT$T$u20$as$u20$core..array..SpecArrayClone$GT$5clone17h07d9554687c29659E"([4 x i32]* sret([4 x i32]) %0, [4 x i32]* align 4 %self), !dbg !2081
  br label %bb1, !dbg !2081

bb1:                                              ; preds = %start
  ret void, !dbg !2082
}

; core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h4b48ce01a5ecb68eE"([10 x i32]* align 4 %self, [10 x i32]* align 4 %other) unnamed_addr #0 !dbg !2083 {
start:
  %other.dbg.spill = alloca [10 x i32]*, align 8
  %self.dbg.spill = alloca [10 x i32]*, align 8
  store [10 x i32]* %self, [10 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i32]** %self.dbg.spill, metadata !2090, metadata !DIExpression()), !dbg !2094
  store [10 x i32]* %other, [10 x i32]** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i32]** %other.dbg.spill, metadata !2091, metadata !DIExpression()), !dbg !2095
; call <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
  %0 = call zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17hacddd80052b2be27E"([10 x i32]* align 4 %self, [10 x i32]* align 4 %other), !dbg !2096
  br label %bb1, !dbg !2096

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !2097
}

; core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h57a6b9bad75e9263E"([5 x i32]* align 4 %self, [5 x i32]* align 4 %other) unnamed_addr #0 !dbg !2098 {
start:
  %other.dbg.spill = alloca [5 x i32]*, align 8
  %self.dbg.spill = alloca [5 x i32]*, align 8
  store [5 x i32]* %self, [5 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]** %self.dbg.spill, metadata !2102, metadata !DIExpression()), !dbg !2104
  store [5 x i32]* %other, [5 x i32]** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]** %other.dbg.spill, metadata !2103, metadata !DIExpression()), !dbg !2105
; call <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
  %0 = call zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h4daae926dd5717a6E"([5 x i32]* align 4 %self, [5 x i32]* align 4 %other), !dbg !2106
  br label %bb1, !dbg !2106

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !2107
}

; core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h62fa740c32e6ba88E"([1 x i32]* align 4 %self, [1 x i32]* align 4 %other) unnamed_addr #0 !dbg !2108 {
start:
  %other.dbg.spill = alloca [1 x i32]*, align 8
  %self.dbg.spill = alloca [1 x i32]*, align 8
  store [1 x i32]* %self, [1 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i32]** %self.dbg.spill, metadata !2112, metadata !DIExpression()), !dbg !2114
  store [1 x i32]* %other, [1 x i32]** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i32]** %other.dbg.spill, metadata !2113, metadata !DIExpression()), !dbg !2115
; call <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
  %0 = call zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h3c017ad696ca7813E"([1 x i32]* align 4 %self, [1 x i32]* align 4 %other), !dbg !2116
  br label %bb1, !dbg !2116

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !2117
}

; core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hc54fa0657217e2dcE"([3 x i32]* align 4 %self, [3 x i32]* align 4 %other) unnamed_addr #0 !dbg !2118 {
start:
  %other.dbg.spill = alloca [3 x i32]*, align 8
  %self.dbg.spill = alloca [3 x i32]*, align 8
  store [3 x i32]* %self, [3 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i32]** %self.dbg.spill, metadata !2122, metadata !DIExpression()), !dbg !2124
  store [3 x i32]* %other, [3 x i32]** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i32]** %other.dbg.spill, metadata !2123, metadata !DIExpression()), !dbg !2125
; call <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
  %0 = call zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h25ffee337b5d26ffE"([3 x i32]* align 4 %self, [3 x i32]* align 4 %other), !dbg !2126
  br label %bb1, !dbg !2126

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !2127
}

; core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hebee8802bebf6791E"([6 x i32]* align 4 %self, [6 x i32]* align 4 %other) unnamed_addr #0 !dbg !2128 {
start:
  %other.dbg.spill = alloca [6 x i32]*, align 8
  %self.dbg.spill = alloca [6 x i32]*, align 8
  store [6 x i32]* %self, [6 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i32]** %self.dbg.spill, metadata !2132, metadata !DIExpression()), !dbg !2134
  store [6 x i32]* %other, [6 x i32]** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i32]** %other.dbg.spill, metadata !2133, metadata !DIExpression()), !dbg !2135
; call <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
  %0 = call zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h3d79f9b6c556ee67E"([6 x i32]* align 4 %self, [6 x i32]* align 4 %other), !dbg !2136
  br label %bb1, !dbg !2136

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !2137
}

; core::clone::impls::<impl core::clone::Clone for i32>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17hd34e0bea25b3ffc7E"(i32* align 4 %self) unnamed_addr #0 !dbg !2138 {
start:
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !2146, metadata !DIExpression()), !dbg !2147
  %0 = load i32, i32* %self, align 4, !dbg !2148
  ret i32 %0, !dbg !2149
}

; core::clone::impls::<impl core::clone::Clone for usize>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h1a02ee8c3206d04dE"(i64* align 8 %self) unnamed_addr #0 !dbg !2150 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !2155, metadata !DIExpression()), !dbg !2156
  %0 = load i64, i64* %self, align 8, !dbg !2157
  ret i64 %0, !dbg !2158
}

; core::slice::<impl [T]>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2159 {
start:
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i32]* %self.0, [0 x i32]** %0, align 8
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !2167, metadata !DIExpression()), !dbg !2168
  %2 = bitcast [0 x i32]* %self.0 to i32*, !dbg !2169
  ret i32* %2, !dbg !2170
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17haf1c774ddfcf8a7dE"([0 x i8]* align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2171 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2181, metadata !DIExpression()), !dbg !2184
  %2 = bitcast [0 x i8]* %self.0 to i8*, !dbg !2185
  ret i8* %2, !dbg !2186
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hc8f477891223844fE"([0 x i32]* align 4 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2187 {
start:
  %ptr.dbg.spill11 = alloca i32*, align 8
  %0 = alloca i8*, align 8
  %count.dbg.spill10 = alloca i64, align 8
  %self.dbg.spill9 = alloca i8*, align 8
  %count.dbg.spill8 = alloca i64, align 8
  %self.dbg.spill7 = alloca i8*, align 8
  %count.dbg.spill5 = alloca i64, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %1 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %2 = alloca {}*, align 8
  %self.dbg.spill2 = alloca i8*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %slice.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %_31 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_18 = alloca i32*, align 8
  %end = alloca i32*, align 8
  %3 = alloca { i32*, i32* }, align 8
  %4 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i32]* %slice.0, [0 x i32]** %4, align 8
  %5 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %slice.dbg.spill, metadata !2190, metadata !DIExpression()), !dbg !2195
  call void @llvm.dbg.declare(metadata i32** %end, metadata !2193, metadata !DIExpression()), !dbg !2196
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !2197, metadata !DIExpression()), !dbg !2204
  %6 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !2220
  store [0 x i32]* %slice.0, [0 x i32]** %6, align 8, !dbg !2220
  %7 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !2220
  store i64 %slice.1, i64* %7, align 8, !dbg !2220
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !2221, metadata !DIExpression()), !dbg !2227
  %ptr = bitcast [0 x i32]* %slice.0 to i32*, !dbg !2227
  store i32* %ptr, i32** %ptr.dbg.spill, align 8, !dbg !2227
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !2191, metadata !DIExpression()), !dbg !2228
  store i32* %ptr, i32** %self.dbg.spill1, align 8, !dbg !2219
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !2217, metadata !DIExpression()), !dbg !2229
  %self = bitcast i32* %ptr to i8*, !dbg !2229
  store i8* %self, i8** %self.dbg.spill2, align 8, !dbg !2229
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill2, metadata !2230, metadata !DIExpression()), !dbg !2237
  %8 = bitcast {}** %2 to i64*, !dbg !2239
  store i64 0, i64* %8, align 8, !dbg !2239
  %data_address = load {}*, {}** %2, align 8, !dbg !2239
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2239
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2203, metadata !DIExpression()), !dbg !2204
  br label %bb5, !dbg !2239

bb5:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to {}**, !dbg !2204
  store {}* %data_address, {}** %9, align 8, !dbg !2204
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !2204
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !2204
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_31 to i8*, !dbg !2204
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !2204
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_30 to i8**, !dbg !2204
  %other = load i8*, i8** %13, align 8, !dbg !2204
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !2204
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2236, metadata !DIExpression()), !dbg !2237
  %14 = icmp eq i8* %self, %other, !dbg !2237
  %15 = zext i1 %14 to i8, !dbg !2237
  store i8 %15, i8* %1, align 1, !dbg !2237
  %16 = load i8, i8* %1, align 1, !dbg !2237, !range !680, !noundef !23
  %_6 = trunc i8 %16 to i1, !dbg !2237
  br label %bb6, !dbg !2237

bb6:                                              ; preds = %bb5
  %_5 = xor i1 %_6, true, !dbg !2247
  call void @llvm.assume(i1 %_5), !dbg !2248
  br label %bb1, !dbg !2248

bb1:                                              ; preds = %bb6
  br i1 false, label %bb2, label %bb3, !dbg !2249

bb2:                                              ; preds = %bb1
  %self6 = bitcast i32* %ptr to i8*, !dbg !2250
  store i8* %self6, i8** %self.dbg.spill7, align 8, !dbg !2250
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill7, metadata !2251, metadata !DIExpression()), !dbg !2258
  store i64 %slice.1, i64* %count.dbg.spill8, align 8, !dbg !2259
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill8, metadata !2257, metadata !DIExpression()), !dbg !2258
  store i8* %self6, i8** %self.dbg.spill9, align 8, !dbg !2258
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill9, metadata !2260, metadata !DIExpression()), !dbg !2267
  store i64 %slice.1, i64* %count.dbg.spill10, align 8, !dbg !2258
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill10, metadata !2266, metadata !DIExpression()), !dbg !2267
  %17 = getelementptr i8, i8* %self6, i64 %slice.1, !dbg !2267
  store i8* %17, i8** %0, align 8, !dbg !2267
  %_10 = load i8*, i8** %0, align 8, !dbg !2267
  br label %bb7, !dbg !2267

bb3:                                              ; preds = %bb1
  store i32* %ptr, i32** %self.dbg.spill3, align 8, !dbg !2269
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !2270, metadata !DIExpression()), !dbg !2277
  store i64 %slice.1, i64* %count.dbg.spill, align 8, !dbg !2278
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2276, metadata !DIExpression()), !dbg !2277
  store i32* %ptr, i32** %self.dbg.spill4, align 8, !dbg !2277
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !2279, metadata !DIExpression()), !dbg !2286
  store i64 %slice.1, i64* %count.dbg.spill5, align 8, !dbg !2277
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill5, metadata !2285, metadata !DIExpression()), !dbg !2286
  %18 = getelementptr inbounds i32, i32* %ptr, i64 %slice.1, !dbg !2286
  store i32* %18, i32** %end, align 8, !dbg !2286
  br label %bb8, !dbg !2286

bb8:                                              ; preds = %bb3
  br label %bb4, !dbg !2288

bb4:                                              ; preds = %bb7, %bb8
  store i32* %ptr, i32** %ptr.dbg.spill11, align 8, !dbg !2289
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill11, metadata !2290, metadata !DIExpression()), !dbg !2296
  store i32* %ptr, i32** %_18, align 8, !dbg !2296
  %_21 = load i32*, i32** %end, align 8, !dbg !2298
  %19 = bitcast { i32*, i32* }* %3 to i32**, !dbg !2299
  %20 = load i32*, i32** %_18, align 8, !dbg !2299, !nonnull !23, !noundef !23
  store i32* %20, i32** %19, align 8, !dbg !2299
  %21 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 1, !dbg !2299
  store i32* %_21, i32** %21, align 8, !dbg !2299
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 0, !dbg !2300
  %23 = load i32*, i32** %22, align 8, !dbg !2300, !nonnull !23, !noundef !23
  %24 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %3, i32 0, i32 1, !dbg !2300
  %25 = load i32*, i32** %24, align 8, !dbg !2300
  %26 = insertvalue { i32*, i32* } undef, i32* %23, 0, !dbg !2300
  %27 = insertvalue { i32*, i32* } %26, i32* %25, 1, !dbg !2300
  ret { i32*, i32* } %27, !dbg !2300

bb7:                                              ; preds = %bb2
  %28 = bitcast i8* %_10 to i32*, !dbg !2250
  store i32* %28, i32** %end, align 8, !dbg !2250
  br label %bb4, !dbg !2288
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h465af87d79c9bb4eE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !2301 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::layout::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2322, metadata !DIExpression()), !dbg !2331
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !2323, metadata !DIExpression()), !dbg !2332
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %e.dbg.spill, metadata !2326, metadata !DIExpression()), !dbg !2333
  store i8 1, i8* %_11, align 1, !dbg !2334
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2334
  %6 = load i64, i64* %5, align 8, !dbg !2334, !range !299, !noundef !23
  %7 = icmp eq i64 %6, 0, !dbg !2334
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2334
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2335

bb2:                                              ; preds = %start
  unreachable, !dbg !2334

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2336
  %t.0 = load i64, i64* %8, align 8, !dbg !2336
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2336
  %t.1 = load i64, i64* %9, align 8, !dbg !2336, !range !1671, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2336
  store i64 %t.0, i64* %10, align 8, !dbg !2336
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2336
  store i64 %t.1, i64* %11, align 8, !dbg !2336
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2324, metadata !DIExpression()), !dbg !2337
  %12 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !2338
  %13 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !2338
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !2338
  store i64 %t.0, i64* %14, align 8, !dbg !2338
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !2338
  store i64 %t.1, i64* %15, align 8, !dbg !2338
  %16 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2338
  store i64 0, i64* %16, align 8, !dbg !2338
  br label %bb7, !dbg !2339

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2340
  %17 = bitcast { %"core::alloc::layout::LayoutError" }* %_9 to %"core::alloc::layout::LayoutError"*, !dbg !2340
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h68279da78d4449ffE"(), !dbg !2340
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2340
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2340
  br label %bb4, !dbg !2340

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !2341
  %20 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !2341
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2341
  store i64 %_7.0, i64* %21, align 8, !dbg !2341
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2341
  store i64 %_7.1, i64* %22, align 8, !dbg !2341
  %23 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2341
  store i64 1, i64* %23, align 8, !dbg !2341
  br label %bb7, !dbg !2342

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2343, !range !680, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !2343
  br i1 %25, label %bb6, label %bb5, !dbg !2343

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !2344

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2343
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7199e5644a34f8f6E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %1, i64 %2, i64* align 8 %op) unnamed_addr #0 !dbg !2345 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"core::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !2392, metadata !DIExpression()), !dbg !2401
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !2393, metadata !DIExpression()), !dbg !2402
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !2396, metadata !DIExpression()), !dbg !2403
  store i8 1, i8* %_11, align 1, !dbg !2404
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !2404
  %6 = load {}*, {}** %5, align 8, !dbg !2404
  %7 = icmp eq {}* %6, null, !dbg !2404
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2404
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2405

bb2:                                              ; preds = %start
  unreachable, !dbg !2404

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !2406
  %t.0 = load i8*, i8** %8, align 8, !dbg !2406, !nonnull !23, !noundef !23
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2406
  %t.1 = load i64, i64* %9, align 8, !dbg !2406
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2406
  store i8* %t.0, i8** %10, align 8, !dbg !2406
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2406
  store i64 %t.1, i64* %11, align 8, !dbg !2406
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !2394, metadata !DIExpression()), !dbg !2407
  %12 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !2408
  %13 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !2408
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !2408
  store i8* %t.0, i8** %14, align 8, !dbg !2408
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !2408
  store i64 %t.1, i64* %15, align 8, !dbg !2408
  %16 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !2408
  store i64 0, i64* %16, align 8, !dbg !2408
  br label %bb7, !dbg !2409

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2410
  %17 = bitcast { %"core::alloc::AllocError" }* %_9 to %"core::alloc::AllocError"*, !dbg !2410
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17ha5dda3eec3319225E"(i64* align 8 %op), !dbg !2410
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2410
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2410
  br label %bb4, !dbg !2410

bb4:                                              ; preds = %bb1
  %19 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !2411
  %20 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !2411
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2411
  store i64 %_7.0, i64* %21, align 8, !dbg !2411
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2411
  store i64 %_7.1, i64* %22, align 8, !dbg !2411
  %23 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !2411
  store i64 1, i64* %23, align 8, !dbg !2411
  br label %bb7, !dbg !2412

bb7:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2413, !range !680, !noundef !23
  %25 = trunc i8 %24 to i1, !dbg !2413
  br i1 %25, label %bb6, label %bb5, !dbg !2413

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !2414

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2413
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb2f0b5181bc162c4E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !2415 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2449, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !2450, metadata !DIExpression()), !dbg !2458
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !2451, metadata !DIExpression()), !dbg !2459
  store i8 1, i8* %_11, align 1, !dbg !2460
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2460
  %6 = load i64, i64* %5, align 8, !dbg !2460, !range !2461, !noundef !23
  %7 = sub i64 %6, -9223372036854775807, !dbg !2460
  %8 = icmp eq i64 %7, 0, !dbg !2460
  %_3 = select i1 %8, i64 0, i64 1, !dbg !2460
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2462

bb2:                                              ; preds = %start
  unreachable, !dbg !2460

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %2 to %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !2463
  %10 = bitcast %"core::result::Result<(), alloc::collections::TryReserveErrorKind>::Ok"* %9 to {}*, !dbg !2463
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2463
  store i64 -9223372036854775807, i64* %11, align 8, !dbg !2463
  br label %bb7, !dbg !2464

bb1:                                              ; preds = %start
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2465
  %e.0 = load i64, i64* %12, align 8, !dbg !2465
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2465
  %e.1 = load i64, i64* %13, align 8, !dbg !2465, !range !299, !noundef !23
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !2465
  store i64 %e.0, i64* %14, align 8, !dbg !2465
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !2465
  store i64 %e.1, i64* %15, align 8, !dbg !2465
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !2453, metadata !DIExpression()), !dbg !2466
  store i8 0, i8* %_11, align 1, !dbg !2467
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2467
  store i64 %e.0, i64* %16, align 8, !dbg !2467
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2467
  store i64 %e.1, i64* %17, align 8, !dbg !2467
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2467
  %19 = load i64, i64* %18, align 8, !dbg !2467
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2467
  %21 = load i64, i64* %20, align 8, !dbg !2467, !range !299, !noundef !23
; call alloc::raw_vec::handle_reserve::{{closure}}
  %22 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hfa61a9303ea46fc9E"(i64 %19, i64 %21), !dbg !2467
  %_7.0 = extractvalue { i64, i64 } %22, 0, !dbg !2467
  %_7.1 = extractvalue { i64, i64 } %22, 1, !dbg !2467
  br label %bb4, !dbg !2467

bb4:                                              ; preds = %bb1
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2468
  store i64 %_7.0, i64* %23, align 8, !dbg !2468
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2468
  store i64 %_7.1, i64* %24, align 8, !dbg !2468
  br label %bb7, !dbg !2469

bb7:                                              ; preds = %bb3, %bb4
  %25 = load i8, i8* %_11, align 1, !dbg !2470, !range !680, !noundef !23
  %26 = trunc i8 %25 to i1, !dbg !2470
  br i1 %26, label %bb6, label %bb5, !dbg !2470

bb5:                                              ; preds = %bb6, %bb7
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2471
  %28 = load i64, i64* %27, align 8, !dbg !2471
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2471
  %30 = load i64, i64* %29, align 8, !dbg !2471, !range !2461, !noundef !23
  %31 = insertvalue { i64, i64 } undef, i64 %28, 0, !dbg !2471
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1, !dbg !2471
  ret { i64, i64 } %32, !dbg !2471

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !2470
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h102e7dff1d1804d2E(i8 %kind, [10 x i32]* align 4 %0, [10 x i32]* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !2472 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca [10 x i32]*, align 8
  %left = alloca [10 x i32]*, align 8
  store [10 x i32]* %0, [10 x i32]** %left, align 8
  store [10 x i32]* %1, [10 x i32]** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2490, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.declare(metadata [10 x i32]** %left, metadata !2491, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.declare(metadata [10 x i32]** %right, metadata !2492, metadata !DIExpression()), !dbg !2498
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !2493, metadata !DIExpression()), !dbg !2499
  %_7.0 = bitcast [10 x i32]** %left to {}*, !dbg !2500
  %_10.0 = bitcast [10 x i32]** %right to {}*, !dbg !2501
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !2502
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !2502
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2502
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.2 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #16, !dbg !2503
  unreachable, !dbg !2503
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17h247fb856b715c146E(i8 %kind, {}* align 1 %0, {}* align 1 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !2504 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca {}*, align 8
  %left = alloca {}*, align 8
  store {}* %0, {}** %left, align 8
  store {}* %1, {}** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2508, metadata !DIExpression()), !dbg !2514
  call void @llvm.dbg.declare(metadata {}** %left, metadata !2509, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.declare(metadata {}** %right, metadata !2510, metadata !DIExpression()), !dbg !2516
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !2511, metadata !DIExpression()), !dbg !2517
  %_7.0 = bitcast {}** %left to {}*, !dbg !2518
  %_10.0 = bitcast {}** %right to {}*, !dbg !2519
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !2520
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !2520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2520
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.3 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #16, !dbg !2521
  unreachable, !dbg !2521
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 %kind, i32* align 4 %0, i32* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !2522 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca i32*, align 8
  %left = alloca i32*, align 8
  store i32* %0, i32** %left, align 8
  store i32* %1, i32** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2526, metadata !DIExpression()), !dbg !2532
  call void @llvm.dbg.declare(metadata i32** %left, metadata !2527, metadata !DIExpression()), !dbg !2533
  call void @llvm.dbg.declare(metadata i32** %right, metadata !2528, metadata !DIExpression()), !dbg !2534
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !2529, metadata !DIExpression()), !dbg !2535
  %_7.0 = bitcast i32** %left to {}*, !dbg !2536
  %_10.0 = bitcast i32** %right to {}*, !dbg !2537
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !2538
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !2538
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2538
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.1 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.1 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #16, !dbg !2539
  unreachable, !dbg !2539
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17hab645ff57cceb137E(i8 %kind, [3 x i32]* align 4 %0, [3 x i32]* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !2540 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca [3 x i32]*, align 8
  %left = alloca [3 x i32]*, align 8
  store [3 x i32]* %0, [3 x i32]** %left, align 8
  store [3 x i32]* %1, [3 x i32]** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2544, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.declare(metadata [3 x i32]** %left, metadata !2545, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.declare(metadata [3 x i32]** %right, metadata !2546, metadata !DIExpression()), !dbg !2552
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !2547, metadata !DIExpression()), !dbg !2553
  %_7.0 = bitcast [3 x i32]** %left to {}*, !dbg !2554
  %_10.0 = bitcast [3 x i32]** %right to {}*, !dbg !2555
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !2556
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !2556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2556
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.4 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #16, !dbg !2557
  unreachable, !dbg !2557
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17hb3ff0a3fe01f7f1eE(i8 %kind, [1 x i32]* align 4 %0, [1 x i32]* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !2558 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca [1 x i32]*, align 8
  %left = alloca [1 x i32]*, align 8
  store [1 x i32]* %0, [1 x i32]** %left, align 8
  store [1 x i32]* %1, [1 x i32]** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2562, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.declare(metadata [1 x i32]** %left, metadata !2563, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.declare(metadata [1 x i32]** %right, metadata !2564, metadata !DIExpression()), !dbg !2570
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !2565, metadata !DIExpression()), !dbg !2571
  %_7.0 = bitcast [1 x i32]** %left to {}*, !dbg !2572
  %_10.0 = bitcast [1 x i32]** %right to {}*, !dbg !2573
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !2574
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !2574
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2574
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.5 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.5 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #16, !dbg !2575
  unreachable, !dbg !2575
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17hc1e236fb83b94d08E(i8 %kind, [5 x i32]* align 4 %0, [5 x i32]* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !2576 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca [5 x i32]*, align 8
  %left = alloca [5 x i32]*, align 8
  store [5 x i32]* %0, [5 x i32]** %left, align 8
  store [5 x i32]* %1, [5 x i32]** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2580, metadata !DIExpression()), !dbg !2586
  call void @llvm.dbg.declare(metadata [5 x i32]** %left, metadata !2581, metadata !DIExpression()), !dbg !2587
  call void @llvm.dbg.declare(metadata [5 x i32]** %right, metadata !2582, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !2583, metadata !DIExpression()), !dbg !2589
  %_7.0 = bitcast [5 x i32]** %left to {}*, !dbg !2590
  %_10.0 = bitcast [5 x i32]** %right to {}*, !dbg !2591
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !2592
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !2592
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2592
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.6 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.6 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #16, !dbg !2593
  unreachable, !dbg !2593
}

; core::panicking::assert_failed
; Function Attrs: cold noreturn nonlazybind uwtable
define internal void @_ZN4core9panicking13assert_failed17hc4b73381be2307d4E(i8 %kind, [6 x i32]* align 4 %0, [6 x i32]* align 4 %1, %"core::option::Option<core::fmt::Arguments>"* %args, %"core::panic::location::Location"* align 8 %2) unnamed_addr #3 !dbg !2594 {
start:
  %kind.dbg.spill = alloca i8, align 1
  %_13 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %right = alloca [6 x i32]*, align 8
  %left = alloca [6 x i32]*, align 8
  store [6 x i32]* %0, [6 x i32]** %left, align 8
  store [6 x i32]* %1, [6 x i32]** %right, align 8
  store i8 %kind, i8* %kind.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %kind.dbg.spill, metadata !2598, metadata !DIExpression()), !dbg !2604
  call void @llvm.dbg.declare(metadata [6 x i32]** %left, metadata !2599, metadata !DIExpression()), !dbg !2605
  call void @llvm.dbg.declare(metadata [6 x i32]** %right, metadata !2600, metadata !DIExpression()), !dbg !2606
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::fmt::Arguments>"* %args, metadata !2601, metadata !DIExpression()), !dbg !2607
  %_7.0 = bitcast [6 x i32]** %left to {}*, !dbg !2608
  %_10.0 = bitcast [6 x i32]** %right to {}*, !dbg !2609
  %3 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_13 to i8*, !dbg !2610
  %4 = bitcast %"core::option::Option<core::fmt::Arguments>"* %args to i8*, !dbg !2610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false), !dbg !2610
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8 %kind, {}* align 1 %_7.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.7 to [3 x i64]*), {}* align 1 %_10.0, [3 x i64]* align 8 bitcast (<{ i8*, [16 x i8], i8* }>* @vtable.7 to [3 x i64]*), %"core::option::Option<core::fmt::Arguments>"* %_13, %"core::panic::location::Location"* align 8 %2) #16, !dbg !2611
  unreachable, !dbg !2611
}

; test::assert_test_result
; Function Attrs: nonlazybind uwtable
define internal void @_ZN4test18assert_test_result17he4129509ab552d7aE() unnamed_addr #2 !dbg !2612 {
start:
  %0 = alloca %"core::fmt::Opaque"*, align 8
  %1 = alloca i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, align 8
  %f.dbg.spill = alloca i1 (i32*, %"core::fmt::Formatter"*)*, align 8
  %x.dbg.spill1 = alloca i32*, align 8
  %x.dbg.spill = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %result.dbg.spill = alloca {}, align 1
  %_30 = alloca { i8*, i64* }, align 8
  %_29 = alloca [1 x { i8*, i64* }], align 8
  %_22 = alloca %"core::fmt::Arguments", align 8
  %_21 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %_5 = alloca { i32*, i32* }, align 8
  %self = alloca i8, align 1
  %code = alloca i32, align 4
  call void @llvm.dbg.declare(metadata {}* %result.dbg.spill, metadata !2616, metadata !DIExpression()), !dbg !2627
  call void @llvm.dbg.declare(metadata i32* %code, metadata !2617, metadata !DIExpression()), !dbg !2628
  call void @llvm.dbg.declare(metadata i8* %self, metadata !2629, metadata !DIExpression()), !dbg !2633
; call <() as std::process::Termination>::report
  %2 = call i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hcfdf933bfc0960b4E"(), !dbg !2634
  store i8 %2, i8* %self, align 1, !dbg !2634
  br label %bb1, !dbg !2634

bb1:                                              ; preds = %start
  store i8* %self, i8** %self.dbg.spill, align 8, !dbg !2633
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2635, metadata !DIExpression()), !dbg !2639
  %_36 = load i8, i8* %self, align 1, !dbg !2639
  %3 = zext i8 %_36 to i32, !dbg !2639
  store i32 %3, i32* %code, align 4, !dbg !2639
  %4 = bitcast { i32*, i32* }* %_5 to i32**, !dbg !2641
  store i32* %code, i32** %4, align 8, !dbg !2641
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1, !dbg !2641
  store i32* bitcast (<{ [4 x i8] }>* @alloc344 to i32*), i32** %5, align 8, !dbg !2641
  %6 = bitcast { i32*, i32* }* %_5 to i32**, !dbg !2641
  %left_val = load i32*, i32** %6, align 8, !dbg !2641, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !2641
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !2619, metadata !DIExpression()), !dbg !2642
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_5, i32 0, i32 1, !dbg !2641
  %right_val = load i32*, i32** %7, align 8, !dbg !2641, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !2641
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !2623, metadata !DIExpression()), !dbg !2642
  %_12 = load i32, i32* %left_val, align 4, !dbg !2642
  %_13 = load i32, i32* %right_val, align 4, !dbg !2642
  %_11 = icmp eq i32 %_12, %_13, !dbg !2642
  %_10 = xor i1 %_11, true, !dbg !2642
  br i1 %_10, label %bb2, label %bb4, !dbg !2642

bb4:                                              ; preds = %bb1
  ret void, !dbg !2643

bb2:                                              ; preds = %bb1
  store i32* %code, i32** %x.dbg.spill, align 8, !dbg !2644
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill, metadata !2645, metadata !DIExpression()), !dbg !2651
  store i32* %code, i32** %x.dbg.spill1, align 8, !dbg !2651
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill1, metadata !2653, metadata !DIExpression()), !dbg !2661
  store i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE", i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, align 8, !dbg !2651
  call void @llvm.dbg.declare(metadata i1 (i32*, %"core::fmt::Formatter"*)** %f.dbg.spill, metadata !2660, metadata !DIExpression()), !dbg !2661
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* bitcast (i1 (i32*, %"core::fmt::Formatter"*)* @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE" to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*), i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !2661
  %_39 = load i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)*, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %1, align 8, !dbg !2661, !nonnull !23, !noundef !23
  br label %bb5, !dbg !2661

bb5:                                              ; preds = %bb2
  %8 = bitcast i32* %code to %"core::fmt::Opaque"*, !dbg !2661
  store %"core::fmt::Opaque"* %8, %"core::fmt::Opaque"** %0, align 8, !dbg !2661
  %_41 = load %"core::fmt::Opaque"*, %"core::fmt::Opaque"** %0, align 8, !dbg !2661, !nonnull !23, !align !497, !noundef !23
  br label %bb6, !dbg !2661

bb6:                                              ; preds = %bb5
  %9 = bitcast { i8*, i64* }* %_30 to %"core::fmt::Opaque"**, !dbg !2661
  store %"core::fmt::Opaque"* %_41, %"core::fmt::Opaque"** %9, align 8, !dbg !2661
  %10 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 1, !dbg !2661
  %11 = bitcast i64** %10 to i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)**, !dbg !2661
  store i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)* %_39, i1 (%"core::fmt::Opaque"*, %"core::fmt::Formatter"*)** %11, align 8, !dbg !2661
  %12 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 0, !dbg !2644
  %13 = load i8*, i8** %12, align 8, !dbg !2644, !nonnull !23, !align !497, !noundef !23
  %14 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %_30, i32 0, i32 1, !dbg !2644
  %15 = load i64*, i64** %14, align 8, !dbg !2644, !nonnull !23, !noundef !23
  %16 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_29, i64 0, i64 0, !dbg !2644
  %17 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 0, !dbg !2644
  store i8* %13, i8** %17, align 8, !dbg !2644
  %18 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %16, i32 0, i32 1, !dbg !2644
  store i64* %15, i64** %18, align 8, !dbg !2644
  %_26.0 = bitcast [1 x { i8*, i64* }]* %_29 to [0 x { i8*, i64* }]*, !dbg !2644
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h090b18600dc0d53dE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_22, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8], i8*, [8 x i8] }>* @alloc210 to [0 x { [0 x i8]*, i64 }]*), i64 2, [0 x { i8*, i64* }]* align 8 %_26.0, i64 1), !dbg !2644
  br label %bb3, !dbg !2644

bb3:                                              ; preds = %bb6
  %19 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_21 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !2644
  %20 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %19 to %"core::fmt::Arguments"*, !dbg !2644
  %21 = bitcast %"core::fmt::Arguments"* %20 to i8*, !dbg !2644
  %22 = bitcast %"core::fmt::Arguments"* %_22 to i8*, !dbg !2644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 48, i1 false), !dbg !2644
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_21, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc719 to %"core::panic::location::Location"*)) #16, !dbg !2644
  unreachable, !dbg !2644
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h05a17270e6d59439E"() unnamed_addr #2 !dbg !2663 {
start:
  %t.dbg.spill = alloca %"core::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %t.dbg.spill, metadata !2669, metadata !DIExpression()), !dbg !2672
  ret void, !dbg !2673
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2602f275c11ff874E"() unnamed_addr #2 !dbg !2674 {
start:
  %t.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %t.dbg.spill, metadata !2678, metadata !DIExpression()), !dbg !2681
  ret void, !dbg !2682
}

; <T as core::convert::From<T>>::from
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3a535f962c3cf431E"(i64 %t.0, i64 %t.1) unnamed_addr #2 !dbg !2683 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2687, metadata !DIExpression()), !dbg !2690
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !2691
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !2691
  ret { i64, i64 } %3, !dbg !2691
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h37c8579641ace3faE"(i64 %self.0, i64 %self.1) unnamed_addr #2 !dbg !2692 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !2695, metadata !DIExpression()), !dbg !2699
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf590d0dc0bf2911aE"(i64 %self.0, i64 %self.1), !dbg !2700
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !2700
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !2700
  br label %bb1, !dbg !2700

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !2701
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !2701
  ret { i64, i64 } %6, !dbg !2701
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nonlazybind uwtable
define internal i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbd61ac89084c4fa3E"(i8* %self) unnamed_addr #2 !dbg !2702 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2704, metadata !DIExpression()), !dbg !2708
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %0 = call i8* @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h8102e8b4a9951160E"(i8* %self), !dbg !2709
  br label %bb1, !dbg !2709

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !2710
}

; <i32 as alloc::vec::is_zero::IsZero>::is_zero
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17hd885cb56167bc602E"(i32* align 4 %self) unnamed_addr #0 !dbg !2711 {
start:
  %self.dbg.spill = alloca i32*, align 8
  %_3 = alloca i32, align 4
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !2716, metadata !DIExpression()), !dbg !2717
  %_4 = load i32, i32* %self, align 4, !dbg !2718
  store i32 %_4, i32* %_3, align 4, !dbg !2719
  %0 = load i32, i32* %_3, align 4, !dbg !2719
; call <i32 as alloc::vec::is_zero::IsZero>::is_zero::{{closure}}
  %1 = call zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero28_$u7b$$u7b$closure$u7d$$u7d$17h5262acec9badfdeeE"(%"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"* align 1 bitcast (<{}>* @alloc193 to %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"*), i32 %0), !dbg !2719
  br label %bb1, !dbg !2719

bb1:                                              ; preds = %start
  ret i1 %1, !dbg !2720
}

; <i32 as alloc::vec::is_zero::IsZero>::is_zero::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero28_$u7b$$u7b$closure$u7d$$u7d$17h5262acec9badfdeeE"(%"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"* align 1 %_1, i32 %x) unnamed_addr #0 !dbg !2721 {
start:
  %x.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"*, align 8
  store %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"* %_1, %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<i32 as alloc::vec::is_zero::IsZero>::is_zero::{closure#0}]"** %_1.dbg.spill, metadata !2729, metadata !DIExpression()), !dbg !2730
  store i32 %x, i32* %x.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !2728, metadata !DIExpression()), !dbg !2731
  %0 = icmp eq i32 %x, 0, !dbg !2732
  ret i1 %0, !dbg !2733
}

; <() as std::process::Termination>::report
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hcfdf933bfc0960b4E"() unnamed_addr #0 !dbg !2734 {
start:
  %self.dbg.spill = alloca {}, align 1
  call void @llvm.dbg.declare(metadata {}* %self.dbg.spill, metadata !2739, metadata !DIExpression()), !dbg !2740
  ret i8 0, !dbg !2741
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal [4 x i32]* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1541b40118434109E"(%"alloc::vec::Vec<[i32; 4]>"* align 8 %self) unnamed_addr #0 !dbg !2742 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca [4 x i32]*, align 8
  %ptr.dbg.spill = alloca [4 x i32]*, align 8
  %self.dbg.spill5 = alloca i32*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<[i32; 4]>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<[i32; 4]>"* %self, %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill, metadata !2749, metadata !DIExpression()), !dbg !2752
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !2753, metadata !DIExpression()), !dbg !2758
  %self1 = bitcast %"alloc::vec::Vec<[i32; 4]>"* %self to { i32*, i64 }*, !dbg !2769
  store { i32*, i64 }* %self1, { i32*, i64 }** %self.dbg.spill2, align 8, !dbg !2769
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill2, metadata !2770, metadata !DIExpression()), !dbg !2778
  %2 = bitcast { i32*, i64 }* %self1 to i32**, !dbg !2778
  %self3 = load i32*, i32** %2, align 8, !dbg !2778, !nonnull !23, !noundef !23
  store i32* %self3, i32** %self.dbg.spill4, align 8, !dbg !2778
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !2779, metadata !DIExpression()), !dbg !2785
  store i32* %self3, i32** %self.dbg.spill5, align 8, !dbg !2785
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill5, metadata !2787, metadata !DIExpression()), !dbg !2793
  %_9 = bitcast i32* %self3 to [4 x i32]*, !dbg !2793
  store [4 x i32]* %_9, [4 x i32]** %ptr.dbg.spill, align 8, !dbg !2793
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr.dbg.spill, metadata !2750, metadata !DIExpression()), !dbg !2795
  store [4 x i32]* %_9, [4 x i32]** %self.dbg.spill6, align 8, !dbg !2768
  call void @llvm.dbg.declare(metadata [4 x i32]** %self.dbg.spill6, metadata !2766, metadata !DIExpression()), !dbg !2796
  %self7 = bitcast [4 x i32]* %_9 to i8*, !dbg !2796
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !2796
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !2797, metadata !DIExpression()), !dbg !2802
  %3 = bitcast {}** %1 to i64*, !dbg !2804
  store i64 0, i64* %3, align 8, !dbg !2804
  %data_address = load {}*, {}** %1, align 8, !dbg !2804
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2804
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2757, metadata !DIExpression()), !dbg !2758
  br label %bb2, !dbg !2804

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !2758
  store {}* %data_address, {}** %4, align 8, !dbg !2758
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !2758
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !2758
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !2758
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !2758
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !2758
  %other = load i8*, i8** %8, align 8, !dbg !2758
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !2758
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2801, metadata !DIExpression()), !dbg !2802
  %9 = icmp eq i8* %self7, %other, !dbg !2802
  %10 = zext i1 %9 to i8, !dbg !2802
  store i8 %10, i8* %0, align 1, !dbg !2802
  %11 = load i8, i8* %0, align 1, !dbg !2802, !range !680, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !2802
  br label %bb3, !dbg !2802

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !2810
  call void @llvm.assume(i1 %_4), !dbg !2811
  br label %bb1, !dbg !2811

bb1:                                              ; preds = %bb3
  ret [4 x i32]* %_9, !dbg !2812
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h80d65c2e6950a404E"(%"alloc::vec::Vec<i32>"* align 8 %self) unnamed_addr #0 !dbg !2813 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %1 = alloca {}*, align 8
  %self.dbg.spill8 = alloca i8*, align 8
  %self.dbg.spill6 = alloca i32*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %self.dbg.spill5 = alloca i32*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }*, align 8
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !2818, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !2822, metadata !DIExpression()), !dbg !2827
  %self1 = bitcast %"alloc::vec::Vec<i32>"* %self to { i32*, i64 }*, !dbg !2838
  store { i32*, i64 }* %self1, { i32*, i64 }** %self.dbg.spill2, align 8, !dbg !2838
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill2, metadata !2839, metadata !DIExpression()), !dbg !2846
  %2 = bitcast { i32*, i64 }* %self1 to i32**, !dbg !2846
  %self3 = load i32*, i32** %2, align 8, !dbg !2846, !nonnull !23, !noundef !23
  store i32* %self3, i32** %self.dbg.spill4, align 8, !dbg !2846
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !2847, metadata !DIExpression()), !dbg !2853
  store i32* %self3, i32** %self.dbg.spill5, align 8, !dbg !2853
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill5, metadata !2855, metadata !DIExpression()), !dbg !2861
  store i32* %self3, i32** %ptr.dbg.spill, align 8, !dbg !2861
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !2819, metadata !DIExpression()), !dbg !2863
  store i32* %self3, i32** %self.dbg.spill6, align 8, !dbg !2837
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill6, metadata !2835, metadata !DIExpression()), !dbg !2864
  %self7 = bitcast i32* %self3 to i8*, !dbg !2864
  store i8* %self7, i8** %self.dbg.spill8, align 8, !dbg !2864
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill8, metadata !2865, metadata !DIExpression()), !dbg !2870
  %3 = bitcast {}** %1 to i64*, !dbg !2872
  store i64 0, i64* %3, align 8, !dbg !2872
  %data_address = load {}*, {}** %1, align 8, !dbg !2872
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !2872
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2826, metadata !DIExpression()), !dbg !2827
  br label %bb2, !dbg !2872

bb2:                                              ; preds = %start
  %4 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to {}**, !dbg !2827
  store {}* %data_address, {}** %4, align 8, !dbg !2827
  %5 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !2827
  %6 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %5 to i8*, !dbg !2827
  %7 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_18 to i8*, !dbg !2827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 8, i1 false), !dbg !2827
  %8 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_17 to i8**, !dbg !2827
  %other = load i8*, i8** %8, align 8, !dbg !2827
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !2827
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2869, metadata !DIExpression()), !dbg !2870
  %9 = icmp eq i8* %self7, %other, !dbg !2870
  %10 = zext i1 %9 to i8, !dbg !2870
  store i8 %10, i8* %0, align 1, !dbg !2870
  %11 = load i8, i8* %0, align 1, !dbg !2870, !range !680, !noundef !23
  %_5 = trunc i8 %11 to i1, !dbg !2870
  br label %bb3, !dbg !2870

bb3:                                              ; preds = %bb2
  %_4 = xor i1 %_5, true, !dbg !2878
  call void @llvm.assume(i1 %_4), !dbg !2879
  br label %bb1, !dbg !2879

bb1:                                              ; preds = %bb3
  ret i32* %self3, !dbg !2880
}

; alloc::vec::Vec<T,A>::extend_with
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17h26b5e96f38a5fe17E"(%"alloc::vec::Vec<[i32; 4]>"* align 8 %self, i64 %n, %"alloc::vec::ExtendElement<[i32; 4]>"* %value) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !2881 {
start:
  %self.dbg.spill15 = alloca { i64*, i64 }*, align 8
  %dst.dbg.spill14 = alloca [4 x i32]*, align 8
  %self.dbg.spill12 = alloca { i64*, i64 }*, align 8
  %0 = alloca [4 x i32]*, align 8
  %self.dbg.spill11 = alloca [4 x i32]*, align 8
  %dst.dbg.spill = alloca [4 x i32]*, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %len.dbg.spill = alloca i64*, align 8
  %1 = alloca [4 x i32]*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca [4 x i32]*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill5 = alloca %"alloc::vec::Vec<[i32; 4]>"*, align 8
  %self.dbg.spill4 = alloca [4 x i32]*, align 8
  %2 = alloca { i8*, i32 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<[i32; 4]>"*, align 8
  %_35 = alloca i8, align 1
  %_33 = alloca %"alloc::vec::ExtendElement<[i32; 4]>", align 4
  %src2 = alloca [4 x i32], align 4
  %src = alloca [4 x i32], align 4
  %_19 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %local_len = alloca { i64*, i64 }, align 8
  %ptr = alloca [4 x i32]*, align 8
  store %"alloc::vec::Vec<[i32; 4]>"* %self, %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill, metadata !2888, metadata !DIExpression()), !dbg !2899
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !2889, metadata !DIExpression()), !dbg !2900
  call void @llvm.dbg.declare(metadata %"alloc::vec::ExtendElement<[i32; 4]>"* %value, metadata !2890, metadata !DIExpression()), !dbg !2901
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr, metadata !2891, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %local_len, metadata !2893, metadata !DIExpression()), !dbg !2903
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !2904, metadata !DIExpression()), !dbg !2916
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !2895, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.declare(metadata [4 x i32]* %src, metadata !2919, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.declare(metadata [4 x i32]* %src2, metadata !2928, metadata !DIExpression()), !dbg !2933
  store i8 1, i8* %_35, align 1, !dbg !2935
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h44b4f37ca4dc178dE"(%"alloc::vec::Vec<[i32; 4]>"* align 8 %self, i64 %n)
          to label %bb1 unwind label %cleanup, !dbg !2935

bb17:                                             ; preds = %bb13, %cleanup
  %3 = load i8, i8* %_35, align 1, !dbg !2936, !range !680, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !2936
  br i1 %4, label %bb16, label %bb14, !dbg !2936

cleanup:                                          ; preds = %bb10, %bb1, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb17

bb1:                                              ; preds = %start
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %self3 = invoke [4 x i32]* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1541b40118434109E"(%"alloc::vec::Vec<[i32; 4]>"* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !2937

bb2:                                              ; preds = %bb1
  store [4 x i32]* %self3, [4 x i32]** %self.dbg.spill4, align 8, !dbg !2937
  call void @llvm.dbg.declare(metadata [4 x i32]** %self.dbg.spill4, metadata !2938, metadata !DIExpression()), !dbg !2945
  store %"alloc::vec::Vec<[i32; 4]>"* %self, %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill5, align 8, !dbg !2946
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill5, metadata !2947, metadata !DIExpression()), !dbg !2953
  %10 = getelementptr inbounds %"alloc::vec::Vec<[i32; 4]>", %"alloc::vec::Vec<[i32; 4]>"* %self, i32 0, i32 1, !dbg !2953
  %count = load i64, i64* %10, align 8, !dbg !2953
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !2953
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !2944, metadata !DIExpression()), !dbg !2945
  store [4 x i32]* %self3, [4 x i32]** %self.dbg.spill6, align 8, !dbg !2945
  call void @llvm.dbg.declare(metadata [4 x i32]** %self.dbg.spill6, metadata !2954, metadata !DIExpression()), !dbg !2961
  store i64 %count, i64* %count.dbg.spill7, align 8, !dbg !2945
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !2960, metadata !DIExpression()), !dbg !2961
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %self3, i64 %count, !dbg !2961
  store [4 x i32]* %11, [4 x i32]** %1, align 8, !dbg !2961
  %_39 = load [4 x i32]*, [4 x i32]** %1, align 8, !dbg !2961
  br label %bb18, !dbg !2961

bb18:                                             ; preds = %bb2
  store [4 x i32]* %_39, [4 x i32]** %ptr, align 8, !dbg !2961
  %_14 = getelementptr inbounds %"alloc::vec::Vec<[i32; 4]>", %"alloc::vec::Vec<[i32; 4]>"* %self, i32 0, i32 1, !dbg !2963
  store i64* %_14, i64** %len.dbg.spill, align 8, !dbg !2963
  call void @llvm.dbg.declare(metadata i64** %len.dbg.spill, metadata !2964, metadata !DIExpression()), !dbg !2971
  %_43 = load i64, i64* %_14, align 8, !dbg !2971
  %12 = bitcast { i64*, i64 }* %local_len to i64**, !dbg !2971
  store i64* %_14, i64** %12, align 8, !dbg !2971
  %13 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !2971
  store i64 %_43, i64* %13, align 8, !dbg !2971
  %14 = bitcast { i64, i64 }* %self1 to i64*, !dbg !2917
  store i64 1, i64* %14, align 8, !dbg !2917
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2917
  store i64 %n, i64* %15, align 8, !dbg !2917
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !2916
  %_15.0 = load i64, i64* %16, align 8, !dbg !2916
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !2916
  %_15.1 = load i64, i64* %17, align 8, !dbg !2916
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !2917
  store i64 %_15.0, i64* %18, align 8, !dbg !2917
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !2917
  store i64 %_15.1, i64* %19, align 8, !dbg !2917
  br label %bb3, !dbg !2973

bb3:                                              ; preds = %bb20, %bb18
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !2918
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !2974, metadata !DIExpression()), !dbg !2978
; invoke <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %20 = invoke { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h013f4cf64bb64df5E"({ i64, i64 }* align 8 %iter)
          to label %bb19 unwind label %cleanup9, !dbg !2978

bb13:                                             ; preds = %cleanup9
; invoke core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17haf88146aabe3cfcdE"({ i64*, i64 }* %local_len) #17
          to label %bb17 unwind label %abort, !dbg !2979

cleanup9:                                         ; preds = %bb8, %bb4, %bb3
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  %23 = extractvalue { i8*, i32 } %21, 1
  %24 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %23, i32* %25, align 8
  br label %bb13

bb19:                                             ; preds = %bb3
  store { i64, i64 } %20, { i64, i64 }* %_19, align 8, !dbg !2978
  %26 = bitcast { i64, i64 }* %_19 to i64*, !dbg !2918
  %_22 = load i64, i64* %26, align 8, !dbg !2918, !range !1114, !noundef !23
  switch i64 %_22, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !2918

bb5:                                              ; preds = %bb19
  unreachable, !dbg !2918

bb6:                                              ; preds = %bb19
  %_29 = icmp ugt i64 %n, 0, !dbg !2980
  br i1 %_29, label %bb8, label %bb10, !dbg !2980

bb4:                                              ; preds = %bb19
  %dst = load [4 x i32]*, [4 x i32]** %ptr, align 8, !dbg !2981
  store [4 x i32]* %dst, [4 x i32]** %dst.dbg.spill, align 8, !dbg !2981
  call void @llvm.dbg.declare(metadata [4 x i32]** %dst.dbg.spill, metadata !2925, metadata !DIExpression()), !dbg !2926
; invoke <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next
  invoke void @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17h0259fdffc749672fE"([4 x i32]* sret([4 x i32]) %src, %"alloc::vec::ExtendElement<[i32; 4]>"* align 4 %value)
          to label %bb7 unwind label %cleanup9, !dbg !2982

bb7:                                              ; preds = %bb4
  %27 = bitcast [4 x i32]* %dst to i8*, !dbg !2926
  %28 = bitcast [4 x i32]* %src to i8*, !dbg !2926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 16, i1 false), !dbg !2926
  %self10 = load [4 x i32]*, [4 x i32]** %ptr, align 8, !dbg !2983
  store [4 x i32]* %self10, [4 x i32]** %self.dbg.spill11, align 8, !dbg !2983
  call void @llvm.dbg.declare(metadata [4 x i32]** %self.dbg.spill11, metadata !2984, metadata !DIExpression()), !dbg !2989
  %29 = getelementptr inbounds [4 x i32], [4 x i32]* %self10, i64 1, !dbg !2989
  store [4 x i32]* %29, [4 x i32]** %0, align 8, !dbg !2989
  %_50 = load [4 x i32]*, [4 x i32]** %0, align 8, !dbg !2989
  br label %bb20, !dbg !2989

bb20:                                             ; preds = %bb7
  store [4 x i32]* %_50, [4 x i32]** %ptr, align 8, !dbg !2990
  store { i64*, i64 }* %local_len, { i64*, i64 }** %self.dbg.spill12, align 8, !dbg !2991
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill12, metadata !2992, metadata !DIExpression()), !dbg !3000
  %30 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !3000
  %31 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !3000
  %32 = load i64, i64* %31, align 8, !dbg !3000
  %33 = add i64 %32, 1, !dbg !3000
  store i64 %33, i64* %30, align 8, !dbg !3000
  br label %bb3, !dbg !2973

bb10:                                             ; preds = %bb9, %bb6
; invoke core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17haf88146aabe3cfcdE"({ i64*, i64 }* %local_len)
          to label %bb11 unwind label %cleanup, !dbg !2979

bb8:                                              ; preds = %bb6
  %dst13 = load [4 x i32]*, [4 x i32]** %ptr, align 8, !dbg !3001
  store [4 x i32]* %dst13, [4 x i32]** %dst.dbg.spill14, align 8, !dbg !3001
  call void @llvm.dbg.declare(metadata [4 x i32]** %dst.dbg.spill14, metadata !2932, metadata !DIExpression()), !dbg !2933
  store i8 0, i8* %_35, align 1, !dbg !3002
  %34 = bitcast %"alloc::vec::ExtendElement<[i32; 4]>"* %_33 to i8*, !dbg !3002
  %35 = bitcast %"alloc::vec::ExtendElement<[i32; 4]>"* %value to i8*, !dbg !3002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 16, i1 false), !dbg !3002
; invoke <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::last
  invoke void @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17h064a5f7cacac13ddE"([4 x i32]* sret([4 x i32]) %src2, %"alloc::vec::ExtendElement<[i32; 4]>"* %_33)
          to label %bb9 unwind label %cleanup9, !dbg !3002

bb9:                                              ; preds = %bb8
  %36 = bitcast [4 x i32]* %dst13 to i8*, !dbg !2933
  %37 = bitcast [4 x i32]* %src2 to i8*, !dbg !2933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 16, i1 false), !dbg !2933
  store { i64*, i64 }* %local_len, { i64*, i64 }** %self.dbg.spill15, align 8, !dbg !3003
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill15, metadata !3004, metadata !DIExpression()), !dbg !3009
  %38 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !3009
  %39 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !3009
  %40 = load i64, i64* %39, align 8, !dbg !3009
  %41 = add i64 %40, 1, !dbg !3009
  store i64 %41, i64* %38, align 8, !dbg !3009
  br label %bb10, !dbg !3010

abort:                                            ; preds = %bb13
  %42 = landingpad { i8*, i32 }
          cleanup, !dbg !3011
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #18, !dbg !3011
  unreachable, !dbg !3011

bb11:                                             ; preds = %bb10
  %43 = load i8, i8* %_35, align 1, !dbg !2936, !range !680, !noundef !23
  %44 = trunc i8 %43 to i1, !dbg !2936
  br i1 %44, label %bb15, label %bb12, !dbg !2936

bb14:                                             ; preds = %bb16, %bb17
  %45 = bitcast { i8*, i32 }* %2 to i8**, !dbg !3011
  %46 = load i8*, i8** %45, align 8, !dbg !3011
  %47 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !3011
  %48 = load i32, i32* %47, align 8, !dbg !3011
  %49 = insertvalue { i8*, i32 } undef, i8* %46, 0, !dbg !3011
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1, !dbg !3011
  resume { i8*, i32 } %50, !dbg !3011

bb16:                                             ; preds = %bb17
  br label %bb14, !dbg !2936

bb12:                                             ; preds = %bb15, %bb11
  ret void, !dbg !3012

bb15:                                             ; preds = %bb11
  br label %bb12, !dbg !2936
}

; alloc::vec::Vec<T,A>::extend_with
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17hcaee78540f1aac09E"(%"alloc::vec::Vec<i32>"* align 8 %self, i64 %n, i32 %0) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !3013 {
start:
  %self.dbg.spill15 = alloca { i64*, i64 }*, align 8
  %dst.dbg.spill14 = alloca i32*, align 8
  %self.dbg.spill12 = alloca { i64*, i64 }*, align 8
  %1 = alloca i32*, align 8
  %self.dbg.spill11 = alloca i32*, align 8
  %dst.dbg.spill = alloca i32*, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %len.dbg.spill = alloca i64*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill7 = alloca i64, align 8
  %self.dbg.spill6 = alloca i32*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill5 = alloca %"alloc::vec::Vec<i32>"*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %3 = alloca { i8*, i32 }, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  %_35 = alloca i8, align 1
  %src2 = alloca i32, align 4
  %src = alloca i32, align 4
  %_19 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %local_len = alloca { i64*, i64 }, align 8
  %ptr = alloca i32*, align 8
  %value = alloca i32, align 4
  store i32 %0, i32* %value, align 4
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !3020, metadata !DIExpression()), !dbg !3031
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3021, metadata !DIExpression()), !dbg !3032
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3022, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !3023, metadata !DIExpression()), !dbg !3034
  call void @llvm.dbg.declare(metadata { i64*, i64 }* %local_len, metadata !3025, metadata !DIExpression()), !dbg !3035
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !3036, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !3027, metadata !DIExpression()), !dbg !3042
  call void @llvm.dbg.declare(metadata i32* %src, metadata !3043, metadata !DIExpression()), !dbg !3048
  call void @llvm.dbg.declare(metadata i32* %src2, metadata !3050, metadata !DIExpression()), !dbg !3055
  store i8 1, i8* %_35, align 1, !dbg !3057
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h2815514b41892420E"(%"alloc::vec::Vec<i32>"* align 8 %self, i64 %n)
          to label %bb1 unwind label %cleanup, !dbg !3057

bb17:                                             ; preds = %bb13, %cleanup
  %4 = load i8, i8* %_35, align 1, !dbg !3058, !range !680, !noundef !23
  %5 = trunc i8 %4 to i1, !dbg !3058
  br i1 %5, label %bb16, label %bb14, !dbg !3058

cleanup:                                          ; preds = %bb10, %bb1, %start
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = extractvalue { i8*, i32 } %6, 1
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %8, i32* %10, align 8
  br label %bb17

bb1:                                              ; preds = %start
; invoke alloc::vec::Vec<T,A>::as_mut_ptr
  %self3 = invoke i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h80d65c2e6950a404E"(%"alloc::vec::Vec<i32>"* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !3059

bb2:                                              ; preds = %bb1
  store i32* %self3, i32** %self.dbg.spill4, align 8, !dbg !3059
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !3060, metadata !DIExpression()), !dbg !3067
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill5, align 8, !dbg !3068
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill5, metadata !3069, metadata !DIExpression()), !dbg !3075
  %11 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !3075
  %count = load i64, i64* %11, align 8, !dbg !3075
  store i64 %count, i64* %count.dbg.spill, align 8, !dbg !3075
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !3066, metadata !DIExpression()), !dbg !3067
  store i32* %self3, i32** %self.dbg.spill6, align 8, !dbg !3067
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill6, metadata !3076, metadata !DIExpression()), !dbg !3083
  store i64 %count, i64* %count.dbg.spill7, align 8, !dbg !3067
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill7, metadata !3082, metadata !DIExpression()), !dbg !3083
  %12 = getelementptr inbounds i32, i32* %self3, i64 %count, !dbg !3083
  store i32* %12, i32** %2, align 8, !dbg !3083
  %_39 = load i32*, i32** %2, align 8, !dbg !3083
  br label %bb18, !dbg !3083

bb18:                                             ; preds = %bb2
  store i32* %_39, i32** %ptr, align 8, !dbg !3083
  %_14 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !3085
  store i64* %_14, i64** %len.dbg.spill, align 8, !dbg !3085
  call void @llvm.dbg.declare(metadata i64** %len.dbg.spill, metadata !3086, metadata !DIExpression()), !dbg !3090
  %_43 = load i64, i64* %_14, align 8, !dbg !3090
  %13 = bitcast { i64*, i64 }* %local_len to i64**, !dbg !3090
  store i64* %_14, i64** %13, align 8, !dbg !3090
  %14 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !3090
  store i64 %_43, i64* %14, align 8, !dbg !3090
  %15 = bitcast { i64, i64 }* %self1 to i64*, !dbg !3041
  store i64 1, i64* %15, align 8, !dbg !3041
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3041
  store i64 %n, i64* %16, align 8, !dbg !3041
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !3040
  %_15.0 = load i64, i64* %17, align 8, !dbg !3040
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !3040
  %_15.1 = load i64, i64* %18, align 8, !dbg !3040
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !3041
  store i64 %_15.0, i64* %19, align 8, !dbg !3041
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !3041
  store i64 %_15.1, i64* %20, align 8, !dbg !3041
  br label %bb3, !dbg !3092

bb3:                                              ; preds = %bb20, %bb18
  store { i64, i64 }* %iter, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !3042
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !3093, metadata !DIExpression()), !dbg !3097
; invoke <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  %21 = invoke { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h013f4cf64bb64df5E"({ i64, i64 }* align 8 %iter)
          to label %bb19 unwind label %cleanup9, !dbg !3097

bb13:                                             ; preds = %cleanup9
; invoke core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17haf88146aabe3cfcdE"({ i64*, i64 }* %local_len) #17
          to label %bb17 unwind label %abort, !dbg !3098

cleanup9:                                         ; preds = %bb8, %bb4, %bb3
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  %24 = extractvalue { i8*, i32 } %22, 1
  %25 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1
  store i32 %24, i32* %26, align 8
  br label %bb13

bb19:                                             ; preds = %bb3
  store { i64, i64 } %21, { i64, i64 }* %_19, align 8, !dbg !3097
  %27 = bitcast { i64, i64 }* %_19 to i64*, !dbg !3042
  %_22 = load i64, i64* %27, align 8, !dbg !3042, !range !1114, !noundef !23
  switch i64 %_22, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !3042

bb5:                                              ; preds = %bb19
  unreachable, !dbg !3042

bb6:                                              ; preds = %bb19
  %_29 = icmp ugt i64 %n, 0, !dbg !3099
  br i1 %_29, label %bb8, label %bb10, !dbg !3099

bb4:                                              ; preds = %bb19
  %dst = load i32*, i32** %ptr, align 8, !dbg !3100
  store i32* %dst, i32** %dst.dbg.spill, align 8, !dbg !3100
  call void @llvm.dbg.declare(metadata i32** %dst.dbg.spill, metadata !3047, metadata !DIExpression()), !dbg !3048
; invoke <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next
  %28 = invoke i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17h2d2d28455def80d3E"(i32* align 4 %value)
          to label %bb7 unwind label %cleanup9, !dbg !3101

bb7:                                              ; preds = %bb4
  store i32 %28, i32* %src, align 4, !dbg !3101
  %29 = bitcast i32* %dst to i8*, !dbg !3048
  %30 = bitcast i32* %src to i8*, !dbg !3048
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 4, i1 false), !dbg !3048
  %self10 = load i32*, i32** %ptr, align 8, !dbg !3102
  store i32* %self10, i32** %self.dbg.spill11, align 8, !dbg !3102
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill11, metadata !3103, metadata !DIExpression()), !dbg !3108
  %31 = getelementptr inbounds i32, i32* %self10, i64 1, !dbg !3108
  store i32* %31, i32** %1, align 8, !dbg !3108
  %_50 = load i32*, i32** %1, align 8, !dbg !3108
  br label %bb20, !dbg !3108

bb20:                                             ; preds = %bb7
  store i32* %_50, i32** %ptr, align 8, !dbg !3109
  store { i64*, i64 }* %local_len, { i64*, i64 }** %self.dbg.spill12, align 8, !dbg !3110
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill12, metadata !3111, metadata !DIExpression()), !dbg !3116
  %32 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !3116
  %33 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !3116
  %34 = load i64, i64* %33, align 8, !dbg !3116
  %35 = add i64 %34, 1, !dbg !3116
  store i64 %35, i64* %32, align 8, !dbg !3116
  br label %bb3, !dbg !3092

bb10:                                             ; preds = %bb9, %bb6
; invoke core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17haf88146aabe3cfcdE"({ i64*, i64 }* %local_len)
          to label %bb11 unwind label %cleanup, !dbg !3098

bb8:                                              ; preds = %bb6
  %dst13 = load i32*, i32** %ptr, align 8, !dbg !3117
  store i32* %dst13, i32** %dst.dbg.spill14, align 8, !dbg !3117
  call void @llvm.dbg.declare(metadata i32** %dst.dbg.spill14, metadata !3054, metadata !DIExpression()), !dbg !3055
  store i8 0, i8* %_35, align 1, !dbg !3118
  %_33 = load i32, i32* %value, align 4, !dbg !3118
; invoke <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::last
  %36 = invoke i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17hab6f0eaf516c9d1cE"(i32 %_33)
          to label %bb9 unwind label %cleanup9, !dbg !3118

bb9:                                              ; preds = %bb8
  store i32 %36, i32* %src2, align 4, !dbg !3118
  %37 = bitcast i32* %dst13 to i8*, !dbg !3055
  %38 = bitcast i32* %src2 to i8*, !dbg !3055
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %38, i64 4, i1 false), !dbg !3055
  store { i64*, i64 }* %local_len, { i64*, i64 }** %self.dbg.spill15, align 8, !dbg !3119
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill15, metadata !3120, metadata !DIExpression()), !dbg !3125
  %39 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !3125
  %40 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %local_len, i32 0, i32 1, !dbg !3125
  %41 = load i64, i64* %40, align 8, !dbg !3125
  %42 = add i64 %41, 1, !dbg !3125
  store i64 %42, i64* %39, align 8, !dbg !3125
  br label %bb10, !dbg !3126

abort:                                            ; preds = %bb13
  %43 = landingpad { i8*, i32 }
          cleanup, !dbg !3127
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #18, !dbg !3127
  unreachable, !dbg !3127

bb11:                                             ; preds = %bb10
  %44 = load i8, i8* %_35, align 1, !dbg !3058, !range !680, !noundef !23
  %45 = trunc i8 %44 to i1, !dbg !3058
  br i1 %45, label %bb15, label %bb12, !dbg !3058

bb14:                                             ; preds = %bb16, %bb17
  %46 = bitcast { i8*, i32 }* %3 to i8**, !dbg !3127
  %47 = load i8*, i8** %46, align 8, !dbg !3127
  %48 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i32 0, i32 1, !dbg !3127
  %49 = load i32, i32* %48, align 8, !dbg !3127
  %50 = insertvalue { i8*, i32 } undef, i8* %47, 0, !dbg !3127
  %51 = insertvalue { i8*, i32 } %50, i32 %49, 1, !dbg !3127
  resume { i8*, i32 } %51, !dbg !3127

bb16:                                             ; preds = %bb17
  br label %bb14, !dbg !3058

bb12:                                             ; preds = %bb15, %bb11
  ret void, !dbg !3128

bb15:                                             ; preds = %bb11
  br label %bb12, !dbg !3058
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h2815514b41892420E"(%"alloc::vec::Vec<i32>"* align 8 %self, i64 %additional) unnamed_addr #2 !dbg !3129 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !3133, metadata !DIExpression()), !dbg !3135
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3134, metadata !DIExpression()), !dbg !3136
  %_4 = bitcast %"alloc::vec::Vec<i32>"* %self to { i32*, i64 }*, !dbg !3137
  %0 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !3138
  %_5 = load i64, i64* %0, align 8, !dbg !3138
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hfc2e4c7088dac924E"({ i32*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !3137
  br label %bb1, !dbg !3137

bb1:                                              ; preds = %start
  ret void, !dbg !3139
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h44b4f37ca4dc178dE"(%"alloc::vec::Vec<[i32; 4]>"* align 8 %self, i64 %additional) unnamed_addr #2 !dbg !3140 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<[i32; 4]>"*, align 8
  store %"alloc::vec::Vec<[i32; 4]>"* %self, %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill, metadata !3144, metadata !DIExpression()), !dbg !3146
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !3145, metadata !DIExpression()), !dbg !3147
  %_4 = bitcast %"alloc::vec::Vec<[i32; 4]>"* %self to { i32*, i64 }*, !dbg !3148
  %0 = getelementptr inbounds %"alloc::vec::Vec<[i32; 4]>", %"alloc::vec::Vec<[i32; 4]>"* %self, i32 0, i32 1, !dbg !3149
  %_5 = load i64, i64* %0, align 8, !dbg !3149
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h5b88c90a43b306c3E"({ i32*, i64 }* align 8 %_4, i64 %_5, i64 %additional), !dbg !3148
  br label %bb1, !dbg !3148

bb1:                                              ; preds = %start
  ret void, !dbg !3150
}

; alloc::vec::from_elem
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc3vec9from_elem17hb9352b6c351bbae8E(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %0, i32 %elem, i64 %n) unnamed_addr #2 !dbg !3151 {
start:
  %n.dbg.spill = alloca i64, align 8
  %elem.dbg.spill = alloca i32, align 4
  store i32 %elem, i32* %elem.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %elem.dbg.spill, metadata !3155, metadata !DIExpression()), !dbg !3157
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3156, metadata !DIExpression()), !dbg !3158
; call <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem
  call void @"_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h3de17457e0983c6bE"(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %0, i32 %elem, i64 %n), !dbg !3159
  br label %bb1, !dbg !3159

bb1:                                              ; preds = %start
  ret void, !dbg !3160
}

; alloc::vec::from_elem
; Function Attrs: nonlazybind uwtable
define internal void @_ZN5alloc3vec9from_elem17he36855d432e37c37E(%"alloc::vec::Vec<[i32; 4]>"* sret(%"alloc::vec::Vec<[i32; 4]>") %0, [4 x i32]* %elem, i64 %n) unnamed_addr #2 !dbg !3161 {
start:
  %n.dbg.spill = alloca i64, align 8
  %_3 = alloca [4 x i32], align 4
  call void @llvm.dbg.declare(metadata [4 x i32]* %elem, metadata !3165, metadata !DIExpression()), !dbg !3167
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3166, metadata !DIExpression()), !dbg !3168
  %1 = bitcast [4 x i32]* %_3 to i8*, !dbg !3169
  %2 = bitcast [4 x i32]* %elem to i8*, !dbg !3169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 16, i1 false), !dbg !3169
; call <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem
  call void @"_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17he692ac74cb4b7798E"(%"alloc::vec::Vec<[i32; 4]>"* sret(%"alloc::vec::Vec<[i32; 4]>") %0, [4 x i32]* %_3, i64 %n), !dbg !3170
  br label %bb1, !dbg !3170

bb1:                                              ; preds = %start
  ret void, !dbg !3171
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h949f8c49fad503faE(%"alloc::alloc::Global"* align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !3172 {
start:
  %ptr.dbg.spill38 = alloca { [0 x i8]*, i64 }, align 8
  %data_address.dbg.spill35 = alloca {}*, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %data.dbg.spill32 = alloca i8*, align 8
  %self.dbg.spill31 = alloca i8*, align 8
  %ptr.dbg.spill29 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill25 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %len.dbg.spill23 = alloca i64, align 8
  %data.dbg.spill22 = alloca i8*, align 8
  %self.dbg.spill21 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill20 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %n.dbg.spill18 = alloca i64, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %self.dbg.spill16 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill15 = alloca { i64, i64 }*, align 8
  %self.dbg.spill14 = alloca { i64, i64 }*, align 8
  %size.dbg.spill = alloca i64, align 8
  %self.dbg.spill13 = alloca { i64, i64 }*, align 8
  %e.dbg.spill12 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %_94 = alloca { i8*, i64 }, align 8
  %_93 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %_51 = alloca { i8*, i64 }, align 8
  %_50 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self7 = alloca i64, align 8
  %self6 = alloca i64, align 8
  %_24 = alloca { i8*, i64 }, align 8
  %self4 = alloca i8*, align 8
  %self3 = alloca i8*, align 8
  %_15 = alloca i8*, align 8
  %layout2 = alloca { i64, i64 }, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %raw_ptr = alloca i8*, align 8
  %data = alloca i8*, align 8
  %_6 = alloca { i8*, i64 }, align 8
  %3 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %5, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !3178, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3179, metadata !DIExpression()), !dbg !3205
  %6 = zext i1 %zeroed to i8
  store i8 %6, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !3180, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.declare(metadata i8** %data, metadata !3207, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !3183, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !3217, metadata !DIExpression()), !dbg !3222
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout2, metadata !3224, metadata !DIExpression()), !dbg !3227
  call void @llvm.dbg.declare(metadata i8** %self3, metadata !3229, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.declare(metadata i8** %self4, metadata !3273, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !3279, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !3187, metadata !DIExpression()), !dbg !3284
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !3285, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !3298, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !3318, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !3323, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !3334, metadata !DIExpression()), !dbg !3338
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !3339, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !3350, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !3268, metadata !DIExpression()), !dbg !3355
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill12, metadata !3291, metadata !DIExpression()), !dbg !3356
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill13, align 8, !dbg !3357
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill13, metadata !3358, metadata !DIExpression()), !dbg !3362
  %7 = bitcast { i64, i64 }* %layout to i64*, !dbg !3362
  %_4 = load i64, i64* %7, align 8, !dbg !3362
  %8 = icmp eq i64 %_4, 0, !dbg !3363
  br i1 %8, label %bb2, label %bb1, !dbg !3363

bb2:                                              ; preds = %start
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !3317
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !3315, metadata !DIExpression()), !dbg !3364
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !3364
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !3308, metadata !DIExpression()), !dbg !3365
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3365
  %10 = load i64, i64* %9, align 8, !dbg !3365, !range !1671, !noundef !23
  store i64 %10, i64* %self7, align 8, !dbg !3365
  %_33 = load i64, i64* %self7, align 8, !dbg !3322, !range !1671, !noundef !23
  store i64 %_33, i64* %n.dbg.spill28, align 8, !dbg !3322
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !3366, metadata !DIExpression()), !dbg !3373
  store i64 %_33, i64* %self6, align 8, !dbg !3373
  %addr = load i64, i64* %self6, align 8, !dbg !3302
  store i64 %addr, i64* %addr.dbg.spill, align 8, !dbg !3302
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !3375, metadata !DIExpression()), !dbg !3381
  %11 = bitcast i8** %2 to i64*, !dbg !3381
  store i64 %addr, i64* %11, align 8, !dbg !3381
  %ptr = load i8*, i8** %2, align 8, !dbg !3381
  store i8* %ptr, i8** %ptr.dbg.spill29, align 8, !dbg !3381
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill29, metadata !3383, metadata !DIExpression()), !dbg !3387
  br label %bb13, !dbg !3381

bb1:                                              ; preds = %start
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !3389
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !3181, metadata !DIExpression()), !dbg !3390
  br i1 %zeroed, label %bb3, label %bb4, !dbg !3391

bb4:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3392
  %13 = load i64, i64* %12, align 8, !dbg !3392
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3392
  %15 = load i64, i64* %14, align 8, !dbg !3392, !range !1671, !noundef !23
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 0, !dbg !3392
  store i64 %13, i64* %16, align 8, !dbg !3392
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !3392
  store i64 %15, i64* %17, align 8, !dbg !3392
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill16, align 8, !dbg !3227
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill16, metadata !3393, metadata !DIExpression()), !dbg !3397
  %18 = bitcast { i64, i64 }* %layout2 to i64*, !dbg !3397
  %_67 = load i64, i64* %18, align 8, !dbg !3397
  store { i64, i64 }* %layout2, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !3227
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !3347, metadata !DIExpression()), !dbg !3399
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout2, i32 0, i32 1, !dbg !3399
  %20 = load i64, i64* %19, align 8, !dbg !3399, !range !1671, !noundef !23
  store i64 %20, i64* %self11, align 8, !dbg !3399
  %_74 = load i64, i64* %self11, align 8, !dbg !3354, !range !1671, !noundef !23
  store i64 %_74, i64* %n.dbg.spill18, align 8, !dbg !3354
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill18, metadata !3400, metadata !DIExpression()), !dbg !3407
  store i64 %_74, i64* %self10, align 8, !dbg !3407
  %_69 = load i64, i64* %self10, align 8, !dbg !3343
  %21 = call i8* @__rust_alloc(i64 %_67, i64 %_69) #19, !dbg !3227
  store i8* %21, i8** %raw_ptr, align 8, !dbg !3227
  br label %bb15, !dbg !3227

bb3:                                              ; preds = %bb1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3409
  %23 = load i64, i64* %22, align 8, !dbg !3409
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3409
  %25 = load i64, i64* %24, align 8, !dbg !3409, !range !1671, !noundef !23
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !3409
  store i64 %23, i64* %26, align 8, !dbg !3409
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !3409
  store i64 %25, i64* %27, align 8, !dbg !3409
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill14, align 8, !dbg !3222
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill14, metadata !3410, metadata !DIExpression()), !dbg !3414
  %28 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !3414
  %_57 = load i64, i64* %28, align 8, !dbg !3414
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill15, align 8, !dbg !3222
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill15, metadata !3331, metadata !DIExpression()), !dbg !3416
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !3416
  %30 = load i64, i64* %29, align 8, !dbg !3416, !range !1671, !noundef !23
  store i64 %30, i64* %self9, align 8, !dbg !3416
  %_64 = load i64, i64* %self9, align 8, !dbg !3338, !range !1671, !noundef !23
  store i64 %_64, i64* %n.dbg.spill, align 8, !dbg !3338
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3417, metadata !DIExpression()), !dbg !3424
  store i64 %_64, i64* %self8, align 8, !dbg !3424
  %_59 = load i64, i64* %self8, align 8, !dbg !3327
  %31 = call i8* @__rust_alloc_zeroed(i64 %_57, i64 %_59) #19, !dbg !3222
  store i8* %31, i8** %raw_ptr, align 8, !dbg !3222
  br label %bb14, !dbg !3222

bb14:                                             ; preds = %bb3
  br label %bb5, !dbg !3426

bb5:                                              ; preds = %bb15, %bb14
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !3427
; call core::ptr::non_null::NonNull<T>::new
  %32 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hd3bacb1f2d9d38d1E"(i8* %_18), !dbg !3272
  store i8* %32, i8** %self4, align 8, !dbg !3272
  br label %bb6, !dbg !3272

bb15:                                             ; preds = %bb4
  br label %bb5, !dbg !3426

bb6:                                              ; preds = %bb5
  %33 = bitcast i8** %self4 to {}**, !dbg !3283
  %34 = load {}*, {}** %33, align 8, !dbg !3283
  %35 = icmp eq {}* %34, null, !dbg !3283
  %_77 = select i1 %35, i64 0, i64 1, !dbg !3283
  switch i64 %_77, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !3283

bb17:                                             ; preds = %bb6
  unreachable, !dbg !3283

bb16:                                             ; preds = %bb6
  %36 = bitcast i8** %self3 to {}**, !dbg !3283
  store {}* null, {}** %36, align 8, !dbg !3283
  br label %bb19, !dbg !3283

bb18:                                             ; preds = %bb6
  %v = load i8*, i8** %self4, align 8, !dbg !3283, !nonnull !23, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !3283
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !3280, metadata !DIExpression()), !dbg !3428
  store i8* %v, i8** %self3, align 8, !dbg !3428
  br label %bb19, !dbg !3283

bb19:                                             ; preds = %bb16, %bb18
  %37 = bitcast i8** %self3 to {}**, !dbg !3271
  %38 = load {}*, {}** %37, align 8, !dbg !3271
  %39 = icmp eq {}* %38, null, !dbg !3271
  %_80 = select i1 %39, i64 1, i64 0, !dbg !3271
  switch i64 %_80, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !3271

bb21:                                             ; preds = %bb19
  unreachable, !dbg !3271

bb22:                                             ; preds = %bb19
  %v19 = load i8*, i8** %self3, align 8, !dbg !3271, !nonnull !23, !noundef !23
  store i8* %v19, i8** %v.dbg.spill20, align 8, !dbg !3271
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill20, metadata !3265, metadata !DIExpression()), !dbg !3429
  store i8* %v19, i8** %_15, align 8, !dbg !3429
  br label %bb7, !dbg !3271

bb20:                                             ; preds = %bb19
  %40 = bitcast i8** %_15 to {}**, !dbg !3355
  store {}* null, {}** %40, align 8, !dbg !3355
  br label %bb7, !dbg !3271

bb7:                                              ; preds = %bb22, %bb20
  %41 = bitcast i8** %_15 to {}**, !dbg !3272
  %42 = load {}*, {}** %41, align 8, !dbg !3272
  %43 = icmp eq {}* %42, null, !dbg !3272
  %_20 = select i1 %43, i64 1, i64 0, !dbg !3272
  switch i64 %_20, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !3272

bb9:                                              ; preds = %bb7
  unreachable, !dbg !3272

bb8:                                              ; preds = %bb7
  %val = load i8*, i8** %_15, align 8, !dbg !3272, !nonnull !23, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !3272
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !3202, metadata !DIExpression()), !dbg !3430
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !3430
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3185, metadata !DIExpression()), !dbg !3431
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !3432
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3433, metadata !DIExpression()), !dbg !3438
  store i64 %_4, i64* %len.dbg.spill, align 8, !dbg !3440
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3437, metadata !DIExpression()), !dbg !3438
  store i8* %val, i8** %self.dbg.spill21, align 8, !dbg !3438
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill21, metadata !3441, metadata !DIExpression()), !dbg !3445
  store i8* %val, i8** %data.dbg.spill22, align 8, !dbg !3445
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill22, metadata !3447, metadata !DIExpression()), !dbg !3458
  store i64 %_4, i64* %len.dbg.spill23, align 8, !dbg !3438
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill23, metadata !3457, metadata !DIExpression()), !dbg !3458
  store i8* %val, i8** %self.dbg.spill24, align 8, !dbg !3458
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !3460, metadata !DIExpression()), !dbg !3467
  %data_address = bitcast i8* %val to {}*, !dbg !3467
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3467
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3469, metadata !DIExpression()), !dbg !3476
  store i64 %_4, i64* %metadata.dbg.spill, align 8, !dbg !3458
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !3475, metadata !DIExpression()), !dbg !3476
  %44 = bitcast { i8*, i64 }* %_94 to {}**, !dbg !3476
  store {}* %data_address, {}** %44, align 8, !dbg !3476
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !3476
  store i64 %_4, i64* %45, align 8, !dbg !3476
  %46 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { i8*, i64 }*, !dbg !3476
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 0, !dbg !3476
  %48 = load i8*, i8** %47, align 8, !dbg !3476
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_94, i32 0, i32 1, !dbg !3476
  %50 = load i64, i64* %49, align 8, !dbg !3476
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 0, !dbg !3476
  store i8* %48, i8** %51, align 8, !dbg !3476
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %46, i32 0, i32 1, !dbg !3476
  store i64 %50, i64* %52, align 8, !dbg !3476
  %53 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_93 to { [0 x i8]*, i64 }*, !dbg !3476
  %54 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 0, !dbg !3476
  %ptr.0 = load [0 x i8]*, [0 x i8]** %54, align 8, !dbg !3476
  %55 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %53, i32 0, i32 1, !dbg !3476
  %ptr.1 = load i64, i64* %55, align 8, !dbg !3476
  %56 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 0, !dbg !3476
  store [0 x i8]* %ptr.0, [0 x i8]** %56, align 8, !dbg !3476
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill25, i32 0, i32 1, !dbg !3476
  store i64 %ptr.1, i64* %57, align 8, !dbg !3476
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill25, metadata !3478, metadata !DIExpression()), !dbg !3484
  %58 = bitcast { i8*, i64 }* %_24 to { [0 x i8]*, i64 }*, !dbg !3484
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 0, !dbg !3484
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !3484
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %58, i32 0, i32 1, !dbg !3484
  store i64 %ptr.1, i64* %60, align 8, !dbg !3484
  %61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 0, !dbg !3486
  %62 = load i8*, i8** %61, align 8, !dbg !3486, !nonnull !23, !noundef !23
  %63 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_24, i32 0, i32 1, !dbg !3486
  %64 = load i64, i64* %63, align 8, !dbg !3486
  %65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3486
  store i8* %62, i8** %65, align 8, !dbg !3486
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3486
  store i64 %64, i64* %66, align 8, !dbg !3486
  br label %bb11, !dbg !3487

bb10:                                             ; preds = %bb7
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h05a17270e6d59439E"(), !dbg !3356
  br label %bb23, !dbg !3356

bb23:                                             ; preds = %bb10
  %67 = bitcast { i8*, i64 }* %3 to {}**, !dbg !3356
  store {}* null, {}** %67, align 8, !dbg !3356
  br label %bb12, !dbg !3488

bb12:                                             ; preds = %bb11, %bb23
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3488
  %69 = load i8*, i8** %68, align 8, !dbg !3488
  %70 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3488
  %71 = load i64, i64* %70, align 8, !dbg !3488
  %72 = insertvalue { i8*, i64 } undef, i8* %69, 0, !dbg !3488
  %73 = insertvalue { i8*, i64 } %72, i64 %71, 1, !dbg !3488
  ret { i8*, i64 } %73, !dbg !3488

bb11:                                             ; preds = %bb13, %bb8
  br label %bb12, !dbg !3488

bb13:                                             ; preds = %bb2
  store i8* %ptr, i8** %data, align 8, !dbg !3387
  %self30 = load i8*, i8** %data, align 8, !dbg !3214, !nonnull !23, !noundef !23
  store i8* %self30, i8** %self.dbg.spill31, align 8, !dbg !3214
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill31, metadata !3489, metadata !DIExpression()), !dbg !3493
  store i8* %self30, i8** %data.dbg.spill32, align 8, !dbg !3493
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill32, metadata !3495, metadata !DIExpression()), !dbg !3500
  store i8* %self30, i8** %self.dbg.spill33, align 8, !dbg !3500
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !3502, metadata !DIExpression()), !dbg !3506
  %data_address34 = bitcast i8* %self30 to {}*, !dbg !3506
  store {}* %data_address34, {}** %data_address.dbg.spill35, align 8, !dbg !3506
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill35, metadata !3508, metadata !DIExpression()), !dbg !3513
  %74 = bitcast { i8*, i64 }* %_51 to {}**, !dbg !3513
  store {}* %data_address34, {}** %74, align 8, !dbg !3513
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !3513
  store i64 0, i64* %75, align 8, !dbg !3513
  %76 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { i8*, i64 }*, !dbg !3513
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 0, !dbg !3513
  %78 = load i8*, i8** %77, align 8, !dbg !3513
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_51, i32 0, i32 1, !dbg !3513
  %80 = load i64, i64* %79, align 8, !dbg !3513
  %81 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 0, !dbg !3513
  store i8* %78, i8** %81, align 8, !dbg !3513
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %76, i32 0, i32 1, !dbg !3513
  store i64 %80, i64* %82, align 8, !dbg !3513
  %83 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_50 to { [0 x i8]*, i64 }*, !dbg !3513
  %84 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 0, !dbg !3513
  %ptr.036 = load [0 x i8]*, [0 x i8]** %84, align 8, !dbg !3513
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %83, i32 0, i32 1, !dbg !3513
  %ptr.137 = load i64, i64* %85, align 8, !dbg !3513
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 0, !dbg !3513
  store [0 x i8]* %ptr.036, [0 x i8]** %86, align 8, !dbg !3513
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill38, i32 0, i32 1, !dbg !3513
  store i64 %ptr.137, i64* %87, align 8, !dbg !3513
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill38, metadata !3515, metadata !DIExpression()), !dbg !3519
  %88 = bitcast { i8*, i64 }* %_6 to { [0 x i8]*, i64 }*, !dbg !3519
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 0, !dbg !3519
  store [0 x i8]* %ptr.036, [0 x i8]** %89, align 8, !dbg !3519
  %90 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %88, i32 0, i32 1, !dbg !3519
  store i64 %ptr.137, i64* %90, align 8, !dbg !3519
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 0, !dbg !3521
  %92 = load i8*, i8** %91, align 8, !dbg !3521, !nonnull !23, !noundef !23
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !3521
  %94 = load i64, i64* %93, align 8, !dbg !3521
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3521
  store i8* %92, i8** %95, align 8, !dbg !3521
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3521
  store i64 %94, i64* %96, align 8, !dbg !3521
  br label %bb11, !dbg !3522
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h08d1759a819f42feE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !3523 {
start:
  %count.dbg.spill54 = alloca i64, align 8
  %dst.dbg.spill53 = alloca i8*, align 8
  %ptr.dbg.spill52 = alloca i8*, align 8
  %self.dbg.spill50 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill49 = alloca { i8*, i64 }, align 8
  %self.dbg.spill48 = alloca { i8*, i64 }, align 8
  %self.dbg.spill47 = alloca { i8*, i64 }, align 8
  %src.dbg.spill = alloca i8*, align 8
  %self.dbg.spill46 = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill45 = alloca { i8*, i64 }, align 8
  %v.dbg.spill44 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill43 = alloca i64, align 8
  %ptr.dbg.spill42 = alloca { [0 x i8]*, i64 }, align 8
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill41 = alloca i8*, align 8
  %len.dbg.spill40 = alloca i64, align 8
  %data.dbg.spill39 = alloca i8*, align 8
  %self.dbg.spill38 = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  %count.dbg.spill37 = alloca i64, align 8
  %dst.dbg.spill = alloca i8*, align 8
  %count.dbg.spill36 = alloca i64, align 8
  %self.dbg.spill35 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill34 = alloca i64, align 8
  %self.dbg.spill33 = alloca i8*, align 8
  %count.dbg.spill = alloca i64, align 8
  %self.dbg.spill32 = alloca i8*, align 8
  %ptr.dbg.spill31 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %v.dbg.spill30 = alloca i8*, align 8
  %v.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %n.dbg.spill28 = alloca i64, align 8
  %self.dbg.spill27 = alloca { i64, i64 }*, align 8
  %self.dbg.spill26 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill25 = alloca i64, align 8
  %ptr.dbg.spill24 = alloca i8*, align 8
  %self.dbg.spill23 = alloca i8*, align 8
  %self.dbg.spill22 = alloca { i64, i64 }*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %old_size.dbg.spill = alloca i64, align 8
  %n.dbg.spill20 = alloca i64, align 8
  %self.dbg.spill19 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill18 = alloca { i64, i64 }*, align 8
  %self.dbg.spill17 = alloca { i64, i64 }*, align 8
  %e.dbg.spill15 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill14 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill13 = alloca %"core::alloc::AllocError", align 1
  %e.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %residual.dbg.spill6 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill5 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill3 = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err", align 1
  %err.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %runtime = alloca %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]", align 8
  %self16 = alloca i8*, align 8
  %_135 = alloca { i8*, i64 }, align 8
  %_134 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %self12 = alloca i64, align 8
  %self11 = alloca i64, align 8
  %self10 = alloca i64, align 8
  %self9 = alloca i64, align 8
  %self8 = alloca i64, align 8
  %self7 = alloca i64, align 8
  %self4 = alloca { i8*, i64 }, align 8
  %_55 = alloca { i8*, i64 }, align 8
  %_50 = alloca { i8*, i64 }, align 8
  %self2 = alloca i8*, align 8
  %self1 = alloca i8*, align 8
  %_33 = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !3527, metadata !DIExpression()), !dbg !3553
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !3528, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !3529, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !3530, metadata !DIExpression()), !dbg !3556
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !3531, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !3558, metadata !DIExpression()), !dbg !3565
  call void @llvm.dbg.declare(metadata i8** %self1, metadata !3567, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.declare(metadata i8** %self2, metadata !3579, metadata !DIExpression()), !dbg !3587
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %err.dbg.spill, metadata !3583, metadata !DIExpression()), !dbg !3587
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !3541, metadata !DIExpression()), !dbg !3588
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill3, metadata !3589, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self4, metadata !3598, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill5, metadata !3549, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::convert::Infallible, core::alloc::AllocError>::Err"* %residual.dbg.spill6, metadata !3628, metadata !DIExpression()), !dbg !3635
  call void @llvm.dbg.declare(metadata i64* %self7, metadata !3637, metadata !DIExpression()), !dbg !3641
  call void @llvm.dbg.declare(metadata i64* %self8, metadata !3648, metadata !DIExpression()), !dbg !3652
  call void @llvm.dbg.declare(metadata i64* %self9, metadata !3653, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.declare(metadata i64* %self10, metadata !3664, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.declare(metadata i64* %self11, metadata !3669, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.declare(metadata i64* %self12, metadata !3680, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill, metadata !3574, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill13, metadata !3593, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill14, metadata !3622, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %e.dbg.spill15, metadata !3632, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.declare(metadata i8** %self16, metadata !3689, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.declare(metadata %"[closure@core::intrinsics::copy_nonoverlapping<u8>::{closure#0}]"* %runtime, metadata !3702, metadata !DIExpression()), !dbg !3722
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill17, align 8, !dbg !3724
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill17, metadata !3725, metadata !DIExpression()), !dbg !3729
  %11 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !3729
  %_8 = load i64, i64* %11, align 8, !dbg !3729
  %12 = icmp eq i64 %_8, 0, !dbg !3730
  br i1 %12, label %bb1, label %bb3, !dbg !3730

bb1:                                              ; preds = %start
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3731
  %_11.0 = load i64, i64* %13, align 8, !dbg !3731
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3731
  %_11.1 = load i64, i64* %14, align 8, !dbg !3731, !range !1671, !noundef !23
; call alloc::alloc::Global::alloc_impl
  %15 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h949f8c49fad503faE(%"alloc::alloc::Global"* align 1 %self, i64 %_11.0, i64 %_11.1, i1 zeroext %zeroed), !dbg !3732
  store { i8*, i64 } %15, { i8*, i64 }* %5, align 8, !dbg !3732
  br label %bb2, !dbg !3732

bb3:                                              ; preds = %start
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill18, align 8, !dbg !3647
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill18, metadata !3645, metadata !DIExpression()), !dbg !3733
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3733
  %17 = load i64, i64* %16, align 8, !dbg !3733, !range !1671, !noundef !23
  store i64 %17, i64* %self8, align 8, !dbg !3733
  %_78 = load i64, i64* %self8, align 8, !dbg !3652, !range !1671, !noundef !23
  store i64 %_78, i64* %n.dbg.spill, align 8, !dbg !3652
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !3734, metadata !DIExpression()), !dbg !3741
  store i64 %_78, i64* %self7, align 8, !dbg !3741
  %_16 = load i64, i64* %self7, align 8, !dbg !3641
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill19, align 8, !dbg !3663
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill19, metadata !3661, metadata !DIExpression()), !dbg !3743
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3743
  %19 = load i64, i64* %18, align 8, !dbg !3743, !range !1671, !noundef !23
  store i64 %19, i64* %self10, align 8, !dbg !3743
  %_84 = load i64, i64* %self10, align 8, !dbg !3668, !range !1671, !noundef !23
  store i64 %_84, i64* %n.dbg.spill20, align 8, !dbg !3668
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill20, metadata !3744, metadata !DIExpression()), !dbg !3751
  store i64 %_84, i64* %self9, align 8, !dbg !3751
  %_18 = load i64, i64* %self9, align 8, !dbg !3657
  %_15 = icmp eq i64 %_16, %_18, !dbg !3647
  br i1 %_15, label %bb4, label %bb5, !dbg !3647

bb5:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill43, align 8, !dbg !3753
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill43, metadata !3545, metadata !DIExpression()), !dbg !3754
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !3755
  %_58.0 = load i64, i64* %20, align 8, !dbg !3755
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !3755
  %_58.1 = load i64, i64* %21, align 8, !dbg !3755, !range !1671, !noundef !23
; call alloc::alloc::Global::alloc_impl
  %22 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h949f8c49fad503faE(%"alloc::alloc::Global"* align 1 %self, i64 %_58.0, i64 %_58.1, i1 zeroext %zeroed), !dbg !3626
  store { i8*, i64 } %22, { i8*, i64 }* %self4, align 8, !dbg !3626
  br label %bb14, !dbg !3626

bb4:                                              ; preds = %bb3
  store i64 %_8, i64* %old_size.dbg.spill, align 8, !dbg !3756
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill, metadata !3532, metadata !DIExpression()), !dbg !3757
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !3758
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !3759, metadata !DIExpression()), !dbg !3763
  %23 = bitcast { i64, i64 }* %new_layout to i64*, !dbg !3763
  %new_size = load i64, i64* %23, align 8, !dbg !3763
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !3763
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !3535, metadata !DIExpression()), !dbg !3764
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill22, align 8, !dbg !3765
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill22, metadata !3766, metadata !DIExpression()), !dbg !3770
  %24 = bitcast { i64, i64 }* %old_layout to i64*, !dbg !3770
  %_25 = load i64, i64* %24, align 8, !dbg !3770
  %_23 = icmp uge i64 %new_size, %_25, !dbg !3771
  call void @llvm.assume(i1 %_23), !dbg !3772
  br label %bb6, !dbg !3772

bb6:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill23, align 8, !dbg !3773
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill23, metadata !3774, metadata !DIExpression()), !dbg !3778
  store i8* %ptr, i8** %ptr.dbg.spill24, align 8, !dbg !3778
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill24, metadata !3563, metadata !DIExpression()), !dbg !3565
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3779
  %26 = load i64, i64* %25, align 8, !dbg !3779
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3779
  %28 = load i64, i64* %27, align 8, !dbg !3779, !range !1671, !noundef !23
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !3779
  store i64 %26, i64* %29, align 8, !dbg !3779
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3779
  store i64 %28, i64* %30, align 8, !dbg !3779
  store i64 %new_size, i64* %new_size.dbg.spill25, align 8, !dbg !3780
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill25, metadata !3564, metadata !DIExpression()), !dbg !3565
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill26, align 8, !dbg !3565
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill26, metadata !3781, metadata !DIExpression()), !dbg !3785
  %31 = bitcast { i64, i64 }* %layout to i64*, !dbg !3785
  %_89 = load i64, i64* %31, align 8, !dbg !3785
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill27, align 8, !dbg !3565
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill27, metadata !3677, metadata !DIExpression()), !dbg !3787
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !3787
  %33 = load i64, i64* %32, align 8, !dbg !3787, !range !1671, !noundef !23
  store i64 %33, i64* %self12, align 8, !dbg !3787
  %_97 = load i64, i64* %self12, align 8, !dbg !3684, !range !1671, !noundef !23
  store i64 %_97, i64* %n.dbg.spill28, align 8, !dbg !3684
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill28, metadata !3788, metadata !DIExpression()), !dbg !3795
  store i64 %_97, i64* %self11, align 8, !dbg !3795
  %_91 = load i64, i64* %self11, align 8, !dbg !3673
  %raw_ptr = call i8* @__rust_realloc(i8* %ptr, i64 %_89, i64 %_91, i64 %new_size) #19, !dbg !3565
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !3565
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !3537, metadata !DIExpression()), !dbg !3797
  br label %bb23, !dbg !3565

bb23:                                             ; preds = %bb6
; call core::ptr::non_null::NonNull<T>::new
  %34 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hd3bacb1f2d9d38d1E"(i8* %raw_ptr), !dbg !3578
  store i8* %34, i8** %self2, align 8, !dbg !3578
  br label %bb7, !dbg !3578

bb7:                                              ; preds = %bb23
  %35 = bitcast i8** %self2 to {}**, !dbg !3587
  %36 = load {}*, {}** %35, align 8, !dbg !3587
  %37 = icmp eq {}* %36, null, !dbg !3587
  %_100 = select i1 %37, i64 0, i64 1, !dbg !3587
  switch i64 %_100, label %bb25 [
    i64 0, label %bb24
    i64 1, label %bb26
  ], !dbg !3587

bb25:                                             ; preds = %bb7
  unreachable, !dbg !3587

bb24:                                             ; preds = %bb7
  %38 = bitcast i8** %self1 to {}**, !dbg !3587
  store {}* null, {}** %38, align 8, !dbg !3587
  br label %bb27, !dbg !3587

bb26:                                             ; preds = %bb7
  %v = load i8*, i8** %self2, align 8, !dbg !3587, !nonnull !23, !noundef !23
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !3587
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !3584, metadata !DIExpression()), !dbg !3798
  store i8* %v, i8** %self1, align 8, !dbg !3798
  br label %bb27, !dbg !3587

bb27:                                             ; preds = %bb24, %bb26
  %39 = bitcast i8** %self1 to {}**, !dbg !3577
  %40 = load {}*, {}** %39, align 8, !dbg !3577
  %41 = icmp eq {}* %40, null, !dbg !3577
  %_103 = select i1 %41, i64 1, i64 0, !dbg !3577
  switch i64 %_103, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !3577

bb29:                                             ; preds = %bb27
  unreachable, !dbg !3577

bb30:                                             ; preds = %bb27
  %v29 = load i8*, i8** %self1, align 8, !dbg !3577, !nonnull !23, !noundef !23
  store i8* %v29, i8** %v.dbg.spill30, align 8, !dbg !3577
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill30, metadata !3571, metadata !DIExpression()), !dbg !3799
  store i8* %v29, i8** %_33, align 8, !dbg !3799
  br label %bb8, !dbg !3577

bb28:                                             ; preds = %bb27
  %42 = bitcast i8** %_33 to {}**, !dbg !3685
  store {}* null, {}** %42, align 8, !dbg !3685
  br label %bb8, !dbg !3577

bb8:                                              ; preds = %bb30, %bb28
  %43 = bitcast i8** %_33 to {}**, !dbg !3578
  %44 = load {}*, {}** %43, align 8, !dbg !3578
  %45 = icmp eq {}* %44, null, !dbg !3578
  %_38 = select i1 %45, i64 1, i64 0, !dbg !3578
  switch i64 %_38, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !3578

bb10:                                             ; preds = %bb8
  unreachable, !dbg !3578

bb9:                                              ; preds = %bb8
  %val = load i8*, i8** %_33, align 8, !dbg !3578, !nonnull !23, !noundef !23
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !3578
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !3543, metadata !DIExpression()), !dbg !3800
  store i8* %val, i8** %ptr.dbg.spill31, align 8, !dbg !3800
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill31, metadata !3539, metadata !DIExpression()), !dbg !3801
  br i1 %zeroed, label %bb12, label %bb13, !dbg !3802

bb11:                                             ; preds = %bb8
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h05a17270e6d59439E"(), !dbg !3686
  br label %bb31, !dbg !3686

bb31:                                             ; preds = %bb11
  %46 = bitcast { i8*, i64 }* %5 to {}**, !dbg !3686
  store {}* null, {}** %46, align 8, !dbg !3686
  br label %bb21, !dbg !3803

bb21:                                             ; preds = %bb37, %bb31
  br label %bb22, !dbg !3806

bb13:                                             ; preds = %bb33, %bb9
  store i8* %val, i8** %data.dbg.spill, align 8, !dbg !3807
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !3808, metadata !DIExpression()), !dbg !3813
  store i64 %new_size, i64* %len.dbg.spill, align 8, !dbg !3815
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !3812, metadata !DIExpression()), !dbg !3813
  store i8* %val, i8** %self.dbg.spill38, align 8, !dbg !3813
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill38, metadata !3816, metadata !DIExpression()), !dbg !3820
  store i8* %val, i8** %data.dbg.spill39, align 8, !dbg !3820
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill39, metadata !3822, metadata !DIExpression()), !dbg !3827
  store i64 %new_size, i64* %len.dbg.spill40, align 8, !dbg !3813
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill40, metadata !3826, metadata !DIExpression()), !dbg !3827
  store i8* %val, i8** %self.dbg.spill41, align 8, !dbg !3827
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill41, metadata !3829, metadata !DIExpression()), !dbg !3833
  %data_address = bitcast i8* %val to {}*, !dbg !3833
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !3833
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !3835, metadata !DIExpression()), !dbg !3840
  store i64 %new_size, i64* %metadata.dbg.spill, align 8, !dbg !3827
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !3839, metadata !DIExpression()), !dbg !3840
  %47 = bitcast { i8*, i64 }* %_135 to {}**, !dbg !3840
  store {}* %data_address, {}** %47, align 8, !dbg !3840
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !3840
  store i64 %new_size, i64* %48, align 8, !dbg !3840
  %49 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { i8*, i64 }*, !dbg !3840
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 0, !dbg !3840
  %51 = load i8*, i8** %50, align 8, !dbg !3840
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_135, i32 0, i32 1, !dbg !3840
  %53 = load i64, i64* %52, align 8, !dbg !3840
  %54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 0, !dbg !3840
  store i8* %51, i8** %54, align 8, !dbg !3840
  %55 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %49, i32 0, i32 1, !dbg !3840
  store i64 %53, i64* %55, align 8, !dbg !3840
  %56 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_134 to { [0 x i8]*, i64 }*, !dbg !3840
  %57 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 0, !dbg !3840
  %ptr.0 = load [0 x i8]*, [0 x i8]** %57, align 8, !dbg !3840
  %58 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %56, i32 0, i32 1, !dbg !3840
  %ptr.1 = load i64, i64* %58, align 8, !dbg !3840
  %59 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 0, !dbg !3840
  store [0 x i8]* %ptr.0, [0 x i8]** %59, align 8, !dbg !3840
  %60 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill42, i32 0, i32 1, !dbg !3840
  store i64 %ptr.1, i64* %60, align 8, !dbg !3840
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill42, metadata !3842, metadata !DIExpression()), !dbg !3846
  %61 = bitcast { i8*, i64 }* %_50 to { [0 x i8]*, i64 }*, !dbg !3846
  %62 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 0, !dbg !3846
  store [0 x i8]* %ptr.0, [0 x i8]** %62, align 8, !dbg !3846
  %63 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %61, i32 0, i32 1, !dbg !3846
  store i64 %ptr.1, i64* %63, align 8, !dbg !3846
  %64 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 0, !dbg !3848
  %65 = load i8*, i8** %64, align 8, !dbg !3848, !nonnull !23, !noundef !23
  %66 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_50, i32 0, i32 1, !dbg !3848
  %67 = load i64, i64* %66, align 8, !dbg !3848
  %68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3848
  store i8* %65, i8** %68, align 8, !dbg !3848
  %69 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3848
  store i64 %67, i64* %69, align 8, !dbg !3848
  br label %bb20, !dbg !3849

bb12:                                             ; preds = %bb9
  store i8* %raw_ptr, i8** %self.dbg.spill32, align 8, !dbg !3850
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill32, metadata !3851, metadata !DIExpression()), !dbg !3858
  store i64 %_8, i64* %count.dbg.spill, align 8, !dbg !3859
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !3857, metadata !DIExpression()), !dbg !3858
  store i8* %raw_ptr, i8** %self.dbg.spill33, align 8, !dbg !3858
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill33, metadata !3860, metadata !DIExpression()), !dbg !3867
  store i64 %_8, i64* %count.dbg.spill34, align 8, !dbg !3858
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill34, metadata !3866, metadata !DIExpression()), !dbg !3867
  %70 = getelementptr inbounds i8, i8* %raw_ptr, i64 %_8, !dbg !3867
  store i8* %70, i8** %4, align 8, !dbg !3867
  %_113 = load i8*, i8** %4, align 8, !dbg !3867
  br label %bb32, !dbg !3867

bb32:                                             ; preds = %bb12
  store i8* %_113, i8** %self.dbg.spill35, align 8, !dbg !3867
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill35, metadata !3869, metadata !DIExpression()), !dbg !3877
  %count = sub i64 %new_size, %_8, !dbg !3878
  store i64 %count, i64* %count.dbg.spill36, align 8, !dbg !3878
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill36, metadata !3876, metadata !DIExpression()), !dbg !3877
  store i8* %_113, i8** %dst.dbg.spill, align 8, !dbg !3877
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !3879, metadata !DIExpression()), !dbg !3892
  store i64 %count, i64* %count.dbg.spill37, align 8, !dbg !3877
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill37, metadata !3884, metadata !DIExpression()), !dbg !3892
  %71 = mul i64 1, %count, !dbg !3892
  call void @llvm.memset.p0i8.i64(i8* align 1 %_113, i8 0, i64 %71, i1 false), !dbg !3892
  br label %bb33, !dbg !3892

bb33:                                             ; preds = %bb32
  br label %bb13, !dbg !3894

bb20:                                             ; preds = %bb2, %bb19, %bb13
  br label %bb22, !dbg !3806

bb14:                                             ; preds = %bb5
  %72 = bitcast { i8*, i64 }* %self4 to {}**, !dbg !3625
  %73 = load {}*, {}** %72, align 8, !dbg !3625
  %74 = icmp eq {}* %73, null, !dbg !3625
  %_142 = select i1 %74, i64 1, i64 0, !dbg !3625
  switch i64 %_142, label %bb35 [
    i64 0, label %bb36
    i64 1, label %bb34
  ], !dbg !3625

bb35:                                             ; preds = %bb14
  unreachable, !dbg !3625

bb36:                                             ; preds = %bb14
  %75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 0, !dbg !3625
  %v.0 = load i8*, i8** %75, align 8, !dbg !3625, !nonnull !23, !noundef !23
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self4, i32 0, i32 1, !dbg !3625
  %v.1 = load i64, i64* %76, align 8, !dbg !3625
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 0, !dbg !3625
  store i8* %v.0, i8** %77, align 8, !dbg !3625
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill44, i32 0, i32 1, !dbg !3625
  store i64 %v.1, i64* %78, align 8, !dbg !3625
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill44, metadata !3619, metadata !DIExpression()), !dbg !3895
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !3895
  store i8* %v.0, i8** %79, align 8, !dbg !3895
  %80 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !3895
  store i64 %v.1, i64* %80, align 8, !dbg !3895
  br label %bb15, !dbg !3625

bb34:                                             ; preds = %bb14
  %81 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !3687
  store {}* null, {}** %81, align 8, !dbg !3687
  br label %bb15, !dbg !3625

bb15:                                             ; preds = %bb36, %bb34
  %82 = bitcast { i8*, i64 }* %_55 to {}**, !dbg !3626
  %83 = load {}*, {}** %82, align 8, !dbg !3626
  %84 = icmp eq {}* %83, null, !dbg !3626
  %_60 = select i1 %84, i64 1, i64 0, !dbg !3626
  switch i64 %_60, label %bb17 [
    i64 0, label %bb16
    i64 1, label %bb18
  ], !dbg !3626

bb17:                                             ; preds = %bb15
  unreachable, !dbg !3626

bb16:                                             ; preds = %bb15
  %85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 0, !dbg !3626
  %val.0 = load i8*, i8** %85, align 8, !dbg !3626, !nonnull !23, !noundef !23
  %86 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_55, i32 0, i32 1, !dbg !3626
  %val.1 = load i64, i64* %86, align 8, !dbg !3626
  %87 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 0, !dbg !3626
  store i8* %val.0, i8** %87, align 8, !dbg !3626
  %88 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill45, i32 0, i32 1, !dbg !3626
  store i64 %val.1, i64* %88, align 8, !dbg !3626
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill45, metadata !3551, metadata !DIExpression()), !dbg !3896
  %89 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !3896
  store i8* %val.0, i8** %89, align 8, !dbg !3896
  %90 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !3896
  store i64 %val.1, i64* %90, align 8, !dbg !3896
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !3547, metadata !DIExpression()), !dbg !3897
  store i8* %ptr, i8** %self.dbg.spill46, align 8, !dbg !3898
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill46, metadata !3899, metadata !DIExpression()), !dbg !3903
  store i8* %ptr, i8** %src.dbg.spill, align 8, !dbg !3898
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !3710, metadata !DIExpression()), !dbg !3904
  %91 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 0, !dbg !3701
  store i8* %val.0, i8** %91, align 8, !dbg !3701
  %92 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill47, i32 0, i32 1, !dbg !3701
  store i64 %val.1, i64* %92, align 8, !dbg !3701
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill47, metadata !3699, metadata !DIExpression()), !dbg !3905
  %93 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 0, !dbg !3905
  store i8* %val.0, i8** %93, align 8, !dbg !3905
  %94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill48, i32 0, i32 1, !dbg !3905
  store i64 %val.1, i64* %94, align 8, !dbg !3905
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill48, metadata !3906, metadata !DIExpression()), !dbg !3912
  %95 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 0, !dbg !3912
  store i8* %val.0, i8** %95, align 8, !dbg !3912
  %96 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill49, i32 0, i32 1, !dbg !3912
  store i64 %val.1, i64* %96, align 8, !dbg !3912
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill49, metadata !3913, metadata !DIExpression()), !dbg !3919
  %_155.0 = bitcast i8* %val.0 to [0 x i8]*, !dbg !3919
  %97 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 0, !dbg !3919
  store [0 x i8]* %_155.0, [0 x i8]** %97, align 8, !dbg !3919
  %98 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill50, i32 0, i32 1, !dbg !3919
  store i64 %val.1, i64* %98, align 8, !dbg !3919
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill50, metadata !3921, metadata !DIExpression()), !dbg !3928
  %ptr51 = bitcast [0 x i8]* %_155.0 to i8*, !dbg !3928
  store i8* %ptr51, i8** %ptr.dbg.spill52, align 8, !dbg !3928
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill52, metadata !3929, metadata !DIExpression()), !dbg !3933
  store i8* %ptr51, i8** %self16, align 8, !dbg !3933
  %_160 = load i8*, i8** %self16, align 8, !dbg !3693
  store i8* %_160, i8** %dst.dbg.spill53, align 8, !dbg !3693
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill53, metadata !3712, metadata !DIExpression()), !dbg !3904
  store i64 %_8, i64* %count.dbg.spill54, align 8, !dbg !3935
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill54, metadata !3713, metadata !DIExpression()), !dbg !3904
  %99 = mul i64 %_8, 1, !dbg !3904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %_160, i8* align 1 %ptr, i64 %99, i1 false), !dbg !3904
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !3936
  %_73.0 = load i64, i64* %100, align 8, !dbg !3936
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !3936
  %_73.1 = load i64, i64* %101, align 8, !dbg !3936, !range !1671, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h457dcd0077543f47E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %_73.0, i64 %_73.1), !dbg !3937
  br label %bb19, !dbg !3937

bb18:                                             ; preds = %bb15
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h05a17270e6d59439E"(), !dbg !3688
  br label %bb37, !dbg !3688

bb37:                                             ; preds = %bb18
  %102 = bitcast { i8*, i64 }* %5 to {}**, !dbg !3688
  store {}* null, {}** %102, align 8, !dbg !3688
  br label %bb21, !dbg !3803

bb22:                                             ; preds = %bb20, %bb21
  %103 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3806
  %104 = load i8*, i8** %103, align 8, !dbg !3806
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3806
  %106 = load i64, i64* %105, align 8, !dbg !3806
  %107 = insertvalue { i8*, i64 } undef, i8* %104, 0, !dbg !3806
  %108 = insertvalue { i8*, i64 } %107, i64 %106, 1, !dbg !3806
  ret { i8*, i64 } %108, !dbg !3806

bb19:                                             ; preds = %bb16
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !3938
  store i8* %val.0, i8** %109, align 8, !dbg !3938
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !3938
  store i64 %val.1, i64* %110, align 8, !dbg !3938
  br label %bb20, !dbg !3939

bb2:                                              ; preds = %bb1
  br label %bb20, !dbg !3940
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec11finish_grow17h744e8f62363c8629E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, %"alloc::alloc::Global"* align 1 %alloc) unnamed_addr #1 !dbg !3941 {
start:
  %n.dbg.spill22 = alloca i64, align 8
  %self.dbg.spill21 = alloca { i64, i64 }*, align 8
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %e.dbg.spill20 = alloca { i64, i64 }, align 8
  %residual.dbg.spill17 = alloca { i64, i64 }, align 8
  %e.dbg.spill14 = alloca { i64, i64 }, align 8
  %val.dbg.spill11 = alloca { i64, i64 }, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill10 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill7 = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %self6 = alloca i64, align 8
  %self5 = alloca i64, align 8
  %self4 = alloca i64, align 8
  %self3 = alloca i64, align 8
  %_58 = alloca { i64, i64 }, align 8
  %_52 = alloca { i64, i64 }, align 8
  %_49 = alloca { i64, i64 }, align 8
  %_43 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %residual2 = alloca { i64, i64 }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_13 = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3963, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.declare(metadata %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, metadata !3964, metadata !DIExpression()), !dbg !4016
  store %"alloc::alloc::Global"* %alloc, %"alloc::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %alloc.dbg.spill, metadata !3965, metadata !DIExpression()), !dbg !4017
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !3966, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self, metadata !4019, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !4049, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !4061, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual2, metadata !4091, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !4000, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !4002, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !4006, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !4083, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !4107, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.declare(metadata i64* %self4, metadata !4118, metadata !DIExpression()), !dbg !4122
  call void @llvm.dbg.declare(metadata i64* %self5, metadata !4123, metadata !DIExpression()), !dbg !4127
  call void @llvm.dbg.declare(metadata i64* %self6, metadata !4134, metadata !DIExpression()), !dbg !4138
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h465af87d79c9bb4eE"(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") %self, i64 %new_layout.0, i64 %new_layout.1), !dbg !4048
  br label %bb1, !dbg !4048

bb1:                                              ; preds = %start
  %3 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to i64*, !dbg !4047
  %_45 = load i64, i64* %3, align 8, !dbg !4047, !range !1114, !noundef !23
  switch i64 %_45, label %bb20 [
    i64 0, label %bb21
    i64 1, label %bb19
  ], !dbg !4047

bb20:                                             ; preds = %bb1
  unreachable, !dbg !4047

bb21:                                             ; preds = %bb1
  %4 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4047
  %5 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok"* %4, i32 0, i32 1, !dbg !4047
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !4047
  %v.0 = load i64, i64* %6, align 8, !dbg !4047
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !4047
  %v.1 = load i64, i64* %7, align 8, !dbg !4047, !range !1671, !noundef !23
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 0, !dbg !4047
  store i64 %v.0, i64* %8, align 8, !dbg !4047
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill7, i32 0, i32 1, !dbg !4047
  store i64 %v.1, i64* %9, align 8, !dbg !4047
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill7, metadata !4041, metadata !DIExpression()), !dbg !4139
  %10 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !4139
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %10, i32 0, i32 1, !dbg !4139
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !4139
  store i64 %v.0, i64* %12, align 8, !dbg !4139
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !4139
  store i64 %v.1, i64* %13, align 8, !dbg !4139
  %14 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !4139
  store i64 0, i64* %14, align 8, !dbg !4139
  br label %bb2, !dbg !4047

bb19:                                             ; preds = %bb1
  %15 = bitcast %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>"* %self to %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4047
  %16 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err"* %15, i32 0, i32 1, !dbg !4047
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !4047
  %e.0 = load i64, i64* %17, align 8, !dbg !4047
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !4047
  %e.1 = load i64, i64* %18, align 8, !dbg !4047, !range !299, !noundef !23
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !4047
  store i64 %e.0, i64* %19, align 8, !dbg !4047
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !4047
  store i64 %e.1, i64* %20, align 8, !dbg !4047
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !4044, metadata !DIExpression()), !dbg !4140
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !4140
  store i64 %e.0, i64* %21, align 8, !dbg !4140
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !4140
  store i64 %e.1, i64* %22, align 8, !dbg !4140
  %23 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !4140
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %23, i32 0, i32 1, !dbg !4140
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 0, !dbg !4140
  %26 = load i64, i64* %25, align 8, !dbg !4140
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_49, i32 0, i32 1, !dbg !4140
  %28 = load i64, i64* %27, align 8, !dbg !4140, !range !299, !noundef !23
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !4140
  store i64 %26, i64* %29, align 8, !dbg !4140
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !4140
  store i64 %28, i64* %30, align 8, !dbg !4140
  %31 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !4140
  store i64 1, i64* %31, align 8, !dbg !4140
  br label %bb2, !dbg !4047

bb2:                                              ; preds = %bb21, %bb19
  %32 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to i64*, !dbg !4048
  %_9 = load i64, i64* %32, align 8, !dbg !4048, !range !1114, !noundef !23
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !4048

bb4:                                              ; preds = %bb2
  unreachable, !dbg !4048

bb3:                                              ; preds = %bb2
  %33 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"*, !dbg !4048
  %34 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue"* %33, i32 0, i32 1, !dbg !4048
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !4048
  %val.0 = load i64, i64* %35, align 8, !dbg !4048
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !4048
  %val.1 = load i64, i64* %36, align 8, !dbg !4048, !range !1671, !noundef !23
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 0, !dbg !4048
  store i64 %val.0, i64* %37, align 8, !dbg !4048
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill11, i32 0, i32 1, !dbg !4048
  store i64 %val.1, i64* %38, align 8, !dbg !4048
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill11, metadata !3983, metadata !DIExpression()), !dbg !4141
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !4141
  store i64 %val.0, i64* %39, align 8, !dbg !4141
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !4141
  store i64 %val.1, i64* %40, align 8, !dbg !4141
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4142
  store i64 -9223372036854775807, i64* %41, align 8, !dbg !4142
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4089
  %43 = load i64, i64* %42, align 8, !dbg !4089, !range !2461, !noundef !23
  %44 = sub i64 %43, -9223372036854775807, !dbg !4089
  %45 = icmp eq i64 %44, 0, !dbg !4089
  %_55 = select i1 %45, i64 0, i64 1, !dbg !4089
  switch i64 %_55, label %bb23 [
    i64 0, label %bb24
    i64 1, label %bb22
  ], !dbg !4089

bb5:                                              ; preds = %bb2
  %46 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>"* %_5 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"*, !dbg !4148
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break"* %46, i32 0, i32 1, !dbg !4148
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 0, !dbg !4148
  %residual.0 = load i64, i64* %48, align 8, !dbg !4148
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %47, i32 0, i32 1, !dbg !4148
  %residual.1 = load i64, i64* %49, align 8, !dbg !4148, !range !299, !noundef !23
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !4148
  store i64 %residual.0, i64* %50, align 8, !dbg !4148
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !4148
  store i64 %residual.1, i64* %51, align 8, !dbg !4148
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !3968, metadata !DIExpression()), !dbg !4149
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4149
  store i64 %residual.0, i64* %52, align 8, !dbg !4149
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4149
  store i64 %residual.1, i64* %53, align 8, !dbg !4149
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4059
  %e.08 = load i64, i64* %54, align 8, !dbg !4059
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4059
  %e.19 = load i64, i64* %55, align 8, !dbg !4059, !range !299, !noundef !23
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 0, !dbg !4059
  store i64 %e.08, i64* %56, align 8, !dbg !4059
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill10, i32 0, i32 1, !dbg !4059
  store i64 %e.19, i64* %57, align 8, !dbg !4059
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill10, metadata !4055, metadata !DIExpression()), !dbg !4150
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !4150
  store i64 %e.08, i64* %58, align 8, !dbg !4150
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !4150
  store i64 %e.19, i64* %59, align 8, !dbg !4150
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !4151, metadata !DIExpression()), !dbg !4155
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !4155
  store i64 %e.08, i64* %60, align 8, !dbg !4155
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !4155
  store i64 %e.19, i64* %61, align 8, !dbg !4155
  %62 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !4150
  %63 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %62, i32 0, i32 1, !dbg !4150
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 0, !dbg !4150
  %65 = load i64, i64* %64, align 8, !dbg !4150
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_52, i32 0, i32 1, !dbg !4150
  %67 = load i64, i64* %66, align 8, !dbg !4150, !range !299, !noundef !23
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 0, !dbg !4150
  store i64 %65, i64* %68, align 8, !dbg !4150
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %63, i32 0, i32 1, !dbg !4150
  store i64 %67, i64* %69, align 8, !dbg !4150
  %70 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !4150
  store i64 1, i64* %70, align 8, !dbg !4150
  br label %bb17, !dbg !4157

bb17:                                             ; preds = %bb25, %bb5
  br label %bb18, !dbg !4159

bb23:                                             ; preds = %bb3
  unreachable, !dbg !4089

bb24:                                             ; preds = %bb3
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !4106
  store i64 -9223372036854775807, i64* %71, align 8, !dbg !4106
  br label %bb6, !dbg !4089

bb22:                                             ; preds = %bb3
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !4089
  %e.012 = load i64, i64* %72, align 8, !dbg !4089
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4089
  %e.113 = load i64, i64* %73, align 8, !dbg !4089, !range !299, !noundef !23
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 0, !dbg !4089
  store i64 %e.012, i64* %74, align 8, !dbg !4089
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill14, i32 0, i32 1, !dbg !4089
  store i64 %e.113, i64* %75, align 8, !dbg !4089
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill14, metadata !4086, metadata !DIExpression()), !dbg !4160
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !4160
  store i64 %e.012, i64* %76, align 8, !dbg !4160
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !4160
  store i64 %e.113, i64* %77, align 8, !dbg !4160
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 0, !dbg !4160
  %79 = load i64, i64* %78, align 8, !dbg !4160
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_58, i32 0, i32 1, !dbg !4160
  %81 = load i64, i64* %80, align 8, !dbg !4160, !range !299, !noundef !23
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !4160
  store i64 %79, i64* %82, align 8, !dbg !4160
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !4160
  store i64 %81, i64* %83, align 8, !dbg !4160
  br label %bb6, !dbg !4089

bb6:                                              ; preds = %bb24, %bb22
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !4090
  %85 = load i64, i64* %84, align 8, !dbg !4090, !range !2461, !noundef !23
  %86 = sub i64 %85, -9223372036854775807, !dbg !4090
  %87 = icmp eq i64 %86, 0, !dbg !4090
  %_17 = select i1 %87, i64 0, i64 1, !dbg !4090
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !4090

bb8:                                              ; preds = %bb6
  unreachable, !dbg !4090

bb7:                                              ; preds = %bb6
  %88 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory, i32 0, i32 1, !dbg !4161
  %89 = load i64, i64* %88, align 8, !dbg !4161, !range !299, !noundef !23
  %90 = icmp eq i64 %89, 0, !dbg !4161
  %_22 = select i1 %90, i64 0, i64 1, !dbg !4161
  %91 = icmp eq i64 %_22, 1, !dbg !4161
  br i1 %91, label %bb11, label %bb10, !dbg !4161

bb9:                                              ; preds = %bb6
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !4162
  %residual.015 = load i64, i64* %92, align 8, !dbg !4162
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !4162
  %residual.116 = load i64, i64* %93, align 8, !dbg !4162, !range !299, !noundef !23
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 0, !dbg !4162
  store i64 %residual.015, i64* %94, align 8, !dbg !4162
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill17, i32 0, i32 1, !dbg !4162
  store i64 %residual.116, i64* %95, align 8, !dbg !4162
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill17, metadata !3985, metadata !DIExpression()), !dbg !4163
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !4163
  store i64 %residual.015, i64* %96, align 8, !dbg !4163
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !4163
  store i64 %residual.116, i64* %97, align 8, !dbg !4163
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 0, !dbg !4101
  %e.018 = load i64, i64* %98, align 8, !dbg !4101
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual2, i32 0, i32 1, !dbg !4101
  %e.119 = load i64, i64* %99, align 8, !dbg !4101, !range !299, !noundef !23
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 0, !dbg !4101
  store i64 %e.018, i64* %100, align 8, !dbg !4101
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill20, i32 0, i32 1, !dbg !4101
  store i64 %e.119, i64* %101, align 8, !dbg !4101
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill20, metadata !4097, metadata !DIExpression()), !dbg !4164
; call <T as core::convert::From<T>>::from
  %102 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3a535f962c3cf431E"(i64 %e.018, i64 %e.119), !dbg !4164
  %_61.0 = extractvalue { i64, i64 } %102, 0, !dbg !4164
  %_61.1 = extractvalue { i64, i64 } %102, 1, !dbg !4164
  br label %bb25, !dbg !4164

bb25:                                             ; preds = %bb9
  %103 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !4164
  %104 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %103, i32 0, i32 1, !dbg !4164
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 0, !dbg !4164
  store i64 %_61.0, i64* %105, align 8, !dbg !4164
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %104, i32 0, i32 1, !dbg !4164
  store i64 %_61.1, i64* %106, align 8, !dbg !4164
  %107 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %0 to i64*, !dbg !4164
  store i64 1, i64* %107, align 8, !dbg !4164
  br label %bb17, !dbg !4165

bb18:                                             ; preds = %bb16, %bb17
  ret void, !dbg !4159

bb11:                                             ; preds = %bb7
  %108 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !4167
  %109 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %108 to { i8*, { i64, i64 } }*, !dbg !4167
  %110 = bitcast { i8*, { i64, i64 } }* %109 to i8**, !dbg !4167
  %ptr = load i8*, i8** %110, align 8, !dbg !4167, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !4167
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4004, metadata !DIExpression()), !dbg !4167
  %111 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %current_memory to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !4105
  %112 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %111 to { i8*, { i64, i64 } }*, !dbg !4105
  %113 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %112, i32 0, i32 1, !dbg !4105
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 0, !dbg !4105
  %115 = load i64, i64* %114, align 8, !dbg !4105
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %113, i32 0, i32 1, !dbg !4105
  %117 = load i64, i64* %116, align 8, !dbg !4105, !range !1671, !noundef !23
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !4105
  store i64 %115, i64* %118, align 8, !dbg !4105
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !4105
  store i64 %117, i64* %119, align 8, !dbg !4105
  store { i64, i64 }* %old_layout, { i64, i64 }** %self.dbg.spill, align 8, !dbg !4117
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !4115, metadata !DIExpression()), !dbg !4168
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !4168
  %121 = load i64, i64* %120, align 8, !dbg !4168, !range !1671, !noundef !23
  store i64 %121, i64* %self4, align 8, !dbg !4168
  %_74 = load i64, i64* %self4, align 8, !dbg !4122, !range !1671, !noundef !23
  store i64 %_74, i64* %n.dbg.spill, align 8, !dbg !4122
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !4169, metadata !DIExpression()), !dbg !4176
  store i64 %_74, i64* %self3, align 8, !dbg !4176
  %_32 = load i64, i64* %self3, align 8, !dbg !4111
  store { i64, i64 }* %new_layout, { i64, i64 }** %self.dbg.spill21, align 8, !dbg !4133
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill21, metadata !4131, metadata !DIExpression()), !dbg !4178
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !4178
  %123 = load i64, i64* %122, align 8, !dbg !4178, !range !1671, !noundef !23
  store i64 %123, i64* %self6, align 8, !dbg !4178
  %_80 = load i64, i64* %self6, align 8, !dbg !4138, !range !1671, !noundef !23
  store i64 %_80, i64* %n.dbg.spill22, align 8, !dbg !4138
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill22, metadata !4179, metadata !DIExpression()), !dbg !4186
  store i64 %_80, i64* %self5, align 8, !dbg !4186
  %_34 = load i64, i64* %self5, align 8, !dbg !4127
  %_31 = icmp eq i64 %_32, %_34, !dbg !4117
  call void @llvm.assume(i1 %_31), !dbg !4188
  br label %bb12, !dbg !4188

bb10:                                             ; preds = %bb7
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !4189
  %_41.0 = load i64, i64* %124, align 8, !dbg !4189
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !4189
  %_41.1 = load i64, i64* %125, align 8, !dbg !4189, !range !1671, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %126 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hfe7a04e7bb290008E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %_41.0, i64 %_41.1), !dbg !4190
  store { i8*, i64 } %126, { i8*, i64 }* %memory, align 8, !dbg !4190
  br label %bb14, !dbg !4190

bb14:                                             ; preds = %bb10
  br label %bb15, !dbg !4191

bb15:                                             ; preds = %bb13, %bb14
  %127 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !4192
  %_42.0 = load i8*, i8** %127, align 8, !dbg !4192
  %128 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !4192
  %_42.1 = load i64, i64* %128, align 8, !dbg !4192
  %129 = bitcast i64** %_43 to { i64, i64 }**, !dbg !4193
  store { i64, i64 }* %new_layout, { i64, i64 }** %129, align 8, !dbg !4193
  %130 = load i64*, i64** %_43, align 8, !dbg !4192, !nonnull !23, !align !358, !noundef !23
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7199e5644a34f8f6E"(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %0, i8* %_42.0, i64 %_42.1, i64* align 8 %130), !dbg !4192
  br label %bb16, !dbg !4192

bb12:                                             ; preds = %bb11
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !4194
  %_38.0 = load i64, i64* %131, align 8, !dbg !4194
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !4194
  %_38.1 = load i64, i64* %132, align 8, !dbg !4194, !range !1671, !noundef !23
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !4195
  %_39.0 = load i64, i64* %133, align 8, !dbg !4195
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !4195
  %_39.1 = load i64, i64* %134, align 8, !dbg !4195, !range !1671, !noundef !23
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %135 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hf95103a25a543279E"(%"alloc::alloc::Global"* align 1 %alloc, i8* %ptr, i64 %_38.0, i64 %_38.1, i64 %_39.0, i64 %_39.1), !dbg !4196
  store { i8*, i64 } %135, { i8*, i64 }* %memory, align 8, !dbg !4196
  br label %bb13, !dbg !4196

bb13:                                             ; preds = %bb12
  br label %bb15, !dbg !4191

bb16:                                             ; preds = %bb15
  br label %bb18, !dbg !4159
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h68279da78d4449ffE"() unnamed_addr #0 !dbg !4197 {
start:
  %_2.dbg.spill = alloca %"core::alloc::layout::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<alloc::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !4201, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.declare(metadata %"core::alloc::layout::LayoutError"* %_2.dbg.spill, metadata !4202, metadata !DIExpression()), !dbg !4204
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4205
  store i64 0, i64* %1, align 8, !dbg !4205
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4206
  %3 = load i64, i64* %2, align 8, !dbg !4206
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4206
  %5 = load i64, i64* %4, align 8, !dbg !4206, !range !299, !noundef !23
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !4206
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !4206
  ret { i64, i64 } %7, !dbg !4206
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17ha5dda3eec3319225E"(i64* align 8 %0) unnamed_addr #0 !dbg !4207 {
start:
  %_2.dbg.spill = alloca %"core::alloc::AllocError", align 1
  %_3 = alloca { i64, i64 }, align 8
  %_1 = alloca i64*, align 8
  store i64* %0, i64** %_1, align 8
  %1 = bitcast i64** %_1 to { i64, i64 }**
  %2 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !nonnull !23, !align !358, !noundef !23
  call void @llvm.dbg.declare(metadata i64** %_1, metadata !4211, metadata !DIExpression(DW_OP_deref)), !dbg !4213
  call void @llvm.dbg.declare(metadata %"core::alloc::AllocError"* %_2.dbg.spill, metadata !4212, metadata !DIExpression()), !dbg !4214
  %3 = bitcast i64** %_1 to { i64, i64 }**, !dbg !4215
  %_5 = load { i64, i64 }*, { i64, i64 }** %3, align 8, !dbg !4215, !nonnull !23, !align !358, !noundef !23
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !4215
  %_4.0 = load i64, i64* %4, align 8, !dbg !4215
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !4215
  %_4.1 = load i64, i64* %5, align 8, !dbg !4215, !range !1671, !noundef !23
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !4216
  store i64 %_4.0, i64* %6, align 8, !dbg !4216
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !4216
  store i64 %_4.1, i64* %7, align 8, !dbg !4216
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !4216
  %9 = load i64, i64* %8, align 8, !dbg !4216
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !4216
  %11 = load i64, i64* %10, align 8, !dbg !4216, !range !299, !noundef !23
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h37c8579641ace3faE"(i64 %9, i64 %11), !dbg !4216
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !4216
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !4216
  br label %bb1, !dbg !4216

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !4217
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !4217
  ret { i64, i64 } %16, !dbg !4217
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17ha311a99c3665fe3bE(i64 %result.0, i64 %result.1) unnamed_addr #0 !dbg !4218 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %result.dbg.spill = alloca { i64, i64 }, align 8
  %_2 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 0
  store i64 %result.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %result.dbg.spill, i32 0, i32 1
  store i64 %result.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %result.dbg.spill, metadata !4222, metadata !DIExpression()), !dbg !4225
; call core::result::Result<T,E>::map_err
  %2 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb2f0b5181bc162c4E"(i64 %result.0, i64 %result.1), !dbg !4226
  store { i64, i64 } %2, { i64, i64 }* %_2, align 8, !dbg !4226
  br label %bb1, !dbg !4226

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !4226
  %4 = load i64, i64* %3, align 8, !dbg !4226, !range !2461, !noundef !23
  %5 = sub i64 %4, -9223372036854775807, !dbg !4226
  %6 = icmp eq i64 %5, 0, !dbg !4226
  %_6 = select i1 %6, i64 0, i64 1, !dbg !4226
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !4227

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !4226

bb2:                                              ; preds = %bb1
  ret void, !dbg !4228

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !4226
  %8 = load i64, i64* %7, align 8, !dbg !4226, !range !299, !noundef !23
  %9 = icmp eq i64 %8, 0, !dbg !4226
  %_5 = select i1 %9, i64 0, i64 1, !dbg !4226
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !4227

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16, !dbg !4229
  unreachable, !dbg !4229

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 0, !dbg !4230
  %layout.0 = load i64, i64* %10, align 8, !dbg !4230
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_2, i32 0, i32 1, !dbg !4230
  %layout.1 = load i64, i64* %11, align 8, !dbg !4230, !range !1671, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4230
  store i64 %layout.0, i64* %12, align 8, !dbg !4230
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4230
  store i64 %layout.1, i64* %13, align 8, !dbg !4230
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4223, metadata !DIExpression()), !dbg !4231
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #16, !dbg !4232
  unreachable, !dbg !4232
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hfa61a9303ea46fc9E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !4233 {
start:
  %self.dbg.spill2 = alloca { i64, i64 }*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill1 = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %2 = alloca { i64, i64 }, align 8
  %e = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !4238, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !4237, metadata !DIExpression()), !dbg !4240
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill, align 8, !dbg !4241
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !4242, metadata !DIExpression()), !dbg !4249
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill1, align 8, !dbg !4249
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill1, metadata !4250, metadata !DIExpression()), !dbg !4262
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !4262
  %6 = load i64, i64* %5, align 8, !dbg !4262, !range !299, !noundef !23
  %7 = icmp eq i64 %6, 0, !dbg !4262
  %_5 = select i1 %7, i64 0, i64 1, !dbg !4262
  switch i64 %_5, label %bb3 [
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !4262

bb3:                                              ; preds = %start
  unreachable, !dbg !4262

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4262
  store i64 0, i64* %8, align 8, !dbg !4262
  br label %bb1, !dbg !4262

bb2:                                              ; preds = %start
  store { i64, i64 }* %e, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !4262
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !4258, metadata !DIExpression()), !dbg !4264
  store { i64, i64 }* %e, { i64, i64 }** %self.dbg.spill2, align 8, !dbg !4264
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill2, metadata !4265, metadata !DIExpression()), !dbg !4272
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0, !dbg !4272
  %_8.0 = load i64, i64* %9, align 8, !dbg !4272
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1, !dbg !4272
  %_8.1 = load i64, i64* %10, align 8, !dbg !4272, !range !1671, !noundef !23
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !4264
  store i64 %_8.0, i64* %11, align 8, !dbg !4264
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4264
  store i64 %_8.1, i64* %12, align 8, !dbg !4264
  br label %bb1, !dbg !4262

bb1:                                              ; preds = %bb4, %bb2
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !4274
  %14 = load i64, i64* %13, align 8, !dbg !4274
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !4274
  %16 = load i64, i64* %15, align 8, !dbg !4274, !range !299, !noundef !23
  %17 = insertvalue { i64, i64 } undef, i64 %14, 0, !dbg !4274
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1, !dbg !4274
  ret { i64, i64 } %18, !dbg !4274
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define internal { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h24290be57d8c1c16E"(i64 %capacity, i1 zeroext %0) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4275 {
start:
  %ptr.dbg.spill6 = alloca [4 x i32]*, align 8
  %ptr.dbg.spill5 = alloca [4 x i32]*, align 8
  %ptr.dbg.spill4 = alloca [4 x i32]*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i32*, align 8
  %_37 = alloca i8, align 1
  %self = alloca i32*, align 8
  %_31 = alloca i32*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i32*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !4279, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.declare(metadata i8* %init, metadata !4280, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !4281, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !4286, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.declare(metadata i32** %self, metadata !4296, metadata !DIExpression()), !dbg !4300
  store i8 1, i8* %_37, align 1, !dbg !4302
  br i1 false, label %bb1, label %bb2, !dbg !4302

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !4302
  br label %bb3, !dbg !4302

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !4303
  %4 = zext i1 %_6 to i8, !dbg !4302
  store i8 %4, i8* %_4, align 1, !dbg !4302
  br label %bb3, !dbg !4302

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !4302, !range !680, !noundef !23
  %6 = trunc i8 %5 to i1, !dbg !4302
  br i1 %6, label %bb4, label %bb6, !dbg !4302

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h21430b4bd37f8f85E(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !4304

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !4305
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h7c0ceaff3c018d8bE"()
          to label %bb5 unwind label %cleanup, !dbg !4306

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !4307, !range !680, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !4307
  br i1 %10, label %bb25, label %bb24, !dbg !4307

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i32*, i64 } %8, { i32*, i64 }* %2, align 8, !dbg !4306
  br label %bb23, !dbg !4308

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0, !dbg !4309
  %17 = load i32*, i32** %16, align 8, !dbg !4309, !nonnull !23, !noundef !23
  %18 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !4309
  %19 = load i64, i64* %18, align 8, !dbg !4309
  %20 = insertvalue { i32*, i64 } undef, i32* %17, 0, !dbg !4309
  %21 = insertvalue { i32*, i64 } %20, i64 %19, 1, !dbg !4309
  ret { i32*, i64 } %21, !dbg !4309

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !4304
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !4304
  %23 = load i64, i64* %22, align 8, !dbg !4304, !range !299, !noundef !23
  %24 = icmp eq i64 %23, 0, !dbg !4304
  %_12 = select i1 %24, i64 1, i64 0, !dbg !4304
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !4310

bb9:                                              ; preds = %bb7
  unreachable, !dbg !4304

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !4311
  %layout.0 = load i64, i64* %25, align 8, !dbg !4311
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !4311
  %layout.1 = load i64, i64* %26, align 8, !dbg !4311, !range !1671, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4311
  store i64 %layout.0, i64* %27, align 8, !dbg !4311
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4311
  store i64 %layout.1, i64* %28, align 8, !dbg !4311
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4284, metadata !DIExpression()), !dbg !4312
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !4313
  store i64 %layout.0, i64* %29, align 8, !dbg !4313
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !4313
  store i64 %layout.1, i64* %30, align 8, !dbg !4313
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !4282, metadata !DIExpression()), !dbg !4314
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !4315
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !4315
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !4319
  %33 = load i64, i64* %32, align 8, !dbg !4319, !range !2461, !noundef !23
  %34 = sub i64 %33, -9223372036854775807, !dbg !4319
  %35 = icmp eq i64 %34, 0, !dbg !4319
  %_18 = select i1 %35, i64 0, i64 1, !dbg !4319
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !4320

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16
          to label %unreachable unwind label %cleanup, !dbg !4321

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !4319

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !4322, !range !680, !noundef !23
  %37 = trunc i8 %36 to i1, !dbg !4322
  %_21 = zext i1 %37 to i64, !dbg !4322
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !4323

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16
          to label %unreachable unwind label %cleanup, !dbg !4324

bb15:                                             ; preds = %bb13
  unreachable, !dbg !4322

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hfe7a04e7bb290008E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !4325

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb5e6bf8eb8b388aeE"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !4326

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !4326
  br label %bb19, !dbg !4327

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !4328
  %41 = load {}*, {}** %40, align 8, !dbg !4328
  %42 = icmp eq {}* %41, null, !dbg !4328
  %_27 = select i1 %42, i64 1, i64 0, !dbg !4328
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !4329

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !4325
  br label %bb19, !dbg !4330

bb21:                                             ; preds = %bb19
  unreachable, !dbg !4328

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !4331
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !4331, !nonnull !23, !noundef !23
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !4331
  %ptr.1 = load i64, i64* %44, align 8, !dbg !4331
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !4331
  store i8* %ptr.0, i8** %45, align 8, !dbg !4331
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !4331
  store i64 %ptr.1, i64* %46, align 8, !dbg !4331
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4290, metadata !DIExpression()), !dbg !4332
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !4333
  store i8* %ptr.0, i8** %47, align 8, !dbg !4333
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !4333
  store i64 %ptr.1, i64* %48, align 8, !dbg !4333
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !4288, metadata !DIExpression()), !dbg !4334
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !4301
  store i8* %ptr.0, i8** %49, align 8, !dbg !4301
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !4301
  store i64 %ptr.1, i64* %50, align 8, !dbg !4301
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !4335, metadata !DIExpression()), !dbg !4343
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !4343
  store i8* %ptr.0, i8** %51, align 8, !dbg !4343
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !4343
  store i64 %ptr.1, i64* %52, align 8, !dbg !4343
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !4344, metadata !DIExpression()), !dbg !4348
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !4348
  %ptr = bitcast [0 x i8]* %_41.0 to [4 x i32]*, !dbg !4343
  store [4 x i32]* %ptr, [4 x i32]** %ptr.dbg.spill4, align 8, !dbg !4343
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr.dbg.spill4, metadata !4350, metadata !DIExpression()), !dbg !4356
  %53 = bitcast i32** %self to [4 x i32]**, !dbg !4356
  store [4 x i32]* %ptr, [4 x i32]** %53, align 8, !dbg !4356
  %54 = bitcast i32** %self to [4 x i32]**, !dbg !4300
  %_45 = load [4 x i32]*, [4 x i32]** %54, align 8, !dbg !4300
  store [4 x i32]* %_45, [4 x i32]** %ptr.dbg.spill5, align 8, !dbg !4300
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr.dbg.spill5, metadata !4358, metadata !DIExpression()), !dbg !4364
  store [4 x i32]* %_45, [4 x i32]** %ptr.dbg.spill6, align 8, !dbg !4364
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr.dbg.spill6, metadata !4366, metadata !DIExpression()), !dbg !4370
  %55 = bitcast i32** %_46 to [4 x i32]**, !dbg !4370
  store [4 x i32]* %_45, [4 x i32]** %55, align 8, !dbg !4370
  %56 = load i32*, i32** %_46, align 8, !dbg !4364, !nonnull !23, !noundef !23
  store i32* %56, i32** %_31, align 8, !dbg !4364
  %57 = bitcast { i32*, i64 }* %2 to i32**, !dbg !4372
  %58 = load i32*, i32** %_31, align 8, !dbg !4372, !nonnull !23, !noundef !23
  store i32* %58, i32** %57, align 8, !dbg !4372
  %59 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !4372
  store i64 %capacity, i64* %59, align 8, !dbg !4372
  %60 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !4372
  br label %bb23, !dbg !4308

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #16
          to label %unreachable unwind label %cleanup, !dbg !4373

bb24:                                             ; preds = %bb25, %bb26
  %61 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4374
  %62 = load i8*, i8** %61, align 8, !dbg !4374
  %63 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4374
  %64 = load i32, i32* %63, align 8, !dbg !4374
  %65 = insertvalue { i8*, i32 } undef, i8* %62, 0, !dbg !4374
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1, !dbg !4374
  resume { i8*, i32 } %66, !dbg !4374

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !4307
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define internal { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17he28e0d938b333ed2E"(i64 %capacity, i1 zeroext %0) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !4375 {
start:
  %ptr.dbg.spill6 = alloca i32*, align 8
  %ptr.dbg.spill5 = alloca i32*, align 8
  %ptr.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill2 = alloca { i8*, i64 }, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %layout.dbg.spill1 = alloca { i64, i64 }, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %1 = alloca { i8*, i32 }, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %_46 = alloca i32*, align 8
  %_37 = alloca i8, align 1
  %self = alloca i32*, align 8
  %_31 = alloca i32*, align 8
  %result = alloca { i8*, i64 }, align 8
  %_15 = alloca { i64, i64 }, align 8
  %_10 = alloca { i64, i64 }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca { i32*, i64 }, align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %init, align 1
  store i64 %capacity, i64* %capacity.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !4379, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.declare(metadata i8* %init, metadata !4380, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc, metadata !4381, metadata !DIExpression()), !dbg !4394
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %result, metadata !4386, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.declare(metadata i32** %self, metadata !4396, metadata !DIExpression()), !dbg !4400
  store i8 1, i8* %_37, align 1, !dbg !4402
  br i1 false, label %bb1, label %bb2, !dbg !4402

bb1:                                              ; preds = %start
  store i8 1, i8* %_4, align 1, !dbg !4402
  br label %bb3, !dbg !4402

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %capacity, 0, !dbg !4403
  %4 = zext i1 %_6 to i8, !dbg !4402
  store i8 %4, i8* %_4, align 1, !dbg !4402
  br label %bb3, !dbg !4402

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_4, align 1, !dbg !4402, !range !680, !noundef !23
  %6 = trunc i8 %5 to i1, !dbg !4402
  br i1 %6, label %bb4, label %bb6, !dbg !4402

bb6:                                              ; preds = %bb3
; invoke core::alloc::layout::Layout::array
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h27fd1a567895a074E(i64 %capacity)
          to label %bb7 unwind label %cleanup, !dbg !4404

bb4:                                              ; preds = %bb3
  store i8 0, i8* %_37, align 1, !dbg !4405
; invoke alloc::raw_vec::RawVec<T,A>::new_in
  %8 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h8962c42da30eb302E"()
          to label %bb5 unwind label %cleanup, !dbg !4406

bb26:                                             ; preds = %cleanup
  %9 = load i8, i8* %_37, align 1, !dbg !4407, !range !680, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !4407
  br i1 %10, label %bb25, label %bb24, !dbg !4407

cleanup:                                          ; preds = %bb20, %bb16, %bb14, %bb11, %bb8, %bb6, %bb4
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = extractvalue { i8*, i32 } %11, 1
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  br label %bb26

bb5:                                              ; preds = %bb4
  store { i32*, i64 } %8, { i32*, i64 }* %2, align 8, !dbg !4406
  br label %bb23, !dbg !4408

bb23:                                             ; preds = %bb22, %bb5
  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0, !dbg !4409
  %17 = load i32*, i32** %16, align 8, !dbg !4409, !nonnull !23, !noundef !23
  %18 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !4409
  %19 = load i64, i64* %18, align 8, !dbg !4409
  %20 = insertvalue { i32*, i64 } undef, i32* %17, 0, !dbg !4409
  %21 = insertvalue { i32*, i64 } %20, i64 %19, 1, !dbg !4409
  ret { i32*, i64 } %21, !dbg !4409

bb7:                                              ; preds = %bb6
  store { i64, i64 } %7, { i64, i64 }* %_10, align 8, !dbg !4404
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !4404
  %23 = load i64, i64* %22, align 8, !dbg !4404, !range !299, !noundef !23
  %24 = icmp eq i64 %23, 0, !dbg !4404
  %_12 = select i1 %24, i64 1, i64 0, !dbg !4404
  switch i64 %_12, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !4410

bb9:                                              ; preds = %bb7
  unreachable, !dbg !4404

bb10:                                             ; preds = %bb7
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 0, !dbg !4411
  %layout.0 = load i64, i64* %25, align 8, !dbg !4411
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_10, i32 0, i32 1, !dbg !4411
  %layout.1 = load i64, i64* %26, align 8, !dbg !4411, !range !1671, !noundef !23
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4411
  store i64 %layout.0, i64* %27, align 8, !dbg !4411
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4411
  store i64 %layout.1, i64* %28, align 8, !dbg !4411
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4384, metadata !DIExpression()), !dbg !4412
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 0, !dbg !4413
  store i64 %layout.0, i64* %29, align 8, !dbg !4413
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill1, i32 0, i32 1, !dbg !4413
  store i64 %layout.1, i64* %30, align 8, !dbg !4413
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill1, metadata !4382, metadata !DIExpression()), !dbg !4414
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !4415
  store i64 -9223372036854775807, i64* %31, align 8, !dbg !4415
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_15, i32 0, i32 1, !dbg !4419
  %33 = load i64, i64* %32, align 8, !dbg !4419, !range !2461, !noundef !23
  %34 = sub i64 %33, -9223372036854775807, !dbg !4419
  %35 = icmp eq i64 %34, 0, !dbg !4419
  %_18 = select i1 %35, i64 0, i64 1, !dbg !4419
  switch i64 %_18, label %bb12 [
    i64 0, label %bb13
    i64 1, label %bb11
  ], !dbg !4420

bb8:                                              ; preds = %bb7
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16
          to label %unreachable unwind label %cleanup, !dbg !4421

unreachable:                                      ; preds = %bb20, %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb10
  unreachable, !dbg !4419

bb13:                                             ; preds = %bb10
  %36 = load i8, i8* %init, align 1, !dbg !4422, !range !680, !noundef !23
  %37 = trunc i8 %36 to i1, !dbg !4422
  %_21 = zext i1 %37 to i64, !dbg !4422
  switch i64 %_21, label %bb15 [
    i64 0, label %bb16
    i64 1, label %bb14
  ], !dbg !4423

bb11:                                             ; preds = %bb10
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() #16
          to label %unreachable unwind label %cleanup, !dbg !4424

bb15:                                             ; preds = %bb13
  unreachable, !dbg !4422

bb16:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %38 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hfe7a04e7bb290008E"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb17 unwind label %cleanup, !dbg !4425

bb14:                                             ; preds = %bb13
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %39 = invoke { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb5e6bf8eb8b388aeE"(%"alloc::alloc::Global"* align 1 %alloc, i64 %layout.0, i64 %layout.1)
          to label %bb18 unwind label %cleanup, !dbg !4426

bb18:                                             ; preds = %bb14
  store { i8*, i64 } %39, { i8*, i64 }* %result, align 8, !dbg !4426
  br label %bb19, !dbg !4427

bb19:                                             ; preds = %bb17, %bb18
  %40 = bitcast { i8*, i64 }* %result to {}**, !dbg !4428
  %41 = load {}*, {}** %40, align 8, !dbg !4428
  %42 = icmp eq {}* %41, null, !dbg !4428
  %_27 = select i1 %42, i64 1, i64 0, !dbg !4428
  switch i64 %_27, label %bb21 [
    i64 0, label %bb22
    i64 1, label %bb20
  ], !dbg !4429

bb17:                                             ; preds = %bb16
  store { i8*, i64 } %38, { i8*, i64 }* %result, align 8, !dbg !4425
  br label %bb19, !dbg !4430

bb21:                                             ; preds = %bb19
  unreachable, !dbg !4428

bb22:                                             ; preds = %bb19
  %43 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 0, !dbg !4431
  %ptr.0 = load i8*, i8** %43, align 8, !dbg !4431, !nonnull !23, !noundef !23
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %result, i32 0, i32 1, !dbg !4431
  %ptr.1 = load i64, i64* %44, align 8, !dbg !4431
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !4431
  store i8* %ptr.0, i8** %45, align 8, !dbg !4431
  %46 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !4431
  store i64 %ptr.1, i64* %46, align 8, !dbg !4431
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4390, metadata !DIExpression()), !dbg !4432
  %47 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 0, !dbg !4433
  store i8* %ptr.0, i8** %47, align 8, !dbg !4433
  %48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill2, i32 0, i32 1, !dbg !4433
  store i64 %ptr.1, i64* %48, align 8, !dbg !4433
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill2, metadata !4388, metadata !DIExpression()), !dbg !4434
  %49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !4401
  store i8* %ptr.0, i8** %49, align 8, !dbg !4401
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !4401
  store i64 %ptr.1, i64* %50, align 8, !dbg !4401
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !4435, metadata !DIExpression()), !dbg !4442
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !4442
  store i8* %ptr.0, i8** %51, align 8, !dbg !4442
  %52 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !4442
  store i64 %ptr.1, i64* %52, align 8, !dbg !4442
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !4443, metadata !DIExpression()), !dbg !4447
  %_41.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !4447
  %ptr = bitcast [0 x i8]* %_41.0 to i32*, !dbg !4442
  store i32* %ptr, i32** %ptr.dbg.spill4, align 8, !dbg !4442
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill4, metadata !4449, metadata !DIExpression()), !dbg !4453
  store i32* %ptr, i32** %self, align 8, !dbg !4453
  %_45 = load i32*, i32** %self, align 8, !dbg !4400
  store i32* %_45, i32** %ptr.dbg.spill5, align 8, !dbg !4400
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill5, metadata !4455, metadata !DIExpression()), !dbg !4461
  store i32* %_45, i32** %ptr.dbg.spill6, align 8, !dbg !4461
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill6, metadata !4463, metadata !DIExpression()), !dbg !4467
  store i32* %_45, i32** %_46, align 8, !dbg !4467
  %53 = load i32*, i32** %_46, align 8, !dbg !4461, !nonnull !23, !noundef !23
  store i32* %53, i32** %_31, align 8, !dbg !4461
  %54 = bitcast { i32*, i64 }* %2 to i32**, !dbg !4469
  %55 = load i32*, i32** %_31, align 8, !dbg !4469, !nonnull !23, !noundef !23
  store i32* %55, i32** %54, align 8, !dbg !4469
  %56 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !4469
  store i64 %capacity, i64* %56, align 8, !dbg !4469
  %57 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !4469
  br label %bb23, !dbg !4408

bb20:                                             ; preds = %bb19
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64 %layout.0, i64 %layout.1) #16
          to label %unreachable unwind label %cleanup, !dbg !4470

bb24:                                             ; preds = %bb25, %bb26
  %58 = bitcast { i8*, i32 }* %1 to i8**, !dbg !4471
  %59 = load i8*, i8** %58, align 8, !dbg !4471
  %60 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !4471
  %61 = load i32, i32* %60, align 8, !dbg !4471
  %62 = insertvalue { i8*, i32 } undef, i8* %59, 0, !dbg !4471
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1, !dbg !4471
  resume { i8*, i32 } %63, !dbg !4471

bb25:                                             ; preds = %bb26
  br label %bb24, !dbg !4407
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0fd81797fb688b00E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #2 !dbg !4472 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !4476, metadata !DIExpression()), !dbg !4479
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4477, metadata !DIExpression()), !dbg !4480
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4478, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !4482, metadata !DIExpression()), !dbg !4487
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill2, align 8, !dbg !4488
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill2, metadata !4489, metadata !DIExpression()), !dbg !4494
  br i1 false, label %bb2, label %bb3, !dbg !4494

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !4494
  br label %bb1, !dbg !4494

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !4494
  %1 = load i64, i64* %0, align 8, !dbg !4494
  store i64 %1, i64* %self1, align 8, !dbg !4494
  br label %bb1, !dbg !4494

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !4495
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !4486, metadata !DIExpression()), !dbg !4487
  %_10 = load i64, i64* %self1, align 8, !dbg !4487
  %_5 = sub i64 %_10, %len, !dbg !4487
  %2 = icmp ugt i64 %additional, %_5, !dbg !4496
  ret i1 %2, !dbg !4497
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hb3ddb38702e268e3E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #2 !dbg !4498 {
start:
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill2 = alloca { i32*, i64 }*, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %self1 = alloca i64, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !4502, metadata !DIExpression()), !dbg !4505
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4503, metadata !DIExpression()), !dbg !4506
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4504, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.declare(metadata i64* %self1, metadata !4508, metadata !DIExpression()), !dbg !4513
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill2, align 8, !dbg !4514
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill2, metadata !4515, metadata !DIExpression()), !dbg !4520
  br i1 false, label %bb2, label %bb3, !dbg !4520

bb2:                                              ; preds = %start
  store i64 -1, i64* %self1, align 8, !dbg !4520
  br label %bb1, !dbg !4520

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !4520
  %1 = load i64, i64* %0, align 8, !dbg !4520
  store i64 %1, i64* %self1, align 8, !dbg !4520
  br label %bb1, !dbg !4520

bb1:                                              ; preds = %bb2, %bb3
  store i64 %len, i64* %rhs.dbg.spill, align 8, !dbg !4521
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !4512, metadata !DIExpression()), !dbg !4513
  %_10 = load i64, i64* %self1, align 8, !dbg !4513
  %_5 = sub i64 %_10, %len, !dbg !4513
  %2 = icmp ugt i64 %additional, %_5, !dbg !4522
  ret i1 %2, !dbg !4523
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8e4257b64f7dd325E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i32*, i64 }* align 8 %self) unnamed_addr #2 !dbg !4524 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i32*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !4528, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !4532, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !4543, metadata !DIExpression()), !dbg !4550
  br i1 false, label %bb1, label %bb2, !dbg !4561

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !4561
  br label %bb3, !dbg !4561

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !4562
  %_5 = load i64, i64* %1, align 8, !dbg !4562
  %_4 = icmp eq i64 %_5, 0, !dbg !4562
  %2 = zext i1 %_4 to i8, !dbg !4561
  store i8 %2, i8* %_2, align 1, !dbg !4561
  br label %bb3, !dbg !4561

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !4561, !range !680, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !4561
  br i1 %4, label %bb4, label %bb5, !dbg !4561

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !4563
  %_8 = load i64, i64* %5, align 8, !dbg !4563
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h27fd1a567895a074E(i64 %_8), !dbg !4542
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !4542
  br label %bb6, !dbg !4542

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !4564
  store i64 0, i64* %7, align 8, !dbg !4564
  br label %bb8, !dbg !4565

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !4566

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4541
  %9 = load i64, i64* %8, align 8, !dbg !4541, !range !299, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !4541
  %_15 = select i1 %10, i64 1, i64 0, !dbg !4541
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !4541

bb10:                                             ; preds = %bb6
  unreachable, !dbg !4541

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !4541
  %t.0 = load i64, i64* %11, align 8, !dbg !4541
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4541
  %t.1 = load i64, i64* %12, align 8, !dbg !4541, !range !1671, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !4541
  store i64 %t.0, i64* %13, align 8, !dbg !4541
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !4541
  store i64 %t.1, i64* %14, align 8, !dbg !4541
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !4538, metadata !DIExpression()), !dbg !4567
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4567
  store i64 %t.0, i64* %15, align 8, !dbg !4567
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4567
  store i64 %t.1, i64* %16, align 8, !dbg !4567
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4529, metadata !DIExpression()), !dbg !4568
  %17 = bitcast { i32*, i64 }* %self to i32**, !dbg !4560
  %self2 = load i32*, i32** %17, align 8, !dbg !4560, !nonnull !23, !noundef !23
  store i32* %self2, i32** %self.dbg.spill3, align 8, !dbg !4560
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !4556, metadata !DIExpression()), !dbg !4569
  store i32* %self2, i32** %self.dbg.spill4, align 8, !dbg !4569
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !4570, metadata !DIExpression()), !dbg !4576
  store i32* %self2, i32** %self.dbg.spill5, align 8, !dbg !4576
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill5, metadata !4578, metadata !DIExpression()), !dbg !4582
  %ptr = bitcast i32* %self2 to i8*, !dbg !4576
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !4576
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4584, metadata !DIExpression()), !dbg !4588
  store i8* %ptr, i8** %pointer, align 8, !dbg !4588
  %_26 = load i8*, i8** %pointer, align 8, !dbg !4550, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !4550
  %18 = load i8*, i8** %_11, align 8, !dbg !4560, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbd61ac89084c4fa3E"(i8* %18), !dbg !4560
  br label %bb7, !dbg !4560

bb9:                                              ; preds = %bb6
  unreachable, !dbg !4590

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !4594
  store i8* %_10, i8** %19, align 8, !dbg !4594
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !4594
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !4594
  store i64 %t.0, i64* %21, align 8, !dbg !4594
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !4594
  store i64 %t.1, i64* %22, align 8, !dbg !4594
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !4595
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !4595
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !4595
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !4595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !4595
  br label %bb8, !dbg !4565
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17he785deccb54c364eE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %0, { i32*, i64 }* align 8 %self) unnamed_addr #2 !dbg !4596 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill5 = alloca i32*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %pointer = alloca i8*, align 8
  %_11 = alloca i8*, align 8
  %_9 = alloca { i8*, { i64, i64 } }, align 8
  %self1 = alloca { i64, i64 }, align 8
  %_2 = alloca i8, align 1
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !4600, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self1, metadata !4604, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !4613, metadata !DIExpression()), !dbg !4617
  br i1 false, label %bb1, label %bb2, !dbg !4627

bb1:                                              ; preds = %start
  store i8 1, i8* %_2, align 1, !dbg !4627
  br label %bb3, !dbg !4627

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !4628
  %_5 = load i64, i64* %1, align 8, !dbg !4628
  %_4 = icmp eq i64 %_5, 0, !dbg !4628
  %2 = zext i1 %_4 to i8, !dbg !4627
  store i8 %2, i8* %_2, align 1, !dbg !4627
  br label %bb3, !dbg !4627

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_2, align 1, !dbg !4627, !range !680, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !4627
  br i1 %4, label %bb4, label %bb5, !dbg !4627

bb5:                                              ; preds = %bb3
  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !4629
  %_8 = load i64, i64* %5, align 8, !dbg !4629
; call core::alloc::layout::Layout::array
  %6 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h21430b4bd37f8f85E(i64 %_8), !dbg !4612
  store { i64, i64 } %6, { i64, i64 }* %self1, align 8, !dbg !4612
  br label %bb6, !dbg !4612

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0, i32 0, i32 1, !dbg !4630
  store i64 0, i64* %7, align 8, !dbg !4630
  br label %bb8, !dbg !4631

bb8:                                              ; preds = %bb7, %bb4
  ret void, !dbg !4632

bb6:                                              ; preds = %bb5
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4611
  %9 = load i64, i64* %8, align 8, !dbg !4611, !range !299, !noundef !23
  %10 = icmp eq i64 %9, 0, !dbg !4611
  %_15 = select i1 %10, i64 1, i64 0, !dbg !4611
  switch i64 %_15, label %bb10 [
    i64 0, label %bb11
    i64 1, label %bb9
  ], !dbg !4611

bb10:                                             ; preds = %bb6
  unreachable, !dbg !4611

bb11:                                             ; preds = %bb6
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 0, !dbg !4611
  %t.0 = load i64, i64* %11, align 8, !dbg !4611
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self1, i32 0, i32 1, !dbg !4611
  %t.1 = load i64, i64* %12, align 8, !dbg !4611, !range !1671, !noundef !23
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !4611
  store i64 %t.0, i64* %13, align 8, !dbg !4611
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !4611
  store i64 %t.1, i64* %14, align 8, !dbg !4611
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !4608, metadata !DIExpression()), !dbg !4633
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !4633
  store i64 %t.0, i64* %15, align 8, !dbg !4633
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !4633
  store i64 %t.1, i64* %16, align 8, !dbg !4633
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !4601, metadata !DIExpression()), !dbg !4634
  %17 = bitcast { i32*, i64 }* %self to i32**, !dbg !4626
  %self2 = load i32*, i32** %17, align 8, !dbg !4626, !nonnull !23, !noundef !23
  store i32* %self2, i32** %self.dbg.spill3, align 8, !dbg !4626
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !4623, metadata !DIExpression()), !dbg !4635
  store i32* %self2, i32** %self.dbg.spill4, align 8, !dbg !4635
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !4636, metadata !DIExpression()), !dbg !4642
  store i32* %self2, i32** %self.dbg.spill5, align 8, !dbg !4642
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill5, metadata !4644, metadata !DIExpression()), !dbg !4648
  %_22 = bitcast i32* %self2 to [4 x i32]*, !dbg !4648
  %ptr = bitcast [4 x i32]* %_22 to i8*, !dbg !4642
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !4642
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !4650, metadata !DIExpression()), !dbg !4654
  store i8* %ptr, i8** %pointer, align 8, !dbg !4654
  %_26 = load i8*, i8** %pointer, align 8, !dbg !4617, !nonnull !23, !noundef !23
  store i8* %_26, i8** %_11, align 8, !dbg !4617
  %18 = load i8*, i8** %_11, align 8, !dbg !4626, !nonnull !23, !noundef !23
; call <T as core::convert::Into<U>>::into
  %_10 = call i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbd61ac89084c4fa3E"(i8* %18), !dbg !4626
  br label %bb7, !dbg !4626

bb9:                                              ; preds = %bb6
  unreachable, !dbg !4656

bb7:                                              ; preds = %bb11
  %19 = bitcast { i8*, { i64, i64 } }* %_9 to i8**, !dbg !4660
  store i8* %_10, i8** %19, align 8, !dbg !4660
  %20 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_9, i32 0, i32 1, !dbg !4660
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !4660
  store i64 %t.0, i64* %21, align 8, !dbg !4660
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !4660
  store i64 %t.1, i64* %22, align 8, !dbg !4660
  %23 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %0 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !4661
  %24 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %23 to { i8*, { i64, i64 } }*, !dbg !4661
  %25 = bitcast { i8*, { i64, i64 } }* %24 to i8*, !dbg !4661
  %26 = bitcast { i8*, { i64, i64 } }* %_9 to i8*, !dbg !4661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !4661
  br label %bb8, !dbg !4631
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hc7bf6c415bcd1c40E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #2 !dbg !4662 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !4667, metadata !DIExpression()), !dbg !4688
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4668, metadata !DIExpression()), !dbg !4689
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4669, metadata !DIExpression()), !dbg !4690
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !4691, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !4733, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !4739, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !4744, metadata !DIExpression()), !dbg !4754
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !4756, metadata !DIExpression()), !dbg !4782
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !4784, metadata !DIExpression()), !dbg !4794
  br i1 false, label %bb1, label %bb3, !dbg !4796

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4797
  store i64 0, i64* %1, align 8, !dbg !4797
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !4797
  %3 = load i64, i64* %2, align 8, !dbg !4797
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4797
  %5 = load i64, i64* %4, align 8, !dbg !4797, !range !299, !noundef !23
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h37c8579641ace3faE"(i64 %3, i64 %5), !dbg !4797
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !4797
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !4797
  br label %bb2, !dbg !4797

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9a7ed23975e82aa2E"(i64 %len, i64 %additional), !dbg !4732
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !4732
  br label %bb4, !dbg !4732

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4798
  store i64 0, i64* %8, align 8, !dbg !4798
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !4743
  %_42 = load i64, i64* %9, align 8, !dbg !4743, !range !1114, !noundef !23
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !4743

bb20:                                             ; preds = %bb4
  unreachable, !dbg !4743

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !4743
  %_45.0 = load i64, i64* %10, align 8, !dbg !4743
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4743
  %_45.1 = load i64, i64* %11, align 8, !dbg !4743, !range !299, !noundef !23
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4743
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !4743
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !4743
  store i64 %_45.0, i64* %14, align 8, !dbg !4743
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !4743
  store i64 %_45.1, i64* %15, align 8, !dbg !4743
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4743
  store i64 1, i64* %16, align 8, !dbg !4743
  br label %bb22, !dbg !4743

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !4743
  %v = load i64, i64* %17, align 8, !dbg !4743
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !4743
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !4740, metadata !DIExpression()), !dbg !4799
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4799
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !4799
  store i64 %v, i64* %19, align 8, !dbg !4799
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4799
  store i64 0, i64* %20, align 8, !dbg !4799
  br label %bb22, !dbg !4743

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4731
  %_46 = load i64, i64* %21, align 8, !dbg !4731, !range !1114, !noundef !23
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !4731

bb24:                                             ; preds = %bb22
  unreachable, !dbg !4731

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4731
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !4731
  %v5 = load i64, i64* %23, align 8, !dbg !4731
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !4731
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !4725, metadata !DIExpression()), !dbg !4800
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4800
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !4800
  store i64 %v5, i64* %25, align 8, !dbg !4800
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4800
  store i64 0, i64* %26, align 8, !dbg !4800
  br label %bb5, !dbg !4731

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4731
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !4731
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !4731
  %e.0 = load i64, i64* %29, align 8, !dbg !4731
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !4731
  %e.1 = load i64, i64* %30, align 8, !dbg !4731, !range !299, !noundef !23
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !4731
  store i64 %e.0, i64* %31, align 8, !dbg !4731
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !4731
  store i64 %e.1, i64* %32, align 8, !dbg !4731
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !4728, metadata !DIExpression()), !dbg !4801
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4801
  store i64 %e.0, i64* %33, align 8, !dbg !4801
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4801
  store i64 %e.1, i64* %34, align 8, !dbg !4801
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4801
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !4801
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4801
  %38 = load i64, i64* %37, align 8, !dbg !4801
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4801
  %40 = load i64, i64* %39, align 8, !dbg !4801, !range !299, !noundef !23
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !4801
  store i64 %38, i64* %41, align 8, !dbg !4801
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !4801
  store i64 %40, i64* %42, align 8, !dbg !4801
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4801
  store i64 1, i64* %43, align 8, !dbg !4801
  br label %bb5, !dbg !4731

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4732
  %_14 = load i64, i64* %44, align 8, !dbg !4732, !range !1114, !noundef !23
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !4732

bb7:                                              ; preds = %bb5
  unreachable, !dbg !4732

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4732
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !4732
  %val = load i64, i64* %46, align 8, !dbg !4732
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !4732
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !4674, metadata !DIExpression()), !dbg !4802
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !4802
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !4670, metadata !DIExpression()), !dbg !4803
  %47 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !4804
  %_20 = load i64, i64* %47, align 8, !dbg !4804
  %v1 = mul i64 %_20, 2, !dbg !4804
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !4804
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !4805, metadata !DIExpression()), !dbg !4810
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !4812
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !4809, metadata !DIExpression()), !dbg !4810
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17hb944eef8168f423aE(i64 %v1, i64 %val), !dbg !4810
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !4810
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !4676, metadata !DIExpression()), !dbg !4813
  br label %bb26, !dbg !4810

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4814
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !4814
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !4814
  %residual.0 = load i64, i64* %50, align 8, !dbg !4814
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !4814
  %residual.1 = load i64, i64* %51, align 8, !dbg !4814, !range !299, !noundef !23
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !4814
  store i64 %residual.0, i64* %52, align 8, !dbg !4814
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !4814
  store i64 %residual.1, i64* %53, align 8, !dbg !4814
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !4672, metadata !DIExpression()), !dbg !4815
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4815
  store i64 %residual.0, i64* %54, align 8, !dbg !4815
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4815
  store i64 %residual.1, i64* %55, align 8, !dbg !4815
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4754
  %e.07 = load i64, i64* %56, align 8, !dbg !4754
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4754
  %e.18 = load i64, i64* %57, align 8, !dbg !4754, !range !299, !noundef !23
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !4754
  store i64 %e.07, i64* %58, align 8, !dbg !4754
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !4754
  store i64 %e.18, i64* %59, align 8, !dbg !4754
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !4750, metadata !DIExpression()), !dbg !4816
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !4816
  store i64 %e.07, i64* %60, align 8, !dbg !4816
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !4816
  store i64 %e.18, i64* %61, align 8, !dbg !4816
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !4817, metadata !DIExpression()), !dbg !4821
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4821
  store i64 %e.07, i64* %62, align 8, !dbg !4821
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4821
  store i64 %e.18, i64* %63, align 8, !dbg !4821
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4816
  %65 = load i64, i64* %64, align 8, !dbg !4816
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4816
  %67 = load i64, i64* %66, align 8, !dbg !4816, !range !299, !noundef !23
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4816
  store i64 %65, i64* %68, align 8, !dbg !4816
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4816
  store i64 %67, i64* %69, align 8, !dbg !4816
  br label %bb17, !dbg !4823

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !4823

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !4825
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !4826, metadata !DIExpression()), !dbg !4831
  store i64 4, i64* %v1.dbg.spill11, align 8, !dbg !4832
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !4830, metadata !DIExpression()), !dbg !4831
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17hb944eef8168f423aE(i64 4, i64 %cap), !dbg !4831
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !4831
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !4678, metadata !DIExpression()), !dbg !4833
  br label %bb27, !dbg !4831

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h21430b4bd37f8f85E(i64 %cap12), !dbg !4834
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !4834
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !4834
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !4834
  store i64 %new_layout.0, i64* %71, align 8, !dbg !4834
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !4834
  store i64 %new_layout.1, i64* %72, align 8, !dbg !4834
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !4680, metadata !DIExpression()), !dbg !4835
  br label %bb9, !dbg !4834

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17he785deccb54c364eE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i32*, i64 }* align 8 %self), !dbg !4836
  br label %bb10, !dbg !4836

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !4837
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h744e8f62363c8629E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !4783
  br label %bb11, !dbg !4783

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !4782
  %_61 = load i64, i64* %73, align 8, !dbg !4782, !range !1114, !noundef !23
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !4782

bb29:                                             ; preds = %bb11
  unreachable, !dbg !4782

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !4782
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !4782
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !4782
  %v.0 = load i8*, i8** %76, align 8, !dbg !4782, !nonnull !23, !noundef !23
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !4782
  %v.1 = load i64, i64* %77, align 8, !dbg !4782
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !4782
  store i8* %v.0, i8** %78, align 8, !dbg !4782
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !4782
  store i64 %v.1, i64* %79, align 8, !dbg !4782
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !4776, metadata !DIExpression()), !dbg !4838
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4838
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !4838
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !4838
  store i8* %v.0, i8** %82, align 8, !dbg !4838
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !4838
  store i64 %v.1, i64* %83, align 8, !dbg !4838
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4838
  store i64 0, i64* %84, align 8, !dbg !4838
  br label %bb12, !dbg !4782

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !4782
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !4782
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !4782
  %e.014 = load i64, i64* %87, align 8, !dbg !4782
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !4782
  %e.115 = load i64, i64* %88, align 8, !dbg !4782, !range !299, !noundef !23
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !4782
  store i64 %e.014, i64* %89, align 8, !dbg !4782
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !4782
  store i64 %e.115, i64* %90, align 8, !dbg !4782
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !4779, metadata !DIExpression()), !dbg !4839
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4839
  store i64 %e.014, i64* %91, align 8, !dbg !4839
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4839
  store i64 %e.115, i64* %92, align 8, !dbg !4839
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4839
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !4839
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4839
  %96 = load i64, i64* %95, align 8, !dbg !4839
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4839
  %98 = load i64, i64* %97, align 8, !dbg !4839, !range !299, !noundef !23
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !4839
  store i64 %96, i64* %99, align 8, !dbg !4839
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !4839
  store i64 %98, i64* %100, align 8, !dbg !4839
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4839
  store i64 1, i64* %101, align 8, !dbg !4839
  br label %bb12, !dbg !4782

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4783
  %_34 = load i64, i64* %102, align 8, !dbg !4783, !range !1114, !noundef !23
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !4783

bb14:                                             ; preds = %bb12
  unreachable, !dbg !4783

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4783
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !4783
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !4783
  %val.0 = load i8*, i8** %105, align 8, !dbg !4783, !nonnull !23, !noundef !23
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !4783
  %val.1 = load i64, i64* %106, align 8, !dbg !4783
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !4783
  store i8* %val.0, i8** %107, align 8, !dbg !4783
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !4783
  store i64 %val.1, i64* %108, align 8, !dbg !4783
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !4686, metadata !DIExpression()), !dbg !4840
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !4840
  store i8* %val.0, i8** %109, align 8, !dbg !4840
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !4840
  store i64 %val.1, i64* %110, align 8, !dbg !4840
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4682, metadata !DIExpression()), !dbg !4841
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h78b9aca71ada8db9E"({ i32*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !4842
  br label %bb16, !dbg !4842

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4843
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !4843
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !4843
  %residual.018 = load i64, i64* %113, align 8, !dbg !4843
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !4843
  %residual.119 = load i64, i64* %114, align 8, !dbg !4843, !range !299, !noundef !23
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !4843
  store i64 %residual.018, i64* %115, align 8, !dbg !4843
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !4843
  store i64 %residual.119, i64* %116, align 8, !dbg !4843
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !4684, metadata !DIExpression()), !dbg !4844
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4844
  store i64 %residual.018, i64* %117, align 8, !dbg !4844
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4844
  store i64 %residual.119, i64* %118, align 8, !dbg !4844
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4794
  %e.021 = load i64, i64* %119, align 8, !dbg !4794
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4794
  %e.122 = load i64, i64* %120, align 8, !dbg !4794, !range !299, !noundef !23
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !4794
  store i64 %e.021, i64* %121, align 8, !dbg !4794
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !4794
  store i64 %e.122, i64* %122, align 8, !dbg !4794
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !4790, metadata !DIExpression()), !dbg !4845
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3a535f962c3cf431E"(i64 %e.021, i64 %e.122), !dbg !4845
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !4845
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !4845
  br label %bb31, !dbg !4845

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4845
  store i64 %_68.0, i64* %124, align 8, !dbg !4845
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4845
  store i64 %_68.1, i64* %125, align 8, !dbg !4845
  br label %bb17, !dbg !4846

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4848
  %127 = load i64, i64* %126, align 8, !dbg !4848
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4848
  %129 = load i64, i64* %128, align 8, !dbg !4848, !range !2461, !noundef !23
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !4848
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !4848
  ret { i64, i64 } %131, !dbg !4848

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4849
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !4849
  br label %bb18, !dbg !4848

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4850
  store i64 %_5.0, i64* %133, align 8, !dbg !4850
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4850
  store i64 %_5.1, i64* %134, align 8, !dbg !4850
  br label %bb18, !dbg !4823
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define internal { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hc8b5d931c4c7ec70E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #2 !dbg !4851 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill24 = alloca { i8*, i64 }, align 8
  %e.dbg.spill23 = alloca { i64, i64 }, align 8
  %residual.dbg.spill20 = alloca { i64, i64 }, align 8
  %v.dbg.spill17 = alloca { i8*, i64 }, align 8
  %e.dbg.spill16 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill13 = alloca i64, align 8
  %v1.dbg.spill11 = alloca i64, align 8
  %v2.dbg.spill10 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill9 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill6 = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_65 = alloca { i64, i64 }, align 8
  %_55 = alloca { i64, i64 }, align 8
  %_50 = alloca { i64, i64 }, align 8
  %residual4 = alloca { i64, i64 }, align 8
  %_30 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_27 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca { i64, i64 }, align 8
  %err = alloca { i64, i64 }, align 8
  %self2 = alloca { i64, i64 }, align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !4856, metadata !DIExpression()), !dbg !4877
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !4857, metadata !DIExpression()), !dbg !4878
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !4858, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1, metadata !4880, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self2, metadata !4892, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err, metadata !4896, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !4901, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.declare(metadata %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3, metadata !4910, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual4, metadata !4922, metadata !DIExpression()), !dbg !4929
  br i1 false, label %bb1, label %bb3, !dbg !4931

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4932
  store i64 0, i64* %1, align 8, !dbg !4932
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !4932
  %3 = load i64, i64* %2, align 8, !dbg !4932
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !4932
  %5 = load i64, i64* %4, align 8, !dbg !4932, !range !299, !noundef !23
; call <T as core::convert::Into<U>>::into
  %6 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h37c8579641ace3faE"(i64 %3, i64 %5), !dbg !4932
  %_5.0 = extractvalue { i64, i64 } %6, 0, !dbg !4932
  %_5.1 = extractvalue { i64, i64 } %6, 1, !dbg !4932
  br label %bb2, !dbg !4932

bb3:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %7 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9a7ed23975e82aa2E"(i64 %len, i64 %additional), !dbg !4891
  store { i64, i64 } %7, { i64, i64 }* %self2, align 8, !dbg !4891
  br label %bb4, !dbg !4891

bb4:                                              ; preds = %bb3
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4933
  store i64 0, i64* %8, align 8, !dbg !4933
  %9 = bitcast { i64, i64 }* %self2 to i64*, !dbg !4900
  %_42 = load i64, i64* %9, align 8, !dbg !4900, !range !1114, !noundef !23
  switch i64 %_42, label %bb20 [
    i64 0, label %bb19
    i64 1, label %bb21
  ], !dbg !4900

bb20:                                             ; preds = %bb4
  unreachable, !dbg !4900

bb19:                                             ; preds = %bb4
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 0, !dbg !4900
  %_45.0 = load i64, i64* %10, align 8, !dbg !4900
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err, i32 0, i32 1, !dbg !4900
  %_45.1 = load i64, i64* %11, align 8, !dbg !4900, !range !299, !noundef !23
  %12 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4900
  %13 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %12, i32 0, i32 1, !dbg !4900
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !4900
  store i64 %_45.0, i64* %14, align 8, !dbg !4900
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !4900
  store i64 %_45.1, i64* %15, align 8, !dbg !4900
  %16 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4900
  store i64 1, i64* %16, align 8, !dbg !4900
  br label %bb22, !dbg !4900

bb21:                                             ; preds = %bb4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self2, i32 0, i32 1, !dbg !4900
  %v = load i64, i64* %17, align 8, !dbg !4900
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !4900
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !4897, metadata !DIExpression()), !dbg !4934
  %18 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4934
  %19 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %18, i32 0, i32 1, !dbg !4934
  store i64 %v, i64* %19, align 8, !dbg !4934
  %20 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4934
  store i64 0, i64* %20, align 8, !dbg !4934
  br label %bb22, !dbg !4900

bb22:                                             ; preds = %bb19, %bb21
  %21 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to i64*, !dbg !4890
  %_46 = load i64, i64* %21, align 8, !dbg !4890, !range !1114, !noundef !23
  switch i64 %_46, label %bb24 [
    i64 0, label %bb25
    i64 1, label %bb23
  ], !dbg !4890

bb24:                                             ; preds = %bb22
  unreachable, !dbg !4890

bb25:                                             ; preds = %bb22
  %22 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"*, !dbg !4890
  %23 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok"* %22, i32 0, i32 1, !dbg !4890
  %v5 = load i64, i64* %23, align 8, !dbg !4890
  store i64 %v5, i64* %v.dbg.spill6, align 8, !dbg !4890
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill6, metadata !4884, metadata !DIExpression()), !dbg !4935
  %24 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4935
  %25 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %24, i32 0, i32 1, !dbg !4935
  store i64 %v5, i64* %25, align 8, !dbg !4935
  %26 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4935
  store i64 0, i64* %26, align 8, !dbg !4935
  br label %bb5, !dbg !4890

bb23:                                             ; preds = %bb22
  %27 = bitcast %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>"* %self1 to %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"*, !dbg !4890
  %28 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err", %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Err"* %27, i32 0, i32 1, !dbg !4890
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !4890
  %e.0 = load i64, i64* %29, align 8, !dbg !4890
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !4890
  %e.1 = load i64, i64* %30, align 8, !dbg !4890, !range !299, !noundef !23
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !4890
  store i64 %e.0, i64* %31, align 8, !dbg !4890
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !4890
  store i64 %e.1, i64* %32, align 8, !dbg !4890
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !4887, metadata !DIExpression()), !dbg !4936
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4936
  store i64 %e.0, i64* %33, align 8, !dbg !4936
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4936
  store i64 %e.1, i64* %34, align 8, !dbg !4936
  %35 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4936
  %36 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %35, i32 0, i32 1, !dbg !4936
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 0, !dbg !4936
  %38 = load i64, i64* %37, align 8, !dbg !4936
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_50, i32 0, i32 1, !dbg !4936
  %40 = load i64, i64* %39, align 8, !dbg !4936, !range !299, !noundef !23
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 0, !dbg !4936
  store i64 %38, i64* %41, align 8, !dbg !4936
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %36, i32 0, i32 1, !dbg !4936
  store i64 %40, i64* %42, align 8, !dbg !4936
  %43 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4936
  store i64 1, i64* %43, align 8, !dbg !4936
  br label %bb5, !dbg !4890

bb5:                                              ; preds = %bb25, %bb23
  %44 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !4891
  %_14 = load i64, i64* %44, align 8, !dbg !4891, !range !1114, !noundef !23
  switch i64 %_14, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !4891

bb7:                                              ; preds = %bb5
  unreachable, !dbg !4891

bb6:                                              ; preds = %bb5
  %45 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !4891
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue"* %45, i32 0, i32 1, !dbg !4891
  %val = load i64, i64* %46, align 8, !dbg !4891
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !4891
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !4863, metadata !DIExpression()), !dbg !4937
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !4937
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !4859, metadata !DIExpression()), !dbg !4938
  %47 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !4939
  %_20 = load i64, i64* %47, align 8, !dbg !4939
  %v1 = mul i64 %_20, 2, !dbg !4939
  store i64 %v1, i64* %v1.dbg.spill, align 8, !dbg !4939
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !4940, metadata !DIExpression()), !dbg !4945
  store i64 %val, i64* %v2.dbg.spill, align 8, !dbg !4947
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !4944, metadata !DIExpression()), !dbg !4945
; call core::cmp::Ord::max
  %cap = call i64 @_ZN4core3cmp3Ord3max17hb944eef8168f423aE(i64 %v1, i64 %val), !dbg !4945
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !4945
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !4865, metadata !DIExpression()), !dbg !4948
  br label %bb26, !dbg !4945

bb8:                                              ; preds = %bb5
  %48 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>"* %_8 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !4949
  %49 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Break"* %48, i32 0, i32 1, !dbg !4949
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 0, !dbg !4949
  %residual.0 = load i64, i64* %50, align 8, !dbg !4949
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %49, i32 0, i32 1, !dbg !4949
  %residual.1 = load i64, i64* %51, align 8, !dbg !4949, !range !299, !noundef !23
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !4949
  store i64 %residual.0, i64* %52, align 8, !dbg !4949
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !4949
  store i64 %residual.1, i64* %53, align 8, !dbg !4949
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !4861, metadata !DIExpression()), !dbg !4950
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4950
  store i64 %residual.0, i64* %54, align 8, !dbg !4950
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4950
  store i64 %residual.1, i64* %55, align 8, !dbg !4950
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !4908
  %e.07 = load i64, i64* %56, align 8, !dbg !4908
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !4908
  %e.18 = load i64, i64* %57, align 8, !dbg !4908, !range !299, !noundef !23
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 0, !dbg !4908
  store i64 %e.07, i64* %58, align 8, !dbg !4908
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill9, i32 0, i32 1, !dbg !4908
  store i64 %e.18, i64* %59, align 8, !dbg !4908
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill9, metadata !4905, metadata !DIExpression()), !dbg !4951
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0, !dbg !4951
  store i64 %e.07, i64* %60, align 8, !dbg !4951
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1, !dbg !4951
  store i64 %e.18, i64* %61, align 8, !dbg !4951
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !4952, metadata !DIExpression()), !dbg !4956
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4956
  store i64 %e.07, i64* %62, align 8, !dbg !4956
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4956
  store i64 %e.18, i64* %63, align 8, !dbg !4956
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 0, !dbg !4951
  %65 = load i64, i64* %64, align 8, !dbg !4951
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_55, i32 0, i32 1, !dbg !4951
  %67 = load i64, i64* %66, align 8, !dbg !4951, !range !299, !noundef !23
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4951
  store i64 %65, i64* %68, align 8, !dbg !4951
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4951
  store i64 %67, i64* %69, align 8, !dbg !4951
  br label %bb17, !dbg !4958

bb17:                                             ; preds = %bb31, %bb8
  br label %bb18, !dbg !4958

bb26:                                             ; preds = %bb6
  store i64 %cap, i64* %v2.dbg.spill10, align 8, !dbg !4960
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill10, metadata !4961, metadata !DIExpression()), !dbg !4966
  store i64 4, i64* %v1.dbg.spill11, align 8, !dbg !4967
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill11, metadata !4965, metadata !DIExpression()), !dbg !4966
; call core::cmp::Ord::max
  %cap12 = call i64 @_ZN4core3cmp3Ord3max17hb944eef8168f423aE(i64 4, i64 %cap), !dbg !4966
  store i64 %cap12, i64* %cap.dbg.spill13, align 8, !dbg !4966
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill13, metadata !4867, metadata !DIExpression()), !dbg !4968
  br label %bb27, !dbg !4966

bb27:                                             ; preds = %bb26
; call core::alloc::layout::Layout::array
  %70 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h27fd1a567895a074E(i64 %cap12), !dbg !4969
  %new_layout.0 = extractvalue { i64, i64 } %70, 0, !dbg !4969
  %new_layout.1 = extractvalue { i64, i64 } %70, 1, !dbg !4969
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !4969
  store i64 %new_layout.0, i64* %71, align 8, !dbg !4969
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !4969
  store i64 %new_layout.1, i64* %72, align 8, !dbg !4969
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !4869, metadata !DIExpression()), !dbg !4970
  br label %bb9, !dbg !4969

bb9:                                              ; preds = %bb27
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8e4257b64f7dd325E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_30, { i32*, i64 }* align 8 %self), !dbg !4971
  br label %bb10, !dbg !4971

bb10:                                             ; preds = %bb9
  %_33 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !4972
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17h744e8f62363c8629E(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") %self3, i64 %new_layout.0, i64 %new_layout.1, %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_30, %"alloc::alloc::Global"* align 1 %_33), !dbg !4921
  br label %bb11, !dbg !4921

bb11:                                             ; preds = %bb10
  %73 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to i64*, !dbg !4920
  %_61 = load i64, i64* %73, align 8, !dbg !4920, !range !1114, !noundef !23
  switch i64 %_61, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb28
  ], !dbg !4920

bb29:                                             ; preds = %bb11
  unreachable, !dbg !4920

bb30:                                             ; preds = %bb11
  %74 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"*, !dbg !4920
  %75 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok"* %74, i32 0, i32 1, !dbg !4920
  %76 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 0, !dbg !4920
  %v.0 = load i8*, i8** %76, align 8, !dbg !4920, !nonnull !23, !noundef !23
  %77 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %75, i32 0, i32 1, !dbg !4920
  %v.1 = load i64, i64* %77, align 8, !dbg !4920
  %78 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 0, !dbg !4920
  store i8* %v.0, i8** %78, align 8, !dbg !4920
  %79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill17, i32 0, i32 1, !dbg !4920
  store i64 %v.1, i64* %79, align 8, !dbg !4920
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill17, metadata !4914, metadata !DIExpression()), !dbg !4973
  %80 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4973
  %81 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %80, i32 0, i32 1, !dbg !4973
  %82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 0, !dbg !4973
  store i8* %v.0, i8** %82, align 8, !dbg !4973
  %83 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %81, i32 0, i32 1, !dbg !4973
  store i64 %v.1, i64* %83, align 8, !dbg !4973
  %84 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4973
  store i64 0, i64* %84, align 8, !dbg !4973
  br label %bb12, !dbg !4920

bb28:                                             ; preds = %bb11
  %85 = bitcast %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>"* %self3 to %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"*, !dbg !4920
  %86 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err"* %85, i32 0, i32 1, !dbg !4920
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 0, !dbg !4920
  %e.014 = load i64, i64* %87, align 8, !dbg !4920
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %86, i32 0, i32 1, !dbg !4920
  %e.115 = load i64, i64* %88, align 8, !dbg !4920, !range !299, !noundef !23
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 0, !dbg !4920
  store i64 %e.014, i64* %89, align 8, !dbg !4920
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill16, i32 0, i32 1, !dbg !4920
  store i64 %e.115, i64* %90, align 8, !dbg !4920
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill16, metadata !4917, metadata !DIExpression()), !dbg !4974
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4974
  store i64 %e.014, i64* %91, align 8, !dbg !4974
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4974
  store i64 %e.115, i64* %92, align 8, !dbg !4974
  %93 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4974
  %94 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %93, i32 0, i32 1, !dbg !4974
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 0, !dbg !4974
  %96 = load i64, i64* %95, align 8, !dbg !4974
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_65, i32 0, i32 1, !dbg !4974
  %98 = load i64, i64* %97, align 8, !dbg !4974, !range !299, !noundef !23
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 0, !dbg !4974
  store i64 %96, i64* %99, align 8, !dbg !4974
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %94, i32 0, i32 1, !dbg !4974
  store i64 %98, i64* %100, align 8, !dbg !4974
  %101 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4974
  store i64 1, i64* %101, align 8, !dbg !4974
  br label %bb12, !dbg !4920

bb12:                                             ; preds = %bb30, %bb28
  %102 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to i64*, !dbg !4921
  %_34 = load i64, i64* %102, align 8, !dbg !4921, !range !1114, !noundef !23
  switch i64 %_34, label %bb14 [
    i64 0, label %bb13
    i64 1, label %bb15
  ], !dbg !4921

bb14:                                             ; preds = %bb12
  unreachable, !dbg !4921

bb13:                                             ; preds = %bb12
  %103 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"*, !dbg !4921
  %104 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue"* %103, i32 0, i32 1, !dbg !4921
  %105 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 0, !dbg !4921
  %val.0 = load i8*, i8** %105, align 8, !dbg !4921, !nonnull !23, !noundef !23
  %106 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %104, i32 0, i32 1, !dbg !4921
  %val.1 = load i64, i64* %106, align 8, !dbg !4921
  %107 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 0, !dbg !4921
  store i8* %val.0, i8** %107, align 8, !dbg !4921
  %108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill24, i32 0, i32 1, !dbg !4921
  store i64 %val.1, i64* %108, align 8, !dbg !4921
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill24, metadata !4875, metadata !DIExpression()), !dbg !4975
  %109 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !4975
  store i8* %val.0, i8** %109, align 8, !dbg !4975
  %110 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !4975
  store i64 %val.1, i64* %110, align 8, !dbg !4975
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4871, metadata !DIExpression()), !dbg !4976
; call alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17ha19e28773325831dE"({ i32*, i64 }* align 8 %self, i8* %val.0, i64 %val.1, i64 %cap12), !dbg !4977
  br label %bb16, !dbg !4977

bb15:                                             ; preds = %bb12
  %111 = bitcast %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>"* %_27 to %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"*, !dbg !4978
  %112 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break"* %111, i32 0, i32 1, !dbg !4978
  %113 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 0, !dbg !4978
  %residual.018 = load i64, i64* %113, align 8, !dbg !4978
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %112, i32 0, i32 1, !dbg !4978
  %residual.119 = load i64, i64* %114, align 8, !dbg !4978, !range !299, !noundef !23
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 0, !dbg !4978
  store i64 %residual.018, i64* %115, align 8, !dbg !4978
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill20, i32 0, i32 1, !dbg !4978
  store i64 %residual.119, i64* %116, align 8, !dbg !4978
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill20, metadata !4873, metadata !DIExpression()), !dbg !4979
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4979
  store i64 %residual.018, i64* %117, align 8, !dbg !4979
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4979
  store i64 %residual.119, i64* %118, align 8, !dbg !4979
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 0, !dbg !4929
  %e.021 = load i64, i64* %119, align 8, !dbg !4929
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual4, i32 0, i32 1, !dbg !4929
  %e.122 = load i64, i64* %120, align 8, !dbg !4929, !range !299, !noundef !23
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 0, !dbg !4929
  store i64 %e.021, i64* %121, align 8, !dbg !4929
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill23, i32 0, i32 1, !dbg !4929
  store i64 %e.122, i64* %122, align 8, !dbg !4929
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill23, metadata !4926, metadata !DIExpression()), !dbg !4980
; call <T as core::convert::From<T>>::from
  %123 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3a535f962c3cf431E"(i64 %e.021, i64 %e.122), !dbg !4980
  %_68.0 = extractvalue { i64, i64 } %123, 0, !dbg !4980
  %_68.1 = extractvalue { i64, i64 } %123, 1, !dbg !4980
  br label %bb31, !dbg !4980

bb31:                                             ; preds = %bb15
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4980
  store i64 %_68.0, i64* %124, align 8, !dbg !4980
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4980
  store i64 %_68.1, i64* %125, align 8, !dbg !4980
  br label %bb17, !dbg !4981

bb18:                                             ; preds = %bb2, %bb16, %bb17
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4983
  %127 = load i64, i64* %126, align 8, !dbg !4983
  %128 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4983
  %129 = load i64, i64* %128, align 8, !dbg !4983, !range !2461, !noundef !23
  %130 = insertvalue { i64, i64 } undef, i64 %127, 0, !dbg !4983
  %131 = insertvalue { i64, i64 } %130, i64 %129, 1, !dbg !4983
  ret { i64, i64 } %131, !dbg !4983

bb16:                                             ; preds = %bb13
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4984
  store i64 -9223372036854775807, i64* %132, align 8, !dbg !4984
  br label %bb18, !dbg !4983

bb2:                                              ; preds = %bb1
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !4985
  store i64 %_5.0, i64* %133, align 8, !dbg !4985
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !4985
  store i64 %_5.1, i64* %134, align 8, !dbg !4985
  br label %bb18, !dbg !4958
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h78b9aca71ada8db9E"({ i32*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #2 !dbg !4986 {
start:
  %ptr.dbg.spill6 = alloca [4 x i32]*, align 8
  %ptr.dbg.spill5 = alloca [4 x i32]*, align 8
  %ptr.dbg.spill4 = alloca [4 x i32]*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_17 = alloca i32*, align 8
  %self1 = alloca i32*, align 8
  %_4 = alloca i32*, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !4990, metadata !DIExpression()), !dbg !4993
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !4991, metadata !DIExpression()), !dbg !4994
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !4992, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.declare(metadata i32** %self1, metadata !4996, metadata !DIExpression()), !dbg !5000
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5001
  store i8* %ptr.0, i8** %2, align 8, !dbg !5001
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5001
  store i64 %ptr.1, i64* %3, align 8, !dbg !5001
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !5002, metadata !DIExpression()), !dbg !5006
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !5006
  store i8* %ptr.0, i8** %4, align 8, !dbg !5006
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !5006
  store i64 %ptr.1, i64* %5, align 8, !dbg !5006
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !5007, metadata !DIExpression()), !dbg !5011
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !5011
  %ptr = bitcast [0 x i8]* %_12.0 to [4 x i32]*, !dbg !5006
  store [4 x i32]* %ptr, [4 x i32]** %ptr.dbg.spill4, align 8, !dbg !5006
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr.dbg.spill4, metadata !5013, metadata !DIExpression()), !dbg !5017
  %6 = bitcast i32** %self1 to [4 x i32]**, !dbg !5017
  store [4 x i32]* %ptr, [4 x i32]** %6, align 8, !dbg !5017
  %7 = bitcast i32** %self1 to [4 x i32]**, !dbg !5000
  %_16 = load [4 x i32]*, [4 x i32]** %7, align 8, !dbg !5000
  store [4 x i32]* %_16, [4 x i32]** %ptr.dbg.spill5, align 8, !dbg !5000
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr.dbg.spill5, metadata !5019, metadata !DIExpression()), !dbg !5023
  store [4 x i32]* %_16, [4 x i32]** %ptr.dbg.spill6, align 8, !dbg !5023
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr.dbg.spill6, metadata !5025, metadata !DIExpression()), !dbg !5029
  %8 = bitcast i32** %_17 to [4 x i32]**, !dbg !5029
  store [4 x i32]* %_16, [4 x i32]** %8, align 8, !dbg !5029
  %9 = load i32*, i32** %_17, align 8, !dbg !5023, !nonnull !23, !noundef !23
  store i32* %9, i32** %_4, align 8, !dbg !5023
  %10 = bitcast { i32*, i64 }* %self to i32**, !dbg !5031
  %11 = load i32*, i32** %_4, align 8, !dbg !5031, !nonnull !23, !noundef !23
  store i32* %11, i32** %10, align 8, !dbg !5031
  %12 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !5032
  store i64 %cap, i64* %12, align 8, !dbg !5032
  ret void, !dbg !5033
}

; alloc::raw_vec::RawVec<T,A>::set_ptr_and_cap
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17ha19e28773325831dE"({ i32*, i64 }* align 8 %self, i8* %ptr.0, i64 %ptr.1, i64 %cap) unnamed_addr #2 !dbg !5034 {
start:
  %ptr.dbg.spill6 = alloca i32*, align 8
  %ptr.dbg.spill5 = alloca i32*, align 8
  %ptr.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca { i8*, i64 }, align 8
  %self.dbg.spill2 = alloca { i8*, i64 }, align 8
  %cap.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_17 = alloca i32*, align 8
  %self1 = alloca i32*, align 8
  %_4 = alloca i32*, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !5038, metadata !DIExpression()), !dbg !5041
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !5039, metadata !DIExpression()), !dbg !5042
  store i64 %cap, i64* %cap.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !5040, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.declare(metadata i32** %self1, metadata !5044, metadata !DIExpression()), !dbg !5048
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 0, !dbg !5049
  store i8* %ptr.0, i8** %2, align 8, !dbg !5049
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill2, i32 0, i32 1, !dbg !5049
  store i64 %ptr.1, i64* %3, align 8, !dbg !5049
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill2, metadata !5050, metadata !DIExpression()), !dbg !5054
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 0, !dbg !5054
  store i8* %ptr.0, i8** %4, align 8, !dbg !5054
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill3, i32 0, i32 1, !dbg !5054
  store i64 %ptr.1, i64* %5, align 8, !dbg !5054
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill3, metadata !5055, metadata !DIExpression()), !dbg !5059
  %_12.0 = bitcast i8* %ptr.0 to [0 x i8]*, !dbg !5059
  %ptr = bitcast [0 x i8]* %_12.0 to i32*, !dbg !5054
  store i32* %ptr, i32** %ptr.dbg.spill4, align 8, !dbg !5054
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill4, metadata !5061, metadata !DIExpression()), !dbg !5065
  store i32* %ptr, i32** %self1, align 8, !dbg !5065
  %_16 = load i32*, i32** %self1, align 8, !dbg !5048
  store i32* %_16, i32** %ptr.dbg.spill5, align 8, !dbg !5048
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill5, metadata !5067, metadata !DIExpression()), !dbg !5071
  store i32* %_16, i32** %ptr.dbg.spill6, align 8, !dbg !5071
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill6, metadata !5073, metadata !DIExpression()), !dbg !5077
  store i32* %_16, i32** %_17, align 8, !dbg !5077
  %6 = load i32*, i32** %_17, align 8, !dbg !5071, !nonnull !23, !noundef !23
  store i32* %6, i32** %_4, align 8, !dbg !5071
  %7 = bitcast { i32*, i64 }* %self to i32**, !dbg !5079
  %8 = load i32*, i32** %_4, align 8, !dbg !5079, !nonnull !23, !noundef !23
  store i32* %8, i32** %7, align 8, !dbg !5079
  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %self, i32 0, i32 1, !dbg !5080
  store i64 %cap, i64* %9, align 8, !dbg !5080
  ret void, !dbg !5081
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define internal { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h7c0ceaff3c018d8bE"() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5082 {
start:
  %ptr.dbg.spill1 = alloca [4 x i32]*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca [4 x i32]*, align 8
  %1 = alloca [4 x i32]*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i32*, align 8
  %_2 = alloca i32*, align 8
  %2 = alloca { i32*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !5086, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.declare(metadata i32** %pointer, metadata !5088, metadata !DIExpression()), !dbg !5094
  store i64 4, i64* %addr.dbg.spill, align 8, !dbg !5100
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !5112, metadata !DIExpression()), !dbg !5118
  %3 = bitcast [4 x i32]** %1 to i64*, !dbg !5118
  store i64 4, i64* %3, align 8, !dbg !5118
  %ptr = load [4 x i32]*, [4 x i32]** %1, align 8, !dbg !5118
  store [4 x i32]* %ptr, [4 x i32]** %ptr.dbg.spill, align 8, !dbg !5118
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr.dbg.spill, metadata !5108, metadata !DIExpression()), !dbg !5120
  br label %bb3, !dbg !5118

bb3:                                              ; preds = %start
  store [4 x i32]* %ptr, [4 x i32]** %ptr.dbg.spill1, align 8, !dbg !5120
  call void @llvm.dbg.declare(metadata [4 x i32]** %ptr.dbg.spill1, metadata !5121, metadata !DIExpression()), !dbg !5125
  %4 = bitcast i32** %pointer to [4 x i32]**, !dbg !5125
  store [4 x i32]* %ptr, [4 x i32]** %4, align 8, !dbg !5125
  %_12 = load i32*, i32** %pointer, align 8, !dbg !5094, !nonnull !23, !noundef !23
  store i32* %_12, i32** %_2, align 8, !dbg !5094
  %5 = bitcast { i32*, i64 }* %2 to i32**, !dbg !5127
  %6 = load i32*, i32** %_2, align 8, !dbg !5127, !nonnull !23, !noundef !23
  store i32* %6, i32** %5, align 8, !dbg !5127
  %7 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !5127
  store i64 0, i64* %7, align 8, !dbg !5127
  %8 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !5127
  %9 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0, !dbg !5128
  %10 = load i32*, i32** %9, align 8, !dbg !5128, !nonnull !23, !noundef !23
  %11 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !5128
  %12 = load i64, i64* %11, align 8, !dbg !5128
  %13 = insertvalue { i32*, i64 } undef, i32* %10, 0, !dbg !5128
  %14 = insertvalue { i32*, i64 } %13, i64 %12, 1, !dbg !5128
  ret { i32*, i64 } %14, !dbg !5128

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !5129

bb2:                                              ; preds = %bb1
  %15 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5130
  %16 = load i8*, i8** %15, align 8, !dbg !5130
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5130
  %18 = load i32, i32* %17, align 8, !dbg !5130
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !5130
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !5130
  resume { i8*, i32 } %20, !dbg !5130
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: nonlazybind uwtable
define internal { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h8962c42da30eb302E"() unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5131 {
start:
  %ptr.dbg.spill1 = alloca i32*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %addr.dbg.spill = alloca i64, align 8
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %pointer = alloca i32*, align 8
  %_2 = alloca i32*, align 8
  %2 = alloca { i32*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !5135, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.declare(metadata i32** %pointer, metadata !5137, metadata !DIExpression()), !dbg !5143
  store i64 4, i64* %addr.dbg.spill, align 8, !dbg !5149
  call void @llvm.dbg.declare(metadata i64* %addr.dbg.spill, metadata !5161, metadata !DIExpression()), !dbg !5167
  %3 = bitcast i32** %1 to i64*, !dbg !5167
  store i64 4, i64* %3, align 8, !dbg !5167
  %ptr = load i32*, i32** %1, align 8, !dbg !5167
  store i32* %ptr, i32** %ptr.dbg.spill, align 8, !dbg !5167
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !5157, metadata !DIExpression()), !dbg !5169
  br label %bb3, !dbg !5167

bb3:                                              ; preds = %start
  store i32* %ptr, i32** %ptr.dbg.spill1, align 8, !dbg !5169
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill1, metadata !5170, metadata !DIExpression()), !dbg !5174
  store i32* %ptr, i32** %pointer, align 8, !dbg !5174
  %_12 = load i32*, i32** %pointer, align 8, !dbg !5143, !nonnull !23, !noundef !23
  store i32* %_12, i32** %_2, align 8, !dbg !5143
  %4 = bitcast { i32*, i64 }* %2 to i32**, !dbg !5176
  %5 = load i32*, i32** %_2, align 8, !dbg !5176, !nonnull !23, !noundef !23
  store i32* %5, i32** %4, align 8, !dbg !5176
  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !5176
  store i64 0, i64* %6, align 8, !dbg !5176
  %7 = bitcast { i32*, i64 }* %2 to %"alloc::alloc::Global"*, !dbg !5176
  %8 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 0, !dbg !5177
  %9 = load i32*, i32** %8, align 8, !dbg !5177, !nonnull !23, !noundef !23
  %10 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %2, i32 0, i32 1, !dbg !5177
  %11 = load i64, i64* %10, align 8, !dbg !5177
  %12 = insertvalue { i32*, i64 } undef, i32* %9, 0, !dbg !5177
  %13 = insertvalue { i32*, i64 } %12, i64 %11, 1, !dbg !5177
  ret { i32*, i64 } %13, !dbg !5177

bb1:                                              ; No predecessors!
  br label %bb2, !dbg !5178

bb2:                                              ; preds = %bb1
  %14 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5179
  %15 = load i8*, i8** %14, align 8, !dbg !5179
  %16 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5179
  %17 = load i32, i32* %16, align 8, !dbg !5179
  %18 = insertvalue { i8*, i32 } undef, i8* %15, 0, !dbg !5179
  %19 = insertvalue { i8*, i32 } %18, i32 %17, 1, !dbg !5179
  resume { i8*, i32 } %19, !dbg !5179
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h5b88c90a43b306c3E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !5180 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !5184, metadata !DIExpression()), !dbg !5187
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5185, metadata !DIExpression()), !dbg !5188
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5186, metadata !DIExpression()), !dbg !5189
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0fd81797fb688b00E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5190
  br label %bb1, !dbg !5190

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !5190

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5191

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h72b7df1220910533E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5192
  br label %bb3, !dbg !5192

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5193
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hfc2e4c7088dac924E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !5194 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !5198, metadata !DIExpression()), !dbg !5201
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5199, metadata !DIExpression()), !dbg !5202
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5200, metadata !DIExpression()), !dbg !5203
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hb3ddb38702e268e3E"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5204
  br label %bb1, !dbg !5204

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !5204

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5205

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h97d2cb74cae62b3dE"({ i32*, i64 }* align 8 %self, i64 %len, i64 %additional), !dbg !5206
  br label %bb3, !dbg !5206

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5207
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h72b7df1220910533E"({ i32*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #4 !dbg !5208 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %slf, { i32*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %slf.dbg.spill, metadata !5212, metadata !DIExpression()), !dbg !5215
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5213, metadata !DIExpression()), !dbg !5216
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5214, metadata !DIExpression()), !dbg !5217
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hc7bf6c415bcd1c40E"({ i32*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !5218
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !5218
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !5218
  br label %bb1, !dbg !5218

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha311a99c3665fe3bE(i64 %_5.0, i64 %_5.1), !dbg !5219
  br label %bb2, !dbg !5219

bb2:                                              ; preds = %bb1
  ret void, !dbg !5220
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define internal void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h97d2cb74cae62b3dE"({ i32*, i64 }* align 8 %slf, i64 %len, i64 %additional) unnamed_addr #4 !dbg !5221 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i32*, i64 }*, align 8
  store { i32*, i64 }* %slf, { i32*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %slf.dbg.spill, metadata !5223, metadata !DIExpression()), !dbg !5226
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5224, metadata !DIExpression()), !dbg !5227
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !5225, metadata !DIExpression()), !dbg !5228
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hc8b5d931c4c7ec70E"({ i32*, i64 }* align 8 %slf, i64 %len, i64 %additional), !dbg !5229
  %_5.0 = extractvalue { i64, i64 } %0, 0, !dbg !5229
  %_5.1 = extractvalue { i64, i64 } %0, 1, !dbg !5229
  br label %bb1, !dbg !5229

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha311a99c3665fe3bE(i64 %_5.0, i64 %_5.1), !dbg !5230
  br label %bb2, !dbg !5230

bb2:                                              ; preds = %bb1
  ret void, !dbg !5231
}

; <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h3de17457e0983c6bE"(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %0, i32 %1, i64 %n) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5232 {
start:
  %capacity.dbg.spill5 = alloca i64, align 8
  %capacity.dbg.spill4 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %2 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill3 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill2 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill1 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %n.dbg.spill = alloca i64, align 8
  %_27 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %_19 = alloca i8, align 1
  %_18 = alloca i8, align 1
  %_16 = alloca i32, align 4
  %v = alloca %"alloc::vec::Vec<i32>", align 8
  %elem = alloca i32, align 4
  store i32 %1, i32* %elem, align 4
  call void @llvm.dbg.declare(metadata i32* %elem, metadata !5239, metadata !DIExpression()), !dbg !5244
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5240, metadata !DIExpression()), !dbg !5245
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !5241, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill1, metadata !5247, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"* %v, metadata !5242, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill2, metadata !5257, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill3, metadata !5266, metadata !DIExpression()), !dbg !5271
  store i8 1, i8* %_19, align 1, !dbg !5273
  store i8 1, i8* %_18, align 1, !dbg !5273
; invoke <i32 as alloc::vec::is_zero::IsZero>::is_zero
  %_4 = invoke zeroext i1 @"_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17hd885cb56167bc602E"(i32* align 4 %elem)
          to label %bb1 unwind label %cleanup, !dbg !5274

bb10:                                             ; preds = %bb6, %cleanup
  %3 = load i8, i8* %_18, align 1, !dbg !5275, !range !680, !noundef !23
  %4 = trunc i8 %3 to i1, !dbg !5275
  br i1 %4, label %bb9, label %bb7, !dbg !5275

cleanup:                                          ; preds = %bb3, %bb2, %start
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %7, i32* %9, align 8
  br label %bb10

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !5274

bb3:                                              ; preds = %bb1
  store i64 %n, i64* %capacity.dbg.spill4, align 8, !dbg !5276
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill4, metadata !5263, metadata !DIExpression()), !dbg !5264
  store i8 0, i8* %_18, align 1, !dbg !5277
  store i64 %n, i64* %capacity.dbg.spill5, align 8, !dbg !5264
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill5, metadata !5270, metadata !DIExpression()), !dbg !5271
  store i8 0, i8* %_27, align 1, !dbg !5271
  %10 = load i8, i8* %_27, align 1, !dbg !5271, !range !680, !noundef !23
  %11 = trunc i8 %10 to i1, !dbg !5271
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %12 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17he28e0d938b333ed2E"(i64 %n, i1 zeroext %11)
          to label %bb13 unwind label %cleanup, !dbg !5271

bb2:                                              ; preds = %bb1
  store i64 %n, i64* %capacity.dbg.spill, align 8, !dbg !5278
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !5253, metadata !DIExpression()), !dbg !5254
  store i8 0, i8* %_18, align 1, !dbg !5279
  store i8 1, i8* %_21, align 1, !dbg !5254
  %13 = load i8, i8* %_21, align 1, !dbg !5254, !range !680, !noundef !23
  %14 = trunc i8 %13 to i1, !dbg !5254
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %15 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17he28e0d938b333ed2E"(i64 %n, i1 zeroext %14)
          to label %bb12 unwind label %cleanup, !dbg !5254

bb12:                                             ; preds = %bb2
  %_6.0 = extractvalue { i32*, i64 } %15, 0, !dbg !5254
  %_6.1 = extractvalue { i32*, i64 } %15, 1, !dbg !5254
  %16 = bitcast %"alloc::vec::Vec<i32>"* %0 to { i32*, i64 }*, !dbg !5280
  %17 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %16, i32 0, i32 0, !dbg !5280
  store i32* %_6.0, i32** %17, align 8, !dbg !5280
  %18 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %16, i32 0, i32 1, !dbg !5280
  store i64 %_6.1, i64* %18, align 8, !dbg !5280
  %19 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %0, i32 0, i32 1, !dbg !5280
  store i64 %n, i64* %19, align 8, !dbg !5280
  br label %bb5, !dbg !5275

bb5:                                              ; preds = %bb4, %bb12
  ret void, !dbg !5281

bb13:                                             ; preds = %bb3
  %_23.0 = extractvalue { i32*, i64 } %12, 0, !dbg !5271
  %_23.1 = extractvalue { i32*, i64 } %12, 1, !dbg !5271
  %20 = bitcast %"alloc::vec::Vec<i32>"* %v to { i32*, i64 }*, !dbg !5264
  %21 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %20, i32 0, i32 0, !dbg !5264
  store i32* %_23.0, i32** %21, align 8, !dbg !5264
  %22 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %20, i32 0, i32 1, !dbg !5264
  store i64 %_23.1, i64* %22, align 8, !dbg !5264
  %23 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %v, i32 0, i32 1, !dbg !5264
  store i64 0, i64* %23, align 8, !dbg !5264
  store i8 0, i8* %_19, align 1, !dbg !5282
  %_17 = load i32, i32* %elem, align 4, !dbg !5282
  store i32 %_17, i32* %_16, align 4, !dbg !5283
  %24 = load i32, i32* %_16, align 4, !dbg !5284
; invoke alloc::vec::Vec<T,A>::extend_with
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17hcaee78540f1aac09E"(%"alloc::vec::Vec<i32>"* align 8 %v, i64 %n, i32 %24)
          to label %bb4 unwind label %cleanup6, !dbg !5284

bb6:                                              ; preds = %cleanup6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17hc42f131b2d017f6fE"(%"alloc::vec::Vec<i32>"* %v) #17
          to label %bb10 unwind label %abort, !dbg !5275

cleanup6:                                         ; preds = %bb13
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1
  store i32 %27, i32* %29, align 8
  br label %bb6

bb4:                                              ; preds = %bb13
  %30 = bitcast %"alloc::vec::Vec<i32>"* %0 to i8*, !dbg !5285
  %31 = bitcast %"alloc::vec::Vec<i32>"* %v to i8*, !dbg !5285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false), !dbg !5285
  br label %bb5, !dbg !5275

abort:                                            ; preds = %bb6
  %32 = landingpad { i8*, i32 }
          cleanup, !dbg !5286
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #18, !dbg !5286
  unreachable, !dbg !5286

bb7:                                              ; preds = %bb9, %bb10
  %33 = load i8, i8* %_19, align 1, !dbg !5275, !range !680, !noundef !23
  %34 = trunc i8 %33 to i1, !dbg !5275
  br i1 %34, label %bb11, label %bb8, !dbg !5275

bb9:                                              ; preds = %bb10
  br label %bb7, !dbg !5275

bb8:                                              ; preds = %bb11, %bb7
  %35 = bitcast { i8*, i32 }* %2 to i8**, !dbg !5286
  %36 = load i8*, i8** %35, align 8, !dbg !5286
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %2, i32 0, i32 1, !dbg !5286
  %38 = load i32, i32* %37, align 8, !dbg !5286
  %39 = insertvalue { i8*, i32 } undef, i8* %36, 0, !dbg !5286
  %40 = insertvalue { i8*, i32 } %39, i32 %38, 1, !dbg !5286
  resume { i8*, i32 } %40, !dbg !5286

bb11:                                             ; preds = %bb7
  br label %bb8, !dbg !5275
}

; <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17he692ac74cb4b7798E"(%"alloc::vec::Vec<[i32; 4]>"* sret(%"alloc::vec::Vec<[i32; 4]>") %0, [4 x i32]* %elem, i64 %n) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5287 {
start:
  %capacity.dbg.spill5 = alloca i64, align 8
  %capacity.dbg.spill4 = alloca i64, align 8
  %capacity.dbg.spill = alloca i64, align 8
  %1 = alloca { i8*, i32 }, align 8
  %alloc.dbg.spill3 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill2 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill1 = alloca %"alloc::alloc::Global", align 1
  %alloc.dbg.spill = alloca %"alloc::alloc::Global", align 1
  %n.dbg.spill = alloca i64, align 8
  %_27 = alloca i8, align 1
  %_21 = alloca i8, align 1
  %_19 = alloca i8, align 1
  %_18 = alloca i8, align 1
  %_17 = alloca [4 x i32], align 4
  %_16 = alloca %"alloc::vec::ExtendElement<[i32; 4]>", align 4
  %v = alloca %"alloc::vec::Vec<[i32; 4]>", align 8
  call void @llvm.dbg.declare(metadata [4 x i32]* %elem, metadata !5291, metadata !DIExpression()), !dbg !5296
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5292, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill, metadata !5293, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill1, metadata !5299, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<[i32; 4]>"* %v, metadata !5294, metadata !DIExpression()), !dbg !5308
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill2, metadata !5309, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"* %alloc.dbg.spill3, metadata !5318, metadata !DIExpression()), !dbg !5323
  store i8 1, i8* %_19, align 1, !dbg !5325
  store i8 1, i8* %_18, align 1, !dbg !5325
; invoke <[T; N] as alloc::vec::is_zero::IsZero>::is_zero
  %_4 = invoke zeroext i1 @"_ZN70_$LT$$u5b$T$u3b$$u20$N$u5d$$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17h4e5a7a79206ce1b1E"([4 x i32]* align 4 %elem)
          to label %bb1 unwind label %cleanup, !dbg !5326

bb10:                                             ; preds = %bb6, %cleanup
  %2 = load i8, i8* %_18, align 1, !dbg !5327, !range !680, !noundef !23
  %3 = trunc i8 %2 to i1, !dbg !5327
  br i1 %3, label %bb9, label %bb7, !dbg !5327

cleanup:                                          ; preds = %bb3, %bb2, %start
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %6, i32* %8, align 8
  br label %bb10

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !5326

bb3:                                              ; preds = %bb1
  store i64 %n, i64* %capacity.dbg.spill4, align 8, !dbg !5328
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill4, metadata !5315, metadata !DIExpression()), !dbg !5316
  store i8 0, i8* %_18, align 1, !dbg !5329
  store i64 %n, i64* %capacity.dbg.spill5, align 8, !dbg !5316
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill5, metadata !5322, metadata !DIExpression()), !dbg !5323
  store i8 0, i8* %_27, align 1, !dbg !5323
  %9 = load i8, i8* %_27, align 1, !dbg !5323, !range !680, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !5323
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %11 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h24290be57d8c1c16E"(i64 %n, i1 zeroext %10)
          to label %bb13 unwind label %cleanup, !dbg !5323

bb2:                                              ; preds = %bb1
  store i64 %n, i64* %capacity.dbg.spill, align 8, !dbg !5330
  call void @llvm.dbg.declare(metadata i64* %capacity.dbg.spill, metadata !5305, metadata !DIExpression()), !dbg !5306
  store i8 0, i8* %_18, align 1, !dbg !5331
  store i8 1, i8* %_21, align 1, !dbg !5306
  %12 = load i8, i8* %_21, align 1, !dbg !5306, !range !680, !noundef !23
  %13 = trunc i8 %12 to i1, !dbg !5306
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %14 = invoke { i32*, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h24290be57d8c1c16E"(i64 %n, i1 zeroext %13)
          to label %bb12 unwind label %cleanup, !dbg !5306

bb12:                                             ; preds = %bb2
  %_6.0 = extractvalue { i32*, i64 } %14, 0, !dbg !5306
  %_6.1 = extractvalue { i32*, i64 } %14, 1, !dbg !5306
  %15 = bitcast %"alloc::vec::Vec<[i32; 4]>"* %0 to { i32*, i64 }*, !dbg !5332
  %16 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %15, i32 0, i32 0, !dbg !5332
  store i32* %_6.0, i32** %16, align 8, !dbg !5332
  %17 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %15, i32 0, i32 1, !dbg !5332
  store i64 %_6.1, i64* %17, align 8, !dbg !5332
  %18 = getelementptr inbounds %"alloc::vec::Vec<[i32; 4]>", %"alloc::vec::Vec<[i32; 4]>"* %0, i32 0, i32 1, !dbg !5332
  store i64 %n, i64* %18, align 8, !dbg !5332
  br label %bb5, !dbg !5327

bb5:                                              ; preds = %bb4, %bb12
  ret void, !dbg !5333

bb13:                                             ; preds = %bb3
  %_23.0 = extractvalue { i32*, i64 } %11, 0, !dbg !5323
  %_23.1 = extractvalue { i32*, i64 } %11, 1, !dbg !5323
  %19 = bitcast %"alloc::vec::Vec<[i32; 4]>"* %v to { i32*, i64 }*, !dbg !5316
  %20 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %19, i32 0, i32 0, !dbg !5316
  store i32* %_23.0, i32** %20, align 8, !dbg !5316
  %21 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %19, i32 0, i32 1, !dbg !5316
  store i64 %_23.1, i64* %21, align 8, !dbg !5316
  %22 = getelementptr inbounds %"alloc::vec::Vec<[i32; 4]>", %"alloc::vec::Vec<[i32; 4]>"* %v, i32 0, i32 1, !dbg !5316
  store i64 0, i64* %22, align 8, !dbg !5316
  store i8 0, i8* %_19, align 1, !dbg !5334
  %23 = bitcast [4 x i32]* %_17 to i8*, !dbg !5334
  %24 = bitcast [4 x i32]* %elem to i8*, !dbg !5334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 16, i1 false), !dbg !5334
  %25 = bitcast %"alloc::vec::ExtendElement<[i32; 4]>"* %_16 to [4 x i32]*, !dbg !5335
  %26 = bitcast [4 x i32]* %25 to i8*, !dbg !5335
  %27 = bitcast [4 x i32]* %_17 to i8*, !dbg !5335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 16, i1 false), !dbg !5335
; invoke alloc::vec::Vec<T,A>::extend_with
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17h26b5e96f38a5fe17E"(%"alloc::vec::Vec<[i32; 4]>"* align 8 %v, i64 %n, %"alloc::vec::ExtendElement<[i32; 4]>"* %_16)
          to label %bb4 unwind label %cleanup6, !dbg !5336

bb6:                                              ; preds = %cleanup6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<[i32; 4]>>
  invoke void @"_ZN4core3ptr68drop_in_place$LT$alloc..vec..Vec$LT$$u5b$i32$u3b$$u20$4$u5d$$GT$$GT$17hf07e1a2a4e158af9E"(%"alloc::vec::Vec<[i32; 4]>"* %v) #17
          to label %bb10 unwind label %abort, !dbg !5327

cleanup6:                                         ; preds = %bb13
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  %31 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1
  store i32 %30, i32* %32, align 8
  br label %bb6

bb4:                                              ; preds = %bb13
  %33 = bitcast %"alloc::vec::Vec<[i32; 4]>"* %0 to i8*, !dbg !5337
  %34 = bitcast %"alloc::vec::Vec<[i32; 4]>"* %v to i8*, !dbg !5337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false), !dbg !5337
  br label %bb5, !dbg !5327

abort:                                            ; preds = %bb6
  %35 = landingpad { i8*, i32 }
          cleanup, !dbg !5338
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #18, !dbg !5338
  unreachable, !dbg !5338

bb7:                                              ; preds = %bb9, %bb10
  %36 = load i8, i8* %_19, align 1, !dbg !5327, !range !680, !noundef !23
  %37 = trunc i8 %36 to i1, !dbg !5327
  br i1 %37, label %bb11, label %bb8, !dbg !5327

bb9:                                              ; preds = %bb10
  br label %bb7, !dbg !5327

bb8:                                              ; preds = %bb11, %bb7
  %38 = bitcast { i8*, i32 }* %1 to i8**, !dbg !5338
  %39 = load i8*, i8** %38, align 8, !dbg !5338
  %40 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %1, i32 0, i32 1, !dbg !5338
  %41 = load i32, i32* %40, align 8, !dbg !5338
  %42 = insertvalue { i8*, i32 } undef, i8* %39, 0, !dbg !5338
  %43 = insertvalue { i8*, i32 } %42, i32 %41, 1, !dbg !5338
  resume { i8*, i32 } %43, !dbg !5338

bb11:                                             ; preds = %bb7
  br label %bb8, !dbg !5327
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7464d1bc1bb9736aE"(i32 %self.0, i32 %self.1) unnamed_addr #0 !dbg !5339 {
start:
  %self.dbg.spill = alloca { i32, i32 }, align 4
  %0 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self.dbg.spill, i32 0, i32 0
  store i32 %self.0, i32* %0, align 4
  %1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self.dbg.spill, i32 0, i32 1
  store i32 %self.1, i32* %1, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self.dbg.spill, metadata !5343, metadata !DIExpression()), !dbg !5346
  %2 = insertvalue { i32, i32 } undef, i32 %self.0, 0, !dbg !5347
  %3 = insertvalue { i32, i32 } %2, i32 %self.1, 1, !dbg !5347
  ret { i32, i32 } %3, !dbg !5347
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32*, i32* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha0c076b82c67d947E"(i32* %self.0, i32* %self.1) unnamed_addr #0 !dbg !5348 {
start:
  %self.dbg.spill = alloca { i32*, i32* }, align 8
  %0 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self.dbg.spill, i32 0, i32 0
  store i32* %self.0, i32** %0, align 8
  %1 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self.dbg.spill, i32 0, i32 1
  store i32* %self.1, i32** %1, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }* %self.dbg.spill, metadata !5352, metadata !DIExpression()), !dbg !5354
  %2 = insertvalue { i32*, i32* } undef, i32* %self.0, 0, !dbg !5355
  %3 = insertvalue { i32*, i32* } %2, i32* %self.1, 1, !dbg !5355
  ret { i32*, i32* } %3, !dbg !5355
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb906d45d6c85ec06E"(i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !5356 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !5358, metadata !DIExpression()), !dbg !5359
  %2 = insertvalue { i64, i64 } undef, i64 %self.0, 0, !dbg !5360
  %3 = insertvalue { i64, i64 } %2, i64 %self.1, 1, !dbg !5360
  ret { i64, i64 } %3, !dbg !5360
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h457dcd0077543f47E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !5361 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill8 = alloca { i64, i64 }*, align 8
  %self.dbg.spill7 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill5 = alloca i8*, align 8
  %self.dbg.spill4 = alloca { i64, i64 }*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  %self3 = alloca i64, align 8
  %self2 = alloca i64, align 8
  %layout1 = alloca { i64, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !5366, metadata !DIExpression()), !dbg !5369
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5367, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !5368, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout1, metadata !5372, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.declare(metadata i64* %self2, metadata !5380, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.declare(metadata i64* %self3, metadata !5391, metadata !DIExpression()), !dbg !5395
  store { i64, i64 }* %layout, { i64, i64 }** %self.dbg.spill4, align 8, !dbg !5396
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill4, metadata !5397, metadata !DIExpression()), !dbg !5401
  %4 = bitcast { i64, i64 }* %layout to i64*, !dbg !5401
  %_4 = load i64, i64* %4, align 8, !dbg !5401
  %5 = icmp eq i64 %_4, 0, !dbg !5396
  br i1 %5, label %bb2, label %bb1, !dbg !5396

bb2:                                              ; preds = %start
  br label %bb3, !dbg !5402

bb1:                                              ; preds = %start
  store i8* %ptr, i8** %self.dbg.spill5, align 8, !dbg !5403
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill5, metadata !5404, metadata !DIExpression()), !dbg !5408
  store i8* %ptr, i8** %ptr.dbg.spill6, align 8, !dbg !5408
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill6, metadata !5377, metadata !DIExpression()), !dbg !5378
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !5409
  %7 = load i64, i64* %6, align 8, !dbg !5409
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !5409
  %9 = load i64, i64* %8, align 8, !dbg !5409, !range !1671, !noundef !23
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 0, !dbg !5409
  store i64 %7, i64* %10, align 8, !dbg !5409
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !5409
  store i64 %9, i64* %11, align 8, !dbg !5409
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill7, align 8, !dbg !5378
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill7, metadata !5410, metadata !DIExpression()), !dbg !5414
  %12 = bitcast { i64, i64 }* %layout1 to i64*, !dbg !5414
  %_11 = load i64, i64* %12, align 8, !dbg !5414
  store { i64, i64 }* %layout1, { i64, i64 }** %self.dbg.spill8, align 8, !dbg !5378
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill8, metadata !5388, metadata !DIExpression()), !dbg !5416
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout1, i32 0, i32 1, !dbg !5416
  %14 = load i64, i64* %13, align 8, !dbg !5416, !range !1671, !noundef !23
  store i64 %14, i64* %self3, align 8, !dbg !5416
  %_18 = load i64, i64* %self3, align 8, !dbg !5395, !range !1671, !noundef !23
  store i64 %_18, i64* %n.dbg.spill, align 8, !dbg !5395
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5417, metadata !DIExpression()), !dbg !5424
  store i64 %_18, i64* %self2, align 8, !dbg !5424
  %_13 = load i64, i64* %self2, align 8, !dbg !5384
  call void @__rust_dealloc(i8* %ptr, i64 %_11, i64 %_13) #19, !dbg !5378
  br label %bb4, !dbg !5378

bb4:                                              ; preds = %bb1
  br label %bb3, !dbg !5402

bb3:                                              ; preds = %bb2, %bb4
  ret void, !dbg !5426
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb5e6bf8eb8b388aeE"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !5427 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !5431, metadata !DIExpression()), !dbg !5433
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !5432, metadata !DIExpression()), !dbg !5434
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h949f8c49fad503faE(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true), !dbg !5435
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !5435
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !5435
  br label %bb1, !dbg !5435

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !5436
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !5436
  ret { i8*, i64 } %6, !dbg !5436
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hf95103a25a543279E"(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !5437 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !5441, metadata !DIExpression()), !dbg !5445
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5442, metadata !DIExpression()), !dbg !5446
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !5443, metadata !DIExpression()), !dbg !5447
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !5444, metadata !DIExpression()), !dbg !5448
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17h08d1759a819f42feE(%"alloc::alloc::Global"* align 1 %self, i8* %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !5449
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !5449
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !5449
  br label %bb1, !dbg !5449

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !5450
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !5450
  ret { i8*, i64 } %8, !dbg !5450
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hfe7a04e7bb290008E"(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !5451 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"alloc::alloc::Global"*, align 8
  store %"alloc::alloc::Global"* %self, %"alloc::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::alloc::Global"** %self.dbg.spill, metadata !5453, metadata !DIExpression()), !dbg !5455
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !5454, metadata !DIExpression()), !dbg !5456
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h949f8c49fad503faE(%"alloc::alloc::Global"* align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !5457
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !5457
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !5457
  br label %bb1, !dbg !5457

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !5458
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !5458
  ret { i8*, i64 } %6, !dbg !5458
}

; <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h25ffee337b5d26ffE"([3 x i32]* align 4 %a, [3 x i32]* align 4 %b) unnamed_addr #2 !dbg !5459 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill2 = alloca [3 x i32]*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %b.dbg.spill = alloca [3 x i32]*, align 8
  %a.dbg.spill = alloca [3 x i32]*, align 8
  store [3 x i32]* %a, [3 x i32]** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i32]** %a.dbg.spill, metadata !5462, metadata !DIExpression()), !dbg !5466
  store [3 x i32]* %b, [3 x i32]** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i32]** %b.dbg.spill, metadata !5463, metadata !DIExpression()), !dbg !5467
  %self.0 = bitcast [3 x i32]* %b to [0 x i32]*, !dbg !5468
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !5468
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !5468
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !5468
  store i64 3, i64* %2, align 8, !dbg !5468
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !5469, metadata !DIExpression()), !dbg !5473
  %self = bitcast [0 x i32]* %self.0 to i32*, !dbg !5473
  store i32* %self, i32** %self.dbg.spill1, align 8, !dbg !5473
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !5474, metadata !DIExpression()), !dbg !5482
  %_4 = bitcast i32* %self to [3 x i32]*, !dbg !5482
  store [3 x i32]* %_4, [3 x i32]** %b.dbg.spill2, align 8, !dbg !5483
  call void @llvm.dbg.declare(metadata [3 x i32]** %b.dbg.spill2, metadata !5464, metadata !DIExpression()), !dbg !5484
  %3 = bitcast [3 x i32]* %a to i96*, !dbg !5485
  %4 = load i96, i96* %3, align 4, !dbg !5485
  %5 = bitcast [3 x i32]* %_4 to i96*, !dbg !5485
  %6 = load i96, i96* %5, align 4, !dbg !5485
  %7 = icmp eq i96 %4, %6, !dbg !5485
  %8 = zext i1 %7 to i8, !dbg !5485
  store i8 %8, i8* %0, align 1, !dbg !5485
  %9 = load i8, i8* %0, align 1, !dbg !5485, !range !680, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !5485
  br label %bb1, !dbg !5485

bb1:                                              ; preds = %start
  ret i1 %10, !dbg !5486
}

; <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h3c017ad696ca7813E"([1 x i32]* align 4 %a, [1 x i32]* align 4 %b) unnamed_addr #2 !dbg !5487 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill2 = alloca [1 x i32]*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %b.dbg.spill = alloca [1 x i32]*, align 8
  %a.dbg.spill = alloca [1 x i32]*, align 8
  store [1 x i32]* %a, [1 x i32]** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i32]** %a.dbg.spill, metadata !5489, metadata !DIExpression()), !dbg !5493
  store [1 x i32]* %b, [1 x i32]** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i32]** %b.dbg.spill, metadata !5490, metadata !DIExpression()), !dbg !5494
  %self.0 = bitcast [1 x i32]* %b to [0 x i32]*, !dbg !5495
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !5495
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !5495
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !5495
  store i64 1, i64* %2, align 8, !dbg !5495
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !5496, metadata !DIExpression()), !dbg !5500
  %self = bitcast [0 x i32]* %self.0 to i32*, !dbg !5500
  store i32* %self, i32** %self.dbg.spill1, align 8, !dbg !5500
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !5501, metadata !DIExpression()), !dbg !5509
  %_4 = bitcast i32* %self to [1 x i32]*, !dbg !5509
  store [1 x i32]* %_4, [1 x i32]** %b.dbg.spill2, align 8, !dbg !5510
  call void @llvm.dbg.declare(metadata [1 x i32]** %b.dbg.spill2, metadata !5491, metadata !DIExpression()), !dbg !5511
  %3 = bitcast [1 x i32]* %a to i32*, !dbg !5512
  %4 = load i32, i32* %3, align 4, !dbg !5512
  %5 = bitcast [1 x i32]* %_4 to i32*, !dbg !5512
  %6 = load i32, i32* %5, align 4, !dbg !5512
  %7 = icmp eq i32 %4, %6, !dbg !5512
  %8 = zext i1 %7 to i8, !dbg !5512
  store i8 %8, i8* %0, align 1, !dbg !5512
  %9 = load i8, i8* %0, align 1, !dbg !5512, !range !680, !noundef !23
  %10 = trunc i8 %9 to i1, !dbg !5512
  br label %bb1, !dbg !5512

bb1:                                              ; preds = %start
  ret i1 %10, !dbg !5513
}

; <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h3d79f9b6c556ee67E"([6 x i32]* align 4 %a, [6 x i32]* align 4 %b) unnamed_addr #2 !dbg !5514 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill2 = alloca [6 x i32]*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %b.dbg.spill = alloca [6 x i32]*, align 8
  %a.dbg.spill = alloca [6 x i32]*, align 8
  store [6 x i32]* %a, [6 x i32]** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i32]** %a.dbg.spill, metadata !5516, metadata !DIExpression()), !dbg !5520
  store [6 x i32]* %b, [6 x i32]** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i32]** %b.dbg.spill, metadata !5517, metadata !DIExpression()), !dbg !5521
  %self.0 = bitcast [6 x i32]* %b to [0 x i32]*, !dbg !5522
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !5522
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !5522
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !5522
  store i64 6, i64* %2, align 8, !dbg !5522
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !5523, metadata !DIExpression()), !dbg !5527
  %self = bitcast [0 x i32]* %self.0 to i32*, !dbg !5527
  store i32* %self, i32** %self.dbg.spill1, align 8, !dbg !5527
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !5528, metadata !DIExpression()), !dbg !5536
  %_4 = bitcast i32* %self to [6 x i32]*, !dbg !5536
  store [6 x i32]* %_4, [6 x i32]** %b.dbg.spill2, align 8, !dbg !5537
  call void @llvm.dbg.declare(metadata [6 x i32]** %b.dbg.spill2, metadata !5518, metadata !DIExpression()), !dbg !5538
  %3 = bitcast [6 x i32]* %a to i8*, !dbg !5539
  %4 = bitcast [6 x i32]* %_4 to i8*, !dbg !5539
  %5 = call i32 @memcmp(i8* %3, i8* %4, i64 24), !dbg !5539
  %6 = icmp eq i32 %5, 0, !dbg !5539
  %7 = zext i1 %6 to i8, !dbg !5539
  store i8 %7, i8* %0, align 1, !dbg !5539
  %8 = load i8, i8* %0, align 1, !dbg !5539, !range !680, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !5539
  br label %bb1, !dbg !5539

bb1:                                              ; preds = %start
  ret i1 %9, !dbg !5540
}

; <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h4daae926dd5717a6E"([5 x i32]* align 4 %a, [5 x i32]* align 4 %b) unnamed_addr #2 !dbg !5541 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill2 = alloca [5 x i32]*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %b.dbg.spill = alloca [5 x i32]*, align 8
  %a.dbg.spill = alloca [5 x i32]*, align 8
  store [5 x i32]* %a, [5 x i32]** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]** %a.dbg.spill, metadata !5543, metadata !DIExpression()), !dbg !5547
  store [5 x i32]* %b, [5 x i32]** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i32]** %b.dbg.spill, metadata !5544, metadata !DIExpression()), !dbg !5548
  %self.0 = bitcast [5 x i32]* %b to [0 x i32]*, !dbg !5549
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !5549
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !5549
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !5549
  store i64 5, i64* %2, align 8, !dbg !5549
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !5550, metadata !DIExpression()), !dbg !5554
  %self = bitcast [0 x i32]* %self.0 to i32*, !dbg !5554
  store i32* %self, i32** %self.dbg.spill1, align 8, !dbg !5554
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !5555, metadata !DIExpression()), !dbg !5563
  %_4 = bitcast i32* %self to [5 x i32]*, !dbg !5563
  store [5 x i32]* %_4, [5 x i32]** %b.dbg.spill2, align 8, !dbg !5564
  call void @llvm.dbg.declare(metadata [5 x i32]** %b.dbg.spill2, metadata !5545, metadata !DIExpression()), !dbg !5565
  %3 = bitcast [5 x i32]* %a to i8*, !dbg !5566
  %4 = bitcast [5 x i32]* %_4 to i8*, !dbg !5566
  %5 = call i32 @memcmp(i8* %3, i8* %4, i64 20), !dbg !5566
  %6 = icmp eq i32 %5, 0, !dbg !5566
  %7 = zext i1 %6 to i8, !dbg !5566
  store i8 %7, i8* %0, align 1, !dbg !5566
  %8 = load i8, i8* %0, align 1, !dbg !5566, !range !680, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !5566
  br label %bb1, !dbg !5566

bb1:                                              ; preds = %start
  ret i1 %9, !dbg !5567
}

; <T as core::array::equality::SpecArrayEq<U,_>>::spec_eq
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @"_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17hacddd80052b2be27E"([10 x i32]* align 4 %a, [10 x i32]* align 4 %b) unnamed_addr #2 !dbg !5568 {
start:
  %0 = alloca i8, align 1
  %b.dbg.spill2 = alloca [10 x i32]*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %self.dbg.spill = alloca { [0 x i32]*, i64 }, align 8
  %b.dbg.spill = alloca [10 x i32]*, align 8
  %a.dbg.spill = alloca [10 x i32]*, align 8
  store [10 x i32]* %a, [10 x i32]** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i32]** %a.dbg.spill, metadata !5570, metadata !DIExpression()), !dbg !5574
  store [10 x i32]* %b, [10 x i32]** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i32]** %b.dbg.spill, metadata !5571, metadata !DIExpression()), !dbg !5575
  %self.0 = bitcast [10 x i32]* %b to [0 x i32]*, !dbg !5576
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 0, !dbg !5576
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !5576
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill, i32 0, i32 1, !dbg !5576
  store i64 10, i64* %2, align 8, !dbg !5576
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill, metadata !5577, metadata !DIExpression()), !dbg !5581
  %self = bitcast [0 x i32]* %self.0 to i32*, !dbg !5581
  store i32* %self, i32** %self.dbg.spill1, align 8, !dbg !5581
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !5582, metadata !DIExpression()), !dbg !5590
  %_4 = bitcast i32* %self to [10 x i32]*, !dbg !5590
  store [10 x i32]* %_4, [10 x i32]** %b.dbg.spill2, align 8, !dbg !5591
  call void @llvm.dbg.declare(metadata [10 x i32]** %b.dbg.spill2, metadata !5572, metadata !DIExpression()), !dbg !5592
  %3 = bitcast [10 x i32]* %a to i8*, !dbg !5593
  %4 = bitcast [10 x i32]* %_4 to i8*, !dbg !5593
  %5 = call i32 @memcmp(i8* %3, i8* %4, i64 40), !dbg !5593
  %6 = icmp eq i32 %5, 0, !dbg !5593
  %7 = zext i1 %6 to i8, !dbg !5593
  store i8 %7, i8* %0, align 1, !dbg !5593
  %8 = load i8, i8* %0, align 1, !dbg !5593, !range !680, !noundef !23
  %9 = trunc i8 %8 to i1, !dbg !5593
  br label %bb1, !dbg !5593

bb1:                                              ; preds = %start
  ret i1 %9, !dbg !5594
}

; <[T; N] as alloc::vec::is_zero::IsZero>::is_zero
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN70_$LT$$u5b$T$u3b$$u20$N$u5d$$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17h4e5a7a79206ce1b1E"([4 x i32]* align 4 %self) unnamed_addr #0 !dbg !5595 {
start:
  %self.dbg.spill1 = alloca { [0 x i32]*, i64 }, align 8
  %self.dbg.spill = alloca [4 x i32]*, align 8
  %_5 = alloca { i32*, i32* }, align 8
  %0 = alloca i8, align 1
  store [4 x i32]* %self, [4 x i32]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4 x i32]** %self.dbg.spill, metadata !5600, metadata !DIExpression()), !dbg !5601
  br i1 true, label %bb2, label %bb1, !dbg !5602

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !5602
  br label %bb3, !dbg !5602

bb2:                                              ; preds = %start
  %self.0 = bitcast [4 x i32]* %self to [0 x i32]*, !dbg !5603
  %1 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 0, !dbg !5603
  store [0 x i32]* %self.0, [0 x i32]** %1, align 8, !dbg !5603
  %2 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %self.dbg.spill1, i32 0, i32 1, !dbg !5603
  store i64 4, i64* %2, align 8, !dbg !5603
  call void @llvm.dbg.declare(metadata { [0 x i32]*, i64 }* %self.dbg.spill1, metadata !5604, metadata !DIExpression()), !dbg !5608
; call core::slice::iter::Iter<T>::new
  %3 = call { i32*, i32* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hc8f477891223844fE"([0 x i32]* align 4 %self.0, i64 4), !dbg !5608
  store { i32*, i32* } %3, { i32*, i32* }* %_5, align 8, !dbg !5608
  br label %bb5, !dbg !5608

bb5:                                              ; preds = %bb2
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all
  %_3 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17h0fa9d248f4bf82f1E"({ i32*, i32* }* align 8 %_5), !dbg !5603
  br label %bb4, !dbg !5603

bb4:                                              ; preds = %bb5
  %4 = zext i1 %_3 to i8, !dbg !5602
  store i8 %4, i8* %0, align 1, !dbg !5602
  br label %bb3, !dbg !5602

bb3:                                              ; preds = %bb1, %bb4
  %5 = load i8, i8* %0, align 1, !dbg !5609, !range !680, !noundef !23
  %6 = trunc i8 %5 to i1, !dbg !5609
  ret i1 %6, !dbg !5609
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5df701328a99ba49E"(%"alloc::vec::Vec<i32>"* align 8 %self) unnamed_addr #2 !dbg !5610 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca i32*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i32*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<i32>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[i32]>", align 8
  store %"alloc::vec::Vec<i32>"* %self, %"alloc::vec::Vec<i32>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"** %self.dbg.spill, metadata !5615, metadata !DIExpression()), !dbg !5616
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call i32* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h80d65c2e6950a404E"(%"alloc::vec::Vec<i32>"* align 8 %self), !dbg !5617
  store i32* %data, i32** %data.dbg.spill, align 8, !dbg !5617
  call void @llvm.dbg.declare(metadata i32** %data.dbg.spill, metadata !5618, metadata !DIExpression()), !dbg !5629
  br label %bb1, !dbg !5617

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<i32>", %"alloc::vec::Vec<i32>"* %self, i32 0, i32 1, !dbg !5631
  %len = load i64, i64* %0, align 8, !dbg !5631
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !5631
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5628, metadata !DIExpression()), !dbg !5629
  store i32* %data, i32** %self.dbg.spill1, align 8, !dbg !5629
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill1, metadata !5632, metadata !DIExpression()), !dbg !5639
  %data_address = bitcast i32* %data to {}*, !dbg !5639
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !5639
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !5641, metadata !DIExpression()), !dbg !5648
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !5629
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !5647, metadata !DIExpression()), !dbg !5648
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !5648
  store {}* %data_address, {}** %1, align 8, !dbg !5648
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5648
  store i64 %len, i64* %2, align 8, !dbg !5648
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_10 to { i8*, i64 }*, !dbg !5648
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !5648
  %5 = load i8*, i8** %4, align 8, !dbg !5648
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5648
  %7 = load i64, i64* %6, align 8, !dbg !5648
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !5648
  store i8* %5, i8** %8, align 8, !dbg !5648
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !5648
  store i64 %7, i64* %9, align 8, !dbg !5648
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[i32]>"* %_10 to { [0 x i32]*, i64 }*, !dbg !5648
  %11 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %10, i32 0, i32 0, !dbg !5648
  %_2.0 = load [0 x i32]*, [0 x i32]** %11, align 8, !dbg !5648
  %12 = getelementptr inbounds { [0 x i32]*, i64 }, { [0 x i32]*, i64 }* %10, i32 0, i32 1, !dbg !5648
  %_2.1 = load i64, i64* %12, align 8, !dbg !5648
  br label %bb2, !dbg !5650

bb2:                                              ; preds = %bb1
  ret void, !dbg !5651
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb4fef587a28f2bddE"(%"alloc::vec::Vec<[i32; 4]>"* align 8 %self) unnamed_addr #2 !dbg !5652 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %self.dbg.spill1 = alloca [4 x i32]*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca [4 x i32]*, align 8
  %self.dbg.spill = alloca %"alloc::vec::Vec<[i32; 4]>"*, align 8
  %_11 = alloca { i8*, i64 }, align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[[i32; 4]]>", align 8
  store %"alloc::vec::Vec<[i32; 4]>"* %self, %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<[i32; 4]>"** %self.dbg.spill, metadata !5656, metadata !DIExpression()), !dbg !5657
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %data = call [4 x i32]* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1541b40118434109E"(%"alloc::vec::Vec<[i32; 4]>"* align 8 %self), !dbg !5658
  store [4 x i32]* %data, [4 x i32]** %data.dbg.spill, align 8, !dbg !5658
  call void @llvm.dbg.declare(metadata [4 x i32]** %data.dbg.spill, metadata !5659, metadata !DIExpression()), !dbg !5671
  br label %bb1, !dbg !5658

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::Vec<[i32; 4]>", %"alloc::vec::Vec<[i32; 4]>"* %self, i32 0, i32 1, !dbg !5673
  %len = load i64, i64* %0, align 8, !dbg !5673
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !5673
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !5670, metadata !DIExpression()), !dbg !5671
  store [4 x i32]* %data, [4 x i32]** %self.dbg.spill1, align 8, !dbg !5671
  call void @llvm.dbg.declare(metadata [4 x i32]** %self.dbg.spill1, metadata !5674, metadata !DIExpression()), !dbg !5681
  %data_address = bitcast [4 x i32]* %data to {}*, !dbg !5681
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !5681
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !5683, metadata !DIExpression()), !dbg !5690
  store i64 %len, i64* %metadata.dbg.spill, align 8, !dbg !5671
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !5689, metadata !DIExpression()), !dbg !5690
  %1 = bitcast { i8*, i64 }* %_11 to {}**, !dbg !5690
  store {}* %data_address, {}** %1, align 8, !dbg !5690
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5690
  store i64 %len, i64* %2, align 8, !dbg !5690
  %3 = bitcast %"core::ptr::metadata::PtrRepr<[[i32; 4]]>"* %_10 to { i8*, i64 }*, !dbg !5690
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 0, !dbg !5690
  %5 = load i8*, i8** %4, align 8, !dbg !5690
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_11, i32 0, i32 1, !dbg !5690
  %7 = load i64, i64* %6, align 8, !dbg !5690
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !5690
  store i8* %5, i8** %8, align 8, !dbg !5690
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !5690
  store i64 %7, i64* %9, align 8, !dbg !5690
  %10 = bitcast %"core::ptr::metadata::PtrRepr<[[i32; 4]]>"* %_10 to { [0 x [4 x i32]]*, i64 }*, !dbg !5690
  %11 = getelementptr inbounds { [0 x [4 x i32]]*, i64 }, { [0 x [4 x i32]]*, i64 }* %10, i32 0, i32 0, !dbg !5690
  %_2.0 = load [0 x [4 x i32]]*, [0 x [4 x i32]]** %11, align 8, !dbg !5690
  %12 = getelementptr inbounds { [0 x [4 x i32]]*, i64 }, { [0 x [4 x i32]]*, i64 }* %10, i32 0, i32 1, !dbg !5690
  %_2.1 = load i64, i64* %12, align 8, !dbg !5690
  br label %bb2, !dbg !5692

bb2:                                              ; preds = %bb1
  ret void, !dbg !5693
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he52222e5fff1b3f5E"({ i32*, i64 }* align 8 %self) unnamed_addr #2 !dbg !5694 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !5699, metadata !DIExpression()), !dbg !5703
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17he785deccb54c364eE"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i32*, i64 }* align 8 %self), !dbg !5704
  br label %bb1, !dbg !5704

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !5705
  %1 = load i64, i64* %0, align 8, !dbg !5705, !range !299, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !5705
  %_4 = select i1 %2, i64 0, i64 1, !dbg !5705
  %3 = icmp eq i64 %_4, 1, !dbg !5705
  br i1 %3, label %bb2, label %bb4, !dbg !5705

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5706
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !5706
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !5706
  %ptr = load i8*, i8** %6, align 8, !dbg !5706, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !5706
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5700, metadata !DIExpression()), !dbg !5706
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5707
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !5707
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !5707
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !5707
  %layout.0 = load i64, i64* %10, align 8, !dbg !5707
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !5707
  %layout.1 = load i64, i64* %11, align 8, !dbg !5707, !range !1671, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !5707
  store i64 %layout.0, i64* %12, align 8, !dbg !5707
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !5707
  store i64 %layout.1, i64* %13, align 8, !dbg !5707
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !5702, metadata !DIExpression()), !dbg !5707
  %_7 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !5708
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h457dcd0077543f47E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !5708
  br label %bb3, !dbg !5708

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5709

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5710
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hee40db5093132691E"({ i32*, i64 }* align 8 %self) unnamed_addr #2 !dbg !5711 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i32*, i64 }*, align 8
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  store { i32*, i64 }* %self, { i32*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i64 }** %self.dbg.spill, metadata !5715, metadata !DIExpression()), !dbg !5719
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8e4257b64f7dd325E"(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") %_2, { i32*, i64 }* align 8 %self), !dbg !5720
  br label %bb1, !dbg !5720

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2, i32 0, i32 1, !dbg !5721
  %1 = load i64, i64* %0, align 8, !dbg !5721, !range !299, !noundef !23
  %2 = icmp eq i64 %1, 0, !dbg !5721
  %_4 = select i1 %2, i64 0, i64 1, !dbg !5721
  %3 = icmp eq i64 %_4, 1, !dbg !5721
  br i1 %3, label %bb2, label %bb4, !dbg !5721

bb2:                                              ; preds = %bb1
  %4 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5722
  %5 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %4 to { i8*, { i64, i64 } }*, !dbg !5722
  %6 = bitcast { i8*, { i64, i64 } }* %5 to i8**, !dbg !5722
  %ptr = load i8*, i8** %6, align 8, !dbg !5722, !nonnull !23, !noundef !23
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !5722
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !5716, metadata !DIExpression()), !dbg !5722
  %7 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>"* %_2 to %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"*, !dbg !5723
  %8 = bitcast %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>::Some"* %7 to { i8*, { i64, i64 } }*, !dbg !5723
  %9 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %8, i32 0, i32 1, !dbg !5723
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !5723
  %layout.0 = load i64, i64* %10, align 8, !dbg !5723
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !5723
  %layout.1 = load i64, i64* %11, align 8, !dbg !5723, !range !1671, !noundef !23
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !5723
  store i64 %layout.0, i64* %12, align 8, !dbg !5723
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !5723
  store i64 %layout.1, i64* %13, align 8, !dbg !5723
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !5718, metadata !DIExpression()), !dbg !5723
  %_7 = bitcast { i32*, i64 }* %self to %"alloc::alloc::Global"*, !dbg !5724
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h457dcd0077543f47E"(%"alloc::alloc::Global"* align 1 %_7, i8* %ptr, i64 %layout.0, i64 %layout.1), !dbg !5724
  br label %bb3, !dbg !5724

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !5725

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !5726
}

; <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h04d8fe95e94e9f97E"({ i64*, i64 }* align 8 %self) unnamed_addr #0 !dbg !5727 {
start:
  %self.dbg.spill = alloca { i64*, i64 }*, align 8
  store { i64*, i64 }* %self, { i64*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64*, i64 }** %self.dbg.spill, metadata !5732, metadata !DIExpression()), !dbg !5733
  %0 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %self, i32 0, i32 1, !dbg !5734
  %_2 = load i64, i64* %0, align 8, !dbg !5734
  %1 = bitcast { i64*, i64 }* %self to i64**, !dbg !5735
  %_3 = load i64*, i64** %1, align 8, !dbg !5735, !nonnull !23, !align !358, !noundef !23
  store i64 %_2, i64* %_3, align 8, !dbg !5735
  ret void, !dbg !5736
}

; <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::last
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17h064a5f7cacac13ddE"([4 x i32]* sret([4 x i32]) %0, %"alloc::vec::ExtendElement<[i32; 4]>"* %self) unnamed_addr #2 !dbg !5737 {
start:
  call void @llvm.dbg.declare(metadata %"alloc::vec::ExtendElement<[i32; 4]>"* %self, metadata !5742, metadata !DIExpression()), !dbg !5743
  %1 = bitcast %"alloc::vec::ExtendElement<[i32; 4]>"* %self to [4 x i32]*, !dbg !5744
  %2 = bitcast [4 x i32]* %0 to i8*, !dbg !5744
  %3 = bitcast [4 x i32]* %1 to i8*, !dbg !5744
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 16, i1 false), !dbg !5744
  ret void, !dbg !5745
}

; <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::last
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17hab6f0eaf516c9d1cE"(i32 %self) unnamed_addr #2 !dbg !5746 {
start:
  %self.dbg.spill = alloca i32, align 4
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !5750, metadata !DIExpression()), !dbg !5751
  ret i32 %self, !dbg !5752
}

; <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next
; Function Attrs: nonlazybind uwtable
define internal void @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17h0259fdffc749672fE"([4 x i32]* sret([4 x i32]) %0, %"alloc::vec::ExtendElement<[i32; 4]>"* align 4 %self) unnamed_addr #2 !dbg !5753 {
start:
  %self.dbg.spill = alloca %"alloc::vec::ExtendElement<[i32; 4]>"*, align 8
  store %"alloc::vec::ExtendElement<[i32; 4]>"* %self, %"alloc::vec::ExtendElement<[i32; 4]>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"alloc::vec::ExtendElement<[i32; 4]>"** %self.dbg.spill, metadata !5758, metadata !DIExpression()), !dbg !5759
  %_2 = bitcast %"alloc::vec::ExtendElement<[i32; 4]>"* %self to [4 x i32]*, !dbg !5760
; call core::array::<impl core::clone::Clone for [T; N]>::clone
  call void @"_ZN4core5array71_$LT$impl$u20$core..clone..Clone$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5clone17hb83dcd290f124dd7E"([4 x i32]* sret([4 x i32]) %0, [4 x i32]* align 4 %_2), !dbg !5760
  br label %bb1, !dbg !5760

bb1:                                              ; preds = %start
  ret void, !dbg !5761
}

; <alloc::vec::ExtendElement<T> as alloc::vec::ExtendWith<T>>::next
; Function Attrs: nonlazybind uwtable
define internal i32 @"_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17h2d2d28455def80d3E"(i32* align 4 %self) unnamed_addr #2 !dbg !5762 {
start:
  %self.dbg.spill = alloca i32*, align 8
  store i32* %self, i32** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill, metadata !5767, metadata !DIExpression()), !dbg !5768
; call core::clone::impls::<impl core::clone::Clone for i32>::clone
  %0 = call i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17hd34e0bea25b3ffc7E"(i32* align 4 %self), !dbg !5769
  br label %bb1, !dbg !5769

bb1:                                              ; preds = %start
  ret i32 %0, !dbg !5770
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h013f4cf64bb64df5E"({ i64, i64 }* align 8 %self) unnamed_addr #0 !dbg !5771 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !5774, metadata !DIExpression()), !dbg !5777
  %_3 = bitcast { i64, i64 }* %self to i64*, !dbg !5778
  %_4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !5779
; call core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h803e94e7826b17f6E"(i64* align 8 %_3, i64* align 8 %_4), !dbg !5778
  br label %bb1, !dbg !5778

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !5778

bb6:                                              ; preds = %bb1
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !5780
  store i64 0, i64* %1, align 8, !dbg !5780
  br label %bb7, !dbg !5781

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i64, i64 }* %self to i64*, !dbg !5782
; call core::clone::impls::<impl core::clone::Clone for usize>::clone
  %_6 = call i64 @"_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h1a02ee8c3206d04dE"(i64* align 8 %_7), !dbg !5782
  br label %bb3, !dbg !5782

bb3:                                              ; preds = %bb2
; call <usize as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h59e7e956e21d8993E"(i64 %_6, i64 1), !dbg !5783
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !5783
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !5775, metadata !DIExpression()), !dbg !5784
  br label %bb4, !dbg !5783

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i64, i64 }* %self to i64*, !dbg !5785
; call core::mem::replace
  %_8 = call i64 @_ZN4core3mem7replace17h6c3152bae60ef064E(i64* align 8 %_10, i64 %n), !dbg !5786
  br label %bb5, !dbg !5786

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5787
  store i64 %_8, i64* %2, align 8, !dbg !5787
  %3 = bitcast { i64, i64 }* %0 to i64*, !dbg !5787
  store i64 1, i64* %3, align 8, !dbg !5787
  br label %bb7, !dbg !5781

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !5788
  %5 = load i64, i64* %4, align 8, !dbg !5788, !range !1114, !noundef !23
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !5788
  %7 = load i64, i64* %6, align 8, !dbg !5788
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !5788
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !5788
  ret { i64, i64 } %9, !dbg !5788
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i32, i32 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17ha3f59215a7fe2bcfE"({ i32, i32 }* align 4 %self) unnamed_addr #0 !dbg !5789 {
start:
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca { i32, i32 }*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i32, i32 }* %self, { i32, i32 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i32 }** %self.dbg.spill, metadata !5791, metadata !DIExpression()), !dbg !5794
  %_3 = bitcast { i32, i32 }* %self to i32*, !dbg !5795
  %_4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1, !dbg !5796
; call core::cmp::impls::<impl core::cmp::PartialOrd for i32>::lt
  %_2 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h4a8da4c42e37e412E"(i32* align 4 %_3, i32* align 4 %_4), !dbg !5795
  br label %bb1, !dbg !5795

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb6, !dbg !5795

bb6:                                              ; preds = %bb1
  %1 = bitcast { i32, i32 }* %0 to i32*, !dbg !5797
  store i32 0, i32* %1, align 4, !dbg !5797
  br label %bb7, !dbg !5798

bb2:                                              ; preds = %bb1
  %_7 = bitcast { i32, i32 }* %self to i32*, !dbg !5799
; call core::clone::impls::<impl core::clone::Clone for i32>::clone
  %_6 = call i32 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17hd34e0bea25b3ffc7E"(i32* align 4 %_7), !dbg !5799
  br label %bb3, !dbg !5799

bb3:                                              ; preds = %bb2
; call <i32 as core::iter::range::Step>::forward_unchecked
  %n = call i32 @"_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h07e2e83ce07bcf79E"(i32 %_6, i64 1), !dbg !5800
  store i32 %n, i32* %n.dbg.spill, align 4, !dbg !5800
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !5792, metadata !DIExpression()), !dbg !5801
  br label %bb4, !dbg !5800

bb4:                                              ; preds = %bb3
  %_10 = bitcast { i32, i32 }* %self to i32*, !dbg !5802
; call core::mem::replace
  %_8 = call i32 @_ZN4core3mem7replace17hf1ca98093c8ae647E(i32* align 4 %_10, i32 %n), !dbg !5803
  br label %bb5, !dbg !5803

bb5:                                              ; preds = %bb4
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !5804
  store i32 %_8, i32* %2, align 4, !dbg !5804
  %3 = bitcast { i32, i32 }* %0 to i32*, !dbg !5804
  store i32 1, i32* %3, align 4, !dbg !5804
  br label %bb7, !dbg !5798

bb7:                                              ; preds = %bb6, %bb5
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !5805
  %5 = load i32, i32* %4, align 4, !dbg !5805, !range !5806, !noundef !23
  %6 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !5805
  %7 = load i32, i32* %6, align 4, !dbg !5805
  %8 = insertvalue { i32, i32 } undef, i32 %5, 0, !dbg !5805
  %9 = insertvalue { i32, i32 } %8, i32 %7, 1, !dbg !5805
  ret { i32, i32 } %9, !dbg !5805
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::all
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17h0fa9d248f4bf82f1E"({ i32*, i32* }* align 8 %self) unnamed_addr #0 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !5807 {
start:
  %x.dbg.spill = alloca i32*, align 8
  %0 = alloca { i8*, i32 }, align 8
  %self.dbg.spill = alloca { i32*, i32* }*, align 8
  %_10 = alloca i32*, align 8
  %_3 = alloca i32*, align 8
  %1 = alloca i8, align 1
  %f = alloca {}, align 1
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill, metadata !5814, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.declare(metadata {}* %f, metadata !5815, metadata !DIExpression()), !dbg !5821
  br label %bb1, !dbg !5822

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 4 i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9766c42dda2c44abE"({ i32*, i32* }* align 8 %self)
          to label %bb2 unwind label %cleanup, !dbg !5823

bb9:                                              ; preds = %cleanup
  br label %bb10, !dbg !5824

cleanup:                                          ; preds = %bb3, %bb1
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  %5 = extractvalue { i8*, i32 } %3, 1
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 0
  store i8* %4, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1
  store i32 %5, i32* %7, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store i32* %2, i32** %_3, align 8, !dbg !5823
  %8 = bitcast i32** %_3 to {}**, !dbg !5825
  %9 = load {}*, {}** %8, align 8, !dbg !5825
  %10 = icmp eq {}* %9, null, !dbg !5825
  %_5 = select i1 %10, i64 0, i64 1, !dbg !5825
  %11 = icmp eq i64 %_5, 1, !dbg !5825
  br i1 %11, label %bb3, label %bb7, !dbg !5825

bb3:                                              ; preds = %bb2
  %x = load i32*, i32** %_3, align 8, !dbg !5826, !nonnull !23, !align !456, !noundef !23
  store i32* %x, i32** %x.dbg.spill, align 8, !dbg !5826
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill, metadata !5816, metadata !DIExpression()), !dbg !5826
  store i32* %x, i32** %_10, align 8, !dbg !5827
  %12 = load i32*, i32** %_10, align 8, !dbg !5827, !nonnull !23, !align !456, !noundef !23
; invoke core::ops::function::FnMut::call_mut
  %_8 = invoke zeroext i1 @_ZN4core3ops8function5FnMut8call_mut17hdb098b4208e965adE({}* align 1 %f, i32* align 4 %12)
          to label %bb4 unwind label %cleanup, !dbg !5827

bb7:                                              ; preds = %bb2
  store i8 1, i8* %1, align 1, !dbg !5828
  br label %bb8, !dbg !5824

bb8:                                              ; preds = %bb5, %bb7
  %13 = load i8, i8* %1, align 1, !dbg !5829, !range !680, !noundef !23
  %14 = trunc i8 %13 to i1, !dbg !5829
  ret i1 %14, !dbg !5829

bb4:                                              ; preds = %bb3
  %_7 = xor i1 %_8, true, !dbg !5830
  br i1 %_7, label %bb5, label %bb6, !dbg !5830

bb10:                                             ; preds = %bb9
  %15 = bitcast { i8*, i32 }* %0 to i8**, !dbg !5831
  %16 = load i8*, i8** %15, align 8, !dbg !5831
  %17 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %0, i32 0, i32 1, !dbg !5831
  %18 = load i32, i32* %17, align 8, !dbg !5831
  %19 = insertvalue { i8*, i32 } undef, i8* %16, 0, !dbg !5831
  %20 = insertvalue { i8*, i32 } %19, i32 %18, 1, !dbg !5831
  resume { i8*, i32 } %20, !dbg !5831

bb6:                                              ; preds = %bb4
  br label %bb1, !dbg !5822

bb5:                                              ; preds = %bb4
  store i8 0, i8* %1, align 1, !dbg !5832
  br label %bb8, !dbg !5824
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 4 i32* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9766c42dda2c44abE"({ i32*, i32* }* align 8 %self) unnamed_addr #0 !dbg !5833 {
start:
  %self.dbg.spill26 = alloca i32*, align 8
  %0 = alloca i8*, align 8
  %self.dbg.spill24 = alloca i8*, align 8
  %ptr.dbg.spill = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %self.dbg.spill22 = alloca i32*, align 8
  %self.dbg.spill21 = alloca i32*, align 8
  %old.dbg.spill = alloca i32*, align 8
  %self.dbg.spill19 = alloca i32*, align 8
  %self.dbg.spill17 = alloca { i32*, i32* }*, align 8
  %self.dbg.spill16 = alloca i32*, align 8
  %2 = alloca i8, align 1
  %other.dbg.spill14 = alloca i8*, align 8
  %data_address.dbg.spill12 = alloca {}*, align 8
  %3 = alloca {}*, align 8
  %self.dbg.spill10 = alloca i8*, align 8
  %self.dbg.spill8 = alloca i32*, align 8
  %4 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %5 = alloca {}*, align 8
  %self.dbg.spill6 = alloca i8*, align 8
  %self.dbg.spill4 = alloca i32*, align 8
  %self.dbg.spill3 = alloca i32*, align 8
  %metadata.dbg.spill1 = alloca {}, align 1
  %metadata.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca { i32*, i32* }*, align 8
  %_62 = alloca i32*, align 8
  %_47 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_46 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<u8>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<u8>", align 8
  %_19 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill, metadata !5848, metadata !DIExpression()), !dbg !5849
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill, metadata !5850, metadata !DIExpression()), !dbg !5855
  call void @llvm.dbg.declare(metadata {}* %metadata.dbg.spill1, metadata !5864, metadata !DIExpression()), !dbg !5869
  %7 = bitcast { i32*, i32* }* %self to i32**, !dbg !5863
  %self2 = load i32*, i32** %7, align 8, !dbg !5863, !nonnull !23, !noundef !23
  store i32* %self2, i32** %self.dbg.spill3, align 8, !dbg !5863
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill3, metadata !5878, metadata !DIExpression()), !dbg !5882
  store i32* %self2, i32** %self.dbg.spill4, align 8, !dbg !5882
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill4, metadata !5861, metadata !DIExpression()), !dbg !5883
  %self5 = bitcast i32* %self2 to i8*, !dbg !5883
  store i8* %self5, i8** %self.dbg.spill6, align 8, !dbg !5883
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill6, metadata !5884, metadata !DIExpression()), !dbg !5889
  %8 = bitcast {}** %5 to i64*, !dbg !5891
  store i64 0, i64* %8, align 8, !dbg !5891
  %data_address = load {}*, {}** %5, align 8, !dbg !5891
  store {}* %data_address, {}** %data_address.dbg.spill, align 8, !dbg !5891
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !5854, metadata !DIExpression()), !dbg !5855
  br label %bb9, !dbg !5891

bb9:                                              ; preds = %start
  %9 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to {}**, !dbg !5855
  store {}* %data_address, {}** %9, align 8, !dbg !5855
  %10 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !5855
  %11 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %10 to i8*, !dbg !5855
  %12 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_30 to i8*, !dbg !5855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !5855
  %13 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_29 to i8**, !dbg !5855
  %other = load i8*, i8** %13, align 8, !dbg !5855
  store i8* %other, i8** %other.dbg.spill, align 8, !dbg !5855
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !5888, metadata !DIExpression()), !dbg !5889
  %14 = icmp eq i8* %self5, %other, !dbg !5889
  %15 = zext i1 %14 to i8, !dbg !5889
  store i8 %15, i8* %4, align 1, !dbg !5889
  %16 = load i8, i8* %4, align 1, !dbg !5889, !range !680, !noundef !23
  %_4 = trunc i8 %16 to i1, !dbg !5889
  br label %bb10, !dbg !5889

bb10:                                             ; preds = %bb9
  %_3 = xor i1 %_4, true, !dbg !5897
  call void @llvm.assume(i1 %_3), !dbg !5898
  br label %bb1, !dbg !5898

bb1:                                              ; preds = %bb10
  br i1 false, label %bb4, label %bb2, !dbg !5899

bb4:                                              ; preds = %bb1
  br label %bb5, !dbg !5900

bb2:                                              ; preds = %bb1
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !5877
  %self7 = load i32*, i32** %17, align 8, !dbg !5877
  store i32* %self7, i32** %self.dbg.spill8, align 8, !dbg !5877
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill8, metadata !5875, metadata !DIExpression()), !dbg !5901
  %self9 = bitcast i32* %self7 to i8*, !dbg !5901
  store i8* %self9, i8** %self.dbg.spill10, align 8, !dbg !5901
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill10, metadata !5902, metadata !DIExpression()), !dbg !5907
  %18 = bitcast {}** %3 to i64*, !dbg !5909
  store i64 0, i64* %18, align 8, !dbg !5909
  %data_address11 = load {}*, {}** %3, align 8, !dbg !5909
  store {}* %data_address11, {}** %data_address.dbg.spill12, align 8, !dbg !5909
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill12, metadata !5868, metadata !DIExpression()), !dbg !5869
  br label %bb11, !dbg !5909

bb11:                                             ; preds = %bb2
  %19 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to {}**, !dbg !5869
  store {}* %data_address11, {}** %19, align 8, !dbg !5869
  %20 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to %"core::ptr::metadata::PtrComponents<u8>"*, !dbg !5869
  %21 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %20 to i8*, !dbg !5869
  %22 = bitcast %"core::ptr::metadata::PtrComponents<u8>"* %_47 to i8*, !dbg !5869
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !5869
  %23 = bitcast %"core::ptr::metadata::PtrRepr<u8>"* %_46 to i8**, !dbg !5869
  %other13 = load i8*, i8** %23, align 8, !dbg !5869
  store i8* %other13, i8** %other.dbg.spill14, align 8, !dbg !5869
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill14, metadata !5906, metadata !DIExpression()), !dbg !5907
  %24 = icmp eq i8* %self9, %other13, !dbg !5907
  %25 = zext i1 %24 to i8, !dbg !5907
  store i8 %25, i8* %2, align 1, !dbg !5907
  %26 = load i8, i8* %2, align 1, !dbg !5907, !range !680, !noundef !23
  %_10 = trunc i8 %26 to i1, !dbg !5907
  br label %bb12, !dbg !5907

bb12:                                             ; preds = %bb11
  %_9 = xor i1 %_10, true, !dbg !5915
  call void @llvm.assume(i1 %_9), !dbg !5916
  br label %bb3, !dbg !5916

bb3:                                              ; preds = %bb12
  br label %bb5, !dbg !5900

bb5:                                              ; preds = %bb4, %bb3
  %27 = bitcast { i32*, i32* }* %self to i32**, !dbg !5917
  %self15 = load i32*, i32** %27, align 8, !dbg !5917, !nonnull !23, !noundef !23
  store i32* %self15, i32** %self.dbg.spill16, align 8, !dbg !5917
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill16, metadata !5918, metadata !DIExpression()), !dbg !5922
  %28 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !5917
  %_16 = load i32*, i32** %28, align 8, !dbg !5917
  %_12 = icmp eq i32* %self15, %_16, !dbg !5917
  br i1 %_12, label %bb6, label %bb7, !dbg !5917

bb7:                                              ; preds = %bb5
  store { i32*, i32* }* %self, { i32*, i32* }** %self.dbg.spill17, align 8, !dbg !5924
  call void @llvm.dbg.declare(metadata { i32*, i32* }** %self.dbg.spill17, metadata !5925, metadata !DIExpression()), !dbg !5933
  br i1 false, label %bb13, label %bb14, !dbg !5933

bb6:                                              ; preds = %bb5
  %29 = bitcast i32** %6 to {}**, !dbg !5935
  store {}* null, {}** %29, align 8, !dbg !5935
  br label %bb8, !dbg !5936

bb8:                                              ; preds = %bb15, %bb6
  %30 = load i32*, i32** %6, align 8, !dbg !5937, !align !456
  ret i32* %30, !dbg !5937

bb13:                                             ; preds = %bb7
  %31 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !5933
  %_56 = load i32*, i32** %31, align 8, !dbg !5933
  %self23 = bitcast i32* %_56 to i8*, !dbg !5933
  store i8* %self23, i8** %self.dbg.spill24, align 8, !dbg !5933
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill24, metadata !5938, metadata !DIExpression()), !dbg !5943
  %32 = getelementptr i8, i8* %self23, i64 -1, !dbg !5943
  store i8* %32, i8** %0, align 8, !dbg !5943
  %_54 = load i8*, i8** %0, align 8, !dbg !5943
  br label %bb16, !dbg !5943

bb14:                                             ; preds = %bb7
  %33 = bitcast { i32*, i32* }* %self to i32**, !dbg !5933
  %self18 = load i32*, i32** %33, align 8, !dbg !5933, !nonnull !23, !noundef !23
  store i32* %self18, i32** %self.dbg.spill19, align 8, !dbg !5933
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill19, metadata !5945, metadata !DIExpression()), !dbg !5949
  store i32* %self18, i32** %old.dbg.spill, align 8, !dbg !5949
  call void @llvm.dbg.declare(metadata i32** %old.dbg.spill, metadata !5931, metadata !DIExpression()), !dbg !5951
  %34 = bitcast { i32*, i32* }* %self to i32**, !dbg !5951
  %self20 = load i32*, i32** %34, align 8, !dbg !5951, !nonnull !23, !noundef !23
  store i32* %self20, i32** %self.dbg.spill21, align 8, !dbg !5951
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill21, metadata !5952, metadata !DIExpression()), !dbg !5956
  store i32* %self20, i32** %self.dbg.spill22, align 8, !dbg !5956
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill22, metadata !5958, metadata !DIExpression()), !dbg !5963
  %35 = getelementptr inbounds i32, i32* %self20, i64 1, !dbg !5963
  store i32* %35, i32** %1, align 8, !dbg !5963
  %_73 = load i32*, i32** %1, align 8, !dbg !5963
  br label %bb17, !dbg !5963

bb17:                                             ; preds = %bb14
  store i32* %_73, i32** %ptr.dbg.spill, align 8, !dbg !5963
  call void @llvm.dbg.declare(metadata i32** %ptr.dbg.spill, metadata !5964, metadata !DIExpression()), !dbg !5968
  store i32* %_73, i32** %_62, align 8, !dbg !5968
  %36 = bitcast { i32*, i32* }* %self to i32**, !dbg !5951
  %37 = load i32*, i32** %_62, align 8, !dbg !5951, !nonnull !23, !noundef !23
  store i32* %37, i32** %36, align 8, !dbg !5951
  store i32* %self18, i32** %_19, align 8, !dbg !5951
  br label %bb15, !dbg !5933

bb15:                                             ; preds = %bb16, %bb17
  %_18 = load i32*, i32** %_19, align 8, !dbg !5924
  store i32* %_18, i32** %6, align 8, !dbg !5970
  br label %bb8, !dbg !5936

bb16:                                             ; preds = %bb13
  %38 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %self, i32 0, i32 1, !dbg !5933
  %39 = bitcast i8* %_54 to i32*, !dbg !5933
  store i32* %39, i32** %38, align 8, !dbg !5933
  %40 = bitcast { i32*, i32* }* %self to i32**, !dbg !5933
  %self25 = load i32*, i32** %40, align 8, !dbg !5933, !nonnull !23, !noundef !23
  store i32* %self25, i32** %self.dbg.spill26, align 8, !dbg !5933
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill26, metadata !5971, metadata !DIExpression()), !dbg !5975
  store i32* %self25, i32** %_19, align 8, !dbg !5933
  br label %bb15, !dbg !5933
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_entry2(i32 %sz, i32* %buf) unnamed_addr #2 !dbg !5977 {
start:
  %q4.dbg.spill = alloca i32*, align 8
  %q3.dbg.spill = alloca i32*, align 8
  %q2.dbg.spill = alloca i32*, align 8
  %q1.dbg.spill = alloca i32*, align 8
  %buf.dbg.spill = alloca i32*, align 8
  %sz.dbg.spill = alloca i32, align 4
  %my_u = alloca %"uninitialized::u", align 4
  %_25 = alloca %"uninitialized::u", align 4
  %my_s = alloca %"uninitialized::s", align 4
  %zs = alloca [4 x i32*], align 8
  %_21 = alloca [5 x i32], align 4
  %ys = alloca [4 x [5 x i32]], align 4
  %xs = alloca [10 x i32], align 4
  %_18 = alloca i64*, align 8
  %fs = alloca [2 x i64*], align 8
  %f = alloca i64*, align 8
  %p = alloca i32*, align 8
  %x = alloca i32, align 4
  store i32 %sz, i32* %sz.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.dbg.spill, metadata !5983, metadata !DIExpression()), !dbg !6039
  store i32* %buf, i32** %buf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buf.dbg.spill, metadata !5984, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5985, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.declare(metadata i32** %p, metadata !5987, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.declare(metadata i64** %f, metadata !5997, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.declare(metadata [2 x i64*]* %fs, metadata !6013, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.declare(metadata [10 x i32]* %xs, metadata !6018, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]* %ys, metadata !6020, metadata !DIExpression()), !dbg !6046
  call void @llvm.dbg.declare(metadata [4 x i32*]* %zs, metadata !6023, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.declare(metadata %"uninitialized::s"* %my_s, metadata !6026, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.declare(metadata %"uninitialized::u"* %my_u, metadata !6037, metadata !DIExpression()), !dbg !6049
  store i32 0, i32* %x, align 4, !dbg !6050
  store i32* null, i32** %p, align 8, !dbg !6051
  store i32* %x, i32** %p, align 8, !dbg !6052
  %0 = load i32*, i32** %p, align 8, !dbg !6053
  store i32 1, i32* %0, align 4, !dbg !6053
  %_8 = icmp ugt i32 %sz, 0, !dbg !6054
  br i1 %_8, label %bb1, label %bb2, !dbg !6054

bb2:                                              ; preds = %bb1, %start
  store i32* null, i32** %q1.dbg.spill, align 8, !dbg !6055
  call void @llvm.dbg.declare(metadata i32** %q1.dbg.spill, metadata !5989, metadata !DIExpression()), !dbg !6056
  store i32* null, i32** %q2.dbg.spill, align 8, !dbg !6057
  call void @llvm.dbg.declare(metadata i32** %q2.dbg.spill, metadata !5991, metadata !DIExpression()), !dbg !6058
  store i32* null, i32** %q3.dbg.spill, align 8, !dbg !6059
  call void @llvm.dbg.declare(metadata i32** %q3.dbg.spill, metadata !5993, metadata !DIExpression()), !dbg !6060
  store i32* null, i32** %q4.dbg.spill, align 8, !dbg !6061
  call void @llvm.dbg.declare(metadata i32** %q4.dbg.spill, metadata !5995, metadata !DIExpression()), !dbg !6062
  %1 = bitcast i64** %f to {}**, !dbg !6063
  store {}* null, {}** %1, align 8, !dbg !6063
  %2 = bitcast i64** %_18 to {}**, !dbg !6064
  store {}* null, {}** %2, align 8, !dbg !6064
  %3 = load i64*, i64** %_18, align 8, !dbg !6065
  %4 = getelementptr inbounds [2 x i64*], [2 x i64*]* %fs, i64 0, i64 0, !dbg !6065
  %5 = getelementptr inbounds [2 x i64*], [2 x i64*]* %fs, i64 0, i64 0, !dbg !6065
  %6 = getelementptr inbounds [2 x i64*], [2 x i64*]* %fs, i64 0, i64 2, !dbg !6065
  br label %repeat_loop_header, !dbg !6065

bb1:                                              ; preds = %start
  %_11 = load i32, i32* %x, align 4, !dbg !6066
  store i32 %_11, i32* %buf, align 4, !dbg !6067
  br label %bb2, !dbg !6068

repeat_loop_header:                               ; preds = %repeat_loop_body, %bb2
  %7 = phi i64** [ %5, %bb2 ], [ %9, %repeat_loop_body ]
  %8 = icmp ne i64** %7, %6
  br i1 %8, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  store i64* %3, i64** %7, align 8
  %9 = getelementptr inbounds i64*, i64** %7, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %10 = getelementptr inbounds [10 x i32], [10 x i32]* %xs, i64 0, i64 0, !dbg !6069
  %11 = bitcast i32* %10 to i8*, !dbg !6069
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 40, i1 false), !dbg !6069
  %12 = getelementptr inbounds [5 x i32], [5 x i32]* %_21, i64 0, i64 0, !dbg !6070
  %13 = bitcast i32* %12 to i8*, !dbg !6070
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 20, i1 false), !dbg !6070
  %14 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %ys, i64 0, i64 0, !dbg !6071
  %15 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %ys, i64 0, i64 4, !dbg !6071
  br label %repeat_loop_header1, !dbg !6071

repeat_loop_header1:                              ; preds = %repeat_loop_body2, %repeat_loop_next
  %16 = phi [5 x i32]* [ %14, %repeat_loop_next ], [ %20, %repeat_loop_body2 ]
  %17 = icmp ne [5 x i32]* %16, %15
  br i1 %17, label %repeat_loop_body2, label %repeat_loop_next3

repeat_loop_body2:                                ; preds = %repeat_loop_header1
  %18 = bitcast [5 x i32]* %16 to i8*
  %19 = bitcast [5 x i32]* %_21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 20, i1 false)
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %16, i64 1
  br label %repeat_loop_header1

repeat_loop_next3:                                ; preds = %repeat_loop_header1
  %21 = getelementptr inbounds [4 x i32*], [4 x i32*]* %zs, i64 0, i64 0, !dbg !6072
  %22 = getelementptr inbounds [4 x i32*], [4 x i32*]* %zs, i64 0, i64 0, !dbg !6072
  %23 = getelementptr inbounds [4 x i32*], [4 x i32*]* %zs, i64 0, i64 4, !dbg !6072
  br label %repeat_loop_header4, !dbg !6072

repeat_loop_header4:                              ; preds = %repeat_loop_body5, %repeat_loop_next3
  %24 = phi i32** [ %22, %repeat_loop_next3 ], [ %26, %repeat_loop_body5 ]
  %25 = icmp ne i32** %24, %23
  br i1 %25, label %repeat_loop_body5, label %repeat_loop_next6

repeat_loop_body5:                                ; preds = %repeat_loop_header4
  store i32* null, i32** %24, align 8
  %26 = getelementptr inbounds i32*, i32** %24, i64 1
  br label %repeat_loop_header4

repeat_loop_next6:                                ; preds = %repeat_loop_header4
  %27 = bitcast %"uninitialized::u"* %_25 to i32*, !dbg !6073
  store i32 0, i32* %27, align 4, !dbg !6073
  %28 = bitcast %"uninitialized::s"* %my_s to %"uninitialized::u"*, !dbg !6074
  %29 = bitcast %"uninitialized::u"* %28 to i8*, !dbg !6074
  %30 = bitcast %"uninitialized::u"* %_25 to i8*, !dbg !6074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 4, i1 false), !dbg !6074
  %31 = getelementptr inbounds %"uninitialized::s", %"uninitialized::s"* %my_s, i32 0, i32 1, !dbg !6074
  store i8 0, i8* %31, align 4, !dbg !6074
  %32 = getelementptr inbounds %"uninitialized::s", %"uninitialized::s"* %my_s, i32 0, i32 3, !dbg !6074
  store i32 0, i32* %32, align 4, !dbg !6074
  %33 = bitcast %"uninitialized::u"* %my_u to i32*, !dbg !6075
  store i32 0, i32* %33, align 4, !dbg !6075
  ret void, !dbg !6076
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_identity(i32 %x) unnamed_addr #2 !dbg !6077 {
start:
  %x.dbg.spill = alloca i32, align 4
  store i32 %x, i32* %x.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !6083, metadata !DIExpression()), !dbg !6084
  ret i32 %x, !dbg !6085
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_entry() unnamed_addr #2 !dbg !6086 {
start:
  %n_0.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i32, align 4
  %u.dbg.spill = alloca i32*, align 8
  %v.dbg.spill = alloca i32*, align 8
  %w.dbg.spill = alloca i32*, align 8
  %z.dbg.spill = alloca i32*, align 8
  %y.dbg.spill = alloca i32, align 4
  %t = alloca i64*, align 8
  %x = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6090, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.declare(metadata i64** %t, metadata !6102, metadata !DIExpression()), !dbg !6124
  store i32 1, i32* %x, align 4, !dbg !6125
  store i32 1, i32* %y.dbg.spill, align 4, !dbg !6126
  call void @llvm.dbg.declare(metadata i32* %y.dbg.spill, metadata !6092, metadata !DIExpression()), !dbg !6127
  store i32* %x, i32** %z.dbg.spill, align 8, !dbg !6128
  call void @llvm.dbg.declare(metadata i32** %z.dbg.spill, metadata !6094, metadata !DIExpression()), !dbg !6129
  store i32* %x, i32** %w.dbg.spill, align 8, !dbg !6130
  call void @llvm.dbg.declare(metadata i32** %w.dbg.spill, metadata !6096, metadata !DIExpression()), !dbg !6131
  store i32* %x, i32** %v.dbg.spill, align 8, !dbg !6132
  call void @llvm.dbg.declare(metadata i32** %v.dbg.spill, metadata !6098, metadata !DIExpression()), !dbg !6133
  store i32* %x, i32** %u.dbg.spill, align 8, !dbg !6134
  call void @llvm.dbg.declare(metadata i32** %u.dbg.spill, metadata !6100, metadata !DIExpression()), !dbg !6135
  %0 = bitcast i64** %t to i32 (i32)**, !dbg !6136
  store i32 (i32)* @rust_identity, i32 (i32)** %0, align 8, !dbg !6136
  store i32 1, i32* %n.dbg.spill, align 4, !dbg !6137
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !6118, metadata !DIExpression()), !dbg !6138
  store i64 2, i64* %n_0.dbg.spill, align 8, !dbg !6139
  call void @llvm.dbg.declare(metadata i64* %n_0.dbg.spill, metadata !6120, metadata !DIExpression()), !dbg !6140
  ret i32 0, !dbg !6141
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_malloc_test(i32 %buffer_size, i32* %buffer) unnamed_addr #2 !dbg !6142 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i10 = alloca i64, align 8
  %self.dbg.spill.i11 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i3 = alloca i32*, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %fresh2.dbg.spill = alloca i32, align 4
  %fresh1.dbg.spill = alloca i32, align 4
  %fresh0.dbg.spill = alloca i32, align 4
  %p.dbg.spill = alloca i8**, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %buffer_size.dbg.spill = alloca i32, align 4
  %ip = alloca i32*, align 8
  %i = alloca i32, align 4
  store i32 %buffer_size, i32* %buffer_size.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.dbg.spill, metadata !6146, metadata !DIExpression()), !dbg !6162
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !6147, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6148, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.declare(metadata i32** %ip, metadata !6154, metadata !DIExpression()), !dbg !6165
  store i32 0, i32* %i, align 4, !dbg !6166
  br label %bb1, !dbg !6167

bb1:                                              ; preds = %start
  %_5 = call i8* @malloc(i64 8), !dbg !6168
  br label %bb2, !dbg !6168

bb2:                                              ; preds = %bb1
  %p = bitcast i8* %_5 to i8**, !dbg !6168
  store i8** %p, i8*** %p.dbg.spill, align 8, !dbg !6168
  call void @llvm.dbg.declare(metadata i8*** %p.dbg.spill, metadata !6150, metadata !DIExpression()), !dbg !6169
  %_9 = bitcast i8** %p to i8*, !dbg !6170
  call void @free(i8* %_9), !dbg !6171
  br label %bb3, !dbg !6171

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !6172

bb4:                                              ; preds = %bb3
  %_12 = call i8* @malloc(i64 4), !dbg !6173
  br label %bb5, !dbg !6173

bb5:                                              ; preds = %bb4
  %7 = bitcast i8* %_12 to i32*, !dbg !6173
  store i32* %7, i32** %ip, align 8, !dbg !6173
  %8 = load i32*, i32** %ip, align 8, !dbg !6174
  store i32 34, i32* %8, align 4, !dbg !6174
  %fresh0 = load i32, i32* %i, align 4, !dbg !6175
  store i32 %fresh0, i32* %fresh0.dbg.spill, align 4, !dbg !6175
  call void @llvm.dbg.declare(metadata i32* %fresh0.dbg.spill, metadata !6156, metadata !DIExpression()), !dbg !6176
  %_17 = load i32, i32* %i, align 4, !dbg !6177
  %9 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_17, i32 1), !dbg !6177
  %_18.0 = extractvalue { i32, i1 } %9, 0, !dbg !6177
  %_18.1 = extractvalue { i32, i1 } %9, 1, !dbg !6177
  %10 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !6177
  br i1 %10, label %panic, label %bb6, !dbg !6177

bb6:                                              ; preds = %bb5
  store i32 %_18.0, i32* %i, align 4, !dbg !6178
  %11 = load i32*, i32** %ip, align 8, !dbg !6179
  %_19 = load i32, i32* %11, align 4, !dbg !6179
  %_22 = sext i32 %fresh0 to i64, !dbg !6180
  store i32* %buffer, i32** %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i20, metadata !6181, metadata !DIExpression()), !dbg !6185
  store i64 %_22, i64* %count.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i19, metadata !6184, metadata !DIExpression()), !dbg !6187
  %12 = getelementptr inbounds i32, i32* %buffer, i64 %_22, !dbg !6188
  store i32* %12, i32** %0, align 8, !dbg !6188
  %_3.i21 = load i32*, i32** %0, align 8, !dbg !6188
  br label %bb7, !dbg !6189

panic:                                            ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc721 to %"core::panic::location::Location"*)) #16, !dbg !6177
  unreachable, !dbg !6177

bb7:                                              ; preds = %bb6
  store i32 %_19, i32* %_3.i21, align 4, !dbg !6190
  %_26 = load i32*, i32** %ip, align 8, !dbg !6191
  %_25 = bitcast i32* %_26 to i8*, !dbg !6191
  br label %bb8, !dbg !6192

bb8:                                              ; preds = %bb7
  store i64 2, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !6193, metadata !DIExpression()), !dbg !6200
  store i64 4, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !6199, metadata !DIExpression()), !dbg !6202
  br label %bb9, !dbg !6203

bb9:                                              ; preds = %bb8
  %_24 = call i8* @realloc(i8* %_25, i64 8), !dbg !6204
  br label %bb10, !dbg !6204

bb10:                                             ; preds = %bb9
  %13 = bitcast i8* %_24 to i32*, !dbg !6205
  store i32* %13, i32** %ip, align 8, !dbg !6205
  %_33 = load i32*, i32** %ip, align 8, !dbg !6206
  store i32* %_33, i32** %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i17, metadata !6181, metadata !DIExpression()), !dbg !6207
  store i64 0, i64* %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i16, metadata !6184, metadata !DIExpression()), !dbg !6209
  store i32* %_33, i32** %1, align 8, !dbg !6210
  %_3.i18 = load i32*, i32** %1, align 8, !dbg !6210
  br label %bb11, !dbg !6206

bb11:                                             ; preds = %bb10
  store i32 35, i32* %_3.i18, align 4, !dbg !6211
  %_37 = load i32*, i32** %ip, align 8, !dbg !6212
  store i32* %_37, i32** %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i14, metadata !6181, metadata !DIExpression()), !dbg !6213
  store i64 1, i64* %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i13, metadata !6184, metadata !DIExpression()), !dbg !6215
  %14 = getelementptr inbounds i32, i32* %_37, i64 1, !dbg !6216
  store i32* %14, i32** %2, align 8, !dbg !6216
  %_3.i15 = load i32*, i32** %2, align 8, !dbg !6216
  br label %bb12, !dbg !6212

bb12:                                             ; preds = %bb11
  store i32 36, i32* %_3.i15, align 4, !dbg !6217
  %fresh1 = load i32, i32* %i, align 4, !dbg !6218
  store i32 %fresh1, i32* %fresh1.dbg.spill, align 4, !dbg !6218
  call void @llvm.dbg.declare(metadata i32* %fresh1.dbg.spill, metadata !6158, metadata !DIExpression()), !dbg !6219
  %_40 = load i32, i32* %i, align 4, !dbg !6220
  %15 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_40, i32 1), !dbg !6220
  %_41.0 = extractvalue { i32, i1 } %15, 0, !dbg !6220
  %_41.1 = extractvalue { i32, i1 } %15, 1, !dbg !6220
  %16 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !6220
  br i1 %16, label %panic1, label %bb13, !dbg !6220

bb13:                                             ; preds = %bb12
  store i32 %_41.0, i32* %i, align 4, !dbg !6221
  %_44 = load i32*, i32** %ip, align 8, !dbg !6222
  store i32* %_44, i32** %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i11, metadata !6181, metadata !DIExpression()), !dbg !6223
  store i64 0, i64* %count.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i10, metadata !6184, metadata !DIExpression()), !dbg !6225
  store i32* %_44, i32** %3, align 8, !dbg !6226
  %_3.i12 = load i32*, i32** %3, align 8, !dbg !6226
  br label %bb14, !dbg !6222

panic1:                                           ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc723 to %"core::panic::location::Location"*)) #16, !dbg !6220
  unreachable, !dbg !6220

bb14:                                             ; preds = %bb13
  %_42 = load i32, i32* %_3.i12, align 4, !dbg !6227
  %_48 = sext i32 %fresh1 to i64, !dbg !6228
  store i32* %buffer, i32** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i8, metadata !6181, metadata !DIExpression()), !dbg !6229
  store i64 %_48, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !6184, metadata !DIExpression()), !dbg !6231
  %17 = getelementptr inbounds i32, i32* %buffer, i64 %_48, !dbg !6232
  store i32* %17, i32** %4, align 8, !dbg !6232
  %_3.i9 = load i32*, i32** %4, align 8, !dbg !6232
  br label %bb15, !dbg !6233

bb15:                                             ; preds = %bb14
  store i32 %_42, i32* %_3.i9, align 4, !dbg !6234
  %fresh2 = load i32, i32* %i, align 4, !dbg !6235
  store i32 %fresh2, i32* %fresh2.dbg.spill, align 4, !dbg !6235
  call void @llvm.dbg.declare(metadata i32* %fresh2.dbg.spill, metadata !6160, metadata !DIExpression()), !dbg !6236
  %_51 = load i32, i32* %i, align 4, !dbg !6237
  %18 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_51, i32 1), !dbg !6237
  %_52.0 = extractvalue { i32, i1 } %18, 0, !dbg !6237
  %_52.1 = extractvalue { i32, i1 } %18, 1, !dbg !6237
  %19 = call i1 @llvm.expect.i1(i1 %_52.1, i1 false), !dbg !6237
  br i1 %19, label %panic2, label %bb16, !dbg !6237

bb16:                                             ; preds = %bb15
  store i32 %_52.0, i32* %i, align 4, !dbg !6238
  %_55 = load i32*, i32** %ip, align 8, !dbg !6239
  store i32* %_55, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !6181, metadata !DIExpression()), !dbg !6240
  store i64 1, i64* %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i4, metadata !6184, metadata !DIExpression()), !dbg !6242
  %20 = getelementptr inbounds i32, i32* %_55, i64 1, !dbg !6243
  store i32* %20, i32** %5, align 8, !dbg !6243
  %_3.i6 = load i32*, i32** %5, align 8, !dbg !6243
  br label %bb17, !dbg !6239

panic2:                                           ; preds = %bb15
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc725 to %"core::panic::location::Location"*)) #16, !dbg !6237
  unreachable, !dbg !6237

bb17:                                             ; preds = %bb16
  %_53 = load i32, i32* %_3.i6, align 4, !dbg !6244
  %_59 = sext i32 %fresh2 to i64, !dbg !6245
  store i32* %buffer, i32** %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i3, metadata !6181, metadata !DIExpression()), !dbg !6246
  store i64 %_59, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !6184, metadata !DIExpression()), !dbg !6248
  %21 = getelementptr inbounds i32, i32* %buffer, i64 %_59, !dbg !6249
  store i32* %21, i32** %6, align 8, !dbg !6249
  %_3.i = load i32*, i32** %6, align 8, !dbg !6249
  br label %bb18, !dbg !6250

bb18:                                             ; preds = %bb17
  store i32 %_53, i32* %_3.i, align 4, !dbg !6251
  %_63 = load i32*, i32** %ip, align 8, !dbg !6252
  %_62 = bitcast i32* %_63 to i8*, !dbg !6252
  call void @free(i8* %_62), !dbg !6253
  br label %bb19, !dbg !6253

bb19:                                             ; preds = %bb18
  ret void, !dbg !6254
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_sizeofs(i32 %n, i32* %buffer) unnamed_addr #2 personality i32 (i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*)* @rust_eh_personality !dbg !6255 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i310 = alloca i64, align 8
  %self.dbg.spill.i311 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i307 = alloca i64, align 8
  %self.dbg.spill.i308 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i304 = alloca i64, align 8
  %self.dbg.spill.i305 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i301 = alloca i64, align 8
  %self.dbg.spill.i302 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i298 = alloca i64, align 8
  %self.dbg.spill.i299 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i295 = alloca i64, align 8
  %self.dbg.spill.i296 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %count.dbg.spill.i292 = alloca i64, align 8
  %self.dbg.spill.i293 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %count.dbg.spill.i289 = alloca i64, align 8
  %self.dbg.spill.i290 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %count.dbg.spill.i286 = alloca i64, align 8
  %self.dbg.spill.i287 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %count.dbg.spill.i283 = alloca i64, align 8
  %self.dbg.spill.i284 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %count.dbg.spill.i280 = alloca i64, align 8
  %self.dbg.spill.i281 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %count.dbg.spill.i277 = alloca i64, align 8
  %self.dbg.spill.i278 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %count.dbg.spill.i274 = alloca i64, align 8
  %self.dbg.spill.i275 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %count.dbg.spill.i271 = alloca i64, align 8
  %self.dbg.spill.i272 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %count.dbg.spill.i268 = alloca i64, align 8
  %self.dbg.spill.i269 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %count.dbg.spill.i265 = alloca i64, align 8
  %self.dbg.spill.i266 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %count.dbg.spill.i262 = alloca i64, align 8
  %self.dbg.spill.i263 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %count.dbg.spill.i259 = alloca i64, align 8
  %self.dbg.spill.i260 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %count.dbg.spill.i256 = alloca i64, align 8
  %self.dbg.spill.i257 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %count.dbg.spill.i253 = alloca i64, align 8
  %self.dbg.spill.i254 = alloca i32*, align 8
  %20 = alloca i32*, align 8
  %count.dbg.spill.i250 = alloca i64, align 8
  %self.dbg.spill.i251 = alloca i32*, align 8
  %21 = alloca i32*, align 8
  %count.dbg.spill.i247 = alloca i64, align 8
  %self.dbg.spill.i248 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %count.dbg.spill.i244 = alloca i64, align 8
  %self.dbg.spill.i245 = alloca i32*, align 8
  %23 = alloca i32*, align 8
  %count.dbg.spill.i241 = alloca i64, align 8
  %self.dbg.spill.i242 = alloca i32*, align 8
  %24 = alloca i32*, align 8
  %count.dbg.spill.i238 = alloca i64, align 8
  %self.dbg.spill.i239 = alloca i32*, align 8
  %25 = alloca i32*, align 8
  %count.dbg.spill.i235 = alloca i64, align 8
  %self.dbg.spill.i236 = alloca i32*, align 8
  %26 = alloca i32*, align 8
  %count.dbg.spill.i232 = alloca i64, align 8
  %self.dbg.spill.i233 = alloca i32*, align 8
  %27 = alloca i32*, align 8
  %count.dbg.spill.i229 = alloca i64, align 8
  %self.dbg.spill.i230 = alloca i32*, align 8
  %28 = alloca i32*, align 8
  %count.dbg.spill.i226 = alloca i64, align 8
  %self.dbg.spill.i227 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %count.dbg.spill.i223 = alloca i64, align 8
  %self.dbg.spill.i224 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %count.dbg.spill.i220 = alloca i64, align 8
  %self.dbg.spill.i221 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %count.dbg.spill.i217 = alloca i64, align 8
  %self.dbg.spill.i218 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %count.dbg.spill.i214 = alloca i64, align 8
  %self.dbg.spill.i215 = alloca i32*, align 8
  %33 = alloca i32*, align 8
  %count.dbg.spill.i211 = alloca i64, align 8
  %self.dbg.spill.i212 = alloca i32*, align 8
  %34 = alloca i32*, align 8
  %count.dbg.spill.i208 = alloca i64, align 8
  %self.dbg.spill.i209 = alloca i32*, align 8
  %35 = alloca i32*, align 8
  %count.dbg.spill.i205 = alloca i64, align 8
  %self.dbg.spill.i206 = alloca i32*, align 8
  %36 = alloca i32*, align 8
  %count.dbg.spill.i202 = alloca i64, align 8
  %self.dbg.spill.i203 = alloca i32*, align 8
  %37 = alloca i32*, align 8
  %count.dbg.spill.i199 = alloca i64, align 8
  %self.dbg.spill.i200 = alloca i32*, align 8
  %38 = alloca i32*, align 8
  %count.dbg.spill.i196 = alloca i64, align 8
  %self.dbg.spill.i197 = alloca i32*, align 8
  %39 = alloca i32*, align 8
  %count.dbg.spill.i193 = alloca i64, align 8
  %self.dbg.spill.i194 = alloca i32*, align 8
  %40 = alloca i32*, align 8
  %count.dbg.spill.i190 = alloca i64, align 8
  %self.dbg.spill.i191 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  %count.dbg.spill.i187 = alloca i64, align 8
  %self.dbg.spill.i188 = alloca i32*, align 8
  %42 = alloca i32*, align 8
  %count.dbg.spill.i184 = alloca i64, align 8
  %self.dbg.spill.i185 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %count.dbg.spill.i181 = alloca i64, align 8
  %self.dbg.spill.i182 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  %count.dbg.spill.i178 = alloca i64, align 8
  %self.dbg.spill.i179 = alloca i32*, align 8
  %45 = alloca i32*, align 8
  %count.dbg.spill.i175 = alloca i64, align 8
  %self.dbg.spill.i176 = alloca i32*, align 8
  %46 = alloca i32*, align 8
  %count.dbg.spill.i172 = alloca i64, align 8
  %self.dbg.spill.i173 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  %count.dbg.spill.i169 = alloca i64, align 8
  %self.dbg.spill.i170 = alloca i32*, align 8
  %48 = alloca i32*, align 8
  %count.dbg.spill.i166 = alloca i64, align 8
  %self.dbg.spill.i167 = alloca i32*, align 8
  %49 = alloca i32*, align 8
  %count.dbg.spill.i163 = alloca i64, align 8
  %self.dbg.spill.i164 = alloca i32*, align 8
  %50 = alloca i32*, align 8
  %count.dbg.spill.i160 = alloca i64, align 8
  %self.dbg.spill.i161 = alloca i32*, align 8
  %51 = alloca i32*, align 8
  %count.dbg.spill.i157 = alloca i64, align 8
  %self.dbg.spill.i158 = alloca i32*, align 8
  %52 = alloca i32*, align 8
  %count.dbg.spill.i154 = alloca i64, align 8
  %self.dbg.spill.i155 = alloca i32*, align 8
  %53 = alloca i32*, align 8
  %count.dbg.spill.i151 = alloca i64, align 8
  %self.dbg.spill.i152 = alloca i32*, align 8
  %54 = alloca i32*, align 8
  %count.dbg.spill.i148 = alloca i64, align 8
  %self.dbg.spill.i149 = alloca i32*, align 8
  %55 = alloca i32*, align 8
  %count.dbg.spill.i145 = alloca i64, align 8
  %self.dbg.spill.i146 = alloca i32*, align 8
  %56 = alloca i32*, align 8
  %count.dbg.spill.i142 = alloca i64, align 8
  %self.dbg.spill.i143 = alloca i32*, align 8
  %57 = alloca i32*, align 8
  %count.dbg.spill.i139 = alloca i64, align 8
  %self.dbg.spill.i140 = alloca i32*, align 8
  %58 = alloca i32*, align 8
  %count.dbg.spill.i136 = alloca i64, align 8
  %self.dbg.spill.i137 = alloca i32*, align 8
  %59 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i135 = alloca i32*, align 8
  %rhs.dbg.spill.i133 = alloca i64, align 8
  %self.dbg.spill.i134 = alloca i64, align 8
  %rhs.dbg.spill.i131 = alloca i64, align 8
  %self.dbg.spill.i132 = alloca i64, align 8
  %rhs.dbg.spill.i129 = alloca i64, align 8
  %self.dbg.spill.i130 = alloca i64, align 8
  %rhs.dbg.spill.i127 = alloca i64, align 8
  %self.dbg.spill.i128 = alloca i64, align 8
  %rhs.dbg.spill.i125 = alloca i64, align 8
  %self.dbg.spill.i126 = alloca i64, align 8
  %rhs.dbg.spill.i123 = alloca i64, align 8
  %self.dbg.spill.i124 = alloca i64, align 8
  %rhs.dbg.spill.i121 = alloca i64, align 8
  %self.dbg.spill.i122 = alloca i64, align 8
  %rhs.dbg.spill.i119 = alloca i64, align 8
  %self.dbg.spill.i120 = alloca i64, align 8
  %rhs.dbg.spill.i117 = alloca i64, align 8
  %self.dbg.spill.i118 = alloca i64, align 8
  %rhs.dbg.spill.i115 = alloca i64, align 8
  %self.dbg.spill.i116 = alloca i64, align 8
  %rhs.dbg.spill.i113 = alloca i64, align 8
  %self.dbg.spill.i114 = alloca i64, align 8
  %rhs.dbg.spill.i111 = alloca i64, align 8
  %self.dbg.spill.i112 = alloca i64, align 8
  %rhs.dbg.spill.i109 = alloca i64, align 8
  %self.dbg.spill.i110 = alloca i64, align 8
  %rhs.dbg.spill.i107 = alloca i64, align 8
  %self.dbg.spill.i108 = alloca i64, align 8
  %rhs.dbg.spill.i105 = alloca i64, align 8
  %self.dbg.spill.i106 = alloca i64, align 8
  %rhs.dbg.spill.i103 = alloca i64, align 8
  %self.dbg.spill.i104 = alloca i64, align 8
  %rhs.dbg.spill.i101 = alloca i64, align 8
  %self.dbg.spill.i102 = alloca i64, align 8
  %rhs.dbg.spill.i99 = alloca i64, align 8
  %self.dbg.spill.i100 = alloca i64, align 8
  %rhs.dbg.spill.i97 = alloca i64, align 8
  %self.dbg.spill.i98 = alloca i64, align 8
  %rhs.dbg.spill.i95 = alloca i64, align 8
  %self.dbg.spill.i96 = alloca i64, align 8
  %rhs.dbg.spill.i93 = alloca i64, align 8
  %self.dbg.spill.i94 = alloca i64, align 8
  %rhs.dbg.spill.i91 = alloca i64, align 8
  %self.dbg.spill.i92 = alloca i64, align 8
  %rhs.dbg.spill.i89 = alloca i64, align 8
  %self.dbg.spill.i90 = alloca i64, align 8
  %rhs.dbg.spill.i87 = alloca i64, align 8
  %self.dbg.spill.i88 = alloca i64, align 8
  %rhs.dbg.spill.i85 = alloca i64, align 8
  %self.dbg.spill.i86 = alloca i64, align 8
  %rhs.dbg.spill.i83 = alloca i64, align 8
  %self.dbg.spill.i84 = alloca i64, align 8
  %rhs.dbg.spill.i81 = alloca i64, align 8
  %self.dbg.spill.i82 = alloca i64, align 8
  %rhs.dbg.spill.i79 = alloca i64, align 8
  %self.dbg.spill.i80 = alloca i64, align 8
  %rhs.dbg.spill.i77 = alloca i64, align 8
  %self.dbg.spill.i78 = alloca i64, align 8
  %rhs.dbg.spill.i75 = alloca i64, align 8
  %self.dbg.spill.i76 = alloca i64, align 8
  %rhs.dbg.spill.i73 = alloca i64, align 8
  %self.dbg.spill.i74 = alloca i64, align 8
  %rhs.dbg.spill.i71 = alloca i64, align 8
  %self.dbg.spill.i72 = alloca i64, align 8
  %rhs.dbg.spill.i69 = alloca i64, align 8
  %self.dbg.spill.i70 = alloca i64, align 8
  %rhs.dbg.spill.i67 = alloca i64, align 8
  %self.dbg.spill.i68 = alloca i64, align 8
  %rhs.dbg.spill.i65 = alloca i64, align 8
  %self.dbg.spill.i66 = alloca i64, align 8
  %rhs.dbg.spill.i63 = alloca i64, align 8
  %self.dbg.spill.i64 = alloca i64, align 8
  %rhs.dbg.spill.i61 = alloca i64, align 8
  %self.dbg.spill.i62 = alloca i64, align 8
  %rhs.dbg.spill.i59 = alloca i64, align 8
  %self.dbg.spill.i60 = alloca i64, align 8
  %rhs.dbg.spill.i57 = alloca i64, align 8
  %self.dbg.spill.i58 = alloca i64, align 8
  %rhs.dbg.spill.i55 = alloca i64, align 8
  %self.dbg.spill.i56 = alloca i64, align 8
  %rhs.dbg.spill.i53 = alloca i64, align 8
  %self.dbg.spill.i54 = alloca i64, align 8
  %rhs.dbg.spill.i51 = alloca i64, align 8
  %self.dbg.spill.i52 = alloca i64, align 8
  %rhs.dbg.spill.i49 = alloca i64, align 8
  %self.dbg.spill.i50 = alloca i64, align 8
  %rhs.dbg.spill.i47 = alloca i64, align 8
  %self.dbg.spill.i48 = alloca i64, align 8
  %rhs.dbg.spill.i45 = alloca i64, align 8
  %self.dbg.spill.i46 = alloca i64, align 8
  %rhs.dbg.spill.i43 = alloca i64, align 8
  %self.dbg.spill.i44 = alloca i64, align 8
  %rhs.dbg.spill.i41 = alloca i64, align 8
  %self.dbg.spill.i42 = alloca i64, align 8
  %rhs.dbg.spill.i39 = alloca i64, align 8
  %self.dbg.spill.i40 = alloca i64, align 8
  %rhs.dbg.spill.i37 = alloca i64, align 8
  %self.dbg.spill.i38 = alloca i64, align 8
  %rhs.dbg.spill.i35 = alloca i64, align 8
  %self.dbg.spill.i36 = alloca i64, align 8
  %rhs.dbg.spill.i33 = alloca i64, align 8
  %self.dbg.spill.i34 = alloca i64, align 8
  %rhs.dbg.spill.i31 = alloca i64, align 8
  %self.dbg.spill.i32 = alloca i64, align 8
  %rhs.dbg.spill.i29 = alloca i64, align 8
  %self.dbg.spill.i30 = alloca i64, align 8
  %rhs.dbg.spill.i27 = alloca i64, align 8
  %self.dbg.spill.i28 = alloca i64, align 8
  %rhs.dbg.spill.i25 = alloca i64, align 8
  %self.dbg.spill.i26 = alloca i64, align 8
  %rhs.dbg.spill.i23 = alloca i64, align 8
  %self.dbg.spill.i24 = alloca i64, align 8
  %rhs.dbg.spill.i21 = alloca i64, align 8
  %self.dbg.spill.i22 = alloca i64, align 8
  %rhs.dbg.spill.i19 = alloca i64, align 8
  %self.dbg.spill.i20 = alloca i64, align 8
  %rhs.dbg.spill.i17 = alloca i64, align 8
  %self.dbg.spill.i18 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %60 = alloca [45 x i8]*, align 8
  %61 = alloca [45 x i8]*, align 8
  %fresh59.dbg.spill = alloca i64, align 8
  %fresh58.dbg.spill = alloca i64, align 8
  %fresh57.dbg.spill = alloca i64, align 8
  %fresh56.dbg.spill = alloca i64, align 8
  %fresh55.dbg.spill = alloca i64, align 8
  %fresh54.dbg.spill = alloca i64, align 8
  %fresh53.dbg.spill = alloca i64, align 8
  %fresh52.dbg.spill = alloca i64, align 8
  %fresh51.dbg.spill = alloca i64, align 8
  %fresh50.dbg.spill = alloca i64, align 8
  %fresh49.dbg.spill = alloca i64, align 8
  %fresh48.dbg.spill = alloca i64, align 8
  %fresh47.dbg.spill = alloca i64, align 8
  %fresh46.dbg.spill = alloca i64, align 8
  %x7.dbg.spill = alloca i32*, align 8
  %vla_6.dbg.spill = alloca i64, align 8
  %vla_5.dbg.spill = alloca i64, align 8
  %vla_4.dbg.spill = alloca i64, align 8
  %vla_3.dbg.spill = alloca i64, align 8
  %vla_2.dbg.spill = alloca i64, align 8
  %62 = alloca { i8*, i32 }, align 8
  %vla_1.dbg.spill = alloca i64, align 8
  %vla_0.dbg.spill = alloca i64, align 8
  %vla.dbg.spill = alloca i64, align 8
  %fresh45.dbg.spill = alloca i64, align 8
  %fresh44.dbg.spill = alloca i64, align 8
  %fresh43.dbg.spill = alloca i64, align 8
  %fresh42.dbg.spill = alloca i64, align 8
  %fresh41.dbg.spill = alloca i64, align 8
  %fresh40.dbg.spill = alloca i64, align 8
  %fresh39.dbg.spill = alloca i64, align 8
  %fresh38.dbg.spill = alloca i64, align 8
  %fresh37.dbg.spill = alloca i64, align 8
  %fresh36.dbg.spill = alloca i64, align 8
  %fresh35.dbg.spill = alloca i64, align 8
  %fresh34.dbg.spill = alloca i64, align 8
  %fresh33.dbg.spill = alloca i64, align 8
  %fresh32.dbg.spill = alloca i64, align 8
  %fresh31.dbg.spill = alloca i64, align 8
  %fresh30.dbg.spill = alloca i64, align 8
  %fresh29.dbg.spill = alloca i64, align 8
  %fresh28.dbg.spill = alloca i64, align 8
  %fresh27.dbg.spill = alloca i64, align 8
  %fresh26.dbg.spill = alloca i64, align 8
  %fresh25.dbg.spill = alloca i64, align 8
  %fresh24.dbg.spill = alloca i64, align 8
  %fresh23.dbg.spill = alloca i64, align 8
  %fresh22.dbg.spill = alloca i64, align 8
  %63 = alloca i64, align 8
  %fresh21.dbg.spill = alloca i64, align 8
  %fresh20.dbg.spill = alloca i64, align 8
  %64 = alloca i64, align 8
  %fresh19.dbg.spill = alloca i64, align 8
  %fresh18.dbg.spill = alloca i64, align 8
  %65 = alloca i64, align 8
  %fresh17.dbg.spill = alloca i64, align 8
  %fresh16.dbg.spill = alloca i64, align 8
  %66 = alloca i64, align 8
  %fresh15.dbg.spill = alloca i64, align 8
  %fresh14.dbg.spill = alloca i64, align 8
  %fresh13.dbg.spill = alloca i64, align 8
  %fresh12.dbg.spill = alloca i64, align 8
  %fresh11.dbg.spill = alloca i64, align 8
  %fresh10.dbg.spill = alloca i64, align 8
  %fresh9.dbg.spill = alloca i64, align 8
  %fresh8.dbg.spill = alloca i64, align 8
  %fresh7.dbg.spill = alloca i64, align 8
  %fresh6.dbg.spill = alloca i64, align 8
  %fresh5.dbg.spill = alloca i64, align 8
  %fresh4.dbg.spill = alloca i64, align 8
  %fresh3.dbg.spill = alloca i64, align 8
  %fresh2.dbg.spill = alloca i64, align 8
  %fresh1.dbg.spill = alloca i64, align 8
  %fresh0.dbg.spill = alloca i64, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %n.dbg.spill = alloca i32, align 4
  %x6 = alloca [3 x i32*], align 8
  %x5 = alloca %"alloc::vec::Vec<i32>", align 8
  %_453 = alloca [4 x i32], align 4
  %x4 = alloca %"alloc::vec::Vec<[i32; 4]>", align 8
  %x3 = alloca %"alloc::vec::Vec<i32>", align 8
  %_441 = alloca [5 x i32], align 4
  %x2 = alloca [4 x [5 x i32]], align 4
  %x1 = alloca [4 x i32], align 4
  %b = alloca i32, align 4
  %a = alloca i32, align 4
  %i = alloca i64, align 8
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !6259, metadata !DIExpression()), !dbg !6418
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !6260, metadata !DIExpression()), !dbg !6419
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6261, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6327, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6329, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata [4 x i32]* %x1, metadata !6359, metadata !DIExpression()), !dbg !6423
  call void @llvm.dbg.declare(metadata [4 x [5 x i32]]* %x2, metadata !6361, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"* %x3, metadata !6367, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<[i32; 4]>"* %x4, metadata !6371, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.declare(metadata %"alloc::vec::Vec<i32>"* %x5, metadata !6377, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.declare(metadata [3 x i32*]* %x6, metadata !6381, metadata !DIExpression()), !dbg !6428
  store i64 0, i64* %i, align 8, !dbg !6429
  store i64 0, i64* %fresh0.dbg.spill, align 8, !dbg !6430
  call void @llvm.dbg.declare(metadata i64* %fresh0.dbg.spill, metadata !6263, metadata !DIExpression()), !dbg !6431
  store i64 0, i64* %self.dbg.spill.i134, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i134, metadata !6432, metadata !DIExpression()), !dbg !6436
  store i64 1, i64* %rhs.dbg.spill.i133, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i133, metadata !6435, metadata !DIExpression()), !dbg !6438
  br label %bb1, !dbg !6439

bb1:                                              ; preds = %start
  store i64 1, i64* %i, align 8, !dbg !6440
  br label %bb2, !dbg !6441

bb2:                                              ; preds = %bb1
  store i32* %buffer, i32** %self.dbg.spill.i311, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i311, metadata !6181, metadata !DIExpression()), !dbg !6442
  store i64 0, i64* %count.dbg.spill.i310, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i310, metadata !6184, metadata !DIExpression()), !dbg !6444
  store i32* %buffer, i32** %0, align 8, !dbg !6445
  %_3.i312 = load i32*, i32** %0, align 8, !dbg !6445
  br label %bb3, !dbg !6446

bb3:                                              ; preds = %bb2
  %67 = trunc i64 1 to i32, !dbg !6447
  store i32 %67, i32* %_3.i312, align 4, !dbg !6447
  %fresh1 = load i64, i64* %i, align 8, !dbg !6448
  store i64 %fresh1, i64* %fresh1.dbg.spill, align 8, !dbg !6448
  call void @llvm.dbg.declare(metadata i64* %fresh1.dbg.spill, metadata !6265, metadata !DIExpression()), !dbg !6449
  %_15 = load i64, i64* %i, align 8, !dbg !6450
  store i64 %_15, i64* %self.dbg.spill.i132, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i132, metadata !6432, metadata !DIExpression()), !dbg !6451
  store i64 1, i64* %rhs.dbg.spill.i131, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i131, metadata !6435, metadata !DIExpression()), !dbg !6453
  %68 = add i64 %_15, 1, !dbg !6454
  br label %bb4, !dbg !6450

bb4:                                              ; preds = %bb3
  store i64 %68, i64* %i, align 8, !dbg !6455
  br label %bb5, !dbg !6456

bb5:                                              ; preds = %bb4
  store i32* %buffer, i32** %self.dbg.spill.i308, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i308, metadata !6181, metadata !DIExpression()), !dbg !6457
  store i64 %fresh1, i64* %count.dbg.spill.i307, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i307, metadata !6184, metadata !DIExpression()), !dbg !6459
  %69 = getelementptr inbounds i32, i32* %buffer, i64 %fresh1, !dbg !6460
  store i32* %69, i32** %1, align 8, !dbg !6460
  %_3.i309 = load i32*, i32** %1, align 8, !dbg !6460
  br label %bb6, !dbg !6461

bb6:                                              ; preds = %bb5
  %70 = trunc i64 1 to i32, !dbg !6462
  store i32 %70, i32* %_3.i309, align 4, !dbg !6462
  %fresh2 = load i64, i64* %i, align 8, !dbg !6463
  store i64 %fresh2, i64* %fresh2.dbg.spill, align 8, !dbg !6463
  call void @llvm.dbg.declare(metadata i64* %fresh2.dbg.spill, metadata !6267, metadata !DIExpression()), !dbg !6464
  %_24 = load i64, i64* %i, align 8, !dbg !6465
  store i64 %_24, i64* %self.dbg.spill.i130, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i130, metadata !6432, metadata !DIExpression()), !dbg !6466
  store i64 1, i64* %rhs.dbg.spill.i129, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i129, metadata !6435, metadata !DIExpression()), !dbg !6468
  %71 = add i64 %_24, 1, !dbg !6469
  br label %bb7, !dbg !6465

bb7:                                              ; preds = %bb6
  store i64 %71, i64* %i, align 8, !dbg !6470
  br label %bb8, !dbg !6471

bb8:                                              ; preds = %bb7
  store i32* %buffer, i32** %self.dbg.spill.i305, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i305, metadata !6181, metadata !DIExpression()), !dbg !6472
  store i64 %fresh2, i64* %count.dbg.spill.i304, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i304, metadata !6184, metadata !DIExpression()), !dbg !6474
  %72 = getelementptr inbounds i32, i32* %buffer, i64 %fresh2, !dbg !6475
  store i32* %72, i32** %2, align 8, !dbg !6475
  %_3.i306 = load i32*, i32** %2, align 8, !dbg !6475
  br label %bb9, !dbg !6476

bb9:                                              ; preds = %bb8
  %73 = trunc i64 1 to i32, !dbg !6477
  store i32 %73, i32* %_3.i306, align 4, !dbg !6477
  %fresh3 = load i64, i64* %i, align 8, !dbg !6478
  store i64 %fresh3, i64* %fresh3.dbg.spill, align 8, !dbg !6478
  call void @llvm.dbg.declare(metadata i64* %fresh3.dbg.spill, metadata !6269, metadata !DIExpression()), !dbg !6479
  %_33 = load i64, i64* %i, align 8, !dbg !6480
  store i64 %_33, i64* %self.dbg.spill.i128, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i128, metadata !6432, metadata !DIExpression()), !dbg !6481
  store i64 1, i64* %rhs.dbg.spill.i127, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i127, metadata !6435, metadata !DIExpression()), !dbg !6483
  %74 = add i64 %_33, 1, !dbg !6484
  br label %bb10, !dbg !6480

bb10:                                             ; preds = %bb9
  store i64 %74, i64* %i, align 8, !dbg !6485
  br label %bb11, !dbg !6486

bb11:                                             ; preds = %bb10
  store i32* %buffer, i32** %self.dbg.spill.i302, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i302, metadata !6181, metadata !DIExpression()), !dbg !6487
  store i64 %fresh3, i64* %count.dbg.spill.i301, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i301, metadata !6184, metadata !DIExpression()), !dbg !6489
  %75 = getelementptr inbounds i32, i32* %buffer, i64 %fresh3, !dbg !6490
  store i32* %75, i32** %3, align 8, !dbg !6490
  %_3.i303 = load i32*, i32** %3, align 8, !dbg !6490
  br label %bb12, !dbg !6491

bb12:                                             ; preds = %bb11
  %76 = trunc i64 1 to i32, !dbg !6492
  store i32 %76, i32* %_3.i303, align 4, !dbg !6492
  %fresh4 = load i64, i64* %i, align 8, !dbg !6493
  store i64 %fresh4, i64* %fresh4.dbg.spill, align 8, !dbg !6493
  call void @llvm.dbg.declare(metadata i64* %fresh4.dbg.spill, metadata !6271, metadata !DIExpression()), !dbg !6494
  %_42 = load i64, i64* %i, align 8, !dbg !6495
  store i64 %_42, i64* %self.dbg.spill.i126, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i126, metadata !6432, metadata !DIExpression()), !dbg !6496
  store i64 1, i64* %rhs.dbg.spill.i125, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i125, metadata !6435, metadata !DIExpression()), !dbg !6498
  %77 = add i64 %_42, 1, !dbg !6499
  br label %bb13, !dbg !6495

bb13:                                             ; preds = %bb12
  store i64 %77, i64* %i, align 8, !dbg !6500
  br label %bb14, !dbg !6501

bb14:                                             ; preds = %bb13
  store i32* %buffer, i32** %self.dbg.spill.i299, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i299, metadata !6181, metadata !DIExpression()), !dbg !6502
  store i64 %fresh4, i64* %count.dbg.spill.i298, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i298, metadata !6184, metadata !DIExpression()), !dbg !6504
  %78 = getelementptr inbounds i32, i32* %buffer, i64 %fresh4, !dbg !6505
  store i32* %78, i32** %4, align 8, !dbg !6505
  %_3.i300 = load i32*, i32** %4, align 8, !dbg !6505
  br label %bb15, !dbg !6506

bb15:                                             ; preds = %bb14
  %79 = trunc i64 4 to i32, !dbg !6507
  store i32 %79, i32* %_3.i300, align 4, !dbg !6507
  %fresh5 = load i64, i64* %i, align 8, !dbg !6508
  store i64 %fresh5, i64* %fresh5.dbg.spill, align 8, !dbg !6508
  call void @llvm.dbg.declare(metadata i64* %fresh5.dbg.spill, metadata !6273, metadata !DIExpression()), !dbg !6509
  %_51 = load i64, i64* %i, align 8, !dbg !6510
  store i64 %_51, i64* %self.dbg.spill.i124, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i124, metadata !6432, metadata !DIExpression()), !dbg !6511
  store i64 1, i64* %rhs.dbg.spill.i123, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i123, metadata !6435, metadata !DIExpression()), !dbg !6513
  %80 = add i64 %_51, 1, !dbg !6514
  br label %bb16, !dbg !6510

bb16:                                             ; preds = %bb15
  store i64 %80, i64* %i, align 8, !dbg !6515
  br label %bb17, !dbg !6516

bb17:                                             ; preds = %bb16
  store i32* %buffer, i32** %self.dbg.spill.i296, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i296, metadata !6181, metadata !DIExpression()), !dbg !6517
  store i64 %fresh5, i64* %count.dbg.spill.i295, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i295, metadata !6184, metadata !DIExpression()), !dbg !6519
  %81 = getelementptr inbounds i32, i32* %buffer, i64 %fresh5, !dbg !6520
  store i32* %81, i32** %5, align 8, !dbg !6520
  %_3.i297 = load i32*, i32** %5, align 8, !dbg !6520
  br label %bb18, !dbg !6521

bb18:                                             ; preds = %bb17
  %82 = trunc i64 4 to i32, !dbg !6522
  store i32 %82, i32* %_3.i297, align 4, !dbg !6522
  %fresh6 = load i64, i64* %i, align 8, !dbg !6523
  store i64 %fresh6, i64* %fresh6.dbg.spill, align 8, !dbg !6523
  call void @llvm.dbg.declare(metadata i64* %fresh6.dbg.spill, metadata !6275, metadata !DIExpression()), !dbg !6524
  %_60 = load i64, i64* %i, align 8, !dbg !6525
  store i64 %_60, i64* %self.dbg.spill.i122, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i122, metadata !6432, metadata !DIExpression()), !dbg !6526
  store i64 1, i64* %rhs.dbg.spill.i121, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i121, metadata !6435, metadata !DIExpression()), !dbg !6528
  %83 = add i64 %_60, 1, !dbg !6529
  br label %bb19, !dbg !6525

bb19:                                             ; preds = %bb18
  store i64 %83, i64* %i, align 8, !dbg !6530
  br label %bb20, !dbg !6531

bb20:                                             ; preds = %bb19
  store i32* %buffer, i32** %self.dbg.spill.i293, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i293, metadata !6181, metadata !DIExpression()), !dbg !6532
  store i64 %fresh6, i64* %count.dbg.spill.i292, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i292, metadata !6184, metadata !DIExpression()), !dbg !6534
  %84 = getelementptr inbounds i32, i32* %buffer, i64 %fresh6, !dbg !6535
  store i32* %84, i32** %6, align 8, !dbg !6535
  %_3.i294 = load i32*, i32** %6, align 8, !dbg !6535
  br label %bb21, !dbg !6536

bb21:                                             ; preds = %bb20
  %85 = trunc i64 8 to i32, !dbg !6537
  store i32 %85, i32* %_3.i294, align 4, !dbg !6537
  %fresh7 = load i64, i64* %i, align 8, !dbg !6538
  store i64 %fresh7, i64* %fresh7.dbg.spill, align 8, !dbg !6538
  call void @llvm.dbg.declare(metadata i64* %fresh7.dbg.spill, metadata !6277, metadata !DIExpression()), !dbg !6539
  %_69 = load i64, i64* %i, align 8, !dbg !6540
  store i64 %_69, i64* %self.dbg.spill.i120, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i120, metadata !6432, metadata !DIExpression()), !dbg !6541
  store i64 1, i64* %rhs.dbg.spill.i119, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i119, metadata !6435, metadata !DIExpression()), !dbg !6543
  %86 = add i64 %_69, 1, !dbg !6544
  br label %bb22, !dbg !6540

bb22:                                             ; preds = %bb21
  store i64 %86, i64* %i, align 8, !dbg !6545
  br label %bb23, !dbg !6546

bb23:                                             ; preds = %bb22
  store i32* %buffer, i32** %self.dbg.spill.i290, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i290, metadata !6181, metadata !DIExpression()), !dbg !6547
  store i64 %fresh7, i64* %count.dbg.spill.i289, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i289, metadata !6184, metadata !DIExpression()), !dbg !6549
  %87 = getelementptr inbounds i32, i32* %buffer, i64 %fresh7, !dbg !6550
  store i32* %87, i32** %7, align 8, !dbg !6550
  %_3.i291 = load i32*, i32** %7, align 8, !dbg !6550
  br label %bb24, !dbg !6551

bb24:                                             ; preds = %bb23
  %88 = trunc i64 8 to i32, !dbg !6552
  store i32 %88, i32* %_3.i291, align 4, !dbg !6552
  %fresh8 = load i64, i64* %i, align 8, !dbg !6553
  store i64 %fresh8, i64* %fresh8.dbg.spill, align 8, !dbg !6553
  call void @llvm.dbg.declare(metadata i64* %fresh8.dbg.spill, metadata !6279, metadata !DIExpression()), !dbg !6554
  %_78 = load i64, i64* %i, align 8, !dbg !6555
  store i64 %_78, i64* %self.dbg.spill.i118, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i118, metadata !6432, metadata !DIExpression()), !dbg !6556
  store i64 1, i64* %rhs.dbg.spill.i117, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i117, metadata !6435, metadata !DIExpression()), !dbg !6558
  %89 = add i64 %_78, 1, !dbg !6559
  br label %bb25, !dbg !6555

bb25:                                             ; preds = %bb24
  store i64 %89, i64* %i, align 8, !dbg !6560
  br label %bb26, !dbg !6561

bb26:                                             ; preds = %bb25
  store i32* %buffer, i32** %self.dbg.spill.i287, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i287, metadata !6181, metadata !DIExpression()), !dbg !6562
  store i64 %fresh8, i64* %count.dbg.spill.i286, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i286, metadata !6184, metadata !DIExpression()), !dbg !6564
  %90 = getelementptr inbounds i32, i32* %buffer, i64 %fresh8, !dbg !6565
  store i32* %90, i32** %8, align 8, !dbg !6565
  %_3.i288 = load i32*, i32** %8, align 8, !dbg !6565
  br label %bb27, !dbg !6566

bb27:                                             ; preds = %bb26
  %91 = trunc i64 4 to i32, !dbg !6567
  store i32 %91, i32* %_3.i288, align 4, !dbg !6567
  %fresh9 = load i64, i64* %i, align 8, !dbg !6568
  store i64 %fresh9, i64* %fresh9.dbg.spill, align 8, !dbg !6568
  call void @llvm.dbg.declare(metadata i64* %fresh9.dbg.spill, metadata !6281, metadata !DIExpression()), !dbg !6569
  %_87 = load i64, i64* %i, align 8, !dbg !6570
  store i64 %_87, i64* %self.dbg.spill.i116, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i116, metadata !6432, metadata !DIExpression()), !dbg !6571
  store i64 1, i64* %rhs.dbg.spill.i115, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i115, metadata !6435, metadata !DIExpression()), !dbg !6573
  %92 = add i64 %_87, 1, !dbg !6574
  br label %bb28, !dbg !6570

bb28:                                             ; preds = %bb27
  store i64 %92, i64* %i, align 8, !dbg !6575
  br label %bb29, !dbg !6576

bb29:                                             ; preds = %bb28
  store i32* %buffer, i32** %self.dbg.spill.i284, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i284, metadata !6181, metadata !DIExpression()), !dbg !6577
  store i64 %fresh9, i64* %count.dbg.spill.i283, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i283, metadata !6184, metadata !DIExpression()), !dbg !6579
  %93 = getelementptr inbounds i32, i32* %buffer, i64 %fresh9, !dbg !6580
  store i32* %93, i32** %9, align 8, !dbg !6580
  %_3.i285 = load i32*, i32** %9, align 8, !dbg !6580
  br label %bb30, !dbg !6581

bb30:                                             ; preds = %bb29
  %94 = trunc i64 4 to i32, !dbg !6582
  store i32 %94, i32* %_3.i285, align 4, !dbg !6582
  %fresh10 = load i64, i64* %i, align 8, !dbg !6583
  store i64 %fresh10, i64* %fresh10.dbg.spill, align 8, !dbg !6583
  call void @llvm.dbg.declare(metadata i64* %fresh10.dbg.spill, metadata !6283, metadata !DIExpression()), !dbg !6584
  %_96 = load i64, i64* %i, align 8, !dbg !6585
  store i64 %_96, i64* %self.dbg.spill.i114, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i114, metadata !6432, metadata !DIExpression()), !dbg !6586
  store i64 1, i64* %rhs.dbg.spill.i113, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i113, metadata !6435, metadata !DIExpression()), !dbg !6588
  %95 = add i64 %_96, 1, !dbg !6589
  br label %bb31, !dbg !6585

bb31:                                             ; preds = %bb30
  store i64 %95, i64* %i, align 8, !dbg !6590
  br label %bb32, !dbg !6591

bb32:                                             ; preds = %bb31
  store i32* %buffer, i32** %self.dbg.spill.i281, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i281, metadata !6181, metadata !DIExpression()), !dbg !6592
  store i64 %fresh10, i64* %count.dbg.spill.i280, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i280, metadata !6184, metadata !DIExpression()), !dbg !6594
  %96 = getelementptr inbounds i32, i32* %buffer, i64 %fresh10, !dbg !6595
  store i32* %96, i32** %10, align 8, !dbg !6595
  %_3.i282 = load i32*, i32** %10, align 8, !dbg !6595
  br label %bb33, !dbg !6596

bb33:                                             ; preds = %bb32
  %97 = trunc i64 8 to i32, !dbg !6597
  store i32 %97, i32* %_3.i282, align 4, !dbg !6597
  %fresh11 = load i64, i64* %i, align 8, !dbg !6598
  store i64 %fresh11, i64* %fresh11.dbg.spill, align 8, !dbg !6598
  call void @llvm.dbg.declare(metadata i64* %fresh11.dbg.spill, metadata !6285, metadata !DIExpression()), !dbg !6599
  %_105 = load i64, i64* %i, align 8, !dbg !6600
  store i64 %_105, i64* %self.dbg.spill.i112, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i112, metadata !6432, metadata !DIExpression()), !dbg !6601
  store i64 1, i64* %rhs.dbg.spill.i111, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i111, metadata !6435, metadata !DIExpression()), !dbg !6603
  %98 = add i64 %_105, 1, !dbg !6604
  br label %bb34, !dbg !6600

bb34:                                             ; preds = %bb33
  store i64 %98, i64* %i, align 8, !dbg !6605
  br label %bb35, !dbg !6606

bb35:                                             ; preds = %bb34
  store i32* %buffer, i32** %self.dbg.spill.i278, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i278, metadata !6181, metadata !DIExpression()), !dbg !6607
  store i64 %fresh11, i64* %count.dbg.spill.i277, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i277, metadata !6184, metadata !DIExpression()), !dbg !6609
  %99 = getelementptr inbounds i32, i32* %buffer, i64 %fresh11, !dbg !6610
  store i32* %99, i32** %11, align 8, !dbg !6610
  %_3.i279 = load i32*, i32** %11, align 8, !dbg !6610
  br label %bb36, !dbg !6611

bb36:                                             ; preds = %bb35
  %100 = trunc i64 8 to i32, !dbg !6612
  store i32 %100, i32* %_3.i279, align 4, !dbg !6612
  %fresh12 = load i64, i64* %i, align 8, !dbg !6613
  store i64 %fresh12, i64* %fresh12.dbg.spill, align 8, !dbg !6613
  call void @llvm.dbg.declare(metadata i64* %fresh12.dbg.spill, metadata !6287, metadata !DIExpression()), !dbg !6614
  %_114 = load i64, i64* %i, align 8, !dbg !6615
  store i64 %_114, i64* %self.dbg.spill.i110, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i110, metadata !6432, metadata !DIExpression()), !dbg !6616
  store i64 1, i64* %rhs.dbg.spill.i109, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i109, metadata !6435, metadata !DIExpression()), !dbg !6618
  %101 = add i64 %_114, 1, !dbg !6619
  br label %bb37, !dbg !6615

bb37:                                             ; preds = %bb36
  store i64 %101, i64* %i, align 8, !dbg !6620
  br label %bb38, !dbg !6621

bb38:                                             ; preds = %bb37
  store i32* %buffer, i32** %self.dbg.spill.i275, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i275, metadata !6181, metadata !DIExpression()), !dbg !6622
  store i64 %fresh12, i64* %count.dbg.spill.i274, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i274, metadata !6184, metadata !DIExpression()), !dbg !6624
  %102 = getelementptr inbounds i32, i32* %buffer, i64 %fresh12, !dbg !6625
  store i32* %102, i32** %12, align 8, !dbg !6625
  %_3.i276 = load i32*, i32** %12, align 8, !dbg !6625
  br label %bb39, !dbg !6626

bb39:                                             ; preds = %bb38
  %103 = trunc i64 4 to i32, !dbg !6627
  store i32 %103, i32* %_3.i276, align 4, !dbg !6627
  %fresh13 = load i64, i64* %i, align 8, !dbg !6628
  store i64 %fresh13, i64* %fresh13.dbg.spill, align 8, !dbg !6628
  call void @llvm.dbg.declare(metadata i64* %fresh13.dbg.spill, metadata !6289, metadata !DIExpression()), !dbg !6629
  %_123 = load i64, i64* %i, align 8, !dbg !6630
  store i64 %_123, i64* %self.dbg.spill.i108, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i108, metadata !6432, metadata !DIExpression()), !dbg !6631
  store i64 1, i64* %rhs.dbg.spill.i107, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i107, metadata !6435, metadata !DIExpression()), !dbg !6633
  %104 = add i64 %_123, 1, !dbg !6634
  br label %bb40, !dbg !6630

bb40:                                             ; preds = %bb39
  store i64 %104, i64* %i, align 8, !dbg !6635
  br label %bb41, !dbg !6636

bb41:                                             ; preds = %bb40
  store i32* %buffer, i32** %self.dbg.spill.i272, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i272, metadata !6181, metadata !DIExpression()), !dbg !6637
  store i64 %fresh13, i64* %count.dbg.spill.i271, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i271, metadata !6184, metadata !DIExpression()), !dbg !6639
  %105 = getelementptr inbounds i32, i32* %buffer, i64 %fresh13, !dbg !6640
  store i32* %105, i32** %13, align 8, !dbg !6640
  %_3.i273 = load i32*, i32** %13, align 8, !dbg !6640
  br label %bb42, !dbg !6641

bb42:                                             ; preds = %bb41
  %106 = trunc i64 4 to i32, !dbg !6642
  store i32 %106, i32* %_3.i273, align 4, !dbg !6642
  %fresh14 = load i64, i64* %i, align 8, !dbg !6643
  store i64 %fresh14, i64* %fresh14.dbg.spill, align 8, !dbg !6643
  call void @llvm.dbg.declare(metadata i64* %fresh14.dbg.spill, metadata !6291, metadata !DIExpression()), !dbg !6644
  %_132 = load i64, i64* %i, align 8, !dbg !6645
  store i64 %_132, i64* %self.dbg.spill.i106, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i106, metadata !6432, metadata !DIExpression()), !dbg !6646
  store i64 1, i64* %rhs.dbg.spill.i105, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i105, metadata !6435, metadata !DIExpression()), !dbg !6648
  %107 = add i64 %_132, 1, !dbg !6649
  br label %bb43, !dbg !6645

bb43:                                             ; preds = %bb42
  store i64 %107, i64* %i, align 8, !dbg !6650
  br label %bb44, !dbg !6651

bb44:                                             ; preds = %bb43
  store i32* %buffer, i32** %self.dbg.spill.i269, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i269, metadata !6181, metadata !DIExpression()), !dbg !6652
  store i64 %fresh14, i64* %count.dbg.spill.i268, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i268, metadata !6184, metadata !DIExpression()), !dbg !6654
  %108 = getelementptr inbounds i32, i32* %buffer, i64 %fresh14, !dbg !6655
  store i32* %108, i32** %14, align 8, !dbg !6655
  %_3.i270 = load i32*, i32** %14, align 8, !dbg !6655
  br label %bb45, !dbg !6656

bb45:                                             ; preds = %bb44
  %109 = trunc i64 8 to i32, !dbg !6657
  store i32 %109, i32* %_3.i270, align 4, !dbg !6657
  %fresh15 = load i64, i64* %i, align 8, !dbg !6658
  store i64 %fresh15, i64* %fresh15.dbg.spill, align 8, !dbg !6658
  call void @llvm.dbg.declare(metadata i64* %fresh15.dbg.spill, metadata !6293, metadata !DIExpression()), !dbg !6659
  %_141 = load i64, i64* %i, align 8, !dbg !6660
  store i64 %_141, i64* %self.dbg.spill.i104, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i104, metadata !6432, metadata !DIExpression()), !dbg !6661
  store i64 1, i64* %rhs.dbg.spill.i103, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i103, metadata !6435, metadata !DIExpression()), !dbg !6663
  %110 = add i64 %_141, 1, !dbg !6664
  br label %bb46, !dbg !6660

bb46:                                             ; preds = %bb45
  store i64 %110, i64* %i, align 8, !dbg !6665
  store i64 8, i64* %66, align 8, !dbg !6666
  %_143 = load i64, i64* %66, align 8, !dbg !6666
  br label %bb47, !dbg !6666

bb47:                                             ; preds = %bb46
  store i32* %buffer, i32** %self.dbg.spill.i266, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i266, metadata !6181, metadata !DIExpression()), !dbg !6667
  store i64 %fresh15, i64* %count.dbg.spill.i265, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i265, metadata !6184, metadata !DIExpression()), !dbg !6669
  %111 = getelementptr inbounds i32, i32* %buffer, i64 %fresh15, !dbg !6670
  store i32* %111, i32** %15, align 8, !dbg !6670
  %_3.i267 = load i32*, i32** %15, align 8, !dbg !6670
  br label %bb48, !dbg !6671

bb48:                                             ; preds = %bb47
  %112 = trunc i64 %_143 to i32, !dbg !6672
  store i32 %112, i32* %_3.i267, align 4, !dbg !6672
  %fresh16 = load i64, i64* %i, align 8, !dbg !6673
  store i64 %fresh16, i64* %fresh16.dbg.spill, align 8, !dbg !6673
  call void @llvm.dbg.declare(metadata i64* %fresh16.dbg.spill, metadata !6295, metadata !DIExpression()), !dbg !6674
  %_150 = load i64, i64* %i, align 8, !dbg !6675
  store i64 %_150, i64* %self.dbg.spill.i102, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i102, metadata !6432, metadata !DIExpression()), !dbg !6676
  store i64 1, i64* %rhs.dbg.spill.i101, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i101, metadata !6435, metadata !DIExpression()), !dbg !6678
  %113 = add i64 %_150, 1, !dbg !6679
  br label %bb49, !dbg !6675

bb49:                                             ; preds = %bb48
  store i64 %113, i64* %i, align 8, !dbg !6680
  br label %bb50, !dbg !6681

bb50:                                             ; preds = %bb49
  store i32* %buffer, i32** %self.dbg.spill.i263, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i263, metadata !6181, metadata !DIExpression()), !dbg !6682
  store i64 %fresh16, i64* %count.dbg.spill.i262, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i262, metadata !6184, metadata !DIExpression()), !dbg !6684
  %114 = getelementptr inbounds i32, i32* %buffer, i64 %fresh16, !dbg !6685
  store i32* %114, i32** %16, align 8, !dbg !6685
  %_3.i264 = load i32*, i32** %16, align 8, !dbg !6685
  br label %bb51, !dbg !6686

bb51:                                             ; preds = %bb50
  %115 = trunc i64 8 to i32, !dbg !6687
  store i32 %115, i32* %_3.i264, align 4, !dbg !6687
  %fresh17 = load i64, i64* %i, align 8, !dbg !6688
  store i64 %fresh17, i64* %fresh17.dbg.spill, align 8, !dbg !6688
  call void @llvm.dbg.declare(metadata i64* %fresh17.dbg.spill, metadata !6297, metadata !DIExpression()), !dbg !6689
  %_159 = load i64, i64* %i, align 8, !dbg !6690
  store i64 %_159, i64* %self.dbg.spill.i100, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i100, metadata !6432, metadata !DIExpression()), !dbg !6691
  store i64 1, i64* %rhs.dbg.spill.i99, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i99, metadata !6435, metadata !DIExpression()), !dbg !6693
  %116 = add i64 %_159, 1, !dbg !6694
  br label %bb52, !dbg !6690

bb52:                                             ; preds = %bb51
  store i64 %116, i64* %i, align 8, !dbg !6695
  store i64 8, i64* %65, align 8, !dbg !6696
  %_161 = load i64, i64* %65, align 8, !dbg !6696
  br label %bb53, !dbg !6696

bb53:                                             ; preds = %bb52
  store i32* %buffer, i32** %self.dbg.spill.i260, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i260, metadata !6181, metadata !DIExpression()), !dbg !6697
  store i64 %fresh17, i64* %count.dbg.spill.i259, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i259, metadata !6184, metadata !DIExpression()), !dbg !6699
  %117 = getelementptr inbounds i32, i32* %buffer, i64 %fresh17, !dbg !6700
  store i32* %117, i32** %17, align 8, !dbg !6700
  %_3.i261 = load i32*, i32** %17, align 8, !dbg !6700
  br label %bb54, !dbg !6701

bb54:                                             ; preds = %bb53
  %118 = trunc i64 %_161 to i32, !dbg !6702
  store i32 %118, i32* %_3.i261, align 4, !dbg !6702
  %fresh18 = load i64, i64* %i, align 8, !dbg !6703
  store i64 %fresh18, i64* %fresh18.dbg.spill, align 8, !dbg !6703
  call void @llvm.dbg.declare(metadata i64* %fresh18.dbg.spill, metadata !6299, metadata !DIExpression()), !dbg !6704
  %_168 = load i64, i64* %i, align 8, !dbg !6705
  store i64 %_168, i64* %self.dbg.spill.i98, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i98, metadata !6432, metadata !DIExpression()), !dbg !6706
  store i64 1, i64* %rhs.dbg.spill.i97, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i97, metadata !6435, metadata !DIExpression()), !dbg !6708
  %119 = add i64 %_168, 1, !dbg !6709
  br label %bb55, !dbg !6705

bb55:                                             ; preds = %bb54
  store i64 %119, i64* %i, align 8, !dbg !6710
  br label %bb56, !dbg !6711

bb56:                                             ; preds = %bb55
  store i32* %buffer, i32** %self.dbg.spill.i257, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i257, metadata !6181, metadata !DIExpression()), !dbg !6712
  store i64 %fresh18, i64* %count.dbg.spill.i256, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i256, metadata !6184, metadata !DIExpression()), !dbg !6714
  %120 = getelementptr inbounds i32, i32* %buffer, i64 %fresh18, !dbg !6715
  store i32* %120, i32** %18, align 8, !dbg !6715
  %_3.i258 = load i32*, i32** %18, align 8, !dbg !6715
  br label %bb57, !dbg !6716

bb57:                                             ; preds = %bb56
  %121 = trunc i64 8 to i32, !dbg !6717
  store i32 %121, i32* %_3.i258, align 4, !dbg !6717
  %fresh19 = load i64, i64* %i, align 8, !dbg !6718
  store i64 %fresh19, i64* %fresh19.dbg.spill, align 8, !dbg !6718
  call void @llvm.dbg.declare(metadata i64* %fresh19.dbg.spill, metadata !6301, metadata !DIExpression()), !dbg !6719
  %_177 = load i64, i64* %i, align 8, !dbg !6720
  store i64 %_177, i64* %self.dbg.spill.i96, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i96, metadata !6432, metadata !DIExpression()), !dbg !6721
  store i64 1, i64* %rhs.dbg.spill.i95, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i95, metadata !6435, metadata !DIExpression()), !dbg !6723
  %122 = add i64 %_177, 1, !dbg !6724
  br label %bb58, !dbg !6720

bb58:                                             ; preds = %bb57
  store i64 %122, i64* %i, align 8, !dbg !6725
  store i64 8, i64* %64, align 8, !dbg !6726
  %_179 = load i64, i64* %64, align 8, !dbg !6726
  br label %bb59, !dbg !6726

bb59:                                             ; preds = %bb58
  store i32* %buffer, i32** %self.dbg.spill.i254, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i254, metadata !6181, metadata !DIExpression()), !dbg !6727
  store i64 %fresh19, i64* %count.dbg.spill.i253, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i253, metadata !6184, metadata !DIExpression()), !dbg !6729
  %123 = getelementptr inbounds i32, i32* %buffer, i64 %fresh19, !dbg !6730
  store i32* %123, i32** %19, align 8, !dbg !6730
  %_3.i255 = load i32*, i32** %19, align 8, !dbg !6730
  br label %bb60, !dbg !6731

bb60:                                             ; preds = %bb59
  %124 = trunc i64 %_179 to i32, !dbg !6732
  store i32 %124, i32* %_3.i255, align 4, !dbg !6732
  %fresh20 = load i64, i64* %i, align 8, !dbg !6733
  store i64 %fresh20, i64* %fresh20.dbg.spill, align 8, !dbg !6733
  call void @llvm.dbg.declare(metadata i64* %fresh20.dbg.spill, metadata !6303, metadata !DIExpression()), !dbg !6734
  %_186 = load i64, i64* %i, align 8, !dbg !6735
  store i64 %_186, i64* %self.dbg.spill.i94, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i94, metadata !6432, metadata !DIExpression()), !dbg !6736
  store i64 1, i64* %rhs.dbg.spill.i93, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i93, metadata !6435, metadata !DIExpression()), !dbg !6738
  %125 = add i64 %_186, 1, !dbg !6739
  br label %bb61, !dbg !6735

bb61:                                             ; preds = %bb60
  store i64 %125, i64* %i, align 8, !dbg !6740
  br label %bb62, !dbg !6741

bb62:                                             ; preds = %bb61
  store i32* %buffer, i32** %self.dbg.spill.i251, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i251, metadata !6181, metadata !DIExpression()), !dbg !6742
  store i64 %fresh20, i64* %count.dbg.spill.i250, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i250, metadata !6184, metadata !DIExpression()), !dbg !6744
  %126 = getelementptr inbounds i32, i32* %buffer, i64 %fresh20, !dbg !6745
  store i32* %126, i32** %20, align 8, !dbg !6745
  %_3.i252 = load i32*, i32** %20, align 8, !dbg !6745
  br label %bb63, !dbg !6746

bb63:                                             ; preds = %bb62
  %127 = trunc i64 8 to i32, !dbg !6747
  store i32 %127, i32* %_3.i252, align 4, !dbg !6747
  %fresh21 = load i64, i64* %i, align 8, !dbg !6748
  store i64 %fresh21, i64* %fresh21.dbg.spill, align 8, !dbg !6748
  call void @llvm.dbg.declare(metadata i64* %fresh21.dbg.spill, metadata !6305, metadata !DIExpression()), !dbg !6749
  %_195 = load i64, i64* %i, align 8, !dbg !6750
  store i64 %_195, i64* %self.dbg.spill.i92, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i92, metadata !6432, metadata !DIExpression()), !dbg !6751
  store i64 1, i64* %rhs.dbg.spill.i91, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i91, metadata !6435, metadata !DIExpression()), !dbg !6753
  %128 = add i64 %_195, 1, !dbg !6754
  br label %bb64, !dbg !6750

bb64:                                             ; preds = %bb63
  store i64 %128, i64* %i, align 8, !dbg !6755
  store i64 8, i64* %63, align 8, !dbg !6756
  %_197 = load i64, i64* %63, align 8, !dbg !6756
  br label %bb65, !dbg !6756

bb65:                                             ; preds = %bb64
  store i32* %buffer, i32** %self.dbg.spill.i248, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i248, metadata !6181, metadata !DIExpression()), !dbg !6757
  store i64 %fresh21, i64* %count.dbg.spill.i247, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i247, metadata !6184, metadata !DIExpression()), !dbg !6759
  %129 = getelementptr inbounds i32, i32* %buffer, i64 %fresh21, !dbg !6760
  store i32* %129, i32** %21, align 8, !dbg !6760
  %_3.i249 = load i32*, i32** %21, align 8, !dbg !6760
  br label %bb66, !dbg !6761

bb66:                                             ; preds = %bb65
  %130 = trunc i64 %_197 to i32, !dbg !6762
  store i32 %130, i32* %_3.i249, align 4, !dbg !6762
  %fresh22 = load i64, i64* %i, align 8, !dbg !6763
  store i64 %fresh22, i64* %fresh22.dbg.spill, align 8, !dbg !6763
  call void @llvm.dbg.declare(metadata i64* %fresh22.dbg.spill, metadata !6307, metadata !DIExpression()), !dbg !6764
  %_204 = load i64, i64* %i, align 8, !dbg !6765
  store i64 %_204, i64* %self.dbg.spill.i90, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i90, metadata !6432, metadata !DIExpression()), !dbg !6766
  store i64 1, i64* %rhs.dbg.spill.i89, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i89, metadata !6435, metadata !DIExpression()), !dbg !6768
  %131 = add i64 %_204, 1, !dbg !6769
  br label %bb67, !dbg !6765

bb67:                                             ; preds = %bb66
  store i64 %131, i64* %i, align 8, !dbg !6770
  br label %bb68, !dbg !6771

bb68:                                             ; preds = %bb67
  store i32* %buffer, i32** %self.dbg.spill.i245, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i245, metadata !6181, metadata !DIExpression()), !dbg !6772
  store i64 %fresh22, i64* %count.dbg.spill.i244, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i244, metadata !6184, metadata !DIExpression()), !dbg !6774
  %132 = getelementptr inbounds i32, i32* %buffer, i64 %fresh22, !dbg !6775
  store i32* %132, i32** %22, align 8, !dbg !6775
  %_3.i246 = load i32*, i32** %22, align 8, !dbg !6775
  br label %bb69, !dbg !6776

bb69:                                             ; preds = %bb68
  %133 = trunc i64 8 to i32, !dbg !6777
  store i32 %133, i32* %_3.i246, align 4, !dbg !6777
  %fresh23 = load i64, i64* %i, align 8, !dbg !6778
  store i64 %fresh23, i64* %fresh23.dbg.spill, align 8, !dbg !6778
  call void @llvm.dbg.declare(metadata i64* %fresh23.dbg.spill, metadata !6309, metadata !DIExpression()), !dbg !6779
  %_213 = load i64, i64* %i, align 8, !dbg !6780
  store i64 %_213, i64* %self.dbg.spill.i88, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i88, metadata !6432, metadata !DIExpression()), !dbg !6781
  store i64 1, i64* %rhs.dbg.spill.i87, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i87, metadata !6435, metadata !DIExpression()), !dbg !6783
  %134 = add i64 %_213, 1, !dbg !6784
  br label %bb70, !dbg !6780

bb70:                                             ; preds = %bb69
  store i64 %134, i64* %i, align 8, !dbg !6785
  br label %bb71, !dbg !6786

bb71:                                             ; preds = %bb70
  store i32* %buffer, i32** %self.dbg.spill.i242, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i242, metadata !6181, metadata !DIExpression()), !dbg !6787
  store i64 %fresh23, i64* %count.dbg.spill.i241, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i241, metadata !6184, metadata !DIExpression()), !dbg !6789
  %135 = getelementptr inbounds i32, i32* %buffer, i64 %fresh23, !dbg !6790
  store i32* %135, i32** %23, align 8, !dbg !6790
  %_3.i243 = load i32*, i32** %23, align 8, !dbg !6790
  br label %bb72, !dbg !6791

bb72:                                             ; preds = %bb71
  %136 = trunc i64 8 to i32, !dbg !6792
  store i32 %136, i32* %_3.i243, align 4, !dbg !6792
  %fresh24 = load i64, i64* %i, align 8, !dbg !6793
  store i64 %fresh24, i64* %fresh24.dbg.spill, align 8, !dbg !6793
  call void @llvm.dbg.declare(metadata i64* %fresh24.dbg.spill, metadata !6311, metadata !DIExpression()), !dbg !6794
  %_222 = load i64, i64* %i, align 8, !dbg !6795
  store i64 %_222, i64* %self.dbg.spill.i86, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i86, metadata !6432, metadata !DIExpression()), !dbg !6796
  store i64 1, i64* %rhs.dbg.spill.i85, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i85, metadata !6435, metadata !DIExpression()), !dbg !6798
  %137 = add i64 %_222, 1, !dbg !6799
  br label %bb73, !dbg !6795

bb73:                                             ; preds = %bb72
  store i64 %137, i64* %i, align 8, !dbg !6800
  br label %bb74, !dbg !6801

bb74:                                             ; preds = %bb73
  store i32* %buffer, i32** %self.dbg.spill.i239, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i239, metadata !6181, metadata !DIExpression()), !dbg !6802
  store i64 %fresh24, i64* %count.dbg.spill.i238, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i238, metadata !6184, metadata !DIExpression()), !dbg !6804
  %138 = getelementptr inbounds i32, i32* %buffer, i64 %fresh24, !dbg !6805
  store i32* %138, i32** %24, align 8, !dbg !6805
  %_3.i240 = load i32*, i32** %24, align 8, !dbg !6805
  br label %bb75, !dbg !6806

bb75:                                             ; preds = %bb74
  %139 = trunc i64 8 to i32, !dbg !6807
  store i32 %139, i32* %_3.i240, align 4, !dbg !6807
  %fresh25 = load i64, i64* %i, align 8, !dbg !6808
  store i64 %fresh25, i64* %fresh25.dbg.spill, align 8, !dbg !6808
  call void @llvm.dbg.declare(metadata i64* %fresh25.dbg.spill, metadata !6313, metadata !DIExpression()), !dbg !6809
  %_231 = load i64, i64* %i, align 8, !dbg !6810
  store i64 %_231, i64* %self.dbg.spill.i84, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i84, metadata !6432, metadata !DIExpression()), !dbg !6811
  store i64 1, i64* %rhs.dbg.spill.i83, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i83, metadata !6435, metadata !DIExpression()), !dbg !6813
  %140 = add i64 %_231, 1, !dbg !6814
  br label %bb76, !dbg !6810

bb76:                                             ; preds = %bb75
  store i64 %140, i64* %i, align 8, !dbg !6815
  br label %bb77, !dbg !6816

bb77:                                             ; preds = %bb76
  store i32* %buffer, i32** %self.dbg.spill.i236, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i236, metadata !6181, metadata !DIExpression()), !dbg !6817
  store i64 %fresh25, i64* %count.dbg.spill.i235, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i235, metadata !6184, metadata !DIExpression()), !dbg !6819
  %141 = getelementptr inbounds i32, i32* %buffer, i64 %fresh25, !dbg !6820
  store i32* %141, i32** %25, align 8, !dbg !6820
  %_3.i237 = load i32*, i32** %25, align 8, !dbg !6820
  br label %bb78, !dbg !6821

bb78:                                             ; preds = %bb77
  %142 = trunc i64 8 to i32, !dbg !6822
  store i32 %142, i32* %_3.i237, align 4, !dbg !6822
  %fresh26 = load i64, i64* %i, align 8, !dbg !6823
  store i64 %fresh26, i64* %fresh26.dbg.spill, align 8, !dbg !6823
  call void @llvm.dbg.declare(metadata i64* %fresh26.dbg.spill, metadata !6315, metadata !DIExpression()), !dbg !6824
  %_240 = load i64, i64* %i, align 8, !dbg !6825
  store i64 %_240, i64* %self.dbg.spill.i82, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i82, metadata !6432, metadata !DIExpression()), !dbg !6826
  store i64 1, i64* %rhs.dbg.spill.i81, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i81, metadata !6435, metadata !DIExpression()), !dbg !6828
  %143 = add i64 %_240, 1, !dbg !6829
  br label %bb79, !dbg !6825

bb79:                                             ; preds = %bb78
  store i64 %143, i64* %i, align 8, !dbg !6830
  br label %bb80, !dbg !6831

bb80:                                             ; preds = %bb79
  store i32* %buffer, i32** %self.dbg.spill.i233, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i233, metadata !6181, metadata !DIExpression()), !dbg !6832
  store i64 %fresh26, i64* %count.dbg.spill.i232, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i232, metadata !6184, metadata !DIExpression()), !dbg !6834
  %144 = getelementptr inbounds i32, i32* %buffer, i64 %fresh26, !dbg !6835
  store i32* %144, i32** %26, align 8, !dbg !6835
  %_3.i234 = load i32*, i32** %26, align 8, !dbg !6835
  br label %bb81, !dbg !6836

bb81:                                             ; preds = %bb80
  %145 = trunc i64 8 to i32, !dbg !6837
  store i32 %145, i32* %_3.i234, align 4, !dbg !6837
  %fresh27 = load i64, i64* %i, align 8, !dbg !6838
  store i64 %fresh27, i64* %fresh27.dbg.spill, align 8, !dbg !6838
  call void @llvm.dbg.declare(metadata i64* %fresh27.dbg.spill, metadata !6317, metadata !DIExpression()), !dbg !6839
  %_249 = load i64, i64* %i, align 8, !dbg !6840
  store i64 %_249, i64* %self.dbg.spill.i80, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i80, metadata !6432, metadata !DIExpression()), !dbg !6841
  store i64 1, i64* %rhs.dbg.spill.i79, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i79, metadata !6435, metadata !DIExpression()), !dbg !6843
  %146 = add i64 %_249, 1, !dbg !6844
  br label %bb82, !dbg !6840

bb82:                                             ; preds = %bb81
  store i64 %146, i64* %i, align 8, !dbg !6845
  br label %bb83, !dbg !6846

bb83:                                             ; preds = %bb82
  store i32* %buffer, i32** %self.dbg.spill.i230, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i230, metadata !6181, metadata !DIExpression()), !dbg !6847
  store i64 %fresh27, i64* %count.dbg.spill.i229, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i229, metadata !6184, metadata !DIExpression()), !dbg !6849
  %147 = getelementptr inbounds i32, i32* %buffer, i64 %fresh27, !dbg !6850
  store i32* %147, i32** %27, align 8, !dbg !6850
  %_3.i231 = load i32*, i32** %27, align 8, !dbg !6850
  br label %bb84, !dbg !6851

bb84:                                             ; preds = %bb83
  %148 = trunc i64 8 to i32, !dbg !6852
  store i32 %148, i32* %_3.i231, align 4, !dbg !6852
  %fresh28 = load i64, i64* %i, align 8, !dbg !6853
  store i64 %fresh28, i64* %fresh28.dbg.spill, align 8, !dbg !6853
  call void @llvm.dbg.declare(metadata i64* %fresh28.dbg.spill, metadata !6319, metadata !DIExpression()), !dbg !6854
  %_258 = load i64, i64* %i, align 8, !dbg !6855
  store i64 %_258, i64* %self.dbg.spill.i78, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i78, metadata !6432, metadata !DIExpression()), !dbg !6856
  store i64 1, i64* %rhs.dbg.spill.i77, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i77, metadata !6435, metadata !DIExpression()), !dbg !6858
  %149 = add i64 %_258, 1, !dbg !6859
  br label %bb85, !dbg !6855

bb85:                                             ; preds = %bb84
  store i64 %149, i64* %i, align 8, !dbg !6860
  br label %bb86, !dbg !6861

bb86:                                             ; preds = %bb85
  store i32* %buffer, i32** %self.dbg.spill.i227, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i227, metadata !6181, metadata !DIExpression()), !dbg !6862
  store i64 %fresh28, i64* %count.dbg.spill.i226, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i226, metadata !6184, metadata !DIExpression()), !dbg !6864
  %150 = getelementptr inbounds i32, i32* %buffer, i64 %fresh28, !dbg !6865
  store i32* %150, i32** %28, align 8, !dbg !6865
  %_3.i228 = load i32*, i32** %28, align 8, !dbg !6865
  br label %bb87, !dbg !6866

bb87:                                             ; preds = %bb86
  %151 = trunc i64 8 to i32, !dbg !6867
  store i32 %151, i32* %_3.i228, align 4, !dbg !6867
  %fresh29 = load i64, i64* %i, align 8, !dbg !6868
  store i64 %fresh29, i64* %fresh29.dbg.spill, align 8, !dbg !6868
  call void @llvm.dbg.declare(metadata i64* %fresh29.dbg.spill, metadata !6321, metadata !DIExpression()), !dbg !6869
  %_267 = load i64, i64* %i, align 8, !dbg !6870
  store i64 %_267, i64* %self.dbg.spill.i76, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i76, metadata !6432, metadata !DIExpression()), !dbg !6871
  store i64 1, i64* %rhs.dbg.spill.i75, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i75, metadata !6435, metadata !DIExpression()), !dbg !6873
  %152 = add i64 %_267, 1, !dbg !6874
  br label %bb88, !dbg !6870

bb88:                                             ; preds = %bb87
  store i64 %152, i64* %i, align 8, !dbg !6875
  br label %bb89, !dbg !6876

bb89:                                             ; preds = %bb88
  store i32* %buffer, i32** %self.dbg.spill.i224, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i224, metadata !6181, metadata !DIExpression()), !dbg !6877
  store i64 %fresh29, i64* %count.dbg.spill.i223, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i223, metadata !6184, metadata !DIExpression()), !dbg !6879
  %153 = getelementptr inbounds i32, i32* %buffer, i64 %fresh29, !dbg !6880
  store i32* %153, i32** %29, align 8, !dbg !6880
  %_3.i225 = load i32*, i32** %29, align 8, !dbg !6880
  br label %bb90, !dbg !6881

bb90:                                             ; preds = %bb89
  %154 = trunc i64 4 to i32, !dbg !6882
  store i32 %154, i32* %_3.i225, align 4, !dbg !6882
  %fresh30 = load i64, i64* %i, align 8, !dbg !6883
  store i64 %fresh30, i64* %fresh30.dbg.spill, align 8, !dbg !6883
  call void @llvm.dbg.declare(metadata i64* %fresh30.dbg.spill, metadata !6323, metadata !DIExpression()), !dbg !6884
  %_276 = load i64, i64* %i, align 8, !dbg !6885
  store i64 %_276, i64* %self.dbg.spill.i74, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i74, metadata !6432, metadata !DIExpression()), !dbg !6886
  store i64 1, i64* %rhs.dbg.spill.i73, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i73, metadata !6435, metadata !DIExpression()), !dbg !6888
  %155 = add i64 %_276, 1, !dbg !6889
  br label %bb91, !dbg !6885

bb91:                                             ; preds = %bb90
  store i64 %155, i64* %i, align 8, !dbg !6890
  br label %bb92, !dbg !6891

bb92:                                             ; preds = %bb91
  store i32* %buffer, i32** %self.dbg.spill.i221, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i221, metadata !6181, metadata !DIExpression()), !dbg !6892
  store i64 %fresh30, i64* %count.dbg.spill.i220, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i220, metadata !6184, metadata !DIExpression()), !dbg !6894
  %156 = getelementptr inbounds i32, i32* %buffer, i64 %fresh30, !dbg !6895
  store i32* %156, i32** %30, align 8, !dbg !6895
  %_3.i222 = load i32*, i32** %30, align 8, !dbg !6895
  br label %bb93, !dbg !6896

bb93:                                             ; preds = %bb92
  %157 = trunc i64 4 to i32, !dbg !6897
  store i32 %157, i32* %_3.i222, align 4, !dbg !6897
  %fresh31 = load i64, i64* %i, align 8, !dbg !6898
  store i64 %fresh31, i64* %fresh31.dbg.spill, align 8, !dbg !6898
  call void @llvm.dbg.declare(metadata i64* %fresh31.dbg.spill, metadata !6325, metadata !DIExpression()), !dbg !6899
  %_285 = load i64, i64* %i, align 8, !dbg !6900
  store i64 %_285, i64* %self.dbg.spill.i72, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i72, metadata !6432, metadata !DIExpression()), !dbg !6901
  store i64 1, i64* %rhs.dbg.spill.i71, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i71, metadata !6435, metadata !DIExpression()), !dbg !6903
  %158 = add i64 %_285, 1, !dbg !6904
  br label %bb94, !dbg !6900

bb94:                                             ; preds = %bb93
  store i64 %158, i64* %i, align 8, !dbg !6905
  br label %bb95, !dbg !6906

bb95:                                             ; preds = %bb94
  store i32* %buffer, i32** %self.dbg.spill.i218, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i218, metadata !6181, metadata !DIExpression()), !dbg !6907
  store i64 %fresh31, i64* %count.dbg.spill.i217, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i217, metadata !6184, metadata !DIExpression()), !dbg !6909
  %159 = getelementptr inbounds i32, i32* %buffer, i64 %fresh31, !dbg !6910
  store i32* %159, i32** %31, align 8, !dbg !6910
  %_3.i219 = load i32*, i32** %31, align 8, !dbg !6910
  br label %bb96, !dbg !6911

bb96:                                             ; preds = %bb95
  %160 = trunc i64 4 to i32, !dbg !6912
  store i32 %160, i32* %_3.i219, align 4, !dbg !6912
  store i32 6, i32* %a, align 4, !dbg !6913
  store i32 7, i32* %b, align 4, !dbg !6914
  %fresh32 = load i64, i64* %i, align 8, !dbg !6915
  store i64 %fresh32, i64* %fresh32.dbg.spill, align 8, !dbg !6915
  call void @llvm.dbg.declare(metadata i64* %fresh32.dbg.spill, metadata !6331, metadata !DIExpression()), !dbg !6916
  %_296 = load i64, i64* %i, align 8, !dbg !6917
  store i64 %_296, i64* %self.dbg.spill.i70, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i70, metadata !6432, metadata !DIExpression()), !dbg !6918
  store i64 1, i64* %rhs.dbg.spill.i69, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i69, metadata !6435, metadata !DIExpression()), !dbg !6920
  %161 = add i64 %_296, 1, !dbg !6921
  br label %bb97, !dbg !6917

bb97:                                             ; preds = %bb96
  store i64 %161, i64* %i, align 8, !dbg !6922
  br label %bb98, !dbg !6923

bb98:                                             ; preds = %bb97
  store i32* %buffer, i32** %self.dbg.spill.i215, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i215, metadata !6181, metadata !DIExpression()), !dbg !6924
  store i64 %fresh32, i64* %count.dbg.spill.i214, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i214, metadata !6184, metadata !DIExpression()), !dbg !6926
  %162 = getelementptr inbounds i32, i32* %buffer, i64 %fresh32, !dbg !6927
  store i32* %162, i32** %32, align 8, !dbg !6927
  %_3.i216 = load i32*, i32** %32, align 8, !dbg !6927
  br label %bb99, !dbg !6928

bb99:                                             ; preds = %bb98
  %163 = trunc i64 16 to i32, !dbg !6929
  store i32 %163, i32* %_3.i216, align 4, !dbg !6929
  %fresh33 = load i64, i64* %i, align 8, !dbg !6930
  store i64 %fresh33, i64* %fresh33.dbg.spill, align 8, !dbg !6930
  call void @llvm.dbg.declare(metadata i64* %fresh33.dbg.spill, metadata !6333, metadata !DIExpression()), !dbg !6931
  %_305 = load i64, i64* %i, align 8, !dbg !6932
  store i64 %_305, i64* %self.dbg.spill.i68, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i68, metadata !6432, metadata !DIExpression()), !dbg !6933
  store i64 1, i64* %rhs.dbg.spill.i67, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i67, metadata !6435, metadata !DIExpression()), !dbg !6935
  %164 = add i64 %_305, 1, !dbg !6936
  br label %bb100, !dbg !6932

bb100:                                            ; preds = %bb99
  store i64 %164, i64* %i, align 8, !dbg !6937
  br label %bb101, !dbg !6938

bb101:                                            ; preds = %bb100
  store i32* %buffer, i32** %self.dbg.spill.i212, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i212, metadata !6181, metadata !DIExpression()), !dbg !6939
  store i64 %fresh33, i64* %count.dbg.spill.i211, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i211, metadata !6184, metadata !DIExpression()), !dbg !6941
  %165 = getelementptr inbounds i32, i32* %buffer, i64 %fresh33, !dbg !6942
  store i32* %165, i32** %33, align 8, !dbg !6942
  %_3.i213 = load i32*, i32** %33, align 8, !dbg !6942
  br label %bb102, !dbg !6943

bb102:                                            ; preds = %bb101
  %166 = trunc i64 4 to i32, !dbg !6944
  store i32 %166, i32* %_3.i213, align 4, !dbg !6944
  %fresh34 = load i64, i64* %i, align 8, !dbg !6945
  store i64 %fresh34, i64* %fresh34.dbg.spill, align 8, !dbg !6945
  call void @llvm.dbg.declare(metadata i64* %fresh34.dbg.spill, metadata !6335, metadata !DIExpression()), !dbg !6946
  %_314 = load i64, i64* %i, align 8, !dbg !6947
  store i64 %_314, i64* %self.dbg.spill.i66, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i66, metadata !6432, metadata !DIExpression()), !dbg !6948
  store i64 1, i64* %rhs.dbg.spill.i65, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i65, metadata !6435, metadata !DIExpression()), !dbg !6950
  %167 = add i64 %_314, 1, !dbg !6951
  br label %bb103, !dbg !6947

bb103:                                            ; preds = %bb102
  store i64 %167, i64* %i, align 8, !dbg !6952
  br label %bb104, !dbg !6953

bb104:                                            ; preds = %bb103
  store i32* %buffer, i32** %self.dbg.spill.i209, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i209, metadata !6181, metadata !DIExpression()), !dbg !6954
  store i64 %fresh34, i64* %count.dbg.spill.i208, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i208, metadata !6184, metadata !DIExpression()), !dbg !6956
  %168 = getelementptr inbounds i32, i32* %buffer, i64 %fresh34, !dbg !6957
  store i32* %168, i32** %34, align 8, !dbg !6957
  %_3.i210 = load i32*, i32** %34, align 8, !dbg !6957
  br label %bb105, !dbg !6958

bb105:                                            ; preds = %bb104
  %169 = trunc i64 80 to i32, !dbg !6959
  store i32 %169, i32* %_3.i210, align 4, !dbg !6959
  %fresh35 = load i64, i64* %i, align 8, !dbg !6960
  store i64 %fresh35, i64* %fresh35.dbg.spill, align 8, !dbg !6960
  call void @llvm.dbg.declare(metadata i64* %fresh35.dbg.spill, metadata !6337, metadata !DIExpression()), !dbg !6961
  %_323 = load i64, i64* %i, align 8, !dbg !6962
  store i64 %_323, i64* %self.dbg.spill.i64, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i64, metadata !6432, metadata !DIExpression()), !dbg !6963
  store i64 1, i64* %rhs.dbg.spill.i63, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i63, metadata !6435, metadata !DIExpression()), !dbg !6965
  %170 = add i64 %_323, 1, !dbg !6966
  br label %bb106, !dbg !6962

bb106:                                            ; preds = %bb105
  store i64 %170, i64* %i, align 8, !dbg !6967
  br label %bb107, !dbg !6968

bb107:                                            ; preds = %bb106
  store i32* %buffer, i32** %self.dbg.spill.i206, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i206, metadata !6181, metadata !DIExpression()), !dbg !6969
  store i64 %fresh35, i64* %count.dbg.spill.i205, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i205, metadata !6184, metadata !DIExpression()), !dbg !6971
  %171 = getelementptr inbounds i32, i32* %buffer, i64 %fresh35, !dbg !6972
  store i32* %171, i32** %35, align 8, !dbg !6972
  %_3.i207 = load i32*, i32** %35, align 8, !dbg !6972
  br label %bb108, !dbg !6973

bb108:                                            ; preds = %bb107
  %172 = trunc i64 4 to i32, !dbg !6974
  store i32 %172, i32* %_3.i207, align 4, !dbg !6974
  %fresh36 = load i64, i64* %i, align 8, !dbg !6975
  store i64 %fresh36, i64* %fresh36.dbg.spill, align 8, !dbg !6975
  call void @llvm.dbg.declare(metadata i64* %fresh36.dbg.spill, metadata !6339, metadata !DIExpression()), !dbg !6976
  %_332 = load i64, i64* %i, align 8, !dbg !6977
  store i64 %_332, i64* %self.dbg.spill.i62, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i62, metadata !6432, metadata !DIExpression()), !dbg !6978
  store i64 1, i64* %rhs.dbg.spill.i61, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i61, metadata !6435, metadata !DIExpression()), !dbg !6980
  %173 = add i64 %_332, 1, !dbg !6981
  br label %bb109, !dbg !6977

bb109:                                            ; preds = %bb108
  store i64 %173, i64* %i, align 8, !dbg !6982
  br label %bb110, !dbg !6983

bb110:                                            ; preds = %bb109
  %_338 = load i32, i32* %a, align 4, !dbg !6984
  %_337 = zext i32 %_338 to i64, !dbg !6984
  %174 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 4, i64 %_337), !dbg !6983
  %_339.0 = extractvalue { i64, i1 } %174, 0, !dbg !6983
  %_339.1 = extractvalue { i64, i1 } %174, 1, !dbg !6983
  %175 = call i1 @llvm.expect.i1(i1 %_339.1, i1 false), !dbg !6983
  br i1 %175, label %panic, label %bb111, !dbg !6983

bb111:                                            ; preds = %bb110
  %176 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_339.0, i64 3), !dbg !6985
  %_341.0 = extractvalue { i64, i1 } %176, 0, !dbg !6985
  %_341.1 = extractvalue { i64, i1 } %176, 1, !dbg !6985
  %177 = call i1 @llvm.expect.i1(i1 %_341.1, i1 false), !dbg !6985
  br i1 %177, label %panic1, label %bb112, !dbg !6985

panic:                                            ; preds = %bb110
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc727 to %"core::panic::location::Location"*)) #16, !dbg !6983
  unreachable, !dbg !6983

bb112:                                            ; preds = %bb111
  store i32* %buffer, i32** %self.dbg.spill.i203, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i203, metadata !6181, metadata !DIExpression()), !dbg !6986
  store i64 %fresh36, i64* %count.dbg.spill.i202, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i202, metadata !6184, metadata !DIExpression()), !dbg !6988
  %178 = getelementptr inbounds i32, i32* %buffer, i64 %fresh36, !dbg !6989
  store i32* %178, i32** %36, align 8, !dbg !6989
  %_3.i204 = load i32*, i32** %36, align 8, !dbg !6989
  br label %bb113, !dbg !6990

panic1:                                           ; preds = %bb111
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc729 to %"core::panic::location::Location"*)) #16, !dbg !6985
  unreachable, !dbg !6985

bb113:                                            ; preds = %bb112
  %179 = trunc i64 %_341.0 to i32, !dbg !6991
  store i32 %179, i32* %_3.i204, align 4, !dbg !6991
  %fresh37 = load i64, i64* %i, align 8, !dbg !6992
  store i64 %fresh37, i64* %fresh37.dbg.spill, align 8, !dbg !6992
  call void @llvm.dbg.declare(metadata i64* %fresh37.dbg.spill, metadata !6341, metadata !DIExpression()), !dbg !6993
  %_348 = load i64, i64* %i, align 8, !dbg !6994
  store i64 %_348, i64* %self.dbg.spill.i60, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i60, metadata !6432, metadata !DIExpression()), !dbg !6995
  store i64 1, i64* %rhs.dbg.spill.i59, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i59, metadata !6435, metadata !DIExpression()), !dbg !6997
  %180 = add i64 %_348, 1, !dbg !6998
  br label %bb114, !dbg !6994

bb114:                                            ; preds = %bb113
  store i64 %180, i64* %i, align 8, !dbg !6999
  br label %bb115, !dbg !7000

bb115:                                            ; preds = %bb114
  store i32* %buffer, i32** %self.dbg.spill.i200, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i200, metadata !6181, metadata !DIExpression()), !dbg !7001
  store i64 %fresh37, i64* %count.dbg.spill.i199, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i199, metadata !6184, metadata !DIExpression()), !dbg !7003
  %181 = getelementptr inbounds i32, i32* %buffer, i64 %fresh37, !dbg !7004
  store i32* %181, i32** %37, align 8, !dbg !7004
  %_3.i201 = load i32*, i32** %37, align 8, !dbg !7004
  br label %bb116, !dbg !7005

bb116:                                            ; preds = %bb115
  %182 = trunc i64 4 to i32, !dbg !7006
  store i32 %182, i32* %_3.i201, align 4, !dbg !7006
  %fresh38 = load i64, i64* %i, align 8, !dbg !7007
  store i64 %fresh38, i64* %fresh38.dbg.spill, align 8, !dbg !7007
  call void @llvm.dbg.declare(metadata i64* %fresh38.dbg.spill, metadata !6343, metadata !DIExpression()), !dbg !7008
  %_357 = load i64, i64* %i, align 8, !dbg !7009
  store i64 %_357, i64* %self.dbg.spill.i58, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i58, metadata !6432, metadata !DIExpression()), !dbg !7010
  store i64 1, i64* %rhs.dbg.spill.i57, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i57, metadata !6435, metadata !DIExpression()), !dbg !7012
  %183 = add i64 %_357, 1, !dbg !7013
  br label %bb117, !dbg !7009

bb117:                                            ; preds = %bb116
  store i64 %183, i64* %i, align 8, !dbg !7014
  br label %bb118, !dbg !7015

bb118:                                            ; preds = %bb117
  %_362 = load i32, i32* %b, align 4, !dbg !7016
  %_361 = zext i32 %_362 to i64, !dbg !7016
  %184 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 16, i64 %_361), !dbg !7017
  %_363.0 = extractvalue { i64, i1 } %184, 0, !dbg !7017
  %_363.1 = extractvalue { i64, i1 } %184, 1, !dbg !7017
  %185 = call i1 @llvm.expect.i1(i1 %_363.1, i1 false), !dbg !7017
  br i1 %185, label %panic2, label %bb119, !dbg !7017

bb119:                                            ; preds = %bb118
  store i32* %buffer, i32** %self.dbg.spill.i197, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i197, metadata !6181, metadata !DIExpression()), !dbg !7018
  store i64 %fresh38, i64* %count.dbg.spill.i196, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i196, metadata !6184, metadata !DIExpression()), !dbg !7020
  %186 = getelementptr inbounds i32, i32* %buffer, i64 %fresh38, !dbg !7021
  store i32* %186, i32** %38, align 8, !dbg !7021
  %_3.i198 = load i32*, i32** %38, align 8, !dbg !7021
  br label %bb120, !dbg !7022

panic2:                                           ; preds = %bb118
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc731 to %"core::panic::location::Location"*)) #16, !dbg !7017
  unreachable, !dbg !7017

bb120:                                            ; preds = %bb119
  %187 = trunc i64 %_363.0 to i32, !dbg !7023
  store i32 %187, i32* %_3.i198, align 4, !dbg !7023
  %fresh39 = load i64, i64* %i, align 8, !dbg !7024
  store i64 %fresh39, i64* %fresh39.dbg.spill, align 8, !dbg !7024
  call void @llvm.dbg.declare(metadata i64* %fresh39.dbg.spill, metadata !6345, metadata !DIExpression()), !dbg !7025
  %_370 = load i64, i64* %i, align 8, !dbg !7026
  store i64 %_370, i64* %self.dbg.spill.i56, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i56, metadata !6432, metadata !DIExpression()), !dbg !7027
  store i64 1, i64* %rhs.dbg.spill.i55, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i55, metadata !6435, metadata !DIExpression()), !dbg !7029
  %188 = add i64 %_370, 1, !dbg !7030
  br label %bb121, !dbg !7026

bb121:                                            ; preds = %bb120
  store i64 %188, i64* %i, align 8, !dbg !7031
  br label %bb122, !dbg !7032

bb122:                                            ; preds = %bb121
  store i32* %buffer, i32** %self.dbg.spill.i194, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i194, metadata !6181, metadata !DIExpression()), !dbg !7033
  store i64 %fresh39, i64* %count.dbg.spill.i193, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i193, metadata !6184, metadata !DIExpression()), !dbg !7035
  %189 = getelementptr inbounds i32, i32* %buffer, i64 %fresh39, !dbg !7036
  store i32* %189, i32** %39, align 8, !dbg !7036
  %_3.i195 = load i32*, i32** %39, align 8, !dbg !7036
  br label %bb123, !dbg !7037

bb123:                                            ; preds = %bb122
  %190 = trunc i64 4 to i32, !dbg !7038
  store i32 %190, i32* %_3.i195, align 4, !dbg !7038
  %fresh40 = load i64, i64* %i, align 8, !dbg !7039
  store i64 %fresh40, i64* %fresh40.dbg.spill, align 8, !dbg !7039
  call void @llvm.dbg.declare(metadata i64* %fresh40.dbg.spill, metadata !6347, metadata !DIExpression()), !dbg !7040
  %_379 = load i64, i64* %i, align 8, !dbg !7041
  store i64 %_379, i64* %self.dbg.spill.i54, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i54, metadata !6432, metadata !DIExpression()), !dbg !7042
  store i64 1, i64* %rhs.dbg.spill.i53, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i53, metadata !6435, metadata !DIExpression()), !dbg !7044
  %191 = add i64 %_379, 1, !dbg !7045
  br label %bb124, !dbg !7041

bb124:                                            ; preds = %bb123
  store i64 %191, i64* %i, align 8, !dbg !7046
  br label %bb125, !dbg !7047

bb125:                                            ; preds = %bb124
  %_385 = load i32, i32* %b, align 4, !dbg !7048
  %_384 = zext i32 %_385 to i64, !dbg !7048
  %192 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 4, i64 %_384), !dbg !7047
  %_386.0 = extractvalue { i64, i1 } %192, 0, !dbg !7047
  %_386.1 = extractvalue { i64, i1 } %192, 1, !dbg !7047
  %193 = call i1 @llvm.expect.i1(i1 %_386.1, i1 false), !dbg !7047
  br i1 %193, label %panic3, label %bb126, !dbg !7047

bb126:                                            ; preds = %bb125
  %_388 = load i32, i32* %a, align 4, !dbg !7049
  %_387 = zext i32 %_388 to i64, !dbg !7049
  %194 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_386.0, i64 %_387), !dbg !7050
  %_389.0 = extractvalue { i64, i1 } %194, 0, !dbg !7050
  %_389.1 = extractvalue { i64, i1 } %194, 1, !dbg !7050
  %195 = call i1 @llvm.expect.i1(i1 %_389.1, i1 false), !dbg !7050
  br i1 %195, label %panic4, label %bb127, !dbg !7050

panic3:                                           ; preds = %bb125
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc733 to %"core::panic::location::Location"*)) #16, !dbg !7047
  unreachable, !dbg !7047

bb127:                                            ; preds = %bb126
  store i32* %buffer, i32** %self.dbg.spill.i191, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i191, metadata !6181, metadata !DIExpression()), !dbg !7051
  store i64 %fresh40, i64* %count.dbg.spill.i190, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i190, metadata !6184, metadata !DIExpression()), !dbg !7053
  %196 = getelementptr inbounds i32, i32* %buffer, i64 %fresh40, !dbg !7054
  store i32* %196, i32** %40, align 8, !dbg !7054
  %_3.i192 = load i32*, i32** %40, align 8, !dbg !7054
  br label %bb128, !dbg !7055

panic4:                                           ; preds = %bb126
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc735 to %"core::panic::location::Location"*)) #16, !dbg !7050
  unreachable, !dbg !7050

bb128:                                            ; preds = %bb127
  %197 = trunc i64 %_389.0 to i32, !dbg !7056
  store i32 %197, i32* %_3.i192, align 4, !dbg !7056
  %fresh41 = load i64, i64* %i, align 8, !dbg !7057
  store i64 %fresh41, i64* %fresh41.dbg.spill, align 8, !dbg !7057
  call void @llvm.dbg.declare(metadata i64* %fresh41.dbg.spill, metadata !6349, metadata !DIExpression()), !dbg !7058
  %_396 = load i64, i64* %i, align 8, !dbg !7059
  store i64 %_396, i64* %self.dbg.spill.i52, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i52, metadata !6432, metadata !DIExpression()), !dbg !7060
  store i64 1, i64* %rhs.dbg.spill.i51, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i51, metadata !6435, metadata !DIExpression()), !dbg !7062
  %198 = add i64 %_396, 1, !dbg !7063
  br label %bb129, !dbg !7059

bb129:                                            ; preds = %bb128
  store i64 %198, i64* %i, align 8, !dbg !7064
  br label %bb130, !dbg !7065

bb130:                                            ; preds = %bb129
  store i32* %buffer, i32** %self.dbg.spill.i188, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i188, metadata !6181, metadata !DIExpression()), !dbg !7066
  store i64 %fresh41, i64* %count.dbg.spill.i187, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i187, metadata !6184, metadata !DIExpression()), !dbg !7068
  %199 = getelementptr inbounds i32, i32* %buffer, i64 %fresh41, !dbg !7069
  store i32* %199, i32** %41, align 8, !dbg !7069
  %_3.i189 = load i32*, i32** %41, align 8, !dbg !7069
  br label %bb131, !dbg !7070

bb131:                                            ; preds = %bb130
  %200 = trunc i64 4 to i32, !dbg !7071
  store i32 %200, i32* %_3.i189, align 4, !dbg !7071
  %fresh42 = load i64, i64* %i, align 8, !dbg !7072
  store i64 %fresh42, i64* %fresh42.dbg.spill, align 8, !dbg !7072
  call void @llvm.dbg.declare(metadata i64* %fresh42.dbg.spill, metadata !6351, metadata !DIExpression()), !dbg !7073
  %_405 = load i64, i64* %i, align 8, !dbg !7074
  store i64 %_405, i64* %self.dbg.spill.i50, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i50, metadata !6432, metadata !DIExpression()), !dbg !7075
  store i64 1, i64* %rhs.dbg.spill.i49, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i49, metadata !6435, metadata !DIExpression()), !dbg !7077
  %201 = add i64 %_405, 1, !dbg !7078
  br label %bb132, !dbg !7074

bb132:                                            ; preds = %bb131
  store i64 %201, i64* %i, align 8, !dbg !7079
  br label %bb133, !dbg !7080

bb133:                                            ; preds = %bb132
  store i32* %buffer, i32** %self.dbg.spill.i185, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i185, metadata !6181, metadata !DIExpression()), !dbg !7081
  store i64 %fresh42, i64* %count.dbg.spill.i184, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i184, metadata !6184, metadata !DIExpression()), !dbg !7083
  %202 = getelementptr inbounds i32, i32* %buffer, i64 %fresh42, !dbg !7084
  store i32* %202, i32** %42, align 8, !dbg !7084
  %_3.i186 = load i32*, i32** %42, align 8, !dbg !7084
  br label %bb134, !dbg !7085

bb134:                                            ; preds = %bb133
  %203 = trunc i64 8 to i32, !dbg !7086
  store i32 %203, i32* %_3.i186, align 4, !dbg !7086
  %fresh43 = load i64, i64* %i, align 8, !dbg !7087
  store i64 %fresh43, i64* %fresh43.dbg.spill, align 8, !dbg !7087
  call void @llvm.dbg.declare(metadata i64* %fresh43.dbg.spill, metadata !6353, metadata !DIExpression()), !dbg !7088
  %_414 = load i64, i64* %i, align 8, !dbg !7089
  store i64 %_414, i64* %self.dbg.spill.i48, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i48, metadata !6432, metadata !DIExpression()), !dbg !7090
  store i64 1, i64* %rhs.dbg.spill.i47, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i47, metadata !6435, metadata !DIExpression()), !dbg !7092
  %204 = add i64 %_414, 1, !dbg !7093
  br label %bb135, !dbg !7089

bb135:                                            ; preds = %bb134
  store i64 %204, i64* %i, align 8, !dbg !7094
  br label %bb136, !dbg !7095

bb136:                                            ; preds = %bb135
  store i32* %buffer, i32** %self.dbg.spill.i182, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i182, metadata !6181, metadata !DIExpression()), !dbg !7096
  store i64 %fresh43, i64* %count.dbg.spill.i181, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i181, metadata !6184, metadata !DIExpression()), !dbg !7098
  %205 = getelementptr inbounds i32, i32* %buffer, i64 %fresh43, !dbg !7099
  store i32* %205, i32** %43, align 8, !dbg !7099
  %_3.i183 = load i32*, i32** %43, align 8, !dbg !7099
  br label %bb137, !dbg !7100

bb137:                                            ; preds = %bb136
  %206 = trunc i64 8 to i32, !dbg !7101
  store i32 %206, i32* %_3.i183, align 4, !dbg !7101
  %fresh44 = load i64, i64* %i, align 8, !dbg !7102
  store i64 %fresh44, i64* %fresh44.dbg.spill, align 8, !dbg !7102
  call void @llvm.dbg.declare(metadata i64* %fresh44.dbg.spill, metadata !6355, metadata !DIExpression()), !dbg !7103
  %_423 = load i64, i64* %i, align 8, !dbg !7104
  store i64 %_423, i64* %self.dbg.spill.i46, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i46, metadata !6432, metadata !DIExpression()), !dbg !7105
  store i64 1, i64* %rhs.dbg.spill.i45, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i45, metadata !6435, metadata !DIExpression()), !dbg !7107
  %207 = add i64 %_423, 1, !dbg !7108
  br label %bb138, !dbg !7104

bb138:                                            ; preds = %bb137
  store i64 %207, i64* %i, align 8, !dbg !7109
  br label %bb139, !dbg !7110

bb139:                                            ; preds = %bb138
  store i32* %buffer, i32** %self.dbg.spill.i179, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i179, metadata !6181, metadata !DIExpression()), !dbg !7111
  store i64 %fresh44, i64* %count.dbg.spill.i178, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i178, metadata !6184, metadata !DIExpression()), !dbg !7113
  %208 = getelementptr inbounds i32, i32* %buffer, i64 %fresh44, !dbg !7114
  store i32* %208, i32** %44, align 8, !dbg !7114
  %_3.i180 = load i32*, i32** %44, align 8, !dbg !7114
  br label %bb140, !dbg !7115

bb140:                                            ; preds = %bb139
  %209 = trunc i64 24 to i32, !dbg !7116
  store i32 %209, i32* %_3.i180, align 4, !dbg !7116
  %fresh45 = load i64, i64* %i, align 8, !dbg !7117
  store i64 %fresh45, i64* %fresh45.dbg.spill, align 8, !dbg !7117
  call void @llvm.dbg.declare(metadata i64* %fresh45.dbg.spill, metadata !6357, metadata !DIExpression()), !dbg !7118
  %_432 = load i64, i64* %i, align 8, !dbg !7119
  store i64 %_432, i64* %self.dbg.spill.i44, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i44, metadata !6432, metadata !DIExpression()), !dbg !7120
  store i64 1, i64* %rhs.dbg.spill.i43, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i43, metadata !6435, metadata !DIExpression()), !dbg !7122
  %210 = add i64 %_432, 1, !dbg !7123
  br label %bb141, !dbg !7119

bb141:                                            ; preds = %bb140
  store i64 %210, i64* %i, align 8, !dbg !7124
  br label %bb142, !dbg !7125

bb142:                                            ; preds = %bb141
  store i32* %buffer, i32** %self.dbg.spill.i176, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i176, metadata !6181, metadata !DIExpression()), !dbg !7126
  store i64 %fresh45, i64* %count.dbg.spill.i175, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i175, metadata !6184, metadata !DIExpression()), !dbg !7128
  %211 = getelementptr inbounds i32, i32* %buffer, i64 %fresh45, !dbg !7129
  store i32* %211, i32** %45, align 8, !dbg !7129
  %_3.i177 = load i32*, i32** %45, align 8, !dbg !7129
  br label %bb143, !dbg !7130

bb143:                                            ; preds = %bb142
  %212 = trunc i64 8 to i32, !dbg !7131
  store i32 %212, i32* %_3.i177, align 4, !dbg !7131
  %213 = getelementptr inbounds [4 x i32], [4 x i32]* %x1, i64 0, i64 0, !dbg !7132
  %214 = bitcast i32* %213 to i8*, !dbg !7132
  call void @llvm.memset.p0i8.i64(i8* align 4 %214, i8 0, i64 16, i1 false), !dbg !7132
  %215 = getelementptr inbounds [5 x i32], [5 x i32]* %_441, i64 0, i64 0, !dbg !7133
  %216 = bitcast i32* %215 to i8*, !dbg !7133
  call void @llvm.memset.p0i8.i64(i8* align 4 %216, i8 0, i64 20, i1 false), !dbg !7133
  %217 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %x2, i64 0, i64 0, !dbg !7134
  %218 = getelementptr inbounds [4 x [5 x i32]], [4 x [5 x i32]]* %x2, i64 0, i64 4, !dbg !7134
  br label %repeat_loop_header, !dbg !7134

repeat_loop_header:                               ; preds = %repeat_loop_body, %bb143
  %219 = phi [5 x i32]* [ %217, %bb143 ], [ %223, %repeat_loop_body ]
  %220 = icmp ne [5 x i32]* %219, %218
  br i1 %220, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  %221 = bitcast [5 x i32]* %219 to i8*
  %222 = bitcast [5 x i32]* %_441 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 %222, i64 20, i1 false)
  %223 = getelementptr inbounds [5 x i32], [5 x i32]* %219, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  store i64 3, i64* %vla.dbg.spill, align 8, !dbg !7135
  call void @llvm.dbg.declare(metadata i64* %vla.dbg.spill, metadata !6363, metadata !DIExpression()), !dbg !7136
  %_444 = load i32, i32* %a, align 4, !dbg !7137
  %vla_0 = zext i32 %_444 to i64, !dbg !7137
  store i64 %vla_0, i64* %vla_0.dbg.spill, align 8, !dbg !7137
  call void @llvm.dbg.declare(metadata i64* %vla_0.dbg.spill, metadata !6365, metadata !DIExpression()), !dbg !7138
  %224 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 3, i64 %vla_0), !dbg !7139
  %_449.0 = extractvalue { i64, i1 } %224, 0, !dbg !7139
  %_449.1 = extractvalue { i64, i1 } %224, 1, !dbg !7139
  %225 = call i1 @llvm.expect.i1(i1 %_449.1, i1 false), !dbg !7139
  br i1 %225, label %panic5, label %bb144, !dbg !7139

bb144:                                            ; preds = %repeat_loop_next
; call alloc::vec::from_elem
  call void @_ZN5alloc3vec9from_elem17hb9352b6c351bbae8E(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %x3, i32 0, i64 %_449.0), !dbg !7140
  br label %bb145, !dbg !7140

panic5:                                           ; preds = %repeat_loop_next
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc737 to %"core::panic::location::Location"*)) #16, !dbg !7139
  unreachable, !dbg !7139

bb145:                                            ; preds = %bb144
  %_451 = load i32, i32* %b, align 4, !dbg !7141
  %vla_1 = zext i32 %_451 to i64, !dbg !7141
  store i64 %vla_1, i64* %vla_1.dbg.spill, align 8, !dbg !7141
  call void @llvm.dbg.declare(metadata i64* %vla_1.dbg.spill, metadata !6369, metadata !DIExpression()), !dbg !7142
  %226 = getelementptr inbounds [4 x i32], [4 x i32]* %_453, i64 0, i64 0, !dbg !7143
  %227 = bitcast i32* %226 to i8*, !dbg !7143
  call void @llvm.memset.p0i8.i64(i8* align 4 %227, i8 0, i64 16, i1 false), !dbg !7143
; invoke alloc::vec::from_elem
  invoke void @_ZN5alloc3vec9from_elem17he36855d432e37c37E(%"alloc::vec::Vec<[i32; 4]>"* sret(%"alloc::vec::Vec<[i32; 4]>") %x4, [4 x i32]* %_453, i64 %vla_1)
          to label %bb146 unwind label %cleanup, !dbg !7144

bb209:                                            ; preds = %bb208, %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17hc42f131b2d017f6fE"(%"alloc::vec::Vec<i32>"* %x3) #17
          to label %bb210 unwind label %abort, !dbg !7145

cleanup:                                          ; preds = %bb204, %bb145
  %228 = landingpad { i8*, i32 }
          cleanup
  %229 = extractvalue { i8*, i32 } %228, 0
  %230 = extractvalue { i8*, i32 } %228, 1
  %231 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %62, i32 0, i32 0
  store i8* %229, i8** %231, align 8
  %232 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %62, i32 0, i32 1
  store i32 %230, i32* %232, align 8
  br label %bb209

bb146:                                            ; preds = %bb145
  %_456 = load i32, i32* %a, align 4, !dbg !7146
  %vla_2 = zext i32 %_456 to i64, !dbg !7146
  store i64 %vla_2, i64* %vla_2.dbg.spill, align 8, !dbg !7146
  call void @llvm.dbg.declare(metadata i64* %vla_2.dbg.spill, metadata !6373, metadata !DIExpression()), !dbg !7147
  %_458 = load i32, i32* %b, align 4, !dbg !7148
  %vla_3 = zext i32 %_458 to i64, !dbg !7148
  store i64 %vla_3, i64* %vla_3.dbg.spill, align 8, !dbg !7148
  call void @llvm.dbg.declare(metadata i64* %vla_3.dbg.spill, metadata !6375, metadata !DIExpression()), !dbg !7149
  %233 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %vla_2, i64 %vla_3), !dbg !7150
  %_463.0 = extractvalue { i64, i1 } %233, 0, !dbg !7150
  %_463.1 = extractvalue { i64, i1 } %233, 1, !dbg !7150
  %234 = call i1 @llvm.expect.i1(i1 %_463.1, i1 false), !dbg !7150
  br i1 %234, label %panic6, label %bb147, !dbg !7150

bb147:                                            ; preds = %bb146
; invoke alloc::vec::from_elem
  invoke void @_ZN5alloc3vec9from_elem17hb9352b6c351bbae8E(%"alloc::vec::Vec<i32>"* sret(%"alloc::vec::Vec<i32>") %x5, i32 0, i64 %_463.0)
          to label %bb148 unwind label %cleanup7, !dbg !7151

panic6:                                           ; preds = %bb146
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc739 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup7, !dbg !7150

bb208:                                            ; preds = %bb207, %cleanup7
; invoke core::ptr::drop_in_place<alloc::vec::Vec<[i32; 4]>>
  invoke void @"_ZN4core3ptr68drop_in_place$LT$alloc..vec..Vec$LT$$u5b$i32$u3b$$u20$4$u5d$$GT$$GT$17hf07e1a2a4e158af9E"(%"alloc::vec::Vec<[i32; 4]>"* %x4) #17
          to label %bb209 unwind label %abort, !dbg !7152

cleanup7:                                         ; preds = %bb200, %bb147, %panic6
  %235 = landingpad { i8*, i32 }
          cleanup
  %236 = extractvalue { i8*, i32 } %235, 0
  %237 = extractvalue { i8*, i32 } %235, 1
  %238 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %62, i32 0, i32 0
  store i8* %236, i8** %238, align 8
  %239 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %62, i32 0, i32 1
  store i32 %237, i32* %239, align 8
  br label %bb208

unreachable:                                      ; preds = %bb199, %bb203, %panic16, %panic15, %panic14, %panic13, %panic12, %panic6
  unreachable

bb148:                                            ; preds = %bb147
  %_465 = load i32, i32* %b, align 4, !dbg !7153
  %vla_4 = zext i32 %_465 to i64, !dbg !7153
  store i64 %vla_4, i64* %vla_4.dbg.spill, align 8, !dbg !7153
  call void @llvm.dbg.declare(metadata i64* %vla_4.dbg.spill, metadata !6379, metadata !DIExpression()), !dbg !7154
  %240 = getelementptr inbounds [3 x i32*], [3 x i32*]* %x6, i64 0, i64 0, !dbg !7155
  %241 = getelementptr inbounds [3 x i32*], [3 x i32*]* %x6, i64 0, i64 0, !dbg !7155
  %242 = getelementptr inbounds [3 x i32*], [3 x i32*]* %x6, i64 0, i64 3, !dbg !7155
  br label %repeat_loop_header8, !dbg !7155

repeat_loop_header8:                              ; preds = %repeat_loop_body9, %bb148
  %243 = phi i32** [ %241, %bb148 ], [ %245, %repeat_loop_body9 ]
  %244 = icmp ne i32** %243, %242
  br i1 %244, label %repeat_loop_body9, label %repeat_loop_next10

repeat_loop_body9:                                ; preds = %repeat_loop_header8
  store i32* null, i32** %243, align 8
  %245 = getelementptr inbounds i32*, i32** %243, i64 1
  br label %repeat_loop_header8

repeat_loop_next10:                               ; preds = %repeat_loop_header8
  %_469 = load i32, i32* %a, align 4, !dbg !7156
  %vla_5 = zext i32 %_469 to i64, !dbg !7156
  store i64 %vla_5, i64* %vla_5.dbg.spill, align 8, !dbg !7156
  call void @llvm.dbg.declare(metadata i64* %vla_5.dbg.spill, metadata !6384, metadata !DIExpression()), !dbg !7157
  %_471 = load i32, i32* %b, align 4, !dbg !7158
  %vla_6 = zext i32 %_471 to i64, !dbg !7158
  store i64 %vla_6, i64* %vla_6.dbg.spill, align 8, !dbg !7158
  call void @llvm.dbg.declare(metadata i64* %vla_6.dbg.spill, metadata !6386, metadata !DIExpression()), !dbg !7159
  store i32* null, i32** %x7.dbg.spill, align 8, !dbg !7160
  call void @llvm.dbg.declare(metadata i32** %x7.dbg.spill, metadata !6388, metadata !DIExpression()), !dbg !7161
  store i32 0, i32* %a, align 4, !dbg !7162
  store i32 0, i32* %b, align 4, !dbg !7163
  %fresh46 = load i64, i64* %i, align 8, !dbg !7164
  store i64 %fresh46, i64* %fresh46.dbg.spill, align 8, !dbg !7164
  call void @llvm.dbg.declare(metadata i64* %fresh46.dbg.spill, metadata !6390, metadata !DIExpression()), !dbg !7165
  %_475 = load i64, i64* %i, align 8, !dbg !7166
  store i64 %_475, i64* %self.dbg.spill.i42, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i42, metadata !6432, metadata !DIExpression()), !dbg !7167
  store i64 1, i64* %rhs.dbg.spill.i41, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i41, metadata !6435, metadata !DIExpression()), !dbg !7169
  %246 = add i64 %_475, 1, !dbg !7170
  br label %bb149, !dbg !7171

bb207:                                            ; preds = %cleanup11
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17hc42f131b2d017f6fE"(%"alloc::vec::Vec<i32>"* %x5) #17
          to label %bb208 unwind label %abort, !dbg !7172

cleanup11:                                        ; preds = %bb199, %bb198, %bb203, %bb202, %panic16, %panic15, %panic14, %panic13, %panic12
  %247 = landingpad { i8*, i32 }
          cleanup
  %248 = extractvalue { i8*, i32 } %247, 0
  %249 = extractvalue { i8*, i32 } %247, 1
  %250 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %62, i32 0, i32 0
  store i8* %248, i8** %250, align 8
  %251 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %62, i32 0, i32 1
  store i32 %249, i32* %251, align 8
  br label %bb207

bb149:                                            ; preds = %repeat_loop_next10
  store i64 %246, i64* %i, align 8, !dbg !7173
  br label %bb150, !dbg !7174

bb150:                                            ; preds = %bb149
  store i32* %buffer, i32** %self.dbg.spill.i173, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i173, metadata !6181, metadata !DIExpression()), !dbg !7177
  store i64 %fresh46, i64* %count.dbg.spill.i172, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i172, metadata !6184, metadata !DIExpression()), !dbg !7179
  %252 = getelementptr inbounds i32, i32* %buffer, i64 %fresh46, !dbg !7180
  store i32* %252, i32** %46, align 8, !dbg !7180
  %_3.i174 = load i32*, i32** %46, align 8, !dbg !7180
  br label %bb151, !dbg !7181

bb151:                                            ; preds = %bb150
  %253 = trunc i64 16 to i32, !dbg !7182
  store i32 %253, i32* %_3.i174, align 4, !dbg !7182
  %fresh47 = load i64, i64* %i, align 8, !dbg !7183
  store i64 %fresh47, i64* %fresh47.dbg.spill, align 8, !dbg !7183
  call void @llvm.dbg.declare(metadata i64* %fresh47.dbg.spill, metadata !6392, metadata !DIExpression()), !dbg !7184
  %_484 = load i64, i64* %i, align 8, !dbg !7185
  store i64 %_484, i64* %self.dbg.spill.i40, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i40, metadata !6432, metadata !DIExpression()), !dbg !7186
  store i64 1, i64* %rhs.dbg.spill.i39, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i39, metadata !6435, metadata !DIExpression()), !dbg !7188
  %254 = add i64 %_484, 1, !dbg !7189
  br label %bb152, !dbg !7190

bb152:                                            ; preds = %bb151
  store i64 %254, i64* %i, align 8, !dbg !7191
  br label %bb153, !dbg !7192

bb153:                                            ; preds = %bb152
  store i32* %buffer, i32** %self.dbg.spill.i170, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i170, metadata !6181, metadata !DIExpression()), !dbg !7195
  store i64 %fresh47, i64* %count.dbg.spill.i169, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i169, metadata !6184, metadata !DIExpression()), !dbg !7197
  %255 = getelementptr inbounds i32, i32* %buffer, i64 %fresh47, !dbg !7198
  store i32* %255, i32** %47, align 8, !dbg !7198
  %_3.i171 = load i32*, i32** %47, align 8, !dbg !7198
  br label %bb154, !dbg !7199

bb154:                                            ; preds = %bb153
  %256 = trunc i64 4 to i32, !dbg !7200
  store i32 %256, i32* %_3.i171, align 4, !dbg !7200
  %fresh48 = load i64, i64* %i, align 8, !dbg !7201
  store i64 %fresh48, i64* %fresh48.dbg.spill, align 8, !dbg !7201
  call void @llvm.dbg.declare(metadata i64* %fresh48.dbg.spill, metadata !6394, metadata !DIExpression()), !dbg !7202
  %_493 = load i64, i64* %i, align 8, !dbg !7203
  store i64 %_493, i64* %self.dbg.spill.i38, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i38, metadata !6432, metadata !DIExpression()), !dbg !7204
  store i64 1, i64* %rhs.dbg.spill.i37, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i37, metadata !6435, metadata !DIExpression()), !dbg !7206
  %257 = add i64 %_493, 1, !dbg !7207
  br label %bb155, !dbg !7208

bb155:                                            ; preds = %bb154
  store i64 %257, i64* %i, align 8, !dbg !7209
  br label %bb156, !dbg !7210

bb156:                                            ; preds = %bb155
  store i32* %buffer, i32** %self.dbg.spill.i167, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i167, metadata !6181, metadata !DIExpression()), !dbg !7215
  store i64 %fresh48, i64* %count.dbg.spill.i166, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i166, metadata !6184, metadata !DIExpression()), !dbg !7217
  %258 = getelementptr inbounds i32, i32* %buffer, i64 %fresh48, !dbg !7218
  store i32* %258, i32** %48, align 8, !dbg !7218
  %_3.i168 = load i32*, i32** %48, align 8, !dbg !7218
  br label %bb157, !dbg !7219

bb157:                                            ; preds = %bb156
  %259 = trunc i64 80 to i32, !dbg !7220
  store i32 %259, i32* %_3.i168, align 4, !dbg !7220
  %fresh49 = load i64, i64* %i, align 8, !dbg !7221
  store i64 %fresh49, i64* %fresh49.dbg.spill, align 8, !dbg !7221
  call void @llvm.dbg.declare(metadata i64* %fresh49.dbg.spill, metadata !6396, metadata !DIExpression()), !dbg !7222
  %_502 = load i64, i64* %i, align 8, !dbg !7223
  store i64 %_502, i64* %self.dbg.spill.i36, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i36, metadata !6432, metadata !DIExpression()), !dbg !7224
  store i64 1, i64* %rhs.dbg.spill.i35, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i35, metadata !6435, metadata !DIExpression()), !dbg !7226
  %260 = add i64 %_502, 1, !dbg !7227
  br label %bb158, !dbg !7228

bb158:                                            ; preds = %bb157
  store i64 %260, i64* %i, align 8, !dbg !7229
  br label %bb159, !dbg !7230

bb159:                                            ; preds = %bb158
  store i32* %buffer, i32** %self.dbg.spill.i164, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i164, metadata !6181, metadata !DIExpression()), !dbg !7233
  store i64 %fresh49, i64* %count.dbg.spill.i163, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i163, metadata !6184, metadata !DIExpression()), !dbg !7235
  %261 = getelementptr inbounds i32, i32* %buffer, i64 %fresh49, !dbg !7236
  store i32* %261, i32** %49, align 8, !dbg !7236
  %_3.i165 = load i32*, i32** %49, align 8, !dbg !7236
  br label %bb160, !dbg !7237

bb160:                                            ; preds = %bb159
  %262 = trunc i64 4 to i32, !dbg !7238
  store i32 %262, i32* %_3.i165, align 4, !dbg !7238
  %fresh50 = load i64, i64* %i, align 8, !dbg !7239
  store i64 %fresh50, i64* %fresh50.dbg.spill, align 8, !dbg !7239
  call void @llvm.dbg.declare(metadata i64* %fresh50.dbg.spill, metadata !6398, metadata !DIExpression()), !dbg !7240
  %_511 = load i64, i64* %i, align 8, !dbg !7241
  store i64 %_511, i64* %self.dbg.spill.i34, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i34, metadata !6432, metadata !DIExpression()), !dbg !7242
  store i64 1, i64* %rhs.dbg.spill.i33, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i33, metadata !6435, metadata !DIExpression()), !dbg !7244
  %263 = add i64 %_511, 1, !dbg !7245
  br label %bb161, !dbg !7246

bb161:                                            ; preds = %bb160
  store i64 %263, i64* %i, align 8, !dbg !7247
  %264 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 3, i64 %vla_0), !dbg !7248
  %_517.0 = extractvalue { i64, i1 } %264, 0, !dbg !7248
  %_517.1 = extractvalue { i64, i1 } %264, 1, !dbg !7248
  %265 = call i1 @llvm.expect.i1(i1 %_517.1, i1 false), !dbg !7248
  br i1 %265, label %panic12, label %bb162, !dbg !7248

bb162:                                            ; preds = %bb161
  br label %bb163, !dbg !7249

panic12:                                          ; preds = %bb161
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc741 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup11, !dbg !7248

bb163:                                            ; preds = %bb162
  %266 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_517.0, i64 4), !dbg !7252
  %_519.0 = extractvalue { i64, i1 } %266, 0, !dbg !7252
  %_519.1 = extractvalue { i64, i1 } %266, 1, !dbg !7252
  %267 = call i1 @llvm.expect.i1(i1 %_519.1, i1 false), !dbg !7252
  br i1 %267, label %panic13, label %bb164, !dbg !7252

bb164:                                            ; preds = %bb163
  store i32* %buffer, i32** %self.dbg.spill.i161, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i161, metadata !6181, metadata !DIExpression()), !dbg !7253
  store i64 %fresh50, i64* %count.dbg.spill.i160, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i160, metadata !6184, metadata !DIExpression()), !dbg !7255
  %268 = getelementptr inbounds i32, i32* %buffer, i64 %fresh50, !dbg !7256
  store i32* %268, i32** %50, align 8, !dbg !7256
  %_3.i162 = load i32*, i32** %50, align 8, !dbg !7256
  br label %bb165, !dbg !7257

panic13:                                          ; preds = %bb163
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc743 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup11, !dbg !7252

bb165:                                            ; preds = %bb164
  %269 = trunc i64 %_519.0 to i32, !dbg !7258
  store i32 %269, i32* %_3.i162, align 4, !dbg !7258
  %fresh51 = load i64, i64* %i, align 8, !dbg !7259
  store i64 %fresh51, i64* %fresh51.dbg.spill, align 8, !dbg !7259
  call void @llvm.dbg.declare(metadata i64* %fresh51.dbg.spill, metadata !6400, metadata !DIExpression()), !dbg !7260
  %_526 = load i64, i64* %i, align 8, !dbg !7261
  store i64 %_526, i64* %self.dbg.spill.i32, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i32, metadata !6432, metadata !DIExpression()), !dbg !7262
  store i64 1, i64* %rhs.dbg.spill.i31, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i31, metadata !6435, metadata !DIExpression()), !dbg !7264
  %270 = add i64 %_526, 1, !dbg !7265
  br label %bb166, !dbg !7266

bb166:                                            ; preds = %bb165
  store i64 %270, i64* %i, align 8, !dbg !7267
  br label %bb167, !dbg !7268

bb167:                                            ; preds = %bb166
  store i32* %buffer, i32** %self.dbg.spill.i158, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i158, metadata !6181, metadata !DIExpression()), !dbg !7271
  store i64 %fresh51, i64* %count.dbg.spill.i157, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i157, metadata !6184, metadata !DIExpression()), !dbg !7273
  %271 = getelementptr inbounds i32, i32* %buffer, i64 %fresh51, !dbg !7274
  store i32* %271, i32** %51, align 8, !dbg !7274
  %_3.i159 = load i32*, i32** %51, align 8, !dbg !7274
  br label %bb168, !dbg !7275

bb168:                                            ; preds = %bb167
  %272 = trunc i64 4 to i32, !dbg !7276
  store i32 %272, i32* %_3.i159, align 4, !dbg !7276
  %fresh52 = load i64, i64* %i, align 8, !dbg !7277
  store i64 %fresh52, i64* %fresh52.dbg.spill, align 8, !dbg !7277
  call void @llvm.dbg.declare(metadata i64* %fresh52.dbg.spill, metadata !6402, metadata !DIExpression()), !dbg !7278
  %_535 = load i64, i64* %i, align 8, !dbg !7279
  store i64 %_535, i64* %self.dbg.spill.i30, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i30, metadata !6432, metadata !DIExpression()), !dbg !7280
  store i64 1, i64* %rhs.dbg.spill.i29, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i29, metadata !6435, metadata !DIExpression()), !dbg !7282
  %273 = add i64 %_535, 1, !dbg !7283
  br label %bb169, !dbg !7284

bb169:                                            ; preds = %bb168
  store i64 %273, i64* %i, align 8, !dbg !7285
  br label %bb170, !dbg !7286

bb170:                                            ; preds = %bb169
  %274 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %vla_1, i64 16), !dbg !7288
  %_540.0 = extractvalue { i64, i1 } %274, 0, !dbg !7288
  %_540.1 = extractvalue { i64, i1 } %274, 1, !dbg !7288
  %275 = call i1 @llvm.expect.i1(i1 %_540.1, i1 false), !dbg !7288
  br i1 %275, label %panic14, label %bb171, !dbg !7288

bb171:                                            ; preds = %bb170
  store i32* %buffer, i32** %self.dbg.spill.i155, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i155, metadata !6181, metadata !DIExpression()), !dbg !7289
  store i64 %fresh52, i64* %count.dbg.spill.i154, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i154, metadata !6184, metadata !DIExpression()), !dbg !7291
  %276 = getelementptr inbounds i32, i32* %buffer, i64 %fresh52, !dbg !7292
  store i32* %276, i32** %52, align 8, !dbg !7292
  %_3.i156 = load i32*, i32** %52, align 8, !dbg !7292
  br label %bb172, !dbg !7293

panic14:                                          ; preds = %bb170
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc745 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup11, !dbg !7288

bb172:                                            ; preds = %bb171
  %277 = trunc i64 %_540.0 to i32, !dbg !7294
  store i32 %277, i32* %_3.i156, align 4, !dbg !7294
  %fresh53 = load i64, i64* %i, align 8, !dbg !7295
  store i64 %fresh53, i64* %fresh53.dbg.spill, align 8, !dbg !7295
  call void @llvm.dbg.declare(metadata i64* %fresh53.dbg.spill, metadata !6404, metadata !DIExpression()), !dbg !7296
  %_547 = load i64, i64* %i, align 8, !dbg !7297
  store i64 %_547, i64* %self.dbg.spill.i28, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i28, metadata !6432, metadata !DIExpression()), !dbg !7298
  store i64 1, i64* %rhs.dbg.spill.i27, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i27, metadata !6435, metadata !DIExpression()), !dbg !7300
  %278 = add i64 %_547, 1, !dbg !7301
  br label %bb173, !dbg !7302

bb173:                                            ; preds = %bb172
  store i64 %278, i64* %i, align 8, !dbg !7303
  br label %bb174, !dbg !7304

bb174:                                            ; preds = %bb173
  store i32* %buffer, i32** %self.dbg.spill.i152, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i152, metadata !6181, metadata !DIExpression()), !dbg !7306
  store i64 %fresh53, i64* %count.dbg.spill.i151, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i151, metadata !6184, metadata !DIExpression()), !dbg !7308
  %279 = getelementptr inbounds i32, i32* %buffer, i64 %fresh53, !dbg !7309
  store i32* %279, i32** %53, align 8, !dbg !7309
  %_3.i153 = load i32*, i32** %53, align 8, !dbg !7309
  br label %bb175, !dbg !7310

bb175:                                            ; preds = %bb174
  %280 = trunc i64 4 to i32, !dbg !7311
  store i32 %280, i32* %_3.i153, align 4, !dbg !7311
  %fresh54 = load i64, i64* %i, align 8, !dbg !7312
  store i64 %fresh54, i64* %fresh54.dbg.spill, align 8, !dbg !7312
  call void @llvm.dbg.declare(metadata i64* %fresh54.dbg.spill, metadata !6406, metadata !DIExpression()), !dbg !7313
  %_556 = load i64, i64* %i, align 8, !dbg !7314
  store i64 %_556, i64* %self.dbg.spill.i26, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i26, metadata !6432, metadata !DIExpression()), !dbg !7315
  store i64 1, i64* %rhs.dbg.spill.i25, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i25, metadata !6435, metadata !DIExpression()), !dbg !7317
  %281 = add i64 %_556, 1, !dbg !7318
  br label %bb176, !dbg !7319

bb176:                                            ; preds = %bb175
  store i64 %281, i64* %i, align 8, !dbg !7320
  %282 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %vla_2, i64 %vla_3), !dbg !7321
  %_562.0 = extractvalue { i64, i1 } %282, 0, !dbg !7321
  %_562.1 = extractvalue { i64, i1 } %282, 1, !dbg !7321
  %283 = call i1 @llvm.expect.i1(i1 %_562.1, i1 false), !dbg !7321
  br i1 %283, label %panic15, label %bb177, !dbg !7321

bb177:                                            ; preds = %bb176
  br label %bb178, !dbg !7322

panic15:                                          ; preds = %bb176
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc747 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup11, !dbg !7321

bb178:                                            ; preds = %bb177
  %284 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %_562.0, i64 4), !dbg !7324
  %_564.0 = extractvalue { i64, i1 } %284, 0, !dbg !7324
  %_564.1 = extractvalue { i64, i1 } %284, 1, !dbg !7324
  %285 = call i1 @llvm.expect.i1(i1 %_564.1, i1 false), !dbg !7324
  br i1 %285, label %panic16, label %bb179, !dbg !7324

bb179:                                            ; preds = %bb178
  store i32* %buffer, i32** %self.dbg.spill.i149, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i149, metadata !6181, metadata !DIExpression()), !dbg !7325
  store i64 %fresh54, i64* %count.dbg.spill.i148, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i148, metadata !6184, metadata !DIExpression()), !dbg !7327
  %286 = getelementptr inbounds i32, i32* %buffer, i64 %fresh54, !dbg !7328
  store i32* %286, i32** %54, align 8, !dbg !7328
  %_3.i150 = load i32*, i32** %54, align 8, !dbg !7328
  br label %bb180, !dbg !7329

panic16:                                          ; preds = %bb178
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc749 to %"core::panic::location::Location"*)) #16
          to label %unreachable unwind label %cleanup11, !dbg !7324

bb180:                                            ; preds = %bb179
  %287 = trunc i64 %_564.0 to i32, !dbg !7330
  store i32 %287, i32* %_3.i150, align 4, !dbg !7330
  %fresh55 = load i64, i64* %i, align 8, !dbg !7331
  store i64 %fresh55, i64* %fresh55.dbg.spill, align 8, !dbg !7331
  call void @llvm.dbg.declare(metadata i64* %fresh55.dbg.spill, metadata !6408, metadata !DIExpression()), !dbg !7332
  %_571 = load i64, i64* %i, align 8, !dbg !7333
  store i64 %_571, i64* %self.dbg.spill.i24, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i24, metadata !6432, metadata !DIExpression()), !dbg !7334
  store i64 1, i64* %rhs.dbg.spill.i23, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i23, metadata !6435, metadata !DIExpression()), !dbg !7336
  %288 = add i64 %_571, 1, !dbg !7337
  br label %bb181, !dbg !7338

bb181:                                            ; preds = %bb180
  store i64 %288, i64* %i, align 8, !dbg !7339
  br label %bb182, !dbg !7340

bb182:                                            ; preds = %bb181
  store i32* %buffer, i32** %self.dbg.spill.i146, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i146, metadata !6181, metadata !DIExpression()), !dbg !7342
  store i64 %fresh55, i64* %count.dbg.spill.i145, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i145, metadata !6184, metadata !DIExpression()), !dbg !7344
  %289 = getelementptr inbounds i32, i32* %buffer, i64 %fresh55, !dbg !7345
  store i32* %289, i32** %55, align 8, !dbg !7345
  %_3.i147 = load i32*, i32** %55, align 8, !dbg !7345
  br label %bb183, !dbg !7346

bb183:                                            ; preds = %bb182
  %290 = trunc i64 4 to i32, !dbg !7347
  store i32 %290, i32* %_3.i147, align 4, !dbg !7347
  %fresh56 = load i64, i64* %i, align 8, !dbg !7348
  store i64 %fresh56, i64* %fresh56.dbg.spill, align 8, !dbg !7348
  call void @llvm.dbg.declare(metadata i64* %fresh56.dbg.spill, metadata !6410, metadata !DIExpression()), !dbg !7349
  %_580 = load i64, i64* %i, align 8, !dbg !7350
  store i64 %_580, i64* %self.dbg.spill.i22, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i22, metadata !6432, metadata !DIExpression()), !dbg !7351
  store i64 1, i64* %rhs.dbg.spill.i21, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i21, metadata !6435, metadata !DIExpression()), !dbg !7353
  %291 = add i64 %_580, 1, !dbg !7354
  br label %bb184, !dbg !7355

bb184:                                            ; preds = %bb183
  store i64 %291, i64* %i, align 8, !dbg !7356
  br label %bb185, !dbg !7357

bb185:                                            ; preds = %bb184
  store i32* %buffer, i32** %self.dbg.spill.i143, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i143, metadata !6181, metadata !DIExpression()), !dbg !7362
  store i64 %fresh56, i64* %count.dbg.spill.i142, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i142, metadata !6184, metadata !DIExpression()), !dbg !7364
  %292 = getelementptr inbounds i32, i32* %buffer, i64 %fresh56, !dbg !7365
  store i32* %292, i32** %56, align 8, !dbg !7365
  %_3.i144 = load i32*, i32** %56, align 8, !dbg !7365
  br label %bb186, !dbg !7366

bb186:                                            ; preds = %bb185
  %293 = trunc i64 24 to i32, !dbg !7367
  store i32 %293, i32* %_3.i144, align 4, !dbg !7367
  %fresh57 = load i64, i64* %i, align 8, !dbg !7368
  store i64 %fresh57, i64* %fresh57.dbg.spill, align 8, !dbg !7368
  call void @llvm.dbg.declare(metadata i64* %fresh57.dbg.spill, metadata !6412, metadata !DIExpression()), !dbg !7369
  %_589 = load i64, i64* %i, align 8, !dbg !7370
  store i64 %_589, i64* %self.dbg.spill.i20, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i20, metadata !6432, metadata !DIExpression()), !dbg !7371
  store i64 1, i64* %rhs.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i19, metadata !6435, metadata !DIExpression()), !dbg !7373
  %294 = add i64 %_589, 1, !dbg !7374
  br label %bb187, !dbg !7375

bb187:                                            ; preds = %bb186
  store i64 %294, i64* %i, align 8, !dbg !7376
  br label %bb188, !dbg !7377

bb188:                                            ; preds = %bb187
  store i32* %buffer, i32** %self.dbg.spill.i140, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i140, metadata !6181, metadata !DIExpression()), !dbg !7380
  store i64 %fresh57, i64* %count.dbg.spill.i139, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i139, metadata !6184, metadata !DIExpression()), !dbg !7382
  %295 = getelementptr inbounds i32, i32* %buffer, i64 %fresh57, !dbg !7383
  store i32* %295, i32** %57, align 8, !dbg !7383
  %_3.i141 = load i32*, i32** %57, align 8, !dbg !7383
  br label %bb189, !dbg !7384

bb189:                                            ; preds = %bb188
  %296 = trunc i64 8 to i32, !dbg !7385
  store i32 %296, i32* %_3.i141, align 4, !dbg !7385
  %fresh58 = load i64, i64* %i, align 8, !dbg !7386
  store i64 %fresh58, i64* %fresh58.dbg.spill, align 8, !dbg !7386
  call void @llvm.dbg.declare(metadata i64* %fresh58.dbg.spill, metadata !6414, metadata !DIExpression()), !dbg !7387
  %_598 = load i64, i64* %i, align 8, !dbg !7388
  store i64 %_598, i64* %self.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i18, metadata !6432, metadata !DIExpression()), !dbg !7389
  store i64 1, i64* %rhs.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i17, metadata !6435, metadata !DIExpression()), !dbg !7391
  %297 = add i64 %_598, 1, !dbg !7392
  br label %bb190, !dbg !7393

bb190:                                            ; preds = %bb189
  store i64 %297, i64* %i, align 8, !dbg !7394
  br label %bb191, !dbg !7395

bb191:                                            ; preds = %bb190
  store i32* %buffer, i32** %self.dbg.spill.i137, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i137, metadata !6181, metadata !DIExpression()), !dbg !7400
  store i64 %fresh58, i64* %count.dbg.spill.i136, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i136, metadata !6184, metadata !DIExpression()), !dbg !7402
  %298 = getelementptr inbounds i32, i32* %buffer, i64 %fresh58, !dbg !7403
  store i32* %298, i32** %58, align 8, !dbg !7403
  %_3.i138 = load i32*, i32** %58, align 8, !dbg !7403
  br label %bb192, !dbg !7404

bb192:                                            ; preds = %bb191
  %299 = trunc i64 8 to i32, !dbg !7405
  store i32 %299, i32* %_3.i138, align 4, !dbg !7405
  %fresh59 = load i64, i64* %i, align 8, !dbg !7406
  store i64 %fresh59, i64* %fresh59.dbg.spill, align 8, !dbg !7406
  call void @llvm.dbg.declare(metadata i64* %fresh59.dbg.spill, metadata !6416, metadata !DIExpression()), !dbg !7407
  %_607 = load i64, i64* %i, align 8, !dbg !7408
  store i64 %_607, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !6432, metadata !DIExpression()), !dbg !7409
  store i64 1, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !6435, metadata !DIExpression()), !dbg !7411
  %300 = add i64 %_607, 1, !dbg !7412
  br label %bb193, !dbg !7413

bb193:                                            ; preds = %bb192
  store i64 %300, i64* %i, align 8, !dbg !7414
  br label %bb194, !dbg !7415

bb194:                                            ; preds = %bb193
  store i32* %buffer, i32** %self.dbg.spill.i135, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i135, metadata !6181, metadata !DIExpression()), !dbg !7418
  store i64 %fresh59, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !6184, metadata !DIExpression()), !dbg !7420
  %301 = getelementptr inbounds i32, i32* %buffer, i64 %fresh59, !dbg !7421
  store i32* %301, i32** %59, align 8, !dbg !7421
  %_3.i = load i32*, i32** %59, align 8, !dbg !7421
  br label %bb195, !dbg !7422

bb195:                                            ; preds = %bb194
  %302 = trunc i64 8 to i32, !dbg !7423
  store i32 %302, i32* %_3.i, align 4, !dbg !7423
  %_615 = load i64, i64* %i, align 8, !dbg !7424
  %_616 = zext i32 %n to i64, !dbg !7425
  %_614 = icmp eq i64 %_615, %_616, !dbg !7424
  br i1 %_614, label %bb196, label %bb197, !dbg !7424

bb197:                                            ; preds = %bb195
  store [45 x i8]* getelementptr inbounds (<{ [45 x i8] }>, <{ [45 x i8] }>* @alloc25, i32 0, i32 0), [45 x i8]** %60, align 8, !dbg !7426
  %_631 = load [45 x i8]*, [45 x i8]** %60, align 8, !dbg !7426, !nonnull !23, !align !497, !noundef !23
  br label %bb198, !dbg !7426

bb196:                                            ; preds = %bb195
  %_635 = load i64, i64* %i, align 8, !dbg !7427
  %_636 = zext i32 %n to i64, !dbg !7428
  %_634 = icmp eq i64 %_635, %_636, !dbg !7427
  br i1 %_634, label %bb200, label %bb201, !dbg !7427

bb201:                                            ; preds = %bb196
  store [45 x i8]* getelementptr inbounds (<{ [45 x i8] }>, <{ [45 x i8] }>* @alloc25, i32 0, i32 0), [45 x i8]** %61, align 8, !dbg !7429
  %_651 = load [45 x i8]*, [45 x i8]** %61, align 8, !dbg !7429, !nonnull !23, !align !497, !noundef !23
  br label %bb202, !dbg !7429

bb200:                                            ; preds = %bb196
; invoke core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17hc42f131b2d017f6fE"(%"alloc::vec::Vec<i32>"* %x5)
          to label %bb204 unwind label %cleanup7, !dbg !7172

bb204:                                            ; preds = %bb200
; invoke core::ptr::drop_in_place<alloc::vec::Vec<[i32; 4]>>
  invoke void @"_ZN4core3ptr68drop_in_place$LT$alloc..vec..Vec$LT$$u5b$i32$u3b$$u20$4$u5d$$GT$$GT$17hf07e1a2a4e158af9E"(%"alloc::vec::Vec<[i32; 4]>"* %x4)
          to label %bb205 unwind label %cleanup, !dbg !7152

bb205:                                            ; preds = %bb204
; call core::ptr::drop_in_place<alloc::vec::Vec<i32>>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17hc42f131b2d017f6fE"(%"alloc::vec::Vec<i32>"* %x3), !dbg !7145
  br label %bb206, !dbg !7145

bb206:                                            ; preds = %bb205
  ret void, !dbg !7430

bb202:                                            ; preds = %bb201
  %_649.0 = bitcast [45 x i8]* %_651 to [0 x i8]*, !dbg !7431
; invoke core::slice::<impl [T]>::as_ptr
  %_648 = invoke i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17haf1c774ddfcf8a7dE"([0 x i8]* align 1 %_649.0, i64 45)
          to label %bb203 unwind label %cleanup11, !dbg !7431

bb203:                                            ; preds = %bb202
  invoke void @__assert_fail(i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc23, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc24, i32 0, i32 0, i32 0), i32 76, i8* %_648) #16
          to label %unreachable unwind label %cleanup11, !dbg !7432

bb198:                                            ; preds = %bb197
  %_629.0 = bitcast [45 x i8]* %_631 to [0 x i8]*, !dbg !7433
; invoke core::slice::<impl [T]>::as_ptr
  %_628 = invoke i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17haf1c774ddfcf8a7dE"([0 x i8]* align 1 %_629.0, i64 45)
          to label %bb199 unwind label %cleanup11, !dbg !7433

bb199:                                            ; preds = %bb198
  invoke void @__assert_fail(i8* getelementptr inbounds (<{ [7 x i8] }>, <{ [7 x i8] }>* @alloc23, i32 0, i32 0, i32 0), i8* getelementptr inbounds (<{ [10 x i8] }>, <{ [10 x i8] }>* @alloc24, i32 0, i32 0, i32 0), i32 76, i8* %_628) #16
          to label %unreachable unwind label %cleanup11, !dbg !7434

abort:                                            ; preds = %bb209, %bb208, %bb207
  %303 = landingpad { i8*, i32 }
          cleanup, !dbg !7435
; call core::panicking::panic_no_unwind
  call void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() #18, !dbg !7435
  unreachable, !dbg !7435

bb210:                                            ; preds = %bb209
  %304 = bitcast { i8*, i32 }* %62 to i8**, !dbg !7435
  %305 = load i8*, i8** %304, align 8, !dbg !7435
  %306 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %62, i32 0, i32 1, !dbg !7435
  %307 = load i32, i32* %306, align 8, !dbg !7435
  %308 = insertvalue { i8*, i32 } undef, i8* %305, 0, !dbg !7435
  %309 = insertvalue { i8*, i32 } %308, i32 %307, 1, !dbg !7435
  resume { i8*, i32 } %309, !dbg !7435
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_twice(i32 %i) unnamed_addr #2 !dbg !7436 {
start:
  %i.dbg.spill = alloca i32, align 4
  store i32 %i, i32* %i.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !7440, metadata !DIExpression()), !dbg !7441
  %0 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %i, i32 2), !dbg !7442
  %_4.0 = extractvalue { i32, i1 } %0, 0, !dbg !7442
  %_4.1 = extractvalue { i32, i1 } %0, 1, !dbg !7442
  %1 = call i1 @llvm.expect.i1(i1 %_4.1, i1 false), !dbg !7442
  br i1 %1, label %panic, label %bb1, !dbg !7442

bb1:                                              ; preds = %start
  ret i32 %_4.0, !dbg !7443

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.9 to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc751 to %"core::panic::location::Location"*)) #16, !dbg !7442
  unreachable, !dbg !7442
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_shadow(i32 %buffer_size, i32* %buffer) unnamed_addr #2 !dbg !7444 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i2 = alloca i64, align 8
  %self.dbg.spill.i3 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %i_1.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  %buffer.dbg.spill = alloca i32*, align 8
  %buffer_size.dbg.spill = alloca i32, align 4
  %j = alloca i32, align 4
  %i_0 = alloca i32, align 4
  store i32 %buffer_size, i32* %buffer_size.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.dbg.spill, metadata !7446, metadata !DIExpression()), !dbg !7456
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !7447, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.declare(metadata i32* %i_0, metadata !7450, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7452, metadata !DIExpression()), !dbg !7459
  store i32 10, i32* %i.dbg.spill, align 4, !dbg !7460
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !7448, metadata !DIExpression()), !dbg !7461
  store i32 0, i32* %i_0, align 4, !dbg !7462
  store i32 0, i32* %j, align 4, !dbg !7463
  br label %bb1, !dbg !7464

bb1:                                              ; preds = %bb6, %start
  %_8 = load i32, i32* %i_0, align 4, !dbg !7465
  %_6 = icmp ult i32 %_8, %buffer_size, !dbg !7466
  br i1 %_6, label %bb2, label %bb7, !dbg !7466

bb7:                                              ; preds = %bb1
  %_20 = icmp ugt i32 %buffer_size, 0, !dbg !7467
  br i1 %_20, label %bb8, label %bb10, !dbg !7467

bb2:                                              ; preds = %bb1
  %_11 = load i32, i32* %j, align 4, !dbg !7468
  %_10 = call i32 @rust_twice(i32 %_11), !dbg !7469
  br label %bb3, !dbg !7469

bb3:                                              ; preds = %bb2
  %_15 = load i32, i32* %i_0, align 4, !dbg !7470
  %_14 = sext i32 %_15 to i64, !dbg !7470
  store i32* %buffer, i32** %self.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i3, metadata !6181, metadata !DIExpression()), !dbg !7471
  store i64 %_14, i64* %count.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i2, metadata !6184, metadata !DIExpression()), !dbg !7473
  %2 = getelementptr inbounds i32, i32* %buffer, i64 %_14, !dbg !7474
  store i32* %2, i32** %0, align 8, !dbg !7474
  %_3.i4 = load i32*, i32** %0, align 8, !dbg !7474
  br label %bb4, !dbg !7475

bb4:                                              ; preds = %bb3
  store i32 %_10, i32* %_3.i4, align 4, !dbg !7476
  store i32 0, i32* %i_1.dbg.spill, align 4, !dbg !7477
  call void @llvm.dbg.declare(metadata i32* %i_1.dbg.spill, metadata !7454, metadata !DIExpression()), !dbg !7478
  %3 = load i32, i32* %i_0, align 4, !dbg !7479
  %4 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 1), !dbg !7479
  %_17.0 = extractvalue { i32, i1 } %4, 0, !dbg !7479
  %_17.1 = extractvalue { i32, i1 } %4, 1, !dbg !7479
  %5 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !7479
  br i1 %5, label %panic, label %bb5, !dbg !7479

bb5:                                              ; preds = %bb4
  store i32 %_17.0, i32* %i_0, align 4, !dbg !7479
  %6 = load i32, i32* %j, align 4, !dbg !7480
  %7 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 3), !dbg !7480
  %_19.0 = extractvalue { i32, i1 } %7, 0, !dbg !7480
  %_19.1 = extractvalue { i32, i1 } %7, 1, !dbg !7480
  %8 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !7480
  br i1 %8, label %panic1, label %bb6, !dbg !7480

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc753 to %"core::panic::location::Location"*)) #16, !dbg !7479
  unreachable, !dbg !7479

bb6:                                              ; preds = %bb5
  store i32 %_19.0, i32* %j, align 4, !dbg !7480
  br label %bb1, !dbg !7464

panic1:                                           ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc755 to %"core::panic::location::Location"*)) #16, !dbg !7480
  unreachable, !dbg !7480

bb10:                                             ; preds = %bb9, %bb7
  ret void, !dbg !7481

bb8:                                              ; preds = %bb7
  store i32* %buffer, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !6181, metadata !DIExpression()), !dbg !7482
  store i64 0, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !6184, metadata !DIExpression()), !dbg !7484
  store i32* %buffer, i32** %1, align 8, !dbg !7485
  %_3.i = load i32*, i32** %1, align 8, !dbg !7485
  br label %bb9, !dbg !7486

bb9:                                              ; preds = %bb8
  store i32 10, i32* %_3.i, align 4, !dbg !7487
  br label %bb10, !dbg !7488
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_side_effect(i32* %x) unnamed_addr #2 !dbg !7489 {
start:
  %x.dbg.spill = alloca i32*, align 8
  store i32* %x, i32** %x.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %x.dbg.spill, metadata !7495, metadata !DIExpression()), !dbg !7496
  store i32 1, i32* %x, align 4, !dbg !7497
  ret i32 0, !dbg !7498
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_exprs(i32 %n, i32* %buffer) unnamed_addr #2 !dbg !7499 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i16 = alloca i64, align 8
  %self.dbg.spill.i17 = alloca i8*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i13 = alloca i64, align 8
  %self.dbg.spill.i14 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i10 = alloca i64, align 8
  %self.dbg.spill.i11 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %i.dbg.spill = alloca i64, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %n.dbg.spill = alloca i32, align 4
  %arr = alloca [1 x i8], align 1
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !7501, metadata !DIExpression()), !dbg !7508
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !7502, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.declare(metadata [1 x i8]* %arr, metadata !7505, metadata !DIExpression()), !dbg !7510
  store i64 0, i64* %i.dbg.spill, align 8, !dbg !7511
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !7503, metadata !DIExpression()), !dbg !7512
  %6 = getelementptr inbounds [1 x i8], [1 x i8]* %arr, i64 0, i64 0, !dbg !7513
  store i8 0, i8* %6, align 1, !dbg !7513
  store i32* %buffer, i32** %self.dbg.spill.i14, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i14, metadata !6181, metadata !DIExpression()), !dbg !7514
  store i64 0, i64* %count.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i13, metadata !6184, metadata !DIExpression()), !dbg !7516
  store i32* %buffer, i32** %1, align 8, !dbg !7517
  %_3.i15 = load i32*, i32** %1, align 8, !dbg !7517
  br label %bb1, !dbg !7518

bb1:                                              ; preds = %start
  %_6 = call i32 @rust_side_effect(i32* %_3.i15), !dbg !7519
  br label %bb2, !dbg !7519

bb2:                                              ; preds = %bb1
  store i32* %buffer, i32** %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i11, metadata !6181, metadata !DIExpression()), !dbg !7520
  store i64 1, i64* %count.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i10, metadata !6184, metadata !DIExpression()), !dbg !7522
  %7 = getelementptr inbounds i32, i32* %buffer, i64 1, !dbg !7523
  store i32* %7, i32** %2, align 8, !dbg !7523
  %_3.i12 = load i32*, i32** %2, align 8, !dbg !7523
  br label %bb3, !dbg !7524

bb3:                                              ; preds = %bb2
  %_12 = call i32 @rust_side_effect(i32* %_3.i12), !dbg !7525
  br label %bb4, !dbg !7525

bb4:                                              ; preds = %bb3
  %_18 = icmp eq i32 %_12, -2147483648, !dbg !7526
  %8 = call i1 @llvm.expect.i1(i1 %_18, i1 false), !dbg !7526
  br i1 %8, label %panic, label %bb5, !dbg !7526

bb5:                                              ; preds = %bb4
  store i32* %buffer, i32** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i8, metadata !6181, metadata !DIExpression()), !dbg !7527
  store i64 2, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !6184, metadata !DIExpression()), !dbg !7529
  %9 = getelementptr inbounds i32, i32* %buffer, i64 2, !dbg !7530
  store i32* %9, i32** %3, align 8, !dbg !7530
  %_3.i9 = load i32*, i32** %3, align 8, !dbg !7530
  br label %bb6, !dbg !7531

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([31 x i8]* @str.a to [0 x i8]*), i64 31, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc757 to %"core::panic::location::Location"*)) #16, !dbg !7526
  unreachable, !dbg !7526

bb6:                                              ; preds = %bb5
  %_25 = call i32 @rust_side_effect(i32* %_3.i9), !dbg !7532
  br label %bb7, !dbg !7532

bb7:                                              ; preds = %bb6
  %_24 = sext i32 %_25 to i64, !dbg !7532
  store i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc29, i32 0, i32 0, i32 0), i8** %self.dbg.spill.i17, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i17, metadata !7533, metadata !DIExpression()), !dbg !7539
  store i64 %_24, i64* %count.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i16, metadata !7538, metadata !DIExpression()), !dbg !7541
  %10 = getelementptr inbounds i8, i8* getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc29, i32 0, i32 0, i32 0), i64 %_24, !dbg !7542
  store i8* %10, i8** %0, align 8, !dbg !7542
  %11 = load i8*, i8** %0, align 8, !dbg !7542
  br label %bb8, !dbg !7543

bb8:                                              ; preds = %bb7
  store i32* %buffer, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !6181, metadata !DIExpression()), !dbg !7544
  store i64 3, i64* %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i4, metadata !6184, metadata !DIExpression()), !dbg !7546
  %12 = getelementptr inbounds i32, i32* %buffer, i64 3, !dbg !7547
  store i32* %12, i32** %4, align 8, !dbg !7547
  %_3.i6 = load i32*, i32** %4, align 8, !dbg !7547
  br label %bb9, !dbg !7548

bb9:                                              ; preds = %bb8
  %_33 = call i32 @rust_side_effect(i32* %_3.i6), !dbg !7549
  br label %bb10, !dbg !7549

bb10:                                             ; preds = %bb9
  %_32 = sext i32 %_33 to i64, !dbg !7549
  %_40 = icmp ult i64 %_32, 1, !dbg !7550
  %13 = call i1 @llvm.expect.i1(i1 %_40, i1 true), !dbg !7550
  br i1 %13, label %bb11, label %panic1, !dbg !7550

bb11:                                             ; preds = %bb10
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %arr, i64 0, i64 %_32, !dbg !7550
  %15 = load i8, i8* %14, align 1, !dbg !7550
  %16 = call { i8, i1 } @llvm.sadd.with.overflow.i8(i8 %15, i8 1), !dbg !7550
  %_41.0 = extractvalue { i8, i1 } %16, 0, !dbg !7550
  %_41.1 = extractvalue { i8, i1 } %16, 1, !dbg !7550
  %17 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !7550
  br i1 %17, label %panic2, label %bb12, !dbg !7550

panic1:                                           ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_32, i64 1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc759 to %"core::panic::location::Location"*)) #16, !dbg !7550
  unreachable, !dbg !7550

bb12:                                             ; preds = %bb11
  %18 = getelementptr inbounds [1 x i8], [1 x i8]* %arr, i64 0, i64 %_32, !dbg !7550
  store i8 %_41.0, i8* %18, align 1, !dbg !7550
  store i32* %buffer, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !6181, metadata !DIExpression()), !dbg !7551
  store i64 3, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !6184, metadata !DIExpression()), !dbg !7553
  %19 = getelementptr inbounds i32, i32* %buffer, i64 3, !dbg !7554
  store i32* %19, i32** %5, align 8, !dbg !7554
  %_3.i = load i32*, i32** %5, align 8, !dbg !7554
  br label %bb13, !dbg !7555

panic2:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc759 to %"core::panic::location::Location"*)) #16, !dbg !7550
  unreachable, !dbg !7550

bb13:                                             ; preds = %bb12
  %_43 = call i32 @rust_side_effect(i32* %_3.i), !dbg !7556
  br label %bb14, !dbg !7556

bb14:                                             ; preds = %bb13
  %_42 = sext i32 %_43 to i64, !dbg !7556
  %_50 = icmp ult i64 %_42, 1, !dbg !7557
  %20 = call i1 @llvm.expect.i1(i1 %_50, i1 true), !dbg !7557
  br i1 %20, label %bb15, label %panic3, !dbg !7557

bb15:                                             ; preds = %bb14
  ret void, !dbg !7558

panic3:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_42, i64 1, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc761 to %"core::panic::location::Location"*)) #16, !dbg !7557
  unreachable, !dbg !7557
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_setmem(i32 %size, i32* %buffer) unnamed_addr #2 !dbg !7559 {
start:
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %size.dbg.spill = alloca i32, align 4
  store i32 %size, i32* %size.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %size.dbg.spill, metadata !7563, metadata !DIExpression()), !dbg !7565
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !7564, metadata !DIExpression()), !dbg !7566
  %_4 = bitcast i32* %buffer to i8*, !dbg !7567
  %_8 = zext i32 %size to i64, !dbg !7568
  br label %bb1, !dbg !7569

bb1:                                              ; preds = %start
  store i64 %_8, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !6193, metadata !DIExpression()), !dbg !7570
  store i64 4, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !6199, metadata !DIExpression()), !dbg !7572
  %0 = mul i64 %_8, 4, !dbg !7573
  br label %bb2, !dbg !7568

bb2:                                              ; preds = %bb1
  %_3 = call i8* @memset(i8* %_4, i32 1, i64 %0), !dbg !7574
  br label %bb3, !dbg !7574

bb3:                                              ; preds = %bb2
  ret void, !dbg !7575
}

; Function Attrs: nonlazybind uwtable
define dso_local i32* @rust_foo(i32* %0) unnamed_addr #2 !dbg !7576 {
start:
  %1 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %j = alloca i32*, align 8
  store i32* %0, i32** %j, align 8
  call void @llvm.dbg.declare(metadata i32** %j, metadata !7582, metadata !DIExpression()), !dbg !7583
  %_3 = load i32*, i32** %j, align 8, !dbg !7584
  store i32* %_3, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !6181, metadata !DIExpression()), !dbg !7585
  store i64 1, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !6184, metadata !DIExpression()), !dbg !7587
  %2 = getelementptr inbounds i32, i32* %_3, i64 1, !dbg !7588
  store i32* %2, i32** %1, align 8, !dbg !7588
  %_3.i = load i32*, i32** %1, align 8, !dbg !7588
  br label %bb1, !dbg !7584

bb1:                                              ; preds = %start
  store i32* %_3.i, i32** %j, align 8, !dbg !7589
  %3 = load i32*, i32** %j, align 8, !dbg !7590
  ret i32* %3, !dbg !7591
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_bar(i32 %0) unnamed_addr #2 !dbg !7592 {
start:
  %k = alloca i32, align 4
  store i32 %0, i32* %k, align 4
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7594, metadata !DIExpression()), !dbg !7595
  %1 = load i32, i32* %k, align 4, !dbg !7596
  %2 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 1), !dbg !7596
  %_2.0 = extractvalue { i32, i1 } %2, 0, !dbg !7596
  %_2.1 = extractvalue { i32, i1 } %2, 1, !dbg !7596
  %3 = call i1 @llvm.expect.i1(i1 %_2.1, i1 false), !dbg !7596
  br i1 %3, label %panic, label %bb1, !dbg !7596

bb1:                                              ; preds = %start
  store i32 %_2.0, i32* %k, align 4, !dbg !7596
  %4 = load i32, i32* %k, align 4, !dbg !7597
  ret i32 %4, !dbg !7598

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc763 to %"core::panic::location::Location"*)) #16, !dbg !7596
  unreachable, !dbg !7596
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_lvalue(i32* %buffer) unnamed_addr #2 !dbg !7599 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i10 = alloca i64, align 8
  %self.dbg.spill.i11 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i7 = alloca i64, align 8
  %self.dbg.spill.i8 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i4 = alloca i64, align 8
  %self.dbg.spill.i5 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %p.dbg.spill = alloca i32*, align 8
  %buffer.dbg.spill = alloca i32*, align 8
  %_15 = alloca [1 x i32], align 4
  %arr = alloca [1 x [1 x i32]], align 4
  %n = alloca i32, align 4
  store i32* %buffer, i32** %buffer.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %buffer.dbg.spill, metadata !7603, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7604, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.declare(metadata [1 x [1 x i32]]* %arr, metadata !7608, metadata !DIExpression()), !dbg !7613
  store i32 5, i32* %n, align 4, !dbg !7614
  store i32 6, i32* %n, align 4, !dbg !7615
  store i32* %buffer, i32** %p.dbg.spill, align 8, !dbg !7616
  call void @llvm.dbg.declare(metadata i32** %p.dbg.spill, metadata !7606, metadata !DIExpression()), !dbg !7617
  store i32 8, i32* %buffer, align 4, !dbg !7618
  store i32* %buffer, i32** %self.dbg.spill.i11, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i11, metadata !6181, metadata !DIExpression()), !dbg !7619
  store i64 1, i64* %count.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i10, metadata !6184, metadata !DIExpression()), !dbg !7621
  %5 = getelementptr inbounds i32, i32* %buffer, i64 1, !dbg !7622
  store i32* %5, i32** %0, align 8, !dbg !7622
  %_3.i12 = load i32*, i32** %0, align 8, !dbg !7622
  br label %bb1, !dbg !7623

bb1:                                              ; preds = %start
  store i32 9, i32* %_3.i12, align 4, !dbg !7624
  store i32* %buffer, i32** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i8, metadata !6181, metadata !DIExpression()), !dbg !7625
  store i64 1, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !6184, metadata !DIExpression()), !dbg !7627
  %6 = getelementptr inbounds i32, i32* %buffer, i64 1, !dbg !7628
  store i32* %6, i32** %1, align 8, !dbg !7628
  %_3.i9 = load i32*, i32** %1, align 8, !dbg !7628
  br label %bb2, !dbg !7629

bb2:                                              ; preds = %bb1
  %_10 = call i32* @rust_foo(i32* %_3.i9), !dbg !7630
  br label %bb3, !dbg !7630

bb3:                                              ; preds = %bb2
  store i32 3, i32* %_10, align 4, !dbg !7631
  %7 = getelementptr inbounds [1 x i32], [1 x i32]* %_15, i64 0, i64 0, !dbg !7632
  store i32 3, i32* %7, align 4, !dbg !7632
  %8 = getelementptr inbounds [1 x [1 x i32]], [1 x [1 x i32]]* %arr, i64 0, i64 0, !dbg !7633
  %9 = bitcast [1 x i32]* %8 to i8*, !dbg !7633
  %10 = bitcast [1 x i32]* %_15 to i8*, !dbg !7633
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false), !dbg !7633
  %_17 = load i32, i32* %n, align 4, !dbg !7634
  store i32* %buffer, i32** %self.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i5, metadata !6181, metadata !DIExpression()), !dbg !7635
  store i64 3, i64* %count.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i4, metadata !6184, metadata !DIExpression()), !dbg !7637
  %11 = getelementptr inbounds i32, i32* %buffer, i64 3, !dbg !7638
  store i32* %11, i32** %2, align 8, !dbg !7638
  %_3.i6 = load i32*, i32** %2, align 8, !dbg !7638
  br label %bb4, !dbg !7639

bb4:                                              ; preds = %bb3
  store i32 %_17, i32* %_3.i6, align 4, !dbg !7640
  %12 = load i32, i32* %n, align 4, !dbg !7641
  %13 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 1), !dbg !7641
  %_21.0 = extractvalue { i32, i1 } %13, 0, !dbg !7641
  %_21.1 = extractvalue { i32, i1 } %13, 1, !dbg !7641
  %14 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !7641
  br i1 %14, label %panic, label %bb5, !dbg !7641

bb5:                                              ; preds = %bb4
  store i32 %_21.0, i32* %n, align 4, !dbg !7641
  %_22 = load i32, i32* %n, align 4, !dbg !7642
  %15 = getelementptr inbounds [1 x [1 x i32]], [1 x [1 x i32]]* %arr, i64 0, i64 0, !dbg !7643
  %16 = getelementptr inbounds [1 x i32], [1 x i32]* %15, i64 0, i64 0, !dbg !7643
  store i32 %_22, i32* %16, align 4, !dbg !7643
  %17 = getelementptr inbounds [1 x [1 x i32]], [1 x [1 x i32]]* %arr, i64 0, i64 0, !dbg !7644
  %18 = getelementptr inbounds [1 x i32], [1 x i32]* %17, i64 0, i64 0, !dbg !7644
  %_25 = load i32, i32* %18, align 4, !dbg !7644
  store i32* %buffer, i32** %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i2, metadata !6181, metadata !DIExpression()), !dbg !7645
  store i64 4, i64* %count.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i1, metadata !6184, metadata !DIExpression()), !dbg !7647
  %19 = getelementptr inbounds i32, i32* %buffer, i64 4, !dbg !7648
  store i32* %19, i32** %3, align 8, !dbg !7648
  %_3.i3 = load i32*, i32** %3, align 8, !dbg !7648
  br label %bb6, !dbg !7649

panic:                                            ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc765 to %"core::panic::location::Location"*)) #16, !dbg !7641
  unreachable, !dbg !7641

bb6:                                              ; preds = %bb5
  store i32 %_25, i32* %_3.i3, align 4, !dbg !7650
  %_35 = call i32 @rust_bar(i32 4), !dbg !7651
  br label %bb7, !dbg !7651

bb7:                                              ; preds = %bb6
  %_34 = sext i32 %_35 to i64, !dbg !7651
  store i32* %buffer, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !6181, metadata !DIExpression()), !dbg !7652
  store i64 %_34, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !6184, metadata !DIExpression()), !dbg !7654
  %20 = getelementptr inbounds i32, i32* %buffer, i64 %_34, !dbg !7655
  store i32* %20, i32** %4, align 8, !dbg !7655
  %_3.i = load i32*, i32** %4, align 8, !dbg !7655
  br label %bb8, !dbg !7656

bb8:                                              ; preds = %bb7
  store i32 -8, i32* %_3.i, align 4, !dbg !7657
  ret void, !dbg !7658
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_swap(i32* %a, i32* %b) unnamed_addr #2 !dbg !7659 {
start:
  %t.dbg.spill = alloca i32, align 4
  %b.dbg.spill = alloca i32*, align 8
  %a.dbg.spill = alloca i32*, align 8
  store i32* %a, i32** %a.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %a.dbg.spill, metadata !7665, metadata !DIExpression()), !dbg !7669
  store i32* %b, i32** %b.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %b.dbg.spill, metadata !7666, metadata !DIExpression()), !dbg !7670
  %t = load i32, i32* %a, align 4, !dbg !7671
  store i32 %t, i32* %t.dbg.spill, align 4, !dbg !7671
  call void @llvm.dbg.declare(metadata i32* %t.dbg.spill, metadata !7667, metadata !DIExpression()), !dbg !7672
  %_4 = load i32, i32* %b, align 4, !dbg !7673
  store i32 %_4, i32* %a, align 4, !dbg !7674
  store i32 %t, i32* %b, align 4, !dbg !7675
  ret void, !dbg !7676
}

; Function Attrs: nonlazybind uwtable
define dso_local i32 @rust_partition(i32* %arr, i32 %low, i32 %high) unnamed_addr #2 !dbg !7677 {
start:
  %0 = alloca i32*, align 8
  %count.dbg.spill.i18 = alloca i64, align 8
  %self.dbg.spill.i19 = alloca i32*, align 8
  %1 = alloca i32*, align 8
  %count.dbg.spill.i15 = alloca i64, align 8
  %self.dbg.spill.i16 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %count.dbg.spill.i12 = alloca i64, align 8
  %self.dbg.spill.i13 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %count.dbg.spill.i9 = alloca i64, align 8
  %self.dbg.spill.i10 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %count.dbg.spill.i6 = alloca i64, align 8
  %self.dbg.spill.i7 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i32*, align 8
  %pivot.dbg.spill = alloca i32, align 4
  %high.dbg.spill = alloca i32, align 4
  %low.dbg.spill = alloca i32, align 4
  %arr.dbg.spill = alloca i32*, align 8
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  store i32* %arr, i32** %arr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %arr.dbg.spill, metadata !7681, metadata !DIExpression()), !dbg !7690
  store i32 %low, i32* %low.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %low.dbg.spill, metadata !7682, metadata !DIExpression()), !dbg !7691
  store i32 %high, i32* %high.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %high.dbg.spill, metadata !7683, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7686, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7688, metadata !DIExpression()), !dbg !7694
  %_7 = sext i32 %high to i64, !dbg !7695
  store i32* %arr, i32** %self.dbg.spill.i19, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i19, metadata !6181, metadata !DIExpression()), !dbg !7696
  store i64 %_7, i64* %count.dbg.spill.i18, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i18, metadata !6184, metadata !DIExpression()), !dbg !7698
  %6 = getelementptr inbounds i32, i32* %arr, i64 %_7, !dbg !7699
  store i32* %6, i32** %0, align 8, !dbg !7699
  %_3.i20 = load i32*, i32** %0, align 8, !dbg !7699
  br label %bb1, !dbg !7700

bb1:                                              ; preds = %start
  %pivot = load i32, i32* %_3.i20, align 4, !dbg !7701
  store i32 %pivot, i32* %pivot.dbg.spill, align 4, !dbg !7701
  call void @llvm.dbg.declare(metadata i32* %pivot.dbg.spill, metadata !7684, metadata !DIExpression()), !dbg !7702
  %7 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %low, i32 1), !dbg !7703
  %_12.0 = extractvalue { i32, i1 } %7, 0, !dbg !7703
  %_12.1 = extractvalue { i32, i1 } %7, 1, !dbg !7703
  %8 = call i1 @llvm.expect.i1(i1 %_12.1, i1 false), !dbg !7703
  br i1 %8, label %panic, label %bb2, !dbg !7703

bb2:                                              ; preds = %bb1
  store i32 %_12.0, i32* %i, align 4, !dbg !7703
  store i32 %low, i32* %j, align 4, !dbg !7704
  br label %bb3, !dbg !7705

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.b to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc767 to %"core::panic::location::Location"*)) #16, !dbg !7703
  unreachable, !dbg !7703

bb3:                                              ; preds = %bb12, %bb2
  %_15 = load i32, i32* %j, align 4, !dbg !7706
  %9 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %high, i32 1), !dbg !7707
  %_19.0 = extractvalue { i32, i1 } %9, 0, !dbg !7707
  %_19.1 = extractvalue { i32, i1 } %9, 1, !dbg !7707
  %10 = call i1 @llvm.expect.i1(i1 %_19.1, i1 false), !dbg !7707
  br i1 %10, label %panic1, label %bb4, !dbg !7707

bb4:                                              ; preds = %bb3
  %_14 = icmp sle i32 %_15, %_19.0, !dbg !7706
  br i1 %_14, label %bb5, label %bb13, !dbg !7706

panic1:                                           ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.b to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc769 to %"core::panic::location::Location"*)) #16, !dbg !7707
  unreachable, !dbg !7707

bb13:                                             ; preds = %bb4
  %_49 = load i32, i32* %i, align 4, !dbg !7708
  %11 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_49, i32 1), !dbg !7709
  %_51.0 = extractvalue { i32, i1 } %11, 0, !dbg !7709
  %_51.1 = extractvalue { i32, i1 } %11, 1, !dbg !7709
  %12 = call i1 @llvm.expect.i1(i1 %_51.1, i1 false), !dbg !7709
  br i1 %12, label %panic4, label %bb14, !dbg !7709

bb5:                                              ; preds = %bb4
  %_25 = load i32, i32* %j, align 4, !dbg !7710
  %_24 = sext i32 %_25 to i64, !dbg !7710
  store i32* %arr, i32** %self.dbg.spill.i16, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i16, metadata !6181, metadata !DIExpression()), !dbg !7711
  store i64 %_24, i64* %count.dbg.spill.i15, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i15, metadata !6184, metadata !DIExpression()), !dbg !7713
  %13 = getelementptr inbounds i32, i32* %arr, i64 %_24, !dbg !7714
  store i32* %13, i32** %1, align 8, !dbg !7714
  %_3.i17 = load i32*, i32** %1, align 8, !dbg !7714
  br label %bb6, !dbg !7715

bb6:                                              ; preds = %bb5
  %_21 = load i32, i32* %_3.i17, align 4, !dbg !7716
  %_20 = icmp sle i32 %_21, %pivot, !dbg !7716
  br i1 %_20, label %bb7, label %bb11, !dbg !7716

bb11:                                             ; preds = %bb10, %bb6
  %14 = load i32, i32* %j, align 4, !dbg !7717
  %15 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 1), !dbg !7717
  %_41.0 = extractvalue { i32, i1 } %15, 0, !dbg !7717
  %_41.1 = extractvalue { i32, i1 } %15, 1, !dbg !7717
  %16 = call i1 @llvm.expect.i1(i1 %_41.1, i1 false), !dbg !7717
  br i1 %16, label %panic3, label %bb12, !dbg !7717

bb7:                                              ; preds = %bb6
  %17 = load i32, i32* %i, align 4, !dbg !7718
  %18 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 1), !dbg !7718
  %_27.0 = extractvalue { i32, i1 } %18, 0, !dbg !7718
  %_27.1 = extractvalue { i32, i1 } %18, 1, !dbg !7718
  %19 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false), !dbg !7718
  br i1 %19, label %panic2, label %bb8, !dbg !7718

bb8:                                              ; preds = %bb7
  store i32 %_27.0, i32* %i, align 4, !dbg !7718
  %_34 = load i32, i32* %i, align 4, !dbg !7719
  %_33 = sext i32 %_34 to i64, !dbg !7719
  store i32* %arr, i32** %self.dbg.spill.i13, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i13, metadata !6181, metadata !DIExpression()), !dbg !7720
  store i64 %_33, i64* %count.dbg.spill.i12, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i12, metadata !6184, metadata !DIExpression()), !dbg !7722
  %20 = getelementptr inbounds i32, i32* %arr, i64 %_33, !dbg !7723
  store i32* %20, i32** %2, align 8, !dbg !7723
  %_3.i14 = load i32*, i32** %2, align 8, !dbg !7723
  br label %bb9, !dbg !7724

panic2:                                           ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc771 to %"core::panic::location::Location"*)) #16, !dbg !7718
  unreachable, !dbg !7718

bb9:                                              ; preds = %bb8
  %_40 = load i32, i32* %j, align 4, !dbg !7725
  %_39 = sext i32 %_40 to i64, !dbg !7725
  store i32* %arr, i32** %self.dbg.spill.i10, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i10, metadata !6181, metadata !DIExpression()), !dbg !7726
  store i64 %_39, i64* %count.dbg.spill.i9, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i9, metadata !6184, metadata !DIExpression()), !dbg !7728
  %21 = getelementptr inbounds i32, i32* %arr, i64 %_39, !dbg !7729
  store i32* %21, i32** %3, align 8, !dbg !7729
  %_3.i11 = load i32*, i32** %3, align 8, !dbg !7729
  br label %bb10, !dbg !7730

bb10:                                             ; preds = %bb9
  call void @rust_swap(i32* %_3.i14, i32* %_3.i11), !dbg !7731
  br label %bb11, !dbg !7731

bb12:                                             ; preds = %bb11
  store i32 %_41.0, i32* %j, align 4, !dbg !7717
  br label %bb3, !dbg !7705

panic3:                                           ; preds = %bb11
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc773 to %"core::panic::location::Location"*)) #16, !dbg !7717
  unreachable, !dbg !7717

bb14:                                             ; preds = %bb13
  %_47 = sext i32 %_51.0 to i64, !dbg !7709
  store i32* %arr, i32** %self.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i7, metadata !6181, metadata !DIExpression()), !dbg !7732
  store i64 %_47, i64* %count.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i6, metadata !6184, metadata !DIExpression()), !dbg !7734
  %22 = getelementptr inbounds i32, i32* %arr, i64 %_47, !dbg !7735
  store i32* %22, i32** %4, align 8, !dbg !7735
  %_3.i8 = load i32*, i32** %4, align 8, !dbg !7735
  br label %bb15, !dbg !7736

panic4:                                           ; preds = %bb13
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc775 to %"core::panic::location::Location"*)) #16, !dbg !7709
  unreachable, !dbg !7709

bb15:                                             ; preds = %bb14
  %_56 = sext i32 %high to i64, !dbg !7737
  store i32* %arr, i32** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i32** %self.dbg.spill.i, metadata !6181, metadata !DIExpression()), !dbg !7738
  store i64 %_56, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !6184, metadata !DIExpression()), !dbg !7740
  %23 = getelementptr inbounds i32, i32* %arr, i64 %_56, !dbg !7741
  store i32* %23, i32** %5, align 8, !dbg !7741
  %_3.i = load i32*, i32** %5, align 8, !dbg !7741
  br label %bb16, !dbg !7742

bb16:                                             ; preds = %bb15
  call void @rust_swap(i32* %_3.i8, i32* %_3.i), !dbg !7743
  br label %bb17, !dbg !7743

bb17:                                             ; preds = %bb16
  %_58 = load i32, i32* %i, align 4, !dbg !7744
  %24 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_58, i32 1), !dbg !7744
  %_60.0 = extractvalue { i32, i1 } %24, 0, !dbg !7744
  %_60.1 = extractvalue { i32, i1 } %24, 1, !dbg !7744
  %25 = call i1 @llvm.expect.i1(i1 %_60.1, i1 false), !dbg !7744
  br i1 %25, label %panic5, label %bb18, !dbg !7744

bb18:                                             ; preds = %bb17
  ret i32 %_60.0, !dbg !7745

panic5:                                           ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc777 to %"core::panic::location::Location"*)) #16, !dbg !7744
  unreachable, !dbg !7744
}

; Function Attrs: nonlazybind uwtable
define dso_local void @rust_quickSort(i32* %arr, i32 %low, i32 %high) unnamed_addr #2 !dbg !7746 {
start:
  %i.dbg.spill = alloca i32, align 4
  %high.dbg.spill = alloca i32, align 4
  %low.dbg.spill = alloca i32, align 4
  %arr.dbg.spill = alloca i32*, align 8
  store i32* %arr, i32** %arr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i32** %arr.dbg.spill, metadata !7750, metadata !DIExpression()), !dbg !7755
  store i32 %low, i32* %low.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %low.dbg.spill, metadata !7751, metadata !DIExpression()), !dbg !7756
  store i32 %high, i32* %high.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %high.dbg.spill, metadata !7752, metadata !DIExpression()), !dbg !7757
  %_4 = icmp slt i32 %low, %high, !dbg !7758
  br i1 %_4, label %bb1, label %bb6, !dbg !7758

bb6:                                              ; preds = %bb5, %start
  ret void, !dbg !7759

bb1:                                              ; preds = %start
  %i = call i32 @rust_partition(i32* %arr, i32 %low, i32 %high), !dbg !7760
  store i32 %i, i32* %i.dbg.spill, align 4, !dbg !7760
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !7753, metadata !DIExpression()), !dbg !7761
  br label %bb2, !dbg !7760

bb2:                                              ; preds = %bb1
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %i, i32 1), !dbg !7762
  %_17.0 = extractvalue { i32, i1 } %0, 0, !dbg !7762
  %_17.1 = extractvalue { i32, i1 } %0, 1, !dbg !7762
  %1 = call i1 @llvm.expect.i1(i1 %_17.1, i1 false), !dbg !7762
  br i1 %1, label %panic, label %bb3, !dbg !7762

bb3:                                              ; preds = %bb2
  call void @rust_quickSort(i32* %arr, i32 %low, i32 %_17.0), !dbg !7763
  br label %bb4, !dbg !7763

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([33 x i8]* @str.b to [0 x i8]*), i64 33, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc779 to %"core::panic::location::Location"*)) #16, !dbg !7762
  unreachable, !dbg !7762

bb4:                                              ; preds = %bb3
  %2 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %i, i32 1), !dbg !7764
  %_23.0 = extractvalue { i32, i1 } %2, 0, !dbg !7764
  %_23.1 = extractvalue { i32, i1 } %2, 1, !dbg !7764
  %3 = call i1 @llvm.expect.i1(i1 %_23.1, i1 false), !dbg !7764
  br i1 %3, label %panic1, label %bb5, !dbg !7764

bb5:                                              ; preds = %bb4
  call void @rust_quickSort(i32* %arr, i32 %_23.0, i32 %high), !dbg !7765
  br label %bb6, !dbg !7765

panic1:                                           ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1 bitcast ([28 x i8]* @str.8 to [0 x i8]*), i64 28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc781 to %"core::panic::location::Location"*)) #16, !dbg !7764
  unreachable, !dbg !7764
}

; misc_tests::test_sizeofs::test_sizeofs::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests12test_sizeofs12test_sizeofs28_$u7b$$u7b$closure$u7d$$u7d$17h7ba3292778a18d8aE"(%"[closure@src/test_sizeofs.rs:14:1: 26:2]"* align 1 %_1) unnamed_addr #0 !dbg !7766 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_sizeofs.rs:14:1: 26:2]"*, align 8
  store %"[closure@src/test_sizeofs.rs:14:1: 26:2]"* %_1, %"[closure@src/test_sizeofs.rs:14:1: 26:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_sizeofs.rs:14:1: 26:2]"** %_1.dbg.spill, metadata !7772, metadata !DIExpression()), !dbg !7773
  call void @test_sizeofs(), !dbg !7773
  br label %bb1, !dbg !7773

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !7773
  br label %bb2, !dbg !7773

bb2:                                              ; preds = %bb1
  ret void, !dbg !7774
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_sizeofs() unnamed_addr #2 !dbg !7775 {
start:
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_51 = alloca [1 x { i8*, i64* }], align 8
  %_44 = alloca %"core::fmt::Arguments", align 8
  %_43 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_21 = alloca { i32*, i32* }, align 8
  %x = alloca i64, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %rust_buffer = alloca [60 x i32], align 4
  %buffer = alloca [60 x i32], align 4
  call void @llvm.dbg.declare(metadata [60 x i32]* %buffer, metadata !7777, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.declare(metadata [60 x i32]* %rust_buffer, metadata !7782, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !7784, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7786, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !7792, metadata !DIExpression()), !dbg !7799
  %0 = getelementptr inbounds [60 x i32], [60 x i32]* %buffer, i64 0, i64 0, !dbg !7800
  %1 = bitcast i32* %0 to i8*, !dbg !7800
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 240, i1 false), !dbg !7800
  %2 = getelementptr inbounds [60 x i32], [60 x i32]* %rust_buffer, i64 0, i64 0, !dbg !7801
  %3 = bitcast i32* %2 to i8*, !dbg !7801
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 240, i1 false), !dbg !7801
  %_6.0 = bitcast [60 x i32]* %buffer to [0 x i32]*, !dbg !7802
; call core::slice::<impl [T]>::as_mut_ptr
  %_5 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_6.0, i64 60), !dbg !7802
  br label %bb1, !dbg !7802

bb1:                                              ; preds = %start
  call void @sizeofs(i32 60, i32* %_5), !dbg !7803
  br label %bb2, !dbg !7803

bb2:                                              ; preds = %bb1
  %_11.0 = bitcast [60 x i32]* %rust_buffer to [0 x i32]*, !dbg !7804
; call core::slice::<impl [T]>::as_mut_ptr
  %_10 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_11.0, i64 60), !dbg !7804
  br label %bb3, !dbg !7804

bb3:                                              ; preds = %bb2
  call void @rust_sizeofs(i32 60, i32* %_10), !dbg !7805
  br label %bb4, !dbg !7805

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_14 to i64*, !dbg !7806
  store i64 0, i64* %4, align 8, !dbg !7806
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !7806
  store i64 60, i64* %5, align 8, !dbg !7806
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 0, !dbg !7806
  %7 = load i64, i64* %6, align 8, !dbg !7806
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !7806
  %9 = load i64, i64* %8, align 8, !dbg !7806
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %10 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb906d45d6c85ec06E"(i64 %7, i64 %9), !dbg !7806
  %_13.0 = extractvalue { i64, i64 } %10, 0, !dbg !7806
  %_13.1 = extractvalue { i64, i64 } %10, 1, !dbg !7806
  br label %bb5, !dbg !7806

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !7806
  store i64 %_13.0, i64* %11, align 8, !dbg !7806
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !7806
  store i64 %_13.1, i64* %12, align 8, !dbg !7806
  br label %bb6, !dbg !7807

bb6:                                              ; preds = %bb12, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %13 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h7b1637b1988718b5E"({ i64, i64 }* align 8 %iter), !dbg !7797
  store { i64, i64 } %13, { i64, i64 }* %_16, align 8, !dbg !7797
  br label %bb7, !dbg !7797

bb7:                                              ; preds = %bb6
  %14 = bitcast { i64, i64 }* %_16 to i64*, !dbg !7797
  %_19 = load i64, i64* %14, align 8, !dbg !7797, !range !1114, !noundef !23
  switch i64 %_19, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !7797

bb9:                                              ; preds = %bb7
  unreachable, !dbg !7797

bb10:                                             ; preds = %bb7
  ret void, !dbg !7808

bb8:                                              ; preds = %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_16, i32 0, i32 1, !dbg !7809
  %16 = load i64, i64* %15, align 8, !dbg !7809
  store i64 %16, i64* %x, align 8, !dbg !7809
  %_23 = load i64, i64* %x, align 8, !dbg !7810
  %_25 = icmp ult i64 %_23, 60, !dbg !7811
  %17 = call i1 @llvm.expect.i1(i1 %_25, i1 true), !dbg !7811
  br i1 %17, label %bb11, label %panic, !dbg !7811

bb11:                                             ; preds = %bb8
  %_22 = getelementptr inbounds [60 x i32], [60 x i32]* %buffer, i64 0, i64 %_23, !dbg !7812
  %_27 = load i64, i64* %x, align 8, !dbg !7813
  %_29 = icmp ult i64 %_27, 60, !dbg !7814
  %18 = call i1 @llvm.expect.i1(i1 %_29, i1 true), !dbg !7814
  br i1 %18, label %bb12, label %panic1, !dbg !7814

panic:                                            ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_23, i64 60, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc783 to %"core::panic::location::Location"*)) #16, !dbg !7811
  unreachable, !dbg !7811

bb12:                                             ; preds = %bb11
  %_26 = getelementptr inbounds [60 x i32], [60 x i32]* %rust_buffer, i64 0, i64 %_27, !dbg !7812
  %19 = bitcast { i32*, i32* }* %_21 to i32**, !dbg !7812
  store i32* %_22, i32** %19, align 8, !dbg !7812
  %20 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_21, i32 0, i32 1, !dbg !7812
  store i32* %_26, i32** %20, align 8, !dbg !7812
  %21 = bitcast { i32*, i32* }* %_21 to i32**, !dbg !7812
  %left_val = load i32*, i32** %21, align 8, !dbg !7812, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !7812
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !7788, metadata !DIExpression()), !dbg !7815
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_21, i32 0, i32 1, !dbg !7812
  %right_val = load i32*, i32** %22, align 8, !dbg !7812, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !7812
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !7791, metadata !DIExpression()), !dbg !7815
  %_34 = load i32, i32* %left_val, align 4, !dbg !7815
  %_35 = load i32, i32* %right_val, align 4, !dbg !7815
  %_33 = icmp eq i32 %_34, %_35, !dbg !7815
  %_32 = xor i1 %_33, true, !dbg !7815
  br i1 %_32, label %bb13, label %bb6, !dbg !7815

panic1:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_27, i64 60, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc785 to %"core::panic::location::Location"*)) #16, !dbg !7814
  unreachable, !dbg !7814

bb13:                                             ; preds = %bb12
  store i8 0, i8* %kind, align 1, !dbg !7815
; call core::fmt::ArgumentV1::new_display
  %23 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hdc27862aaaff6c82E(i64* align 8 %x), !dbg !7799
  %_52.0 = extractvalue { i8*, i64* } %23, 0, !dbg !7799
  %_52.1 = extractvalue { i8*, i64* } %23, 1, !dbg !7799
  br label %bb14, !dbg !7799

bb14:                                             ; preds = %bb13
  %24 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_51, i64 0, i64 0, !dbg !7799
  %25 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %24, i32 0, i32 0, !dbg !7799
  store i8* %_52.0, i8** %25, align 8, !dbg !7799
  %26 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %24, i32 0, i32 1, !dbg !7799
  store i64* %_52.1, i64** %26, align 8, !dbg !7799
  %_48.0 = bitcast [1 x { i8*, i64* }]* %_51 to [0 x { i8*, i64* }]*, !dbg !7799
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h090b18600dc0d53dE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_44, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc571 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_48.0, i64 1), !dbg !7799
  br label %bb15, !dbg !7799

bb15:                                             ; preds = %bb14
  %27 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_43 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !7799
  %28 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %27 to %"core::fmt::Arguments"*, !dbg !7799
  %29 = bitcast %"core::fmt::Arguments"* %28 to i8*, !dbg !7799
  %30 = bitcast %"core::fmt::Arguments"* %_44 to i8*, !dbg !7799
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 48, i1 false), !dbg !7799
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc787 to %"core::panic::location::Location"*)) #16, !dbg !7799
  unreachable, !dbg !7799
}

; misc_tests::test_uninitialized::test_buffer::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests18test_uninitialized11test_buffer28_$u7b$$u7b$closure$u7d$$u7d$17h55bee68f352943a6E"(%"[closure@src/test_uninitialized.rs:11:1: 23:2]"* align 1 %_1) unnamed_addr #0 !dbg !7816 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_uninitialized.rs:11:1: 23:2]"*, align 8
  store %"[closure@src/test_uninitialized.rs:11:1: 23:2]"* %_1, %"[closure@src/test_uninitialized.rs:11:1: 23:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_uninitialized.rs:11:1: 23:2]"** %_1.dbg.spill, metadata !7822, metadata !DIExpression()), !dbg !7823
  call void @test_buffer(), !dbg !7823
  br label %bb1, !dbg !7823

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !7823
  br label %bb2, !dbg !7823

bb2:                                              ; preds = %bb1
  ret void, !dbg !7824
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_buffer() unnamed_addr #2 !dbg !7825 {
start:
  %right_val.dbg.spill5 = alloca [1 x i32]*, align 8
  %left_val.dbg.spill3 = alloca [1 x i32]*, align 8
  %right_val.dbg.spill = alloca [1 x i32]*, align 8
  %left_val.dbg.spill = alloca [1 x i32]*, align 8
  %_47 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_31 = alloca { i32*, i32* }, align 8
  %_30 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_14 = alloca { i32*, i32* }, align 8
  %expected_buffer = alloca [1 x i32], align 4
  %rust_buffer = alloca [1 x i32], align 4
  %buffer = alloca [1 x i32], align 4
  call void @llvm.dbg.declare(metadata [1 x i32]* %buffer, metadata !7827, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata [1 x i32]* %rust_buffer, metadata !7829, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.declare(metadata [1 x i32]* %expected_buffer, metadata !7831, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !7837, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !7844, metadata !DIExpression()), !dbg !7851
  %0 = getelementptr inbounds [1 x i32], [1 x i32]* %buffer, i64 0, i64 0, !dbg !7852
  %1 = bitcast i32* %0 to i8*, !dbg !7852
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 4, i1 false), !dbg !7852
  %2 = getelementptr inbounds [1 x i32], [1 x i32]* %rust_buffer, i64 0, i64 0, !dbg !7853
  %3 = bitcast i32* %2 to i8*, !dbg !7853
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 4, i1 false), !dbg !7853
  %4 = getelementptr inbounds [1 x i32], [1 x i32]* %expected_buffer, i64 0, i64 0, !dbg !7854
  store i32 1, i32* %4, align 4, !dbg !7854
  %_7.0 = bitcast [1 x i32]* %buffer to [0 x i32]*, !dbg !7855
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_7.0, i64 1), !dbg !7855
  br label %bb1, !dbg !7855

bb1:                                              ; preds = %start
  call void @entry2(i32 1, i32* %_6), !dbg !7856
  br label %bb2, !dbg !7856

bb2:                                              ; preds = %bb1
  %_12.0 = bitcast [1 x i32]* %rust_buffer to [0 x i32]*, !dbg !7857
; call core::slice::<impl [T]>::as_mut_ptr
  %_11 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_12.0, i64 1), !dbg !7857
  br label %bb3, !dbg !7857

bb3:                                              ; preds = %bb2
  call void @rust_entry2(i32 1, i32* %_11), !dbg !7858
  br label %bb4, !dbg !7858

bb4:                                              ; preds = %bb3
  %5 = bitcast { i32*, i32* }* %_14 to [1 x i32]**, !dbg !7859
  store [1 x i32]* %buffer, [1 x i32]** %5, align 8, !dbg !7859
  %6 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !7859
  %7 = bitcast i32** %6 to [1 x i32]**, !dbg !7859
  store [1 x i32]* %rust_buffer, [1 x i32]** %7, align 8, !dbg !7859
  %8 = bitcast { i32*, i32* }* %_14 to [1 x i32]**, !dbg !7859
  %left_val = load [1 x i32]*, [1 x i32]** %8, align 8, !dbg !7859, !nonnull !23, !align !456, !noundef !23
  store [1 x i32]* %left_val, [1 x i32]** %left_val.dbg.spill, align 8, !dbg !7859
  call void @llvm.dbg.declare(metadata [1 x i32]** %left_val.dbg.spill, metadata !7833, metadata !DIExpression()), !dbg !7860
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !7859
  %10 = bitcast i32** %9 to [1 x i32]**, !dbg !7859
  %right_val = load [1 x i32]*, [1 x i32]** %10, align 8, !dbg !7859, !nonnull !23, !align !456, !noundef !23
  store [1 x i32]* %right_val, [1 x i32]** %right_val.dbg.spill, align 8, !dbg !7859
  call void @llvm.dbg.declare(metadata [1 x i32]** %right_val.dbg.spill, metadata !7836, metadata !DIExpression()), !dbg !7860
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_20 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h62fa740c32e6ba88E"([1 x i32]* align 4 %left_val, [1 x i32]* align 4 %right_val), !dbg !7860
  br label %bb5, !dbg !7860

bb5:                                              ; preds = %bb4
  %_19 = xor i1 %_20, true, !dbg !7860
  br i1 %_19, label %bb6, label %bb7, !dbg !7860

bb7:                                              ; preds = %bb5
  %11 = bitcast { i32*, i32* }* %_31 to [1 x i32]**, !dbg !7861
  store [1 x i32]* %buffer, [1 x i32]** %11, align 8, !dbg !7861
  %12 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !7861
  %13 = bitcast i32** %12 to [1 x i32]**, !dbg !7861
  store [1 x i32]* %expected_buffer, [1 x i32]** %13, align 8, !dbg !7861
  %14 = bitcast { i32*, i32* }* %_31 to [1 x i32]**, !dbg !7861
  %left_val2 = load [1 x i32]*, [1 x i32]** %14, align 8, !dbg !7861, !nonnull !23, !align !456, !noundef !23
  store [1 x i32]* %left_val2, [1 x i32]** %left_val.dbg.spill3, align 8, !dbg !7861
  call void @llvm.dbg.declare(metadata [1 x i32]** %left_val.dbg.spill3, metadata !7840, metadata !DIExpression()), !dbg !7862
  %15 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !7861
  %16 = bitcast i32** %15 to [1 x i32]**, !dbg !7861
  %right_val4 = load [1 x i32]*, [1 x i32]** %16, align 8, !dbg !7861, !nonnull !23, !align !456, !noundef !23
  store [1 x i32]* %right_val4, [1 x i32]** %right_val.dbg.spill5, align 8, !dbg !7861
  call void @llvm.dbg.declare(metadata [1 x i32]** %right_val.dbg.spill5, metadata !7843, metadata !DIExpression()), !dbg !7862
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_37 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h62fa740c32e6ba88E"([1 x i32]* align 4 %left_val2, [1 x i32]* align 4 %right_val4), !dbg !7862
  br label %bb8, !dbg !7862

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !7860
  %17 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_30 to {}**, !dbg !7850
  store {}* null, {}** %17, align 8, !dbg !7850
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hb3ff0a3fe01f7f1eE(i8 0, [1 x i32]* align 4 %left_val, [1 x i32]* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_30, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc789 to %"core::panic::location::Location"*)) #16, !dbg !7850
  unreachable, !dbg !7850

bb8:                                              ; preds = %bb7
  %_36 = xor i1 %_37, true, !dbg !7862
  br i1 %_36, label %bb9, label %bb10, !dbg !7862

bb10:                                             ; preds = %bb8
  ret void, !dbg !7863

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind1, align 1, !dbg !7862
  %18 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_47 to {}**, !dbg !7851
  store {}* null, {}** %18, align 8, !dbg !7851
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hb3ff0a3fe01f7f1eE(i8 0, [1 x i32]* align 4 %left_val2, [1 x i32]* align 4 %right_val4, %"core::option::Option<core::fmt::Arguments>"* %_47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc791 to %"core::panic::location::Location"*)) #16, !dbg !7851
  unreachable, !dbg !7851
}

; misc_tests::test_uninitialized::test_types::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests18test_uninitialized10test_types28_$u7b$$u7b$closure$u7d$$u7d$17h62f328f61d4fc5a7E"(%"[closure@src/test_uninitialized.rs:26:1: 39:2]"* align 1 %_1) unnamed_addr #0 !dbg !7864 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_uninitialized.rs:26:1: 39:2]"*, align 8
  store %"[closure@src/test_uninitialized.rs:26:1: 39:2]"* %_1, %"[closure@src/test_uninitialized.rs:26:1: 39:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_uninitialized.rs:26:1: 39:2]"** %_1.dbg.spill, metadata !7869, metadata !DIExpression()), !dbg !7870
  call void @test_types(), !dbg !7870
  br label %bb1, !dbg !7870

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !7870
  br label %bb2, !dbg !7870

bb2:                                              ; preds = %bb1
  ret void, !dbg !7871
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_types() unnamed_addr #2 !dbg !7872 {
start:
  %right_val.dbg.spill8 = alloca i32*, align 8
  %left_val.dbg.spill6 = alloca i32*, align 8
  %right_val.dbg.spill4 = alloca i32*, align 8
  %left_val.dbg.spill2 = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_13 = alloca { i32*, i32* }, align 8
  %_7 = alloca { i32*, i32* }, align 8
  %_1 = alloca { i32*, i32* }, align 8
  %0 = bitcast { i32*, i32* }* %_1 to i32**, !dbg !7896
  store i32* bitcast (<{ [4 x i8] }>* @alloc478 to i32*), i32** %0, align 8, !dbg !7896
  %1 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_1, i32 0, i32 1, !dbg !7896
  store i32* bitcast (<{ [4 x i8] }>* @alloc478 to i32*), i32** %1, align 8, !dbg !7896
  %2 = bitcast { i32*, i32* }* %_1 to i32**, !dbg !7896
  %left_val = load i32*, i32** %2, align 8, !dbg !7896, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !7896
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !7874, metadata !DIExpression()), !dbg !7897
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_1, i32 0, i32 1, !dbg !7896
  %right_val = load i32*, i32** %3, align 8, !dbg !7896, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !7896
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !7878, metadata !DIExpression()), !dbg !7897
  %4 = bitcast { i32*, i32* }* %_7 to i32**, !dbg !7898
  store i32* bitcast (<{ [4 x i8] }>* @alloc484 to i32*), i32** %4, align 8, !dbg !7898
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_7, i32 0, i32 1, !dbg !7898
  store i32* bitcast (<{ [4 x i8] }>* @alloc484 to i32*), i32** %5, align 8, !dbg !7898
  %6 = bitcast { i32*, i32* }* %_7 to i32**, !dbg !7898
  %left_val1 = load i32*, i32** %6, align 8, !dbg !7898, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val1, i32** %left_val.dbg.spill2, align 8, !dbg !7898
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill2, metadata !7882, metadata !DIExpression()), !dbg !7899
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_7, i32 0, i32 1, !dbg !7898
  %right_val3 = load i32*, i32** %7, align 8, !dbg !7898, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val3, i32** %right_val.dbg.spill4, align 8, !dbg !7898
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill4, metadata !7885, metadata !DIExpression()), !dbg !7899
  %8 = bitcast { i32*, i32* }* %_13 to i32**, !dbg !7900
  store i32* bitcast (<{ [4 x i8] }>* @alloc281 to i32*), i32** %8, align 8, !dbg !7900
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1, !dbg !7900
  store i32* bitcast (<{ [4 x i8] }>* @alloc281 to i32*), i32** %9, align 8, !dbg !7900
  %10 = bitcast { i32*, i32* }* %_13 to i32**, !dbg !7900
  %left_val5 = load i32*, i32** %10, align 8, !dbg !7900, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val5, i32** %left_val.dbg.spill6, align 8, !dbg !7900
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill6, metadata !7889, metadata !DIExpression()), !dbg !7901
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1, !dbg !7900
  %right_val7 = load i32*, i32** %11, align 8, !dbg !7900, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val7, i32** %right_val.dbg.spill8, align 8, !dbg !7900
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill8, metadata !7892, metadata !DIExpression()), !dbg !7901
  ret void, !dbg !7902
}

; misc_tests::test_shadowing::test_twice::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests14test_shadowing10test_twice28_$u7b$$u7b$closure$u7d$$u7d$17h91511127ca1da4aeE"(%"[closure@src/test_shadowing.rs:14:1: 21:2]"* align 1 %_1) unnamed_addr #0 !dbg !7903 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_shadowing.rs:14:1: 21:2]"*, align 8
  store %"[closure@src/test_shadowing.rs:14:1: 21:2]"* %_1, %"[closure@src/test_shadowing.rs:14:1: 21:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_shadowing.rs:14:1: 21:2]"** %_1.dbg.spill, metadata !7909, metadata !DIExpression()), !dbg !7910
  call void @test_twice(), !dbg !7910
  br label %bb1, !dbg !7910

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !7910
  br label %bb2, !dbg !7910

bb2:                                              ; preds = %bb1
  ret void, !dbg !7911
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_twice() unnamed_addr #2 !dbg !7912 {
start:
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %i.dbg.spill = alloca i32, align 4
  %_29 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_13 = alloca { i32*, i32* }, align 8
  %rust_double = alloca i32, align 4
  %double = alloca i32, align 4
  %_4 = alloca { i32, i32 }, align 4
  %iter = alloca { i32, i32 }, align 4
  %_2 = alloca { i32, i32 }, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %iter, metadata !7914, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.declare(metadata i32* %double, metadata !7918, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.declare(metadata i32* %rust_double, metadata !7920, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !7926, metadata !DIExpression()), !dbg !7932
  %0 = bitcast { i32, i32 }* %_2 to i32*, !dbg !7933
  store i32 0, i32* %0, align 4, !dbg !7933
  %1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1, !dbg !7933
  store i32 20, i32* %1, align 4, !dbg !7933
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 0, !dbg !7933
  %3 = load i32, i32* %2, align 4, !dbg !7933
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_2, i32 0, i32 1, !dbg !7933
  %5 = load i32, i32* %4, align 4, !dbg !7933
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %6 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7464d1bc1bb9736aE"(i32 %3, i32 %5), !dbg !7933
  %_1.0 = extractvalue { i32, i32 } %6, 0, !dbg !7933
  %_1.1 = extractvalue { i32, i32 } %6, 1, !dbg !7933
  br label %bb1, !dbg !7933

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 0, !dbg !7933
  store i32 %_1.0, i32* %7, align 4, !dbg !7933
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %iter, i32 0, i32 1, !dbg !7933
  store i32 %_1.1, i32* %8, align 4, !dbg !7933
  br label %bb2, !dbg !7934

bb2:                                              ; preds = %bb8, %bb1
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %9 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h6fb1179d75a4beb0E"({ i32, i32 }* align 4 %iter), !dbg !7929
  store { i32, i32 } %9, { i32, i32 }* %_4, align 4, !dbg !7929
  br label %bb3, !dbg !7929

bb3:                                              ; preds = %bb2
  %10 = bitcast { i32, i32 }* %_4 to i32*, !dbg !7929
  %11 = load i32, i32* %10, align 4, !dbg !7929, !range !5806, !noundef !23
  %_7 = zext i32 %11 to i64, !dbg !7929
  switch i64 %_7, label %bb5 [
    i64 0, label %bb6
    i64 1, label %bb4
  ], !dbg !7929

bb5:                                              ; preds = %bb3
  unreachable, !dbg !7929

bb6:                                              ; preds = %bb3
  ret void, !dbg !7935

bb4:                                              ; preds = %bb3
  %12 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_4, i32 0, i32 1, !dbg !7936
  %i = load i32, i32* %12, align 4, !dbg !7936
  store i32 %i, i32* %i.dbg.spill, align 4, !dbg !7936
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !7916, metadata !DIExpression()), !dbg !7937
  %13 = call i32 @twice(i32 %i), !dbg !7938
  store i32 %13, i32* %double, align 4, !dbg !7938
  br label %bb7, !dbg !7938

bb7:                                              ; preds = %bb4
  %14 = call i32 @rust_twice(i32 %i), !dbg !7939
  store i32 %14, i32* %rust_double, align 4, !dbg !7939
  br label %bb8, !dbg !7939

bb8:                                              ; preds = %bb7
  %15 = bitcast { i32*, i32* }* %_13 to i32**, !dbg !7940
  store i32* %double, i32** %15, align 8, !dbg !7940
  %16 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1, !dbg !7940
  store i32* %rust_double, i32** %16, align 8, !dbg !7940
  %17 = bitcast { i32*, i32* }* %_13 to i32**, !dbg !7940
  %left_val = load i32*, i32** %17, align 8, !dbg !7940, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !7940
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !7922, metadata !DIExpression()), !dbg !7941
  %18 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1, !dbg !7940
  %right_val = load i32*, i32** %18, align 8, !dbg !7940, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !7940
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !7925, metadata !DIExpression()), !dbg !7941
  %_20 = load i32, i32* %left_val, align 4, !dbg !7941
  %_21 = load i32, i32* %right_val, align 4, !dbg !7941
  %_19 = icmp eq i32 %_20, %_21, !dbg !7941
  %_18 = xor i1 %_19, true, !dbg !7941
  br i1 %_18, label %bb9, label %bb2, !dbg !7941

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind, align 1, !dbg !7941
  %19 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_29 to {}**, !dbg !7932
  store {}* null, {}** %19, align 8, !dbg !7932
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_29, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc793 to %"core::panic::location::Location"*)) #16, !dbg !7932
  unreachable, !dbg !7932
}

; misc_tests::test_shadowing::test_shadowing::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests14test_shadowing14test_shadowing28_$u7b$$u7b$closure$u7d$$u7d$17h21f84b91f0cde026E"(%"[closure@src/test_shadowing.rs:24:1: 36:2]"* align 1 %_1) unnamed_addr #0 !dbg !7942 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_shadowing.rs:24:1: 36:2]"*, align 8
  store %"[closure@src/test_shadowing.rs:24:1: 36:2]"* %_1, %"[closure@src/test_shadowing.rs:24:1: 36:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_shadowing.rs:24:1: 36:2]"** %_1.dbg.spill, metadata !7947, metadata !DIExpression()), !dbg !7948
  call void @test_shadowing(), !dbg !7948
  br label %bb1, !dbg !7948

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !7948
  br label %bb2, !dbg !7948

bb2:                                              ; preds = %bb1
  ret void, !dbg !7949
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_shadowing() unnamed_addr #2 !dbg !7950 {
start:
  %right_val.dbg.spill5 = alloca [10 x i32]*, align 8
  %left_val.dbg.spill3 = alloca [10 x i32]*, align 8
  %right_val.dbg.spill = alloca [10 x i32]*, align 8
  %left_val.dbg.spill = alloca [10 x i32]*, align 8
  %_47 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_31 = alloca { i32*, i32* }, align 8
  %_30 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_14 = alloca { i32*, i32* }, align 8
  %expected_buffer = alloca [10 x i32], align 4
  %rust_buffer = alloca [10 x i32], align 4
  %buffer = alloca [10 x i32], align 4
  call void @llvm.dbg.declare(metadata [10 x i32]* %buffer, metadata !7952, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.declare(metadata [10 x i32]* %rust_buffer, metadata !7954, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.declare(metadata [10 x i32]* %expected_buffer, metadata !7956, metadata !DIExpression()), !dbg !7974
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !7962, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !7969, metadata !DIExpression()), !dbg !7976
  %0 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 0, !dbg !7977
  %1 = bitcast i32* %0 to i8*, !dbg !7977
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 40, i1 false), !dbg !7977
  %2 = getelementptr inbounds [10 x i32], [10 x i32]* %rust_buffer, i64 0, i64 0, !dbg !7978
  %3 = bitcast i32* %2 to i8*, !dbg !7978
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 40, i1 false), !dbg !7978
  %4 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 0, !dbg !7979
  store i32 10, i32* %4, align 4, !dbg !7979
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 1, !dbg !7979
  store i32 6, i32* %5, align 4, !dbg !7979
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 2, !dbg !7979
  store i32 12, i32* %6, align 4, !dbg !7979
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 3, !dbg !7979
  store i32 18, i32* %7, align 4, !dbg !7979
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 4, !dbg !7979
  store i32 24, i32* %8, align 4, !dbg !7979
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 5, !dbg !7979
  store i32 30, i32* %9, align 4, !dbg !7979
  %10 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 6, !dbg !7979
  store i32 36, i32* %10, align 4, !dbg !7979
  %11 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 7, !dbg !7979
  store i32 42, i32* %11, align 4, !dbg !7979
  %12 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 8, !dbg !7979
  store i32 48, i32* %12, align 4, !dbg !7979
  %13 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 9, !dbg !7979
  store i32 54, i32* %13, align 4, !dbg !7979
  %_7.0 = bitcast [10 x i32]* %buffer to [0 x i32]*, !dbg !7980
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_7.0, i64 10), !dbg !7980
  br label %bb1, !dbg !7980

bb1:                                              ; preds = %start
  call void @shadow(i32 10, i32* %_6), !dbg !7981
  br label %bb2, !dbg !7981

bb2:                                              ; preds = %bb1
  %_12.0 = bitcast [10 x i32]* %rust_buffer to [0 x i32]*, !dbg !7982
; call core::slice::<impl [T]>::as_mut_ptr
  %_11 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_12.0, i64 10), !dbg !7982
  br label %bb3, !dbg !7982

bb3:                                              ; preds = %bb2
  call void @rust_shadow(i32 10, i32* %_11), !dbg !7983
  br label %bb4, !dbg !7983

bb4:                                              ; preds = %bb3
  %14 = bitcast { i32*, i32* }* %_14 to [10 x i32]**, !dbg !7984
  store [10 x i32]* %buffer, [10 x i32]** %14, align 8, !dbg !7984
  %15 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !7984
  %16 = bitcast i32** %15 to [10 x i32]**, !dbg !7984
  store [10 x i32]* %rust_buffer, [10 x i32]** %16, align 8, !dbg !7984
  %17 = bitcast { i32*, i32* }* %_14 to [10 x i32]**, !dbg !7984
  %left_val = load [10 x i32]*, [10 x i32]** %17, align 8, !dbg !7984, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %left_val, [10 x i32]** %left_val.dbg.spill, align 8, !dbg !7984
  call void @llvm.dbg.declare(metadata [10 x i32]** %left_val.dbg.spill, metadata !7958, metadata !DIExpression()), !dbg !7985
  %18 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !7984
  %19 = bitcast i32** %18 to [10 x i32]**, !dbg !7984
  %right_val = load [10 x i32]*, [10 x i32]** %19, align 8, !dbg !7984, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %right_val, [10 x i32]** %right_val.dbg.spill, align 8, !dbg !7984
  call void @llvm.dbg.declare(metadata [10 x i32]** %right_val.dbg.spill, metadata !7961, metadata !DIExpression()), !dbg !7985
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_20 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h4b48ce01a5ecb68eE"([10 x i32]* align 4 %left_val, [10 x i32]* align 4 %right_val), !dbg !7985
  br label %bb5, !dbg !7985

bb5:                                              ; preds = %bb4
  %_19 = xor i1 %_20, true, !dbg !7985
  br i1 %_19, label %bb6, label %bb7, !dbg !7985

bb7:                                              ; preds = %bb5
  %20 = bitcast { i32*, i32* }* %_31 to [10 x i32]**, !dbg !7986
  store [10 x i32]* %buffer, [10 x i32]** %20, align 8, !dbg !7986
  %21 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !7986
  %22 = bitcast i32** %21 to [10 x i32]**, !dbg !7986
  store [10 x i32]* %expected_buffer, [10 x i32]** %22, align 8, !dbg !7986
  %23 = bitcast { i32*, i32* }* %_31 to [10 x i32]**, !dbg !7986
  %left_val2 = load [10 x i32]*, [10 x i32]** %23, align 8, !dbg !7986, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %left_val2, [10 x i32]** %left_val.dbg.spill3, align 8, !dbg !7986
  call void @llvm.dbg.declare(metadata [10 x i32]** %left_val.dbg.spill3, metadata !7965, metadata !DIExpression()), !dbg !7987
  %24 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !7986
  %25 = bitcast i32** %24 to [10 x i32]**, !dbg !7986
  %right_val4 = load [10 x i32]*, [10 x i32]** %25, align 8, !dbg !7986, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %right_val4, [10 x i32]** %right_val.dbg.spill5, align 8, !dbg !7986
  call void @llvm.dbg.declare(metadata [10 x i32]** %right_val.dbg.spill5, metadata !7968, metadata !DIExpression()), !dbg !7987
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_37 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h4b48ce01a5ecb68eE"([10 x i32]* align 4 %left_val2, [10 x i32]* align 4 %right_val4), !dbg !7987
  br label %bb8, !dbg !7987

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !7985
  %26 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_30 to {}**, !dbg !7975
  store {}* null, {}** %26, align 8, !dbg !7975
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h102e7dff1d1804d2E(i8 0, [10 x i32]* align 4 %left_val, [10 x i32]* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_30, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc795 to %"core::panic::location::Location"*)) #16, !dbg !7975
  unreachable, !dbg !7975

bb8:                                              ; preds = %bb7
  %_36 = xor i1 %_37, true, !dbg !7987
  br i1 %_36, label %bb9, label %bb10, !dbg !7987

bb10:                                             ; preds = %bb8
  ret void, !dbg !7988

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind1, align 1, !dbg !7987
  %27 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_47 to {}**, !dbg !7976
  store {}* null, {}** %27, align 8, !dbg !7976
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h102e7dff1d1804d2E(i8 0, [10 x i32]* align 4 %left_val2, [10 x i32]* align 4 %right_val4, %"core::option::Option<core::fmt::Arguments>"* %_47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc797 to %"core::panic::location::Location"*)) #16, !dbg !7976
  unreachable, !dbg !7976
}

; misc_tests::test_typedef::test_typedef::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests12test_typedef12test_typedef28_$u7b$$u7b$closure$u7d$$u7d$17hd7b10812bb99a067E"(%"[closure@src/test_typedef.rs:11:1: 27:2]"* align 1 %_1) unnamed_addr #0 !dbg !7989 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_typedef.rs:11:1: 27:2]"*, align 8
  store %"[closure@src/test_typedef.rs:11:1: 27:2]"* %_1, %"[closure@src/test_typedef.rs:11:1: 27:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_typedef.rs:11:1: 27:2]"** %_1.dbg.spill, metadata !7995, metadata !DIExpression()), !dbg !7996
  call void @test_typedef(), !dbg !7996
  br label %bb1, !dbg !7996

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !7996
  br label %bb2, !dbg !7996

bb2:                                              ; preds = %bb1
  ret void, !dbg !7997
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_typedef() unnamed_addr #2 !dbg !7998 {
start:
  %right_val.dbg.spill15 = alloca i32*, align 8
  %left_val.dbg.spill13 = alloca i32*, align 8
  %cptr_var.dbg.spill = alloca i32*, align 8
  %rptr_var.dbg.spill = alloca i32*, align 8
  %right_val.dbg.spill11 = alloca i32*, align 8
  %left_val.dbg.spill9 = alloca i32*, align 8
  %right_val.dbg.spill7 = alloca i32*, align 8
  %left_val.dbg.spill5 = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_76 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind3 = alloca i8, align 1
  %_60 = alloca { i32*, i32* }, align 8
  %_55 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind2 = alloca i8, align 1
  %_39 = alloca { i32*, i32* }, align 8
  %c_var = alloca i32, align 4
  %rust_var = alloca i32, align 4
  %_36 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_20 = alloca { i32*, i32* }, align 8
  %_19 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_3 = alloca { i32*, i32* }, align 8
  %rust_ret = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8000, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.declare(metadata i32* %rust_ret, metadata !8002, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !8008, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !8015, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.declare(metadata i32* %rust_var, metadata !8018, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.declare(metadata i32* %c_var, metadata !8020, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.declare(metadata i8* %kind2, metadata !8026, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.declare(metadata i8* %kind3, metadata !8037, metadata !DIExpression()), !dbg !8047
  %0 = call i32 @entry(), !dbg !8048
  store i32 %0, i32* %ret, align 4, !dbg !8048
  br label %bb1, !dbg !8048

bb1:                                              ; preds = %start
  %1 = call i32 @rust_entry(), !dbg !8049
  store i32 %1, i32* %rust_ret, align 4, !dbg !8049
  br label %bb2, !dbg !8049

bb2:                                              ; preds = %bb1
  %2 = bitcast { i32*, i32* }* %_3 to i32**, !dbg !8050
  store i32* %ret, i32** %2, align 8, !dbg !8050
  %3 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_3, i32 0, i32 1, !dbg !8050
  store i32* bitcast (<{ [4 x i8] }>* @alloc344 to i32*), i32** %3, align 8, !dbg !8050
  %4 = bitcast { i32*, i32* }* %_3 to i32**, !dbg !8050
  %left_val = load i32*, i32** %4, align 8, !dbg !8050, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !8050
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !8004, metadata !DIExpression()), !dbg !8051
  %5 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_3, i32 0, i32 1, !dbg !8050
  %right_val = load i32*, i32** %5, align 8, !dbg !8050, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !8050
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !8007, metadata !DIExpression()), !dbg !8051
  %_10 = load i32, i32* %left_val, align 4, !dbg !8051
  %_9 = icmp eq i32 %_10, 0, !dbg !8051
  %_8 = xor i1 %_9, true, !dbg !8051
  br i1 %_8, label %bb3, label %bb4, !dbg !8051

bb4:                                              ; preds = %bb2
  %6 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !8052
  store i32* %rust_ret, i32** %6, align 8, !dbg !8052
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !8052
  store i32* bitcast (<{ [4 x i8] }>* @alloc344 to i32*), i32** %7, align 8, !dbg !8052
  %8 = bitcast { i32*, i32* }* %_20 to i32**, !dbg !8052
  %left_val4 = load i32*, i32** %8, align 8, !dbg !8052, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val4, i32** %left_val.dbg.spill5, align 8, !dbg !8052
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill5, metadata !8011, metadata !DIExpression()), !dbg !8053
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_20, i32 0, i32 1, !dbg !8052
  %right_val6 = load i32*, i32** %9, align 8, !dbg !8052, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val6, i32** %right_val.dbg.spill7, align 8, !dbg !8052
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill7, metadata !8014, metadata !DIExpression()), !dbg !8053
  %_27 = load i32, i32* %left_val4, align 4, !dbg !8053
  %_26 = icmp eq i32 %_27, 0, !dbg !8053
  %_25 = xor i1 %_26, true, !dbg !8053
  br i1 %_25, label %bb5, label %bb6, !dbg !8053

bb3:                                              ; preds = %bb2
  store i8 0, i8* %kind, align 1, !dbg !8051
  %10 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_19 to {}**, !dbg !8042
  store {}* null, {}** %10, align 8, !dbg !8042
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_19, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc799 to %"core::panic::location::Location"*)) #16, !dbg !8042
  unreachable, !dbg !8042

bb6:                                              ; preds = %bb4
  store i32 5, i32* %rust_var, align 4, !dbg !8054
  store i32 5, i32* %c_var, align 4, !dbg !8055
  %11 = bitcast { i32*, i32* }* %_39 to i32**, !dbg !8056
  store i32* %rust_var, i32** %11, align 8, !dbg !8056
  %12 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_39, i32 0, i32 1, !dbg !8056
  store i32* %c_var, i32** %12, align 8, !dbg !8056
  %13 = bitcast { i32*, i32* }* %_39 to i32**, !dbg !8056
  %left_val8 = load i32*, i32** %13, align 8, !dbg !8056, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val8, i32** %left_val.dbg.spill9, align 8, !dbg !8056
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill9, metadata !8022, metadata !DIExpression()), !dbg !8057
  %14 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_39, i32 0, i32 1, !dbg !8056
  %right_val10 = load i32*, i32** %14, align 8, !dbg !8056, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val10, i32** %right_val.dbg.spill11, align 8, !dbg !8056
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill11, metadata !8025, metadata !DIExpression()), !dbg !8057
  %_46 = load i32, i32* %left_val8, align 4, !dbg !8057
  %_47 = load i32, i32* %right_val10, align 4, !dbg !8057
  %_45 = icmp eq i32 %_46, %_47, !dbg !8057
  %_44 = xor i1 %_45, true, !dbg !8057
  br i1 %_44, label %bb7, label %bb8, !dbg !8057

bb5:                                              ; preds = %bb4
  store i8 0, i8* %kind1, align 1, !dbg !8053
  %15 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_36 to {}**, !dbg !8043
  store {}* null, {}** %15, align 8, !dbg !8043
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val4, i32* align 4 %right_val6, %"core::option::Option<core::fmt::Arguments>"* %_36, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc801 to %"core::panic::location::Location"*)) #16, !dbg !8043
  unreachable, !dbg !8043

bb8:                                              ; preds = %bb6
  store i32* %rust_var, i32** %rptr_var.dbg.spill, align 8, !dbg !8058
  call void @llvm.dbg.declare(metadata i32** %rptr_var.dbg.spill, metadata !8029, metadata !DIExpression()), !dbg !8059
  store i32* %c_var, i32** %cptr_var.dbg.spill, align 8, !dbg !8060
  call void @llvm.dbg.declare(metadata i32** %cptr_var.dbg.spill, metadata !8031, metadata !DIExpression()), !dbg !8061
  %16 = bitcast { i32*, i32* }* %_60 to i32**, !dbg !8062
  store i32* %rust_var, i32** %16, align 8, !dbg !8062
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_60, i32 0, i32 1, !dbg !8062
  store i32* %c_var, i32** %17, align 8, !dbg !8062
  %18 = bitcast { i32*, i32* }* %_60 to i32**, !dbg !8062
  %left_val12 = load i32*, i32** %18, align 8, !dbg !8062, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val12, i32** %left_val.dbg.spill13, align 8, !dbg !8062
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill13, metadata !8033, metadata !DIExpression()), !dbg !8063
  %19 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_60, i32 0, i32 1, !dbg !8062
  %right_val14 = load i32*, i32** %19, align 8, !dbg !8062, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val14, i32** %right_val.dbg.spill15, align 8, !dbg !8062
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill15, metadata !8036, metadata !DIExpression()), !dbg !8063
  %_67 = load i32, i32* %left_val12, align 4, !dbg !8063
  %_68 = load i32, i32* %right_val14, align 4, !dbg !8063
  %_66 = icmp eq i32 %_67, %_68, !dbg !8063
  %_65 = xor i1 %_66, true, !dbg !8063
  br i1 %_65, label %bb9, label %bb10, !dbg !8063

bb7:                                              ; preds = %bb6
  store i8 0, i8* %kind2, align 1, !dbg !8057
  %20 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_55 to {}**, !dbg !8046
  store {}* null, {}** %20, align 8, !dbg !8046
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val8, i32* align 4 %right_val10, %"core::option::Option<core::fmt::Arguments>"* %_55, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc803 to %"core::panic::location::Location"*)) #16, !dbg !8046
  unreachable, !dbg !8046

bb10:                                             ; preds = %bb8
  ret void, !dbg !8064

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind3, align 1, !dbg !8063
  %21 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_76 to {}**, !dbg !8047
  store {}* null, {}** %21, align 8, !dbg !8047
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val12, i32* align 4 %right_val14, %"core::option::Option<core::fmt::Arguments>"* %_76, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc805 to %"core::panic::location::Location"*)) #16, !dbg !8047
  unreachable, !dbg !8047
}

; misc_tests::test_memory::test_malloc::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests11test_memory11test_malloc28_$u7b$$u7b$closure$u7d$$u7d$17h4c6d6ecf073736baE"(%"[closure@src/test_memory.rs:16:1: 28:2]"* align 1 %_1) unnamed_addr #0 !dbg !8065 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_memory.rs:16:1: 28:2]"*, align 8
  store %"[closure@src/test_memory.rs:16:1: 28:2]"* %_1, %"[closure@src/test_memory.rs:16:1: 28:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_memory.rs:16:1: 28:2]"** %_1.dbg.spill, metadata !8071, metadata !DIExpression()), !dbg !8072
  call void @test_malloc(), !dbg !8072
  br label %bb1, !dbg !8072

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !8072
  br label %bb2, !dbg !8072

bb2:                                              ; preds = %bb1
  ret void, !dbg !8073
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_malloc() unnamed_addr #2 !dbg !8074 {
start:
  %right_val.dbg.spill5 = alloca [3 x i32]*, align 8
  %left_val.dbg.spill3 = alloca [3 x i32]*, align 8
  %right_val.dbg.spill = alloca [3 x i32]*, align 8
  %left_val.dbg.spill = alloca [3 x i32]*, align 8
  %_47 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_31 = alloca { i32*, i32* }, align 8
  %_30 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_14 = alloca { i32*, i32* }, align 8
  %expected_buffer = alloca [3 x i32], align 4
  %rust_buffer = alloca [3 x i32], align 4
  %buffer = alloca [3 x i32], align 4
  call void @llvm.dbg.declare(metadata [3 x i32]* %buffer, metadata !8076, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.declare(metadata [3 x i32]* %rust_buffer, metadata !8078, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.declare(metadata [3 x i32]* %expected_buffer, metadata !8080, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !8086, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !8093, metadata !DIExpression()), !dbg !8100
  %0 = getelementptr inbounds [3 x i32], [3 x i32]* %buffer, i64 0, i64 0, !dbg !8101
  %1 = bitcast i32* %0 to i8*, !dbg !8101
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 12, i1 false), !dbg !8101
  %2 = getelementptr inbounds [3 x i32], [3 x i32]* %rust_buffer, i64 0, i64 0, !dbg !8102
  %3 = bitcast i32* %2 to i8*, !dbg !8102
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 12, i1 false), !dbg !8102
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* %expected_buffer, i64 0, i64 0, !dbg !8103
  store i32 34, i32* %4, align 4, !dbg !8103
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* %expected_buffer, i64 0, i64 1, !dbg !8103
  store i32 35, i32* %5, align 4, !dbg !8103
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* %expected_buffer, i64 0, i64 2, !dbg !8103
  store i32 36, i32* %6, align 4, !dbg !8103
  %_7.0 = bitcast [3 x i32]* %buffer to [0 x i32]*, !dbg !8104
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_7.0, i64 3), !dbg !8104
  br label %bb1, !dbg !8104

bb1:                                              ; preds = %start
  call void @malloc_test(i32 3, i32* %_6), !dbg !8105
  br label %bb2, !dbg !8105

bb2:                                              ; preds = %bb1
  %_12.0 = bitcast [3 x i32]* %rust_buffer to [0 x i32]*, !dbg !8106
; call core::slice::<impl [T]>::as_mut_ptr
  %_11 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_12.0, i64 3), !dbg !8106
  br label %bb3, !dbg !8106

bb3:                                              ; preds = %bb2
  call void @rust_malloc_test(i32 3, i32* %_11), !dbg !8107
  br label %bb4, !dbg !8107

bb4:                                              ; preds = %bb3
  %7 = bitcast { i32*, i32* }* %_14 to [3 x i32]**, !dbg !8108
  store [3 x i32]* %buffer, [3 x i32]** %7, align 8, !dbg !8108
  %8 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !8108
  %9 = bitcast i32** %8 to [3 x i32]**, !dbg !8108
  store [3 x i32]* %rust_buffer, [3 x i32]** %9, align 8, !dbg !8108
  %10 = bitcast { i32*, i32* }* %_14 to [3 x i32]**, !dbg !8108
  %left_val = load [3 x i32]*, [3 x i32]** %10, align 8, !dbg !8108, !nonnull !23, !align !456, !noundef !23
  store [3 x i32]* %left_val, [3 x i32]** %left_val.dbg.spill, align 8, !dbg !8108
  call void @llvm.dbg.declare(metadata [3 x i32]** %left_val.dbg.spill, metadata !8082, metadata !DIExpression()), !dbg !8109
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !8108
  %12 = bitcast i32** %11 to [3 x i32]**, !dbg !8108
  %right_val = load [3 x i32]*, [3 x i32]** %12, align 8, !dbg !8108, !nonnull !23, !align !456, !noundef !23
  store [3 x i32]* %right_val, [3 x i32]** %right_val.dbg.spill, align 8, !dbg !8108
  call void @llvm.dbg.declare(metadata [3 x i32]** %right_val.dbg.spill, metadata !8085, metadata !DIExpression()), !dbg !8109
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_20 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hc54fa0657217e2dcE"([3 x i32]* align 4 %left_val, [3 x i32]* align 4 %right_val), !dbg !8109
  br label %bb5, !dbg !8109

bb5:                                              ; preds = %bb4
  %_19 = xor i1 %_20, true, !dbg !8109
  br i1 %_19, label %bb6, label %bb7, !dbg !8109

bb7:                                              ; preds = %bb5
  %13 = bitcast { i32*, i32* }* %_31 to [3 x i32]**, !dbg !8110
  store [3 x i32]* %buffer, [3 x i32]** %13, align 8, !dbg !8110
  %14 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !8110
  %15 = bitcast i32** %14 to [3 x i32]**, !dbg !8110
  store [3 x i32]* %expected_buffer, [3 x i32]** %15, align 8, !dbg !8110
  %16 = bitcast { i32*, i32* }* %_31 to [3 x i32]**, !dbg !8110
  %left_val2 = load [3 x i32]*, [3 x i32]** %16, align 8, !dbg !8110, !nonnull !23, !align !456, !noundef !23
  store [3 x i32]* %left_val2, [3 x i32]** %left_val.dbg.spill3, align 8, !dbg !8110
  call void @llvm.dbg.declare(metadata [3 x i32]** %left_val.dbg.spill3, metadata !8089, metadata !DIExpression()), !dbg !8111
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !8110
  %18 = bitcast i32** %17 to [3 x i32]**, !dbg !8110
  %right_val4 = load [3 x i32]*, [3 x i32]** %18, align 8, !dbg !8110, !nonnull !23, !align !456, !noundef !23
  store [3 x i32]* %right_val4, [3 x i32]** %right_val.dbg.spill5, align 8, !dbg !8110
  call void @llvm.dbg.declare(metadata [3 x i32]** %right_val.dbg.spill5, metadata !8092, metadata !DIExpression()), !dbg !8111
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_37 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hc54fa0657217e2dcE"([3 x i32]* align 4 %left_val2, [3 x i32]* align 4 %right_val4), !dbg !8111
  br label %bb8, !dbg !8111

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !8109
  %19 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_30 to {}**, !dbg !8099
  store {}* null, {}** %19, align 8, !dbg !8099
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hab645ff57cceb137E(i8 0, [3 x i32]* align 4 %left_val, [3 x i32]* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_30, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc807 to %"core::panic::location::Location"*)) #16, !dbg !8099
  unreachable, !dbg !8099

bb8:                                              ; preds = %bb7
  %_36 = xor i1 %_37, true, !dbg !8111
  br i1 %_36, label %bb9, label %bb10, !dbg !8111

bb10:                                             ; preds = %bb8
  ret void, !dbg !8112

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind1, align 1, !dbg !8111
  %20 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_47 to {}**, !dbg !8100
  store {}* null, {}** %20, align 8, !dbg !8100
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hab645ff57cceb137E(i8 0, [3 x i32]* align 4 %left_val2, [3 x i32]* align 4 %right_val4, %"core::option::Option<core::fmt::Arguments>"* %_47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc809 to %"core::panic::location::Location"*)) #16, !dbg !8100
  unreachable, !dbg !8100
}

; misc_tests::test_memory::test_memset::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests11test_memory11test_memset28_$u7b$$u7b$closure$u7d$$u7d$17h57776ad2bc7b9083E"(%"[closure@src/test_memory.rs:31:1: 43:2]"* align 1 %_1) unnamed_addr #0 !dbg !8113 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_memory.rs:31:1: 43:2]"*, align 8
  store %"[closure@src/test_memory.rs:31:1: 43:2]"* %_1, %"[closure@src/test_memory.rs:31:1: 43:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_memory.rs:31:1: 43:2]"** %_1.dbg.spill, metadata !8118, metadata !DIExpression()), !dbg !8119
  call void @test_memset(), !dbg !8119
  br label %bb1, !dbg !8119

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !8119
  br label %bb2, !dbg !8119

bb2:                                              ; preds = %bb1
  ret void, !dbg !8120
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_memset() unnamed_addr #2 !dbg !8121 {
start:
  %right_val.dbg.spill5 = alloca [5 x i32]*, align 8
  %left_val.dbg.spill3 = alloca [5 x i32]*, align 8
  %right_val.dbg.spill = alloca [5 x i32]*, align 8
  %left_val.dbg.spill = alloca [5 x i32]*, align 8
  %_47 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_31 = alloca { i32*, i32* }, align 8
  %_30 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_14 = alloca { i32*, i32* }, align 8
  %expected_buffer = alloca [5 x i32], align 4
  %rust_buffer = alloca [5 x i32], align 4
  %buffer = alloca [5 x i32], align 4
  call void @llvm.dbg.declare(metadata [5 x i32]* %buffer, metadata !8123, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.declare(metadata [5 x i32]* %rust_buffer, metadata !8125, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.declare(metadata [5 x i32]* %expected_buffer, metadata !8127, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !8133, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !8140, metadata !DIExpression()), !dbg !8147
  %0 = getelementptr inbounds [5 x i32], [5 x i32]* %buffer, i64 0, i64 0, !dbg !8148
  %1 = bitcast i32* %0 to i8*, !dbg !8148
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 20, i1 false), !dbg !8148
  %2 = getelementptr inbounds [5 x i32], [5 x i32]* %rust_buffer, i64 0, i64 0, !dbg !8149
  %3 = bitcast i32* %2 to i8*, !dbg !8149
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 20, i1 false), !dbg !8149
  %4 = getelementptr inbounds [5 x i32], [5 x i32]* %expected_buffer, i64 0, i64 0, !dbg !8150
  %5 = getelementptr inbounds [5 x i32], [5 x i32]* %expected_buffer, i64 0, i64 0, !dbg !8150
  %6 = getelementptr inbounds [5 x i32], [5 x i32]* %expected_buffer, i64 0, i64 5, !dbg !8150
  br label %repeat_loop_header, !dbg !8150

repeat_loop_header:                               ; preds = %repeat_loop_body, %start
  %7 = phi i32* [ %5, %start ], [ %9, %repeat_loop_body ]
  %8 = icmp ne i32* %7, %6
  br i1 %8, label %repeat_loop_body, label %repeat_loop_next

repeat_loop_body:                                 ; preds = %repeat_loop_header
  store i32 16843009, i32* %7, align 4
  %9 = getelementptr inbounds i32, i32* %7, i64 1
  br label %repeat_loop_header

repeat_loop_next:                                 ; preds = %repeat_loop_header
  %_7.0 = bitcast [5 x i32]* %buffer to [0 x i32]*, !dbg !8151
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_7.0, i64 5), !dbg !8151
  br label %bb1, !dbg !8151

bb1:                                              ; preds = %repeat_loop_next
  call void @setmem(i32 5, i32* %_6), !dbg !8152
  br label %bb2, !dbg !8152

bb2:                                              ; preds = %bb1
  %_12.0 = bitcast [5 x i32]* %rust_buffer to [0 x i32]*, !dbg !8153
; call core::slice::<impl [T]>::as_mut_ptr
  %_11 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_12.0, i64 5), !dbg !8153
  br label %bb3, !dbg !8153

bb3:                                              ; preds = %bb2
  call void @rust_setmem(i32 5, i32* %_11), !dbg !8154
  br label %bb4, !dbg !8154

bb4:                                              ; preds = %bb3
  %10 = bitcast { i32*, i32* }* %_14 to [5 x i32]**, !dbg !8155
  store [5 x i32]* %buffer, [5 x i32]** %10, align 8, !dbg !8155
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !8155
  %12 = bitcast i32** %11 to [5 x i32]**, !dbg !8155
  store [5 x i32]* %rust_buffer, [5 x i32]** %12, align 8, !dbg !8155
  %13 = bitcast { i32*, i32* }* %_14 to [5 x i32]**, !dbg !8155
  %left_val = load [5 x i32]*, [5 x i32]** %13, align 8, !dbg !8155, !nonnull !23, !align !456, !noundef !23
  store [5 x i32]* %left_val, [5 x i32]** %left_val.dbg.spill, align 8, !dbg !8155
  call void @llvm.dbg.declare(metadata [5 x i32]** %left_val.dbg.spill, metadata !8129, metadata !DIExpression()), !dbg !8156
  %14 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_14, i32 0, i32 1, !dbg !8155
  %15 = bitcast i32** %14 to [5 x i32]**, !dbg !8155
  %right_val = load [5 x i32]*, [5 x i32]** %15, align 8, !dbg !8155, !nonnull !23, !align !456, !noundef !23
  store [5 x i32]* %right_val, [5 x i32]** %right_val.dbg.spill, align 8, !dbg !8155
  call void @llvm.dbg.declare(metadata [5 x i32]** %right_val.dbg.spill, metadata !8132, metadata !DIExpression()), !dbg !8156
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_20 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h57a6b9bad75e9263E"([5 x i32]* align 4 %left_val, [5 x i32]* align 4 %right_val), !dbg !8156
  br label %bb5, !dbg !8156

bb5:                                              ; preds = %bb4
  %_19 = xor i1 %_20, true, !dbg !8156
  br i1 %_19, label %bb6, label %bb7, !dbg !8156

bb7:                                              ; preds = %bb5
  %16 = bitcast { i32*, i32* }* %_31 to [5 x i32]**, !dbg !8157
  store [5 x i32]* %buffer, [5 x i32]** %16, align 8, !dbg !8157
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !8157
  %18 = bitcast i32** %17 to [5 x i32]**, !dbg !8157
  store [5 x i32]* %expected_buffer, [5 x i32]** %18, align 8, !dbg !8157
  %19 = bitcast { i32*, i32* }* %_31 to [5 x i32]**, !dbg !8157
  %left_val2 = load [5 x i32]*, [5 x i32]** %19, align 8, !dbg !8157, !nonnull !23, !align !456, !noundef !23
  store [5 x i32]* %left_val2, [5 x i32]** %left_val.dbg.spill3, align 8, !dbg !8157
  call void @llvm.dbg.declare(metadata [5 x i32]** %left_val.dbg.spill3, metadata !8136, metadata !DIExpression()), !dbg !8158
  %20 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_31, i32 0, i32 1, !dbg !8157
  %21 = bitcast i32** %20 to [5 x i32]**, !dbg !8157
  %right_val4 = load [5 x i32]*, [5 x i32]** %21, align 8, !dbg !8157, !nonnull !23, !align !456, !noundef !23
  store [5 x i32]* %right_val4, [5 x i32]** %right_val.dbg.spill5, align 8, !dbg !8157
  call void @llvm.dbg.declare(metadata [5 x i32]** %right_val.dbg.spill5, metadata !8139, metadata !DIExpression()), !dbg !8158
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_37 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h57a6b9bad75e9263E"([5 x i32]* align 4 %left_val2, [5 x i32]* align 4 %right_val4), !dbg !8158
  br label %bb8, !dbg !8158

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !8156
  %22 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_30 to {}**, !dbg !8146
  store {}* null, {}** %22, align 8, !dbg !8146
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hc1e236fb83b94d08E(i8 0, [5 x i32]* align 4 %left_val, [5 x i32]* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_30, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc811 to %"core::panic::location::Location"*)) #16, !dbg !8146
  unreachable, !dbg !8146

bb8:                                              ; preds = %bb7
  %_36 = xor i1 %_37, true, !dbg !8158
  br i1 %_36, label %bb9, label %bb10, !dbg !8158

bb10:                                             ; preds = %bb8
  ret void, !dbg !8159

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind1, align 1, !dbg !8158
  %23 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_47 to {}**, !dbg !8147
  store {}* null, {}** %23, align 8, !dbg !8147
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hc1e236fb83b94d08E(i8 0, [5 x i32]* align 4 %left_val2, [5 x i32]* align 4 %right_val4, %"core::option::Option<core::fmt::Arguments>"* %_47, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc813 to %"core::panic::location::Location"*)) #16, !dbg !8147
  unreachable, !dbg !8147
}

; misc_tests::test_lvalues::test_lvalue::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests12test_lvalues11test_lvalue28_$u7b$$u7b$closure$u7d$$u7d$17h5e512760a21da14cE"(%"[closure@src/test_lvalues.rs:12:1: 24:2]"* align 1 %_1) unnamed_addr #0 !dbg !8160 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_lvalues.rs:12:1: 24:2]"*, align 8
  store %"[closure@src/test_lvalues.rs:12:1: 24:2]"* %_1, %"[closure@src/test_lvalues.rs:12:1: 24:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_lvalues.rs:12:1: 24:2]"** %_1.dbg.spill, metadata !8166, metadata !DIExpression()), !dbg !8167
  call void @test_lvalue(), !dbg !8167
  br label %bb1, !dbg !8167

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !8167
  br label %bb2, !dbg !8167

bb2:                                              ; preds = %bb1
  ret void, !dbg !8168
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_lvalue() unnamed_addr #2 !dbg !8169 {
start:
  %right_val.dbg.spill5 = alloca [6 x i32]*, align 8
  %left_val.dbg.spill3 = alloca [6 x i32]*, align 8
  %right_val.dbg.spill = alloca [6 x i32]*, align 8
  %left_val.dbg.spill = alloca [6 x i32]*, align 8
  %_45 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_29 = alloca { i32*, i32* }, align 8
  %_28 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_12 = alloca { i32*, i32* }, align 8
  %expected_buffer = alloca [6 x i32], align 4
  %rust_buffer = alloca [6 x i32], align 4
  %buffer = alloca [6 x i32], align 4
  call void @llvm.dbg.declare(metadata [6 x i32]* %buffer, metadata !8171, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.declare(metadata [6 x i32]* %rust_buffer, metadata !8173, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.declare(metadata [6 x i32]* %expected_buffer, metadata !8175, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !8181, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !8188, metadata !DIExpression()), !dbg !8195
  %0 = getelementptr inbounds [6 x i32], [6 x i32]* %buffer, i64 0, i64 0, !dbg !8196
  %1 = bitcast i32* %0 to i8*, !dbg !8196
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 24, i1 false), !dbg !8196
  %2 = getelementptr inbounds [6 x i32], [6 x i32]* %rust_buffer, i64 0, i64 0, !dbg !8197
  %3 = bitcast i32* %2 to i8*, !dbg !8197
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 24, i1 false), !dbg !8197
  %4 = getelementptr inbounds [6 x i32], [6 x i32]* %expected_buffer, i64 0, i64 0, !dbg !8198
  store i32 8, i32* %4, align 4, !dbg !8198
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* %expected_buffer, i64 0, i64 1, !dbg !8198
  store i32 9, i32* %5, align 4, !dbg !8198
  %6 = getelementptr inbounds [6 x i32], [6 x i32]* %expected_buffer, i64 0, i64 2, !dbg !8198
  store i32 3, i32* %6, align 4, !dbg !8198
  %7 = getelementptr inbounds [6 x i32], [6 x i32]* %expected_buffer, i64 0, i64 3, !dbg !8198
  store i32 6, i32* %7, align 4, !dbg !8198
  %8 = getelementptr inbounds [6 x i32], [6 x i32]* %expected_buffer, i64 0, i64 4, !dbg !8198
  store i32 7, i32* %8, align 4, !dbg !8198
  %9 = getelementptr inbounds [6 x i32], [6 x i32]* %expected_buffer, i64 0, i64 5, !dbg !8198
  store i32 -8, i32* %9, align 4, !dbg !8198
  %_6.0 = bitcast [6 x i32]* %buffer to [0 x i32]*, !dbg !8199
; call core::slice::<impl [T]>::as_mut_ptr
  %_5 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_6.0, i64 6), !dbg !8199
  br label %bb1, !dbg !8199

bb1:                                              ; preds = %start
  call void @lvalue(i32* %_5), !dbg !8200
  br label %bb2, !dbg !8200

bb2:                                              ; preds = %bb1
  %_10.0 = bitcast [6 x i32]* %rust_buffer to [0 x i32]*, !dbg !8201
; call core::slice::<impl [T]>::as_mut_ptr
  %_9 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_10.0, i64 6), !dbg !8201
  br label %bb3, !dbg !8201

bb3:                                              ; preds = %bb2
  call void @rust_lvalue(i32* %_9), !dbg !8202
  br label %bb4, !dbg !8202

bb4:                                              ; preds = %bb3
  %10 = bitcast { i32*, i32* }* %_12 to [6 x i32]**, !dbg !8203
  store [6 x i32]* %buffer, [6 x i32]** %10, align 8, !dbg !8203
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_12, i32 0, i32 1, !dbg !8203
  %12 = bitcast i32** %11 to [6 x i32]**, !dbg !8203
  store [6 x i32]* %rust_buffer, [6 x i32]** %12, align 8, !dbg !8203
  %13 = bitcast { i32*, i32* }* %_12 to [6 x i32]**, !dbg !8203
  %left_val = load [6 x i32]*, [6 x i32]** %13, align 8, !dbg !8203, !nonnull !23, !align !456, !noundef !23
  store [6 x i32]* %left_val, [6 x i32]** %left_val.dbg.spill, align 8, !dbg !8203
  call void @llvm.dbg.declare(metadata [6 x i32]** %left_val.dbg.spill, metadata !8177, metadata !DIExpression()), !dbg !8204
  %14 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_12, i32 0, i32 1, !dbg !8203
  %15 = bitcast i32** %14 to [6 x i32]**, !dbg !8203
  %right_val = load [6 x i32]*, [6 x i32]** %15, align 8, !dbg !8203, !nonnull !23, !align !456, !noundef !23
  store [6 x i32]* %right_val, [6 x i32]** %right_val.dbg.spill, align 8, !dbg !8203
  call void @llvm.dbg.declare(metadata [6 x i32]** %right_val.dbg.spill, metadata !8180, metadata !DIExpression()), !dbg !8204
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_18 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hebee8802bebf6791E"([6 x i32]* align 4 %left_val, [6 x i32]* align 4 %right_val), !dbg !8204
  br label %bb5, !dbg !8204

bb5:                                              ; preds = %bb4
  %_17 = xor i1 %_18, true, !dbg !8204
  br i1 %_17, label %bb6, label %bb7, !dbg !8204

bb7:                                              ; preds = %bb5
  %16 = bitcast { i32*, i32* }* %_29 to [6 x i32]**, !dbg !8205
  store [6 x i32]* %buffer, [6 x i32]** %16, align 8, !dbg !8205
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_29, i32 0, i32 1, !dbg !8205
  %18 = bitcast i32** %17 to [6 x i32]**, !dbg !8205
  store [6 x i32]* %expected_buffer, [6 x i32]** %18, align 8, !dbg !8205
  %19 = bitcast { i32*, i32* }* %_29 to [6 x i32]**, !dbg !8205
  %left_val2 = load [6 x i32]*, [6 x i32]** %19, align 8, !dbg !8205, !nonnull !23, !align !456, !noundef !23
  store [6 x i32]* %left_val2, [6 x i32]** %left_val.dbg.spill3, align 8, !dbg !8205
  call void @llvm.dbg.declare(metadata [6 x i32]** %left_val.dbg.spill3, metadata !8184, metadata !DIExpression()), !dbg !8206
  %20 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_29, i32 0, i32 1, !dbg !8205
  %21 = bitcast i32** %20 to [6 x i32]**, !dbg !8205
  %right_val4 = load [6 x i32]*, [6 x i32]** %21, align 8, !dbg !8205, !nonnull !23, !align !456, !noundef !23
  store [6 x i32]* %right_val4, [6 x i32]** %right_val.dbg.spill5, align 8, !dbg !8205
  call void @llvm.dbg.declare(metadata [6 x i32]** %right_val.dbg.spill5, metadata !8187, metadata !DIExpression()), !dbg !8206
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_35 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hebee8802bebf6791E"([6 x i32]* align 4 %left_val2, [6 x i32]* align 4 %right_val4), !dbg !8206
  br label %bb8, !dbg !8206

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !8204
  %22 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_28 to {}**, !dbg !8194
  store {}* null, {}** %22, align 8, !dbg !8194
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hc4b73381be2307d4E(i8 0, [6 x i32]* align 4 %left_val, [6 x i32]* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_28, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc815 to %"core::panic::location::Location"*)) #16, !dbg !8194
  unreachable, !dbg !8194

bb8:                                              ; preds = %bb7
  %_34 = xor i1 %_35, true, !dbg !8206
  br i1 %_34, label %bb9, label %bb10, !dbg !8206

bb10:                                             ; preds = %bb8
  ret void, !dbg !8207

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind1, align 1, !dbg !8206
  %23 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_45 to {}**, !dbg !8195
  store {}* null, {}** %23, align 8, !dbg !8195
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hc4b73381be2307d4E(i8 0, [6 x i32]* align 4 %left_val2, [6 x i32]* align 4 %right_val4, %"core::option::Option<core::fmt::Arguments>"* %_45, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc817 to %"core::panic::location::Location"*)) #16, !dbg !8195
  unreachable, !dbg !8195
}

; misc_tests::test_quicksort::test_swap::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests14test_quicksort9test_swap28_$u7b$$u7b$closure$u7d$$u7d$17hc7ae43fd07ef6aa0E"(%"[closure@src/test_quicksort.rs:14:1: 28:2]"* align 1 %_1) unnamed_addr #0 !dbg !8208 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_quicksort.rs:14:1: 28:2]"*, align 8
  store %"[closure@src/test_quicksort.rs:14:1: 28:2]"* %_1, %"[closure@src/test_quicksort.rs:14:1: 28:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_quicksort.rs:14:1: 28:2]"** %_1.dbg.spill, metadata !8214, metadata !DIExpression()), !dbg !8215
  call void @test_swap(), !dbg !8215
  br label %bb1, !dbg !8215

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !8215
  br label %bb2, !dbg !8215

bb2:                                              ; preds = %bb1
  ret void, !dbg !8216
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_swap() unnamed_addr #2 !dbg !8217 {
start:
  %right_val.dbg.spill15 = alloca i32*, align 8
  %left_val.dbg.spill13 = alloca i32*, align 8
  %right_val.dbg.spill11 = alloca i32*, align 8
  %left_val.dbg.spill9 = alloca i32*, align 8
  %right_val.dbg.spill7 = alloca i32*, align 8
  %left_val.dbg.spill5 = alloca i32*, align 8
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_81 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind3 = alloca i8, align 1
  %_65 = alloca { i32*, i32* }, align 8
  %_64 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind2 = alloca i8, align 1
  %_48 = alloca { i32*, i32* }, align 8
  %_42 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_26 = alloca { i32*, i32* }, align 8
  %_25 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_9 = alloca { i32*, i32* }, align 8
  %_3 = alloca { i32, i32 }, align 4
  %b = alloca i32, align 4
  %a = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8219, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.declare(metadata i32* %b, metadata !8221, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !8226, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !8233, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.declare(metadata i8* %kind2, metadata !8240, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.declare(metadata i8* %kind3, metadata !8247, metadata !DIExpression()), !dbg !8255
  %0 = bitcast { i32, i32 }* %_3 to i32*, !dbg !8256
  store i32 1, i32* %0, align 4, !dbg !8256
  %1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_3, i32 0, i32 1, !dbg !8256
  store i32 2, i32* %1, align 4, !dbg !8256
  %2 = bitcast { i32, i32 }* %_3 to i32*, !dbg !8257
  %3 = load i32, i32* %2, align 4, !dbg !8257
  store i32 %3, i32* %a, align 4, !dbg !8257
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %_3, i32 0, i32 1, !dbg !8258
  %5 = load i32, i32* %4, align 4, !dbg !8258
  store i32 %5, i32* %b, align 4, !dbg !8258
  call void @swap(i32* %a, i32* %b), !dbg !8259
  br label %bb1, !dbg !8259

bb1:                                              ; preds = %start
  %6 = bitcast { i32*, i32* }* %_9 to i32**, !dbg !8260
  store i32* %a, i32** %6, align 8, !dbg !8260
  %7 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_9, i32 0, i32 1, !dbg !8260
  store i32* bitcast (<{ [4 x i8] }>* @alloc484 to i32*), i32** %7, align 8, !dbg !8260
  %8 = bitcast { i32*, i32* }* %_9 to i32**, !dbg !8260
  %left_val = load i32*, i32** %8, align 8, !dbg !8260, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !8260
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !8222, metadata !DIExpression()), !dbg !8261
  %9 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_9, i32 0, i32 1, !dbg !8260
  %right_val = load i32*, i32** %9, align 8, !dbg !8260, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !8260
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !8225, metadata !DIExpression()), !dbg !8261
  %_16 = load i32, i32* %left_val, align 4, !dbg !8261
  %_15 = icmp eq i32 %_16, 2, !dbg !8261
  %_14 = xor i1 %_15, true, !dbg !8261
  br i1 %_14, label %bb2, label %bb3, !dbg !8261

bb3:                                              ; preds = %bb1
  %10 = bitcast { i32*, i32* }* %_26 to i32**, !dbg !8262
  store i32* %b, i32** %10, align 8, !dbg !8262
  %11 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_26, i32 0, i32 1, !dbg !8262
  store i32* bitcast (<{ [4 x i8] }>* @alloc478 to i32*), i32** %11, align 8, !dbg !8262
  %12 = bitcast { i32*, i32* }* %_26 to i32**, !dbg !8262
  %left_val4 = load i32*, i32** %12, align 8, !dbg !8262, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val4, i32** %left_val.dbg.spill5, align 8, !dbg !8262
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill5, metadata !8229, metadata !DIExpression()), !dbg !8263
  %13 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_26, i32 0, i32 1, !dbg !8262
  %right_val6 = load i32*, i32** %13, align 8, !dbg !8262, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val6, i32** %right_val.dbg.spill7, align 8, !dbg !8262
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill7, metadata !8232, metadata !DIExpression()), !dbg !8263
  %_33 = load i32, i32* %left_val4, align 4, !dbg !8263
  %_32 = icmp eq i32 %_33, 1, !dbg !8263
  %_31 = xor i1 %_32, true, !dbg !8263
  br i1 %_31, label %bb4, label %bb5, !dbg !8263

bb2:                                              ; preds = %bb1
  store i8 0, i8* %kind, align 1, !dbg !8261
  %14 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_25 to {}**, !dbg !8252
  store {}* null, {}** %14, align 8, !dbg !8252
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_25, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc819 to %"core::panic::location::Location"*)) #16, !dbg !8252
  unreachable, !dbg !8252

bb5:                                              ; preds = %bb3
  call void @rust_swap(i32* %a, i32* %b), !dbg !8264
  br label %bb6, !dbg !8264

bb4:                                              ; preds = %bb3
  store i8 0, i8* %kind1, align 1, !dbg !8263
  %15 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_42 to {}**, !dbg !8253
  store {}* null, {}** %15, align 8, !dbg !8253
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val4, i32* align 4 %right_val6, %"core::option::Option<core::fmt::Arguments>"* %_42, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc821 to %"core::panic::location::Location"*)) #16, !dbg !8253
  unreachable, !dbg !8253

bb6:                                              ; preds = %bb5
  %16 = bitcast { i32*, i32* }* %_48 to i32**, !dbg !8265
  store i32* %a, i32** %16, align 8, !dbg !8265
  %17 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_48, i32 0, i32 1, !dbg !8265
  store i32* bitcast (<{ [4 x i8] }>* @alloc478 to i32*), i32** %17, align 8, !dbg !8265
  %18 = bitcast { i32*, i32* }* %_48 to i32**, !dbg !8265
  %left_val8 = load i32*, i32** %18, align 8, !dbg !8265, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val8, i32** %left_val.dbg.spill9, align 8, !dbg !8265
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill9, metadata !8236, metadata !DIExpression()), !dbg !8266
  %19 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_48, i32 0, i32 1, !dbg !8265
  %right_val10 = load i32*, i32** %19, align 8, !dbg !8265, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val10, i32** %right_val.dbg.spill11, align 8, !dbg !8265
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill11, metadata !8239, metadata !DIExpression()), !dbg !8266
  %_55 = load i32, i32* %left_val8, align 4, !dbg !8266
  %_54 = icmp eq i32 %_55, 1, !dbg !8266
  %_53 = xor i1 %_54, true, !dbg !8266
  br i1 %_53, label %bb7, label %bb8, !dbg !8266

bb8:                                              ; preds = %bb6
  %20 = bitcast { i32*, i32* }* %_65 to i32**, !dbg !8267
  store i32* %b, i32** %20, align 8, !dbg !8267
  %21 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_65, i32 0, i32 1, !dbg !8267
  store i32* bitcast (<{ [4 x i8] }>* @alloc484 to i32*), i32** %21, align 8, !dbg !8267
  %22 = bitcast { i32*, i32* }* %_65 to i32**, !dbg !8267
  %left_val12 = load i32*, i32** %22, align 8, !dbg !8267, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val12, i32** %left_val.dbg.spill13, align 8, !dbg !8267
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill13, metadata !8243, metadata !DIExpression()), !dbg !8268
  %23 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_65, i32 0, i32 1, !dbg !8267
  %right_val14 = load i32*, i32** %23, align 8, !dbg !8267, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val14, i32** %right_val.dbg.spill15, align 8, !dbg !8267
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill15, metadata !8246, metadata !DIExpression()), !dbg !8268
  %_72 = load i32, i32* %left_val12, align 4, !dbg !8268
  %_71 = icmp eq i32 %_72, 2, !dbg !8268
  %_70 = xor i1 %_71, true, !dbg !8268
  br i1 %_70, label %bb9, label %bb10, !dbg !8268

bb7:                                              ; preds = %bb6
  store i8 0, i8* %kind2, align 1, !dbg !8266
  %24 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_64 to {}**, !dbg !8254
  store {}* null, {}** %24, align 8, !dbg !8254
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val8, i32* align 4 %right_val10, %"core::option::Option<core::fmt::Arguments>"* %_64, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc823 to %"core::panic::location::Location"*)) #16, !dbg !8254
  unreachable, !dbg !8254

bb10:                                             ; preds = %bb8
  ret void, !dbg !8269

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind3, align 1, !dbg !8268
  %25 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_81 to {}**, !dbg !8255
  store {}* null, {}** %25, align 8, !dbg !8255
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val12, i32* align 4 %right_val14, %"core::option::Option<core::fmt::Arguments>"* %_81, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc825 to %"core::panic::location::Location"*)) #16, !dbg !8255
  unreachable, !dbg !8255
}

; misc_tests::test_quicksort::test_partition::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests14test_quicksort14test_partition28_$u7b$$u7b$closure$u7d$$u7d$17he20c6d4d533c755dE"(%"[closure@src/test_quicksort.rs:31:1: 43:2]"* align 1 %_1) unnamed_addr #0 !dbg !8270 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_quicksort.rs:31:1: 43:2]"*, align 8
  store %"[closure@src/test_quicksort.rs:31:1: 43:2]"* %_1, %"[closure@src/test_quicksort.rs:31:1: 43:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_quicksort.rs:31:1: 43:2]"** %_1.dbg.spill, metadata !8275, metadata !DIExpression()), !dbg !8276
  call void @test_partition(), !dbg !8276
  br label %bb1, !dbg !8276

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !8276
  br label %bb2, !dbg !8276

bb2:                                              ; preds = %bb1
  ret void, !dbg !8277
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_partition() unnamed_addr #2 !dbg !8278 {
start:
  %right_val.dbg.spill5 = alloca [10 x i32]*, align 8
  %left_val.dbg.spill3 = alloca [10 x i32]*, align 8
  %right_val.dbg.spill = alloca [10 x i32]*, align 8
  %left_val.dbg.spill = alloca [10 x i32]*, align 8
  %_46 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_30 = alloca { i32*, i32* }, align 8
  %_29 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_13 = alloca { i32*, i32* }, align 8
  %expected_buffer = alloca [10 x i32], align 4
  %rust_buffer = alloca [10 x i32], align 4
  %buffer = alloca [10 x i32], align 4
  call void @llvm.dbg.declare(metadata [10 x i32]* %buffer, metadata !8280, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.declare(metadata [10 x i32]* %rust_buffer, metadata !8282, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.declare(metadata [10 x i32]* %expected_buffer, metadata !8284, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !8290, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !8297, metadata !DIExpression()), !dbg !8304
  %0 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 0, !dbg !8305
  store i32 6, i32* %0, align 4, !dbg !8305
  %1 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 1, !dbg !8305
  store i32 1, i32* %1, align 4, !dbg !8305
  %2 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 2, !dbg !8305
  store i32 5, i32* %2, align 4, !dbg !8305
  %3 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 3, !dbg !8305
  store i32 6, i32* %3, align 4, !dbg !8305
  %4 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 4, !dbg !8305
  store i32 2, i32* %4, align 4, !dbg !8305
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 5, !dbg !8305
  store i32 0, i32* %5, align 4, !dbg !8305
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 6, !dbg !8305
  store i32 9, i32* %6, align 4, !dbg !8305
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 7, !dbg !8305
  store i32 2, i32* %7, align 4, !dbg !8305
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 8, !dbg !8305
  store i32 0, i32* %8, align 4, !dbg !8305
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 9, !dbg !8305
  store i32 5, i32* %9, align 4, !dbg !8305
  %10 = bitcast [10 x i32]* %rust_buffer to i8*, !dbg !8306
  %11 = bitcast [10 x i32]* %buffer to i8*, !dbg !8306
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 40, i1 false), !dbg !8306
  %12 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 0, !dbg !8307
  store i32 1, i32* %12, align 4, !dbg !8307
  %13 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 1, !dbg !8307
  store i32 5, i32* %13, align 4, !dbg !8307
  %14 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 2, !dbg !8307
  store i32 2, i32* %14, align 4, !dbg !8307
  %15 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 3, !dbg !8307
  store i32 0, i32* %15, align 4, !dbg !8307
  %16 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 4, !dbg !8307
  store i32 2, i32* %16, align 4, !dbg !8307
  %17 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 5, !dbg !8307
  store i32 0, i32* %17, align 4, !dbg !8307
  %18 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 6, !dbg !8307
  store i32 5, i32* %18, align 4, !dbg !8307
  %19 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 7, !dbg !8307
  store i32 6, i32* %19, align 4, !dbg !8307
  %20 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 8, !dbg !8307
  store i32 6, i32* %20, align 4, !dbg !8307
  %21 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 9, !dbg !8307
  store i32 9, i32* %21, align 4, !dbg !8307
  %_7.0 = bitcast [10 x i32]* %buffer to [0 x i32]*, !dbg !8308
; call core::slice::<impl [T]>::as_mut_ptr
  %_6 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_7.0, i64 10), !dbg !8308
  br label %bb1, !dbg !8308

bb1:                                              ; preds = %start
  call void @partition(i32* %_6, i32 0, i32 9), !dbg !8309
  br label %bb2, !dbg !8309

bb2:                                              ; preds = %bb1
  %_11.0 = bitcast [10 x i32]* %rust_buffer to [0 x i32]*, !dbg !8310
; call core::slice::<impl [T]>::as_mut_ptr
  %_10 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_11.0, i64 10), !dbg !8310
  br label %bb3, !dbg !8310

bb3:                                              ; preds = %bb2
  %_9 = call i32 @rust_partition(i32* %_10, i32 0, i32 9), !dbg !8311
  br label %bb4, !dbg !8311

bb4:                                              ; preds = %bb3
  %22 = bitcast { i32*, i32* }* %_13 to [10 x i32]**, !dbg !8312
  store [10 x i32]* %buffer, [10 x i32]** %22, align 8, !dbg !8312
  %23 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1, !dbg !8312
  %24 = bitcast i32** %23 to [10 x i32]**, !dbg !8312
  store [10 x i32]* %rust_buffer, [10 x i32]** %24, align 8, !dbg !8312
  %25 = bitcast { i32*, i32* }* %_13 to [10 x i32]**, !dbg !8312
  %left_val = load [10 x i32]*, [10 x i32]** %25, align 8, !dbg !8312, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %left_val, [10 x i32]** %left_val.dbg.spill, align 8, !dbg !8312
  call void @llvm.dbg.declare(metadata [10 x i32]** %left_val.dbg.spill, metadata !8286, metadata !DIExpression()), !dbg !8313
  %26 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_13, i32 0, i32 1, !dbg !8312
  %27 = bitcast i32** %26 to [10 x i32]**, !dbg !8312
  %right_val = load [10 x i32]*, [10 x i32]** %27, align 8, !dbg !8312, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %right_val, [10 x i32]** %right_val.dbg.spill, align 8, !dbg !8312
  call void @llvm.dbg.declare(metadata [10 x i32]** %right_val.dbg.spill, metadata !8289, metadata !DIExpression()), !dbg !8313
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_19 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h4b48ce01a5ecb68eE"([10 x i32]* align 4 %left_val, [10 x i32]* align 4 %right_val), !dbg !8313
  br label %bb5, !dbg !8313

bb5:                                              ; preds = %bb4
  %_18 = xor i1 %_19, true, !dbg !8313
  br i1 %_18, label %bb6, label %bb7, !dbg !8313

bb7:                                              ; preds = %bb5
  %28 = bitcast { i32*, i32* }* %_30 to [10 x i32]**, !dbg !8314
  store [10 x i32]* %buffer, [10 x i32]** %28, align 8, !dbg !8314
  %29 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_30, i32 0, i32 1, !dbg !8314
  %30 = bitcast i32** %29 to [10 x i32]**, !dbg !8314
  store [10 x i32]* %expected_buffer, [10 x i32]** %30, align 8, !dbg !8314
  %31 = bitcast { i32*, i32* }* %_30 to [10 x i32]**, !dbg !8314
  %left_val2 = load [10 x i32]*, [10 x i32]** %31, align 8, !dbg !8314, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %left_val2, [10 x i32]** %left_val.dbg.spill3, align 8, !dbg !8314
  call void @llvm.dbg.declare(metadata [10 x i32]** %left_val.dbg.spill3, metadata !8293, metadata !DIExpression()), !dbg !8315
  %32 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_30, i32 0, i32 1, !dbg !8314
  %33 = bitcast i32** %32 to [10 x i32]**, !dbg !8314
  %right_val4 = load [10 x i32]*, [10 x i32]** %33, align 8, !dbg !8314, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %right_val4, [10 x i32]** %right_val.dbg.spill5, align 8, !dbg !8314
  call void @llvm.dbg.declare(metadata [10 x i32]** %right_val.dbg.spill5, metadata !8296, metadata !DIExpression()), !dbg !8315
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_36 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h4b48ce01a5ecb68eE"([10 x i32]* align 4 %left_val2, [10 x i32]* align 4 %right_val4), !dbg !8315
  br label %bb8, !dbg !8315

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !8313
  %34 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_29 to {}**, !dbg !8303
  store {}* null, {}** %34, align 8, !dbg !8303
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h102e7dff1d1804d2E(i8 0, [10 x i32]* align 4 %left_val, [10 x i32]* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_29, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc827 to %"core::panic::location::Location"*)) #16, !dbg !8303
  unreachable, !dbg !8303

bb8:                                              ; preds = %bb7
  %_35 = xor i1 %_36, true, !dbg !8315
  br i1 %_35, label %bb9, label %bb10, !dbg !8315

bb10:                                             ; preds = %bb8
  ret void, !dbg !8316

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind1, align 1, !dbg !8315
  %35 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_46 to {}**, !dbg !8304
  store {}* null, {}** %35, align 8, !dbg !8304
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h102e7dff1d1804d2E(i8 0, [10 x i32]* align 4 %left_val2, [10 x i32]* align 4 %right_val4, %"core::option::Option<core::fmt::Arguments>"* %_46, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc829 to %"core::panic::location::Location"*)) #16, !dbg !8304
  unreachable, !dbg !8304
}

; misc_tests::test_quicksort::test_quicksort::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests14test_quicksort14test_quicksort28_$u7b$$u7b$closure$u7d$$u7d$17hfa9fc962a9d803daE"(%"[closure@src/test_quicksort.rs:46:1: 61:2]"* align 1 %_1) unnamed_addr #0 !dbg !8317 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_quicksort.rs:46:1: 61:2]"*, align 8
  store %"[closure@src/test_quicksort.rs:46:1: 61:2]"* %_1, %"[closure@src/test_quicksort.rs:46:1: 61:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_quicksort.rs:46:1: 61:2]"** %_1.dbg.spill, metadata !8322, metadata !DIExpression()), !dbg !8323
  call void @test_quicksort(), !dbg !8323
  br label %bb1, !dbg !8323

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !8323
  br label %bb2, !dbg !8323

bb2:                                              ; preds = %bb1
  ret void, !dbg !8324
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_quicksort() unnamed_addr #2 !dbg !8325 {
start:
  %right_val.dbg.spill10 = alloca [10 x i32]*, align 8
  %left_val.dbg.spill8 = alloca [10 x i32]*, align 8
  %right_val.dbg.spill6 = alloca [10 x i32]*, align 8
  %left_val.dbg.spill4 = alloca [10 x i32]*, align 8
  %right_val.dbg.spill = alloca {}*, align 8
  %left_val.dbg.spill = alloca {}*, align 8
  %i2.dbg.spill = alloca {}, align 1
  %i1.dbg.spill = alloca {}, align 1
  %_65 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind2 = alloca i8, align 1
  %_49 = alloca { i32*, i32* }, align 8
  %_48 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind1 = alloca i8, align 1
  %_32 = alloca { i32*, i32* }, align 8
  %_31 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_15 = alloca { i8*, i8* }, align 8
  %i2 = alloca {}, align 1
  %i1 = alloca {}, align 1
  %expected_buffer = alloca [10 x i32], align 4
  %rust_buffer = alloca [10 x i32], align 4
  %buffer = alloca [10 x i32], align 4
  call void @llvm.dbg.declare(metadata [10 x i32]* %buffer, metadata !8327, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.declare(metadata [10 x i32]* %rust_buffer, metadata !8329, metadata !DIExpression()), !dbg !8362
  call void @llvm.dbg.declare(metadata [10 x i32]* %expected_buffer, metadata !8331, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.declare(metadata {}* %i1, metadata !8333, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.declare(metadata {}* %i2, metadata !8335, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.declare(metadata {}* %i1.dbg.spill, metadata !8336, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.declare(metadata {}* %i2.dbg.spill, metadata !8338, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !8344, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.declare(metadata i8* %kind1, metadata !8351, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.declare(metadata i8* %kind2, metadata !8358, metadata !DIExpression()), !dbg !8370
  %0 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 0, !dbg !8371
  store i32 6, i32* %0, align 4, !dbg !8371
  %1 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 1, !dbg !8371
  store i32 1, i32* %1, align 4, !dbg !8371
  %2 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 2, !dbg !8371
  store i32 5, i32* %2, align 4, !dbg !8371
  %3 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 3, !dbg !8371
  store i32 6, i32* %3, align 4, !dbg !8371
  %4 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 4, !dbg !8371
  store i32 2, i32* %4, align 4, !dbg !8371
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 5, !dbg !8371
  store i32 0, i32* %5, align 4, !dbg !8371
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 6, !dbg !8371
  store i32 9, i32* %6, align 4, !dbg !8371
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 7, !dbg !8371
  store i32 2, i32* %7, align 4, !dbg !8371
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 8, !dbg !8371
  store i32 0, i32* %8, align 4, !dbg !8371
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %buffer, i64 0, i64 9, !dbg !8371
  store i32 5, i32* %9, align 4, !dbg !8371
  %10 = bitcast [10 x i32]* %rust_buffer to i8*, !dbg !8372
  %11 = bitcast [10 x i32]* %buffer to i8*, !dbg !8372
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 40, i1 false), !dbg !8372
  %12 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 0, !dbg !8373
  store i32 0, i32* %12, align 4, !dbg !8373
  %13 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 1, !dbg !8373
  store i32 0, i32* %13, align 4, !dbg !8373
  %14 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 2, !dbg !8373
  store i32 1, i32* %14, align 4, !dbg !8373
  %15 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 3, !dbg !8373
  store i32 2, i32* %15, align 4, !dbg !8373
  %16 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 4, !dbg !8373
  store i32 2, i32* %16, align 4, !dbg !8373
  %17 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 5, !dbg !8373
  store i32 5, i32* %17, align 4, !dbg !8373
  %18 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 6, !dbg !8373
  store i32 5, i32* %18, align 4, !dbg !8373
  %19 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 7, !dbg !8373
  store i32 6, i32* %19, align 4, !dbg !8373
  %20 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 8, !dbg !8373
  store i32 6, i32* %20, align 4, !dbg !8373
  %21 = getelementptr inbounds [10 x i32], [10 x i32]* %expected_buffer, i64 0, i64 9, !dbg !8373
  store i32 9, i32* %21, align 4, !dbg !8373
  %_9.0 = bitcast [10 x i32]* %buffer to [0 x i32]*, !dbg !8374
; call core::slice::<impl [T]>::as_mut_ptr
  %_8 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_9.0, i64 10), !dbg !8374
  br label %bb1, !dbg !8374

bb1:                                              ; preds = %start
  call void @quickSort(i32* %_8, i32 0, i32 9), !dbg !8375
  br label %bb2, !dbg !8375

bb2:                                              ; preds = %bb1
  %_13.0 = bitcast [10 x i32]* %rust_buffer to [0 x i32]*, !dbg !8376
; call core::slice::<impl [T]>::as_mut_ptr
  %_12 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_13.0, i64 10), !dbg !8376
  br label %bb3, !dbg !8376

bb3:                                              ; preds = %bb2
  call void @rust_quickSort(i32* %_12, i32 0, i32 9), !dbg !8377
  br label %bb4, !dbg !8377

bb4:                                              ; preds = %bb3
  %22 = bitcast { i8*, i8* }* %_15 to {}**, !dbg !8378
  store {}* %i1, {}** %22, align 8, !dbg !8378
  %23 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_15, i32 0, i32 1, !dbg !8378
  %24 = bitcast i8** %23 to {}**, !dbg !8378
  store {}* %i2, {}** %24, align 8, !dbg !8378
  %25 = bitcast { i8*, i8* }* %_15 to {}**, !dbg !8378
  %left_val = load {}*, {}** %25, align 8, !dbg !8378, !nonnull !23, !align !497, !noundef !23
  store {}* %left_val, {}** %left_val.dbg.spill, align 8, !dbg !8378
  call void @llvm.dbg.declare(metadata {}** %left_val.dbg.spill, metadata !8340, metadata !DIExpression()), !dbg !8379
  %26 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_15, i32 0, i32 1, !dbg !8378
  %27 = bitcast i8** %26 to {}**, !dbg !8378
  %right_val = load {}*, {}** %27, align 8, !dbg !8378, !nonnull !23, !align !497, !noundef !23
  store {}* %right_val, {}** %right_val.dbg.spill, align 8, !dbg !8378
  call void @llvm.dbg.declare(metadata {}** %right_val.dbg.spill, metadata !8343, metadata !DIExpression()), !dbg !8379
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %_21 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h9b35e2cee4cb8532E"({}* align 1 %left_val, {}* align 1 %right_val), !dbg !8379
  br label %bb5, !dbg !8379

bb5:                                              ; preds = %bb4
  %_20 = xor i1 %_21, true, !dbg !8379
  br i1 %_20, label %bb6, label %bb7, !dbg !8379

bb7:                                              ; preds = %bb5
  %28 = bitcast { i32*, i32* }* %_32 to [10 x i32]**, !dbg !8380
  store [10 x i32]* %buffer, [10 x i32]** %28, align 8, !dbg !8380
  %29 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_32, i32 0, i32 1, !dbg !8380
  %30 = bitcast i32** %29 to [10 x i32]**, !dbg !8380
  store [10 x i32]* %rust_buffer, [10 x i32]** %30, align 8, !dbg !8380
  %31 = bitcast { i32*, i32* }* %_32 to [10 x i32]**, !dbg !8380
  %left_val3 = load [10 x i32]*, [10 x i32]** %31, align 8, !dbg !8380, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %left_val3, [10 x i32]** %left_val.dbg.spill4, align 8, !dbg !8380
  call void @llvm.dbg.declare(metadata [10 x i32]** %left_val.dbg.spill4, metadata !8347, metadata !DIExpression()), !dbg !8381
  %32 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_32, i32 0, i32 1, !dbg !8380
  %33 = bitcast i32** %32 to [10 x i32]**, !dbg !8380
  %right_val5 = load [10 x i32]*, [10 x i32]** %33, align 8, !dbg !8380, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %right_val5, [10 x i32]** %right_val.dbg.spill6, align 8, !dbg !8380
  call void @llvm.dbg.declare(metadata [10 x i32]** %right_val.dbg.spill6, metadata !8350, metadata !DIExpression()), !dbg !8381
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_38 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h4b48ce01a5ecb68eE"([10 x i32]* align 4 %left_val3, [10 x i32]* align 4 %right_val5), !dbg !8381
  br label %bb8, !dbg !8381

bb6:                                              ; preds = %bb5
  store i8 0, i8* %kind, align 1, !dbg !8379
  %34 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_31 to {}**, !dbg !8368
  store {}* null, {}** %34, align 8, !dbg !8368
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h247fb856b715c146E(i8 0, {}* align 1 %left_val, {}* align 1 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_31, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc831 to %"core::panic::location::Location"*)) #16, !dbg !8368
  unreachable, !dbg !8368

bb8:                                              ; preds = %bb7
  %_37 = xor i1 %_38, true, !dbg !8381
  br i1 %_37, label %bb9, label %bb10, !dbg !8381

bb10:                                             ; preds = %bb8
  %35 = bitcast { i32*, i32* }* %_49 to [10 x i32]**, !dbg !8382
  store [10 x i32]* %buffer, [10 x i32]** %35, align 8, !dbg !8382
  %36 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_49, i32 0, i32 1, !dbg !8382
  %37 = bitcast i32** %36 to [10 x i32]**, !dbg !8382
  store [10 x i32]* %expected_buffer, [10 x i32]** %37, align 8, !dbg !8382
  %38 = bitcast { i32*, i32* }* %_49 to [10 x i32]**, !dbg !8382
  %left_val7 = load [10 x i32]*, [10 x i32]** %38, align 8, !dbg !8382, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %left_val7, [10 x i32]** %left_val.dbg.spill8, align 8, !dbg !8382
  call void @llvm.dbg.declare(metadata [10 x i32]** %left_val.dbg.spill8, metadata !8354, metadata !DIExpression()), !dbg !8383
  %39 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_49, i32 0, i32 1, !dbg !8382
  %40 = bitcast i32** %39 to [10 x i32]**, !dbg !8382
  %right_val9 = load [10 x i32]*, [10 x i32]** %40, align 8, !dbg !8382, !nonnull !23, !align !456, !noundef !23
  store [10 x i32]* %right_val9, [10 x i32]** %right_val.dbg.spill10, align 8, !dbg !8382
  call void @llvm.dbg.declare(metadata [10 x i32]** %right_val.dbg.spill10, metadata !8357, metadata !DIExpression()), !dbg !8383
; call core::array::equality::<impl core::cmp::PartialEq<[B; N]> for [A; N]>::eq
  %_55 = call zeroext i1 @"_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h4b48ce01a5ecb68eE"([10 x i32]* align 4 %left_val7, [10 x i32]* align 4 %right_val9), !dbg !8383
  br label %bb11, !dbg !8383

bb9:                                              ; preds = %bb8
  store i8 0, i8* %kind1, align 1, !dbg !8381
  %41 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_48 to {}**, !dbg !8369
  store {}* null, {}** %41, align 8, !dbg !8369
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h102e7dff1d1804d2E(i8 0, [10 x i32]* align 4 %left_val3, [10 x i32]* align 4 %right_val5, %"core::option::Option<core::fmt::Arguments>"* %_48, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc833 to %"core::panic::location::Location"*)) #16, !dbg !8369
  unreachable, !dbg !8369

bb11:                                             ; preds = %bb10
  %_54 = xor i1 %_55, true, !dbg !8383
  br i1 %_54, label %bb12, label %bb13, !dbg !8383

bb13:                                             ; preds = %bb11
  ret void, !dbg !8384

bb12:                                             ; preds = %bb11
  store i8 0, i8* %kind2, align 1, !dbg !8383
  %42 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_65 to {}**, !dbg !8370
  store {}* null, {}** %42, align 8, !dbg !8370
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h102e7dff1d1804d2E(i8 0, [10 x i32]* align 4 %left_val7, [10 x i32]* align 4 %right_val9, %"core::option::Option<core::fmt::Arguments>"* %_65, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc835 to %"core::panic::location::Location"*)) #16, !dbg !8370
  unreachable, !dbg !8370
}

; misc_tests::test_exprs::test_exprs::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10misc_tests10test_exprs10test_exprs28_$u7b$$u7b$closure$u7d$$u7d$17h0597e21984baff64E"(%"[closure@src/test_exprs.rs:12:1: 24:2]"* align 1 %_1) unnamed_addr #0 !dbg !8385 {
start:
  %_1.dbg.spill = alloca %"[closure@src/test_exprs.rs:12:1: 24:2]"*, align 8
  store %"[closure@src/test_exprs.rs:12:1: 24:2]"* %_1, %"[closure@src/test_exprs.rs:12:1: 24:2]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@src/test_exprs.rs:12:1: 24:2]"** %_1.dbg.spill, metadata !8391, metadata !DIExpression()), !dbg !8392
  call void @test_exprs(), !dbg !8392
  br label %bb1, !dbg !8392

bb1:                                              ; preds = %start
; call test::assert_test_result
  call void @_ZN4test18assert_test_result17he4129509ab552d7aE(), !dbg !8392
  br label %bb2, !dbg !8392

bb2:                                              ; preds = %bb1
  ret void, !dbg !8393
}

; Function Attrs: nonlazybind uwtable
define dso_local void @test_exprs() unnamed_addr #2 !dbg !8394 {
start:
  %right_val.dbg.spill = alloca i32*, align 8
  %left_val.dbg.spill = alloca i32*, align 8
  %_51 = alloca [1 x { i8*, i64* }], align 8
  %_44 = alloca %"core::fmt::Arguments", align 8
  %_43 = alloca %"core::option::Option<core::fmt::Arguments>", align 8
  %kind = alloca i8, align 1
  %_21 = alloca { i32*, i32* }, align 8
  %x = alloca i64, align 8
  %_16 = alloca { i64, i64 }, align 8
  %iter = alloca { i64, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %rust_buffer = alloca [60 x i32], align 4
  %buffer = alloca [60 x i32], align 4
  call void @llvm.dbg.declare(metadata [60 x i32]* %buffer, metadata !8396, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.declare(metadata [60 x i32]* %rust_buffer, metadata !8398, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.declare(metadata { i64, i64 }* %iter, metadata !8400, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8402, metadata !DIExpression()), !dbg !8414
  call void @llvm.dbg.declare(metadata i8* %kind, metadata !8408, metadata !DIExpression()), !dbg !8415
  %0 = getelementptr inbounds [60 x i32], [60 x i32]* %buffer, i64 0, i64 0, !dbg !8416
  %1 = bitcast i32* %0 to i8*, !dbg !8416
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 240, i1 false), !dbg !8416
  %2 = getelementptr inbounds [60 x i32], [60 x i32]* %rust_buffer, i64 0, i64 0, !dbg !8417
  %3 = bitcast i32* %2 to i8*, !dbg !8417
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 240, i1 false), !dbg !8417
  %_6.0 = bitcast [60 x i32]* %buffer to [0 x i32]*, !dbg !8418
; call core::slice::<impl [T]>::as_mut_ptr
  %_5 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_6.0, i64 60), !dbg !8418
  br label %bb1, !dbg !8418

bb1:                                              ; preds = %start
  call void @exprs(i32 60, i32* %_5), !dbg !8419
  br label %bb2, !dbg !8419

bb2:                                              ; preds = %bb1
  %_11.0 = bitcast [60 x i32]* %rust_buffer to [0 x i32]*, !dbg !8420
; call core::slice::<impl [T]>::as_mut_ptr
  %_10 = call i32* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E"([0 x i32]* align 4 %_11.0, i64 60), !dbg !8420
  br label %bb3, !dbg !8420

bb3:                                              ; preds = %bb2
  call void @rust_exprs(i32 60, i32* %_10), !dbg !8421
  br label %bb4, !dbg !8421

bb4:                                              ; preds = %bb3
  %4 = bitcast { i64, i64 }* %_14 to i64*, !dbg !8422
  store i64 0, i64* %4, align 8, !dbg !8422
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !8422
  store i64 60, i64* %5, align 8, !dbg !8422
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 0, !dbg !8422
  %7 = load i64, i64* %6, align 8, !dbg !8422
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !8422
  %9 = load i64, i64* %8, align 8, !dbg !8422
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %10 = call { i64, i64 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb906d45d6c85ec06E"(i64 %7, i64 %9), !dbg !8422
  %_13.0 = extractvalue { i64, i64 } %10, 0, !dbg !8422
  %_13.1 = extractvalue { i64, i64 } %10, 1, !dbg !8422
  br label %bb5, !dbg !8422

bb5:                                              ; preds = %bb4
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 0, !dbg !8422
  store i64 %_13.0, i64* %11, align 8, !dbg !8422
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %iter, i32 0, i32 1, !dbg !8422
  store i64 %_13.1, i64* %12, align 8, !dbg !8422
  br label %bb6, !dbg !8423

bb6:                                              ; preds = %bb12, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %13 = call { i64, i64 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h7b1637b1988718b5E"({ i64, i64 }* align 8 %iter), !dbg !8413
  store { i64, i64 } %13, { i64, i64 }* %_16, align 8, !dbg !8413
  br label %bb7, !dbg !8413

bb7:                                              ; preds = %bb6
  %14 = bitcast { i64, i64 }* %_16 to i64*, !dbg !8413
  %_19 = load i64, i64* %14, align 8, !dbg !8413, !range !1114, !noundef !23
  switch i64 %_19, label %bb9 [
    i64 0, label %bb10
    i64 1, label %bb8
  ], !dbg !8413

bb9:                                              ; preds = %bb7
  unreachable, !dbg !8413

bb10:                                             ; preds = %bb7
  ret void, !dbg !8424

bb8:                                              ; preds = %bb7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_16, i32 0, i32 1, !dbg !8425
  %16 = load i64, i64* %15, align 8, !dbg !8425
  store i64 %16, i64* %x, align 8, !dbg !8425
  %_23 = load i64, i64* %x, align 8, !dbg !8426
  %_25 = icmp ult i64 %_23, 60, !dbg !8427
  %17 = call i1 @llvm.expect.i1(i1 %_25, i1 true), !dbg !8427
  br i1 %17, label %bb11, label %panic, !dbg !8427

bb11:                                             ; preds = %bb8
  %_22 = getelementptr inbounds [60 x i32], [60 x i32]* %buffer, i64 0, i64 %_23, !dbg !8428
  %_27 = load i64, i64* %x, align 8, !dbg !8429
  %_29 = icmp ult i64 %_27, 60, !dbg !8430
  %18 = call i1 @llvm.expect.i1(i1 %_29, i1 true), !dbg !8430
  br i1 %18, label %bb12, label %panic1, !dbg !8430

panic:                                            ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_23, i64 60, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc837 to %"core::panic::location::Location"*)) #16, !dbg !8427
  unreachable, !dbg !8427

bb12:                                             ; preds = %bb11
  %_26 = getelementptr inbounds [60 x i32], [60 x i32]* %rust_buffer, i64 0, i64 %_27, !dbg !8428
  %19 = bitcast { i32*, i32* }* %_21 to i32**, !dbg !8428
  store i32* %_22, i32** %19, align 8, !dbg !8428
  %20 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_21, i32 0, i32 1, !dbg !8428
  store i32* %_26, i32** %20, align 8, !dbg !8428
  %21 = bitcast { i32*, i32* }* %_21 to i32**, !dbg !8428
  %left_val = load i32*, i32** %21, align 8, !dbg !8428, !nonnull !23, !align !456, !noundef !23
  store i32* %left_val, i32** %left_val.dbg.spill, align 8, !dbg !8428
  call void @llvm.dbg.declare(metadata i32** %left_val.dbg.spill, metadata !8404, metadata !DIExpression()), !dbg !8431
  %22 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %_21, i32 0, i32 1, !dbg !8428
  %right_val = load i32*, i32** %22, align 8, !dbg !8428, !nonnull !23, !align !456, !noundef !23
  store i32* %right_val, i32** %right_val.dbg.spill, align 8, !dbg !8428
  call void @llvm.dbg.declare(metadata i32** %right_val.dbg.spill, metadata !8407, metadata !DIExpression()), !dbg !8431
  %_34 = load i32, i32* %left_val, align 4, !dbg !8431
  %_35 = load i32, i32* %right_val, align 4, !dbg !8431
  %_33 = icmp eq i32 %_34, %_35, !dbg !8431
  %_32 = xor i1 %_33, true, !dbg !8431
  br i1 %_32, label %bb13, label %bb6, !dbg !8431

panic1:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64 %_27, i64 60, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc839 to %"core::panic::location::Location"*)) #16, !dbg !8430
  unreachable, !dbg !8430

bb13:                                             ; preds = %bb12
  store i8 0, i8* %kind, align 1, !dbg !8431
; call core::fmt::ArgumentV1::new_display
  %23 = call { i8*, i64* } @_ZN4core3fmt10ArgumentV111new_display17hdc27862aaaff6c82E(i64* align 8 %x), !dbg !8415
  %_52.0 = extractvalue { i8*, i64* } %23, 0, !dbg !8415
  %_52.1 = extractvalue { i8*, i64* } %23, 1, !dbg !8415
  br label %bb14, !dbg !8415

bb14:                                             ; preds = %bb13
  %24 = getelementptr inbounds [1 x { i8*, i64* }], [1 x { i8*, i64* }]* %_51, i64 0, i64 0, !dbg !8415
  %25 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %24, i32 0, i32 0, !dbg !8415
  store i8* %_52.0, i8** %25, align 8, !dbg !8415
  %26 = getelementptr inbounds { i8*, i64* }, { i8*, i64* }* %24, i32 0, i32 1, !dbg !8415
  store i64* %_52.1, i64** %26, align 8, !dbg !8415
  %_48.0 = bitcast [1 x { i8*, i64* }]* %_51 to [0 x { i8*, i64* }]*, !dbg !8415
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h090b18600dc0d53dE(%"core::fmt::Arguments"* sret(%"core::fmt::Arguments") %_44, [0 x { [0 x i8]*, i64 }]* align 8 bitcast (<{ i8*, [8 x i8] }>* @alloc571 to [0 x { [0 x i8]*, i64 }]*), i64 1, [0 x { i8*, i64* }]* align 8 %_48.0, i64 1), !dbg !8415
  br label %bb15, !dbg !8415

bb15:                                             ; preds = %bb14
  %27 = bitcast %"core::option::Option<core::fmt::Arguments>"* %_43 to %"core::option::Option<core::fmt::Arguments>::Some"*, !dbg !8415
  %28 = bitcast %"core::option::Option<core::fmt::Arguments>::Some"* %27 to %"core::fmt::Arguments"*, !dbg !8415
  %29 = bitcast %"core::fmt::Arguments"* %28 to i8*, !dbg !8415
  %30 = bitcast %"core::fmt::Arguments"* %_44 to i8*, !dbg !8415
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 48, i1 false), !dbg !8415
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17ha932f64f05093c01E(i8 0, i32* align 4 %left_val, i32* align 4 %right_val, %"core::option::Option<core::fmt::Arguments>"* %_43, %"core::panic::location::Location"* align 8 bitcast (<{ i8*, [16 x i8] }>* @alloc841 to %"core::panic::location::Location"*)) #16, !dbg !8415
  unreachable, !dbg !8415
}

; misc_tests::main
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10misc_tests4main17h8e39a4ff71b49070E() unnamed_addr #2 !dbg !8432 {
start:
; call test::test_main_static
  call void @_ZN4test16test_main_static17h282a5eb5a10ec82dE([0 x %"test::types::TestDescAndFn"*]* align 8 bitcast (<{ i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }>* @alloc603 to [0 x %"test::types::TestDescAndFn"*]*), i64 13), !dbg !8433
  br label %bb1, !dbg !8433

bb1:                                              ; preds = %start
  ret void, !dbg !8433
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, %"unwind::libunwind::_Unwind_Exception"*, %"unwind::libunwind::_Unwind_Context"*) unnamed_addr #2

; std::rt::lang_start_internal
; Function Attrs: nonlazybind uwtable
declare i64 @_ZN3std2rt19lang_start_internal17h498f9556b87c8e5fE({}* align 1, [3 x i64]* align 8, i64, i8**) unnamed_addr #2

; core::fmt::Formatter::pad
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter3pad17h6f4380cf598a2e03E(%"core::fmt::Formatter"* align 8, [0 x i8]* align 1, i64) unnamed_addr #2

; core::fmt::Formatter::debug_list
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter10debug_list17h2e70d1c34e8cb782E(%"core::fmt::builders::DebugList"* sret(%"core::fmt::builders::DebugList"), %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::builders::DebugList::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17ha896c0aa3642bf32E(%"core::fmt::builders::DebugList"* align 8) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h13884cc54f932e9aE"(i64* align 8, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h861f5ddbf758e4f9E(%"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17h46ab6094afed2354E"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17h21ddf2be2e6a0fd5E(%"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h827553a54a7e037dE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17h52a4838d0eaa2babE"(i32* align 4, %"core::fmt::Formatter"* align 8) unnamed_addr #2

; core::fmt::builders::DebugList::entry
; Function Attrs: nonlazybind uwtable
declare align 8 %"core::fmt::builders::DebugList"* @_ZN4core3fmt8builders9DebugList5entry17h5007920add23274dE(%"core::fmt::builders::DebugList"* align 8, {}* align 1, [3 x i64]* align 8) unnamed_addr #2

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h62ccf03c8a8a51b5E(%"core::fmt::Arguments"*, %"core::panic::location::Location"* align 8) unnamed_addr #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; core::panicking::panic_no_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking15panic_no_unwind17h62f8113f44cbfcbfE() unnamed_addr #9

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #10

; core::panicking::assert_failed_inner
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17h2784388051aff910E(i8, {}* align 1, [3 x i64]* align 8, {}* align 1, [3 x i64]* align 8, %"core::option::Option<core::fmt::Arguments>"*, %"core::panic::location::Location"* align 8) unnamed_addr #11

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #12

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #12

; Function Attrs: nounwind nonlazybind uwtable
declare noalias i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h0eb7a9e63f5042c6E(i64, i64) unnamed_addr #3

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hc80d63a780181a5dE() unnamed_addr #11

; Function Attrs: nounwind nonlazybind uwtable
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #12

; Function Attrs: nonlazybind
declare i32 @memcmp(i8*, i8*, i64) #14

; Function Attrs: nonlazybind uwtable
declare i8* @malloc(i64) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @free(i8*) unnamed_addr #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17hf5844c0338bd061cE([0 x i8]* align 1, i64, %"core::panic::location::Location"* align 8) unnamed_addr #7

; Function Attrs: nonlazybind uwtable
declare i8* @realloc(i8*, i64) unnamed_addr #2

; Function Attrs: noreturn nonlazybind uwtable
declare void @__assert_fail(i8*, i8*, i32, i8*) unnamed_addr #11

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #5

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17h66852fee8138fdc4E(i64, i64, %"core::panic::location::Location"* align 8) unnamed_addr #7

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i8, i1 } @llvm.sadd.with.overflow.i8(i8, i8) #5

; Function Attrs: nonlazybind uwtable
declare i8* @memset(i8*, i32, i64) unnamed_addr #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

; Function Attrs: nonlazybind uwtable
declare void @sizeofs(i32, i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @entry2(i32, i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare i32 @twice(i32) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @shadow(i32, i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare i32 @entry() unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @malloc_test(i32, i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @setmem(i32, i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @lvalue(i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @swap(i32*, i32*) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @partition(i32*, i32, i32) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @quickSort(i32*, i32, i32) unnamed_addr #2

; Function Attrs: nonlazybind uwtable
declare void @exprs(i32, i32*) unnamed_addr #2

; test::test_main_static
; Function Attrs: nonlazybind uwtable
declare void @_ZN4test16test_main_static17h282a5eb5a10ec82dE([0 x %"test::types::TestDescAndFn"*]* align 8, i64) unnamed_addr #2

; Function Attrs: nonlazybind
define i32 @main(i32 %0, i8** %1) unnamed_addr #15 {
top:
  %2 = load volatile i8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__rustc_debug_gdb_scripts_section__, i32 0, i32 0), align 1
  %3 = sext i32 %0 to i64
; call std::rt::lang_start
  %4 = call i64 @_ZN3std2rt10lang_start17hc5c05a1a5be45ca5E(void ()* @_ZN10misc_tests4main17h8e39a4ff71b49070E, i64 %3, i8** %1)
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #1 = { noinline nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #2 = { nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #3 = { cold noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #4 = { cold nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #8 = { nofree nosync nounwind readnone willreturn }
attributes #9 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #10 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #11 = { noreturn nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #12 = { nounwind nonlazybind uwtable "probe-stack"="__rust_probestack" "target-cpu"="x86-64" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nonlazybind }
attributes #15 = { nonlazybind "target-cpu"="x86-64" }
attributes #16 = { noreturn }
attributes #17 = { noinline }
attributes #18 = { noinline noreturn nounwind }
attributes #19 = { nounwind }

!llvm.module.flags = !{!103, !104, !105, !106, !107}
!llvm.dbg.cu = !{!108}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<std::rt::lang_start::{closure_env#0}<()> as core::ops::function::Fn<()>>::{vtable_type}", file: !2, size: 384, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !14, templateParams: !23, identifier: "dee041a15dfe076460e1ead4b963607c")
!4 = !{!5, !8, !10, !11, !12, !13}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!9 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 256)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !3, file: !2, baseType: !6, size: 64, align: 64, offset: 320)
!14 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<()>", scope: !15, file: !2, size: 64, align: 64, elements: !18, templateParams: !23, identifier: "eb9421142c7534b89a47eb687fc5227b")
!15 = !DINamespace(name: "lang_start", scope: !16)
!16 = !DINamespace(name: "rt", scope: !17)
!17 = !DINamespace(name: "std", scope: null)
!18 = !{!19}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !14, file: !2, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn()", baseType: !21, size: 64, align: 64, dwarfAddressSpace: 0)
!21 = !DISubroutineType(types: !22)
!22 = !{null}
!23 = !{}
!24 = !DIGlobalVariableExpression(var: !25, expr: !DIExpression())
!25 = distinct !DIGlobalVariable(name: "<&i32 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !26, isLocal: true, isDefinition: true)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&i32 as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !27, vtableHolder: !32, templateParams: !23, identifier: "e41da7ed75ed4863791811c5b4f5fafa")
!27 = !{!28, !29, !30, !31}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !26, file: !2, baseType: !6, size: 64, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !26, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !26, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!33 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!34 = !DIGlobalVariableExpression(var: !35, expr: !DIExpression())
!35 = distinct !DIGlobalVariable(name: "<&[i32; 10] as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !36, isLocal: true, isDefinition: true)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&[i32; 10] as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !37, vtableHolder: !42, templateParams: !23, identifier: "52e8b284be8e9634c9ba80284e386ef6")
!37 = !{!38, !39, !40, !41}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !36, file: !2, baseType: !6, size: 64, align: 64)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !36, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !36, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !36, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[i32; 10]", baseType: !43, size: 64, align: 64, dwarfAddressSpace: 0)
!43 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 320, align: 32, elements: !44)
!44 = !{!45}
!45 = !DISubrange(count: 10, lowerBound: 0)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(name: "<&() as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !48, isLocal: true, isDefinition: true)
!48 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&() as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !49, vtableHolder: !54, templateParams: !23, identifier: "b20b0bf2611b1d374904c8fc83165c49")
!49 = !{!50, !51, !52, !53}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !48, file: !2, baseType: !6, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !48, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !48, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !48, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!55 = !DIGlobalVariableExpression(var: !56, expr: !DIExpression())
!56 = distinct !DIGlobalVariable(name: "<&[i32; 3] as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !57, isLocal: true, isDefinition: true)
!57 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&[i32; 3] as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !58, vtableHolder: !63, templateParams: !23, identifier: "3da2013896f53f976662a733a7625295")
!58 = !{!59, !60, !61, !62}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !57, file: !2, baseType: !6, size: 64, align: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !57, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !57, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !57, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[i32; 3]", baseType: !64, size: 64, align: 64, dwarfAddressSpace: 0)
!64 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 96, align: 32, elements: !65)
!65 = !{!66}
!66 = !DISubrange(count: 3, lowerBound: 0)
!67 = !DIGlobalVariableExpression(var: !68, expr: !DIExpression())
!68 = distinct !DIGlobalVariable(name: "<&[i32; 1] as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !69, isLocal: true, isDefinition: true)
!69 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&[i32; 1] as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !70, vtableHolder: !75, templateParams: !23, identifier: "8c376f87b4817cf69c8f30bcf302b960")
!70 = !{!71, !72, !73, !74}
!71 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !69, file: !2, baseType: !6, size: 64, align: 64)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !69, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !69, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !69, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[i32; 1]", baseType: !76, size: 64, align: 64, dwarfAddressSpace: 0)
!76 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 32, align: 32, elements: !77)
!77 = !{!78}
!78 = !DISubrange(count: 1, lowerBound: 0)
!79 = !DIGlobalVariableExpression(var: !80, expr: !DIExpression())
!80 = distinct !DIGlobalVariable(name: "<&[i32; 5] as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !81, isLocal: true, isDefinition: true)
!81 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&[i32; 5] as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !82, vtableHolder: !87, templateParams: !23, identifier: "c4ed3819c7760df720707546a9c96eb7")
!82 = !{!83, !84, !85, !86}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !81, file: !2, baseType: !6, size: 64, align: 64)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !81, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !81, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !81, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[i32; 5]", baseType: !88, size: 64, align: 64, dwarfAddressSpace: 0)
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 160, align: 32, elements: !89)
!89 = !{!90}
!90 = !DISubrange(count: 5, lowerBound: 0)
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(name: "<&[i32; 6] as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !93, isLocal: true, isDefinition: true)
!93 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&[i32; 6] as core::fmt::Debug>::{vtable_type}", file: !2, size: 256, align: 64, flags: DIFlagArtificial, elements: !94, vtableHolder: !99, templateParams: !23, identifier: "358d88facf61ead4530386abd50fe857")
!94 = !{!95, !96, !97, !98}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !93, file: !2, baseType: !6, size: 64, align: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !93, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !93, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !93, file: !2, baseType: !6, size: 64, align: 64, offset: 192)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[i32; 6]", baseType: !100, size: 64, align: 64, dwarfAddressSpace: 0)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 192, align: 32, elements: !101)
!101 = !{!102}
!102 = !DISubrange(count: 6, lowerBound: 0)
!103 = !{i32 7, !"PIC Level", i32 2}
!104 = !{i32 7, !"PIE Level", i32 2}
!105 = !{i32 2, !"RtLibUseGOT", i32 1}
!106 = !{i32 2, !"Dwarf Version", i32 4}
!107 = !{i32 2, !"Debug Info Version", i32 3}
!108 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !109, producer: "clang LLVM (rustc version 1.65.0-nightly (d394408fb 2022-08-07))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !110, globals: !215)
!109 = !DIFile(filename: "src/lib.rs/@/1hgguzirg7c3m196", directory: "/home/calvin/git/c2rust/tests/misc")
!110 = !{!111, !181, !191, !198, !203, !209}
!111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ValidAlignEnum64", scope: !112, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagEnumClass, elements: !116)
!112 = !DINamespace(name: "valid_align", scope: !113)
!113 = !DINamespace(name: "mem", scope: !114)
!114 = !DINamespace(name: "core", scope: null)
!115 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180}
!117 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!121 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!122 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!123 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!124 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!125 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!126 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!127 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!128 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!129 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!130 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!131 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!132 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!133 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!134 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!135 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!136 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!137 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!138 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!139 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!140 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!141 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!142 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!143 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!144 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!145 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!146 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!147 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!148 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!149 = !DIEnumerator(name: "_Align1Shl32", value: 4294967296, isUnsigned: true)
!150 = !DIEnumerator(name: "_Align1Shl33", value: 8589934592, isUnsigned: true)
!151 = !DIEnumerator(name: "_Align1Shl34", value: 17179869184, isUnsigned: true)
!152 = !DIEnumerator(name: "_Align1Shl35", value: 34359738368, isUnsigned: true)
!153 = !DIEnumerator(name: "_Align1Shl36", value: 68719476736, isUnsigned: true)
!154 = !DIEnumerator(name: "_Align1Shl37", value: 137438953472, isUnsigned: true)
!155 = !DIEnumerator(name: "_Align1Shl38", value: 274877906944, isUnsigned: true)
!156 = !DIEnumerator(name: "_Align1Shl39", value: 549755813888, isUnsigned: true)
!157 = !DIEnumerator(name: "_Align1Shl40", value: 1099511627776, isUnsigned: true)
!158 = !DIEnumerator(name: "_Align1Shl41", value: 2199023255552, isUnsigned: true)
!159 = !DIEnumerator(name: "_Align1Shl42", value: 4398046511104, isUnsigned: true)
!160 = !DIEnumerator(name: "_Align1Shl43", value: 8796093022208, isUnsigned: true)
!161 = !DIEnumerator(name: "_Align1Shl44", value: 17592186044416, isUnsigned: true)
!162 = !DIEnumerator(name: "_Align1Shl45", value: 35184372088832, isUnsigned: true)
!163 = !DIEnumerator(name: "_Align1Shl46", value: 70368744177664, isUnsigned: true)
!164 = !DIEnumerator(name: "_Align1Shl47", value: 140737488355328, isUnsigned: true)
!165 = !DIEnumerator(name: "_Align1Shl48", value: 281474976710656, isUnsigned: true)
!166 = !DIEnumerator(name: "_Align1Shl49", value: 562949953421312, isUnsigned: true)
!167 = !DIEnumerator(name: "_Align1Shl50", value: 1125899906842624, isUnsigned: true)
!168 = !DIEnumerator(name: "_Align1Shl51", value: 2251799813685248, isUnsigned: true)
!169 = !DIEnumerator(name: "_Align1Shl52", value: 4503599627370496, isUnsigned: true)
!170 = !DIEnumerator(name: "_Align1Shl53", value: 9007199254740992, isUnsigned: true)
!171 = !DIEnumerator(name: "_Align1Shl54", value: 18014398509481984, isUnsigned: true)
!172 = !DIEnumerator(name: "_Align1Shl55", value: 36028797018963968, isUnsigned: true)
!173 = !DIEnumerator(name: "_Align1Shl56", value: 72057594037927936, isUnsigned: true)
!174 = !DIEnumerator(name: "_Align1Shl57", value: 144115188075855872, isUnsigned: true)
!175 = !DIEnumerator(name: "_Align1Shl58", value: 288230376151711744, isUnsigned: true)
!176 = !DIEnumerator(name: "_Align1Shl59", value: 576460752303423488, isUnsigned: true)
!177 = !DIEnumerator(name: "_Align1Shl60", value: 1152921504606846976, isUnsigned: true)
!178 = !DIEnumerator(name: "_Align1Shl61", value: 2305843009213693952, isUnsigned: true)
!179 = !DIEnumerator(name: "_Align1Shl62", value: 4611686018427387904, isUnsigned: true)
!180 = !DIEnumerator(name: "_Align1Shl63", value: 9223372036854775808, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !182, file: !2, baseType: !185, size: 8, align: 8, flags: DIFlagEnumClass, elements: !186)
!182 = !DINamespace(name: "v1", scope: !183)
!183 = !DINamespace(name: "rt", scope: !184)
!184 = !DINamespace(name: "fmt", scope: !114)
!185 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!186 = !{!187, !188, !189, !190}
!187 = !DIEnumerator(name: "Left", value: 0, isUnsigned: true)
!188 = !DIEnumerator(name: "Right", value: 1, isUnsigned: true)
!189 = !DIEnumerator(name: "Center", value: 2, isUnsigned: true)
!190 = !DIEnumerator(name: "Unknown", value: 3, isUnsigned: true)
!191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !192, file: !2, baseType: !193, size: 8, align: 8, flags: DIFlagEnumClass, elements: !194)
!192 = !DINamespace(name: "cmp", scope: !114)
!193 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!194 = !{!195, !196, !197}
!195 = !DIEnumerator(name: "Less", value: 255)
!196 = !DIEnumerator(name: "Equal", value: 0)
!197 = !DIEnumerator(name: "Greater", value: 1)
!198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_void", scope: !199, file: !2, baseType: !185, size: 8, align: 8, flags: DIFlagEnumClass, elements: !200)
!199 = !DINamespace(name: "ffi", scope: !114)
!200 = !{!201, !202}
!201 = !DIEnumerator(name: "__variant1", value: 0, isUnsigned: true)
!202 = !DIEnumerator(name: "__variant2", value: 1, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !204, file: !2, baseType: !185, size: 8, align: 8, flags: DIFlagEnumClass, elements: !205)
!204 = !DINamespace(name: "panicking", scope: !114)
!205 = !{!206, !207, !208}
!206 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!207 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!208 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !210, file: !2, baseType: !185, size: 8, align: 8, flags: DIFlagEnumClass, elements: !212)
!210 = !DINamespace(name: "raw_vec", scope: !211)
!211 = !DINamespace(name: "alloc", scope: null)
!212 = !{!213, !214}
!213 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!214 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!215 = !{!0, !24, !34, !46, !55, !67, !79, !91}
!216 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h8102e8b4a9951160E", scope: !218, file: !217, line: 770, type: !221, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !236)
!217 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "856acc92efd7925b83dd1e3c577ddbdc")
!218 = !DINamespace(name: "{impl#16}", scope: !219)
!219 = !DINamespace(name: "non_null", scope: !220)
!220 = !DINamespace(name: "ptr", scope: !114)
!221 = !DISubroutineType(types: !222)
!222 = !{!223, !229}
!223 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !219, file: !2, size: 64, align: 64, elements: !224, templateParams: !227, identifier: "3160283ea80cecf6149fff38a2e996de")
!224 = !{!225}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !223, file: !2, baseType: !226, size: 64, align: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !185, size: 64, align: 64, dwarfAddressSpace: 0)
!227 = !{!228}
!228 = !DITemplateTypeParameter(name: "T", type: !185)
!229 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !230, file: !2, size: 64, align: 64, elements: !231, templateParams: !227, identifier: "7e72c5db004520f6d0779c7d4ace2142")
!230 = !DINamespace(name: "unique", scope: !220)
!231 = !{!232, !233}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !229, file: !2, baseType: !223, size: 64, align: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !229, file: !2, baseType: !234, align: 8)
!234 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !235, file: !2, align: 8, elements: !23, templateParams: !227, identifier: "e338a8151f1037c76eadd10ab3c53972")
!235 = !DINamespace(name: "marker", scope: !114)
!236 = !{!237}
!237 = !DILocalVariable(name: "unique", arg: 1, scope: !216, file: !217, line: 770, type: !229)
!238 = !DILocation(line: 770, column: 13, scope: !216)
!239 = !DILocation(line: 773, column: 41, scope: !216)
!240 = !DILocalVariable(name: "self", scope: !241, file: !217, line: 773, type: !229, align: 8)
!241 = !DILexicalBlockFile(scope: !242, file: !217, discriminator: 0)
!242 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17ha3c07247193dff86E", scope: !229, file: !243, line: 103, type: !244, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !247)
!243 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "acdefab5f14df6e5aef1141fd6b768c9")
!244 = !DISubroutineType(types: !245)
!245 = !{!246, !229}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !185, size: 64, align: 64, dwarfAddressSpace: 0)
!247 = !{!240}
!248 = !DILocation(line: 773, column: 41, scope: !241, inlinedAt: !239)
!249 = !DILocalVariable(name: "self", scope: !250, file: !217, line: 773, type: !223, align: 8)
!250 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcc8c90d2a00f914dE", scope: !223, file: !217, line: 330, type: !251, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !253)
!251 = !DISubroutineType(types: !252)
!252 = !{!246, !223}
!253 = !{!249}
!254 = !DILocation(line: 773, column: 41, scope: !250, inlinedAt: !255)
!255 = !DILocation(line: 104, column: 9, scope: !242, inlinedAt: !239)
!256 = !DILocalVariable(name: "ptr", scope: !257, file: !217, line: 773, type: !246, align: 8)
!257 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1676b77ae4055e3cE", scope: !223, file: !217, line: 196, type: !258, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !260)
!258 = !DISubroutineType(types: !259)
!259 = !{!223, !246}
!260 = !{!256}
!261 = !DILocation(line: 773, column: 18, scope: !257, inlinedAt: !262)
!262 = !DILocation(line: 773, column: 18, scope: !216)
!263 = !DILocation(line: 774, column: 6, scope: !216)
!264 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf590d0dc0bf2911aE", scope: !266, file: !265, line: 116, type: !268, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !294)
!265 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "9cfb71cd3b32f7eb830f45a756b00675")
!266 = !DINamespace(name: "{impl#1}", scope: !267)
!267 = !DINamespace(name: "collections", scope: !211)
!268 = !DISubroutineType(types: !269)
!269 = !{!270, !273}
!270 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !267, file: !2, size: 128, align: 64, elements: !271, templateParams: !23, identifier: "9329beb58cfce2a468bff9d53d352901")
!271 = !{!272}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !270, file: !2, baseType: !273, size: 128, align: 64)
!273 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !267, file: !2, size: 128, align: 64, elements: !274, templateParams: !23, identifier: "b80f03a2018170445eea4dcb9e8ba251")
!274 = !{!275}
!275 = !DICompositeType(tag: DW_TAG_variant_part, scope: !273, file: !2, size: 128, align: 64, elements: !276, templateParams: !23, identifier: "dd437972ee979c0cb5a8f1e81729b7e4", discriminator: !293)
!276 = !{!277, !279}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !275, file: !2, baseType: !278, size: 128, align: 64, extraData: i64 0)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !273, file: !2, size: 128, align: 64, elements: !23, identifier: "9b997f4b8909a73a8576324b89f9b258")
!279 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !275, file: !2, baseType: !280, size: 128, align: 64)
!280 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !273, file: !2, size: 128, align: 64, elements: !281, templateParams: !23, identifier: "43ad075de287371ebe4e53de3e5ecf3d")
!281 = !{!282, !292}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !280, file: !2, baseType: !283, size: 128, align: 64)
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !284, file: !2, size: 128, align: 64, elements: !286, templateParams: !23, identifier: "6727bf1318ffccbbbfc5e6dc0dfc8722")
!284 = !DINamespace(name: "layout", scope: !285)
!285 = !DINamespace(name: "alloc", scope: !114)
!286 = !{!287, !288}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !283, file: !2, baseType: !9, size: 64, align: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !283, file: !2, baseType: !289, size: 64, align: 64, offset: 64)
!289 = !DICompositeType(tag: DW_TAG_structure_type, name: "ValidAlign", scope: !112, file: !2, size: 64, align: 64, elements: !290, templateParams: !23, identifier: "e392ecbcb8f7df9e6beb2b20857b4b5a")
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !289, file: !2, baseType: !111, size: 64, align: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !280, file: !2, baseType: !7, align: 8)
!293 = !DIDerivedType(tag: DW_TAG_member, scope: !273, file: !2, baseType: !115, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!294 = !{!295}
!295 = !DILocalVariable(name: "kind", arg: 1, scope: !264, file: !265, line: 116, type: !273)
!296 = !DILocation(line: 116, column: 13, scope: !264)
!297 = !DILocation(line: 117, column: 9, scope: !264)
!298 = !DILocation(line: 118, column: 6, scope: !264)
!299 = !{i64 0, i64 -9223372036854775807}
!300 = distinct !DISubprogram(name: "__rust_begin_short_backtrace<fn(), ()>", linkageName: "_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h11418466094ac077E", scope: !302, file: !301, line: 118, type: !304, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !310, retainedNodes: !306)
!301 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys_common/backtrace.rs", directory: "", checksumkind: CSK_MD5, checksum: "f7c76d4902bfcea1d96ffad8fbde919d")
!302 = !DINamespace(name: "backtrace", scope: !303)
!303 = !DINamespace(name: "sys_common", scope: !17)
!304 = !DISubroutineType(types: !305)
!305 = !{null, !20}
!306 = !{!307, !308}
!307 = !DILocalVariable(name: "f", arg: 1, scope: !300, file: !301, line: 118, type: !20)
!308 = !DILocalVariable(name: "result", scope: !309, file: !301, line: 122, type: !7, align: 1)
!309 = distinct !DILexicalBlock(scope: !300, file: !301, line: 122, column: 5)
!310 = !{!311, !312}
!311 = !DITemplateTypeParameter(name: "F", type: !20)
!312 = !DITemplateTypeParameter(name: "T", type: !7)
!313 = !DILocation(line: 122, column: 9, scope: !309)
!314 = !DILocation(line: 118, column: 43, scope: !300)
!315 = !DILocalVariable(name: "dummy", scope: !316, file: !301, line: 125, type: !7, align: 1)
!316 = !DILexicalBlockFile(scope: !317, file: !301, discriminator: 0)
!317 = distinct !DISubprogram(name: "black_box<()>", linkageName: "_ZN4core4hint9black_box17h3e0b8fc8971f09a8E", scope: !319, file: !318, line: 225, type: !320, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !322)
!318 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "b50bd4586a98539d3cdc821cfaa5e2e7")
!319 = !DINamespace(name: "hint", scope: !114)
!320 = !DISubroutineType(types: !321)
!321 = !{null, !7}
!322 = !{!315}
!323 = !{!312}
!324 = !DILocation(line: 125, column: 5, scope: !316, inlinedAt: !325)
!325 = !DILocation(line: 125, column: 5, scope: !309)
!326 = !DILocation(line: 122, column: 18, scope: !300)
!327 = !{i32 3372254}
!328 = !DILocation(line: 128, column: 2, scope: !300)
!329 = !DILocation(line: 128, column: 1, scope: !300)
!330 = !DILocation(line: 118, column: 1, scope: !300)
!331 = distinct !DISubprogram(name: "lang_start<()>", linkageName: "_ZN3std2rt10lang_start17hc5c05a1a5be45ca5E", scope: !16, file: !332, line: 139, type: !333, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !337)
!332 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "53ba40c54b421907f2e3ab22fb96d5b4")
!333 = !DISubroutineType(types: !334)
!334 = !{!335, !20, !335, !336}
!335 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const *const u8", baseType: !226, size: 64, align: 64, dwarfAddressSpace: 0)
!337 = !{!338, !339, !340, !341}
!338 = !DILocalVariable(name: "main", arg: 1, scope: !331, file: !332, line: 140, type: !20)
!339 = !DILocalVariable(name: "argc", arg: 2, scope: !331, file: !332, line: 141, type: !335)
!340 = !DILocalVariable(name: "argv", arg: 3, scope: !331, file: !332, line: 142, type: !336)
!341 = !DILocalVariable(name: "v", scope: !342, file: !332, line: 144, type: !335, align: 8)
!342 = distinct !DILexicalBlock(scope: !331, file: !332, line: 144, column: 5)
!343 = !DILocation(line: 140, column: 5, scope: !331)
!344 = !DILocation(line: 141, column: 5, scope: !331)
!345 = !DILocation(line: 142, column: 5, scope: !331)
!346 = !DILocation(line: 145, column: 10, scope: !331)
!347 = !DILocation(line: 145, column: 9, scope: !331)
!348 = !DILocation(line: 144, column: 17, scope: !331)
!349 = !DILocation(line: 144, column: 12, scope: !331)
!350 = !DILocation(line: 144, column: 12, scope: !342)
!351 = !DILocation(line: 150, column: 2, scope: !331)
!352 = distinct !DISubprogram(name: "{closure#0}<()>", linkageName: "_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h9976755c369c8586E", scope: !15, file: !332, line: 145, type: !353, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !356)
!353 = !DISubroutineType(types: !354)
!354 = !{!33, !355}
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!356 = !{!357}
!357 = !DILocalVariable(name: "main", scope: !352, file: !332, line: 140, type: !20, align: 8)
!358 = !{i64 8}
!359 = !DILocation(line: 140, column: 5, scope: !352)
!360 = !DILocalVariable(name: "self", scope: !361, file: !332, line: 145, type: !364, align: 1)
!361 = !DILexicalBlockFile(scope: !362, file: !332, discriminator: 0)
!362 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217hb17ca7004e0a6245E", scope: !364, file: !363, line: 1808, type: !375, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !377)
!363 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/process.rs", directory: "", checksumkind: CSK_MD5, checksum: "78747cd94138b7f073ffd16b64787cb4")
!364 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !365, file: !2, size: 8, align: 8, elements: !366, templateParams: !23, identifier: "65270507d071436c1dbdf6fde69e5261")
!365 = !DINamespace(name: "process", scope: !17)
!366 = !{!367}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !364, file: !2, baseType: !368, size: 8, align: 8)
!368 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExitCode", scope: !369, file: !2, size: 8, align: 8, elements: !373, templateParams: !23, identifier: "faca173619846f0e95e842844eb5af74")
!369 = !DINamespace(name: "process_common", scope: !370)
!370 = !DINamespace(name: "process", scope: !371)
!371 = !DINamespace(name: "unix", scope: !372)
!372 = !DINamespace(name: "sys", scope: !17)
!373 = !{!374}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !368, file: !2, baseType: !185, size: 8, align: 8)
!375 = !DISubroutineType(types: !376)
!376 = !{!33, !364}
!377 = !{!360}
!378 = !DILocation(line: 145, column: 18, scope: !361, inlinedAt: !379)
!379 = !DILocation(line: 145, column: 18, scope: !352)
!380 = !DILocation(line: 145, column: 77, scope: !352)
!381 = !DILocalVariable(name: "self", scope: !382, file: !332, line: 145, type: !387, align: 8)
!382 = !DILexicalBlockFile(scope: !383, file: !332, discriminator: 0)
!383 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217h564517f95c312c49E", scope: !368, file: !384, line: 485, type: !385, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !388)
!384 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/std/src/sys/unix/process/process_common.rs", directory: "", checksumkind: CSK_MD5, checksum: "0172c472c69d772c784713c132680582")
!385 = !DISubroutineType(types: !386)
!386 = !{!33, !387}
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&std::sys::unix::process::process_common::ExitCode", baseType: !368, size: 64, align: 64, dwarfAddressSpace: 0)
!388 = !{!381}
!389 = !DILocation(line: 145, column: 18, scope: !382, inlinedAt: !390)
!390 = !DILocation(line: 1809, column: 9, scope: !362, inlinedAt: !379)
!391 = !DILocation(line: 145, column: 17, scope: !352)
!392 = distinct !DISubprogram(name: "fmt<[i32; 1]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h133358f10bce4bc6E", scope: !394, file: !393, line: 2361, type: !395, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !451, retainedNodes: !448)
!393 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "18dcc19de419985ae78d2bd8ed07e5dc")
!394 = !DINamespace(name: "{impl#59}", scope: !184)
!395 = !DISubroutineType(types: !396)
!396 = !{!397, !414, !415}
!397 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !398, file: !2, size: 8, align: 8, elements: !399, templateParams: !23, identifier: "d239d58a8e95223cd52e3ad2c36d40d7")
!398 = !DINamespace(name: "result", scope: !114)
!399 = !{!400}
!400 = !DICompositeType(tag: DW_TAG_variant_part, scope: !397, file: !2, size: 8, align: 8, elements: !401, templateParams: !23, identifier: "1fa2591b965a13cd50e38802b1727ca", discriminator: !413)
!401 = !{!402, !409}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !400, file: !2, baseType: !403, size: 8, align: 8, extraData: i64 0)
!403 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !397, file: !2, size: 8, align: 8, elements: !404, templateParams: !406, identifier: "cea751326735c343faf647063a65ad14")
!404 = !{!405}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !403, file: !2, baseType: !7, align: 8, offset: 8)
!406 = !{!312, !407}
!407 = !DITemplateTypeParameter(name: "E", type: !408)
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !184, file: !2, align: 8, elements: !23, identifier: "87e319c059f1d372f32b0a49f33ec3cc")
!409 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !400, file: !2, baseType: !410, size: 8, align: 8, extraData: i64 1)
!410 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !397, file: !2, size: 8, align: 8, elements: !411, templateParams: !406, identifier: "6c6eb84ed910506586b60ba90dbaa2c")
!411 = !{!412}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !410, file: !2, baseType: !408, align: 8, offset: 8)
!413 = !DIDerivedType(tag: DW_TAG_member, scope: !397, file: !2, baseType: !185, size: 8, align: 8, flags: DIFlagArtificial)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32; 1]", baseType: !75, size: 64, align: 64, dwarfAddressSpace: 0)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !416, size: 64, align: 64, dwarfAddressSpace: 0)
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !184, file: !2, size: 512, align: 64, elements: !417, templateParams: !23, identifier: "6e9ffaec9b89ebb810272bb66e7b2042")
!417 = !{!418, !420, !422, !423, !438, !439}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !416, file: !2, baseType: !419, size: 32, align: 32, offset: 384)
!419 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !416, file: !2, baseType: !421, size: 32, align: 32, offset: 416)
!421 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !416, file: !2, baseType: !181, size: 8, align: 8, offset: 448)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !416, file: !2, baseType: !424, size: 128, align: 64)
!424 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !425, file: !2, size: 128, align: 64, elements: !426, templateParams: !23, identifier: "5190463b0687da274ab794ccaf9d1fd8")
!425 = !DINamespace(name: "option", scope: !114)
!426 = !{!427}
!427 = !DICompositeType(tag: DW_TAG_variant_part, scope: !424, file: !2, size: 128, align: 64, elements: !428, templateParams: !23, identifier: "db59d501e5f76645f4edce4cdbfeb328", discriminator: !437)
!428 = !{!429, !433}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !427, file: !2, baseType: !430, size: 128, align: 64, extraData: i64 0)
!430 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !424, file: !2, size: 128, align: 64, elements: !23, templateParams: !431, identifier: "a1c5f3dead8f24ccdada7bc2feedd145")
!431 = !{!432}
!432 = !DITemplateTypeParameter(name: "T", type: !9)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !427, file: !2, baseType: !434, size: 128, align: 64, extraData: i64 1)
!434 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !424, file: !2, size: 128, align: 64, elements: !435, templateParams: !431, identifier: "3ad875242c049b8143d7577f4eb10d1a")
!435 = !{!436}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !434, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !424, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !416, file: !2, baseType: !424, size: 128, align: 64, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !416, file: !2, baseType: !440, size: 128, align: 64, offset: 256)
!440 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !441, templateParams: !23, identifier: "3d4f80cd5361aaff4f795dd09efb8db1")
!441 = !{!442, !445}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !440, file: !2, baseType: !443, size: 64, align: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64, align: 64, dwarfAddressSpace: 0)
!444 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !23, identifier: "abb712b259efc5e79bb67900edf24920")
!445 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !440, file: !2, baseType: !446, size: 64, align: 64, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !447, size: 64, align: 64, dwarfAddressSpace: 0)
!447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 64, elements: !65)
!448 = !{!449, !450}
!449 = !DILocalVariable(name: "self", arg: 1, scope: !392, file: !393, line: 2361, type: !414)
!450 = !DILocalVariable(name: "f", arg: 2, scope: !392, file: !393, line: 2361, type: !415)
!451 = !{!452}
!452 = !DITemplateTypeParameter(name: "T", type: !76)
!453 = !DILocation(line: 2361, column: 20, scope: !392)
!454 = !DILocation(line: 2361, column: 27, scope: !392)
!455 = !DILocation(line: 2361, column: 71, scope: !392)
!456 = !{i64 4}
!457 = !DILocation(line: 2361, column: 62, scope: !392)
!458 = !DILocation(line: 2361, column: 84, scope: !392)
!459 = distinct !DISubprogram(name: "fmt<i32>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h325bf7e19275887aE", scope: !394, file: !393, line: 2361, type: !460, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !463)
!460 = !DISubroutineType(types: !461)
!461 = !{!397, !462, !415}
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&i32", baseType: !32, size: 64, align: 64, dwarfAddressSpace: 0)
!463 = !{!464, !465}
!464 = !DILocalVariable(name: "self", arg: 1, scope: !459, file: !393, line: 2361, type: !462)
!465 = !DILocalVariable(name: "f", arg: 2, scope: !459, file: !393, line: 2361, type: !415)
!466 = !{!467}
!467 = !DITemplateTypeParameter(name: "T", type: !33)
!468 = !DILocation(line: 2361, column: 20, scope: !459)
!469 = !DILocation(line: 2361, column: 27, scope: !459)
!470 = !DILocation(line: 2361, column: 71, scope: !459)
!471 = !DILocation(line: 2361, column: 62, scope: !459)
!472 = !DILocation(line: 2361, column: 84, scope: !459)
!473 = distinct !DISubprogram(name: "fmt<[i32; 3]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h588532a1b3e46bfcE", scope: !394, file: !393, line: 2361, type: !474, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !480, retainedNodes: !477)
!474 = !DISubroutineType(types: !475)
!475 = !{!397, !476, !415}
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32; 3]", baseType: !63, size: 64, align: 64, dwarfAddressSpace: 0)
!477 = !{!478, !479}
!478 = !DILocalVariable(name: "self", arg: 1, scope: !473, file: !393, line: 2361, type: !476)
!479 = !DILocalVariable(name: "f", arg: 2, scope: !473, file: !393, line: 2361, type: !415)
!480 = !{!481}
!481 = !DITemplateTypeParameter(name: "T", type: !64)
!482 = !DILocation(line: 2361, column: 20, scope: !473)
!483 = !DILocation(line: 2361, column: 27, scope: !473)
!484 = !DILocation(line: 2361, column: 71, scope: !473)
!485 = !DILocation(line: 2361, column: 62, scope: !473)
!486 = !DILocation(line: 2361, column: 84, scope: !473)
!487 = distinct !DISubprogram(name: "fmt<()>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h70f892cf23d84968E", scope: !394, file: !393, line: 2361, type: !488, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !491)
!488 = !DISubroutineType(types: !489)
!489 = !{!397, !490, !415}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&()", baseType: !54, size: 64, align: 64, dwarfAddressSpace: 0)
!491 = !{!492, !493}
!492 = !DILocalVariable(name: "self", arg: 1, scope: !487, file: !393, line: 2361, type: !490)
!493 = !DILocalVariable(name: "f", arg: 2, scope: !487, file: !393, line: 2361, type: !415)
!494 = !DILocation(line: 2361, column: 20, scope: !487)
!495 = !DILocation(line: 2361, column: 27, scope: !487)
!496 = !DILocation(line: 2361, column: 71, scope: !487)
!497 = !{i64 1}
!498 = !DILocation(line: 2361, column: 62, scope: !487)
!499 = !DILocation(line: 2361, column: 84, scope: !487)
!500 = distinct !DISubprogram(name: "fmt<[i32; 10]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8453208e0de1799fE", scope: !394, file: !393, line: 2361, type: !501, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !507, retainedNodes: !504)
!501 = !DISubroutineType(types: !502)
!502 = !{!397, !503, !415}
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32; 10]", baseType: !42, size: 64, align: 64, dwarfAddressSpace: 0)
!504 = !{!505, !506}
!505 = !DILocalVariable(name: "self", arg: 1, scope: !500, file: !393, line: 2361, type: !503)
!506 = !DILocalVariable(name: "f", arg: 2, scope: !500, file: !393, line: 2361, type: !415)
!507 = !{!508}
!508 = !DITemplateTypeParameter(name: "T", type: !43)
!509 = !DILocation(line: 2361, column: 20, scope: !500)
!510 = !DILocation(line: 2361, column: 27, scope: !500)
!511 = !DILocation(line: 2361, column: 71, scope: !500)
!512 = !DILocation(line: 2361, column: 62, scope: !500)
!513 = !DILocation(line: 2361, column: 84, scope: !500)
!514 = distinct !DISubprogram(name: "fmt<[i32; 6]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha853fb7d2d322f68E", scope: !394, file: !393, line: 2361, type: !515, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !521, retainedNodes: !518)
!515 = !DISubroutineType(types: !516)
!516 = !{!397, !517, !415}
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32; 6]", baseType: !99, size: 64, align: 64, dwarfAddressSpace: 0)
!518 = !{!519, !520}
!519 = !DILocalVariable(name: "self", arg: 1, scope: !514, file: !393, line: 2361, type: !517)
!520 = !DILocalVariable(name: "f", arg: 2, scope: !514, file: !393, line: 2361, type: !415)
!521 = !{!522}
!522 = !DITemplateTypeParameter(name: "T", type: !100)
!523 = !DILocation(line: 2361, column: 20, scope: !514)
!524 = !DILocation(line: 2361, column: 27, scope: !514)
!525 = !DILocation(line: 2361, column: 71, scope: !514)
!526 = !DILocation(line: 2361, column: 62, scope: !514)
!527 = !DILocation(line: 2361, column: 84, scope: !514)
!528 = distinct !DISubprogram(name: "fmt<[i32; 5]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb4053abcc1bbde9bE", scope: !394, file: !393, line: 2361, type: !529, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !535, retainedNodes: !532)
!529 = !DISubroutineType(types: !530)
!530 = !{!397, !531, !415}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32; 5]", baseType: !87, size: 64, align: 64, dwarfAddressSpace: 0)
!532 = !{!533, !534}
!533 = !DILocalVariable(name: "self", arg: 1, scope: !528, file: !393, line: 2361, type: !531)
!534 = !DILocalVariable(name: "f", arg: 2, scope: !528, file: !393, line: 2361, type: !415)
!535 = !{!536}
!536 = !DITemplateTypeParameter(name: "T", type: !88)
!537 = !DILocation(line: 2361, column: 20, scope: !528)
!538 = !DILocation(line: 2361, column: 27, scope: !528)
!539 = !DILocation(line: 2361, column: 71, scope: !528)
!540 = !DILocation(line: 2361, column: 62, scope: !528)
!541 = !DILocation(line: 2361, column: 84, scope: !528)
!542 = distinct !DISubprogram(name: "fmt<[i32]>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hfef8a23a17576969E", scope: !394, file: !393, line: 2361, type: !543, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !551)
!543 = !DISubroutineType(types: !544)
!544 = !{!397, !545, !415}
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[i32]", baseType: !546, size: 64, align: 64, dwarfAddressSpace: 0)
!546 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[i32]", file: !2, size: 128, align: 64, elements: !547, templateParams: !23, identifier: "8022034f3dbe6b09f9f0a7f6cd6bb480")
!547 = !{!548, !550}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !546, file: !2, baseType: !549, size: 64, align: 64)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !546, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!551 = !{!552, !553}
!552 = !DILocalVariable(name: "self", arg: 1, scope: !542, file: !393, line: 2361, type: !545)
!553 = !DILocalVariable(name: "f", arg: 2, scope: !542, file: !393, line: 2361, type: !415)
!554 = !DILocation(line: 2361, column: 20, scope: !542)
!555 = !DILocation(line: 2361, column: 27, scope: !542)
!556 = !DILocation(line: 2361, column: 71, scope: !542)
!557 = !DILocation(line: 2361, column: 62, scope: !542)
!558 = !DILocation(line: 2361, column: 84, scope: !542)
!559 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17hcd3e8f8771e87a4cE", scope: !560, file: !393, line: 2594, type: !561, scopeLine: 2594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !563)
!560 = !DINamespace(name: "{impl#27}", scope: !184)
!561 = !DISubroutineType(types: !562)
!562 = !{!397, !54, !415}
!563 = !{!564, !565}
!564 = !DILocalVariable(name: "self", arg: 1, scope: !559, file: !393, line: 2594, type: !54)
!565 = !DILocalVariable(name: "f", arg: 2, scope: !559, file: !393, line: 2594, type: !415)
!566 = !DILocation(line: 2594, column: 12, scope: !559)
!567 = !DILocation(line: 2594, column: 19, scope: !559)
!568 = !DILocation(line: 2595, column: 9, scope: !559)
!569 = !DILocation(line: 2596, column: 6, scope: !559)
!570 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN47_$LT$i32$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h07e2e83ce07bcf79E", scope: !572, file: !571, line: 189, type: !575, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !577)
!571 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "a5e6372fb466d62a237d46ecffb4676a")
!572 = !DINamespace(name: "{impl#34}", scope: !573)
!573 = !DINamespace(name: "range", scope: !574)
!574 = !DINamespace(name: "iter", scope: !114)
!575 = !DISubroutineType(types: !576)
!576 = !{!33, !33, !9}
!577 = !{!578, !579}
!578 = !DILocalVariable(name: "start", arg: 1, scope: !570, file: !571, line: 189, type: !33)
!579 = !DILocalVariable(name: "n", arg: 2, scope: !570, file: !571, line: 189, type: !9)
!580 = !DILocation(line: 189, column: 37, scope: !570)
!581 = !DILocation(line: 189, column: 50, scope: !570)
!582 = !DILocation(line: 191, column: 22, scope: !570)
!583 = !DILocalVariable(name: "self", scope: !584, file: !571, line: 191, type: !33, align: 4)
!584 = !DILexicalBlockFile(scope: !585, file: !571, discriminator: 0)
!585 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$13unchecked_add17h38773511627d7785E", scope: !587, file: !586, line: 453, type: !589, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !591)
!586 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "1d4cee595ea848b5e7eb7a8ae38f492d")
!587 = !DINamespace(name: "{impl#2}", scope: !588)
!588 = !DINamespace(name: "num", scope: !114)
!589 = !DISubroutineType(types: !590)
!590 = !{!33, !33, !33}
!591 = !{!583, !592}
!592 = !DILocalVariable(name: "rhs", scope: !584, file: !571, line: 191, type: !33, align: 4)
!593 = !DILocation(line: 191, column: 22, scope: !584, inlinedAt: !582)
!594 = !DILocation(line: 191, column: 42, scope: !570)
!595 = !DILocation(line: 192, column: 10, scope: !570)
!596 = distinct !DISubprogram(name: "fmt<i32>", linkageName: "_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17hf1ad82ba7d10e26aE", scope: !597, file: !393, line: 2586, type: !598, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !600)
!597 = !DINamespace(name: "{impl#26}", scope: !184)
!598 = !DISubroutineType(types: !599)
!599 = !{!397, !546, !415}
!600 = !{!601, !602}
!601 = !DILocalVariable(name: "self", arg: 1, scope: !596, file: !393, line: 2586, type: !546)
!602 = !DILocalVariable(name: "f", arg: 2, scope: !596, file: !393, line: 2586, type: !415)
!603 = !DILocation(line: 2586, column: 12, scope: !596)
!604 = !DILocation(line: 2586, column: 19, scope: !596)
!605 = !DILocation(line: 2587, column: 9, scope: !596)
!606 = !DILocation(line: 2587, column: 32, scope: !596)
!607 = !DILocalVariable(name: "self", scope: !608, file: !393, line: 2587, type: !546, align: 8)
!608 = !DILexicalBlockFile(scope: !609, file: !393, discriminator: 0)
!609 = distinct !DISubprogram(name: "iter<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h356e437823ae69e3E", scope: !611, file: !610, line: 734, type: !613, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !628)
!610 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "7e4712ab5341970456c5be6b0829b712")
!611 = !DINamespace(name: "{impl#0}", scope: !612)
!612 = !DINamespace(name: "slice", scope: !114)
!613 = !DISubroutineType(types: !614)
!614 = !{!615, !546}
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<i32>", scope: !616, file: !2, size: 128, align: 64, elements: !617, templateParams: !466, identifier: "96f846a3802ea0a0ed3707bd3e3e325d")
!616 = !DINamespace(name: "iter", scope: !612)
!617 = !{!618, !623, !624}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !615, file: !2, baseType: !619, size: 64, align: 64)
!619 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<i32>", scope: !219, file: !2, size: 64, align: 64, elements: !620, templateParams: !466, identifier: "aa602cb571ba548f8a76bb877f42f41a")
!620 = !{!621}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !619, file: !2, baseType: !622, size: 64, align: 64)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i32", baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !615, file: !2, baseType: !622, size: 64, align: 64, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !615, file: !2, baseType: !625, align: 8)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&i32>", scope: !235, file: !2, align: 8, elements: !23, templateParams: !626, identifier: "9ba0fcf44e40729d0e472435eb55ec0")
!626 = !{!627}
!627 = !DITemplateTypeParameter(name: "T", type: !32)
!628 = !{!607}
!629 = !DILocation(line: 2587, column: 32, scope: !608, inlinedAt: !606)
!630 = !DILocation(line: 2588, column: 6, scope: !596)
!631 = distinct !DISubprogram(name: "clone<i32, 4>", linkageName: "_ZN49_$LT$T$u20$as$u20$core..array..SpecArrayClone$GT$5clone17h07d9554687c29659E", scope: !633, file: !632, line: 366, type: !635, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !641)
!632 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e237aff39bff30ac55984ee183267020")
!633 = !DINamespace(name: "{impl#22}", scope: !634)
!634 = !DINamespace(name: "array", scope: !114)
!635 = !DISubroutineType(types: !636)
!636 = !{!637, !640}
!637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 128, align: 32, elements: !638)
!638 = !{!639}
!639 = !DISubrange(count: 4, lowerBound: 0)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[i32; 4]", baseType: !637, size: 64, align: 64, dwarfAddressSpace: 0)
!641 = !{!642}
!642 = !DILocalVariable(name: "array", arg: 1, scope: !631, file: !632, line: 366, type: !640)
!643 = !DILocation(line: 366, column: 30, scope: !631)
!644 = !DILocation(line: 367, column: 9, scope: !631)
!645 = !DILocation(line: 368, column: 6, scope: !631)
!646 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h59e7e956e21d8993E", scope: !647, file: !571, line: 189, type: !648, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !650)
!647 = !DINamespace(name: "{impl#37}", scope: !573)
!648 = !DISubroutineType(types: !649)
!649 = !{!9, !9, !9}
!650 = !{!651, !652}
!651 = !DILocalVariable(name: "start", arg: 1, scope: !646, file: !571, line: 189, type: !9)
!652 = !DILocalVariable(name: "n", arg: 2, scope: !646, file: !571, line: 189, type: !9)
!653 = !DILocation(line: 189, column: 37, scope: !646)
!654 = !DILocation(line: 189, column: 50, scope: !646)
!655 = !DILocation(line: 191, column: 22, scope: !646)
!656 = !DILocalVariable(name: "self", scope: !657, file: !571, line: 191, type: !9, align: 8)
!657 = !DILexicalBlockFile(scope: !658, file: !571, discriminator: 0)
!658 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h248c853f68583999E", scope: !660, file: !659, line: 463, type: !648, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !661)
!659 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "510cfe98475d713af9de72a29146058c")
!660 = !DINamespace(name: "{impl#11}", scope: !588)
!661 = !{!656, !662}
!662 = !DILocalVariable(name: "rhs", scope: !657, file: !571, line: 191, type: !9, align: 8)
!663 = !DILocation(line: 191, column: 22, scope: !657, inlinedAt: !655)
!664 = !DILocation(line: 191, column: 42, scope: !646)
!665 = !DILocation(line: 192, column: 10, scope: !646)
!666 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17hb944eef8168f423aE", scope: !668, file: !667, line: 800, type: !648, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !672, retainedNodes: !669)
!667 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "381f61764ec5ac4111e955260ff27c96")
!668 = !DINamespace(name: "Ord", scope: !192)
!669 = !{!670, !671}
!670 = !DILocalVariable(name: "self", arg: 1, scope: !666, file: !667, line: 800, type: !9)
!671 = !DILocalVariable(name: "other", arg: 2, scope: !666, file: !667, line: 800, type: !9)
!672 = !{!673}
!673 = !DITemplateTypeParameter(name: "Self", type: !9)
!674 = !DILocation(line: 800, column: 12, scope: !666)
!675 = !DILocation(line: 800, column: 18, scope: !666)
!676 = !DILocation(line: 808, column: 15, scope: !666)
!677 = !{i8 -1, i8 2}
!678 = !DILocation(line: 812, column: 5, scope: !666)
!679 = !DILocation(line: 808, column: 9, scope: !666)
!680 = !{i8 0, i8 2}
!681 = !DILocation(line: 809, column: 49, scope: !666)
!682 = !DILocation(line: 810, column: 34, scope: !666)
!683 = !DILocation(line: 800, column: 5, scope: !666)
!684 = !DILocation(line: 812, column: 6, scope: !666)
!685 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h05ae9de739f93db7E", scope: !686, file: !667, line: 1436, type: !688, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !691)
!686 = !DINamespace(name: "{impl#55}", scope: !687)
!687 = !DINamespace(name: "impls", scope: !192)
!688 = !DISubroutineType(types: !689)
!689 = !{!191, !690, !690}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!691 = !{!692, !693}
!692 = !DILocalVariable(name: "self", arg: 1, scope: !685, file: !667, line: 1436, type: !690)
!693 = !DILocalVariable(name: "other", arg: 2, scope: !685, file: !667, line: 1436, type: !690)
!694 = !DILocation(line: 1436, column: 24, scope: !685)
!695 = !DILocation(line: 1436, column: 31, scope: !685)
!696 = !DILocation(line: 1439, column: 24, scope: !685)
!697 = !DILocation(line: 1439, column: 32, scope: !685)
!698 = !DILocation(line: 1440, column: 29, scope: !685)
!699 = !DILocation(line: 1440, column: 38, scope: !685)
!700 = !DILocation(line: 1439, column: 41, scope: !685)
!701 = !DILocation(line: 1439, column: 21, scope: !685)
!702 = !DILocation(line: 1442, column: 18, scope: !685)
!703 = !DILocation(line: 1441, column: 28, scope: !685)
!704 = !DILocation(line: 1440, column: 26, scope: !685)
!705 = !DILocation(line: 1440, column: 47, scope: !685)
!706 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$i32$GT$2lt17h4a8da4c42e37e412E", scope: !707, file: !667, line: 1423, type: !708, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !711)
!707 = !DINamespace(name: "{impl#72}", scope: !687)
!708 = !DISubroutineType(types: !709)
!709 = !{!710, !32, !32}
!710 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!711 = !{!712, !713}
!712 = !DILocalVariable(name: "self", arg: 1, scope: !706, file: !667, line: 1423, type: !32)
!713 = !DILocalVariable(name: "other", arg: 2, scope: !706, file: !667, line: 1423, type: !32)
!714 = !DILocation(line: 1423, column: 23, scope: !706)
!715 = !DILocation(line: 1423, column: 30, scope: !706)
!716 = !DILocation(line: 1423, column: 52, scope: !706)
!717 = !DILocation(line: 1423, column: 62, scope: !706)
!718 = !DILocation(line: 1423, column: 72, scope: !706)
!719 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls57_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$usize$GT$2lt17h803e94e7826b17f6E", scope: !720, file: !667, line: 1423, type: !721, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !723)
!720 = !DINamespace(name: "{impl#54}", scope: !687)
!721 = !DISubroutineType(types: !722)
!722 = !{!710, !690, !690}
!723 = !{!724, !725}
!724 = !DILocalVariable(name: "self", arg: 1, scope: !719, file: !667, line: 1423, type: !690)
!725 = !DILocalVariable(name: "other", arg: 2, scope: !719, file: !667, line: 1423, type: !690)
!726 = !DILocation(line: 1423, column: 23, scope: !719)
!727 = !DILocation(line: 1423, column: 30, scope: !719)
!728 = !DILocation(line: 1423, column: 52, scope: !719)
!729 = !DILocation(line: 1423, column: 62, scope: !719)
!730 = !DILocation(line: 1423, column: 72, scope: !719)
!731 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h9b35e2cee4cb8532E", scope: !732, file: !667, line: 1345, type: !733, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !735)
!732 = !DINamespace(name: "{impl#0}", scope: !687)
!733 = !DISubroutineType(types: !734)
!734 = !{!710, !54, !54}
!735 = !{!736, !737}
!736 = !DILocalVariable(name: "self", arg: 1, scope: !731, file: !667, line: 1345, type: !54)
!737 = !DILocalVariable(name: "_other", arg: 2, scope: !731, file: !667, line: 1345, type: !54)
!738 = !DILocation(line: 1345, column: 15, scope: !731)
!739 = !DILocation(line: 1345, column: 22, scope: !731)
!740 = !DILocation(line: 1347, column: 10, scope: !731)
!741 = distinct !DISubprogram(name: "new_display<usize>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17hdc27862aaaff6c82E", scope: !742, file: !393, line: 318, type: !752, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !754)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentV1", scope: !184, file: !2, size: 128, align: 64, elements: !743, templateParams: !23, identifier: "753c369e46bf484710f4d769a3fba395")
!743 = !{!744, !748}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !742, file: !2, baseType: !745, size: 64, align: 64)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::{extern#0}::Opaque", baseType: !746, size: 64, align: 64, dwarfAddressSpace: 0)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "Opaque", scope: !747, file: !2, align: 8, elements: !23, identifier: "83e8d27b51d2e55ae9422e57e00c6cd7")
!747 = !DINamespace(name: "{extern#0}", scope: !184)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !742, file: !2, baseType: !749, size: 64, align: 64, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&core::fmt::{extern#0}::Opaque, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !750, size: 64, align: 64, dwarfAddressSpace: 0)
!750 = !DISubroutineType(types: !751)
!751 = !{!397, !745, !415}
!752 = !DISubroutineType(types: !753)
!753 = !{!742, !690}
!754 = !{!755}
!755 = !DILocalVariable(name: "x", arg: 1, scope: !741, file: !393, line: 318, type: !690)
!756 = !DILocation(line: 318, column: 30, scope: !741)
!757 = !DILocation(line: 319, column: 23, scope: !741)
!758 = !DILocalVariable(name: "x", scope: !759, file: !393, line: 319, type: !690, align: 8)
!759 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3fmt10ArgumentV13new17h4bf2563cab0332e5E", scope: !742, file: !393, line: 329, type: !760, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !765)
!760 = !DISubroutineType(types: !761)
!761 = !{!742, !690, !762}
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !763, size: 64, align: 64, dwarfAddressSpace: 0)
!763 = !DISubroutineType(types: !764)
!764 = !{!397, !690, !415}
!765 = !{!758, !766}
!766 = !DILocalVariable(name: "f", scope: !759, file: !393, line: 319, type: !762, align: 8)
!767 = !DILocation(line: 319, column: 13, scope: !759, inlinedAt: !768)
!768 = !DILocation(line: 319, column: 13, scope: !741)
!769 = !DILocation(line: 319, column: 26, scope: !741)
!770 = !DILocation(line: 320, column: 10, scope: !741)
!771 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num50_$LT$impl$u20$core..fmt..Debug$u20$for$u20$i32$GT$3fmt17hf0d3aeeaba475001E", scope: !773, file: !772, line: 185, type: !775, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !777)
!772 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "6661e46781fcd4293e0f5caf32f3d8ca")
!773 = !DINamespace(name: "{impl#80}", scope: !774)
!774 = !DINamespace(name: "num", scope: !184)
!775 = !DISubroutineType(types: !776)
!776 = !{!397, !32, !415}
!777 = !{!778, !779}
!778 = !DILocalVariable(name: "self", arg: 1, scope: !771, file: !772, line: 185, type: !32)
!779 = !DILocalVariable(name: "f", arg: 2, scope: !771, file: !772, line: 185, type: !415)
!780 = !DILocation(line: 185, column: 20, scope: !771)
!781 = !DILocation(line: 185, column: 27, scope: !771)
!782 = !DILocation(line: 186, column: 20, scope: !771)
!783 = !DILocation(line: 188, column: 27, scope: !771)
!784 = !DILocation(line: 187, column: 21, scope: !771)
!785 = !DILocation(line: 186, column: 17, scope: !771)
!786 = !DILocation(line: 193, column: 14, scope: !771)
!787 = !DILocation(line: 191, column: 21, scope: !771)
!788 = !DILocation(line: 189, column: 21, scope: !771)
!789 = !DILocation(line: 188, column: 24, scope: !771)
!790 = distinct !DISubprogram(name: "entries<&i32, core::slice::iter::Iter<i32>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17he033867fae65c462E", scope: !792, file: !791, line: 637, type: !801, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !811, retainedNodes: !804)
!791 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "e84d8f928a38ea86b324aa7d6aa80df8")
!792 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !793, file: !2, size: 128, align: 64, elements: !794, templateParams: !23, identifier: "ae111038d86e71a88d7f5c91efdbb7c8")
!793 = !DINamespace(name: "builders", scope: !184)
!794 = !{!795}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !792, file: !2, baseType: !796, size: 128, align: 64)
!796 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !793, file: !2, size: 128, align: 64, elements: !797, templateParams: !23, identifier: "a1aef014c36393c5f380a5492df722f1")
!797 = !{!798, !799, !800}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !796, file: !2, baseType: !415, size: 64, align: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !796, file: !2, baseType: !397, size: 8, align: 8, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !796, file: !2, baseType: !710, size: 8, align: 8, offset: 72)
!801 = !DISubroutineType(types: !802)
!802 = !{!803, !803, !615}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !792, size: 64, align: 64, dwarfAddressSpace: 0)
!804 = !{!805, !806, !807, !809}
!805 = !DILocalVariable(name: "self", arg: 1, scope: !790, file: !791, line: 637, type: !803)
!806 = !DILocalVariable(name: "entries", arg: 2, scope: !790, file: !791, line: 637, type: !615)
!807 = !DILocalVariable(name: "iter", scope: !808, file: !791, line: 642, type: !615, align: 8)
!808 = distinct !DILexicalBlock(scope: !790, file: !791, line: 642, column: 9)
!809 = !DILocalVariable(name: "entry", scope: !810, file: !791, line: 642, type: !32, align: 8)
!810 = distinct !DILexicalBlock(scope: !808, file: !791, line: 642, column: 30)
!811 = !{!812, !813}
!812 = !DITemplateTypeParameter(name: "D", type: !32)
!813 = !DITemplateTypeParameter(name: "I", type: !615)
!814 = !DILocation(line: 637, column: 26, scope: !790)
!815 = !DILocation(line: 637, column: 37, scope: !790)
!816 = !DILocation(line: 642, column: 22, scope: !808)
!817 = !DILocation(line: 642, column: 13, scope: !810)
!818 = !DILocation(line: 642, column: 22, scope: !790)
!819 = !DILocation(line: 642, column: 9, scope: !808)
!820 = !DILocation(line: 642, column: 9, scope: !790)
!821 = !DILocation(line: 642, column: 13, scope: !808)
!822 = !DILocation(line: 643, column: 24, scope: !810)
!823 = !DILocation(line: 643, column: 13, scope: !810)
!824 = !DILocation(line: 644, column: 9, scope: !808)
!825 = !DILocation(line: 637, column: 5, scope: !790)
!826 = !DILocation(line: 646, column: 6, scope: !790)
!827 = distinct !DISubprogram(name: "new_v1", linkageName: "_ZN4core3fmt9Arguments6new_v117h090b18600dc0d53dE", scope: !828, file: !393, line: 390, type: !892, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !894)
!828 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !184, file: !2, size: 384, align: 64, elements: !829, templateParams: !23, identifier: "7e7034295abae01651800c8eb0e9b712")
!829 = !{!830, !841, !886}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !828, file: !2, baseType: !831, size: 128, align: 64)
!831 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 128, align: 64, elements: !832, templateParams: !23, identifier: "120d786d314e2730a5f45c5e7e56f7d")
!832 = !{!833, !840}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !831, file: !2, baseType: !834, size: 64, align: 64)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64, align: 64, dwarfAddressSpace: 0)
!835 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !836, templateParams: !23, identifier: "c603ebb2af364502ef89131a86c6ad9b")
!836 = !{!837, !839}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !835, file: !2, baseType: !838, size: 64, align: 64)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64, align: 64, dwarfAddressSpace: 0)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !835, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !831, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !828, file: !2, baseType: !842, size: 128, align: 64, offset: 128)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::v1::Argument]>", scope: !425, file: !2, size: 128, align: 64, elements: !843, templateParams: !23, identifier: "bb69cbb99024f47dbb54317ba8130317")
!843 = !{!844}
!844 = !DICompositeType(tag: DW_TAG_variant_part, scope: !842, file: !2, size: 128, align: 64, elements: !845, templateParams: !23, identifier: "ce02297fe7dbf35f547cc88f131a39b4", discriminator: !885)
!845 = !{!846, !881}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !844, file: !2, baseType: !847, size: 128, align: 64, extraData: i64 0)
!847 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !842, file: !2, size: 128, align: 64, elements: !23, templateParams: !848, identifier: "742dbe7e160661d8ca36fcfff2574850")
!848 = !{!849}
!849 = !DITemplateTypeParameter(name: "T", type: !850)
!850 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::v1::Argument]", file: !2, size: 128, align: 64, elements: !851, templateParams: !23, identifier: "5ac19a4b2fedc0a38075c82d3d698a2e")
!851 = !{!852, !880}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !850, file: !2, baseType: !853, size: 64, align: 64)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64, align: 64, dwarfAddressSpace: 0)
!854 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !182, file: !2, size: 448, align: 64, elements: !855, templateParams: !23, identifier: "fbba22b504f631aebebe5f9a731b4661")
!855 = !{!856, !857}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !854, file: !2, baseType: !9, size: 64, align: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !854, file: !2, baseType: !858, size: 384, align: 64, offset: 64)
!858 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormatSpec", scope: !182, file: !2, size: 384, align: 64, elements: !859, templateParams: !23, identifier: "a89ae7a13a1def66296bab98052f520a")
!859 = !{!860, !861, !862, !863, !879}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !858, file: !2, baseType: !421, size: 32, align: 32, offset: 256)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !858, file: !2, baseType: !181, size: 8, align: 8, offset: 320)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !858, file: !2, baseType: !419, size: 32, align: 32, offset: 288)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !858, file: !2, baseType: !864, size: 128, align: 64)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !182, file: !2, size: 128, align: 64, elements: !865, templateParams: !23, identifier: "41c6e2a1db95b605a371a090678c1fd8")
!865 = !{!866}
!866 = !DICompositeType(tag: DW_TAG_variant_part, scope: !864, file: !2, size: 128, align: 64, elements: !867, templateParams: !23, identifier: "eff7cdccebc4ba23639a28669cbce86", discriminator: !878)
!867 = !{!868, !872, !876}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !866, file: !2, baseType: !869, size: 128, align: 64, extraData: i64 0)
!869 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !864, file: !2, size: 128, align: 64, elements: !870, templateParams: !23, identifier: "927d86c22d9994b767e51a58b20493")
!870 = !{!871}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !869, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !866, file: !2, baseType: !873, size: 128, align: 64, extraData: i64 1)
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !864, file: !2, size: 128, align: 64, elements: !874, templateParams: !23, identifier: "ce4b8bb3a4200a86c4c06a7570d8ee71")
!874 = !{!875}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !873, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !866, file: !2, baseType: !877, size: 128, align: 64, extraData: i64 2)
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !864, file: !2, size: 128, align: 64, elements: !23, identifier: "b155566b9bd0239ef48aa3b8bcdef75b")
!878 = !DIDerivedType(tag: DW_TAG_member, scope: !864, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !858, file: !2, baseType: !864, size: 128, align: 64, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !850, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !844, file: !2, baseType: !882, size: 128, align: 64)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !842, file: !2, size: 128, align: 64, elements: !883, templateParams: !848, identifier: "17f2fc106094349c7673abca4839c97a")
!883 = !{!884}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !882, file: !2, baseType: !850, size: 128, align: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, scope: !842, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !828, file: !2, baseType: !887, size: 128, align: 64, offset: 256)
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::ArgumentV1]", file: !2, size: 128, align: 64, elements: !888, templateParams: !23, identifier: "c78588d5439c4eaa18fbaab99f079cbf")
!888 = !{!889, !891}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !887, file: !2, baseType: !890, size: 64, align: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64, align: 64, dwarfAddressSpace: 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !887, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!828, !831, !887}
!894 = !{!895, !896}
!895 = !DILocalVariable(name: "pieces", arg: 1, scope: !827, file: !393, line: 390, type: !831)
!896 = !DILocalVariable(name: "args", arg: 2, scope: !827, file: !393, line: 390, type: !887)
!897 = !DILocation(line: 390, column: 25, scope: !827)
!898 = !DILocation(line: 390, column: 53, scope: !827)
!899 = !DILocation(line: 391, column: 12, scope: !827)
!900 = !DILocation(line: 391, column: 56, scope: !827)
!901 = !DILocation(line: 391, column: 41, scope: !827)
!902 = !DILocation(line: 394, column: 34, scope: !827)
!903 = !DILocation(line: 394, column: 9, scope: !827)
!904 = !DILocation(line: 395, column: 6, scope: !827)
!905 = !DILocation(line: 392, column: 13, scope: !827)
!906 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17h6c3152bae60ef064E", scope: !113, file: !907, line: 913, type: !908, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !911)
!907 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "27c8869548c9dcb65186c5584c2586f6")
!908 = !DISubroutineType(types: !909)
!909 = !{!9, !910, !9}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!911 = !{!912, !913, !914}
!912 = !DILocalVariable(name: "dest", arg: 1, scope: !906, file: !907, line: 913, type: !910)
!913 = !DILocalVariable(name: "src", arg: 2, scope: !906, file: !907, line: 913, type: !9)
!914 = !DILocalVariable(name: "result", scope: !915, file: !907, line: 918, type: !9, align: 8)
!915 = distinct !DILexicalBlock(scope: !906, file: !907, line: 918, column: 9)
!916 = !DILocation(line: 913, column: 25, scope: !906)
!917 = !DILocation(line: 913, column: 39, scope: !906)
!918 = !DILocalVariable(name: "src", scope: !919, file: !907, line: 919, type: !9, align: 8)
!919 = !DILexicalBlockFile(scope: !920, file: !907, discriminator: 0)
!920 = distinct !DISubprogram(name: "write<usize>", linkageName: "_ZN4core3ptr5write17ha69019febed2e8d3E", scope: !220, file: !921, line: 1296, type: !922, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !925)
!921 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "13c32d970b0b4dd38131a1908223a155")
!922 = !DISubroutineType(types: !923)
!923 = !{null, !924, !9}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!925 = !{!926, !918}
!926 = !DILocalVariable(name: "dst", scope: !919, file: !907, line: 919, type: !924, align: 8)
!927 = !DILocation(line: 919, column: 9, scope: !919, inlinedAt: !928)
!928 = !DILocation(line: 919, column: 9, scope: !915)
!929 = !DILocalVariable(name: "tmp", scope: !930, file: !907, line: 918, type: !939, align: 8)
!930 = !DILexicalBlockFile(scope: !931, file: !907, discriminator: 0)
!931 = distinct !DILexicalBlock(scope: !932, file: !921, line: 1107, column: 5)
!932 = distinct !DISubprogram(name: "read<usize>", linkageName: "_ZN4core3ptr4read17he3da97547a93ec4cE", scope: !220, file: !921, line: 1099, type: !933, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !936)
!933 = !DISubroutineType(types: !934)
!934 = !{!9, !935}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const usize", baseType: !9, size: 64, align: 64, dwarfAddressSpace: 0)
!936 = !{!937, !929}
!937 = !DILocalVariable(name: "src", scope: !938, file: !907, line: 918, type: !935, align: 8)
!938 = !DILexicalBlockFile(scope: !932, file: !907, discriminator: 0)
!939 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<usize>", scope: !940, file: !2, size: 64, align: 64, elements: !941, templateParams: !431, identifier: "d5eca075936c223cc2b20ecedd1e4e46")
!940 = !DINamespace(name: "maybe_uninit", scope: !113)
!941 = !{!942, !943}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !939, file: !2, baseType: !7, align: 8)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !939, file: !2, baseType: !944, size: 64, align: 64)
!944 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<usize>", scope: !945, file: !2, size: 64, align: 64, elements: !946, templateParams: !431, identifier: "446cb116741bbe0e5138064f6b058dad")
!945 = !DINamespace(name: "manually_drop", scope: !113)
!946 = !{!947}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !944, file: !2, baseType: !9, size: 64, align: 64)
!948 = !DILocation(line: 918, column: 22, scope: !930, inlinedAt: !949)
!949 = !DILocation(line: 918, column: 22, scope: !906)
!950 = !DILocation(line: 918, column: 32, scope: !906)
!951 = !DILocation(line: 918, column: 22, scope: !938, inlinedAt: !949)
!952 = !DILocation(line: 918, column: 22, scope: !953, inlinedAt: !958)
!953 = !DILexicalBlockFile(scope: !954, file: !907, discriminator: 0)
!954 = distinct !DISubprogram(name: "uninit<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17h2e745e384a604ae1E", scope: !939, file: !955, line: 320, type: !956, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !23)
!955 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d75c93d9a93fe65ef19edc0e8e272278")
!956 = !DISubroutineType(types: !957)
!957 = !{!939}
!958 = !DILocation(line: 1107, column: 19, scope: !932, inlinedAt: !949)
!959 = !DILocalVariable(name: "self", scope: !960, file: !907, line: 918, type: !964, align: 8)
!960 = !DILexicalBlockFile(scope: !961, file: !907, discriminator: 0)
!961 = distinct !DISubprogram(name: "as_mut_ptr<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h864a4117a448ea1cE", scope: !939, file: !955, line: 574, type: !962, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !965)
!962 = !DISubroutineType(types: !963)
!963 = !{!924, !964}
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<usize>", baseType: !939, size: 64, align: 64, dwarfAddressSpace: 0)
!965 = !{!959}
!966 = !DILocation(line: 918, column: 22, scope: !960, inlinedAt: !967)
!967 = !DILocation(line: 1115, column: 34, scope: !931, inlinedAt: !949)
!968 = !DILocalVariable(name: "self", scope: !969, file: !907, line: 918, type: !939, align: 8)
!969 = !DILexicalBlockFile(scope: !970, file: !907, discriminator: 0)
!970 = distinct !DISubprogram(name: "assume_init<usize>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17had40c6e5fc3b57d7E", scope: !939, file: !955, line: 629, type: !971, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !981)
!971 = !DISubroutineType(types: !972)
!972 = !{!9, !939, !973}
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !974, size: 64, align: 64, dwarfAddressSpace: 0)
!974 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !975, file: !2, size: 192, align: 64, elements: !977, templateParams: !23, identifier: "ef576a844c237f54e9e75bf7bba044c0")
!975 = !DINamespace(name: "location", scope: !976)
!976 = !DINamespace(name: "panic", scope: !114)
!977 = !{!978, !979, !980}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !974, file: !2, baseType: !835, size: 128, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !974, file: !2, baseType: !419, size: 32, align: 32, offset: 128)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !974, file: !2, baseType: !419, size: 32, align: 32, offset: 160)
!981 = !{!968}
!982 = !DILocation(line: 918, column: 22, scope: !969, inlinedAt: !983)
!983 = !DILocation(line: 1116, column: 9, scope: !931, inlinedAt: !949)
!984 = !DILocalVariable(name: "slot", scope: !985, file: !907, line: 918, type: !944, align: 8)
!985 = !DILexicalBlockFile(scope: !986, file: !907, discriminator: 0)
!986 = distinct !DISubprogram(name: "into_inner<usize>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17h28a3c4dad5feecefE", scope: !944, file: !987, line: 88, type: !988, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !990)
!987 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "a34f39f0c1c25c8378cd3f4ec0bf00c3")
!988 = !DISubroutineType(types: !989)
!989 = !{!9, !944}
!990 = !{!984}
!991 = !DILocation(line: 918, column: 22, scope: !985, inlinedAt: !992)
!992 = !DILocation(line: 634, column: 13, scope: !970, inlinedAt: !983)
!993 = !DILocation(line: 918, column: 13, scope: !915)
!994 = !DILocation(line: 919, column: 20, scope: !915)
!995 = !DILocation(line: 919, column: 26, scope: !915)
!996 = !DILocation(line: 922, column: 2, scope: !906)
!997 = !DILocation(line: 922, column: 1, scope: !906)
!998 = !DILocation(line: 913, column: 1, scope: !906)
!999 = distinct !DISubprogram(name: "replace<i32>", linkageName: "_ZN4core3mem7replace17hf1ca98093c8ae647E", scope: !113, file: !907, line: 913, type: !1000, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1003)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!33, !1002, !33}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut i32", baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!1003 = !{!1004, !1005, !1006}
!1004 = !DILocalVariable(name: "dest", arg: 1, scope: !999, file: !907, line: 913, type: !1002)
!1005 = !DILocalVariable(name: "src", arg: 2, scope: !999, file: !907, line: 913, type: !33)
!1006 = !DILocalVariable(name: "result", scope: !1007, file: !907, line: 918, type: !33, align: 4)
!1007 = distinct !DILexicalBlock(scope: !999, file: !907, line: 918, column: 9)
!1008 = !DILocation(line: 913, column: 25, scope: !999)
!1009 = !DILocation(line: 913, column: 39, scope: !999)
!1010 = !DILocalVariable(name: "src", scope: !1011, file: !907, line: 919, type: !33, align: 4)
!1011 = !DILexicalBlockFile(scope: !1012, file: !907, discriminator: 0)
!1012 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17h34dd7d16af99f1a1E", scope: !220, file: !921, line: 1296, type: !1013, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1016)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{null, !1015, !33}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i32", baseType: !33, size: 64, align: 64, dwarfAddressSpace: 0)
!1016 = !{!1017, !1010}
!1017 = !DILocalVariable(name: "dst", scope: !1011, file: !907, line: 919, type: !1015, align: 8)
!1018 = !DILocation(line: 919, column: 9, scope: !1011, inlinedAt: !1019)
!1019 = !DILocation(line: 919, column: 9, scope: !1007)
!1020 = !DILocalVariable(name: "tmp", scope: !1021, file: !907, line: 918, type: !1029, align: 4)
!1021 = !DILexicalBlockFile(scope: !1022, file: !907, discriminator: 0)
!1022 = distinct !DILexicalBlock(scope: !1023, file: !921, line: 1107, column: 5)
!1023 = distinct !DISubprogram(name: "read<i32>", linkageName: "_ZN4core3ptr4read17h81cecb1df271a62bE", scope: !220, file: !921, line: 1099, type: !1024, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1026)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!33, !622}
!1026 = !{!1027, !1020}
!1027 = !DILocalVariable(name: "src", scope: !1028, file: !907, line: 918, type: !622, align: 8)
!1028 = !DILexicalBlockFile(scope: !1023, file: !907, discriminator: 0)
!1029 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<i32>", scope: !940, file: !2, size: 32, align: 32, elements: !1030, templateParams: !466, identifier: "749ff49970c59f5b542753e50e0baaa5")
!1030 = !{!1031, !1032}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1029, file: !2, baseType: !7, align: 8)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1029, file: !2, baseType: !1033, size: 32, align: 32)
!1033 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<i32>", scope: !945, file: !2, size: 32, align: 32, elements: !1034, templateParams: !466, identifier: "1f7a761321d649b733dfe180fca72385")
!1034 = !{!1035}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1033, file: !2, baseType: !33, size: 32, align: 32)
!1036 = !DILocation(line: 918, column: 22, scope: !1021, inlinedAt: !1037)
!1037 = !DILocation(line: 918, column: 22, scope: !999)
!1038 = !DILocation(line: 918, column: 32, scope: !999)
!1039 = !DILocation(line: 918, column: 22, scope: !1028, inlinedAt: !1037)
!1040 = !DILocation(line: 918, column: 22, scope: !1041, inlinedAt: !1045)
!1041 = !DILexicalBlockFile(scope: !1042, file: !907, discriminator: 0)
!1042 = distinct !DISubprogram(name: "uninit<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hd52702ddf19f108cE", scope: !1029, file: !955, line: 320, type: !1043, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !23)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!1029}
!1045 = !DILocation(line: 1107, column: 19, scope: !1023, inlinedAt: !1037)
!1046 = !DILocalVariable(name: "self", scope: !1047, file: !907, line: 918, type: !1051, align: 8)
!1047 = !DILexicalBlockFile(scope: !1048, file: !907, discriminator: 0)
!1048 = distinct !DISubprogram(name: "as_mut_ptr<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17ha2a1326d5c6a0404E", scope: !1029, file: !955, line: 574, type: !1049, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1052)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!1015, !1051}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::maybe_uninit::MaybeUninit<i32>", baseType: !1029, size: 64, align: 64, dwarfAddressSpace: 0)
!1052 = !{!1046}
!1053 = !DILocation(line: 918, column: 22, scope: !1047, inlinedAt: !1054)
!1054 = !DILocation(line: 1115, column: 34, scope: !1022, inlinedAt: !1037)
!1055 = !DILocalVariable(name: "self", scope: !1056, file: !907, line: 918, type: !1029, align: 4)
!1056 = !DILexicalBlockFile(scope: !1057, file: !907, discriminator: 0)
!1057 = distinct !DISubprogram(name: "assume_init<i32>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hb002ff42b27ee5f3E", scope: !1029, file: !955, line: 629, type: !1058, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1060)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!33, !1029, !973}
!1060 = !{!1055}
!1061 = !DILocation(line: 918, column: 22, scope: !1056, inlinedAt: !1062)
!1062 = !DILocation(line: 1116, column: 9, scope: !1022, inlinedAt: !1037)
!1063 = !DILocalVariable(name: "slot", scope: !1064, file: !907, line: 918, type: !1033, align: 4)
!1064 = !DILexicalBlockFile(scope: !1065, file: !907, discriminator: 0)
!1065 = distinct !DISubprogram(name: "into_inner<i32>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17hf5d3e78ce9737930E", scope: !1033, file: !987, line: 88, type: !1066, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1068)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!33, !1033}
!1068 = !{!1063}
!1069 = !DILocation(line: 918, column: 22, scope: !1064, inlinedAt: !1070)
!1070 = !DILocation(line: 634, column: 13, scope: !1057, inlinedAt: !1062)
!1071 = !DILocation(line: 918, column: 13, scope: !1007)
!1072 = !DILocation(line: 919, column: 20, scope: !1007)
!1073 = !DILocation(line: 919, column: 26, scope: !1007)
!1074 = !DILocation(line: 922, column: 2, scope: !999)
!1075 = !DILocation(line: 922, column: 1, scope: !999)
!1076 = !DILocation(line: 913, column: 1, scope: !999)
!1077 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h9a7ed23975e82aa2E", scope: !660, file: !659, line: 438, type: !1078, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1080)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!424, !9, !9}
!1080 = !{!1081, !1082, !1083, !1085}
!1081 = !DILocalVariable(name: "self", arg: 1, scope: !1077, file: !659, line: 438, type: !9)
!1082 = !DILocalVariable(name: "rhs", arg: 2, scope: !1077, file: !659, line: 438, type: !9)
!1083 = !DILocalVariable(name: "a", scope: !1084, file: !659, line: 439, type: !9, align: 8)
!1084 = distinct !DILexicalBlock(scope: !1077, file: !659, line: 439, column: 13)
!1085 = !DILocalVariable(name: "b", scope: !1084, file: !659, line: 439, type: !710, align: 1)
!1086 = !DILocation(line: 438, column: 34, scope: !1077)
!1087 = !DILocation(line: 438, column: 40, scope: !1077)
!1088 = !DILocation(line: 439, column: 26, scope: !1077)
!1089 = !DILocalVariable(name: "self", scope: !1090, file: !659, line: 439, type: !9, align: 8)
!1090 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17he3f36ecce9400a82E", scope: !660, file: !659, line: 1506, type: !1091, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1097)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!1093, !9, !9}
!1093 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1094, templateParams: !23, identifier: "23309350ccb628a7900e37caa17b1249")
!1094 = !{!1095, !1096}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1093, file: !2, baseType: !9, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1093, file: !2, baseType: !710, size: 8, align: 8, offset: 64)
!1097 = !{!1089, !1098, !1099, !1101}
!1098 = !DILocalVariable(name: "rhs", scope: !1090, file: !659, line: 439, type: !9, align: 8)
!1099 = !DILocalVariable(name: "a", scope: !1100, file: !659, line: 439, type: !115, align: 8)
!1100 = distinct !DILexicalBlock(scope: !1090, file: !659, line: 1507, column: 13)
!1101 = !DILocalVariable(name: "b", scope: !1100, file: !659, line: 439, type: !710, align: 1)
!1102 = !DILocation(line: 439, column: 26, scope: !1090, inlinedAt: !1088)
!1103 = !DILocation(line: 439, column: 47, scope: !1077)
!1104 = !DILocation(line: 439, column: 26, scope: !1100, inlinedAt: !1088)
!1105 = !DILocation(line: 439, column: 18, scope: !1077)
!1106 = !DILocation(line: 439, column: 18, scope: !1084)
!1107 = !DILocation(line: 439, column: 21, scope: !1077)
!1108 = !DILocation(line: 439, column: 21, scope: !1084)
!1109 = !DILocation(line: 440, column: 16, scope: !1084)
!1110 = !DILocation(line: 440, column: 42, scope: !1084)
!1111 = !DILocation(line: 440, column: 13, scope: !1084)
!1112 = !DILocation(line: 440, column: 30, scope: !1084)
!1113 = !DILocation(line: 441, column: 10, scope: !1077)
!1114 = !{i64 0, i64 2}
!1115 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf791a6b7be2128e2E", scope: !660, file: !659, line: 555, type: !1078, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1116)
!1116 = !{!1117, !1118, !1119, !1121}
!1117 = !DILocalVariable(name: "self", arg: 1, scope: !1115, file: !659, line: 555, type: !9)
!1118 = !DILocalVariable(name: "rhs", arg: 2, scope: !1115, file: !659, line: 555, type: !9)
!1119 = !DILocalVariable(name: "a", scope: !1120, file: !659, line: 556, type: !9, align: 8)
!1120 = distinct !DILexicalBlock(scope: !1115, file: !659, line: 556, column: 13)
!1121 = !DILocalVariable(name: "b", scope: !1120, file: !659, line: 556, type: !710, align: 1)
!1122 = !DILocation(line: 555, column: 34, scope: !1115)
!1123 = !DILocation(line: 555, column: 40, scope: !1115)
!1124 = !DILocation(line: 556, column: 26, scope: !1115)
!1125 = !DILocalVariable(name: "self", scope: !1126, file: !659, line: 556, type: !9, align: 8)
!1126 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hce0beb250bffdecdE", scope: !660, file: !659, line: 1688, type: !1091, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1127)
!1127 = !{!1125, !1128, !1129, !1131}
!1128 = !DILocalVariable(name: "rhs", scope: !1126, file: !659, line: 556, type: !9, align: 8)
!1129 = !DILocalVariable(name: "a", scope: !1130, file: !659, line: 556, type: !115, align: 8)
!1130 = distinct !DILexicalBlock(scope: !1126, file: !659, line: 1689, column: 13)
!1131 = !DILocalVariable(name: "b", scope: !1130, file: !659, line: 556, type: !710, align: 1)
!1132 = !DILocation(line: 556, column: 26, scope: !1126, inlinedAt: !1124)
!1133 = !DILocation(line: 556, column: 47, scope: !1115)
!1134 = !DILocation(line: 556, column: 26, scope: !1130, inlinedAt: !1124)
!1135 = !DILocation(line: 556, column: 18, scope: !1115)
!1136 = !DILocation(line: 556, column: 18, scope: !1120)
!1137 = !DILocation(line: 556, column: 21, scope: !1115)
!1138 = !DILocation(line: 556, column: 21, scope: !1120)
!1139 = !DILocation(line: 557, column: 16, scope: !1120)
!1140 = !DILocation(line: 557, column: 42, scope: !1120)
!1141 = !DILocation(line: 557, column: 13, scope: !1120)
!1142 = !DILocation(line: 557, column: 30, scope: !1120)
!1143 = !DILocation(line: 558, column: 10, scope: !1115)
!1144 = distinct !DISubprogram(name: "call_mut<fn(&i32) -> bool, (&i32)>", linkageName: "_ZN4core3ops8function5FnMut8call_mut17hdb098b4208e965adE", scope: !1146, file: !1145, line: 164, type: !1149, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1162, retainedNodes: !1155)
!1145 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "3100065230267ed2a3b8753c70d752a6")
!1146 = !DINamespace(name: "FnMut", scope: !1147)
!1147 = !DINamespace(name: "function", scope: !1148)
!1148 = !DINamespace(name: "ops", scope: !114)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!710, !1151, !32}
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut fn(&i32) -> bool", baseType: !1152, size: 64, align: 64, dwarfAddressSpace: 0)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&i32) -> bool", baseType: !1153, size: 64, align: 64, dwarfAddressSpace: 0)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!710, !32}
!1155 = !{!1156, !1158}
!1156 = !DILocalVariable(arg: 1, scope: !1144, file: !1145, line: 164, type: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const fn(&i32) -> bool", baseType: !1152, size: 64, align: 64, dwarfAddressSpace: 0)
!1158 = !DILocalVariable(arg: 2, scope: !1144, file: !1145, line: 164, type: !1159)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&i32)", file: !2, size: 64, align: 64, elements: !1160, templateParams: !23, identifier: "92d0998a715e8bef82236e1b23e98e0c")
!1160 = !{!1161}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1159, file: !2, baseType: !32, size: 64, align: 64)
!1162 = !{!1163, !1164}
!1163 = !DITemplateTypeParameter(name: "Self", type: !1152)
!1164 = !DITemplateTypeParameter(name: "Args", type: !1159)
!1165 = !DILocation(line: 164, column: 5, scope: !1144)
!1166 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hf3480924c578e713E", scope: !1167, file: !1145, line: 248, type: !1168, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1174, retainedNodes: !1171)
!1167 = !DINamespace(name: "FnOnce", scope: !1147)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!33, !1170}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut std::rt::lang_start::{closure_env#0}<()>", baseType: !14, size: 64, align: 64, dwarfAddressSpace: 0)
!1171 = !{!1172, !1173}
!1172 = !DILocalVariable(arg: 1, scope: !1166, file: !1145, line: 248, type: !1170)
!1173 = !DILocalVariable(arg: 2, scope: !1166, file: !1145, line: 248, type: !7)
!1174 = !{!1175, !1176}
!1175 = !DITemplateTypeParameter(name: "Self", type: !14)
!1176 = !DITemplateTypeParameter(name: "Args", type: !7)
!1177 = !DILocation(line: 248, column: 5, scope: !1166)
!1178 = distinct !DISubprogram(name: "call_once<misc_tests::test_uninitialized::test_buffer::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h2aaf47d9463627a6E", scope: !1167, file: !1145, line: 248, type: !1179, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1188, retainedNodes: !1185)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{null, !1181}
!1181 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1182, file: !2, align: 8, elements: !23, identifier: "fe1346124a794800713a150e2c19c3ea")
!1182 = !DINamespace(name: "test_buffer", scope: !1183)
!1183 = !DINamespace(name: "test_uninitialized", scope: !1184)
!1184 = !DINamespace(name: "misc_tests", scope: null)
!1185 = !{!1186, !1187}
!1186 = !DILocalVariable(arg: 1, scope: !1178, file: !1145, line: 248, type: !1181)
!1187 = !DILocalVariable(arg: 2, scope: !1178, file: !1145, line: 248, type: !7)
!1188 = !{!1189, !1176}
!1189 = !DITemplateTypeParameter(name: "Self", type: !1181)
!1190 = !DILocation(line: 248, column: 5, scope: !1178)
!1191 = distinct !DISubprogram(name: "call_once<misc_tests::test_quicksort::test_quicksort::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h3ccad5d1263d321bE", scope: !1167, file: !1145, line: 248, type: !1192, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1200, retainedNodes: !1197)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{null, !1194}
!1194 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1195, file: !2, align: 8, elements: !23, identifier: "28762752fceceb1dd290968a01d0efe0")
!1195 = !DINamespace(name: "test_quicksort", scope: !1196)
!1196 = !DINamespace(name: "test_quicksort", scope: !1184)
!1197 = !{!1198, !1199}
!1198 = !DILocalVariable(arg: 1, scope: !1191, file: !1145, line: 248, type: !1194)
!1199 = !DILocalVariable(arg: 2, scope: !1191, file: !1145, line: 248, type: !7)
!1200 = !{!1201, !1176}
!1201 = !DITemplateTypeParameter(name: "Self", type: !1194)
!1202 = !DILocation(line: 248, column: 5, scope: !1191)
!1203 = distinct !DISubprogram(name: "call_once<misc_tests::test_typedef::test_typedef::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h469d1cfeae6a1c89E", scope: !1167, file: !1145, line: 248, type: !1204, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1212, retainedNodes: !1209)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{null, !1206}
!1206 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1207, file: !2, align: 8, elements: !23, identifier: "4bd9b8582808da95218e9ef63d736000")
!1207 = !DINamespace(name: "test_typedef", scope: !1208)
!1208 = !DINamespace(name: "test_typedef", scope: !1184)
!1209 = !{!1210, !1211}
!1210 = !DILocalVariable(arg: 1, scope: !1203, file: !1145, line: 248, type: !1206)
!1211 = !DILocalVariable(arg: 2, scope: !1203, file: !1145, line: 248, type: !7)
!1212 = !{!1213, !1176}
!1213 = !DITemplateTypeParameter(name: "Self", type: !1206)
!1214 = !DILocation(line: 248, column: 5, scope: !1203)
!1215 = distinct !DISubprogram(name: "call_once<misc_tests::test_memory::test_memset::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h674999c85c10c66bE", scope: !1167, file: !1145, line: 248, type: !1216, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1224, retainedNodes: !1221)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{null, !1218}
!1218 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1219, file: !2, align: 8, elements: !23, identifier: "68a6d40cd89664ea4332a6755de91572")
!1219 = !DINamespace(name: "test_memset", scope: !1220)
!1220 = !DINamespace(name: "test_memory", scope: !1184)
!1221 = !{!1222, !1223}
!1222 = !DILocalVariable(arg: 1, scope: !1215, file: !1145, line: 248, type: !1218)
!1223 = !DILocalVariable(arg: 2, scope: !1215, file: !1145, line: 248, type: !7)
!1224 = !{!1225, !1176}
!1225 = !DITemplateTypeParameter(name: "Self", type: !1218)
!1226 = !DILocation(line: 248, column: 5, scope: !1215)
!1227 = distinct !DISubprogram(name: "call_once<misc_tests::test_exprs::test_exprs::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h9213feb16ac2742eE", scope: !1167, file: !1145, line: 248, type: !1228, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1236, retainedNodes: !1233)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{null, !1230}
!1230 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1231, file: !2, align: 8, elements: !23, identifier: "584899df401c51efe33f0907e74dca7f")
!1231 = !DINamespace(name: "test_exprs", scope: !1232)
!1232 = !DINamespace(name: "test_exprs", scope: !1184)
!1233 = !{!1234, !1235}
!1234 = !DILocalVariable(arg: 1, scope: !1227, file: !1145, line: 248, type: !1230)
!1235 = !DILocalVariable(arg: 2, scope: !1227, file: !1145, line: 248, type: !7)
!1236 = !{!1237, !1176}
!1237 = !DITemplateTypeParameter(name: "Self", type: !1230)
!1238 = !DILocation(line: 248, column: 5, scope: !1227)
!1239 = distinct !DISubprogram(name: "call_once<misc_tests::test_lvalues::test_lvalue::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hc2838c4de4ab2d20E", scope: !1167, file: !1145, line: 248, type: !1240, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1248, retainedNodes: !1245)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{null, !1242}
!1242 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1243, file: !2, align: 8, elements: !23, identifier: "df1eaa14af239dc0250559fe62e032dd")
!1243 = !DINamespace(name: "test_lvalue", scope: !1244)
!1244 = !DINamespace(name: "test_lvalues", scope: !1184)
!1245 = !{!1246, !1247}
!1246 = !DILocalVariable(arg: 1, scope: !1239, file: !1145, line: 248, type: !1242)
!1247 = !DILocalVariable(arg: 2, scope: !1239, file: !1145, line: 248, type: !7)
!1248 = !{!1249, !1176}
!1249 = !DITemplateTypeParameter(name: "Self", type: !1242)
!1250 = !DILocation(line: 248, column: 5, scope: !1239)
!1251 = distinct !DISubprogram(name: "call_once<std::rt::lang_start::{closure_env#0}<()>, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hc939b7f1fb900d6aE", scope: !1167, file: !1145, line: 248, type: !1252, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1174, retainedNodes: !1254)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!33, !14}
!1254 = !{!1255, !1256}
!1255 = !DILocalVariable(arg: 1, scope: !1251, file: !1145, line: 248, type: !14)
!1256 = !DILocalVariable(arg: 2, scope: !1251, file: !1145, line: 248, type: !7)
!1257 = !DILocation(line: 248, column: 5, scope: !1251)
!1258 = distinct !DISubprogram(name: "call_once<fn(), ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hcb538e4adf9693b7E", scope: !1167, file: !1145, line: 248, type: !304, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1262, retainedNodes: !1259)
!1259 = !{!1260, !1261}
!1260 = !DILocalVariable(arg: 1, scope: !1258, file: !1145, line: 248, type: !20)
!1261 = !DILocalVariable(arg: 2, scope: !1258, file: !1145, line: 248, type: !7)
!1262 = !{!1263, !1176}
!1263 = !DITemplateTypeParameter(name: "Self", type: !20)
!1264 = !DILocation(line: 248, column: 5, scope: !1258)
!1265 = distinct !DISubprogram(name: "call_once<misc_tests::test_quicksort::test_swap::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hd249bbf57cc3d7e7E", scope: !1167, file: !1145, line: 248, type: !1266, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1273, retainedNodes: !1270)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{null, !1268}
!1268 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1269, file: !2, align: 8, elements: !23, identifier: "957bbfb3e7b9ecf7a896a0e67de9408c")
!1269 = !DINamespace(name: "test_swap", scope: !1196)
!1270 = !{!1271, !1272}
!1271 = !DILocalVariable(arg: 1, scope: !1265, file: !1145, line: 248, type: !1268)
!1272 = !DILocalVariable(arg: 2, scope: !1265, file: !1145, line: 248, type: !7)
!1273 = !{!1274, !1176}
!1274 = !DITemplateTypeParameter(name: "Self", type: !1268)
!1275 = !DILocation(line: 248, column: 5, scope: !1265)
!1276 = distinct !DISubprogram(name: "call_once<misc_tests::test_shadowing::test_twice::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hd4e7d2f2cde61ecfE", scope: !1167, file: !1145, line: 248, type: !1277, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1285, retainedNodes: !1282)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{null, !1279}
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1280, file: !2, align: 8, elements: !23, identifier: "ee22947d15983db0c3b084ebecf801ed")
!1280 = !DINamespace(name: "test_twice", scope: !1281)
!1281 = !DINamespace(name: "test_shadowing", scope: !1184)
!1282 = !{!1283, !1284}
!1283 = !DILocalVariable(arg: 1, scope: !1276, file: !1145, line: 248, type: !1279)
!1284 = !DILocalVariable(arg: 2, scope: !1276, file: !1145, line: 248, type: !7)
!1285 = !{!1286, !1176}
!1286 = !DITemplateTypeParameter(name: "Self", type: !1279)
!1287 = !DILocation(line: 248, column: 5, scope: !1276)
!1288 = distinct !DISubprogram(name: "call_once<misc_tests::test_sizeofs::test_sizeofs::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17he6cfa5965298963dE", scope: !1167, file: !1145, line: 248, type: !1289, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1297, retainedNodes: !1294)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{null, !1291}
!1291 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1292, file: !2, align: 8, elements: !23, identifier: "8d14bf51e0c3076acaf06579907defa6")
!1292 = !DINamespace(name: "test_sizeofs", scope: !1293)
!1293 = !DINamespace(name: "test_sizeofs", scope: !1184)
!1294 = !{!1295, !1296}
!1295 = !DILocalVariable(arg: 1, scope: !1288, file: !1145, line: 248, type: !1291)
!1296 = !DILocalVariable(arg: 2, scope: !1288, file: !1145, line: 248, type: !7)
!1297 = !{!1298, !1176}
!1298 = !DITemplateTypeParameter(name: "Self", type: !1291)
!1299 = !DILocation(line: 248, column: 5, scope: !1288)
!1300 = distinct !DISubprogram(name: "call_once<misc_tests::test_memory::test_malloc::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hef526dcca281d131E", scope: !1167, file: !1145, line: 248, type: !1301, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1308, retainedNodes: !1305)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{null, !1303}
!1303 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1304, file: !2, align: 8, elements: !23, identifier: "2c1420667857e5e15caf17bc02c24b4b")
!1304 = !DINamespace(name: "test_malloc", scope: !1220)
!1305 = !{!1306, !1307}
!1306 = !DILocalVariable(arg: 1, scope: !1300, file: !1145, line: 248, type: !1303)
!1307 = !DILocalVariable(arg: 2, scope: !1300, file: !1145, line: 248, type: !7)
!1308 = !{!1309, !1176}
!1309 = !DITemplateTypeParameter(name: "Self", type: !1303)
!1310 = !DILocation(line: 248, column: 5, scope: !1300)
!1311 = distinct !DISubprogram(name: "call_once<misc_tests::test_shadowing::test_shadowing::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hf3fbbd19834e62dcE", scope: !1167, file: !1145, line: 248, type: !1312, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1319, retainedNodes: !1316)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{null, !1314}
!1314 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1315, file: !2, align: 8, elements: !23, identifier: "b690eef80702fc27cf5d61b419027629")
!1315 = !DINamespace(name: "test_shadowing", scope: !1281)
!1316 = !{!1317, !1318}
!1317 = !DILocalVariable(arg: 1, scope: !1311, file: !1145, line: 248, type: !1314)
!1318 = !DILocalVariable(arg: 2, scope: !1311, file: !1145, line: 248, type: !7)
!1319 = !{!1320, !1176}
!1320 = !DITemplateTypeParameter(name: "Self", type: !1314)
!1321 = !DILocation(line: 248, column: 5, scope: !1311)
!1322 = distinct !DISubprogram(name: "call_once<misc_tests::test_quicksort::test_partition::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hf8231621d30575b0E", scope: !1167, file: !1145, line: 248, type: !1323, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1330, retainedNodes: !1327)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{null, !1325}
!1325 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1326, file: !2, align: 8, elements: !23, identifier: "a04adb74ac171ca16a5ffc421a2cb4")
!1326 = !DINamespace(name: "test_partition", scope: !1196)
!1327 = !{!1328, !1329}
!1328 = !DILocalVariable(arg: 1, scope: !1322, file: !1145, line: 248, type: !1325)
!1329 = !DILocalVariable(arg: 2, scope: !1322, file: !1145, line: 248, type: !7)
!1330 = !{!1331, !1176}
!1331 = !DITemplateTypeParameter(name: "Self", type: !1325)
!1332 = !DILocation(line: 248, column: 5, scope: !1322)
!1333 = distinct !DISubprogram(name: "call_once<misc_tests::test_uninitialized::test_types::{closure_env#0}, ()>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hffcafe7089bcdb86E", scope: !1167, file: !1145, line: 248, type: !1334, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1341, retainedNodes: !1338)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{null, !1336}
!1336 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1337, file: !2, align: 8, elements: !23, identifier: "440153fc582fb263ffcc6ffab2c6da1e")
!1337 = !DINamespace(name: "test_types", scope: !1183)
!1338 = !{!1339, !1340}
!1339 = !DILocalVariable(arg: 1, scope: !1333, file: !1145, line: 248, type: !1336)
!1340 = !DILocalVariable(arg: 2, scope: !1333, file: !1145, line: 248, type: !7)
!1341 = !{!1342, !1176}
!1342 = !DITemplateTypeParameter(name: "Self", type: !1336)
!1343 = !DILocation(line: 248, column: 5, scope: !1333)
!1344 = distinct !DISubprogram(name: "drop_in_place<&i32>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$i32$GT$17h55f4c3eed93eff6cE", scope: !220, file: !921, line: 487, type: !1345, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !626, retainedNodes: !1348)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{null, !1347}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &i32", baseType: !32, size: 64, align: 64, dwarfAddressSpace: 0)
!1348 = !{!1349}
!1349 = !DILocalVariable(arg: 1, scope: !1344, file: !921, line: 487, type: !1347)
!1350 = !DILocation(line: 487, column: 1, scope: !1344)
!1351 = distinct !DISubprogram(name: "drop_in_place<&()>", linkageName: "_ZN4core3ptr33drop_in_place$LT$$RF$$LP$$RP$$GT$17hc2274c1d1ec8c39aE", scope: !220, file: !921, line: 487, type: !1352, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1357, retainedNodes: !1355)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{null, !1354}
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &()", baseType: !54, size: 64, align: 64, dwarfAddressSpace: 0)
!1355 = !{!1356}
!1356 = !DILocalVariable(arg: 1, scope: !1351, file: !921, line: 487, type: !1354)
!1357 = !{!1358}
!1358 = !DITemplateTypeParameter(name: "T", type: !54)
!1359 = !DILocation(line: 487, column: 1, scope: !1351)
!1360 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<i32, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr47drop_in_place$LT$alloc..vec..Vec$LT$i32$GT$$GT$17hc42f131b2d017f6fE", scope: !220, file: !921, line: 487, type: !1361, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1385, retainedNodes: !1383)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{null, !1363}
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<i32, alloc::alloc::Global>", baseType: !1364, size: 64, align: 64, dwarfAddressSpace: 0)
!1364 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<i32, alloc::alloc::Global>", scope: !1365, file: !2, size: 192, align: 64, elements: !1366, templateParams: !1380, identifier: "a91ce611025c7cb92c07812364ae35fe")
!1365 = !DINamespace(name: "vec", scope: !211)
!1366 = !{!1367, !1382}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1364, file: !2, baseType: !1368, size: 128, align: 64)
!1368 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<i32, alloc::alloc::Global>", scope: !210, file: !2, size: 128, align: 64, elements: !1369, templateParams: !1380, identifier: "8a8fe19ff2edd19bab1729ee8c5bad6a")
!1369 = !{!1370, !1376, !1377}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1368, file: !2, baseType: !1371, size: 64, align: 64)
!1371 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<i32>", scope: !230, file: !2, size: 64, align: 64, elements: !1372, templateParams: !466, identifier: "62f4807ab3dce3cba7f30fc00f38cdd6")
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1371, file: !2, baseType: !619, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1371, file: !2, baseType: !1375, align: 8)
!1375 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<i32>", scope: !235, file: !2, align: 8, elements: !23, templateParams: !466, identifier: "34c013968c354612ac15edce1691fe68")
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1368, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1368, file: !2, baseType: !1378, align: 8)
!1378 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !1379, file: !2, align: 8, elements: !23, identifier: "3328ba4994ba07f4a4a3e83fae935932")
!1379 = !DINamespace(name: "alloc", scope: !211)
!1380 = !{!467, !1381}
!1381 = !DITemplateTypeParameter(name: "A", type: !1378)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1364, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1383 = !{!1384}
!1384 = !DILocalVariable(arg: 1, scope: !1360, file: !921, line: 487, type: !1363)
!1385 = !{!1386}
!1386 = !DITemplateTypeParameter(name: "T", type: !1364)
!1387 = !DILocation(line: 487, column: 1, scope: !1360)
!1388 = distinct !DISubprogram(name: "drop_in_place<&[i32; 1]>", linkageName: "_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$1$u5d$$GT$17hd984f955d0e1083dE", scope: !220, file: !921, line: 487, type: !1389, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1394, retainedNodes: !1392)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{null, !1391}
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &[i32; 1]", baseType: !75, size: 64, align: 64, dwarfAddressSpace: 0)
!1392 = !{!1393}
!1393 = !DILocalVariable(arg: 1, scope: !1388, file: !921, line: 487, type: !1391)
!1394 = !{!1395}
!1395 = !DITemplateTypeParameter(name: "T", type: !75)
!1396 = !DILocation(line: 487, column: 1, scope: !1388)
!1397 = distinct !DISubprogram(name: "drop_in_place<&[i32; 3]>", linkageName: "_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$3$u5d$$GT$17h0af8c2383515be9bE", scope: !220, file: !921, line: 487, type: !1398, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1403, retainedNodes: !1401)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{null, !1400}
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &[i32; 3]", baseType: !63, size: 64, align: 64, dwarfAddressSpace: 0)
!1401 = !{!1402}
!1402 = !DILocalVariable(arg: 1, scope: !1397, file: !921, line: 487, type: !1400)
!1403 = !{!1404}
!1404 = !DITemplateTypeParameter(name: "T", type: !63)
!1405 = !DILocation(line: 487, column: 1, scope: !1397)
!1406 = distinct !DISubprogram(name: "drop_in_place<&[i32; 5]>", linkageName: "_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$5$u5d$$GT$17h55c2f46b5138ef3cE", scope: !220, file: !921, line: 487, type: !1407, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1412, retainedNodes: !1410)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{null, !1409}
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &[i32; 5]", baseType: !87, size: 64, align: 64, dwarfAddressSpace: 0)
!1410 = !{!1411}
!1411 = !DILocalVariable(arg: 1, scope: !1406, file: !921, line: 487, type: !1409)
!1412 = !{!1413}
!1413 = !DITemplateTypeParameter(name: "T", type: !87)
!1414 = !DILocation(line: 487, column: 1, scope: !1406)
!1415 = distinct !DISubprogram(name: "drop_in_place<&[i32; 6]>", linkageName: "_ZN4core3ptr49drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$6$u5d$$GT$17hfbc5c32dc62ea6d3E", scope: !220, file: !921, line: 487, type: !1416, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1421, retainedNodes: !1419)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !1418}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &[i32; 6]", baseType: !99, size: 64, align: 64, dwarfAddressSpace: 0)
!1419 = !{!1420}
!1420 = !DILocalVariable(arg: 1, scope: !1415, file: !921, line: 487, type: !1418)
!1421 = !{!1422}
!1422 = !DITemplateTypeParameter(name: "T", type: !99)
!1423 = !DILocation(line: 487, column: 1, scope: !1415)
!1424 = distinct !DISubprogram(name: "drop_in_place<&[i32; 10]>", linkageName: "_ZN4core3ptr50drop_in_place$LT$$RF$$u5b$i32$u3b$$u20$10$u5d$$GT$17hedff71cbd66a5e9fE", scope: !220, file: !921, line: 487, type: !1425, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1430, retainedNodes: !1428)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{null, !1427}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &[i32; 10]", baseType: !42, size: 64, align: 64, dwarfAddressSpace: 0)
!1428 = !{!1429}
!1429 = !DILocalVariable(arg: 1, scope: !1424, file: !921, line: 487, type: !1427)
!1430 = !{!1431}
!1431 = !DITemplateTypeParameter(name: "T", type: !42)
!1432 = !DILocation(line: 487, column: 1, scope: !1424)
!1433 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<i32, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr54drop_in_place$LT$alloc..raw_vec..RawVec$LT$i32$GT$$GT$17hb3aaa09deee1536aE", scope: !220, file: !921, line: 487, type: !1434, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1439, retainedNodes: !1437)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{null, !1436}
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<i32, alloc::alloc::Global>", baseType: !1368, size: 64, align: 64, dwarfAddressSpace: 0)
!1437 = !{!1438}
!1438 = !DILocalVariable(arg: 1, scope: !1433, file: !921, line: 487, type: !1436)
!1439 = !{!1440}
!1440 = !DITemplateTypeParameter(name: "T", type: !1368)
!1441 = !DILocation(line: 487, column: 1, scope: !1433)
!1442 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>", linkageName: "_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17haf88146aabe3cfcdE", scope: !220, file: !921, line: 487, type: !1443, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1453, retainedNodes: !1451)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{null, !1445}
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::set_len_on_drop::SetLenOnDrop", baseType: !1446, size: 64, align: 64, dwarfAddressSpace: 0)
!1446 = !DICompositeType(tag: DW_TAG_structure_type, name: "SetLenOnDrop", scope: !1447, file: !2, size: 128, align: 64, elements: !1448, templateParams: !23, identifier: "92c56566f7dda87877f4ae307cd899c5")
!1447 = !DINamespace(name: "set_len_on_drop", scope: !1365)
!1448 = !{!1449, !1450}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1446, file: !2, baseType: !910, size: 64, align: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "local_len", scope: !1446, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1451 = !{!1452}
!1452 = !DILocalVariable(arg: 1, scope: !1442, file: !921, line: 487, type: !1445)
!1453 = !{!1454}
!1454 = !DITemplateTypeParameter(name: "T", type: !1446)
!1455 = !DILocation(line: 487, column: 1, scope: !1442)
!1456 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<[i32; 4], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr68drop_in_place$LT$alloc..vec..Vec$LT$$u5b$i32$u3b$$u20$4$u5d$$GT$$GT$17hf07e1a2a4e158af9E", scope: !220, file: !921, line: 487, type: !1457, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1483, retainedNodes: !1481)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{null, !1459}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<[i32; 4], alloc::alloc::Global>", baseType: !1460, size: 64, align: 64, dwarfAddressSpace: 0)
!1460 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<[i32; 4], alloc::alloc::Global>", scope: !1365, file: !2, size: 192, align: 64, elements: !1461, templateParams: !1479, identifier: "1abe7eea7f64c75ddcc774dd79f75b66")
!1461 = !{!1462, !1480}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1460, file: !2, baseType: !1463, size: 128, align: 64)
!1463 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<[i32; 4], alloc::alloc::Global>", scope: !210, file: !2, size: 128, align: 64, elements: !1464, templateParams: !1479, identifier: "301ab99d41b8f9afb1b4ab17ce3e072e")
!1464 = !{!1465, !1477, !1478}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1463, file: !2, baseType: !1466, size: 64, align: 64)
!1466 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[i32; 4]>", scope: !230, file: !2, size: 64, align: 64, elements: !1467, templateParams: !1473, identifier: "7cb3ca0d37332a7444abf0ac934f93e9")
!1467 = !{!1468, !1475}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1466, file: !2, baseType: !1469, size: 64, align: 64)
!1469 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[i32; 4]>", scope: !219, file: !2, size: 64, align: 64, elements: !1470, templateParams: !1473, identifier: "27a3b41b6343fa8c6a82f9534ea74538")
!1470 = !{!1471}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1469, file: !2, baseType: !1472, size: 64, align: 64)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 4]", baseType: !637, size: 64, align: 64, dwarfAddressSpace: 0)
!1473 = !{!1474}
!1474 = !DITemplateTypeParameter(name: "T", type: !637)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1466, file: !2, baseType: !1476, align: 8)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[i32; 4]>", scope: !235, file: !2, align: 8, elements: !23, templateParams: !1473, identifier: "7cf925f96a76985284fdfb81030cc84a")
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1463, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1463, file: !2, baseType: !1378, align: 8)
!1479 = !{!1474, !1381}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1460, file: !2, baseType: !9, size: 64, align: 64, offset: 128)
!1481 = !{!1482}
!1482 = !DILocalVariable(arg: 1, scope: !1456, file: !921, line: 487, type: !1459)
!1483 = !{!1484}
!1484 = !DITemplateTypeParameter(name: "T", type: !1460)
!1485 = !DILocation(line: 487, column: 1, scope: !1456)
!1486 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<[i32; 4], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr75drop_in_place$LT$alloc..raw_vec..RawVec$LT$$u5b$i32$u3b$$u20$4$u5d$$GT$$GT$17hd325950bbc3ab561E", scope: !220, file: !921, line: 487, type: !1487, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1492, retainedNodes: !1490)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{null, !1489}
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<[i32; 4], alloc::alloc::Global>", baseType: !1463, size: 64, align: 64, dwarfAddressSpace: 0)
!1490 = !{!1491}
!1491 = !DILocalVariable(arg: 1, scope: !1486, file: !921, line: 487, type: !1489)
!1492 = !{!1493}
!1493 = !DITemplateTypeParameter(name: "T", type: !1463)
!1494 = !DILocation(line: 487, column: 1, scope: !1486)
!1495 = distinct !DISubprogram(name: "drop_in_place<std::rt::lang_start::{closure_env#0}<()>>", linkageName: "_ZN4core3ptr85drop_in_place$LT$std..rt..lang_start$LT$$LP$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hff7050e790475270E", scope: !220, file: !921, line: 487, type: !1496, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1500, retainedNodes: !1498)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{null, !1170}
!1498 = !{!1499}
!1499 = !DILocalVariable(arg: 1, scope: !1495, file: !921, line: 487, type: !1170)
!1500 = !{!1501}
!1501 = !DITemplateTypeParameter(name: "T", type: !14)
!1502 = !DILocation(line: 487, column: 1, scope: !1495)
!1503 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hd3bacb1f2d9d38d1E", scope: !223, file: !217, line: 218, type: !1504, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !1519)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!1506, !246}
!1506 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !425, file: !2, size: 64, align: 64, elements: !1507, templateParams: !23, identifier: "73e5c906163f964bd09052518b6d2dc5")
!1507 = !{!1508}
!1508 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1506, file: !2, size: 64, align: 64, elements: !1509, templateParams: !23, identifier: "60204c6c6496841dbff7e7ec5dea5282", discriminator: !1518)
!1509 = !{!1510, !1514}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1508, file: !2, baseType: !1511, size: 64, align: 64, extraData: i64 0)
!1511 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1506, file: !2, size: 64, align: 64, elements: !23, templateParams: !1512, identifier: "b393050474aeb0631755d975367153e1")
!1512 = !{!1513}
!1513 = !DITemplateTypeParameter(name: "T", type: !223)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1508, file: !2, baseType: !1515, size: 64, align: 64)
!1515 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1506, file: !2, size: 64, align: 64, elements: !1516, templateParams: !1512, identifier: "a01a0b695bfd5d94759ea5c77533b9ea")
!1516 = !{!1517}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1515, file: !2, baseType: !223, size: 64, align: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, scope: !1506, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!1519 = !{!1520}
!1520 = !DILocalVariable(name: "ptr", arg: 1, scope: !1503, file: !217, line: 218, type: !246)
!1521 = !DILocation(line: 218, column: 22, scope: !1503)
!1522 = !DILocalVariable(name: "metadata", scope: !1523, file: !217, line: 219, type: !7, align: 1)
!1523 = !DILexicalBlockFile(scope: !1524, file: !217, discriminator: 0)
!1524 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17he411f5a623e39798E", scope: !1526, file: !1525, line: 127, type: !1527, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !1530)
!1525 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "59565ed3c34dee3e8f8928c29f8f7ce4")
!1526 = !DINamespace(name: "metadata", scope: !220)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!246, !1529, !7}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 0)
!1530 = !{!1531, !1522}
!1531 = !DILocalVariable(name: "data_address", scope: !1523, file: !217, line: 219, type: !1529, align: 8)
!1532 = !DILocation(line: 219, column: 13, scope: !1523, inlinedAt: !1533)
!1533 = !DILocation(line: 668, column: 5, scope: !1534, inlinedAt: !1537)
!1534 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17ha34011514810011bE", scope: !220, file: !921, line: 667, type: !1535, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !23)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!246}
!1537 = !DILocation(line: 38, column: 41, scope: !1538, inlinedAt: !1547)
!1538 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hb807a5d5bf5190eaE", scope: !1540, file: !1539, line: 35, type: !1542, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !1544)
!1539 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "6672664af50614ec3c026afd55307af7")
!1540 = !DINamespace(name: "{impl#0}", scope: !1541)
!1541 = !DINamespace(name: "mut_ptr", scope: !220)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!710, !246}
!1544 = !{!1545}
!1545 = !DILocalVariable(name: "self", scope: !1546, file: !217, line: 219, type: !246, align: 8)
!1546 = !DILexicalBlockFile(scope: !1538, file: !217, discriminator: 0)
!1547 = !DILocation(line: 219, column: 13, scope: !1503)
!1548 = !DILocation(line: 219, column: 13, scope: !1546, inlinedAt: !1547)
!1549 = !DILocalVariable(name: "self", scope: !1550, file: !217, line: 219, type: !246, align: 8)
!1550 = !DILexicalBlockFile(scope: !1551, file: !217, discriminator: 0)
!1551 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17he2f169ba8c14c6ddE", scope: !1540, file: !1539, line: 707, type: !1552, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !1554)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!710, !246, !246}
!1554 = !{!1549, !1555}
!1555 = !DILocalVariable(name: "other", scope: !1550, file: !217, line: 219, type: !246, align: 8)
!1556 = !DILocation(line: 219, column: 13, scope: !1550, inlinedAt: !1557)
!1557 = !DILocation(line: 38, column: 9, scope: !1538, inlinedAt: !1547)
!1558 = !DILocation(line: 219, column: 13, scope: !1559, inlinedAt: !1565)
!1559 = !DILexicalBlockFile(scope: !1560, file: !217, discriminator: 0)
!1560 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h9c745b2f2d66c28aE", scope: !220, file: !921, line: 569, type: !1561, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !1563)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!1529, !9}
!1563 = !{!1564}
!1564 = !DILocalVariable(name: "addr", scope: !1559, file: !217, line: 219, type: !9, align: 8)
!1565 = !DILocation(line: 668, column: 24, scope: !1534, inlinedAt: !1537)
!1566 = !DILocation(line: 219, column: 12, scope: !1503)
!1567 = !DILocation(line: 223, column: 13, scope: !1503)
!1568 = !DILocation(line: 219, column: 9, scope: !1503)
!1569 = !DILocation(line: 221, column: 47, scope: !1503)
!1570 = !DILocalVariable(name: "ptr", scope: !1571, file: !217, line: 221, type: !246, align: 8)
!1571 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1676b77ae4055e3cE", scope: !223, file: !217, line: 196, type: !258, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !1572)
!1572 = !{!1570}
!1573 = !DILocation(line: 221, column: 27, scope: !1571, inlinedAt: !1574)
!1574 = !DILocation(line: 221, column: 27, scope: !1503)
!1575 = !DILocation(line: 221, column: 13, scope: !1503)
!1576 = !DILocation(line: 225, column: 6, scope: !1503)
!1577 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h6fb1179d75a4beb0E", scope: !1578, file: !571, line: 710, type: !1579, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1602, retainedNodes: !1600)
!1578 = !DINamespace(name: "{impl#3}", scope: !573)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!1581, !1592}
!1581 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i32>", scope: !425, file: !2, size: 64, align: 32, elements: !1582, templateParams: !23, identifier: "6bdf046ca244405c14a34b3e2d629599")
!1582 = !{!1583}
!1583 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1581, file: !2, size: 64, align: 32, elements: !1584, templateParams: !23, identifier: "559485cc0a180799d59c09b1983d68fc", discriminator: !1591)
!1584 = !{!1585, !1587}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1583, file: !2, baseType: !1586, size: 64, align: 32, extraData: i64 0)
!1586 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1581, file: !2, size: 64, align: 32, elements: !23, templateParams: !466, identifier: "ac8a4a068b65e116120724915be2f37c")
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1583, file: !2, baseType: !1588, size: 64, align: 32, extraData: i64 1)
!1588 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1581, file: !2, size: 64, align: 32, elements: !1589, templateParams: !466, identifier: "d6a544ac03d054cdd4d0bb540c69af89")
!1589 = !{!1590}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1588, file: !2, baseType: !33, size: 32, align: 32, offset: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, scope: !1581, file: !2, baseType: !419, size: 32, align: 32, flags: DIFlagArtificial)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<i32>", baseType: !1593, size: 64, align: 64, dwarfAddressSpace: 0)
!1593 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<i32>", scope: !1594, file: !2, size: 64, align: 32, elements: !1595, templateParams: !1598, identifier: "83ecdf3a91dfbabedf377a8d8dc77c39")
!1594 = !DINamespace(name: "range", scope: !1148)
!1595 = !{!1596, !1597}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1593, file: !2, baseType: !33, size: 32, align: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1593, file: !2, baseType: !33, size: 32, align: 32, offset: 32)
!1598 = !{!1599}
!1599 = !DITemplateTypeParameter(name: "Idx", type: !33)
!1600 = !{!1601}
!1601 = !DILocalVariable(name: "self", arg: 1, scope: !1577, file: !571, line: 710, type: !1592)
!1602 = !{!1603}
!1603 = !DITemplateTypeParameter(name: "A", type: !33)
!1604 = !DILocation(line: 710, column: 13, scope: !1577)
!1605 = !DILocation(line: 711, column: 9, scope: !1577)
!1606 = !DILocation(line: 712, column: 6, scope: !1577)
!1607 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h7b1637b1988718b5E", scope: !1578, file: !571, line: 710, type: !1608, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1619, retainedNodes: !1617)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!424, !1610}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<usize>", baseType: !1611, size: 64, align: 64, dwarfAddressSpace: 0)
!1611 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !1594, file: !2, size: 128, align: 64, elements: !1612, templateParams: !1615, identifier: "855eb37746b15049ea4556b174e97dd7")
!1612 = !{!1613, !1614}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1611, file: !2, baseType: !9, size: 64, align: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1611, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1615 = !{!1616}
!1616 = !DITemplateTypeParameter(name: "Idx", type: !9)
!1617 = !{!1618}
!1618 = !DILocalVariable(name: "self", arg: 1, scope: !1607, file: !571, line: 710, type: !1610)
!1619 = !{!1620}
!1620 = !DITemplateTypeParameter(name: "A", type: !9)
!1621 = !DILocation(line: 710, column: 13, scope: !1607)
!1622 = !DILocation(line: 711, column: 9, scope: !1607)
!1623 = !DILocation(line: 712, column: 6, scope: !1607)
!1624 = distinct !DISubprogram(name: "from_size_valid_align", linkageName: "_ZN4core5alloc6layout6Layout21from_size_valid_align17h2bd876eb57732763E", scope: !283, file: !1625, line: 77, type: !1626, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1645)
!1625 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d0ac208ee70c69b94b07d38255a5525")
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!1628, !9, !289}
!1628 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !398, file: !2, size: 128, align: 64, elements: !1629, templateParams: !23, identifier: "61ed90a3a60bf5c9da25fda9753d7b5")
!1629 = !{!1630}
!1630 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1628, file: !2, size: 128, align: 64, elements: !1631, templateParams: !23, identifier: "e7bb3560bfa0d3445ee2359cfbf9e5fe", discriminator: !1644)
!1631 = !{!1632, !1640}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1630, file: !2, baseType: !1633, size: 128, align: 64)
!1633 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1628, file: !2, size: 128, align: 64, elements: !1634, templateParams: !1636, identifier: "1efd2a987c8fa52528b02bba0275d8c7")
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1633, file: !2, baseType: !283, size: 128, align: 64)
!1636 = !{!1637, !1638}
!1637 = !DITemplateTypeParameter(name: "T", type: !283)
!1638 = !DITemplateTypeParameter(name: "E", type: !1639)
!1639 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !284, file: !2, align: 8, elements: !23, identifier: "6e89e1d1b17d37435f7b87cb1d5cb26d")
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1630, file: !2, baseType: !1641, size: 128, align: 64, extraData: i64 0)
!1641 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1628, file: !2, size: 128, align: 64, elements: !1642, templateParams: !1636, identifier: "9488fb9df60d2b7e722ab2cffead9e28")
!1642 = !{!1643}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1641, file: !2, baseType: !1639, align: 8)
!1644 = !DIDerivedType(tag: DW_TAG_member, scope: !1628, file: !2, baseType: !115, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!1645 = !{!1646, !1647}
!1646 = !DILocalVariable(name: "size", arg: 1, scope: !1624, file: !1625, line: 77, type: !9)
!1647 = !DILocalVariable(name: "align", arg: 2, scope: !1624, file: !1625, line: 77, type: !289)
!1648 = !DILocation(line: 77, column: 36, scope: !1624)
!1649 = !DILocation(line: 77, column: 49, scope: !1624)
!1650 = !DILocalVariable(name: "self", scope: !1651, file: !1625, line: 92, type: !1654, align: 8)
!1651 = !DILexicalBlockFile(scope: !1652, file: !1625, discriminator: 0)
!1652 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1660)
!1653 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "f51cb88dd069db0b7fcd2123d03b69c9")
!1654 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !1655, file: !2, size: 64, align: 64, elements: !1656, templateParams: !23, identifier: "c6c54dffb7a9517405cc55666c804e7")
!1655 = !DINamespace(name: "nonzero", scope: !588)
!1656 = !{!1657}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1654, file: !2, baseType: !9, size: 64, align: 64)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!9, !1654}
!1660 = !{!1650}
!1661 = !DILocation(line: 92, column: 42, scope: !1651, inlinedAt: !1662)
!1662 = !DILocation(line: 92, column: 42, scope: !1624)
!1663 = !DILocalVariable(name: "self", scope: !1664, file: !1625, line: 92, type: !289, align: 8)
!1664 = !DILexicalBlockFile(scope: !1665, file: !1625, discriminator: 0)
!1665 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1669)
!1666 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/mem/valid_align.rs", directory: "", checksumkind: CSK_MD5, checksum: "681d44917f5a26aec3d3954431def51e")
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!1654, !289}
!1669 = !{!1663}
!1670 = !DILocation(line: 92, column: 42, scope: !1664, inlinedAt: !1662)
!1671 = !{i64 1, i64 -9223372036854775807}
!1672 = !DILocalVariable(name: "n", scope: !1673, file: !1625, line: 92, type: !9, align: 8)
!1673 = !DILexicalBlockFile(scope: !1674, file: !1625, discriminator: 0)
!1674 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1677)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!1654, !9}
!1677 = !{!1672, !1678}
!1678 = !DILocalVariable(name: "runtime", scope: !1679, file: !1625, line: 92, type: !1682, align: 8)
!1679 = !DILexicalBlockFile(scope: !1680, file: !1625, discriminator: 0)
!1680 = distinct !DILexicalBlock(scope: !1674, file: !1681, line: 2336, column: 13)
!1681 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "f96ba730d7cf23ae45fdc72e7caf5f1b")
!1682 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1683, file: !2, size: 64, align: 64, elements: !1685, templateParams: !23, identifier: "cbed2d88a1ec7b20c4ad53e8c9863d89")
!1683 = !DINamespace(name: "new_unchecked", scope: !1684)
!1684 = !DINamespace(name: "{impl#35}", scope: !1655)
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__n", scope: !1682, file: !2, baseType: !690, size: 64, align: 64)
!1687 = !DILocation(line: 92, column: 42, scope: !1673, inlinedAt: !1688)
!1688 = !DILocation(line: 41, column: 18, scope: !1665, inlinedAt: !1662)
!1689 = !DILocation(line: 92, column: 41, scope: !1624)
!1690 = !DILocation(line: 92, column: 19, scope: !1624)
!1691 = !DILocation(line: 92, column: 12, scope: !1624)
!1692 = !DILocation(line: 97, column: 12, scope: !1624)
!1693 = !DILocation(line: 97, column: 9, scope: !1624)
!1694 = !DILocation(line: 98, column: 6, scope: !1624)
!1695 = !DILocation(line: 93, column: 20, scope: !1624)
!1696 = distinct !DISubprogram(name: "array<[i32; 4]>", linkageName: "_ZN4core5alloc6layout6Layout5array17h21430b4bd37f8f85E", scope: !283, file: !1625, line: 416, type: !1697, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !1699)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{!1628, !9}
!1699 = !{!1700, !1701, !1703, !1723}
!1700 = !DILocalVariable(name: "n", arg: 1, scope: !1696, file: !1625, line: 416, type: !9)
!1701 = !DILocalVariable(name: "array_size", scope: !1702, file: !1625, line: 417, type: !9, align: 8)
!1702 = distinct !DILexicalBlock(scope: !1696, file: !1625, line: 417, column: 9)
!1703 = !DILocalVariable(name: "residual", scope: !1704, file: !1625, line: 417, type: !1705, align: 1)
!1704 = distinct !DILexicalBlock(scope: !1696, file: !1625, line: 417, column: 79)
!1705 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !398, file: !2, align: 8, elements: !1706, templateParams: !23, identifier: "2408e7ead4450472646681a937f2eed")
!1706 = !{!1707}
!1707 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1705, file: !2, align: 8, elements: !1708, templateParams: !23, identifier: "6cbcec323d74ab47f813265a09655e1e")
!1708 = !{!1709, !1719}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1707, file: !2, baseType: !1710, align: 8)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1705, file: !2, align: 8, elements: !1711, templateParams: !1717, identifier: "40ec0a271e0cb2d34d257ba58fdead82")
!1711 = !{!1712}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1710, file: !2, baseType: !1713, align: 8)
!1713 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !1714, file: !2, align: 8, elements: !1715, templateParams: !23, identifier: "54da939063c7c2baf203c9f582cd0995")
!1714 = !DINamespace(name: "convert", scope: !114)
!1715 = !{!1716}
!1716 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1713, file: !2, align: 8, elements: !23, identifier: "8a046f69014feadb4a5e941e4277afe9")
!1717 = !{!1718, !1638}
!1718 = !DITemplateTypeParameter(name: "T", type: !1713)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1707, file: !2, baseType: !1720, align: 8)
!1720 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1705, file: !2, align: 8, elements: !1721, templateParams: !1717, identifier: "72611e72c15211a4d55dae520b84155f")
!1721 = !{!1722}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1720, file: !2, baseType: !1639, align: 8)
!1723 = !DILocalVariable(name: "val", scope: !1724, file: !1625, line: 417, type: !9, align: 8)
!1724 = distinct !DILexicalBlock(scope: !1696, file: !1625, line: 417, column: 26)
!1725 = !DILocation(line: 416, column: 21, scope: !1696)
!1726 = !DILocalVariable(name: "self", scope: !1727, file: !1625, line: 417, type: !1750, align: 8)
!1727 = !DILexicalBlockFile(scope: !1728, file: !1625, discriminator: 0)
!1728 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h17617a82fb35973aE", scope: !1730, file: !1729, line: 2117, type: !1731, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1758, retainedNodes: !1764)
!1729 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "376d3f50f2b6d030dde9244768e6c6e1")
!1730 = !DINamespace(name: "{impl#27}", scope: !398)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!1733, !1750}
!1733 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !1734, file: !2, size: 128, align: 64, elements: !1735, templateParams: !23, identifier: "ce5c98f9de0798e97388caf7b24b4edc")
!1734 = !DINamespace(name: "control_flow", scope: !1148)
!1735 = !{!1736}
!1736 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1733, file: !2, size: 128, align: 64, elements: !1737, templateParams: !23, identifier: "6bdd8e43359c9849ce58ffeff4bb9b82", discriminator: !1749)
!1737 = !{!1738, !1745}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1736, file: !2, baseType: !1739, size: 128, align: 64, extraData: i64 0)
!1739 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1733, file: !2, size: 128, align: 64, elements: !1740, templateParams: !1742, identifier: "b6fdadee5e49b7207145efbc9b42a94a")
!1740 = !{!1741}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1739, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1742 = !{!1743, !1744}
!1743 = !DITemplateTypeParameter(name: "B", type: !1705)
!1744 = !DITemplateTypeParameter(name: "C", type: !9)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1736, file: !2, baseType: !1746, size: 128, align: 64, extraData: i64 1)
!1746 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1733, file: !2, size: 128, align: 64, elements: !1747, templateParams: !1742, identifier: "b5889c00b354165f6e6f55dba1990157")
!1747 = !{!1748}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1746, file: !2, baseType: !1705, align: 8, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, scope: !1733, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!1750 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !398, file: !2, size: 128, align: 64, elements: !1751, templateParams: !23, identifier: "c2a525df37a04684d727d3bb68e24786")
!1751 = !{!1752}
!1752 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1750, file: !2, size: 128, align: 64, elements: !1753, templateParams: !23, identifier: "59922648ff1b36fe1aa289683c505c74", discriminator: !1763)
!1753 = !{!1754, !1759}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1752, file: !2, baseType: !1755, size: 128, align: 64, extraData: i64 0)
!1755 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1750, file: !2, size: 128, align: 64, elements: !1756, templateParams: !1758, identifier: "98a9acae3d260aa3de9b86f4a7044881")
!1756 = !{!1757}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1755, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!1758 = !{!432, !1638}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1752, file: !2, baseType: !1760, size: 128, align: 64, extraData: i64 1)
!1760 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1750, file: !2, size: 128, align: 64, elements: !1761, templateParams: !1758, identifier: "3430eaa712a080f75cd3b02585f182")
!1761 = !{!1762}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1760, file: !2, baseType: !1639, align: 8, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, scope: !1750, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!1764 = !{!1726, !1765, !1768}
!1765 = !DILocalVariable(name: "v", scope: !1766, file: !1625, line: 417, type: !9, align: 8)
!1766 = !DILexicalBlockFile(scope: !1767, file: !1625, discriminator: 0)
!1767 = distinct !DILexicalBlock(scope: !1728, file: !1729, line: 2119, column: 13)
!1768 = !DILocalVariable(name: "e", scope: !1769, file: !1625, line: 417, type: !1639, align: 1)
!1769 = !DILexicalBlockFile(scope: !1770, file: !1625, discriminator: 0)
!1770 = distinct !DILexicalBlock(scope: !1728, file: !1729, line: 2120, column: 13)
!1771 = !DILocation(line: 417, column: 26, scope: !1727, inlinedAt: !1772)
!1772 = !DILocation(line: 417, column: 26, scope: !1696)
!1773 = !DILocalVariable(name: "self", scope: !1774, file: !1625, line: 417, type: !424, align: 8)
!1774 = !DILexicalBlockFile(scope: !1775, file: !1625, discriminator: 0)
!1775 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h2f3708410cdaa6e9E", scope: !424, file: !1776, line: 1051, type: !1777, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1758, retainedNodes: !1779)
!1776 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "86a5483c3993f03690545387e943de77")
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!1750, !424, !1639}
!1779 = !{!1773, !1780, !1781}
!1780 = !DILocalVariable(name: "err", scope: !1774, file: !1625, line: 417, type: !1639, align: 1)
!1781 = !DILocalVariable(name: "v", scope: !1782, file: !1625, line: 417, type: !9, align: 8)
!1782 = !DILexicalBlockFile(scope: !1783, file: !1625, discriminator: 0)
!1783 = distinct !DILexicalBlock(scope: !1775, file: !1776, line: 1056, column: 13)
!1784 = !DILocation(line: 417, column: 26, scope: !1774, inlinedAt: !1772)
!1785 = !DILocation(line: 417, column: 79, scope: !1704)
!1786 = !DILocalVariable(name: "residual", scope: !1787, file: !1625, line: 417, type: !1705, align: 1)
!1787 = !DILexicalBlockFile(scope: !1788, file: !1625, discriminator: 0)
!1788 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h38f116426ed01dc6E", scope: !1789, file: !1729, line: 2132, type: !1790, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1796, retainedNodes: !1792)
!1789 = !DINamespace(name: "{impl#28}", scope: !398)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!1628, !1705, !973}
!1792 = !{!1786, !1793}
!1793 = !DILocalVariable(name: "e", scope: !1794, file: !1625, line: 417, type: !1639, align: 1)
!1794 = !DILexicalBlockFile(scope: !1795, file: !1625, discriminator: 0)
!1795 = distinct !DILexicalBlock(scope: !1788, file: !1729, line: 2134, column: 13)
!1796 = !{!1637, !1638, !1797}
!1797 = !DITemplateTypeParameter(name: "F", type: !1639)
!1798 = !DILocation(line: 417, column: 26, scope: !1787, inlinedAt: !1799)
!1799 = !DILocation(line: 417, column: 26, scope: !1704)
!1800 = !DILocation(line: 417, column: 26, scope: !1769, inlinedAt: !1772)
!1801 = !DILocation(line: 417, column: 26, scope: !1794, inlinedAt: !1799)
!1802 = !DILocation(line: 417, column: 26, scope: !1782, inlinedAt: !1772)
!1803 = !DILocation(line: 417, column: 26, scope: !1766, inlinedAt: !1772)
!1804 = !DILocation(line: 417, column: 26, scope: !1724)
!1805 = !DILocation(line: 417, column: 13, scope: !1702)
!1806 = !DILocation(line: 419, column: 51, scope: !1807, inlinedAt: !1811)
!1807 = !DILexicalBlockFile(scope: !1808, file: !1625, discriminator: 0)
!1808 = distinct !DISubprogram(name: "align_of<[i32; 4]>", linkageName: "_ZN4core3mem8align_of17he2e40d4671167328E", scope: !113, file: !907, line: 464, type: !1809, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !23)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!9}
!1811 = !DILocation(line: 56, column: 44, scope: !1812, inlinedAt: !1815)
!1812 = distinct !DISubprogram(name: "of<[i32; 4]>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17hbfa87022e2a1ff94E", scope: !289, file: !1666, line: 54, type: !1813, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !23)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!289}
!1815 = !DILocation(line: 419, column: 51, scope: !1702)
!1816 = !DILocalVariable(name: "align", scope: !1817, file: !1625, line: 419, type: !9, align: 8)
!1817 = !DILexicalBlockFile(scope: !1818, file: !1625, discriminator: 0)
!1818 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h70f7ae0e5fc96283E", scope: !289, file: !1666, line: 29, type: !1819, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1821)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!289, !9}
!1821 = !{!1816, !1822}
!1822 = !DILocalVariable(name: "runtime", scope: !1823, file: !1625, line: 419, type: !1825, align: 8)
!1823 = !DILexicalBlockFile(scope: !1824, file: !1625, discriminator: 0)
!1824 = distinct !DILexicalBlock(scope: !1818, file: !1681, line: 2336, column: 13)
!1825 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1826, file: !2, size: 64, align: 64, elements: !1828, templateParams: !23, identifier: "a24236e50785a0359acaebf14a869a84")
!1826 = !DINamespace(name: "new_unchecked", scope: !1827)
!1827 = !DINamespace(name: "{impl#0}", scope: !112)
!1828 = !{!1829}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__align", scope: !1825, file: !2, baseType: !690, size: 64, align: 64)
!1830 = !DILocation(line: 419, column: 51, scope: !1817, inlinedAt: !1831)
!1831 = !DILocation(line: 56, column: 18, scope: !1812, inlinedAt: !1815)
!1832 = !DILocation(line: 420, column: 6, scope: !1696)
!1833 = !DILocation(line: 419, column: 9, scope: !1702)
!1834 = distinct !DISubprogram(name: "array<i32>", linkageName: "_ZN4core5alloc6layout6Layout5array17h27fd1a567895a074E", scope: !283, file: !1625, line: 416, type: !1697, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1835)
!1835 = !{!1836, !1837, !1839, !1841}
!1836 = !DILocalVariable(name: "n", arg: 1, scope: !1834, file: !1625, line: 416, type: !9)
!1837 = !DILocalVariable(name: "array_size", scope: !1838, file: !1625, line: 417, type: !9, align: 8)
!1838 = distinct !DILexicalBlock(scope: !1834, file: !1625, line: 417, column: 9)
!1839 = !DILocalVariable(name: "residual", scope: !1840, file: !1625, line: 417, type: !1705, align: 1)
!1840 = distinct !DILexicalBlock(scope: !1834, file: !1625, line: 417, column: 79)
!1841 = !DILocalVariable(name: "val", scope: !1842, file: !1625, line: 417, type: !9, align: 8)
!1842 = distinct !DILexicalBlock(scope: !1834, file: !1625, line: 417, column: 26)
!1843 = !DILocation(line: 416, column: 21, scope: !1834)
!1844 = !DILocalVariable(name: "self", scope: !1845, file: !1625, line: 417, type: !1750, align: 8)
!1845 = !DILexicalBlockFile(scope: !1846, file: !1625, discriminator: 0)
!1846 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h17617a82fb35973aE", scope: !1730, file: !1729, line: 2117, type: !1731, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1758, retainedNodes: !1847)
!1847 = !{!1844, !1848, !1851}
!1848 = !DILocalVariable(name: "v", scope: !1849, file: !1625, line: 417, type: !9, align: 8)
!1849 = !DILexicalBlockFile(scope: !1850, file: !1625, discriminator: 0)
!1850 = distinct !DILexicalBlock(scope: !1846, file: !1729, line: 2119, column: 13)
!1851 = !DILocalVariable(name: "e", scope: !1852, file: !1625, line: 417, type: !1639, align: 1)
!1852 = !DILexicalBlockFile(scope: !1853, file: !1625, discriminator: 0)
!1853 = distinct !DILexicalBlock(scope: !1846, file: !1729, line: 2120, column: 13)
!1854 = !DILocation(line: 417, column: 26, scope: !1845, inlinedAt: !1855)
!1855 = !DILocation(line: 417, column: 26, scope: !1834)
!1856 = !DILocalVariable(name: "self", scope: !1857, file: !1625, line: 417, type: !424, align: 8)
!1857 = !DILexicalBlockFile(scope: !1858, file: !1625, discriminator: 0)
!1858 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h2f3708410cdaa6e9E", scope: !424, file: !1776, line: 1051, type: !1777, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1758, retainedNodes: !1859)
!1859 = !{!1856, !1860, !1861}
!1860 = !DILocalVariable(name: "err", scope: !1857, file: !1625, line: 417, type: !1639, align: 1)
!1861 = !DILocalVariable(name: "v", scope: !1862, file: !1625, line: 417, type: !9, align: 8)
!1862 = !DILexicalBlockFile(scope: !1863, file: !1625, discriminator: 0)
!1863 = distinct !DILexicalBlock(scope: !1858, file: !1776, line: 1056, column: 13)
!1864 = !DILocation(line: 417, column: 26, scope: !1857, inlinedAt: !1855)
!1865 = !DILocation(line: 417, column: 79, scope: !1840)
!1866 = !DILocalVariable(name: "residual", scope: !1867, file: !1625, line: 417, type: !1705, align: 1)
!1867 = !DILexicalBlockFile(scope: !1868, file: !1625, discriminator: 0)
!1868 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h38f116426ed01dc6E", scope: !1789, file: !1729, line: 2132, type: !1790, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1796, retainedNodes: !1869)
!1869 = !{!1866, !1870}
!1870 = !DILocalVariable(name: "e", scope: !1871, file: !1625, line: 417, type: !1639, align: 1)
!1871 = !DILexicalBlockFile(scope: !1872, file: !1625, discriminator: 0)
!1872 = distinct !DILexicalBlock(scope: !1868, file: !1729, line: 2134, column: 13)
!1873 = !DILocation(line: 417, column: 26, scope: !1867, inlinedAt: !1874)
!1874 = !DILocation(line: 417, column: 26, scope: !1840)
!1875 = !DILocation(line: 417, column: 26, scope: !1852, inlinedAt: !1855)
!1876 = !DILocation(line: 417, column: 26, scope: !1871, inlinedAt: !1874)
!1877 = !DILocation(line: 417, column: 26, scope: !1862, inlinedAt: !1855)
!1878 = !DILocation(line: 417, column: 26, scope: !1849, inlinedAt: !1855)
!1879 = !DILocation(line: 417, column: 26, scope: !1842)
!1880 = !DILocation(line: 417, column: 13, scope: !1838)
!1881 = !DILocation(line: 419, column: 51, scope: !1882, inlinedAt: !1884)
!1882 = !DILexicalBlockFile(scope: !1883, file: !1625, discriminator: 0)
!1883 = distinct !DISubprogram(name: "align_of<i32>", linkageName: "_ZN4core3mem8align_of17h4ae4c7024586286dE", scope: !113, file: !907, line: 464, type: !1809, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !23)
!1884 = !DILocation(line: 56, column: 44, scope: !1885, inlinedAt: !1886)
!1885 = distinct !DISubprogram(name: "of<i32>", linkageName: "_ZN4core3mem11valid_align10ValidAlign2of17ha11dd90bf31ee754E", scope: !289, file: !1666, line: 54, type: !1813, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !23)
!1886 = !DILocation(line: 419, column: 51, scope: !1838)
!1887 = !DILocalVariable(name: "align", scope: !1888, file: !1625, line: 419, type: !9, align: 8)
!1888 = !DILexicalBlockFile(scope: !1889, file: !1625, discriminator: 0)
!1889 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3mem11valid_align10ValidAlign13new_unchecked17h70f7ae0e5fc96283E", scope: !289, file: !1666, line: 29, type: !1819, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !1890)
!1890 = !{!1887, !1891}
!1891 = !DILocalVariable(name: "runtime", scope: !1892, file: !1625, line: 419, type: !1825, align: 8)
!1892 = !DILexicalBlockFile(scope: !1893, file: !1625, discriminator: 0)
!1893 = distinct !DILexicalBlock(scope: !1889, file: !1681, line: 2336, column: 13)
!1894 = !DILocation(line: 419, column: 51, scope: !1888, inlinedAt: !1895)
!1895 = !DILocation(line: 56, column: 18, scope: !1885, inlinedAt: !1886)
!1896 = !DILocation(line: 420, column: 6, scope: !1834)
!1897 = !DILocation(line: 419, column: 9, scope: !1838)
!1898 = distinct !DISubprogram(name: "fmt<i32, 1>", linkageName: "_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h053978c79cf2d9e5E", scope: !1899, file: !632, line: 251, type: !1900, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1902)
!1899 = !DINamespace(name: "{impl#12}", scope: !634)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{!397, !75, !415}
!1902 = !{!1903, !1904}
!1903 = !DILocalVariable(name: "self", arg: 1, scope: !1898, file: !632, line: 251, type: !75)
!1904 = !DILocalVariable(name: "f", arg: 2, scope: !1898, file: !632, line: 251, type: !415)
!1905 = !DILocation(line: 251, column: 12, scope: !1898)
!1906 = !DILocation(line: 251, column: 19, scope: !1898)
!1907 = !DILocalVariable(name: "index", scope: !1908, file: !632, line: 252, type: !1912, align: 1)
!1908 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull, 1>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h5131cc45cecc8179E", scope: !1909, file: !632, line: 285, type: !1910, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !1913)
!1909 = !DINamespace(name: "{impl#15}", scope: !634)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!546, !75, !1912, !973}
!1912 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !1594, file: !2, align: 8, elements: !23, identifier: "63a67109926f3a3dc00488fbc228c0f9")
!1913 = !{!1914, !1907}
!1914 = !DILocalVariable(name: "self", scope: !1908, file: !632, line: 252, type: !75, align: 8)
!1915 = !{!467, !1916}
!1916 = !DITemplateTypeParameter(name: "I", type: !1912)
!1917 = !DILocation(line: 252, column: 27, scope: !1908, inlinedAt: !1918)
!1918 = !DILocation(line: 252, column: 27, scope: !1898)
!1919 = !DILocalVariable(name: "index", scope: !1920, file: !632, line: 252, type: !1912, align: 1)
!1920 = !DILexicalBlockFile(scope: !1921, file: !632, discriminator: 0)
!1921 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h6959b4945e9ddd76E", scope: !1923, file: !1922, line: 17, type: !1925, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !1927)
!1922 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "22a04328eca3d78fd2bf5357f9150928")
!1923 = !DINamespace(name: "{impl#0}", scope: !1924)
!1924 = !DINamespace(name: "index", scope: !612)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{!546, !546, !1912, !973}
!1927 = !{!1928, !1919}
!1928 = !DILocalVariable(name: "self", scope: !1920, file: !632, line: 252, type: !546, align: 8)
!1929 = !DILocation(line: 252, column: 27, scope: !1920, inlinedAt: !1930)
!1930 = !DILocation(line: 286, column: 9, scope: !1908, inlinedAt: !1918)
!1931 = !DILocalVariable(name: "self", scope: !1932, file: !632, line: 252, type: !1912, align: 1)
!1932 = !DILexicalBlockFile(scope: !1933, file: !632, discriminator: 0)
!1933 = distinct !DISubprogram(name: "index<i32>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20ca1487695032afE", scope: !1934, file: !1922, line: 432, type: !1935, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1937)
!1934 = !DINamespace(name: "{impl#6}", scope: !1924)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!546, !1912, !546, !973}
!1937 = !{!1931, !1938}
!1938 = !DILocalVariable(name: "slice", scope: !1932, file: !632, line: 252, type: !546, align: 8)
!1939 = !DILocation(line: 252, column: 27, scope: !1932, inlinedAt: !1940)
!1940 = !DILocation(line: 18, column: 9, scope: !1921, inlinedAt: !1930)
!1941 = !DILocation(line: 252, column: 26, scope: !1898)
!1942 = !DILocation(line: 252, column: 9, scope: !1898)
!1943 = !DILocation(line: 253, column: 6, scope: !1898)
!1944 = distinct !DISubprogram(name: "fmt<i32, 10>", linkageName: "_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h4b00c9e669529a7dE", scope: !1899, file: !632, line: 251, type: !1945, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1947)
!1945 = !DISubroutineType(types: !1946)
!1946 = !{!397, !42, !415}
!1947 = !{!1948, !1949}
!1948 = !DILocalVariable(name: "self", arg: 1, scope: !1944, file: !632, line: 251, type: !42)
!1949 = !DILocalVariable(name: "f", arg: 2, scope: !1944, file: !632, line: 251, type: !415)
!1950 = !DILocation(line: 251, column: 12, scope: !1944)
!1951 = !DILocation(line: 251, column: 19, scope: !1944)
!1952 = !DILocalVariable(name: "index", scope: !1953, file: !632, line: 252, type: !1912, align: 1)
!1953 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull, 10>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hd9b576d8c5b81895E", scope: !1909, file: !632, line: 285, type: !1954, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !1956)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!546, !42, !1912, !973}
!1956 = !{!1957, !1952}
!1957 = !DILocalVariable(name: "self", scope: !1953, file: !632, line: 252, type: !42, align: 8)
!1958 = !DILocation(line: 252, column: 27, scope: !1953, inlinedAt: !1959)
!1959 = !DILocation(line: 252, column: 27, scope: !1944)
!1960 = !DILocalVariable(name: "index", scope: !1961, file: !632, line: 252, type: !1912, align: 1)
!1961 = !DILexicalBlockFile(scope: !1962, file: !632, discriminator: 0)
!1962 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h6959b4945e9ddd76E", scope: !1923, file: !1922, line: 17, type: !1925, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !1963)
!1963 = !{!1964, !1960}
!1964 = !DILocalVariable(name: "self", scope: !1961, file: !632, line: 252, type: !546, align: 8)
!1965 = !DILocation(line: 252, column: 27, scope: !1961, inlinedAt: !1966)
!1966 = !DILocation(line: 286, column: 9, scope: !1953, inlinedAt: !1959)
!1967 = !DILocalVariable(name: "self", scope: !1968, file: !632, line: 252, type: !1912, align: 1)
!1968 = !DILexicalBlockFile(scope: !1969, file: !632, discriminator: 0)
!1969 = distinct !DISubprogram(name: "index<i32>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20ca1487695032afE", scope: !1934, file: !1922, line: 432, type: !1935, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1970)
!1970 = !{!1967, !1971}
!1971 = !DILocalVariable(name: "slice", scope: !1968, file: !632, line: 252, type: !546, align: 8)
!1972 = !DILocation(line: 252, column: 27, scope: !1968, inlinedAt: !1973)
!1973 = !DILocation(line: 18, column: 9, scope: !1962, inlinedAt: !1966)
!1974 = !DILocation(line: 252, column: 26, scope: !1944)
!1975 = !DILocation(line: 252, column: 9, scope: !1944)
!1976 = !DILocation(line: 253, column: 6, scope: !1944)
!1977 = distinct !DISubprogram(name: "fmt<i32, 3>", linkageName: "_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17h6cf5eec818869c0cE", scope: !1899, file: !632, line: 251, type: !1978, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !1980)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!397, !63, !415}
!1980 = !{!1981, !1982}
!1981 = !DILocalVariable(name: "self", arg: 1, scope: !1977, file: !632, line: 251, type: !63)
!1982 = !DILocalVariable(name: "f", arg: 2, scope: !1977, file: !632, line: 251, type: !415)
!1983 = !DILocation(line: 251, column: 12, scope: !1977)
!1984 = !DILocation(line: 251, column: 19, scope: !1977)
!1985 = !DILocalVariable(name: "index", scope: !1986, file: !632, line: 252, type: !1912, align: 1)
!1986 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull, 3>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h308073b3a57155a6E", scope: !1909, file: !632, line: 285, type: !1987, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !1989)
!1987 = !DISubroutineType(types: !1988)
!1988 = !{!546, !63, !1912, !973}
!1989 = !{!1990, !1985}
!1990 = !DILocalVariable(name: "self", scope: !1986, file: !632, line: 252, type: !63, align: 8)
!1991 = !DILocation(line: 252, column: 27, scope: !1986, inlinedAt: !1992)
!1992 = !DILocation(line: 252, column: 27, scope: !1977)
!1993 = !DILocalVariable(name: "index", scope: !1994, file: !632, line: 252, type: !1912, align: 1)
!1994 = !DILexicalBlockFile(scope: !1995, file: !632, discriminator: 0)
!1995 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h6959b4945e9ddd76E", scope: !1923, file: !1922, line: 17, type: !1925, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !1996)
!1996 = !{!1997, !1993}
!1997 = !DILocalVariable(name: "self", scope: !1994, file: !632, line: 252, type: !546, align: 8)
!1998 = !DILocation(line: 252, column: 27, scope: !1994, inlinedAt: !1999)
!1999 = !DILocation(line: 286, column: 9, scope: !1986, inlinedAt: !1992)
!2000 = !DILocalVariable(name: "self", scope: !2001, file: !632, line: 252, type: !1912, align: 1)
!2001 = !DILexicalBlockFile(scope: !2002, file: !632, discriminator: 0)
!2002 = distinct !DISubprogram(name: "index<i32>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20ca1487695032afE", scope: !1934, file: !1922, line: 432, type: !1935, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2003)
!2003 = !{!2000, !2004}
!2004 = !DILocalVariable(name: "slice", scope: !2001, file: !632, line: 252, type: !546, align: 8)
!2005 = !DILocation(line: 252, column: 27, scope: !2001, inlinedAt: !2006)
!2006 = !DILocation(line: 18, column: 9, scope: !1995, inlinedAt: !1999)
!2007 = !DILocation(line: 252, column: 26, scope: !1977)
!2008 = !DILocation(line: 252, column: 9, scope: !1977)
!2009 = !DILocation(line: 253, column: 6, scope: !1977)
!2010 = distinct !DISubprogram(name: "fmt<i32, 5>", linkageName: "_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hcfda82f1da1c4c29E", scope: !1899, file: !632, line: 251, type: !2011, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2013)
!2011 = !DISubroutineType(types: !2012)
!2012 = !{!397, !87, !415}
!2013 = !{!2014, !2015}
!2014 = !DILocalVariable(name: "self", arg: 1, scope: !2010, file: !632, line: 251, type: !87)
!2015 = !DILocalVariable(name: "f", arg: 2, scope: !2010, file: !632, line: 251, type: !415)
!2016 = !DILocation(line: 251, column: 12, scope: !2010)
!2017 = !DILocation(line: 251, column: 19, scope: !2010)
!2018 = !DILocalVariable(name: "index", scope: !2019, file: !632, line: 252, type: !1912, align: 1)
!2019 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull, 5>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17habc990c6d901340cE", scope: !1909, file: !632, line: 285, type: !2020, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !2022)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!546, !87, !1912, !973}
!2022 = !{!2023, !2018}
!2023 = !DILocalVariable(name: "self", scope: !2019, file: !632, line: 252, type: !87, align: 8)
!2024 = !DILocation(line: 252, column: 27, scope: !2019, inlinedAt: !2025)
!2025 = !DILocation(line: 252, column: 27, scope: !2010)
!2026 = !DILocalVariable(name: "index", scope: !2027, file: !632, line: 252, type: !1912, align: 1)
!2027 = !DILexicalBlockFile(scope: !2028, file: !632, discriminator: 0)
!2028 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h6959b4945e9ddd76E", scope: !1923, file: !1922, line: 17, type: !1925, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !2029)
!2029 = !{!2030, !2026}
!2030 = !DILocalVariable(name: "self", scope: !2027, file: !632, line: 252, type: !546, align: 8)
!2031 = !DILocation(line: 252, column: 27, scope: !2027, inlinedAt: !2032)
!2032 = !DILocation(line: 286, column: 9, scope: !2019, inlinedAt: !2025)
!2033 = !DILocalVariable(name: "self", scope: !2034, file: !632, line: 252, type: !1912, align: 1)
!2034 = !DILexicalBlockFile(scope: !2035, file: !632, discriminator: 0)
!2035 = distinct !DISubprogram(name: "index<i32>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20ca1487695032afE", scope: !1934, file: !1922, line: 432, type: !1935, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2036)
!2036 = !{!2033, !2037}
!2037 = !DILocalVariable(name: "slice", scope: !2034, file: !632, line: 252, type: !546, align: 8)
!2038 = !DILocation(line: 252, column: 27, scope: !2034, inlinedAt: !2039)
!2039 = !DILocation(line: 18, column: 9, scope: !2028, inlinedAt: !2032)
!2040 = !DILocation(line: 252, column: 26, scope: !2010)
!2041 = !DILocation(line: 252, column: 9, scope: !2010)
!2042 = !DILocation(line: 253, column: 6, scope: !2010)
!2043 = distinct !DISubprogram(name: "fmt<i32, 6>", linkageName: "_ZN4core5array69_$LT$impl$u20$core..fmt..Debug$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$3fmt17hee4abddf1f13537bE", scope: !1899, file: !632, line: 251, type: !2044, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2046)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!397, !99, !415}
!2046 = !{!2047, !2048}
!2047 = !DILocalVariable(name: "self", arg: 1, scope: !2043, file: !632, line: 251, type: !99)
!2048 = !DILocalVariable(name: "f", arg: 2, scope: !2043, file: !632, line: 251, type: !415)
!2049 = !DILocation(line: 251, column: 12, scope: !2043)
!2050 = !DILocation(line: 251, column: 19, scope: !2043)
!2051 = !DILocalVariable(name: "index", scope: !2052, file: !632, line: 252, type: !1912, align: 1)
!2052 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull, 6>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h95acaaf95a06e6aeE", scope: !1909, file: !632, line: 285, type: !2053, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !2055)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!546, !99, !1912, !973}
!2055 = !{!2056, !2051}
!2056 = !DILocalVariable(name: "self", scope: !2052, file: !632, line: 252, type: !99, align: 8)
!2057 = !DILocation(line: 252, column: 27, scope: !2052, inlinedAt: !2058)
!2058 = !DILocation(line: 252, column: 27, scope: !2043)
!2059 = !DILocalVariable(name: "index", scope: !2060, file: !632, line: 252, type: !1912, align: 1)
!2060 = !DILexicalBlockFile(scope: !2061, file: !632, discriminator: 0)
!2061 = distinct !DISubprogram(name: "index<i32, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h6959b4945e9ddd76E", scope: !1923, file: !1922, line: 17, type: !1925, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1915, retainedNodes: !2062)
!2062 = !{!2063, !2059}
!2063 = !DILocalVariable(name: "self", scope: !2060, file: !632, line: 252, type: !546, align: 8)
!2064 = !DILocation(line: 252, column: 27, scope: !2060, inlinedAt: !2065)
!2065 = !DILocation(line: 286, column: 9, scope: !2052, inlinedAt: !2058)
!2066 = !DILocalVariable(name: "self", scope: !2067, file: !632, line: 252, type: !1912, align: 1)
!2067 = !DILexicalBlockFile(scope: !2068, file: !632, discriminator: 0)
!2068 = distinct !DISubprogram(name: "index<i32>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20ca1487695032afE", scope: !1934, file: !1922, line: 432, type: !1935, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2069)
!2069 = !{!2066, !2070}
!2070 = !DILocalVariable(name: "slice", scope: !2067, file: !632, line: 252, type: !546, align: 8)
!2071 = !DILocation(line: 252, column: 27, scope: !2067, inlinedAt: !2072)
!2072 = !DILocation(line: 18, column: 9, scope: !2061, inlinedAt: !2065)
!2073 = !DILocation(line: 252, column: 26, scope: !2043)
!2074 = !DILocation(line: 252, column: 9, scope: !2043)
!2075 = !DILocation(line: 253, column: 6, scope: !2043)
!2076 = distinct !DISubprogram(name: "clone<i32, 4>", linkageName: "_ZN4core5array71_$LT$impl$u20$core..clone..Clone$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5clone17hb83dcd290f124dd7E", scope: !2077, file: !632, line: 341, type: !635, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2078)
!2077 = !DINamespace(name: "{impl#20}", scope: !634)
!2078 = !{!2079}
!2079 = !DILocalVariable(name: "self", arg: 1, scope: !2076, file: !632, line: 341, type: !640)
!2080 = !DILocation(line: 341, column: 14, scope: !2076)
!2081 = !DILocation(line: 342, column: 9, scope: !2076)
!2082 = !DILocation(line: 343, column: 6, scope: !2076)
!2083 = distinct !DISubprogram(name: "eq<i32, i32, 10>", linkageName: "_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h4b48ce01a5ecb68eE", scope: !2085, file: !2084, line: 11, type: !2087, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2092, retainedNodes: !2089)
!2084 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/array/equality.rs", directory: "", checksumkind: CSK_MD5, checksum: "0b2a6ef978d2ec8f60a33a03ff9f5cb8")
!2085 = !DINamespace(name: "{impl#0}", scope: !2086)
!2086 = !DINamespace(name: "equality", scope: !634)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{!710, !42, !42}
!2089 = !{!2090, !2091}
!2090 = !DILocalVariable(name: "self", arg: 1, scope: !2083, file: !2084, line: 11, type: !42)
!2091 = !DILocalVariable(name: "other", arg: 2, scope: !2083, file: !2084, line: 11, type: !42)
!2092 = !{!1603, !2093}
!2093 = !DITemplateTypeParameter(name: "B", type: !33)
!2094 = !DILocation(line: 11, column: 11, scope: !2083)
!2095 = !DILocation(line: 11, column: 18, scope: !2083)
!2096 = !DILocation(line: 12, column: 9, scope: !2083)
!2097 = !DILocation(line: 13, column: 6, scope: !2083)
!2098 = distinct !DISubprogram(name: "eq<i32, i32, 5>", linkageName: "_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h57a6b9bad75e9263E", scope: !2085, file: !2084, line: 11, type: !2099, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2092, retainedNodes: !2101)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!710, !87, !87}
!2101 = !{!2102, !2103}
!2102 = !DILocalVariable(name: "self", arg: 1, scope: !2098, file: !2084, line: 11, type: !87)
!2103 = !DILocalVariable(name: "other", arg: 2, scope: !2098, file: !2084, line: 11, type: !87)
!2104 = !DILocation(line: 11, column: 11, scope: !2098)
!2105 = !DILocation(line: 11, column: 18, scope: !2098)
!2106 = !DILocation(line: 12, column: 9, scope: !2098)
!2107 = !DILocation(line: 13, column: 6, scope: !2098)
!2108 = distinct !DISubprogram(name: "eq<i32, i32, 1>", linkageName: "_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17h62fa740c32e6ba88E", scope: !2085, file: !2084, line: 11, type: !2109, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2092, retainedNodes: !2111)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!710, !75, !75}
!2111 = !{!2112, !2113}
!2112 = !DILocalVariable(name: "self", arg: 1, scope: !2108, file: !2084, line: 11, type: !75)
!2113 = !DILocalVariable(name: "other", arg: 2, scope: !2108, file: !2084, line: 11, type: !75)
!2114 = !DILocation(line: 11, column: 11, scope: !2108)
!2115 = !DILocation(line: 11, column: 18, scope: !2108)
!2116 = !DILocation(line: 12, column: 9, scope: !2108)
!2117 = !DILocation(line: 13, column: 6, scope: !2108)
!2118 = distinct !DISubprogram(name: "eq<i32, i32, 3>", linkageName: "_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hc54fa0657217e2dcE", scope: !2085, file: !2084, line: 11, type: !2119, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2092, retainedNodes: !2121)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{!710, !63, !63}
!2121 = !{!2122, !2123}
!2122 = !DILocalVariable(name: "self", arg: 1, scope: !2118, file: !2084, line: 11, type: !63)
!2123 = !DILocalVariable(name: "other", arg: 2, scope: !2118, file: !2084, line: 11, type: !63)
!2124 = !DILocation(line: 11, column: 11, scope: !2118)
!2125 = !DILocation(line: 11, column: 18, scope: !2118)
!2126 = !DILocation(line: 12, column: 9, scope: !2118)
!2127 = !DILocation(line: 13, column: 6, scope: !2118)
!2128 = distinct !DISubprogram(name: "eq<i32, i32, 6>", linkageName: "_ZN4core5array8equality103_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u3b$$u20$N$u5d$$GT$$u20$for$u20$$u5b$A$u3b$$u20$N$u5d$$GT$2eq17hebee8802bebf6791E", scope: !2085, file: !2084, line: 11, type: !2129, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2092, retainedNodes: !2131)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{!710, !99, !99}
!2131 = !{!2132, !2133}
!2132 = !DILocalVariable(name: "self", arg: 1, scope: !2128, file: !2084, line: 11, type: !99)
!2133 = !DILocalVariable(name: "other", arg: 2, scope: !2128, file: !2084, line: 11, type: !99)
!2134 = !DILocation(line: 11, column: 11, scope: !2128)
!2135 = !DILocation(line: 11, column: 18, scope: !2128)
!2136 = !DILocation(line: 12, column: 9, scope: !2128)
!2137 = !DILocation(line: 13, column: 6, scope: !2128)
!2138 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$i32$GT$5clone17hd34e0bea25b3ffc7E", scope: !2140, file: !2139, line: 189, type: !2143, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !2145)
!2139 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "3792fef4e5cf0c1ef2457d8c192d163d")
!2140 = !DINamespace(name: "{impl#14}", scope: !2141)
!2141 = !DINamespace(name: "impls", scope: !2142)
!2142 = !DINamespace(name: "clone", scope: !114)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!33, !32}
!2145 = !{!2146}
!2146 = !DILocalVariable(name: "self", arg: 1, scope: !2138, file: !2139, line: 189, type: !32)
!2147 = !DILocation(line: 189, column: 30, scope: !2138)
!2148 = !DILocation(line: 190, column: 25, scope: !2138)
!2149 = !DILocation(line: 191, column: 22, scope: !2138)
!2150 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls54_$LT$impl$u20$core..clone..Clone$u20$for$u20$usize$GT$5clone17h1a02ee8c3206d04dE", scope: !2151, file: !2139, line: 189, type: !2152, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !2154)
!2151 = !DINamespace(name: "{impl#5}", scope: !2141)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{!9, !690}
!2154 = !{!2155}
!2155 = !DILocalVariable(name: "self", arg: 1, scope: !2150, file: !2139, line: 189, type: !690)
!2156 = !DILocation(line: 189, column: 30, scope: !2150)
!2157 = !DILocation(line: 190, column: 25, scope: !2150)
!2158 = !DILocation(line: 191, column: 22, scope: !2150)
!2159 = distinct !DISubprogram(name: "as_mut_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hcc198bcf490c4d88E", scope: !611, file: !610, line: 506, type: !2160, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2166)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!1015, !2162}
!2162 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [i32]", file: !2, size: 128, align: 64, elements: !2163, templateParams: !23, identifier: "e558f8cebf02444c46b3d01510c8747d")
!2163 = !{!2164, !2165}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2162, file: !2, baseType: !549, size: 64, align: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2162, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2166 = !{!2167}
!2167 = !DILocalVariable(name: "self", arg: 1, scope: !2159, file: !610, line: 506, type: !2162)
!2168 = !DILocation(line: 506, column: 29, scope: !2159)
!2169 = !DILocation(line: 507, column: 9, scope: !2159)
!2170 = !DILocation(line: 508, column: 6, scope: !2159)
!2171 = distinct !DISubprogram(name: "as_ptr<i8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17haf1c774ddfcf8a7dE", scope: !611, file: !610, line: 476, type: !2172, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2182, retainedNodes: !2180)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!2174, !2175}
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i8", baseType: !193, size: 64, align: 64, dwarfAddressSpace: 0)
!2175 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[i8]", file: !2, size: 128, align: 64, elements: !2176, templateParams: !23, identifier: "cc2ad320ed202ac3c13bb57e7e44d101")
!2176 = !{!2177, !2179}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2175, file: !2, baseType: !2178, size: 64, align: 64)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64, align: 64, dwarfAddressSpace: 0)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2175, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2180 = !{!2181}
!2181 = !DILocalVariable(name: "self", arg: 1, scope: !2171, file: !610, line: 476, type: !2175)
!2182 = !{!2183}
!2183 = !DITemplateTypeParameter(name: "T", type: !193)
!2184 = !DILocation(line: 476, column: 25, scope: !2171)
!2185 = !DILocation(line: 477, column: 9, scope: !2171)
!2186 = !DILocation(line: 478, column: 6, scope: !2171)
!2187 = distinct !DISubprogram(name: "new<i32>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17hc8f477891223844fE", scope: !615, file: !2188, line: 88, type: !613, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2189)
!2188 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "36678af40fdc22d7150f6f91e11271b3")
!2189 = !{!2190, !2191, !2193}
!2190 = !DILocalVariable(name: "slice", arg: 1, scope: !2187, file: !2188, line: 88, type: !546)
!2191 = !DILocalVariable(name: "ptr", scope: !2192, file: !2188, line: 89, type: !622, align: 8)
!2192 = distinct !DILexicalBlock(scope: !2187, file: !2188, line: 89, column: 9)
!2193 = !DILocalVariable(name: "end", scope: !2194, file: !2188, line: 94, type: !622, align: 8)
!2194 = distinct !DILexicalBlock(scope: !2192, file: !2188, line: 94, column: 13)
!2195 = !DILocation(line: 88, column: 23, scope: !2187)
!2196 = !DILocation(line: 94, column: 17, scope: !2194)
!2197 = !DILocalVariable(name: "metadata", scope: !2198, file: !2188, line: 92, type: !7, align: 1)
!2198 = !DILexicalBlockFile(scope: !2199, file: !2188, discriminator: 0)
!2199 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17he156d0cd117bd5ceE", scope: !1526, file: !1525, line: 110, type: !2200, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !2202)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!226, !6, !7}
!2202 = !{!2203, !2197}
!2203 = !DILocalVariable(name: "data_address", scope: !2198, file: !2188, line: 92, type: !6, align: 8)
!2204 = !DILocation(line: 92, column: 21, scope: !2198, inlinedAt: !2205)
!2205 = !DILocation(line: 513, column: 5, scope: !2206, inlinedAt: !2209)
!2206 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17hbc6567ad10197ff6E", scope: !220, file: !921, line: 512, type: !2207, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !23)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!226}
!2209 = !DILocation(line: 39, column: 43, scope: !2210, inlinedAt: !2219)
!2210 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha3ec109805c894dfE", scope: !2212, file: !2211, line: 36, type: !2214, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2216)
!2211 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "1874e43cb83f8af3048974827047cb9c")
!2212 = !DINamespace(name: "{impl#0}", scope: !2213)
!2213 = !DINamespace(name: "const_ptr", scope: !220)
!2214 = !DISubroutineType(types: !2215)
!2215 = !{!710, !622}
!2216 = !{!2217}
!2217 = !DILocalVariable(name: "self", scope: !2218, file: !2188, line: 92, type: !622, align: 8)
!2218 = !DILexicalBlockFile(scope: !2210, file: !2188, discriminator: 0)
!2219 = !DILocation(line: 92, column: 21, scope: !2192)
!2220 = !DILocation(line: 89, column: 19, scope: !2187)
!2221 = !DILocalVariable(name: "self", scope: !2222, file: !2188, line: 89, type: !546, align: 8)
!2222 = !DILexicalBlockFile(scope: !2223, file: !2188, discriminator: 0)
!2223 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he14902a3a76d548fE", scope: !611, file: !610, line: 476, type: !2224, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2226)
!2224 = !DISubroutineType(types: !2225)
!2225 = !{!622, !546}
!2226 = !{!2221}
!2227 = !DILocation(line: 89, column: 19, scope: !2222, inlinedAt: !2220)
!2228 = !DILocation(line: 89, column: 13, scope: !2192)
!2229 = !DILocation(line: 92, column: 21, scope: !2218, inlinedAt: !2219)
!2230 = !DILocalVariable(name: "self", scope: !2231, file: !2188, line: 92, type: !226, align: 8)
!2231 = !DILexicalBlockFile(scope: !2232, file: !2188, discriminator: 0)
!2232 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h279a62753e3007f9E", scope: !2212, file: !2211, line: 777, type: !2233, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !2235)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!710, !226, !226}
!2235 = !{!2230, !2236}
!2236 = !DILocalVariable(name: "other", scope: !2231, file: !2188, line: 92, type: !226, align: 8)
!2237 = !DILocation(line: 92, column: 21, scope: !2231, inlinedAt: !2238)
!2238 = !DILocation(line: 39, column: 9, scope: !2210, inlinedAt: !2219)
!2239 = !DILocation(line: 92, column: 21, scope: !2240, inlinedAt: !2246)
!2240 = !DILexicalBlockFile(scope: !2241, file: !2188, discriminator: 0)
!2241 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h1abd72ee80965e36E", scope: !220, file: !921, line: 538, type: !2242, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !2244)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!6, !9}
!2244 = !{!2245}
!2245 = !DILocalVariable(name: "addr", scope: !2240, file: !2188, line: 92, type: !9, align: 8)
!2246 = !DILocation(line: 513, column: 20, scope: !2206, inlinedAt: !2209)
!2247 = !DILocation(line: 92, column: 20, scope: !2192)
!2248 = !DILocation(line: 92, column: 13, scope: !2192)
!2249 = !DILocation(line: 94, column: 26, scope: !2192)
!2250 = !DILocation(line: 95, column: 17, scope: !2192)
!2251 = !DILocalVariable(name: "self", scope: !2252, file: !2188, line: 95, type: !226, align: 8)
!2252 = !DILexicalBlockFile(scope: !2253, file: !2188, discriminator: 0)
!2253 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17hac63bb245030141eE", scope: !2212, file: !2211, line: 1042, type: !2254, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !2256)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!226, !226, !9}
!2256 = !{!2251, !2257}
!2257 = !DILocalVariable(name: "count", scope: !2252, file: !2188, line: 95, type: !9, align: 8)
!2258 = !DILocation(line: 95, column: 17, scope: !2252, inlinedAt: !2250)
!2259 = !DILocation(line: 95, column: 49, scope: !2192)
!2260 = !DILocalVariable(name: "self", scope: !2261, file: !2188, line: 95, type: !226, align: 8)
!2261 = !DILexicalBlockFile(scope: !2262, file: !2188, discriminator: 0)
!2262 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hcb0187a6560a47edE", scope: !2212, file: !2211, line: 536, type: !2263, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !2265)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!226, !226, !335}
!2265 = !{!2260, !2266}
!2266 = !DILocalVariable(name: "count", scope: !2261, file: !2188, line: 95, type: !335, align: 8)
!2267 = !DILocation(line: 95, column: 17, scope: !2261, inlinedAt: !2268)
!2268 = !DILocation(line: 1046, column: 9, scope: !2253, inlinedAt: !2250)
!2269 = !DILocation(line: 97, column: 17, scope: !2192)
!2270 = !DILocalVariable(name: "self", scope: !2271, file: !2188, line: 97, type: !622, align: 8)
!2271 = !DILexicalBlockFile(scope: !2272, file: !2188, discriminator: 0)
!2272 = distinct !DISubprogram(name: "add<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h50257c041439102cE", scope: !2212, file: !2211, line: 871, type: !2273, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2275)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!622, !622, !9}
!2275 = !{!2270, !2276}
!2276 = !DILocalVariable(name: "count", scope: !2271, file: !2188, line: 97, type: !9, align: 8)
!2277 = !DILocation(line: 97, column: 17, scope: !2271, inlinedAt: !2269)
!2278 = !DILocation(line: 97, column: 25, scope: !2192)
!2279 = !DILocalVariable(name: "self", scope: !2280, file: !2188, line: 97, type: !622, align: 8)
!2280 = !DILexicalBlockFile(scope: !2281, file: !2188, discriminator: 0)
!2281 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h3b6ca62d6919963fE", scope: !2212, file: !2211, line: 453, type: !2282, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2284)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!622, !622, !335}
!2284 = !{!2279, !2285}
!2285 = !DILocalVariable(name: "count", scope: !2280, file: !2188, line: 97, type: !335, align: 8)
!2286 = !DILocation(line: 97, column: 17, scope: !2280, inlinedAt: !2287)
!2287 = !DILocation(line: 876, column: 18, scope: !2272, inlinedAt: !2269)
!2288 = !DILocation(line: 94, column: 23, scope: !2192)
!2289 = !DILocation(line: 100, column: 48, scope: !2194)
!2290 = !DILocalVariable(name: "ptr", scope: !2291, file: !2188, line: 100, type: !1015, align: 8)
!2291 = !DILexicalBlockFile(scope: !2292, file: !2188, discriminator: 0)
!2292 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0e5e687d23c7ccf1E", scope: !619, file: !217, line: 196, type: !2293, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2295)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!619, !1015}
!2295 = !{!2290}
!2296 = !DILocation(line: 100, column: 25, scope: !2291, inlinedAt: !2297)
!2297 = !DILocation(line: 100, column: 25, scope: !2194)
!2298 = !DILocation(line: 100, column: 64, scope: !2194)
!2299 = !DILocation(line: 100, column: 13, scope: !2194)
!2300 = !DILocation(line: 102, column: 6, scope: !2187)
!2301 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h465af87d79c9bb4eE", scope: !1628, file: !1729, line: 852, type: !2302, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2328, retainedNodes: !2321)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!2304, !1628, !2319}
!2304 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !398, file: !2, size: 192, align: 64, elements: !2305, templateParams: !23, identifier: "b9de8b8c009cd0becb59806c6ce8cc5f")
!2305 = !{!2306}
!2306 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2304, file: !2, size: 192, align: 64, elements: !2307, templateParams: !23, identifier: "2c02efbe3ea4d75026f025a2705c6c96", discriminator: !2318)
!2307 = !{!2308, !2314}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2306, file: !2, baseType: !2309, size: 192, align: 64, extraData: i64 0)
!2309 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2304, file: !2, size: 192, align: 64, elements: !2310, templateParams: !2312, identifier: "d52268884abf5d8c9a943cd013eaf021")
!2310 = !{!2311}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2309, file: !2, baseType: !283, size: 128, align: 64, offset: 64)
!2312 = !{!1637, !2313}
!2313 = !DITemplateTypeParameter(name: "E", type: !273)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2306, file: !2, baseType: !2315, size: 192, align: 64, extraData: i64 1)
!2315 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2304, file: !2, size: 192, align: 64, elements: !2316, templateParams: !2312, identifier: "8793f3a2507382c45ebef37ef1c4bc40")
!2316 = !{!2317}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2315, file: !2, baseType: !273, size: 128, align: 64, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, scope: !2304, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!2319 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !2320, file: !2, align: 8, elements: !23, identifier: "f2bae2d168b0d8fd3c59ff569110796d")
!2320 = !DINamespace(name: "finish_grow", scope: !210)
!2321 = !{!2322, !2323, !2324, !2326}
!2322 = !DILocalVariable(name: "self", arg: 1, scope: !2301, file: !1729, line: 852, type: !1628)
!2323 = !DILocalVariable(name: "op", arg: 2, scope: !2301, file: !1729, line: 852, type: !2319)
!2324 = !DILocalVariable(name: "t", scope: !2325, file: !1729, line: 854, type: !283, align: 8)
!2325 = distinct !DILexicalBlock(scope: !2301, file: !1729, line: 854, column: 13)
!2326 = !DILocalVariable(name: "e", scope: !2327, file: !1729, line: 855, type: !1639, align: 1)
!2327 = distinct !DILexicalBlock(scope: !2301, file: !1729, line: 855, column: 13)
!2328 = !{!1637, !1638, !2329, !2330}
!2329 = !DITemplateTypeParameter(name: "F", type: !273)
!2330 = !DITemplateTypeParameter(name: "O", type: !2319)
!2331 = !DILocation(line: 852, column: 42, scope: !2301)
!2332 = !DILocation(line: 852, column: 48, scope: !2301)
!2333 = !DILocation(line: 855, column: 17, scope: !2327)
!2334 = !DILocation(line: 853, column: 15, scope: !2301)
!2335 = !DILocation(line: 853, column: 9, scope: !2301)
!2336 = !DILocation(line: 854, column: 16, scope: !2301)
!2337 = !DILocation(line: 854, column: 16, scope: !2325)
!2338 = !DILocation(line: 854, column: 22, scope: !2325)
!2339 = !DILocation(line: 854, column: 26, scope: !2301)
!2340 = !DILocation(line: 855, column: 27, scope: !2327)
!2341 = !DILocation(line: 855, column: 23, scope: !2327)
!2342 = !DILocation(line: 855, column: 32, scope: !2301)
!2343 = !DILocation(line: 857, column: 5, scope: !2301)
!2344 = !DILocation(line: 857, column: 6, scope: !2301)
!2345 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h7199e5644a34f8f6E", scope: !2346, file: !1729, line: 852, type: !2370, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2398, retainedNodes: !2391)
!2346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !398, file: !2, size: 128, align: 64, elements: !2347, templateParams: !23, identifier: "326c2eceea8ace7e7c754e4033de99df")
!2347 = !{!2348}
!2348 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2346, file: !2, size: 128, align: 64, elements: !2349, templateParams: !23, identifier: "55535437789a1bb6b6e72f8531454ed7", discriminator: !2369)
!2349 = !{!2350, !2365}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2348, file: !2, baseType: !2351, size: 128, align: 64)
!2351 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2346, file: !2, size: 128, align: 64, elements: !2352, templateParams: !2361, identifier: "ba797c89d5b07ad053fbf7cf4701a55")
!2352 = !{!2353}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2351, file: !2, baseType: !2354, size: 128, align: 64)
!2354 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !219, file: !2, size: 128, align: 64, elements: !2355, templateParams: !227, identifier: "5fc58ef498feac33c505ded838596228")
!2355 = !{!2356}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2354, file: !2, baseType: !2357, size: 128, align: 64)
!2357 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !2358, templateParams: !23, identifier: "7b54d414f2f329e57c9aa3e4ca07f4")
!2358 = !{!2359, !2360}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2357, file: !2, baseType: !838, size: 64, align: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2357, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!2361 = !{!2362, !2363}
!2362 = !DITemplateTypeParameter(name: "T", type: !2354)
!2363 = !DITemplateTypeParameter(name: "E", type: !2364)
!2364 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !285, file: !2, align: 8, elements: !23, identifier: "34d6c5a45c099706becbbcb30500973a")
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2348, file: !2, baseType: !2366, size: 128, align: 64, extraData: i64 0)
!2366 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2346, file: !2, size: 128, align: 64, elements: !2367, templateParams: !2361, identifier: "136305b53d5a9b78b331b3b0fa91ec26")
!2367 = !{!2368}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2366, file: !2, baseType: !2364, align: 8)
!2369 = !DIDerivedType(tag: DW_TAG_member, scope: !2346, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!2372, !2346, !2387}
!2372 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !398, file: !2, size: 192, align: 64, elements: !2373, templateParams: !23, identifier: "601fd7588d09095b28b20a9eb093c288")
!2373 = !{!2374}
!2374 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2372, file: !2, size: 192, align: 64, elements: !2375, templateParams: !23, identifier: "3025750a6e319fc619c06f01e4832005", discriminator: !2386)
!2375 = !{!2376, !2382}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2374, file: !2, baseType: !2377, size: 192, align: 64, extraData: i64 0)
!2377 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2372, file: !2, size: 192, align: 64, elements: !2378, templateParams: !2380, identifier: "c3a563ea9d0ebe44c356aab410dc20ec")
!2378 = !{!2379}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2377, file: !2, baseType: !2354, size: 128, align: 64, offset: 64)
!2380 = !{!2362, !2381}
!2381 = !DITemplateTypeParameter(name: "E", type: !270)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2374, file: !2, baseType: !2383, size: 192, align: 64, extraData: i64 1)
!2383 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2372, file: !2, size: 192, align: 64, elements: !2384, templateParams: !2380, identifier: "b98766a8ef41cfa7c1a20700f8c2ac67")
!2384 = !{!2385}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2383, file: !2, baseType: !270, size: 128, align: 64, offset: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, scope: !2372, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!2387 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<alloc::alloc::Global>", scope: !2320, file: !2, size: 64, align: 64, elements: !2388, templateParams: !23, identifier: "d5ca5ecf61bc300819ddcb9ae83470a1")
!2388 = !{!2389}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !2387, file: !2, baseType: !2390, size: 64, align: 64)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !283, size: 64, align: 64, dwarfAddressSpace: 0)
!2391 = !{!2392, !2393, !2394, !2396}
!2392 = !DILocalVariable(name: "self", arg: 1, scope: !2345, file: !1729, line: 852, type: !2346)
!2393 = !DILocalVariable(name: "op", arg: 2, scope: !2345, file: !1729, line: 852, type: !2387)
!2394 = !DILocalVariable(name: "t", scope: !2395, file: !1729, line: 854, type: !2354, align: 8)
!2395 = distinct !DILexicalBlock(scope: !2345, file: !1729, line: 854, column: 13)
!2396 = !DILocalVariable(name: "e", scope: !2397, file: !1729, line: 855, type: !2364, align: 1)
!2397 = distinct !DILexicalBlock(scope: !2345, file: !1729, line: 855, column: 13)
!2398 = !{!2362, !2363, !2399, !2400}
!2399 = !DITemplateTypeParameter(name: "F", type: !270)
!2400 = !DITemplateTypeParameter(name: "O", type: !2387)
!2401 = !DILocation(line: 852, column: 42, scope: !2345)
!2402 = !DILocation(line: 852, column: 48, scope: !2345)
!2403 = !DILocation(line: 855, column: 17, scope: !2397)
!2404 = !DILocation(line: 853, column: 15, scope: !2345)
!2405 = !DILocation(line: 853, column: 9, scope: !2345)
!2406 = !DILocation(line: 854, column: 16, scope: !2345)
!2407 = !DILocation(line: 854, column: 16, scope: !2395)
!2408 = !DILocation(line: 854, column: 22, scope: !2395)
!2409 = !DILocation(line: 854, column: 26, scope: !2345)
!2410 = !DILocation(line: 855, column: 27, scope: !2397)
!2411 = !DILocation(line: 855, column: 23, scope: !2397)
!2412 = !DILocation(line: 855, column: 32, scope: !2345)
!2413 = !DILocation(line: 857, column: 5, scope: !2345)
!2414 = !DILocation(line: 857, column: 6, scope: !2345)
!2415 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb2f0b5181bc162c4E", scope: !2416, file: !1729, line: 852, type: !2430, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2455, retainedNodes: !2448)
!2416 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !398, file: !2, size: 128, align: 64, elements: !2417, templateParams: !23, identifier: "4b89620c7f2c166f553026a950f3f2d2")
!2417 = !{!2418}
!2418 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2416, file: !2, size: 128, align: 64, elements: !2419, templateParams: !23, identifier: "7cb265f2a07c8821328b46cc3c388b7f", discriminator: !2429)
!2419 = !{!2420, !2425}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2418, file: !2, baseType: !2421, size: 128, align: 64, extraData: i64 -9223372036854775807)
!2421 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2416, file: !2, size: 128, align: 64, elements: !2422, templateParams: !2424, identifier: "fdce6ff40bcf3f7ab3b51ba04b7afc44")
!2422 = !{!2423}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2421, file: !2, baseType: !7, align: 8)
!2424 = !{!312, !2381}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2418, file: !2, baseType: !2426, size: 128, align: 64)
!2426 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2416, file: !2, size: 128, align: 64, elements: !2427, templateParams: !2424, identifier: "d84ca0f977a325112ceaab4e30797620")
!2427 = !{!2428}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2426, file: !2, baseType: !270, size: 128, align: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, scope: !2416, file: !2, baseType: !115, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!2432, !2416, !2446}
!2432 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !398, file: !2, size: 128, align: 64, elements: !2433, templateParams: !23, identifier: "cdc62e1ada228a0a3eeb1363cc168dd1")
!2433 = !{!2434}
!2434 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2432, file: !2, size: 128, align: 64, elements: !2435, templateParams: !23, identifier: "c07cde87a483df02fa92a38d58df4905", discriminator: !2445)
!2435 = !{!2436, !2441}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2434, file: !2, baseType: !2437, size: 128, align: 64, extraData: i64 -9223372036854775807)
!2437 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2432, file: !2, size: 128, align: 64, elements: !2438, templateParams: !2440, identifier: "ef69269b9f8a8dcfd892b17f0cd69f3b")
!2438 = !{!2439}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2437, file: !2, baseType: !7, align: 8)
!2440 = !{!312, !2313}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2434, file: !2, baseType: !2442, size: 128, align: 64)
!2442 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2432, file: !2, size: 128, align: 64, elements: !2443, templateParams: !2440, identifier: "d1e764ecae8c88012ac4b46bb3413624")
!2443 = !{!2444}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2442, file: !2, baseType: !273, size: 128, align: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, scope: !2432, file: !2, baseType: !115, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!2446 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2447, file: !2, align: 8, elements: !23, identifier: "38662dde61d7b1e78dacba2cb2773d17")
!2447 = !DINamespace(name: "handle_reserve", scope: !210)
!2448 = !{!2449, !2450, !2451, !2453}
!2449 = !DILocalVariable(name: "self", arg: 1, scope: !2415, file: !1729, line: 852, type: !2416)
!2450 = !DILocalVariable(name: "op", arg: 2, scope: !2415, file: !1729, line: 852, type: !2446)
!2451 = !DILocalVariable(name: "t", scope: !2452, file: !1729, line: 854, type: !7, align: 1)
!2452 = distinct !DILexicalBlock(scope: !2415, file: !1729, line: 854, column: 13)
!2453 = !DILocalVariable(name: "e", scope: !2454, file: !1729, line: 855, type: !270, align: 8)
!2454 = distinct !DILexicalBlock(scope: !2415, file: !1729, line: 855, column: 13)
!2455 = !{!312, !2381, !2329, !2456}
!2456 = !DITemplateTypeParameter(name: "O", type: !2446)
!2457 = !DILocation(line: 852, column: 42, scope: !2415)
!2458 = !DILocation(line: 852, column: 48, scope: !2415)
!2459 = !DILocation(line: 854, column: 16, scope: !2452)
!2460 = !DILocation(line: 853, column: 15, scope: !2415)
!2461 = !{i64 0, i64 -9223372036854775806}
!2462 = !DILocation(line: 853, column: 9, scope: !2415)
!2463 = !DILocation(line: 854, column: 22, scope: !2452)
!2464 = !DILocation(line: 854, column: 26, scope: !2415)
!2465 = !DILocation(line: 855, column: 17, scope: !2415)
!2466 = !DILocation(line: 855, column: 17, scope: !2454)
!2467 = !DILocation(line: 855, column: 27, scope: !2454)
!2468 = !DILocation(line: 855, column: 23, scope: !2454)
!2469 = !DILocation(line: 855, column: 32, scope: !2415)
!2470 = !DILocation(line: 857, column: 5, scope: !2415)
!2471 = !DILocation(line: 857, column: 6, scope: !2415)
!2472 = distinct !DISubprogram(name: "assert_failed<[i32; 10], [i32; 10]>", linkageName: "_ZN4core9panicking13assert_failed17h102e7dff1d1804d2E", scope: !204, file: !2473, line: 171, type: !2474, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2494, retainedNodes: !2489)
!2473 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "89dbfc153a7177bd0202715dd5809289")
!2474 = !DISubroutineType(types: !2475)
!2475 = !{null, !203, !42, !42, !2476, !973}
!2476 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Arguments>", scope: !425, file: !2, size: 384, align: 64, elements: !2477, templateParams: !23, identifier: "91782c25c0cb4075178b67ca76527846")
!2477 = !{!2478}
!2478 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2476, file: !2, size: 384, align: 64, elements: !2479, templateParams: !23, identifier: "d3d8c93b36d851336035bb39c7913979", discriminator: !2488)
!2479 = !{!2480, !2484}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2478, file: !2, baseType: !2481, size: 384, align: 64, extraData: i64 0)
!2481 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2476, file: !2, size: 384, align: 64, elements: !23, templateParams: !2482, identifier: "94094742b636673213b46bf0a5389cae")
!2482 = !{!2483}
!2483 = !DITemplateTypeParameter(name: "T", type: !828)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2478, file: !2, baseType: !2485, size: 384, align: 64)
!2485 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2476, file: !2, size: 384, align: 64, elements: !2486, templateParams: !2482, identifier: "424137f74f76139e10918065dfb817dc")
!2486 = !{!2487}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2485, file: !2, baseType: !828, size: 384, align: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, scope: !2476, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!2489 = !{!2490, !2491, !2492, !2493}
!2490 = !DILocalVariable(name: "kind", arg: 1, scope: !2472, file: !2473, line: 172, type: !203)
!2491 = !DILocalVariable(name: "left", arg: 2, scope: !2472, file: !2473, line: 173, type: !42)
!2492 = !DILocalVariable(name: "right", arg: 3, scope: !2472, file: !2473, line: 174, type: !42)
!2493 = !DILocalVariable(name: "args", arg: 4, scope: !2472, file: !2473, line: 175, type: !2476)
!2494 = !{!508, !2495}
!2495 = !DITemplateTypeParameter(name: "U", type: !43)
!2496 = !DILocation(line: 172, column: 5, scope: !2472)
!2497 = !DILocation(line: 173, column: 5, scope: !2472)
!2498 = !DILocation(line: 174, column: 5, scope: !2472)
!2499 = !DILocation(line: 175, column: 5, scope: !2472)
!2500 = !DILocation(line: 181, column: 31, scope: !2472)
!2501 = !DILocation(line: 181, column: 38, scope: !2472)
!2502 = !DILocation(line: 181, column: 46, scope: !2472)
!2503 = !DILocation(line: 181, column: 5, scope: !2472)
!2504 = distinct !DISubprogram(name: "assert_failed<(), ()>", linkageName: "_ZN4core9panicking13assert_failed17h247fb856b715c146E", scope: !204, file: !2473, line: 171, type: !2505, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2512, retainedNodes: !2507)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{null, !203, !54, !54, !2476, !973}
!2507 = !{!2508, !2509, !2510, !2511}
!2508 = !DILocalVariable(name: "kind", arg: 1, scope: !2504, file: !2473, line: 172, type: !203)
!2509 = !DILocalVariable(name: "left", arg: 2, scope: !2504, file: !2473, line: 173, type: !54)
!2510 = !DILocalVariable(name: "right", arg: 3, scope: !2504, file: !2473, line: 174, type: !54)
!2511 = !DILocalVariable(name: "args", arg: 4, scope: !2504, file: !2473, line: 175, type: !2476)
!2512 = !{!312, !2513}
!2513 = !DITemplateTypeParameter(name: "U", type: !7)
!2514 = !DILocation(line: 172, column: 5, scope: !2504)
!2515 = !DILocation(line: 173, column: 5, scope: !2504)
!2516 = !DILocation(line: 174, column: 5, scope: !2504)
!2517 = !DILocation(line: 175, column: 5, scope: !2504)
!2518 = !DILocation(line: 181, column: 31, scope: !2504)
!2519 = !DILocation(line: 181, column: 38, scope: !2504)
!2520 = !DILocation(line: 181, column: 46, scope: !2504)
!2521 = !DILocation(line: 181, column: 5, scope: !2504)
!2522 = distinct !DISubprogram(name: "assert_failed<i32, i32>", linkageName: "_ZN4core9panicking13assert_failed17ha932f64f05093c01E", scope: !204, file: !2473, line: 171, type: !2523, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2530, retainedNodes: !2525)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{null, !203, !32, !32, !2476, !973}
!2525 = !{!2526, !2527, !2528, !2529}
!2526 = !DILocalVariable(name: "kind", arg: 1, scope: !2522, file: !2473, line: 172, type: !203)
!2527 = !DILocalVariable(name: "left", arg: 2, scope: !2522, file: !2473, line: 173, type: !32)
!2528 = !DILocalVariable(name: "right", arg: 3, scope: !2522, file: !2473, line: 174, type: !32)
!2529 = !DILocalVariable(name: "args", arg: 4, scope: !2522, file: !2473, line: 175, type: !2476)
!2530 = !{!467, !2531}
!2531 = !DITemplateTypeParameter(name: "U", type: !33)
!2532 = !DILocation(line: 172, column: 5, scope: !2522)
!2533 = !DILocation(line: 173, column: 5, scope: !2522)
!2534 = !DILocation(line: 174, column: 5, scope: !2522)
!2535 = !DILocation(line: 175, column: 5, scope: !2522)
!2536 = !DILocation(line: 181, column: 31, scope: !2522)
!2537 = !DILocation(line: 181, column: 38, scope: !2522)
!2538 = !DILocation(line: 181, column: 46, scope: !2522)
!2539 = !DILocation(line: 181, column: 5, scope: !2522)
!2540 = distinct !DISubprogram(name: "assert_failed<[i32; 3], [i32; 3]>", linkageName: "_ZN4core9panicking13assert_failed17hab645ff57cceb137E", scope: !204, file: !2473, line: 171, type: !2541, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2548, retainedNodes: !2543)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{null, !203, !63, !63, !2476, !973}
!2543 = !{!2544, !2545, !2546, !2547}
!2544 = !DILocalVariable(name: "kind", arg: 1, scope: !2540, file: !2473, line: 172, type: !203)
!2545 = !DILocalVariable(name: "left", arg: 2, scope: !2540, file: !2473, line: 173, type: !63)
!2546 = !DILocalVariable(name: "right", arg: 3, scope: !2540, file: !2473, line: 174, type: !63)
!2547 = !DILocalVariable(name: "args", arg: 4, scope: !2540, file: !2473, line: 175, type: !2476)
!2548 = !{!481, !2549}
!2549 = !DITemplateTypeParameter(name: "U", type: !64)
!2550 = !DILocation(line: 172, column: 5, scope: !2540)
!2551 = !DILocation(line: 173, column: 5, scope: !2540)
!2552 = !DILocation(line: 174, column: 5, scope: !2540)
!2553 = !DILocation(line: 175, column: 5, scope: !2540)
!2554 = !DILocation(line: 181, column: 31, scope: !2540)
!2555 = !DILocation(line: 181, column: 38, scope: !2540)
!2556 = !DILocation(line: 181, column: 46, scope: !2540)
!2557 = !DILocation(line: 181, column: 5, scope: !2540)
!2558 = distinct !DISubprogram(name: "assert_failed<[i32; 1], [i32; 1]>", linkageName: "_ZN4core9panicking13assert_failed17hb3ff0a3fe01f7f1eE", scope: !204, file: !2473, line: 171, type: !2559, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2566, retainedNodes: !2561)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{null, !203, !75, !75, !2476, !973}
!2561 = !{!2562, !2563, !2564, !2565}
!2562 = !DILocalVariable(name: "kind", arg: 1, scope: !2558, file: !2473, line: 172, type: !203)
!2563 = !DILocalVariable(name: "left", arg: 2, scope: !2558, file: !2473, line: 173, type: !75)
!2564 = !DILocalVariable(name: "right", arg: 3, scope: !2558, file: !2473, line: 174, type: !75)
!2565 = !DILocalVariable(name: "args", arg: 4, scope: !2558, file: !2473, line: 175, type: !2476)
!2566 = !{!452, !2567}
!2567 = !DITemplateTypeParameter(name: "U", type: !76)
!2568 = !DILocation(line: 172, column: 5, scope: !2558)
!2569 = !DILocation(line: 173, column: 5, scope: !2558)
!2570 = !DILocation(line: 174, column: 5, scope: !2558)
!2571 = !DILocation(line: 175, column: 5, scope: !2558)
!2572 = !DILocation(line: 181, column: 31, scope: !2558)
!2573 = !DILocation(line: 181, column: 38, scope: !2558)
!2574 = !DILocation(line: 181, column: 46, scope: !2558)
!2575 = !DILocation(line: 181, column: 5, scope: !2558)
!2576 = distinct !DISubprogram(name: "assert_failed<[i32; 5], [i32; 5]>", linkageName: "_ZN4core9panicking13assert_failed17hc1e236fb83b94d08E", scope: !204, file: !2473, line: 171, type: !2577, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2584, retainedNodes: !2579)
!2577 = !DISubroutineType(types: !2578)
!2578 = !{null, !203, !87, !87, !2476, !973}
!2579 = !{!2580, !2581, !2582, !2583}
!2580 = !DILocalVariable(name: "kind", arg: 1, scope: !2576, file: !2473, line: 172, type: !203)
!2581 = !DILocalVariable(name: "left", arg: 2, scope: !2576, file: !2473, line: 173, type: !87)
!2582 = !DILocalVariable(name: "right", arg: 3, scope: !2576, file: !2473, line: 174, type: !87)
!2583 = !DILocalVariable(name: "args", arg: 4, scope: !2576, file: !2473, line: 175, type: !2476)
!2584 = !{!536, !2585}
!2585 = !DITemplateTypeParameter(name: "U", type: !88)
!2586 = !DILocation(line: 172, column: 5, scope: !2576)
!2587 = !DILocation(line: 173, column: 5, scope: !2576)
!2588 = !DILocation(line: 174, column: 5, scope: !2576)
!2589 = !DILocation(line: 175, column: 5, scope: !2576)
!2590 = !DILocation(line: 181, column: 31, scope: !2576)
!2591 = !DILocation(line: 181, column: 38, scope: !2576)
!2592 = !DILocation(line: 181, column: 46, scope: !2576)
!2593 = !DILocation(line: 181, column: 5, scope: !2576)
!2594 = distinct !DISubprogram(name: "assert_failed<[i32; 6], [i32; 6]>", linkageName: "_ZN4core9panicking13assert_failed17hc4b73381be2307d4E", scope: !204, file: !2473, line: 171, type: !2595, scopeLine: 171, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2602, retainedNodes: !2597)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{null, !203, !99, !99, !2476, !973}
!2597 = !{!2598, !2599, !2600, !2601}
!2598 = !DILocalVariable(name: "kind", arg: 1, scope: !2594, file: !2473, line: 172, type: !203)
!2599 = !DILocalVariable(name: "left", arg: 2, scope: !2594, file: !2473, line: 173, type: !99)
!2600 = !DILocalVariable(name: "right", arg: 3, scope: !2594, file: !2473, line: 174, type: !99)
!2601 = !DILocalVariable(name: "args", arg: 4, scope: !2594, file: !2473, line: 175, type: !2476)
!2602 = !{!522, !2603}
!2603 = !DITemplateTypeParameter(name: "U", type: !100)
!2604 = !DILocation(line: 172, column: 5, scope: !2594)
!2605 = !DILocation(line: 173, column: 5, scope: !2594)
!2606 = !DILocation(line: 174, column: 5, scope: !2594)
!2607 = !DILocation(line: 175, column: 5, scope: !2594)
!2608 = !DILocation(line: 181, column: 31, scope: !2594)
!2609 = !DILocation(line: 181, column: 38, scope: !2594)
!2610 = !DILocation(line: 181, column: 46, scope: !2594)
!2611 = !DILocation(line: 181, column: 5, scope: !2594)
!2612 = distinct !DISubprogram(name: "assert_test_result<()>", linkageName: "_ZN4test18assert_test_result17he4129509ab552d7aE", scope: !2614, file: !2613, line: 182, type: !320, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !2615)
!2613 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/test/src/lib.rs", directory: "", checksumkind: CSK_MD5, checksum: "762a73d08c70c6e433bc6b670465b31f")
!2614 = !DINamespace(name: "test", scope: null)
!2615 = !{!2616, !2617, !2619, !2623, !2624}
!2616 = !DILocalVariable(name: "result", arg: 1, scope: !2612, file: !2613, line: 182, type: !7)
!2617 = !DILocalVariable(name: "code", scope: !2618, file: !2613, line: 183, type: !33, align: 4)
!2618 = distinct !DILexicalBlock(scope: !2612, file: !2613, line: 183, column: 5)
!2619 = !DILocalVariable(name: "left_val", scope: !2620, file: !2613, line: 184, type: !32, align: 8)
!2620 = !DILexicalBlockFile(scope: !2621, file: !2613, discriminator: 0)
!2621 = distinct !DILexicalBlock(scope: !2618, file: !2622, line: 52, column: 13)
!2622 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "92818cc67b0fce20f16574f7676a5426")
!2623 = !DILocalVariable(name: "right_val", scope: !2620, file: !2613, line: 184, type: !32, align: 8)
!2624 = !DILocalVariable(name: "kind", scope: !2625, file: !2613, line: 184, type: !203, align: 1)
!2625 = !DILexicalBlockFile(scope: !2626, file: !2613, discriminator: 0)
!2626 = distinct !DILexicalBlock(scope: !2621, file: !2622, line: 54, column: 21)
!2627 = !DILocation(line: 182, column: 43, scope: !2612)
!2628 = !DILocation(line: 183, column: 9, scope: !2618)
!2629 = !DILocalVariable(name: "self", scope: !2630, file: !2613, line: 183, type: !364, align: 1)
!2630 = !DILexicalBlockFile(scope: !2631, file: !2613, discriminator: 0)
!2631 = distinct !DISubprogram(name: "to_i32", linkageName: "_ZN3std7process8ExitCode6to_i3217hb17ca7004e0a6245E", scope: !364, file: !363, line: 1808, type: !375, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !2632)
!2632 = !{!2629}
!2633 = !DILocation(line: 183, column: 16, scope: !2630, inlinedAt: !2634)
!2634 = !DILocation(line: 183, column: 16, scope: !2612)
!2635 = !DILocalVariable(name: "self", scope: !2636, file: !2613, line: 183, type: !387, align: 8)
!2636 = !DILexicalBlockFile(scope: !2637, file: !2613, discriminator: 0)
!2637 = distinct !DISubprogram(name: "as_i32", linkageName: "_ZN3std3sys4unix7process14process_common8ExitCode6as_i3217h564517f95c312c49E", scope: !368, file: !384, line: 485, type: !385, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !2638)
!2638 = !{!2635}
!2639 = !DILocation(line: 183, column: 16, scope: !2636, inlinedAt: !2640)
!2640 = !DILocation(line: 1809, column: 9, scope: !2631, inlinedAt: !2634)
!2641 = !DILocation(line: 184, column: 5, scope: !2618)
!2642 = !DILocation(line: 184, column: 5, scope: !2620)
!2643 = !DILocation(line: 190, column: 2, scope: !2612)
!2644 = !DILocation(line: 184, column: 5, scope: !2625)
!2645 = !DILocalVariable(name: "x", scope: !2646, file: !2613, line: 184, type: !32, align: 8)
!2646 = !DILexicalBlockFile(scope: !2647, file: !2613, discriminator: 0)
!2647 = distinct !DISubprogram(name: "new_display<i32>", linkageName: "_ZN4core3fmt10ArgumentV111new_display17h71715d573e3b5174E", scope: !742, file: !393, line: 318, type: !2648, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2650)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{!742, !32}
!2650 = !{!2645}
!2651 = !DILocation(line: 184, column: 5, scope: !2646, inlinedAt: !2652)
!2652 = !DILocation(line: 188, column: 9, scope: !2625)
!2653 = !DILocalVariable(name: "x", scope: !2654, file: !2613, line: 184, type: !32, align: 8)
!2654 = !DILexicalBlockFile(scope: !2655, file: !2613, discriminator: 0)
!2655 = distinct !DISubprogram(name: "new<i32>", linkageName: "_ZN4core3fmt10ArgumentV13new17h9cec85ef5083355bE", scope: !742, file: !393, line: 329, type: !2656, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2659)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!742, !32, !2658}
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&i32, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !775, size: 64, align: 64, dwarfAddressSpace: 0)
!2659 = !{!2653, !2660}
!2660 = !DILocalVariable(name: "f", scope: !2654, file: !2613, line: 184, type: !2658, align: 8)
!2661 = !DILocation(line: 184, column: 5, scope: !2654, inlinedAt: !2662)
!2662 = !DILocation(line: 319, column: 13, scope: !2647, inlinedAt: !2652)
!2663 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h05a17270e6d59439E", scope: !2665, file: !2664, line: 559, type: !2666, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2670, retainedNodes: !2668)
!2664 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9a22d2b51b4cfd278a09c9d531e27c4")
!2665 = !DINamespace(name: "{impl#4}", scope: !1714)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{null, !2364}
!2668 = !{!2669}
!2669 = !DILocalVariable(name: "t", arg: 1, scope: !2663, file: !2664, line: 559, type: !2364)
!2670 = !{!2671}
!2671 = !DITemplateTypeParameter(name: "T", type: !2364)
!2672 = !DILocation(line: 559, column: 13, scope: !2663)
!2673 = !DILocation(line: 561, column: 6, scope: !2663)
!2674 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2602f275c11ff874E", scope: !2665, file: !2664, line: 559, type: !2675, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2679, retainedNodes: !2677)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{null, !1639}
!2677 = !{!2678}
!2678 = !DILocalVariable(name: "t", arg: 1, scope: !2674, file: !2664, line: 559, type: !1639)
!2679 = !{!2680}
!2680 = !DITemplateTypeParameter(name: "T", type: !1639)
!2681 = !DILocation(line: 559, column: 13, scope: !2674)
!2682 = !DILocation(line: 561, column: 6, scope: !2674)
!2683 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h3a535f962c3cf431E", scope: !2665, file: !2664, line: 559, type: !2684, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2688, retainedNodes: !2686)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{!270, !270}
!2686 = !{!2687}
!2687 = !DILocalVariable(name: "t", arg: 1, scope: !2683, file: !2664, line: 559, type: !270)
!2688 = !{!2689}
!2689 = !DITemplateTypeParameter(name: "T", type: !270)
!2690 = !DILocation(line: 559, column: 13, scope: !2683)
!2691 = !DILocation(line: 561, column: 6, scope: !2683)
!2692 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h37c8579641ace3faE", scope: !2693, file: !2664, line: 549, type: !268, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2696, retainedNodes: !2694)
!2693 = !DINamespace(name: "{impl#3}", scope: !1714)
!2694 = !{!2695}
!2695 = !DILocalVariable(name: "self", arg: 1, scope: !2692, file: !2664, line: 549, type: !273)
!2696 = !{!2697, !2698}
!2697 = !DITemplateTypeParameter(name: "T", type: !273)
!2698 = !DITemplateTypeParameter(name: "U", type: !270)
!2699 = !DILocation(line: 549, column: 13, scope: !2692)
!2700 = !DILocation(line: 550, column: 9, scope: !2692)
!2701 = !DILocation(line: 551, column: 6, scope: !2692)
!2702 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hbd61ac89084c4fa3E", scope: !2693, file: !2664, line: 549, type: !221, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2705, retainedNodes: !2703)
!2703 = !{!2704}
!2704 = !DILocalVariable(name: "self", arg: 1, scope: !2702, file: !2664, line: 549, type: !229)
!2705 = !{!2706, !2707}
!2706 = !DITemplateTypeParameter(name: "T", type: !229)
!2707 = !DITemplateTypeParameter(name: "U", type: !223)
!2708 = !DILocation(line: 549, column: 13, scope: !2702)
!2709 = !DILocation(line: 550, column: 9, scope: !2702)
!2710 = !DILocation(line: 551, column: 6, scope: !2702)
!2711 = distinct !DISubprogram(name: "is_zero", linkageName: "_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17hd885cb56167bc602E", scope: !2713, file: !2712, line: 13, type: !1153, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !2715)
!2712 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/is_zero.rs", directory: "", checksumkind: CSK_MD5, checksum: "83b407d072d6bcd2e3812b178de30d71")
!2713 = !DINamespace(name: "{impl#7}", scope: !2714)
!2714 = !DINamespace(name: "is_zero", scope: !1365)
!2715 = !{!2716}
!2716 = !DILocalVariable(name: "self", arg: 1, scope: !2711, file: !2712, line: 13, type: !32)
!2717 = !DILocation(line: 13, column: 24, scope: !2711)
!2718 = !DILocation(line: 14, column: 26, scope: !2711)
!2719 = !DILocation(line: 14, column: 17, scope: !2711)
!2720 = !DILocation(line: 15, column: 14, scope: !2711)
!2721 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN51_$LT$i32$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero28_$u7b$$u7b$closure$u7d$$u7d$17h5262acec9badfdeeE", scope: !2722, file: !2712, line: 22, type: !2723, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !2727)
!2722 = !DINamespace(name: "is_zero", scope: !2713)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!710, !2725, !33}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::is_zero::{impl#7}::is_zero::{closure_env#0}", baseType: !2726, size: 64, align: 64, dwarfAddressSpace: 0)
!2726 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2722, file: !2, align: 8, elements: !23, identifier: "57f7803d027d837e9b594a4dea351281")
!2727 = !{!2728, !2729}
!2728 = !DILocalVariable(name: "x", arg: 2, scope: !2721, file: !2712, line: 22, type: !33)
!2729 = !DILocalVariable(arg: 1, scope: !2721, file: !2712, line: 22, type: !2725)
!2730 = !DILocation(line: 22, column: 20, scope: !2721)
!2731 = !DILocation(line: 22, column: 21, scope: !2721)
!2732 = !DILocation(line: 22, column: 24, scope: !2721)
!2733 = !DILocation(line: 22, column: 23, scope: !2721)
!2734 = distinct !DISubprogram(name: "report", linkageName: "_ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hcfdf933bfc0960b4E", scope: !2735, file: !363, line: 2170, type: !2736, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !2738)
!2735 = !DINamespace(name: "{impl#53}", scope: !365)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!364, !7}
!2738 = !{!2739}
!2739 = !DILocalVariable(name: "self", arg: 1, scope: !2734, file: !363, line: 2170, type: !7)
!2740 = !DILocation(line: 2170, column: 15, scope: !2734)
!2741 = !DILocation(line: 2172, column: 6, scope: !2734)
!2742 = distinct !DISubprogram(name: "as_mut_ptr<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h1541b40118434109E", scope: !1460, file: !2743, line: 1204, type: !2744, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !2748)
!2743 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ccced07f4d2284e276bdff9c5cb81e82")
!2744 = !DISubroutineType(types: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [i32; 4]", baseType: !637, size: 64, align: 64, dwarfAddressSpace: 0)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<[i32; 4], alloc::alloc::Global>", baseType: !1460, size: 64, align: 64, dwarfAddressSpace: 0)
!2748 = !{!2749, !2750}
!2749 = !DILocalVariable(name: "self", arg: 1, scope: !2742, file: !2743, line: 1204, type: !2747)
!2750 = !DILocalVariable(name: "ptr", scope: !2751, file: !2743, line: 1207, type: !2746, align: 8)
!2751 = distinct !DILexicalBlock(scope: !2742, file: !2743, line: 1207, column: 9)
!2752 = !DILocation(line: 1204, column: 23, scope: !2742)
!2753 = !DILocalVariable(name: "metadata", scope: !2754, file: !2743, line: 1209, type: !7, align: 1)
!2754 = !DILexicalBlockFile(scope: !2755, file: !2743, discriminator: 0)
!2755 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17he411f5a623e39798E", scope: !1526, file: !1525, line: 127, type: !1527, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !2756)
!2756 = !{!2757, !2753}
!2757 = !DILocalVariable(name: "data_address", scope: !2754, file: !2743, line: 1209, type: !1529, align: 8)
!2758 = !DILocation(line: 1209, column: 21, scope: !2754, inlinedAt: !2759)
!2759 = !DILocation(line: 668, column: 5, scope: !2760, inlinedAt: !2761)
!2760 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17ha34011514810011bE", scope: !220, file: !921, line: 667, type: !1535, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !23)
!2761 = !DILocation(line: 38, column: 41, scope: !2762, inlinedAt: !2768)
!2762 = distinct !DISubprogram(name: "is_null<[i32; 4]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h69efdfda8db996edE", scope: !1540, file: !1539, line: 35, type: !2763, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !2765)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{!710, !2746}
!2765 = !{!2766}
!2766 = !DILocalVariable(name: "self", scope: !2767, file: !2743, line: 1209, type: !2746, align: 8)
!2767 = !DILexicalBlockFile(scope: !2762, file: !2743, discriminator: 0)
!2768 = !DILocation(line: 1209, column: 21, scope: !2751)
!2769 = !DILocation(line: 1207, column: 19, scope: !2742)
!2770 = !DILocalVariable(name: "self", scope: !2771, file: !2743, line: 1207, type: !2776, align: 8)
!2771 = !DILexicalBlockFile(scope: !2772, file: !2743, discriminator: 0)
!2772 = distinct !DISubprogram(name: "ptr<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h4ff44d73efb97108E", scope: !1463, file: !2773, line: 223, type: !2774, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !2777)
!2773 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "7882a816b01a8bc5234f4586c1b0290b")
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!2746, !2776}
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<[i32; 4], alloc::alloc::Global>", baseType: !1463, size: 64, align: 64, dwarfAddressSpace: 0)
!2777 = !{!2770}
!2778 = !DILocation(line: 1207, column: 19, scope: !2771, inlinedAt: !2769)
!2779 = !DILocalVariable(name: "self", scope: !2780, file: !2743, line: 1207, type: !1466, align: 8)
!2780 = !DILexicalBlockFile(scope: !2781, file: !2743, discriminator: 0)
!2781 = distinct !DISubprogram(name: "as_ptr<[i32; 4]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hc44c179223bf7f08E", scope: !1466, file: !243, line: 103, type: !2782, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !2784)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{!2746, !1466}
!2784 = !{!2779}
!2785 = !DILocation(line: 1207, column: 19, scope: !2780, inlinedAt: !2786)
!2786 = !DILocation(line: 224, column: 9, scope: !2772, inlinedAt: !2769)
!2787 = !DILocalVariable(name: "self", scope: !2788, file: !2743, line: 1207, type: !1469, align: 8)
!2788 = !DILexicalBlockFile(scope: !2789, file: !2743, discriminator: 0)
!2789 = distinct !DISubprogram(name: "as_ptr<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5e753c994aa390deE", scope: !1469, file: !217, line: 330, type: !2790, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !2792)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{!2746, !1469}
!2792 = !{!2787}
!2793 = !DILocation(line: 1207, column: 19, scope: !2788, inlinedAt: !2794)
!2794 = !DILocation(line: 104, column: 9, scope: !2781, inlinedAt: !2786)
!2795 = !DILocation(line: 1207, column: 13, scope: !2751)
!2796 = !DILocation(line: 1209, column: 21, scope: !2767, inlinedAt: !2768)
!2797 = !DILocalVariable(name: "self", scope: !2798, file: !2743, line: 1209, type: !246, align: 8)
!2798 = !DILexicalBlockFile(scope: !2799, file: !2743, discriminator: 0)
!2799 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17he2f169ba8c14c6ddE", scope: !1540, file: !1539, line: 707, type: !1552, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !2800)
!2800 = !{!2797, !2801}
!2801 = !DILocalVariable(name: "other", scope: !2798, file: !2743, line: 1209, type: !246, align: 8)
!2802 = !DILocation(line: 1209, column: 21, scope: !2798, inlinedAt: !2803)
!2803 = !DILocation(line: 38, column: 9, scope: !2762, inlinedAt: !2768)
!2804 = !DILocation(line: 1209, column: 21, scope: !2805, inlinedAt: !2809)
!2805 = !DILexicalBlockFile(scope: !2806, file: !2743, discriminator: 0)
!2806 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h9c745b2f2d66c28aE", scope: !220, file: !921, line: 569, type: !1561, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !2807)
!2807 = !{!2808}
!2808 = !DILocalVariable(name: "addr", scope: !2805, file: !2743, line: 1209, type: !9, align: 8)
!2809 = !DILocation(line: 668, column: 24, scope: !2760, inlinedAt: !2761)
!2810 = !DILocation(line: 1209, column: 20, scope: !2751)
!2811 = !DILocation(line: 1209, column: 13, scope: !2751)
!2812 = !DILocation(line: 1212, column: 6, scope: !2742)
!2813 = distinct !DISubprogram(name: "as_mut_ptr<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h80d65c2e6950a404E", scope: !1364, file: !2743, line: 1204, type: !2814, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !2817)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!1015, !2816}
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<i32, alloc::alloc::Global>", baseType: !1364, size: 64, align: 64, dwarfAddressSpace: 0)
!2817 = !{!2818, !2819}
!2818 = !DILocalVariable(name: "self", arg: 1, scope: !2813, file: !2743, line: 1204, type: !2816)
!2819 = !DILocalVariable(name: "ptr", scope: !2820, file: !2743, line: 1207, type: !1015, align: 8)
!2820 = distinct !DILexicalBlock(scope: !2813, file: !2743, line: 1207, column: 9)
!2821 = !DILocation(line: 1204, column: 23, scope: !2813)
!2822 = !DILocalVariable(name: "metadata", scope: !2823, file: !2743, line: 1209, type: !7, align: 1)
!2823 = !DILexicalBlockFile(scope: !2824, file: !2743, discriminator: 0)
!2824 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17he411f5a623e39798E", scope: !1526, file: !1525, line: 127, type: !1527, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !2825)
!2825 = !{!2826, !2822}
!2826 = !DILocalVariable(name: "data_address", scope: !2823, file: !2743, line: 1209, type: !1529, align: 8)
!2827 = !DILocation(line: 1209, column: 21, scope: !2823, inlinedAt: !2828)
!2828 = !DILocation(line: 668, column: 5, scope: !2829, inlinedAt: !2830)
!2829 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17ha34011514810011bE", scope: !220, file: !921, line: 667, type: !1535, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !23)
!2830 = !DILocation(line: 38, column: 41, scope: !2831, inlinedAt: !2837)
!2831 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h04a392b9862b5fa5E", scope: !1540, file: !1539, line: 35, type: !2832, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2834)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!710, !1015}
!2834 = !{!2835}
!2835 = !DILocalVariable(name: "self", scope: !2836, file: !2743, line: 1209, type: !1015, align: 8)
!2836 = !DILexicalBlockFile(scope: !2831, file: !2743, discriminator: 0)
!2837 = !DILocation(line: 1209, column: 21, scope: !2820)
!2838 = !DILocation(line: 1207, column: 19, scope: !2813)
!2839 = !DILocalVariable(name: "self", scope: !2840, file: !2743, line: 1207, type: !2844, align: 8)
!2840 = !DILexicalBlockFile(scope: !2841, file: !2743, discriminator: 0)
!2841 = distinct !DISubprogram(name: "ptr<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h4150f51885fafce9E", scope: !1368, file: !2773, line: 223, type: !2842, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !2845)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!1015, !2844}
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<i32, alloc::alloc::Global>", baseType: !1368, size: 64, align: 64, dwarfAddressSpace: 0)
!2845 = !{!2839}
!2846 = !DILocation(line: 1207, column: 19, scope: !2840, inlinedAt: !2838)
!2847 = !DILocalVariable(name: "self", scope: !2848, file: !2743, line: 1207, type: !1371, align: 8)
!2848 = !DILexicalBlockFile(scope: !2849, file: !2743, discriminator: 0)
!2849 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17hcd0a86dac819ad64E", scope: !1371, file: !243, line: 103, type: !2850, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2852)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!1015, !1371}
!2852 = !{!2847}
!2853 = !DILocation(line: 1207, column: 19, scope: !2848, inlinedAt: !2854)
!2854 = !DILocation(line: 224, column: 9, scope: !2841, inlinedAt: !2838)
!2855 = !DILocalVariable(name: "self", scope: !2856, file: !2743, line: 1207, type: !619, align: 8)
!2856 = !DILexicalBlockFile(scope: !2857, file: !2743, discriminator: 0)
!2857 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfff8edc501d3c834E", scope: !619, file: !217, line: 330, type: !2858, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !2860)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!1015, !619}
!2860 = !{!2855}
!2861 = !DILocation(line: 1207, column: 19, scope: !2856, inlinedAt: !2862)
!2862 = !DILocation(line: 104, column: 9, scope: !2849, inlinedAt: !2854)
!2863 = !DILocation(line: 1207, column: 13, scope: !2820)
!2864 = !DILocation(line: 1209, column: 21, scope: !2836, inlinedAt: !2837)
!2865 = !DILocalVariable(name: "self", scope: !2866, file: !2743, line: 1209, type: !246, align: 8)
!2866 = !DILexicalBlockFile(scope: !2867, file: !2743, discriminator: 0)
!2867 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17he2f169ba8c14c6ddE", scope: !1540, file: !1539, line: 707, type: !1552, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !2868)
!2868 = !{!2865, !2869}
!2869 = !DILocalVariable(name: "other", scope: !2866, file: !2743, line: 1209, type: !246, align: 8)
!2870 = !DILocation(line: 1209, column: 21, scope: !2866, inlinedAt: !2871)
!2871 = !DILocation(line: 38, column: 9, scope: !2831, inlinedAt: !2837)
!2872 = !DILocation(line: 1209, column: 21, scope: !2873, inlinedAt: !2877)
!2873 = !DILexicalBlockFile(scope: !2874, file: !2743, discriminator: 0)
!2874 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h9c745b2f2d66c28aE", scope: !220, file: !921, line: 569, type: !1561, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !2875)
!2875 = !{!2876}
!2876 = !DILocalVariable(name: "addr", scope: !2873, file: !2743, line: 1209, type: !9, align: 8)
!2877 = !DILocation(line: 668, column: 24, scope: !2829, inlinedAt: !2830)
!2878 = !DILocation(line: 1209, column: 20, scope: !2820)
!2879 = !DILocation(line: 1209, column: 13, scope: !2820)
!2880 = !DILocation(line: 1212, column: 6, scope: !2813)
!2881 = distinct !DISubprogram(name: "extend_with<[i32; 4], alloc::alloc::Global, alloc::vec::ExtendElement<[i32; 4]>>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17h26b5e96f38a5fe17E", scope: !1460, file: !2743, line: 2398, type: !2882, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2897, retainedNodes: !2887)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{null, !2747, !9, !2884}
!2884 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExtendElement<[i32; 4]>", scope: !1365, file: !2, size: 128, align: 32, elements: !2885, templateParams: !1473, identifier: "a3bfa623a42f484bfb28c86b81b3c0e")
!2885 = !{!2886}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2884, file: !2, baseType: !637, size: 128, align: 32)
!2887 = !{!2888, !2889, !2890, !2891, !2893, !2895}
!2888 = !DILocalVariable(name: "self", arg: 1, scope: !2881, file: !2743, line: 2398, type: !2747)
!2889 = !DILocalVariable(name: "n", arg: 2, scope: !2881, file: !2743, line: 2398, type: !9)
!2890 = !DILocalVariable(name: "value", arg: 3, scope: !2881, file: !2743, line: 2398, type: !2884)
!2891 = !DILocalVariable(name: "ptr", scope: !2892, file: !2743, line: 2402, type: !2746, align: 8)
!2892 = distinct !DILexicalBlock(scope: !2881, file: !2743, line: 2402, column: 13)
!2893 = !DILocalVariable(name: "local_len", scope: !2894, file: !2743, line: 2406, type: !1446, align: 8)
!2894 = distinct !DILexicalBlock(scope: !2892, file: !2743, line: 2406, column: 13)
!2895 = !DILocalVariable(name: "iter", scope: !2896, file: !2743, line: 2409, type: !1611, align: 8)
!2896 = distinct !DILexicalBlock(scope: !2894, file: !2743, line: 2409, column: 13)
!2897 = !{!1474, !1381, !2898}
!2898 = !DITemplateTypeParameter(name: "E", type: !2884)
!2899 = !DILocation(line: 2398, column: 38, scope: !2881)
!2900 = !DILocation(line: 2398, column: 49, scope: !2881)
!2901 = !DILocation(line: 2398, column: 59, scope: !2881)
!2902 = !DILocation(line: 2402, column: 17, scope: !2892)
!2903 = !DILocation(line: 2406, column: 17, scope: !2894)
!2904 = !DILocalVariable(name: "self", scope: !2905, file: !2743, line: 2409, type: !1611, align: 8)
!2905 = !DILexicalBlockFile(scope: !2906, file: !2743, discriminator: 0)
!2906 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb906d45d6c85ec06E", scope: !2908, file: !2907, line: 271, type: !2911, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2914, retainedNodes: !2913)
!2907 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "73b4070628f6fcec74cccccb11afa9ef")
!2908 = !DINamespace(name: "{impl#0}", scope: !2909)
!2909 = !DINamespace(name: "collect", scope: !2910)
!2910 = !DINamespace(name: "traits", scope: !574)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!1611, !1611}
!2913 = !{!2904}
!2914 = !{!2915}
!2915 = !DITemplateTypeParameter(name: "I", type: !1611)
!2916 = !DILocation(line: 2409, column: 22, scope: !2905, inlinedAt: !2917)
!2917 = !DILocation(line: 2409, column: 22, scope: !2894)
!2918 = !DILocation(line: 2409, column: 22, scope: !2896)
!2919 = !DILocalVariable(name: "src", scope: !2920, file: !2743, line: 2410, type: !637, align: 4)
!2920 = !DILexicalBlockFile(scope: !2921, file: !2743, discriminator: 0)
!2921 = distinct !DISubprogram(name: "write<[i32; 4]>", linkageName: "_ZN4core3ptr5write17h93e483df1e1dc599E", scope: !220, file: !921, line: 1296, type: !2922, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !2924)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{null, !2746, !637}
!2924 = !{!2925, !2919}
!2925 = !DILocalVariable(name: "dst", scope: !2920, file: !2743, line: 2410, type: !2746, align: 8)
!2926 = !DILocation(line: 2410, column: 17, scope: !2920, inlinedAt: !2927)
!2927 = !DILocation(line: 2410, column: 17, scope: !2896)
!2928 = !DILocalVariable(name: "src", scope: !2929, file: !2743, line: 2418, type: !637, align: 4)
!2929 = !DILexicalBlockFile(scope: !2930, file: !2743, discriminator: 0)
!2930 = distinct !DISubprogram(name: "write<[i32; 4]>", linkageName: "_ZN4core3ptr5write17h93e483df1e1dc599E", scope: !220, file: !921, line: 1296, type: !2922, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !2931)
!2931 = !{!2932, !2928}
!2932 = !DILocalVariable(name: "dst", scope: !2929, file: !2743, line: 2418, type: !2746, align: 8)
!2933 = !DILocation(line: 2418, column: 17, scope: !2929, inlinedAt: !2934)
!2934 = !DILocation(line: 2418, column: 17, scope: !2894)
!2935 = !DILocation(line: 2399, column: 9, scope: !2881)
!2936 = !DILocation(line: 2424, column: 5, scope: !2881)
!2937 = !DILocation(line: 2402, column: 27, scope: !2881)
!2938 = !DILocalVariable(name: "self", scope: !2939, file: !2743, line: 2402, type: !2746, align: 8)
!2939 = !DILexicalBlockFile(scope: !2940, file: !2743, discriminator: 0)
!2940 = distinct !DISubprogram(name: "add<[i32; 4]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hef18a4b96990b52dE", scope: !1540, file: !1539, line: 985, type: !2941, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !2943)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{!2746, !2746, !9}
!2943 = !{!2938, !2944}
!2944 = !DILocalVariable(name: "count", scope: !2939, file: !2743, line: 2402, type: !9, align: 8)
!2945 = !DILocation(line: 2402, column: 27, scope: !2939, inlinedAt: !2937)
!2946 = !DILocation(line: 2402, column: 49, scope: !2881)
!2947 = !DILocalVariable(name: "self", scope: !2948, file: !2743, line: 2402, type: !2951, align: 8)
!2948 = distinct !DISubprogram(name: "len<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hc37fc920d06809e6E", scope: !1460, file: !2743, line: 1945, type: !2949, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !2952)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!9, !2951}
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<[i32; 4], alloc::alloc::Global>", baseType: !1460, size: 64, align: 64, dwarfAddressSpace: 0)
!2952 = !{!2947}
!2953 = !DILocation(line: 2402, column: 49, scope: !2948, inlinedAt: !2946)
!2954 = !DILocalVariable(name: "self", scope: !2955, file: !2743, line: 2402, type: !2746, align: 8)
!2955 = !DILexicalBlockFile(scope: !2956, file: !2743, discriminator: 0)
!2956 = distinct !DISubprogram(name: "offset<[i32; 4]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hf0438496efb89d87E", scope: !1540, file: !1539, line: 465, type: !2957, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !2959)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!2746, !2746, !335}
!2959 = !{!2954, !2960}
!2960 = !DILocalVariable(name: "count", scope: !2955, file: !2743, line: 2402, type: !335, align: 8)
!2961 = !DILocation(line: 2402, column: 27, scope: !2955, inlinedAt: !2962)
!2962 = !DILocation(line: 990, column: 18, scope: !2940, inlinedAt: !2937)
!2963 = !DILocation(line: 2406, column: 51, scope: !2892)
!2964 = !DILocalVariable(name: "len", scope: !2965, file: !2743, line: 2406, type: !910, align: 8)
!2965 = !DILexicalBlockFile(scope: !2966, file: !2743, discriminator: 0)
!2966 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop3new17h6398f9d31c12d778E", scope: !1446, file: !2967, line: 13, type: !2968, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !2970)
!2967 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/set_len_on_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "46ffd8255e376b538abacd2d8152b3c0")
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!1446, !910}
!2970 = !{!2964}
!2971 = !DILocation(line: 2406, column: 33, scope: !2965, inlinedAt: !2972)
!2972 = !DILocation(line: 2406, column: 33, scope: !2892)
!2973 = !DILocation(line: 2409, column: 13, scope: !2896)
!2974 = !DILocalVariable(name: "self", scope: !2975, file: !2743, line: 2409, type: !1610, align: 8)
!2975 = !DILexicalBlockFile(scope: !2976, file: !2743, discriminator: 0)
!2976 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h7b1637b1988718b5E", scope: !1578, file: !571, line: 710, type: !1608, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1619, retainedNodes: !2977)
!2977 = !{!2974}
!2978 = !DILocation(line: 2409, column: 22, scope: !2975, inlinedAt: !2918)
!2979 = !DILocation(line: 2423, column: 9, scope: !2892)
!2980 = !DILocation(line: 2416, column: 16, scope: !2894)
!2981 = !DILocation(line: 2410, column: 28, scope: !2896)
!2982 = !DILocation(line: 2410, column: 33, scope: !2896)
!2983 = !DILocation(line: 2411, column: 23, scope: !2896)
!2984 = !DILocalVariable(name: "self", scope: !2985, file: !2743, line: 2411, type: !2746, align: 8)
!2985 = !DILexicalBlockFile(scope: !2986, file: !2743, discriminator: 0)
!2986 = distinct !DISubprogram(name: "offset<[i32; 4]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hf0438496efb89d87E", scope: !1540, file: !1539, line: 465, type: !2957, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !2987)
!2987 = !{!2984, !2988}
!2988 = !DILocalVariable(name: "count", scope: !2985, file: !2743, line: 2411, type: !335, align: 8)
!2989 = !DILocation(line: 2411, column: 23, scope: !2985, inlinedAt: !2983)
!2990 = !DILocation(line: 2411, column: 17, scope: !2896)
!2991 = !DILocation(line: 2413, column: 17, scope: !2896)
!2992 = !DILocalVariable(name: "self", scope: !2993, file: !2743, line: 2413, type: !2997, align: 8)
!2993 = !DILexicalBlockFile(scope: !2994, file: !2743, discriminator: 0)
!2994 = distinct !DISubprogram(name: "increment_len", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h56be74aefd796037E", scope: !1446, file: !2967, line: 18, type: !2995, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !2998)
!2995 = !DISubroutineType(types: !2996)
!2996 = !{null, !2997, !9}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::set_len_on_drop::SetLenOnDrop", baseType: !1446, size: 64, align: 64, dwarfAddressSpace: 0)
!2998 = !{!2992, !2999}
!2999 = !DILocalVariable(name: "increment", scope: !2993, file: !2743, line: 2413, type: !9, align: 8)
!3000 = !DILocation(line: 2413, column: 17, scope: !2993, inlinedAt: !2991)
!3001 = !DILocation(line: 2418, column: 28, scope: !2894)
!3002 = !DILocation(line: 2418, column: 33, scope: !2894)
!3003 = !DILocation(line: 2419, column: 17, scope: !2894)
!3004 = !DILocalVariable(name: "self", scope: !3005, file: !2743, line: 2419, type: !2997, align: 8)
!3005 = !DILexicalBlockFile(scope: !3006, file: !2743, discriminator: 0)
!3006 = distinct !DISubprogram(name: "increment_len", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h56be74aefd796037E", scope: !1446, file: !2967, line: 18, type: !2995, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3007)
!3007 = !{!3004, !3008}
!3008 = !DILocalVariable(name: "increment", scope: !3005, file: !2743, line: 2419, type: !9, align: 8)
!3009 = !DILocation(line: 2419, column: 17, scope: !3005, inlinedAt: !3003)
!3010 = !DILocation(line: 2416, column: 13, scope: !2894)
!3011 = !DILocation(line: 2398, column: 5, scope: !2881)
!3012 = !DILocation(line: 2424, column: 6, scope: !2881)
!3013 = distinct !DISubprogram(name: "extend_with<i32, alloc::alloc::Global, alloc::vec::ExtendElement<i32>>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11extend_with17hcaee78540f1aac09E", scope: !1364, file: !2743, line: 2398, type: !3014, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3029, retainedNodes: !3019)
!3014 = !DISubroutineType(types: !3015)
!3015 = !{null, !2816, !9, !3016}
!3016 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExtendElement<i32>", scope: !1365, file: !2, size: 32, align: 32, elements: !3017, templateParams: !466, identifier: "5d0991a1ea0ba07973638fd6b6c4a27a")
!3017 = !{!3018}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3016, file: !2, baseType: !33, size: 32, align: 32)
!3019 = !{!3020, !3021, !3022, !3023, !3025, !3027}
!3020 = !DILocalVariable(name: "self", arg: 1, scope: !3013, file: !2743, line: 2398, type: !2816)
!3021 = !DILocalVariable(name: "n", arg: 2, scope: !3013, file: !2743, line: 2398, type: !9)
!3022 = !DILocalVariable(name: "value", arg: 3, scope: !3013, file: !2743, line: 2398, type: !3016)
!3023 = !DILocalVariable(name: "ptr", scope: !3024, file: !2743, line: 2402, type: !1015, align: 8)
!3024 = distinct !DILexicalBlock(scope: !3013, file: !2743, line: 2402, column: 13)
!3025 = !DILocalVariable(name: "local_len", scope: !3026, file: !2743, line: 2406, type: !1446, align: 8)
!3026 = distinct !DILexicalBlock(scope: !3024, file: !2743, line: 2406, column: 13)
!3027 = !DILocalVariable(name: "iter", scope: !3028, file: !2743, line: 2409, type: !1611, align: 8)
!3028 = distinct !DILexicalBlock(scope: !3026, file: !2743, line: 2409, column: 13)
!3029 = !{!467, !1381, !3030}
!3030 = !DITemplateTypeParameter(name: "E", type: !3016)
!3031 = !DILocation(line: 2398, column: 38, scope: !3013)
!3032 = !DILocation(line: 2398, column: 49, scope: !3013)
!3033 = !DILocation(line: 2398, column: 59, scope: !3013)
!3034 = !DILocation(line: 2402, column: 17, scope: !3024)
!3035 = !DILocation(line: 2406, column: 17, scope: !3026)
!3036 = !DILocalVariable(name: "self", scope: !3037, file: !2743, line: 2409, type: !1611, align: 8)
!3037 = !DILexicalBlockFile(scope: !3038, file: !2743, discriminator: 0)
!3038 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb906d45d6c85ec06E", scope: !2908, file: !2907, line: 271, type: !2911, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2914, retainedNodes: !3039)
!3039 = !{!3036}
!3040 = !DILocation(line: 2409, column: 22, scope: !3037, inlinedAt: !3041)
!3041 = !DILocation(line: 2409, column: 22, scope: !3026)
!3042 = !DILocation(line: 2409, column: 22, scope: !3028)
!3043 = !DILocalVariable(name: "src", scope: !3044, file: !2743, line: 2410, type: !33, align: 4)
!3044 = !DILexicalBlockFile(scope: !3045, file: !2743, discriminator: 0)
!3045 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17h34dd7d16af99f1a1E", scope: !220, file: !921, line: 1296, type: !1013, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !3046)
!3046 = !{!3047, !3043}
!3047 = !DILocalVariable(name: "dst", scope: !3044, file: !2743, line: 2410, type: !1015, align: 8)
!3048 = !DILocation(line: 2410, column: 17, scope: !3044, inlinedAt: !3049)
!3049 = !DILocation(line: 2410, column: 17, scope: !3028)
!3050 = !DILocalVariable(name: "src", scope: !3051, file: !2743, line: 2418, type: !33, align: 4)
!3051 = !DILexicalBlockFile(scope: !3052, file: !2743, discriminator: 0)
!3052 = distinct !DISubprogram(name: "write<i32>", linkageName: "_ZN4core3ptr5write17h34dd7d16af99f1a1E", scope: !220, file: !921, line: 1296, type: !1013, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !3053)
!3053 = !{!3054, !3050}
!3054 = !DILocalVariable(name: "dst", scope: !3051, file: !2743, line: 2418, type: !1015, align: 8)
!3055 = !DILocation(line: 2418, column: 17, scope: !3051, inlinedAt: !3056)
!3056 = !DILocation(line: 2418, column: 17, scope: !3026)
!3057 = !DILocation(line: 2399, column: 9, scope: !3013)
!3058 = !DILocation(line: 2424, column: 5, scope: !3013)
!3059 = !DILocation(line: 2402, column: 27, scope: !3013)
!3060 = !DILocalVariable(name: "self", scope: !3061, file: !2743, line: 2402, type: !1015, align: 8)
!3061 = !DILexicalBlockFile(scope: !3062, file: !2743, discriminator: 0)
!3062 = distinct !DISubprogram(name: "add<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h3834b63c83ef0674E", scope: !1540, file: !1539, line: 985, type: !3063, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !3065)
!3063 = !DISubroutineType(types: !3064)
!3064 = !{!1015, !1015, !9}
!3065 = !{!3060, !3066}
!3066 = !DILocalVariable(name: "count", scope: !3061, file: !2743, line: 2402, type: !9, align: 8)
!3067 = !DILocation(line: 2402, column: 27, scope: !3061, inlinedAt: !3059)
!3068 = !DILocation(line: 2402, column: 49, scope: !3013)
!3069 = !DILocalVariable(name: "self", scope: !3070, file: !2743, line: 2402, type: !3073, align: 8)
!3070 = distinct !DISubprogram(name: "len<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h01e87ed6f6d930e2E", scope: !1364, file: !2743, line: 1945, type: !3071, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !3074)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!9, !3073}
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<i32, alloc::alloc::Global>", baseType: !1364, size: 64, align: 64, dwarfAddressSpace: 0)
!3074 = !{!3069}
!3075 = !DILocation(line: 2402, column: 49, scope: !3070, inlinedAt: !3068)
!3076 = !DILocalVariable(name: "self", scope: !3077, file: !2743, line: 2402, type: !1015, align: 8)
!3077 = !DILexicalBlockFile(scope: !3078, file: !2743, discriminator: 0)
!3078 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h459027a2f55c249fE", scope: !1540, file: !1539, line: 465, type: !3079, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !3081)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{!1015, !1015, !335}
!3081 = !{!3076, !3082}
!3082 = !DILocalVariable(name: "count", scope: !3077, file: !2743, line: 2402, type: !335, align: 8)
!3083 = !DILocation(line: 2402, column: 27, scope: !3077, inlinedAt: !3084)
!3084 = !DILocation(line: 990, column: 18, scope: !3062, inlinedAt: !3059)
!3085 = !DILocation(line: 2406, column: 51, scope: !3024)
!3086 = !DILocalVariable(name: "len", scope: !3087, file: !2743, line: 2406, type: !910, align: 8)
!3087 = !DILexicalBlockFile(scope: !3088, file: !2743, discriminator: 0)
!3088 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop3new17h6398f9d31c12d778E", scope: !1446, file: !2967, line: 13, type: !2968, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3089)
!3089 = !{!3086}
!3090 = !DILocation(line: 2406, column: 33, scope: !3087, inlinedAt: !3091)
!3091 = !DILocation(line: 2406, column: 33, scope: !3024)
!3092 = !DILocation(line: 2409, column: 13, scope: !3028)
!3093 = !DILocalVariable(name: "self", scope: !3094, file: !2743, line: 2409, type: !1610, align: 8)
!3094 = !DILexicalBlockFile(scope: !3095, file: !2743, discriminator: 0)
!3095 = distinct !DISubprogram(name: "next<usize>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h7b1637b1988718b5E", scope: !1578, file: !571, line: 710, type: !1608, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1619, retainedNodes: !3096)
!3096 = !{!3093}
!3097 = !DILocation(line: 2409, column: 22, scope: !3094, inlinedAt: !3042)
!3098 = !DILocation(line: 2423, column: 9, scope: !3024)
!3099 = !DILocation(line: 2416, column: 16, scope: !3026)
!3100 = !DILocation(line: 2410, column: 28, scope: !3028)
!3101 = !DILocation(line: 2410, column: 33, scope: !3028)
!3102 = !DILocation(line: 2411, column: 23, scope: !3028)
!3103 = !DILocalVariable(name: "self", scope: !3104, file: !2743, line: 2411, type: !1015, align: 8)
!3104 = !DILexicalBlockFile(scope: !3105, file: !2743, discriminator: 0)
!3105 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h459027a2f55c249fE", scope: !1540, file: !1539, line: 465, type: !3079, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !3106)
!3106 = !{!3103, !3107}
!3107 = !DILocalVariable(name: "count", scope: !3104, file: !2743, line: 2411, type: !335, align: 8)
!3108 = !DILocation(line: 2411, column: 23, scope: !3104, inlinedAt: !3102)
!3109 = !DILocation(line: 2411, column: 17, scope: !3028)
!3110 = !DILocation(line: 2413, column: 17, scope: !3028)
!3111 = !DILocalVariable(name: "self", scope: !3112, file: !2743, line: 2413, type: !2997, align: 8)
!3112 = !DILexicalBlockFile(scope: !3113, file: !2743, discriminator: 0)
!3113 = distinct !DISubprogram(name: "increment_len", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h56be74aefd796037E", scope: !1446, file: !2967, line: 18, type: !2995, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3114)
!3114 = !{!3111, !3115}
!3115 = !DILocalVariable(name: "increment", scope: !3112, file: !2743, line: 2413, type: !9, align: 8)
!3116 = !DILocation(line: 2413, column: 17, scope: !3112, inlinedAt: !3110)
!3117 = !DILocation(line: 2418, column: 28, scope: !3026)
!3118 = !DILocation(line: 2418, column: 33, scope: !3026)
!3119 = !DILocation(line: 2419, column: 17, scope: !3026)
!3120 = !DILocalVariable(name: "self", scope: !3121, file: !2743, line: 2419, type: !2997, align: 8)
!3121 = !DILexicalBlockFile(scope: !3122, file: !2743, discriminator: 0)
!3122 = distinct !DISubprogram(name: "increment_len", linkageName: "_ZN5alloc3vec15set_len_on_drop12SetLenOnDrop13increment_len17h56be74aefd796037E", scope: !1446, file: !2967, line: 18, type: !2995, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3123)
!3123 = !{!3120, !3124}
!3124 = !DILocalVariable(name: "increment", scope: !3121, file: !2743, line: 2419, type: !9, align: 8)
!3125 = !DILocation(line: 2419, column: 17, scope: !3121, inlinedAt: !3119)
!3126 = !DILocation(line: 2416, column: 13, scope: !3026)
!3127 = !DILocation(line: 2398, column: 5, scope: !3013)
!3128 = !DILocation(line: 2424, column: 6, scope: !3013)
!3129 = distinct !DISubprogram(name: "reserve<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h2815514b41892420E", scope: !1364, file: !2743, line: 840, type: !3130, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !3132)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{null, !2816, !9}
!3132 = !{!3133, !3134}
!3133 = !DILocalVariable(name: "self", arg: 1, scope: !3129, file: !2743, line: 840, type: !2816)
!3134 = !DILocalVariable(name: "additional", arg: 2, scope: !3129, file: !2743, line: 840, type: !9)
!3135 = !DILocation(line: 840, column: 20, scope: !3129)
!3136 = !DILocation(line: 840, column: 31, scope: !3129)
!3137 = !DILocation(line: 841, column: 9, scope: !3129)
!3138 = !DILocation(line: 841, column: 26, scope: !3129)
!3139 = !DILocation(line: 842, column: 6, scope: !3129)
!3140 = distinct !DISubprogram(name: "reserve<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h44b4f37ca4dc178dE", scope: !1460, file: !2743, line: 840, type: !3141, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !3143)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{null, !2747, !9}
!3143 = !{!3144, !3145}
!3144 = !DILocalVariable(name: "self", arg: 1, scope: !3140, file: !2743, line: 840, type: !2747)
!3145 = !DILocalVariable(name: "additional", arg: 2, scope: !3140, file: !2743, line: 840, type: !9)
!3146 = !DILocation(line: 840, column: 20, scope: !3140)
!3147 = !DILocation(line: 840, column: 31, scope: !3140)
!3148 = !DILocation(line: 841, column: 9, scope: !3140)
!3149 = !DILocation(line: 841, column: 26, scope: !3140)
!3150 = !DILocation(line: 842, column: 6, scope: !3140)
!3151 = distinct !DISubprogram(name: "from_elem<i32>", linkageName: "_ZN5alloc3vec9from_elem17hb9352b6c351bbae8E", scope: !1365, file: !2743, line: 2456, type: !3152, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !3154)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!1364, !33, !9}
!3154 = !{!3155, !3156}
!3155 = !DILocalVariable(name: "elem", arg: 1, scope: !3151, file: !2743, line: 2456, type: !33)
!3156 = !DILocalVariable(name: "n", arg: 2, scope: !3151, file: !2743, line: 2456, type: !9)
!3157 = !DILocation(line: 2456, column: 28, scope: !3151)
!3158 = !DILocation(line: 2456, column: 37, scope: !3151)
!3159 = !DILocation(line: 2457, column: 5, scope: !3151)
!3160 = !DILocation(line: 2458, column: 2, scope: !3151)
!3161 = distinct !DISubprogram(name: "from_elem<[i32; 4]>", linkageName: "_ZN5alloc3vec9from_elem17he36855d432e37c37E", scope: !1365, file: !2743, line: 2456, type: !3162, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !3164)
!3162 = !DISubroutineType(types: !3163)
!3163 = !{!1460, !637, !9}
!3164 = !{!3165, !3166}
!3165 = !DILocalVariable(name: "elem", arg: 1, scope: !3161, file: !2743, line: 2456, type: !637)
!3166 = !DILocalVariable(name: "n", arg: 2, scope: !3161, file: !2743, line: 2456, type: !9)
!3167 = !DILocation(line: 2456, column: 28, scope: !3161)
!3168 = !DILocation(line: 2456, column: 37, scope: !3161)
!3169 = !DILocation(line: 2457, column: 36, scope: !3161)
!3170 = !DILocation(line: 2457, column: 5, scope: !3161)
!3171 = !DILocation(line: 2458, column: 2, scope: !3161)
!3172 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17h949f8c49fad503faE", scope: !1378, file: !3173, line: 172, type: !3174, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3177)
!3173 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6c7758b12bd6b7f0705d9bc90e671ea")
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!2346, !3176, !283, !710}
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !1378, size: 64, align: 64, dwarfAddressSpace: 0)
!3177 = !{!3178, !3179, !3180, !3181, !3183, !3185, !3187, !3202}
!3178 = !DILocalVariable(name: "self", arg: 1, scope: !3172, file: !3173, line: 172, type: !3176)
!3179 = !DILocalVariable(name: "layout", arg: 2, scope: !3172, file: !3173, line: 172, type: !283)
!3180 = !DILocalVariable(name: "zeroed", arg: 3, scope: !3172, file: !3173, line: 172, type: !710)
!3181 = !DILocalVariable(name: "size", scope: !3182, file: !3173, line: 176, type: !9, align: 8)
!3182 = distinct !DILexicalBlock(scope: !3172, file: !3173, line: 176, column: 13)
!3183 = !DILocalVariable(name: "raw_ptr", scope: !3184, file: !3173, line: 177, type: !246, align: 8)
!3184 = distinct !DILexicalBlock(scope: !3182, file: !3173, line: 177, column: 17)
!3185 = !DILocalVariable(name: "ptr", scope: !3186, file: !3173, line: 178, type: !223, align: 8)
!3186 = distinct !DILexicalBlock(scope: !3184, file: !3173, line: 178, column: 17)
!3187 = !DILocalVariable(name: "residual", scope: !3188, file: !3173, line: 178, type: !3189, align: 1)
!3188 = distinct !DILexicalBlock(scope: !3184, file: !3173, line: 178, column: 66)
!3189 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !398, file: !2, align: 8, elements: !3190, templateParams: !23, identifier: "572d358f2a12b97961cfb71e38e53f04")
!3190 = !{!3191}
!3191 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3189, file: !2, align: 8, elements: !3192, templateParams: !23, identifier: "88663002e18d2fe1148d606c86c1d5ff")
!3192 = !{!3193, !3198}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3191, file: !2, baseType: !3194, align: 8)
!3194 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3189, file: !2, align: 8, elements: !3195, templateParams: !3197, identifier: "be577e6defde51b29863ecc8d4e2e22a")
!3195 = !{!3196}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3194, file: !2, baseType: !1713, align: 8)
!3197 = !{!1718, !2363}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3191, file: !2, baseType: !3199, align: 8)
!3199 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3189, file: !2, align: 8, elements: !3200, templateParams: !3197, identifier: "1bce49b0456cc0581bfad8a74808f72")
!3200 = !{!3201}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3199, file: !2, baseType: !2364, align: 8)
!3202 = !DILocalVariable(name: "val", scope: !3203, file: !3173, line: 178, type: !223, align: 8)
!3203 = distinct !DILexicalBlock(scope: !3184, file: !3173, line: 178, column: 27)
!3204 = !DILocation(line: 172, column: 19, scope: !3172)
!3205 = !DILocation(line: 172, column: 26, scope: !3172)
!3206 = !DILocation(line: 172, column: 42, scope: !3172)
!3207 = !DILocalVariable(name: "data", scope: !3208, file: !3173, line: 174, type: !223, align: 8)
!3208 = !DILexicalBlockFile(scope: !3209, file: !3173, discriminator: 0)
!3209 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h16f4688c965f8742E", scope: !2354, file: !217, line: 487, type: !3210, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3212)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{!2354, !223, !9}
!3212 = !{!3207, !3213}
!3213 = !DILocalVariable(name: "len", scope: !3208, file: !3173, line: 174, type: !9, align: 8)
!3214 = !DILocation(line: 174, column: 21, scope: !3208, inlinedAt: !3215)
!3215 = !DILocation(line: 174, column: 21, scope: !3172)
!3216 = !DILocation(line: 177, column: 21, scope: !3184)
!3217 = !DILocalVariable(name: "layout", scope: !3218, file: !3173, line: 177, type: !283, align: 8)
!3218 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17hf316ce888675837cE", scope: !1379, file: !3173, line: 165, type: !3219, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3221)
!3219 = !DISubroutineType(types: !3220)
!3220 = !{!246, !283}
!3221 = !{!3217}
!3222 = !DILocation(line: 177, column: 43, scope: !3218, inlinedAt: !3223)
!3223 = !DILocation(line: 177, column: 43, scope: !3182)
!3224 = !DILocalVariable(name: "layout", scope: !3225, file: !3173, line: 177, type: !283, align: 8)
!3225 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17heb25674883dcbf40E", scope: !1379, file: !3173, line: 94, type: !3219, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3226)
!3226 = !{!3224}
!3227 = !DILocation(line: 177, column: 73, scope: !3225, inlinedAt: !3228)
!3228 = !DILocation(line: 177, column: 73, scope: !3182)
!3229 = !DILocalVariable(name: "self", scope: !3230, file: !3173, line: 178, type: !3250, align: 8)
!3230 = !DILexicalBlockFile(scope: !3231, file: !3173, discriminator: 0)
!3231 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he11374cc96312ce9E", scope: !1730, file: !1729, line: 2117, type: !3232, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3258, retainedNodes: !3264)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{!3234, !3250}
!3234 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !1734, file: !2, size: 64, align: 64, elements: !3235, templateParams: !23, identifier: "7f8c65b25026163a60482c903b940372")
!3235 = !{!3236}
!3236 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3234, file: !2, size: 64, align: 64, elements: !3237, templateParams: !23, identifier: "a5a8c50ac5e6502472acbdda15ae7613", discriminator: !3249)
!3237 = !{!3238, !3245}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3236, file: !2, baseType: !3239, size: 64, align: 64)
!3239 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3234, file: !2, size: 64, align: 64, elements: !3240, templateParams: !3242, identifier: "d2ac067f6845ce1e8a08fbb330350406")
!3240 = !{!3241}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3239, file: !2, baseType: !223, size: 64, align: 64)
!3242 = !{!3243, !3244}
!3243 = !DITemplateTypeParameter(name: "B", type: !3189)
!3244 = !DITemplateTypeParameter(name: "C", type: !223)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3236, file: !2, baseType: !3246, size: 64, align: 64, extraData: i64 0)
!3246 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3234, file: !2, size: 64, align: 64, elements: !3247, templateParams: !3242, identifier: "81bddfbc89a9f0c5cc1c72e49b9ff534")
!3247 = !{!3248}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3246, file: !2, baseType: !3189, align: 8)
!3249 = !DIDerivedType(tag: DW_TAG_member, scope: !3234, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!3250 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !398, file: !2, size: 64, align: 64, elements: !3251, templateParams: !23, identifier: "e71566aa277061ca8abc5a83ae5b9729")
!3251 = !{!3252}
!3252 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3250, file: !2, size: 64, align: 64, elements: !3253, templateParams: !23, identifier: "4a74327c407a883ea599f67b3290ba83", discriminator: !3263)
!3253 = !{!3254, !3259}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3252, file: !2, baseType: !3255, size: 64, align: 64)
!3255 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3250, file: !2, size: 64, align: 64, elements: !3256, templateParams: !3258, identifier: "71a196ee6c186d8bac41245f54989593")
!3256 = !{!3257}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3255, file: !2, baseType: !223, size: 64, align: 64)
!3258 = !{!1513, !2363}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3252, file: !2, baseType: !3260, size: 64, align: 64, extraData: i64 0)
!3260 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3250, file: !2, size: 64, align: 64, elements: !3261, templateParams: !3258, identifier: "fc861602d066f2f1f51a40a0537349e6")
!3261 = !{!3262}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3260, file: !2, baseType: !2364, align: 8)
!3263 = !DIDerivedType(tag: DW_TAG_member, scope: !3250, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!3264 = !{!3229, !3265, !3268}
!3265 = !DILocalVariable(name: "v", scope: !3266, file: !3173, line: 178, type: !223, align: 8)
!3266 = !DILexicalBlockFile(scope: !3267, file: !3173, discriminator: 0)
!3267 = distinct !DILexicalBlock(scope: !3231, file: !1729, line: 2119, column: 13)
!3268 = !DILocalVariable(name: "e", scope: !3269, file: !3173, line: 178, type: !2364, align: 1)
!3269 = !DILexicalBlockFile(scope: !3270, file: !3173, discriminator: 0)
!3270 = distinct !DILexicalBlock(scope: !3231, file: !1729, line: 2120, column: 13)
!3271 = !DILocation(line: 178, column: 27, scope: !3230, inlinedAt: !3272)
!3272 = !DILocation(line: 178, column: 27, scope: !3184)
!3273 = !DILocalVariable(name: "self", scope: !3274, file: !3173, line: 178, type: !1506, align: 8)
!3274 = !DILexicalBlockFile(scope: !3275, file: !3173, discriminator: 0)
!3275 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h952ac865c8917ed8E", scope: !1506, file: !1776, line: 1051, type: !3276, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3258, retainedNodes: !3278)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!3250, !1506, !2364}
!3278 = !{!3273, !3279, !3280}
!3279 = !DILocalVariable(name: "err", scope: !3274, file: !3173, line: 178, type: !2364, align: 1)
!3280 = !DILocalVariable(name: "v", scope: !3281, file: !3173, line: 178, type: !223, align: 8)
!3281 = !DILexicalBlockFile(scope: !3282, file: !3173, discriminator: 0)
!3282 = distinct !DILexicalBlock(scope: !3275, file: !1776, line: 1056, column: 13)
!3283 = !DILocation(line: 178, column: 27, scope: !3274, inlinedAt: !3272)
!3284 = !DILocation(line: 178, column: 66, scope: !3188)
!3285 = !DILocalVariable(name: "residual", scope: !3286, file: !3173, line: 178, type: !3189, align: 1)
!3286 = !DILexicalBlockFile(scope: !3287, file: !3173, discriminator: 0)
!3287 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h103e83ffd6875abfE", scope: !1789, file: !1729, line: 2132, type: !3288, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3294, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!2346, !3189, !973}
!3290 = !{!3285, !3291}
!3291 = !DILocalVariable(name: "e", scope: !3292, file: !3173, line: 178, type: !2364, align: 1)
!3292 = !DILexicalBlockFile(scope: !3293, file: !3173, discriminator: 0)
!3293 = distinct !DILexicalBlock(scope: !3287, file: !1729, line: 2134, column: 13)
!3294 = !{!2362, !2363, !3295}
!3295 = !DITemplateTypeParameter(name: "F", type: !2364)
!3296 = !DILocation(line: 178, column: 27, scope: !3286, inlinedAt: !3297)
!3297 = !DILocation(line: 178, column: 27, scope: !3188)
!3298 = !DILocalVariable(name: "self", scope: !3299, file: !3173, line: 174, type: !1654, align: 8)
!3299 = !DILexicalBlockFile(scope: !3300, file: !3173, discriminator: 0)
!3300 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3301)
!3301 = !{!3298}
!3302 = !DILocation(line: 174, column: 51, scope: !3299, inlinedAt: !3303)
!3303 = !DILocation(line: 131, column: 9, scope: !3304, inlinedAt: !3310)
!3304 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17heeceb5986a005c33E", scope: !283, file: !1625, line: 130, type: !3305, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3307)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!9, !2390}
!3307 = !{!3308}
!3308 = !DILocalVariable(name: "self", scope: !3309, file: !3173, line: 174, type: !2390, align: 8)
!3309 = !DILexicalBlockFile(scope: !3304, file: !3173, discriminator: 0)
!3310 = !DILocation(line: 205, column: 71, scope: !3311, inlinedAt: !3317)
!3311 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h068002a9b04c54c9E", scope: !283, file: !1625, line: 203, type: !3312, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3314)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{!223, !2390}
!3314 = !{!3315}
!3315 = !DILocalVariable(name: "self", scope: !3316, file: !3173, line: 174, type: !2390, align: 8)
!3316 = !DILexicalBlockFile(scope: !3311, file: !3173, discriminator: 0)
!3317 = !DILocation(line: 174, column: 51, scope: !3172)
!3318 = !DILocalVariable(name: "self", scope: !3319, file: !3173, line: 174, type: !289, align: 8)
!3319 = !DILexicalBlockFile(scope: !3320, file: !3173, discriminator: 0)
!3320 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3321)
!3321 = !{!3318}
!3322 = !DILocation(line: 174, column: 51, scope: !3319, inlinedAt: !3303)
!3323 = !DILocalVariable(name: "self", scope: !3324, file: !3173, line: 177, type: !1654, align: 8)
!3324 = !DILexicalBlockFile(scope: !3325, file: !3173, discriminator: 0)
!3325 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3326)
!3326 = !{!3323}
!3327 = !DILocation(line: 177, column: 43, scope: !3324, inlinedAt: !3328)
!3328 = !DILocation(line: 131, column: 9, scope: !3329, inlinedAt: !3333)
!3329 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17heeceb5986a005c33E", scope: !283, file: !1625, line: 130, type: !3305, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3330)
!3330 = !{!3331}
!3331 = !DILocalVariable(name: "self", scope: !3332, file: !3173, line: 177, type: !2390, align: 8)
!3332 = !DILexicalBlockFile(scope: !3329, file: !3173, discriminator: 0)
!3333 = !DILocation(line: 166, column: 49, scope: !3218, inlinedAt: !3223)
!3334 = !DILocalVariable(name: "self", scope: !3335, file: !3173, line: 177, type: !289, align: 8)
!3335 = !DILexicalBlockFile(scope: !3336, file: !3173, discriminator: 0)
!3336 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3337)
!3337 = !{!3334}
!3338 = !DILocation(line: 177, column: 43, scope: !3335, inlinedAt: !3328)
!3339 = !DILocalVariable(name: "self", scope: !3340, file: !3173, line: 177, type: !1654, align: 8)
!3340 = !DILexicalBlockFile(scope: !3341, file: !3173, discriminator: 0)
!3341 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3342)
!3342 = !{!3339}
!3343 = !DILocation(line: 177, column: 73, scope: !3340, inlinedAt: !3344)
!3344 = !DILocation(line: 131, column: 9, scope: !3345, inlinedAt: !3349)
!3345 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17heeceb5986a005c33E", scope: !283, file: !1625, line: 130, type: !3305, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3346)
!3346 = !{!3347}
!3347 = !DILocalVariable(name: "self", scope: !3348, file: !3173, line: 177, type: !2390, align: 8)
!3348 = !DILexicalBlockFile(scope: !3345, file: !3173, discriminator: 0)
!3349 = !DILocation(line: 95, column: 42, scope: !3225, inlinedAt: !3228)
!3350 = !DILocalVariable(name: "self", scope: !3351, file: !3173, line: 177, type: !289, align: 8)
!3351 = !DILexicalBlockFile(scope: !3352, file: !3173, discriminator: 0)
!3352 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3353)
!3353 = !{!3350}
!3354 = !DILocation(line: 177, column: 73, scope: !3351, inlinedAt: !3344)
!3355 = !DILocation(line: 178, column: 27, scope: !3269, inlinedAt: !3272)
!3356 = !DILocation(line: 178, column: 27, scope: !3292, inlinedAt: !3297)
!3357 = !DILocation(line: 173, column: 15, scope: !3172)
!3358 = !DILocalVariable(name: "self", scope: !3359, file: !3173, line: 173, type: !2390, align: 8)
!3359 = !DILexicalBlockFile(scope: !3360, file: !3173, discriminator: 0)
!3360 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h86886a5d1a0bdab8E", scope: !283, file: !1625, line: 120, type: !3305, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3361)
!3361 = !{!3358}
!3362 = !DILocation(line: 173, column: 15, scope: !3359, inlinedAt: !3357)
!3363 = !DILocation(line: 173, column: 9, scope: !3172)
!3364 = !DILocation(line: 174, column: 51, scope: !3316, inlinedAt: !3317)
!3365 = !DILocation(line: 174, column: 51, scope: !3309, inlinedAt: !3310)
!3366 = !DILocalVariable(name: "n", scope: !3367, file: !3173, line: 174, type: !9, align: 8)
!3367 = !DILexicalBlockFile(scope: !3368, file: !3173, discriminator: 0)
!3368 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3369)
!3369 = !{!3366, !3370}
!3370 = !DILocalVariable(name: "runtime", scope: !3371, file: !3173, line: 174, type: !1682, align: 8)
!3371 = !DILexicalBlockFile(scope: !3372, file: !3173, discriminator: 0)
!3372 = distinct !DILexicalBlock(scope: !3368, file: !1681, line: 2336, column: 13)
!3373 = !DILocation(line: 174, column: 51, scope: !3367, inlinedAt: !3374)
!3374 = !DILocation(line: 41, column: 18, scope: !3320, inlinedAt: !3303)
!3375 = !DILocalVariable(name: "addr", scope: !3376, file: !3173, line: 174, type: !9, align: 8)
!3376 = !DILexicalBlockFile(scope: !3377, file: !3173, discriminator: 0)
!3377 = distinct !DISubprogram(name: "invalid_mut<u8>", linkageName: "_ZN4core3ptr11invalid_mut17h9b48bf7b80d2ea1aE", scope: !220, file: !921, line: 569, type: !3378, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3380)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!246, !9}
!3380 = !{!3375}
!3381 = !DILocation(line: 174, column: 51, scope: !3376, inlinedAt: !3382)
!3382 = !DILocation(line: 205, column: 41, scope: !3311, inlinedAt: !3317)
!3383 = !DILocalVariable(name: "ptr", scope: !3384, file: !3173, line: 174, type: !246, align: 8)
!3384 = !DILexicalBlockFile(scope: !3385, file: !3173, discriminator: 0)
!3385 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1676b77ae4055e3cE", scope: !223, file: !217, line: 196, type: !258, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3386)
!3386 = !{!3383}
!3387 = !DILocation(line: 174, column: 51, scope: !3384, inlinedAt: !3388)
!3388 = !DILocation(line: 205, column: 18, scope: !3311, inlinedAt: !3317)
!3389 = !DILocation(line: 176, column: 13, scope: !3172)
!3390 = !DILocation(line: 176, column: 13, scope: !3182)
!3391 = !DILocation(line: 177, column: 34, scope: !3182)
!3392 = !DILocation(line: 177, column: 79, scope: !3182)
!3393 = !DILocalVariable(name: "self", scope: !3394, file: !3173, line: 177, type: !2390, align: 8)
!3394 = !DILexicalBlockFile(scope: !3395, file: !3173, discriminator: 0)
!3395 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h86886a5d1a0bdab8E", scope: !283, file: !1625, line: 120, type: !3305, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3396)
!3396 = !{!3393}
!3397 = !DILocation(line: 177, column: 73, scope: !3394, inlinedAt: !3398)
!3398 = !DILocation(line: 95, column: 27, scope: !3225, inlinedAt: !3228)
!3399 = !DILocation(line: 177, column: 73, scope: !3348, inlinedAt: !3349)
!3400 = !DILocalVariable(name: "n", scope: !3401, file: !3173, line: 177, type: !9, align: 8)
!3401 = !DILexicalBlockFile(scope: !3402, file: !3173, discriminator: 0)
!3402 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3403)
!3403 = !{!3400, !3404}
!3404 = !DILocalVariable(name: "runtime", scope: !3405, file: !3173, line: 177, type: !1682, align: 8)
!3405 = !DILexicalBlockFile(scope: !3406, file: !3173, discriminator: 0)
!3406 = distinct !DILexicalBlock(scope: !3402, file: !1681, line: 2336, column: 13)
!3407 = !DILocation(line: 177, column: 73, scope: !3401, inlinedAt: !3408)
!3408 = !DILocation(line: 41, column: 18, scope: !3352, inlinedAt: !3344)
!3409 = !DILocation(line: 177, column: 56, scope: !3182)
!3410 = !DILocalVariable(name: "self", scope: !3411, file: !3173, line: 177, type: !2390, align: 8)
!3411 = !DILexicalBlockFile(scope: !3412, file: !3173, discriminator: 0)
!3412 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h86886a5d1a0bdab8E", scope: !283, file: !1625, line: 120, type: !3305, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3413)
!3413 = !{!3410}
!3414 = !DILocation(line: 177, column: 43, scope: !3411, inlinedAt: !3415)
!3415 = !DILocation(line: 166, column: 34, scope: !3218, inlinedAt: !3223)
!3416 = !DILocation(line: 177, column: 43, scope: !3332, inlinedAt: !3333)
!3417 = !DILocalVariable(name: "n", scope: !3418, file: !3173, line: 177, type: !9, align: 8)
!3418 = !DILexicalBlockFile(scope: !3419, file: !3173, discriminator: 0)
!3419 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3420)
!3420 = !{!3417, !3421}
!3421 = !DILocalVariable(name: "runtime", scope: !3422, file: !3173, line: 177, type: !1682, align: 8)
!3422 = !DILexicalBlockFile(scope: !3423, file: !3173, discriminator: 0)
!3423 = distinct !DILexicalBlock(scope: !3419, file: !1681, line: 2336, column: 13)
!3424 = !DILocation(line: 177, column: 43, scope: !3418, inlinedAt: !3425)
!3425 = !DILocation(line: 41, column: 18, scope: !3336, inlinedAt: !3328)
!3426 = !DILocation(line: 177, column: 31, scope: !3182)
!3427 = !DILocation(line: 178, column: 40, scope: !3184)
!3428 = !DILocation(line: 178, column: 27, scope: !3281, inlinedAt: !3272)
!3429 = !DILocation(line: 178, column: 27, scope: !3266, inlinedAt: !3272)
!3430 = !DILocation(line: 178, column: 27, scope: !3203)
!3431 = !DILocation(line: 178, column: 21, scope: !3186)
!3432 = !DILocation(line: 179, column: 50, scope: !3186)
!3433 = !DILocalVariable(name: "data", scope: !3434, file: !3173, line: 179, type: !223, align: 8)
!3434 = !DILexicalBlockFile(scope: !3435, file: !3173, discriminator: 0)
!3435 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h16f4688c965f8742E", scope: !2354, file: !217, line: 487, type: !3210, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3436)
!3436 = !{!3433, !3437}
!3437 = !DILocalVariable(name: "len", scope: !3434, file: !3173, line: 179, type: !9, align: 8)
!3438 = !DILocation(line: 179, column: 20, scope: !3434, inlinedAt: !3439)
!3439 = !DILocation(line: 179, column: 20, scope: !3186)
!3440 = !DILocation(line: 179, column: 55, scope: !3186)
!3441 = !DILocalVariable(name: "self", scope: !3442, file: !3173, line: 179, type: !223, align: 8)
!3442 = !DILexicalBlockFile(scope: !3443, file: !3173, discriminator: 0)
!3443 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcc8c90d2a00f914dE", scope: !223, file: !217, line: 330, type: !251, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3444)
!3444 = !{!3441}
!3445 = !DILocation(line: 179, column: 20, scope: !3442, inlinedAt: !3446)
!3446 = !DILocation(line: 489, column: 70, scope: !3435, inlinedAt: !3439)
!3447 = !DILocalVariable(name: "data", scope: !3448, file: !3173, line: 179, type: !246, align: 8)
!3448 = !DILexicalBlockFile(scope: !3449, file: !3173, discriminator: 0)
!3449 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h5de310c0f643bd76E", scope: !220, file: !921, line: 727, type: !3450, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3456)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{!3452, !246, !9}
!3452 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !3453, templateParams: !23, identifier: "2081d302591cc0e6b89f57ab75a79c1e")
!3453 = !{!3454, !3455}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3452, file: !2, baseType: !838, size: 64, align: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3452, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!3456 = !{!3447, !3457}
!3457 = !DILocalVariable(name: "len", scope: !3448, file: !3173, line: 179, type: !9, align: 8)
!3458 = !DILocation(line: 179, column: 20, scope: !3448, inlinedAt: !3459)
!3459 = !DILocation(line: 489, column: 38, scope: !3435, inlinedAt: !3439)
!3460 = !DILocalVariable(name: "self", scope: !3461, file: !3173, line: 179, type: !246, align: 8)
!3461 = !DILexicalBlockFile(scope: !3462, file: !3173, discriminator: 0)
!3462 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h045c0094df01474bE", scope: !1540, file: !1539, line: 45, type: !3463, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3466, retainedNodes: !3465)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!1529, !246}
!3465 = !{!3460}
!3466 = !{!228, !2513}
!3467 = !DILocation(line: 179, column: 20, scope: !3461, inlinedAt: !3468)
!3468 = !DILocation(line: 728, column: 24, scope: !3449, inlinedAt: !3459)
!3469 = !DILocalVariable(name: "data_address", scope: !3470, file: !3173, line: 179, type: !1529, align: 8)
!3470 = !DILexicalBlockFile(scope: !3471, file: !3173, discriminator: 0)
!3471 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17haf3205b4b656cc87E", scope: !1526, file: !1525, line: 127, type: !3472, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3474)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{!3452, !1529, !9}
!3474 = !{!3469, !3475}
!3475 = !DILocalVariable(name: "metadata", scope: !3470, file: !3173, line: 179, type: !9, align: 8)
!3476 = !DILocation(line: 179, column: 20, scope: !3470, inlinedAt: !3477)
!3477 = !DILocation(line: 728, column: 5, scope: !3449, inlinedAt: !3459)
!3478 = !DILocalVariable(name: "ptr", scope: !3479, file: !3173, line: 179, type: !3452, align: 8)
!3479 = !DILexicalBlockFile(scope: !3480, file: !3173, discriminator: 0)
!3480 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd495f4802879314aE", scope: !2354, file: !217, line: 196, type: !3481, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3483)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!2354, !3452}
!3483 = !{!3478}
!3484 = !DILocation(line: 179, column: 20, scope: !3479, inlinedAt: !3485)
!3485 = !DILocation(line: 489, column: 18, scope: !3435, inlinedAt: !3439)
!3486 = !DILocation(line: 179, column: 17, scope: !3186)
!3487 = !DILocation(line: 180, column: 13, scope: !3172)
!3488 = !DILocation(line: 182, column: 6, scope: !3172)
!3489 = !DILocalVariable(name: "self", scope: !3490, file: !3173, line: 174, type: !223, align: 8)
!3490 = !DILexicalBlockFile(scope: !3491, file: !3173, discriminator: 0)
!3491 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcc8c90d2a00f914dE", scope: !223, file: !217, line: 330, type: !251, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3492)
!3492 = !{!3489}
!3493 = !DILocation(line: 174, column: 21, scope: !3490, inlinedAt: !3494)
!3494 = !DILocation(line: 489, column: 70, scope: !3209, inlinedAt: !3215)
!3495 = !DILocalVariable(name: "data", scope: !3496, file: !3173, line: 174, type: !246, align: 8)
!3496 = !DILexicalBlockFile(scope: !3497, file: !3173, discriminator: 0)
!3497 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h5de310c0f643bd76E", scope: !220, file: !921, line: 727, type: !3450, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3498)
!3498 = !{!3495, !3499}
!3499 = !DILocalVariable(name: "len", scope: !3496, file: !3173, line: 174, type: !9, align: 8)
!3500 = !DILocation(line: 174, column: 21, scope: !3496, inlinedAt: !3501)
!3501 = !DILocation(line: 489, column: 38, scope: !3209, inlinedAt: !3215)
!3502 = !DILocalVariable(name: "self", scope: !3503, file: !3173, line: 174, type: !246, align: 8)
!3503 = !DILexicalBlockFile(scope: !3504, file: !3173, discriminator: 0)
!3504 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h045c0094df01474bE", scope: !1540, file: !1539, line: 45, type: !3463, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3466, retainedNodes: !3505)
!3505 = !{!3502}
!3506 = !DILocation(line: 174, column: 21, scope: !3503, inlinedAt: !3507)
!3507 = !DILocation(line: 728, column: 24, scope: !3497, inlinedAt: !3501)
!3508 = !DILocalVariable(name: "data_address", scope: !3509, file: !3173, line: 174, type: !1529, align: 8)
!3509 = !DILexicalBlockFile(scope: !3510, file: !3173, discriminator: 0)
!3510 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17haf3205b4b656cc87E", scope: !1526, file: !1525, line: 127, type: !3472, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3511)
!3511 = !{!3508, !3512}
!3512 = !DILocalVariable(name: "metadata", scope: !3509, file: !3173, line: 174, type: !9, align: 8)
!3513 = !DILocation(line: 174, column: 21, scope: !3509, inlinedAt: !3514)
!3514 = !DILocation(line: 728, column: 5, scope: !3497, inlinedAt: !3501)
!3515 = !DILocalVariable(name: "ptr", scope: !3516, file: !3173, line: 174, type: !3452, align: 8)
!3516 = !DILexicalBlockFile(scope: !3517, file: !3173, discriminator: 0)
!3517 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd495f4802879314aE", scope: !2354, file: !217, line: 196, type: !3481, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3518)
!3518 = !{!3515}
!3519 = !DILocation(line: 174, column: 21, scope: !3516, inlinedAt: !3520)
!3520 = !DILocation(line: 489, column: 18, scope: !3209, inlinedAt: !3215)
!3521 = !DILocation(line: 174, column: 18, scope: !3172)
!3522 = !DILocation(line: 174, column: 72, scope: !3172)
!3523 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h08d1759a819f42feE", scope: !1378, file: !3173, line: 186, type: !3524, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3526)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!2346, !3176, !223, !283, !283, !710}
!3526 = !{!3527, !3528, !3529, !3530, !3531, !3532, !3534, !3535, !3537, !3539, !3541, !3543, !3545, !3547, !3549, !3551}
!3527 = !DILocalVariable(name: "self", arg: 1, scope: !3523, file: !3173, line: 187, type: !3176)
!3528 = !DILocalVariable(name: "ptr", arg: 2, scope: !3523, file: !3173, line: 188, type: !223)
!3529 = !DILocalVariable(name: "old_layout", arg: 3, scope: !3523, file: !3173, line: 189, type: !283)
!3530 = !DILocalVariable(name: "new_layout", arg: 4, scope: !3523, file: !3173, line: 190, type: !283)
!3531 = !DILocalVariable(name: "zeroed", arg: 5, scope: !3523, file: !3173, line: 191, type: !710)
!3532 = !DILocalVariable(name: "old_size", scope: !3533, file: !3173, line: 203, type: !9, align: 8)
!3533 = distinct !DILexicalBlock(scope: !3523, file: !3173, line: 203, column: 13)
!3534 = !DILocalVariable(name: "old_size", scope: !3533, file: !3173, line: 203, type: !690, align: 8)
!3535 = !DILocalVariable(name: "new_size", scope: !3536, file: !3173, line: 204, type: !9, align: 8)
!3536 = distinct !DILexicalBlock(scope: !3533, file: !3173, line: 204, column: 17)
!3537 = !DILocalVariable(name: "raw_ptr", scope: !3538, file: !3173, line: 209, type: !246, align: 8)
!3538 = distinct !DILexicalBlock(scope: !3536, file: !3173, line: 209, column: 17)
!3539 = !DILocalVariable(name: "ptr", scope: !3540, file: !3173, line: 210, type: !223, align: 8)
!3540 = distinct !DILexicalBlock(scope: !3538, file: !3173, line: 210, column: 17)
!3541 = !DILocalVariable(name: "residual", scope: !3542, file: !3173, line: 210, type: !3189, align: 1)
!3542 = distinct !DILexicalBlock(scope: !3538, file: !3173, line: 210, column: 66)
!3543 = !DILocalVariable(name: "val", scope: !3544, file: !3173, line: 210, type: !223, align: 8)
!3544 = distinct !DILexicalBlock(scope: !3538, file: !3173, line: 210, column: 27)
!3545 = !DILocalVariable(name: "old_size", scope: !3546, file: !3173, line: 222, type: !9, align: 8)
!3546 = distinct !DILexicalBlock(scope: !3523, file: !3173, line: 222, column: 13)
!3547 = !DILocalVariable(name: "new_ptr", scope: !3548, file: !3173, line: 223, type: !2354, align: 8)
!3548 = distinct !DILexicalBlock(scope: !3546, file: !3173, line: 223, column: 17)
!3549 = !DILocalVariable(name: "residual", scope: !3550, file: !3173, line: 223, type: !3189, align: 1)
!3550 = distinct !DILexicalBlock(scope: !3546, file: !3173, line: 223, column: 66)
!3551 = !DILocalVariable(name: "val", scope: !3552, file: !3173, line: 223, type: !2354, align: 8)
!3552 = distinct !DILexicalBlock(scope: !3546, file: !3173, line: 223, column: 31)
!3553 = !DILocation(line: 187, column: 9, scope: !3523)
!3554 = !DILocation(line: 188, column: 9, scope: !3523)
!3555 = !DILocation(line: 189, column: 9, scope: !3523)
!3556 = !DILocation(line: 190, column: 9, scope: !3523)
!3557 = !DILocation(line: 191, column: 9, scope: !3523)
!3558 = !DILocalVariable(name: "layout", scope: !3559, file: !3173, line: 209, type: !283, align: 8)
!3559 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17hbc7c41a330285416E", scope: !1379, file: !3173, line: 131, type: !3560, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3562)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!246, !246, !283, !9}
!3562 = !{!3563, !3558, !3564}
!3563 = !DILocalVariable(name: "ptr", scope: !3559, file: !3173, line: 209, type: !246, align: 8)
!3564 = !DILocalVariable(name: "new_size", scope: !3559, file: !3173, line: 209, type: !9, align: 8)
!3565 = !DILocation(line: 209, column: 31, scope: !3559, inlinedAt: !3566)
!3566 = !DILocation(line: 209, column: 31, scope: !3536)
!3567 = !DILocalVariable(name: "self", scope: !3568, file: !3173, line: 210, type: !3250, align: 8)
!3568 = !DILexicalBlockFile(scope: !3569, file: !3173, discriminator: 0)
!3569 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he11374cc96312ce9E", scope: !1730, file: !1729, line: 2117, type: !3232, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3258, retainedNodes: !3570)
!3570 = !{!3567, !3571, !3574}
!3571 = !DILocalVariable(name: "v", scope: !3572, file: !3173, line: 210, type: !223, align: 8)
!3572 = !DILexicalBlockFile(scope: !3573, file: !3173, discriminator: 0)
!3573 = distinct !DILexicalBlock(scope: !3569, file: !1729, line: 2119, column: 13)
!3574 = !DILocalVariable(name: "e", scope: !3575, file: !3173, line: 210, type: !2364, align: 1)
!3575 = !DILexicalBlockFile(scope: !3576, file: !3173, discriminator: 0)
!3576 = distinct !DILexicalBlock(scope: !3569, file: !1729, line: 2120, column: 13)
!3577 = !DILocation(line: 210, column: 27, scope: !3568, inlinedAt: !3578)
!3578 = !DILocation(line: 210, column: 27, scope: !3538)
!3579 = !DILocalVariable(name: "self", scope: !3580, file: !3173, line: 210, type: !1506, align: 8)
!3580 = !DILexicalBlockFile(scope: !3581, file: !3173, discriminator: 0)
!3581 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h952ac865c8917ed8E", scope: !1506, file: !1776, line: 1051, type: !3276, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3258, retainedNodes: !3582)
!3582 = !{!3579, !3583, !3584}
!3583 = !DILocalVariable(name: "err", scope: !3580, file: !3173, line: 210, type: !2364, align: 1)
!3584 = !DILocalVariable(name: "v", scope: !3585, file: !3173, line: 210, type: !223, align: 8)
!3585 = !DILexicalBlockFile(scope: !3586, file: !3173, discriminator: 0)
!3586 = distinct !DILexicalBlock(scope: !3581, file: !1776, line: 1056, column: 13)
!3587 = !DILocation(line: 210, column: 27, scope: !3580, inlinedAt: !3578)
!3588 = !DILocation(line: 210, column: 66, scope: !3542)
!3589 = !DILocalVariable(name: "residual", scope: !3590, file: !3173, line: 210, type: !3189, align: 1)
!3590 = !DILexicalBlockFile(scope: !3591, file: !3173, discriminator: 0)
!3591 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h103e83ffd6875abfE", scope: !1789, file: !1729, line: 2132, type: !3288, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3294, retainedNodes: !3592)
!3592 = !{!3589, !3593}
!3593 = !DILocalVariable(name: "e", scope: !3594, file: !3173, line: 210, type: !2364, align: 1)
!3594 = !DILexicalBlockFile(scope: !3595, file: !3173, discriminator: 0)
!3595 = distinct !DILexicalBlock(scope: !3591, file: !1729, line: 2134, column: 13)
!3596 = !DILocation(line: 210, column: 27, scope: !3590, inlinedAt: !3597)
!3597 = !DILocation(line: 210, column: 27, scope: !3542)
!3598 = !DILocalVariable(name: "self", scope: !3599, file: !3173, line: 223, type: !2346, align: 8)
!3599 = !DILexicalBlockFile(scope: !3600, file: !3173, discriminator: 0)
!3600 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h579ac9b714154f0aE", scope: !1730, file: !1729, line: 2117, type: !3601, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2361, retainedNodes: !3618)
!3601 = !DISubroutineType(types: !3602)
!3602 = !{!3603, !2346}
!3603 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1734, file: !2, size: 128, align: 64, elements: !3604, templateParams: !23, identifier: "742106b60153cc66c591376c04358a32")
!3604 = !{!3605}
!3605 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3603, file: !2, size: 128, align: 64, elements: !3606, templateParams: !23, identifier: "51e560db12d8945267902f7758889ab2", discriminator: !3617)
!3606 = !{!3607, !3613}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3605, file: !2, baseType: !3608, size: 128, align: 64)
!3608 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3603, file: !2, size: 128, align: 64, elements: !3609, templateParams: !3611, identifier: "7a7db6f08dd8181ffbc0406581832086")
!3609 = !{!3610}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3608, file: !2, baseType: !2354, size: 128, align: 64)
!3611 = !{!3243, !3612}
!3612 = !DITemplateTypeParameter(name: "C", type: !2354)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3605, file: !2, baseType: !3614, size: 128, align: 64, extraData: i64 0)
!3614 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3603, file: !2, size: 128, align: 64, elements: !3615, templateParams: !3611, identifier: "520e4a70aaf12c465e959335c5fb5ede")
!3615 = !{!3616}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3614, file: !2, baseType: !3189, align: 8)
!3617 = !DIDerivedType(tag: DW_TAG_member, scope: !3603, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!3618 = !{!3598, !3619, !3622}
!3619 = !DILocalVariable(name: "v", scope: !3620, file: !3173, line: 223, type: !2354, align: 8)
!3620 = !DILexicalBlockFile(scope: !3621, file: !3173, discriminator: 0)
!3621 = distinct !DILexicalBlock(scope: !3600, file: !1729, line: 2119, column: 13)
!3622 = !DILocalVariable(name: "e", scope: !3623, file: !3173, line: 223, type: !2364, align: 1)
!3623 = !DILexicalBlockFile(scope: !3624, file: !3173, discriminator: 0)
!3624 = distinct !DILexicalBlock(scope: !3600, file: !1729, line: 2120, column: 13)
!3625 = !DILocation(line: 223, column: 31, scope: !3599, inlinedAt: !3626)
!3626 = !DILocation(line: 223, column: 31, scope: !3546)
!3627 = !DILocation(line: 223, column: 66, scope: !3550)
!3628 = !DILocalVariable(name: "residual", scope: !3629, file: !3173, line: 223, type: !3189, align: 1)
!3629 = !DILexicalBlockFile(scope: !3630, file: !3173, discriminator: 0)
!3630 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h103e83ffd6875abfE", scope: !1789, file: !1729, line: 2132, type: !3288, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3294, retainedNodes: !3631)
!3631 = !{!3628, !3632}
!3632 = !DILocalVariable(name: "e", scope: !3633, file: !3173, line: 223, type: !2364, align: 1)
!3633 = !DILexicalBlockFile(scope: !3634, file: !3173, discriminator: 0)
!3634 = distinct !DILexicalBlock(scope: !3630, file: !1729, line: 2134, column: 13)
!3635 = !DILocation(line: 223, column: 31, scope: !3629, inlinedAt: !3636)
!3636 = !DILocation(line: 223, column: 31, scope: !3550)
!3637 = !DILocalVariable(name: "self", scope: !3638, file: !3173, line: 203, type: !1654, align: 8)
!3638 = !DILexicalBlockFile(scope: !3639, file: !3173, discriminator: 0)
!3639 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3640)
!3640 = !{!3637}
!3641 = !DILocation(line: 203, column: 25, scope: !3638, inlinedAt: !3642)
!3642 = !DILocation(line: 131, column: 9, scope: !3643, inlinedAt: !3647)
!3643 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17heeceb5986a005c33E", scope: !283, file: !1625, line: 130, type: !3305, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3644)
!3644 = !{!3645}
!3645 = !DILocalVariable(name: "self", scope: !3646, file: !3173, line: 203, type: !2390, align: 8)
!3646 = !DILexicalBlockFile(scope: !3643, file: !3173, discriminator: 0)
!3647 = !DILocation(line: 203, column: 25, scope: !3523)
!3648 = !DILocalVariable(name: "self", scope: !3649, file: !3173, line: 203, type: !289, align: 8)
!3649 = !DILexicalBlockFile(scope: !3650, file: !3173, discriminator: 0)
!3650 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3651)
!3651 = !{!3648}
!3652 = !DILocation(line: 203, column: 25, scope: !3649, inlinedAt: !3642)
!3653 = !DILocalVariable(name: "self", scope: !3654, file: !3173, line: 203, type: !1654, align: 8)
!3654 = !DILexicalBlockFile(scope: !3655, file: !3173, discriminator: 0)
!3655 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3656)
!3656 = !{!3653}
!3657 = !DILocation(line: 203, column: 47, scope: !3654, inlinedAt: !3658)
!3658 = !DILocation(line: 131, column: 9, scope: !3659, inlinedAt: !3663)
!3659 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17heeceb5986a005c33E", scope: !283, file: !1625, line: 130, type: !3305, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3660)
!3660 = !{!3661}
!3661 = !DILocalVariable(name: "self", scope: !3662, file: !3173, line: 203, type: !2390, align: 8)
!3662 = !DILexicalBlockFile(scope: !3659, file: !3173, discriminator: 0)
!3663 = !DILocation(line: 203, column: 47, scope: !3523)
!3664 = !DILocalVariable(name: "self", scope: !3665, file: !3173, line: 203, type: !289, align: 8)
!3665 = !DILexicalBlockFile(scope: !3666, file: !3173, discriminator: 0)
!3666 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3667)
!3667 = !{!3664}
!3668 = !DILocation(line: 203, column: 47, scope: !3665, inlinedAt: !3658)
!3669 = !DILocalVariable(name: "self", scope: !3670, file: !3173, line: 209, type: !1654, align: 8)
!3670 = !DILexicalBlockFile(scope: !3671, file: !3173, discriminator: 0)
!3671 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3672)
!3672 = !{!3669}
!3673 = !DILocation(line: 209, column: 31, scope: !3670, inlinedAt: !3674)
!3674 = !DILocation(line: 131, column: 9, scope: !3675, inlinedAt: !3679)
!3675 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17heeceb5986a005c33E", scope: !283, file: !1625, line: 130, type: !3305, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3676)
!3676 = !{!3677}
!3677 = !DILocalVariable(name: "self", scope: !3678, file: !3173, line: 209, type: !2390, align: 8)
!3678 = !DILexicalBlockFile(scope: !3675, file: !3173, discriminator: 0)
!3679 = !DILocation(line: 132, column: 49, scope: !3559, inlinedAt: !3566)
!3680 = !DILocalVariable(name: "self", scope: !3681, file: !3173, line: 209, type: !289, align: 8)
!3681 = !DILexicalBlockFile(scope: !3682, file: !3173, discriminator: 0)
!3682 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3683)
!3683 = !{!3680}
!3684 = !DILocation(line: 209, column: 31, scope: !3681, inlinedAt: !3674)
!3685 = !DILocation(line: 210, column: 27, scope: !3575, inlinedAt: !3578)
!3686 = !DILocation(line: 210, column: 27, scope: !3594, inlinedAt: !3597)
!3687 = !DILocation(line: 223, column: 31, scope: !3623, inlinedAt: !3626)
!3688 = !DILocation(line: 223, column: 31, scope: !3633, inlinedAt: !3636)
!3689 = !DILocalVariable(name: "self", scope: !3690, file: !3173, line: 224, type: !223, align: 8)
!3690 = !DILexicalBlockFile(scope: !3691, file: !3173, discriminator: 0)
!3691 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcc8c90d2a00f914dE", scope: !223, file: !217, line: 330, type: !251, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3692)
!3692 = !{!3689}
!3693 = !DILocation(line: 224, column: 56, scope: !3690, inlinedAt: !3694)
!3694 = !DILocation(line: 553, column: 9, scope: !3695, inlinedAt: !3701)
!3695 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17h8e132a450e8fc3cfE", scope: !2354, file: !217, line: 552, type: !3696, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3698)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!246, !2354}
!3698 = !{!3699}
!3699 = !DILocalVariable(name: "self", scope: !3700, file: !3173, line: 224, type: !2354, align: 8)
!3700 = !DILexicalBlockFile(scope: !3695, file: !3173, discriminator: 0)
!3701 = !DILocation(line: 224, column: 56, scope: !3548)
!3702 = !DILocalVariable(name: "runtime", scope: !3703, file: !3173, line: 224, type: !3714, align: 8)
!3703 = !DILexicalBlockFile(scope: !3704, file: !3173, discriminator: 0)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !1681, line: 2336, column: 13)
!3705 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core10intrinsics19copy_nonoverlapping17hb281d00fdd12917bE", scope: !3706, file: !1681, line: 2458, type: !3707, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3709)
!3706 = !DINamespace(name: "intrinsics", scope: !114)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{null, !226, !246, !9}
!3709 = !{!3710, !3712, !3713, !3702}
!3710 = !DILocalVariable(name: "src", scope: !3711, file: !3173, line: 224, type: !226, align: 8)
!3711 = !DILexicalBlockFile(scope: !3705, file: !3173, discriminator: 0)
!3712 = !DILocalVariable(name: "dst", scope: !3711, file: !3173, line: 224, type: !246, align: 8)
!3713 = !DILocalVariable(name: "count", scope: !3711, file: !3173, line: 224, type: !9, align: 8)
!3714 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !3715, file: !2, size: 192, align: 64, elements: !3716, templateParams: !23, identifier: "fb5d8c4998ddcc045cba0da9a8307400")
!3715 = !DINamespace(name: "copy_nonoverlapping", scope: !3706)
!3716 = !{!3717, !3719, !3721}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !3714, file: !2, baseType: !3718, size: 64, align: 64)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*const u8", baseType: !226, size: 64, align: 64, dwarfAddressSpace: 0)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !3714, file: !2, baseType: !3720, size: 64, align: 64, offset: 64)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&*mut u8", baseType: !246, size: 64, align: 64, dwarfAddressSpace: 0)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__count", scope: !3714, file: !2, baseType: !690, size: 64, align: 64, offset: 128)
!3722 = !DILocation(line: 224, column: 17, scope: !3703, inlinedAt: !3723)
!3723 = !DILocation(line: 224, column: 17, scope: !3548)
!3724 = !DILocation(line: 198, column: 15, scope: !3523)
!3725 = !DILocalVariable(name: "self", scope: !3726, file: !3173, line: 198, type: !2390, align: 8)
!3726 = !DILexicalBlockFile(scope: !3727, file: !3173, discriminator: 0)
!3727 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h86886a5d1a0bdab8E", scope: !283, file: !1625, line: 120, type: !3305, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3728)
!3728 = !{!3725}
!3729 = !DILocation(line: 198, column: 15, scope: !3726, inlinedAt: !3724)
!3730 = !DILocation(line: 198, column: 9, scope: !3523)
!3731 = !DILocation(line: 199, column: 34, scope: !3523)
!3732 = !DILocation(line: 199, column: 18, scope: !3523)
!3733 = !DILocation(line: 203, column: 25, scope: !3646, inlinedAt: !3647)
!3734 = !DILocalVariable(name: "n", scope: !3735, file: !3173, line: 203, type: !9, align: 8)
!3735 = !DILexicalBlockFile(scope: !3736, file: !3173, discriminator: 0)
!3736 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3737)
!3737 = !{!3734, !3738}
!3738 = !DILocalVariable(name: "runtime", scope: !3739, file: !3173, line: 203, type: !1682, align: 8)
!3739 = !DILexicalBlockFile(scope: !3740, file: !3173, discriminator: 0)
!3740 = distinct !DILexicalBlock(scope: !3736, file: !1681, line: 2336, column: 13)
!3741 = !DILocation(line: 203, column: 25, scope: !3735, inlinedAt: !3742)
!3742 = !DILocation(line: 41, column: 18, scope: !3650, inlinedAt: !3642)
!3743 = !DILocation(line: 203, column: 47, scope: !3662, inlinedAt: !3663)
!3744 = !DILocalVariable(name: "n", scope: !3745, file: !3173, line: 203, type: !9, align: 8)
!3745 = !DILexicalBlockFile(scope: !3746, file: !3173, discriminator: 0)
!3746 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3747)
!3747 = !{!3744, !3748}
!3748 = !DILocalVariable(name: "runtime", scope: !3749, file: !3173, line: 203, type: !1682, align: 8)
!3749 = !DILexicalBlockFile(scope: !3750, file: !3173, discriminator: 0)
!3750 = distinct !DILexicalBlock(scope: !3746, file: !1681, line: 2336, column: 13)
!3751 = !DILocation(line: 203, column: 47, scope: !3745, inlinedAt: !3752)
!3752 = !DILocation(line: 41, column: 18, scope: !3666, inlinedAt: !3658)
!3753 = !DILocation(line: 222, column: 13, scope: !3523)
!3754 = !DILocation(line: 222, column: 13, scope: !3546)
!3755 = !DILocation(line: 223, column: 47, scope: !3546)
!3756 = !DILocation(line: 203, column: 13, scope: !3523)
!3757 = !DILocation(line: 203, column: 13, scope: !3533)
!3758 = !DILocation(line: 204, column: 32, scope: !3533)
!3759 = !DILocalVariable(name: "self", scope: !3760, file: !3173, line: 204, type: !2390, align: 8)
!3760 = !DILexicalBlockFile(scope: !3761, file: !3173, discriminator: 0)
!3761 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h86886a5d1a0bdab8E", scope: !283, file: !1625, line: 120, type: !3305, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3762)
!3762 = !{!3759}
!3763 = !DILocation(line: 204, column: 32, scope: !3760, inlinedAt: !3758)
!3764 = !DILocation(line: 204, column: 21, scope: !3536)
!3765 = !DILocation(line: 207, column: 48, scope: !3536)
!3766 = !DILocalVariable(name: "self", scope: !3767, file: !3173, line: 207, type: !2390, align: 8)
!3767 = !DILexicalBlockFile(scope: !3768, file: !3173, discriminator: 0)
!3768 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h86886a5d1a0bdab8E", scope: !283, file: !1625, line: 120, type: !3305, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3769)
!3769 = !{!3766}
!3770 = !DILocation(line: 207, column: 48, scope: !3767, inlinedAt: !3765)
!3771 = !DILocation(line: 207, column: 36, scope: !3536)
!3772 = !DILocation(line: 207, column: 17, scope: !3536)
!3773 = !DILocation(line: 209, column: 39, scope: !3536)
!3774 = !DILocalVariable(name: "self", scope: !3775, file: !3173, line: 209, type: !223, align: 8)
!3775 = !DILexicalBlockFile(scope: !3776, file: !3173, discriminator: 0)
!3776 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcc8c90d2a00f914dE", scope: !223, file: !217, line: 330, type: !251, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3777)
!3777 = !{!3774}
!3778 = !DILocation(line: 209, column: 39, scope: !3775, inlinedAt: !3773)
!3779 = !DILocation(line: 209, column: 53, scope: !3536)
!3780 = !DILocation(line: 209, column: 65, scope: !3536)
!3781 = !DILocalVariable(name: "self", scope: !3782, file: !3173, line: 209, type: !2390, align: 8)
!3782 = !DILexicalBlockFile(scope: !3783, file: !3173, discriminator: 0)
!3783 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h86886a5d1a0bdab8E", scope: !283, file: !1625, line: 120, type: !3305, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3784)
!3784 = !{!3781}
!3785 = !DILocation(line: 209, column: 31, scope: !3782, inlinedAt: !3786)
!3786 = !DILocation(line: 132, column: 34, scope: !3559, inlinedAt: !3566)
!3787 = !DILocation(line: 209, column: 31, scope: !3678, inlinedAt: !3679)
!3788 = !DILocalVariable(name: "n", scope: !3789, file: !3173, line: 209, type: !9, align: 8)
!3789 = !DILexicalBlockFile(scope: !3790, file: !3173, discriminator: 0)
!3790 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !3791)
!3791 = !{!3788, !3792}
!3792 = !DILocalVariable(name: "runtime", scope: !3793, file: !3173, line: 209, type: !1682, align: 8)
!3793 = !DILexicalBlockFile(scope: !3794, file: !3173, discriminator: 0)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !1681, line: 2336, column: 13)
!3795 = !DILocation(line: 209, column: 31, scope: !3789, inlinedAt: !3796)
!3796 = !DILocation(line: 41, column: 18, scope: !3682, inlinedAt: !3674)
!3797 = !DILocation(line: 209, column: 21, scope: !3538)
!3798 = !DILocation(line: 210, column: 27, scope: !3585, inlinedAt: !3578)
!3799 = !DILocation(line: 210, column: 27, scope: !3572, inlinedAt: !3578)
!3800 = !DILocation(line: 210, column: 27, scope: !3544)
!3801 = !DILocation(line: 210, column: 21, scope: !3540)
!3802 = !DILocation(line: 211, column: 20, scope: !3540)
!3803 = !DILocation(line: 1, column: 1, scope: !3804)
!3804 = !DILexicalBlockFile(scope: !3523, file: !3805, discriminator: 0)
!3805 = !DIFile(filename: "src/lib.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "d2df0f6ca3304093c47d143f18f5f628")
!3806 = !DILocation(line: 229, column: 6, scope: !3523)
!3807 = !DILocation(line: 214, column: 50, scope: !3540)
!3808 = !DILocalVariable(name: "data", scope: !3809, file: !3173, line: 214, type: !223, align: 8)
!3809 = !DILexicalBlockFile(scope: !3810, file: !3173, discriminator: 0)
!3810 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h16f4688c965f8742E", scope: !2354, file: !217, line: 487, type: !3210, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3811)
!3811 = !{!3808, !3812}
!3812 = !DILocalVariable(name: "len", scope: !3809, file: !3173, line: 214, type: !9, align: 8)
!3813 = !DILocation(line: 214, column: 20, scope: !3809, inlinedAt: !3814)
!3814 = !DILocation(line: 214, column: 20, scope: !3540)
!3815 = !DILocation(line: 214, column: 55, scope: !3540)
!3816 = !DILocalVariable(name: "self", scope: !3817, file: !3173, line: 214, type: !223, align: 8)
!3817 = !DILexicalBlockFile(scope: !3818, file: !3173, discriminator: 0)
!3818 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcc8c90d2a00f914dE", scope: !223, file: !217, line: 330, type: !251, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3819)
!3819 = !{!3816}
!3820 = !DILocation(line: 214, column: 20, scope: !3817, inlinedAt: !3821)
!3821 = !DILocation(line: 489, column: 70, scope: !3810, inlinedAt: !3814)
!3822 = !DILocalVariable(name: "data", scope: !3823, file: !3173, line: 214, type: !246, align: 8)
!3823 = !DILexicalBlockFile(scope: !3824, file: !3173, discriminator: 0)
!3824 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h5de310c0f643bd76E", scope: !220, file: !921, line: 727, type: !3450, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3825)
!3825 = !{!3822, !3826}
!3826 = !DILocalVariable(name: "len", scope: !3823, file: !3173, line: 214, type: !9, align: 8)
!3827 = !DILocation(line: 214, column: 20, scope: !3823, inlinedAt: !3828)
!3828 = !DILocation(line: 489, column: 38, scope: !3810, inlinedAt: !3814)
!3829 = !DILocalVariable(name: "self", scope: !3830, file: !3173, line: 214, type: !246, align: 8)
!3830 = !DILexicalBlockFile(scope: !3831, file: !3173, discriminator: 0)
!3831 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h045c0094df01474bE", scope: !1540, file: !1539, line: 45, type: !3463, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !3466, retainedNodes: !3832)
!3832 = !{!3829}
!3833 = !DILocation(line: 214, column: 20, scope: !3830, inlinedAt: !3834)
!3834 = !DILocation(line: 728, column: 24, scope: !3824, inlinedAt: !3828)
!3835 = !DILocalVariable(name: "data_address", scope: !3836, file: !3173, line: 214, type: !1529, align: 8)
!3836 = !DILexicalBlockFile(scope: !3837, file: !3173, discriminator: 0)
!3837 = distinct !DISubprogram(name: "from_raw_parts_mut<[u8]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17haf3205b4b656cc87E", scope: !1526, file: !1525, line: 127, type: !3472, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3838)
!3838 = !{!3835, !3839}
!3839 = !DILocalVariable(name: "metadata", scope: !3836, file: !3173, line: 214, type: !9, align: 8)
!3840 = !DILocation(line: 214, column: 20, scope: !3836, inlinedAt: !3841)
!3841 = !DILocation(line: 728, column: 5, scope: !3824, inlinedAt: !3828)
!3842 = !DILocalVariable(name: "ptr", scope: !3843, file: !3173, line: 214, type: !3452, align: 8)
!3843 = !DILexicalBlockFile(scope: !3844, file: !3173, discriminator: 0)
!3844 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hd495f4802879314aE", scope: !2354, file: !217, line: 196, type: !3481, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3845)
!3845 = !{!3842}
!3846 = !DILocation(line: 214, column: 20, scope: !3843, inlinedAt: !3847)
!3847 = !DILocation(line: 489, column: 18, scope: !3810, inlinedAt: !3814)
!3848 = !DILocation(line: 214, column: 17, scope: !3540)
!3849 = !DILocation(line: 215, column: 13, scope: !3523)
!3850 = !DILocation(line: 212, column: 21, scope: !3540)
!3851 = !DILocalVariable(name: "self", scope: !3852, file: !3173, line: 212, type: !246, align: 8)
!3852 = !DILexicalBlockFile(scope: !3853, file: !3173, discriminator: 0)
!3853 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hf15f3b791a3ebdb7E", scope: !1540, file: !1539, line: 985, type: !3854, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3856)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!246, !246, !9}
!3856 = !{!3851, !3857}
!3857 = !DILocalVariable(name: "count", scope: !3852, file: !3173, line: 212, type: !9, align: 8)
!3858 = !DILocation(line: 212, column: 21, scope: !3852, inlinedAt: !3850)
!3859 = !DILocation(line: 212, column: 33, scope: !3540)
!3860 = !DILocalVariable(name: "self", scope: !3861, file: !3173, line: 212, type: !246, align: 8)
!3861 = !DILexicalBlockFile(scope: !3862, file: !3173, discriminator: 0)
!3862 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hfaba5ecc3f540a59E", scope: !1540, file: !1539, line: 465, type: !3863, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3865)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!246, !246, !335}
!3865 = !{!3860, !3866}
!3866 = !DILocalVariable(name: "count", scope: !3861, file: !3173, line: 212, type: !335, align: 8)
!3867 = !DILocation(line: 212, column: 21, scope: !3861, inlinedAt: !3868)
!3868 = !DILocation(line: 990, column: 18, scope: !3853, inlinedAt: !3850)
!3869 = !DILocalVariable(name: "self", scope: !3870, file: !3173, line: 212, type: !246, align: 8)
!3870 = !DILexicalBlockFile(scope: !3871, file: !3173, discriminator: 0)
!3871 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h0d872e47c29f648dE", scope: !1540, file: !1539, line: 1441, type: !3872, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3874)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{null, !246, !185, !9}
!3874 = !{!3869, !3875, !3876}
!3875 = !DILocalVariable(name: "val", scope: !3870, file: !3173, line: 212, type: !185, align: 1)
!3876 = !DILocalVariable(name: "count", scope: !3870, file: !3173, line: 212, type: !9, align: 8)
!3877 = !DILocation(line: 212, column: 21, scope: !3870, inlinedAt: !3850)
!3878 = !DILocation(line: 212, column: 58, scope: !3540)
!3879 = !DILocalVariable(name: "dst", scope: !3880, file: !3173, line: 212, type: !246, align: 8)
!3880 = !DILexicalBlockFile(scope: !3881, file: !3173, discriminator: 0)
!3881 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17hf2ca9b99726b4ed6E", scope: !3706, file: !1681, line: 2613, type: !3872, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3882)
!3882 = !{!3879, !3883, !3884, !3885}
!3883 = !DILocalVariable(name: "val", scope: !3880, file: !3173, line: 212, type: !185, align: 1)
!3884 = !DILocalVariable(name: "count", scope: !3880, file: !3173, line: 212, type: !9, align: 8)
!3885 = !DILocalVariable(name: "runtime", scope: !3886, file: !3173, line: 212, type: !3888, align: 8)
!3886 = !DILexicalBlockFile(scope: !3887, file: !3173, discriminator: 0)
!3887 = distinct !DILexicalBlock(scope: !3881, file: !1681, line: 2336, column: 13)
!3888 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !3889, file: !2, size: 64, align: 64, elements: !3890, templateParams: !23, identifier: "6002da543977e8e7318dc1c6e6a51af")
!3889 = !DINamespace(name: "write_bytes", scope: !3706)
!3890 = !{!3891}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__dst", scope: !3888, file: !2, baseType: !3720, size: 64, align: 64)
!3892 = !DILocation(line: 212, column: 21, scope: !3880, inlinedAt: !3893)
!3893 = !DILocation(line: 1446, column: 18, scope: !3871, inlinedAt: !3850)
!3894 = !DILocation(line: 211, column: 17, scope: !3540)
!3895 = !DILocation(line: 223, column: 31, scope: !3620, inlinedAt: !3626)
!3896 = !DILocation(line: 223, column: 31, scope: !3552)
!3897 = !DILocation(line: 223, column: 21, scope: !3548)
!3898 = !DILocation(line: 224, column: 42, scope: !3548)
!3899 = !DILocalVariable(name: "self", scope: !3900, file: !3173, line: 224, type: !223, align: 8)
!3900 = !DILexicalBlockFile(scope: !3901, file: !3173, discriminator: 0)
!3901 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcc8c90d2a00f914dE", scope: !223, file: !217, line: 330, type: !251, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3902)
!3902 = !{!3899}
!3903 = !DILocation(line: 224, column: 42, scope: !3900, inlinedAt: !3898)
!3904 = !DILocation(line: 224, column: 17, scope: !3711, inlinedAt: !3723)
!3905 = !DILocation(line: 224, column: 56, scope: !3700, inlinedAt: !3701)
!3906 = !DILocalVariable(name: "self", scope: !3907, file: !3173, line: 224, type: !2354, align: 8)
!3907 = !DILexicalBlockFile(scope: !3908, file: !3173, discriminator: 0)
!3908 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h629af71784fc8f28E", scope: !2354, file: !217, line: 532, type: !3909, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3911)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!223, !2354}
!3911 = !{!3906}
!3912 = !DILocation(line: 224, column: 56, scope: !3907, inlinedAt: !3694)
!3913 = !DILocalVariable(name: "self", scope: !3914, file: !3173, line: 224, type: !2354, align: 8)
!3914 = !DILexicalBlockFile(scope: !3915, file: !3173, discriminator: 0)
!3915 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7d08438adddc4ef1E", scope: !2354, file: !217, line: 330, type: !3916, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3918)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!3452, !2354}
!3918 = !{!3913}
!3919 = !DILocation(line: 224, column: 56, scope: !3914, inlinedAt: !3920)
!3920 = !DILocation(line: 534, column: 41, scope: !3908, inlinedAt: !3694)
!3921 = !DILocalVariable(name: "self", scope: !3922, file: !3173, line: 224, type: !3452, align: 8)
!3922 = !DILexicalBlockFile(scope: !3923, file: !3173, discriminator: 0)
!3923 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h41cd4bb950715d9fE", scope: !3924, file: !1539, line: 1778, type: !3925, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3927)
!3924 = !DINamespace(name: "{impl#1}", scope: !1541)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{!246, !3452}
!3927 = !{!3921}
!3928 = !DILocation(line: 224, column: 56, scope: !3922, inlinedAt: !3920)
!3929 = !DILocalVariable(name: "ptr", scope: !3930, file: !3173, line: 224, type: !246, align: 8)
!3930 = !DILexicalBlockFile(scope: !3931, file: !3173, discriminator: 0)
!3931 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1676b77ae4055e3cE", scope: !223, file: !217, line: 196, type: !258, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !3932)
!3932 = !{!3929}
!3933 = !DILocation(line: 224, column: 56, scope: !3930, inlinedAt: !3934)
!3934 = !DILocation(line: 534, column: 18, scope: !3908, inlinedAt: !3694)
!3935 = !DILocation(line: 224, column: 78, scope: !3548)
!3936 = !DILocation(line: 225, column: 38, scope: !3548)
!3937 = !DILocation(line: 225, column: 17, scope: !3548)
!3938 = !DILocation(line: 226, column: 17, scope: !3548)
!3939 = !DILocation(line: 227, column: 13, scope: !3523)
!3940 = !DILocation(line: 199, column: 52, scope: !3523)
!3941 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17h744e8f62363c8629E", scope: !210, file: !2773, line: 448, type: !3942, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4014, retainedNodes: !3962)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!2372, !1628, !3944, !3961}
!3944 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !425, file: !2, size: 192, align: 64, elements: !3945, templateParams: !23, identifier: "2441bf159aec13ad0ba597f59aeb1a1")
!3945 = !{!3946}
!3946 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3944, file: !2, size: 192, align: 64, elements: !3947, templateParams: !23, identifier: "d785942d6e728cf8ed28d4d1a571b7a3", discriminator: !3960)
!3947 = !{!3948, !3956}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3946, file: !2, baseType: !3949, size: 192, align: 64, extraData: i64 0)
!3949 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3944, file: !2, size: 192, align: 64, elements: !23, templateParams: !3950, identifier: "4d71821a6a04b7dadd5f931d25e98cb2")
!3950 = !{!3951}
!3951 = !DITemplateTypeParameter(name: "T", type: !3952)
!3952 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !3953, templateParams: !23, identifier: "c358a41279bc49b48121f0f71b1b3c8")
!3953 = !{!3954, !3955}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3952, file: !2, baseType: !223, size: 64, align: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3952, file: !2, baseType: !283, size: 128, align: 64, offset: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3946, file: !2, baseType: !3957, size: 192, align: 64)
!3957 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3944, file: !2, size: 192, align: 64, elements: !3958, templateParams: !3950, identifier: "3a54c5b1a06a194b358330f440d65fe5")
!3958 = !{!3959}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3957, file: !2, baseType: !3952, size: 192, align: 64)
!3960 = !DIDerivedType(tag: DW_TAG_member, scope: !3944, file: !2, baseType: !115, size: 64, align: 64, offset: 128, flags: DIFlagArtificial)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::alloc::Global", baseType: !1378, size: 64, align: 64, dwarfAddressSpace: 0)
!3962 = !{!3963, !3964, !3965, !3966, !3968, !3983, !3985, !4000, !4002, !4004, !4006, !4007, !4010, !4011}
!3963 = !DILocalVariable(name: "new_layout", arg: 1, scope: !3941, file: !2773, line: 449, type: !1628)
!3964 = !DILocalVariable(name: "current_memory", arg: 2, scope: !3941, file: !2773, line: 450, type: !3944)
!3965 = !DILocalVariable(name: "alloc", arg: 3, scope: !3941, file: !2773, line: 451, type: !3961)
!3966 = !DILocalVariable(name: "new_layout", scope: !3967, file: !2773, line: 457, type: !283, align: 8)
!3967 = distinct !DILexicalBlock(scope: !3941, file: !2773, line: 457, column: 5)
!3968 = !DILocalVariable(name: "residual", scope: !3969, file: !2773, line: 457, type: !3970, align: 8)
!3969 = distinct !DILexicalBlock(scope: !3941, file: !2773, line: 457, column: 62)
!3970 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !398, file: !2, size: 128, align: 64, elements: !3971, templateParams: !23, identifier: "5ef5f21a6f46a0206241b0c7f330dfa3")
!3971 = !{!3972}
!3972 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3970, file: !2, size: 128, align: 64, elements: !3973, templateParams: !23, identifier: "cb4858a3f71ae3f451b3ee0e26a669a0")
!3973 = !{!3974, !3979}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3972, file: !2, baseType: !3975, size: 128, align: 64)
!3975 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3970, file: !2, size: 128, align: 64, elements: !3976, templateParams: !3978, identifier: "416344365d509c704ad8ffe5dcfb70fa")
!3976 = !{!3977}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3975, file: !2, baseType: !1713, align: 8)
!3978 = !{!1718, !2313}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3972, file: !2, baseType: !3980, size: 128, align: 64)
!3980 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3970, file: !2, size: 128, align: 64, elements: !3981, templateParams: !3978, identifier: "554770741a2c8057e7f8529a99308bf0")
!3981 = !{!3982}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3980, file: !2, baseType: !273, size: 128, align: 64)
!3983 = !DILocalVariable(name: "val", scope: !3984, file: !2773, line: 457, type: !283, align: 8)
!3984 = distinct !DILexicalBlock(scope: !3941, file: !2773, line: 457, column: 22)
!3985 = !DILocalVariable(name: "residual", scope: !3986, file: !2773, line: 459, type: !3987, align: 8)
!3986 = distinct !DILexicalBlock(scope: !3967, file: !2773, line: 459, column: 35)
!3987 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !398, file: !2, size: 128, align: 64, elements: !3988, templateParams: !23, identifier: "c0cf86a3acbcbe62e1045ffe1b8697")
!3988 = !{!3989}
!3989 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3987, file: !2, size: 128, align: 64, elements: !3990, templateParams: !23, identifier: "542941ded386c5d0b8832b89b5bc0159")
!3990 = !{!3991, !3996}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3989, file: !2, baseType: !3992, size: 128, align: 64)
!3992 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3987, file: !2, size: 128, align: 64, elements: !3993, templateParams: !3995, identifier: "172bc5836ee47c35d518a78511939b12")
!3993 = !{!3994}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3992, file: !2, baseType: !1713, align: 8)
!3995 = !{!1718, !2381}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3989, file: !2, baseType: !3997, size: 128, align: 64)
!3997 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3987, file: !2, size: 128, align: 64, elements: !3998, templateParams: !3995, identifier: "adf3f686a95f61b9c3558b4df539adb8")
!3998 = !{!3999}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3997, file: !2, baseType: !270, size: 128, align: 64)
!4000 = !DILocalVariable(name: "val", scope: !4001, file: !2773, line: 459, type: !7, align: 1)
!4001 = distinct !DILexicalBlock(scope: !3967, file: !2773, line: 459, column: 5)
!4002 = !DILocalVariable(name: "memory", scope: !4003, file: !2773, line: 461, type: !2346, align: 8)
!4003 = distinct !DILexicalBlock(scope: !3967, file: !2773, line: 461, column: 5)
!4004 = !DILocalVariable(name: "ptr", scope: !4005, file: !2773, line: 461, type: !223, align: 8)
!4005 = distinct !DILexicalBlock(scope: !3967, file: !2773, line: 461, column: 66)
!4006 = !DILocalVariable(name: "old_layout", scope: !4005, file: !2773, line: 461, type: !283, align: 8)
!4007 = !DILocalVariable(name: "left_val", scope: !4008, file: !2773, line: 462, type: !690, align: 8)
!4008 = !DILexicalBlockFile(scope: !4009, file: !2773, discriminator: 0)
!4009 = distinct !DILexicalBlock(scope: !4005, file: !2622, line: 39, column: 13)
!4010 = !DILocalVariable(name: "right_val", scope: !4008, file: !2773, line: 462, type: !690, align: 8)
!4011 = !DILocalVariable(name: "kind", scope: !4012, file: !2773, line: 462, type: !203, align: 1)
!4012 = !DILexicalBlockFile(scope: !4013, file: !2773, discriminator: 0)
!4013 = distinct !DILexicalBlock(scope: !4009, file: !2622, line: 41, column: 21)
!4014 = !{!1381}
!4015 = !DILocation(line: 449, column: 5, scope: !3941)
!4016 = !DILocation(line: 450, column: 5, scope: !3941)
!4017 = !DILocation(line: 451, column: 5, scope: !3941)
!4018 = !DILocation(line: 457, column: 9, scope: !3967)
!4019 = !DILocalVariable(name: "self", scope: !4020, file: !2773, line: 457, type: !2304, align: 8)
!4020 = !DILexicalBlockFile(scope: !4021, file: !2773, discriminator: 0)
!4021 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4f82e98b2a98f364E", scope: !1730, file: !1729, line: 2117, type: !4022, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2312, retainedNodes: !4040)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!4024, !2304}
!4024 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !1734, file: !2, size: 192, align: 64, elements: !4025, templateParams: !23, identifier: "30c77f8de40d27cc25bb1f117e102368")
!4025 = !{!4026}
!4026 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4024, file: !2, size: 192, align: 64, elements: !4027, templateParams: !23, identifier: "873dd87a14009e5aa4571f77c2255abd", discriminator: !4039)
!4027 = !{!4028, !4035}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4026, file: !2, baseType: !4029, size: 192, align: 64, extraData: i64 0)
!4029 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4024, file: !2, size: 192, align: 64, elements: !4030, templateParams: !4032, identifier: "44b658dc6aeebfb637fc0f71177a37ae")
!4030 = !{!4031}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4029, file: !2, baseType: !283, size: 128, align: 64, offset: 64)
!4032 = !{!4033, !4034}
!4033 = !DITemplateTypeParameter(name: "B", type: !3970)
!4034 = !DITemplateTypeParameter(name: "C", type: !283)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4026, file: !2, baseType: !4036, size: 192, align: 64, extraData: i64 1)
!4036 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4024, file: !2, size: 192, align: 64, elements: !4037, templateParams: !4032, identifier: "a45e3c8f49f3878b531df9d7bb0c1ddb")
!4037 = !{!4038}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4036, file: !2, baseType: !3970, size: 128, align: 64, offset: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, scope: !4024, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!4040 = !{!4019, !4041, !4044}
!4041 = !DILocalVariable(name: "v", scope: !4042, file: !2773, line: 457, type: !283, align: 8)
!4042 = !DILexicalBlockFile(scope: !4043, file: !2773, discriminator: 0)
!4043 = distinct !DILexicalBlock(scope: !4021, file: !1729, line: 2119, column: 13)
!4044 = !DILocalVariable(name: "e", scope: !4045, file: !2773, line: 457, type: !273, align: 8)
!4045 = !DILexicalBlockFile(scope: !4046, file: !2773, discriminator: 0)
!4046 = distinct !DILexicalBlock(scope: !4021, file: !1729, line: 2120, column: 13)
!4047 = !DILocation(line: 457, column: 22, scope: !4020, inlinedAt: !4048)
!4048 = !DILocation(line: 457, column: 22, scope: !3941)
!4049 = !DILocalVariable(name: "residual", scope: !4050, file: !2773, line: 457, type: !3970, align: 8)
!4050 = !DILexicalBlockFile(scope: !4051, file: !2773, discriminator: 0)
!4051 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfd227c4ae3e8b909E", scope: !1789, file: !1729, line: 2132, type: !4052, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4058, retainedNodes: !4054)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!2372, !3970, !973}
!4054 = !{!4049, !4055}
!4055 = !DILocalVariable(name: "e", scope: !4056, file: !2773, line: 457, type: !273, align: 8)
!4056 = !DILexicalBlockFile(scope: !4057, file: !2773, discriminator: 0)
!4057 = distinct !DILexicalBlock(scope: !4051, file: !1729, line: 2134, column: 13)
!4058 = !{!2362, !2313, !2399}
!4059 = !DILocation(line: 457, column: 22, scope: !4050, inlinedAt: !4060)
!4060 = !DILocation(line: 457, column: 22, scope: !3969)
!4061 = !DILocalVariable(name: "self", scope: !4062, file: !2773, line: 459, type: !2416, align: 8)
!4062 = !DILexicalBlockFile(scope: !4063, file: !2773, discriminator: 0)
!4063 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2945ab16e8ffbec5E", scope: !1730, file: !1729, line: 2117, type: !4064, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2424, retainedNodes: !4082)
!4064 = !DISubroutineType(types: !4065)
!4065 = !{!4066, !2416}
!4066 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !1734, file: !2, size: 128, align: 64, elements: !4067, templateParams: !23, identifier: "dd182185d8f5b2b7cb5665cc5c5ccb07")
!4067 = !{!4068}
!4068 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4066, file: !2, size: 128, align: 64, elements: !4069, templateParams: !23, identifier: "57751adeae8e77576883f29d0a97ac09", discriminator: !4081)
!4069 = !{!4070, !4077}
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4068, file: !2, baseType: !4071, size: 128, align: 64, extraData: i64 -9223372036854775807)
!4071 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4066, file: !2, size: 128, align: 64, elements: !4072, templateParams: !4074, identifier: "35a87d623a367fdaec857f7d914f3ad9")
!4072 = !{!4073}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4071, file: !2, baseType: !7, align: 8)
!4074 = !{!4075, !4076}
!4075 = !DITemplateTypeParameter(name: "B", type: !3987)
!4076 = !DITemplateTypeParameter(name: "C", type: !7)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4068, file: !2, baseType: !4078, size: 128, align: 64)
!4078 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4066, file: !2, size: 128, align: 64, elements: !4079, templateParams: !4074, identifier: "f5790c13a1dcecaf1cf858de99ad1734")
!4079 = !{!4080}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4078, file: !2, baseType: !3987, size: 128, align: 64)
!4081 = !DIDerivedType(tag: DW_TAG_member, scope: !4066, file: !2, baseType: !115, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!4082 = !{!4061, !4083, !4086}
!4083 = !DILocalVariable(name: "v", scope: !4084, file: !2773, line: 459, type: !7, align: 1)
!4084 = !DILexicalBlockFile(scope: !4085, file: !2773, discriminator: 0)
!4085 = distinct !DILexicalBlock(scope: !4063, file: !1729, line: 2119, column: 13)
!4086 = !DILocalVariable(name: "e", scope: !4087, file: !2773, line: 459, type: !270, align: 8)
!4087 = !DILexicalBlockFile(scope: !4088, file: !2773, discriminator: 0)
!4088 = distinct !DILexicalBlock(scope: !4063, file: !1729, line: 2120, column: 13)
!4089 = !DILocation(line: 459, column: 5, scope: !4062, inlinedAt: !4090)
!4090 = !DILocation(line: 459, column: 5, scope: !3967)
!4091 = !DILocalVariable(name: "residual", scope: !4092, file: !2773, line: 459, type: !3987, align: 8)
!4092 = !DILexicalBlockFile(scope: !4093, file: !2773, discriminator: 0)
!4093 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hca373da888be6130E", scope: !1789, file: !1729, line: 2132, type: !4094, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4100, retainedNodes: !4096)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!2372, !3987, !973}
!4096 = !{!4091, !4097}
!4097 = !DILocalVariable(name: "e", scope: !4098, file: !2773, line: 459, type: !270, align: 8)
!4098 = !DILexicalBlockFile(scope: !4099, file: !2773, discriminator: 0)
!4099 = distinct !DILexicalBlock(scope: !4093, file: !1729, line: 2134, column: 13)
!4100 = !{!2362, !2381, !2399}
!4101 = !DILocation(line: 459, column: 5, scope: !4092, inlinedAt: !4102)
!4102 = !DILocation(line: 459, column: 5, scope: !3986)
!4103 = !DILocation(line: 459, column: 5, scope: !4001)
!4104 = !DILocation(line: 461, column: 9, scope: !4003)
!4105 = !DILocation(line: 461, column: 36, scope: !4005)
!4106 = !DILocation(line: 459, column: 5, scope: !4084, inlinedAt: !4090)
!4107 = !DILocalVariable(name: "self", scope: !4108, file: !2773, line: 465, type: !1654, align: 8)
!4108 = !DILexicalBlockFile(scope: !4109, file: !2773, discriminator: 0)
!4109 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4110)
!4110 = !{!4107}
!4111 = !DILocation(line: 465, column: 32, scope: !4108, inlinedAt: !4112)
!4112 = !DILocation(line: 131, column: 9, scope: !4113, inlinedAt: !4117)
!4113 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17heeceb5986a005c33E", scope: !283, file: !1625, line: 130, type: !3305, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4114)
!4114 = !{!4115}
!4115 = !DILocalVariable(name: "self", scope: !4116, file: !2773, line: 465, type: !2390, align: 8)
!4116 = !DILexicalBlockFile(scope: !4113, file: !2773, discriminator: 0)
!4117 = !DILocation(line: 465, column: 32, scope: !4005)
!4118 = !DILocalVariable(name: "self", scope: !4119, file: !2773, line: 465, type: !289, align: 8)
!4119 = !DILexicalBlockFile(scope: !4120, file: !2773, discriminator: 0)
!4120 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4121)
!4121 = !{!4118}
!4122 = !DILocation(line: 465, column: 32, scope: !4119, inlinedAt: !4112)
!4123 = !DILocalVariable(name: "self", scope: !4124, file: !2773, line: 465, type: !1654, align: 8)
!4124 = !DILexicalBlockFile(scope: !4125, file: !2773, discriminator: 0)
!4125 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4126)
!4126 = !{!4123}
!4127 = !DILocation(line: 465, column: 54, scope: !4124, inlinedAt: !4128)
!4128 = !DILocation(line: 131, column: 9, scope: !4129, inlinedAt: !4133)
!4129 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17heeceb5986a005c33E", scope: !283, file: !1625, line: 130, type: !3305, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4130)
!4130 = !{!4131}
!4131 = !DILocalVariable(name: "self", scope: !4132, file: !2773, line: 465, type: !2390, align: 8)
!4132 = !DILexicalBlockFile(scope: !4129, file: !2773, discriminator: 0)
!4133 = !DILocation(line: 465, column: 54, scope: !4005)
!4134 = !DILocalVariable(name: "self", scope: !4135, file: !2773, line: 465, type: !289, align: 8)
!4135 = !DILexicalBlockFile(scope: !4136, file: !2773, discriminator: 0)
!4136 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4137)
!4137 = !{!4134}
!4138 = !DILocation(line: 465, column: 54, scope: !4135, inlinedAt: !4128)
!4139 = !DILocation(line: 457, column: 22, scope: !4042, inlinedAt: !4048)
!4140 = !DILocation(line: 457, column: 22, scope: !4045, inlinedAt: !4048)
!4141 = !DILocation(line: 457, column: 22, scope: !3984)
!4142 = !DILocation(line: 459, column: 5, scope: !4143, inlinedAt: !4090)
!4143 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17hacc2c2c34f4c5bbfE", scope: !210, file: !2773, line: 505, type: !4144, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4146)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!2416, !9}
!4146 = !{!4147}
!4147 = !DILocalVariable(name: "alloc_size", scope: !4143, file: !2773, line: 459, type: !9, align: 8)
!4148 = !DILocation(line: 457, column: 62, scope: !3941)
!4149 = !DILocation(line: 457, column: 62, scope: !3969)
!4150 = !DILocation(line: 457, column: 22, scope: !4056, inlinedAt: !4060)
!4151 = !DILocalVariable(name: "kind", scope: !4152, file: !2773, line: 457, type: !273, align: 8)
!4152 = !DILexicalBlockFile(scope: !4153, file: !2773, discriminator: 0)
!4153 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf590d0dc0bf2911aE", scope: !266, file: !265, line: 116, type: !268, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4154)
!4154 = !{!4151}
!4155 = !DILocation(line: 457, column: 22, scope: !4152, inlinedAt: !4156)
!4156 = !DILocation(line: 2134, column: 27, scope: !4057, inlinedAt: !4060)
!4157 = !DILocation(line: 1, column: 1, scope: !4158)
!4158 = !DILexicalBlockFile(scope: !3941, file: !3805, discriminator: 0)
!4159 = !DILocation(line: 473, column: 2, scope: !3941)
!4160 = !DILocation(line: 459, column: 5, scope: !4087, inlinedAt: !4090)
!4161 = !DILocation(line: 461, column: 25, scope: !4005)
!4162 = !DILocation(line: 459, column: 35, scope: !3967)
!4163 = !DILocation(line: 459, column: 35, scope: !3986)
!4164 = !DILocation(line: 459, column: 5, scope: !4098, inlinedAt: !4102)
!4165 = !DILocation(line: 1, column: 1, scope: !4166)
!4166 = !DILexicalBlockFile(scope: !3967, file: !3805, discriminator: 0)
!4167 = !DILocation(line: 461, column: 31, scope: !4005)
!4168 = !DILocation(line: 465, column: 32, scope: !4116, inlinedAt: !4117)
!4169 = !DILocalVariable(name: "n", scope: !4170, file: !2773, line: 465, type: !9, align: 8)
!4170 = !DILexicalBlockFile(scope: !4171, file: !2773, discriminator: 0)
!4171 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4172)
!4172 = !{!4169, !4173}
!4173 = !DILocalVariable(name: "runtime", scope: !4174, file: !2773, line: 465, type: !1682, align: 8)
!4174 = !DILexicalBlockFile(scope: !4175, file: !2773, discriminator: 0)
!4175 = distinct !DILexicalBlock(scope: !4171, file: !1681, line: 2336, column: 13)
!4176 = !DILocation(line: 465, column: 32, scope: !4170, inlinedAt: !4177)
!4177 = !DILocation(line: 41, column: 18, scope: !4120, inlinedAt: !4112)
!4178 = !DILocation(line: 465, column: 54, scope: !4132, inlinedAt: !4133)
!4179 = !DILocalVariable(name: "n", scope: !4180, file: !2773, line: 465, type: !9, align: 8)
!4180 = !DILexicalBlockFile(scope: !4181, file: !2773, discriminator: 0)
!4181 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4182)
!4182 = !{!4179, !4183}
!4183 = !DILocalVariable(name: "runtime", scope: !4184, file: !2773, line: 465, type: !1682, align: 8)
!4184 = !DILexicalBlockFile(scope: !4185, file: !2773, discriminator: 0)
!4185 = distinct !DILexicalBlock(scope: !4181, file: !1681, line: 2336, column: 13)
!4186 = !DILocation(line: 465, column: 54, scope: !4180, inlinedAt: !4187)
!4187 = !DILocation(line: 41, column: 18, scope: !4136, inlinedAt: !4128)
!4188 = !DILocation(line: 465, column: 13, scope: !4005)
!4189 = !DILocation(line: 469, column: 24, scope: !3967)
!4190 = !DILocation(line: 469, column: 9, scope: !3967)
!4191 = !DILocation(line: 461, column: 18, scope: !3967)
!4192 = !DILocation(line: 472, column: 5, scope: !4003)
!4193 = !DILocation(line: 472, column: 20, scope: !4003)
!4194 = !DILocation(line: 466, column: 29, scope: !4005)
!4195 = !DILocation(line: 466, column: 41, scope: !4005)
!4196 = !DILocation(line: 466, column: 13, scope: !4005)
!4197 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h68279da78d4449ffE", scope: !2320, file: !2773, line: 457, type: !4198, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4014, retainedNodes: !4200)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!273, !2319, !1639}
!4200 = !{!4201, !4202}
!4201 = !DILocalVariable(arg: 1, scope: !4197, file: !2773, line: 457, type: !2319)
!4202 = !DILocalVariable(arg: 2, scope: !4197, file: !2773, line: 457, type: !1639)
!4203 = !DILocation(line: 457, column: 41, scope: !4197)
!4204 = !DILocation(line: 457, column: 42, scope: !4197)
!4205 = !DILocation(line: 457, column: 45, scope: !4197)
!4206 = !DILocation(line: 457, column: 44, scope: !4197)
!4207 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17ha5dda3eec3319225E", scope: !2320, file: !2773, line: 472, type: !4208, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4014, retainedNodes: !4210)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!270, !2387, !2364}
!4210 = !{!4211, !4212}
!4211 = !DILocalVariable(name: "new_layout", scope: !4207, file: !2773, line: 457, type: !283, align: 8)
!4212 = !DILocalVariable(arg: 2, scope: !4207, file: !2773, line: 472, type: !2364)
!4213 = !DILocation(line: 457, column: 9, scope: !4207)
!4214 = !DILocation(line: 472, column: 21, scope: !4207)
!4215 = !DILocation(line: 472, column: 45, scope: !4207)
!4216 = !DILocation(line: 472, column: 24, scope: !4207)
!4217 = !DILocation(line: 472, column: 23, scope: !4207)
!4218 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17ha311a99c3665fe3bE", scope: !210, file: !2773, line: 487, type: !4219, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4221)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{null, !2416}
!4221 = !{!4222, !4223}
!4222 = !DILocalVariable(name: "result", arg: 1, scope: !4218, file: !2773, line: 487, type: !2416)
!4223 = !DILocalVariable(name: "layout", scope: !4224, file: !2773, line: 490, type: !283, align: 8)
!4224 = distinct !DILexicalBlock(scope: !4218, file: !2773, line: 490, column: 9)
!4225 = !DILocation(line: 487, column: 19, scope: !4218)
!4226 = !DILocation(line: 488, column: 11, scope: !4218)
!4227 = !DILocation(line: 488, column: 5, scope: !4218)
!4228 = !DILocation(line: 493, column: 2, scope: !4218)
!4229 = !DILocation(line: 489, column: 34, scope: !4218)
!4230 = !DILocation(line: 490, column: 26, scope: !4218)
!4231 = !DILocation(line: 490, column: 26, scope: !4224)
!4232 = !DILocation(line: 490, column: 43, scope: !4224)
!4233 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17hfa61a9303ea46fc9E", scope: !2447, file: !2773, line: 488, type: !4234, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4236)
!4234 = !DISubroutineType(types: !4235)
!4235 = !{!273, !2446, !270}
!4236 = !{!4237, !4238}
!4237 = !DILocalVariable(name: "e", arg: 2, scope: !4233, file: !2773, line: 488, type: !270)
!4238 = !DILocalVariable(arg: 1, scope: !4233, file: !2773, line: 488, type: !2446)
!4239 = !DILocation(line: 488, column: 26, scope: !4233)
!4240 = !DILocation(line: 488, column: 27, scope: !4233)
!4241 = !DILocation(line: 488, column: 30, scope: !4233)
!4242 = !DILocalVariable(name: "self", scope: !4243, file: !2773, line: 488, type: !4247, align: 8)
!4243 = !DILexicalBlockFile(scope: !4244, file: !2773, discriminator: 0)
!4244 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17h0af7400c75ab85a1E", scope: !270, file: !265, line: 74, type: !4245, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4248)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!273, !4247}
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !270, size: 64, align: 64, dwarfAddressSpace: 0)
!4248 = !{!4242}
!4249 = !DILocation(line: 488, column: 30, scope: !4243, inlinedAt: !4241)
!4250 = !DILocalVariable(name: "self", scope: !4251, file: !2773, line: 488, type: !4256, align: 8)
!4251 = !DILexicalBlockFile(scope: !4252, file: !2773, discriminator: 0)
!4252 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17h70f4610a48289b9cE", scope: !4253, file: !265, line: 80, type: !4254, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4257)
!4253 = !DINamespace(name: "{impl#10}", scope: !267)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{!273, !4256}
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !273, size: 64, align: 64, dwarfAddressSpace: 0)
!4257 = !{!4250, !4258, !4261}
!4258 = !DILocalVariable(name: "__self_0", scope: !4259, file: !2773, line: 488, type: !2390, align: 8)
!4259 = !DILexicalBlockFile(scope: !4260, file: !2773, discriminator: 0)
!4260 = distinct !DILexicalBlock(scope: !4252, file: !265, line: 80, column: 10)
!4261 = !DILocalVariable(name: "__self_1", scope: !4259, file: !2773, line: 488, type: !54, align: 8)
!4262 = !DILocation(line: 488, column: 30, scope: !4251, inlinedAt: !4263)
!4263 = !DILocation(line: 75, column: 9, scope: !4244, inlinedAt: !4241)
!4264 = !DILocation(line: 488, column: 30, scope: !4259, inlinedAt: !4263)
!4265 = !DILocalVariable(name: "self", scope: !4266, file: !2773, line: 488, type: !2390, align: 8)
!4266 = !DILexicalBlockFile(scope: !4267, file: !2773, discriminator: 0)
!4267 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h1c9e37cf17eb20a6E", scope: !4268, file: !1625, line: 35, type: !4269, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4271)
!4268 = !DINamespace(name: "{impl#3}", scope: !284)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!283, !2390}
!4271 = !{!4265}
!4272 = !DILocation(line: 488, column: 30, scope: !4266, inlinedAt: !4273)
!4273 = !DILocation(line: 94, column: 9, scope: !4260, inlinedAt: !4263)
!4274 = !DILocation(line: 488, column: 29, scope: !4233)
!4275 = distinct !DISubprogram(name: "allocate_in<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h24290be57d8c1c16E", scope: !1463, file: !2773, line: 169, type: !4276, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !4278)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!1463, !9, !209, !1378}
!4278 = !{!4279, !4280, !4281, !4282, !4284, !4286, !4288, !4290}
!4279 = !DILocalVariable(name: "capacity", arg: 1, scope: !4275, file: !2773, line: 169, type: !9)
!4280 = !DILocalVariable(name: "init", arg: 2, scope: !4275, file: !2773, line: 169, type: !209)
!4281 = !DILocalVariable(name: "alloc", arg: 3, scope: !4275, file: !2773, line: 169, type: !1378)
!4282 = !DILocalVariable(name: "layout", scope: !4283, file: !2773, line: 176, type: !283, align: 8)
!4283 = distinct !DILexicalBlock(scope: !4275, file: !2773, line: 176, column: 13)
!4284 = !DILocalVariable(name: "layout", scope: !4285, file: !2773, line: 177, type: !283, align: 8)
!4285 = distinct !DILexicalBlock(scope: !4275, file: !2773, line: 177, column: 17)
!4286 = !DILocalVariable(name: "result", scope: !4287, file: !2773, line: 184, type: !2346, align: 8)
!4287 = distinct !DILexicalBlock(scope: !4283, file: !2773, line: 184, column: 13)
!4288 = !DILocalVariable(name: "ptr", scope: !4289, file: !2773, line: 188, type: !2354, align: 8)
!4289 = distinct !DILexicalBlock(scope: !4287, file: !2773, line: 188, column: 13)
!4290 = !DILocalVariable(name: "ptr", scope: !4291, file: !2773, line: 189, type: !2354, align: 8)
!4291 = distinct !DILexicalBlock(scope: !4287, file: !2773, line: 189, column: 17)
!4292 = !DILocation(line: 169, column: 20, scope: !4275)
!4293 = !DILocation(line: 169, column: 37, scope: !4275)
!4294 = !DILocation(line: 169, column: 54, scope: !4275)
!4295 = !DILocation(line: 184, column: 17, scope: !4287)
!4296 = !DILocalVariable(name: "self", scope: !4297, file: !2773, line: 197, type: !1469, align: 8)
!4297 = !DILexicalBlockFile(scope: !4298, file: !2773, discriminator: 0)
!4298 = distinct !DISubprogram(name: "as_ptr<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5e753c994aa390deE", scope: !1469, file: !217, line: 330, type: !2790, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !4299)
!4299 = !{!4296}
!4300 = !DILocation(line: 197, column: 53, scope: !4297, inlinedAt: !4301)
!4301 = !DILocation(line: 197, column: 53, scope: !4289)
!4302 = !DILocation(line: 171, column: 12, scope: !4275)
!4303 = !DILocation(line: 171, column: 40, scope: !4275)
!4304 = !DILocation(line: 176, column: 32, scope: !4275)
!4305 = !DILocation(line: 172, column: 26, scope: !4275)
!4306 = !DILocation(line: 172, column: 13, scope: !4275)
!4307 = !DILocation(line: 202, column: 5, scope: !4275)
!4308 = !DILocation(line: 171, column: 9, scope: !4275)
!4309 = !DILocation(line: 202, column: 6, scope: !4275)
!4310 = !DILocation(line: 176, column: 26, scope: !4275)
!4311 = !DILocation(line: 177, column: 20, scope: !4275)
!4312 = !DILocation(line: 177, column: 20, scope: !4285)
!4313 = !DILocation(line: 177, column: 31, scope: !4285)
!4314 = !DILocation(line: 176, column: 17, scope: !4283)
!4315 = !DILocation(line: 180, column: 19, scope: !4316, inlinedAt: !4319)
!4316 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17hacc2c2c34f4c5bbfE", scope: !210, file: !2773, line: 505, type: !4144, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4317)
!4317 = !{!4318}
!4318 = !DILocalVariable(name: "alloc_size", scope: !4316, file: !2773, line: 180, type: !9, align: 8)
!4319 = !DILocation(line: 180, column: 19, scope: !4283)
!4320 = !DILocation(line: 180, column: 13, scope: !4283)
!4321 = !DILocation(line: 178, column: 27, scope: !4275)
!4322 = !DILocation(line: 184, column: 32, scope: !4283)
!4323 = !DILocation(line: 184, column: 26, scope: !4283)
!4324 = !DILocation(line: 182, column: 27, scope: !4283)
!4325 = !DILocation(line: 185, column: 45, scope: !4283)
!4326 = !DILocation(line: 186, column: 38, scope: !4283)
!4327 = !DILocation(line: 186, column: 66, scope: !4283)
!4328 = !DILocation(line: 188, column: 29, scope: !4287)
!4329 = !DILocation(line: 188, column: 23, scope: !4287)
!4330 = !DILocation(line: 185, column: 66, scope: !4283)
!4331 = !DILocation(line: 189, column: 20, scope: !4287)
!4332 = !DILocation(line: 189, column: 20, scope: !4291)
!4333 = !DILocation(line: 189, column: 28, scope: !4291)
!4334 = !DILocation(line: 188, column: 17, scope: !4289)
!4335 = !DILocalVariable(name: "self", scope: !4336, file: !2773, line: 197, type: !2354, align: 8)
!4336 = !DILexicalBlockFile(scope: !4337, file: !2773, discriminator: 0)
!4337 = distinct !DISubprogram(name: "cast<[u8], [i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hf2ef22bdfc874b0bE", scope: !2354, file: !217, line: 453, type: !4338, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4341, retainedNodes: !4340)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{!1469, !2354}
!4340 = !{!4335}
!4341 = !{!228, !4342}
!4342 = !DITemplateTypeParameter(name: "U", type: !637)
!4343 = !DILocation(line: 197, column: 53, scope: !4336, inlinedAt: !4301)
!4344 = !DILocalVariable(name: "self", scope: !4345, file: !2773, line: 197, type: !2354, align: 8)
!4345 = !DILexicalBlockFile(scope: !4346, file: !2773, discriminator: 0)
!4346 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7d08438adddc4ef1E", scope: !2354, file: !217, line: 330, type: !3916, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !4347)
!4347 = !{!4344}
!4348 = !DILocation(line: 197, column: 53, scope: !4345, inlinedAt: !4349)
!4349 = !DILocation(line: 455, column: 41, scope: !4337, inlinedAt: !4301)
!4350 = !DILocalVariable(name: "ptr", scope: !4351, file: !2773, line: 197, type: !2746, align: 8)
!4351 = !DILexicalBlockFile(scope: !4352, file: !2773, discriminator: 0)
!4352 = distinct !DISubprogram(name: "new_unchecked<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hda689c01cd3285b7E", scope: !1469, file: !217, line: 196, type: !4353, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !4355)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!1469, !2746}
!4355 = !{!4350}
!4356 = !DILocation(line: 197, column: 53, scope: !4351, inlinedAt: !4357)
!4357 = !DILocation(line: 455, column: 18, scope: !4337, inlinedAt: !4301)
!4358 = !DILocalVariable(name: "ptr", scope: !4359, file: !2773, line: 197, type: !2746, align: 8)
!4359 = !DILexicalBlockFile(scope: !4360, file: !2773, discriminator: 0)
!4360 = distinct !DISubprogram(name: "new_unchecked<[i32; 4]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5779a225a6491703E", scope: !1466, file: !243, line: 85, type: !4361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !4363)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{!1466, !2746}
!4363 = !{!4358}
!4364 = !DILocation(line: 197, column: 31, scope: !4359, inlinedAt: !4365)
!4365 = !DILocation(line: 197, column: 31, scope: !4289)
!4366 = !DILocalVariable(name: "ptr", scope: !4367, file: !2773, line: 197, type: !2746, align: 8)
!4367 = !DILexicalBlockFile(scope: !4368, file: !2773, discriminator: 0)
!4368 = distinct !DISubprogram(name: "new_unchecked<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hda689c01cd3285b7E", scope: !1469, file: !217, line: 196, type: !4353, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !4369)
!4369 = !{!4366}
!4370 = !DILocation(line: 197, column: 31, scope: !4367, inlinedAt: !4371)
!4371 = !DILocation(line: 87, column: 36, scope: !4360, inlinedAt: !4365)
!4372 = !DILocation(line: 196, column: 13, scope: !4289)
!4373 = !DILocation(line: 190, column: 27, scope: !4287)
!4374 = !DILocation(line: 169, column: 5, scope: !4275)
!4375 = distinct !DISubprogram(name: "allocate_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17he28e0d938b333ed2E", scope: !1368, file: !2773, line: 169, type: !4376, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !4378)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!1368, !9, !209, !1378}
!4378 = !{!4379, !4380, !4381, !4382, !4384, !4386, !4388, !4390}
!4379 = !DILocalVariable(name: "capacity", arg: 1, scope: !4375, file: !2773, line: 169, type: !9)
!4380 = !DILocalVariable(name: "init", arg: 2, scope: !4375, file: !2773, line: 169, type: !209)
!4381 = !DILocalVariable(name: "alloc", arg: 3, scope: !4375, file: !2773, line: 169, type: !1378)
!4382 = !DILocalVariable(name: "layout", scope: !4383, file: !2773, line: 176, type: !283, align: 8)
!4383 = distinct !DILexicalBlock(scope: !4375, file: !2773, line: 176, column: 13)
!4384 = !DILocalVariable(name: "layout", scope: !4385, file: !2773, line: 177, type: !283, align: 8)
!4385 = distinct !DILexicalBlock(scope: !4375, file: !2773, line: 177, column: 17)
!4386 = !DILocalVariable(name: "result", scope: !4387, file: !2773, line: 184, type: !2346, align: 8)
!4387 = distinct !DILexicalBlock(scope: !4383, file: !2773, line: 184, column: 13)
!4388 = !DILocalVariable(name: "ptr", scope: !4389, file: !2773, line: 188, type: !2354, align: 8)
!4389 = distinct !DILexicalBlock(scope: !4387, file: !2773, line: 188, column: 13)
!4390 = !DILocalVariable(name: "ptr", scope: !4391, file: !2773, line: 189, type: !2354, align: 8)
!4391 = distinct !DILexicalBlock(scope: !4387, file: !2773, line: 189, column: 17)
!4392 = !DILocation(line: 169, column: 20, scope: !4375)
!4393 = !DILocation(line: 169, column: 37, scope: !4375)
!4394 = !DILocation(line: 169, column: 54, scope: !4375)
!4395 = !DILocation(line: 184, column: 17, scope: !4387)
!4396 = !DILocalVariable(name: "self", scope: !4397, file: !2773, line: 197, type: !619, align: 8)
!4397 = !DILexicalBlockFile(scope: !4398, file: !2773, discriminator: 0)
!4398 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfff8edc501d3c834E", scope: !619, file: !217, line: 330, type: !2858, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !4399)
!4399 = !{!4396}
!4400 = !DILocation(line: 197, column: 53, scope: !4397, inlinedAt: !4401)
!4401 = !DILocation(line: 197, column: 53, scope: !4389)
!4402 = !DILocation(line: 171, column: 12, scope: !4375)
!4403 = !DILocation(line: 171, column: 40, scope: !4375)
!4404 = !DILocation(line: 176, column: 32, scope: !4375)
!4405 = !DILocation(line: 172, column: 26, scope: !4375)
!4406 = !DILocation(line: 172, column: 13, scope: !4375)
!4407 = !DILocation(line: 202, column: 5, scope: !4375)
!4408 = !DILocation(line: 171, column: 9, scope: !4375)
!4409 = !DILocation(line: 202, column: 6, scope: !4375)
!4410 = !DILocation(line: 176, column: 26, scope: !4375)
!4411 = !DILocation(line: 177, column: 20, scope: !4375)
!4412 = !DILocation(line: 177, column: 20, scope: !4385)
!4413 = !DILocation(line: 177, column: 31, scope: !4385)
!4414 = !DILocation(line: 176, column: 17, scope: !4383)
!4415 = !DILocation(line: 180, column: 19, scope: !4416, inlinedAt: !4419)
!4416 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17hacc2c2c34f4c5bbfE", scope: !210, file: !2773, line: 505, type: !4144, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4417)
!4417 = !{!4418}
!4418 = !DILocalVariable(name: "alloc_size", scope: !4416, file: !2773, line: 180, type: !9, align: 8)
!4419 = !DILocation(line: 180, column: 19, scope: !4383)
!4420 = !DILocation(line: 180, column: 13, scope: !4383)
!4421 = !DILocation(line: 178, column: 27, scope: !4375)
!4422 = !DILocation(line: 184, column: 32, scope: !4383)
!4423 = !DILocation(line: 184, column: 26, scope: !4383)
!4424 = !DILocation(line: 182, column: 27, scope: !4383)
!4425 = !DILocation(line: 185, column: 45, scope: !4383)
!4426 = !DILocation(line: 186, column: 38, scope: !4383)
!4427 = !DILocation(line: 186, column: 66, scope: !4383)
!4428 = !DILocation(line: 188, column: 29, scope: !4387)
!4429 = !DILocation(line: 188, column: 23, scope: !4387)
!4430 = !DILocation(line: 185, column: 66, scope: !4383)
!4431 = !DILocation(line: 189, column: 20, scope: !4387)
!4432 = !DILocation(line: 189, column: 20, scope: !4391)
!4433 = !DILocation(line: 189, column: 28, scope: !4391)
!4434 = !DILocation(line: 188, column: 17, scope: !4389)
!4435 = !DILocalVariable(name: "self", scope: !4436, file: !2773, line: 197, type: !2354, align: 8)
!4436 = !DILexicalBlockFile(scope: !4437, file: !2773, discriminator: 0)
!4437 = distinct !DISubprogram(name: "cast<[u8], i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h64ffe5aac1b2bf67E", scope: !2354, file: !217, line: 453, type: !4438, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4441, retainedNodes: !4440)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!619, !2354}
!4440 = !{!4435}
!4441 = !{!228, !2531}
!4442 = !DILocation(line: 197, column: 53, scope: !4436, inlinedAt: !4401)
!4443 = !DILocalVariable(name: "self", scope: !4444, file: !2773, line: 197, type: !2354, align: 8)
!4444 = !DILexicalBlockFile(scope: !4445, file: !2773, discriminator: 0)
!4445 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7d08438adddc4ef1E", scope: !2354, file: !217, line: 330, type: !3916, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !4446)
!4446 = !{!4443}
!4447 = !DILocation(line: 197, column: 53, scope: !4444, inlinedAt: !4448)
!4448 = !DILocation(line: 455, column: 41, scope: !4437, inlinedAt: !4401)
!4449 = !DILocalVariable(name: "ptr", scope: !4450, file: !2773, line: 197, type: !1015, align: 8)
!4450 = !DILexicalBlockFile(scope: !4451, file: !2773, discriminator: 0)
!4451 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0e5e687d23c7ccf1E", scope: !619, file: !217, line: 196, type: !2293, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !4452)
!4452 = !{!4449}
!4453 = !DILocation(line: 197, column: 53, scope: !4450, inlinedAt: !4454)
!4454 = !DILocation(line: 455, column: 18, scope: !4437, inlinedAt: !4401)
!4455 = !DILocalVariable(name: "ptr", scope: !4456, file: !2773, line: 197, type: !1015, align: 8)
!4456 = !DILexicalBlockFile(scope: !4457, file: !2773, discriminator: 0)
!4457 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h9c00466ed7a33ff0E", scope: !1371, file: !243, line: 85, type: !4458, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !4460)
!4458 = !DISubroutineType(types: !4459)
!4459 = !{!1371, !1015}
!4460 = !{!4455}
!4461 = !DILocation(line: 197, column: 31, scope: !4456, inlinedAt: !4462)
!4462 = !DILocation(line: 197, column: 31, scope: !4389)
!4463 = !DILocalVariable(name: "ptr", scope: !4464, file: !2773, line: 197, type: !1015, align: 8)
!4464 = !DILexicalBlockFile(scope: !4465, file: !2773, discriminator: 0)
!4465 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0e5e687d23c7ccf1E", scope: !619, file: !217, line: 196, type: !2293, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !4466)
!4466 = !{!4463}
!4467 = !DILocation(line: 197, column: 31, scope: !4464, inlinedAt: !4468)
!4468 = !DILocation(line: 87, column: 36, scope: !4457, inlinedAt: !4462)
!4469 = !DILocation(line: 196, column: 13, scope: !4389)
!4470 = !DILocation(line: 190, column: 27, scope: !4387)
!4471 = !DILocation(line: 169, column: 5, scope: !4375)
!4472 = distinct !DISubprogram(name: "needs_to_grow<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17h0fd81797fb688b00E", scope: !1463, file: !2773, line: 360, type: !4473, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !4475)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{!710, !2776, !9, !9}
!4475 = !{!4476, !4477, !4478}
!4476 = !DILocalVariable(name: "self", arg: 1, scope: !4472, file: !2773, line: 360, type: !2776)
!4477 = !DILocalVariable(name: "len", arg: 2, scope: !4472, file: !2773, line: 360, type: !9)
!4478 = !DILocalVariable(name: "additional", arg: 3, scope: !4472, file: !2773, line: 360, type: !9)
!4479 = !DILocation(line: 360, column: 22, scope: !4472)
!4480 = !DILocation(line: 360, column: 29, scope: !4472)
!4481 = !DILocation(line: 360, column: 41, scope: !4472)
!4482 = !DILocalVariable(name: "self", scope: !4483, file: !2773, line: 361, type: !9, align: 8)
!4483 = !DILexicalBlockFile(scope: !4484, file: !2773, discriminator: 0)
!4484 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !660, file: !659, line: 1231, type: !648, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4485)
!4485 = !{!4482, !4486}
!4486 = !DILocalVariable(name: "rhs", scope: !4483, file: !2773, line: 361, type: !9, align: 8)
!4487 = !DILocation(line: 361, column: 22, scope: !4483, inlinedAt: !4488)
!4488 = !DILocation(line: 361, column: 22, scope: !4472)
!4489 = !DILocalVariable(name: "self", scope: !4490, file: !2773, line: 361, type: !2776, align: 8)
!4490 = distinct !DISubprogram(name: "capacity<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h648b42381fcf84ddE", scope: !1463, file: !2773, line: 231, type: !4491, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !4493)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{!9, !2776}
!4493 = !{!4489}
!4494 = !DILocation(line: 361, column: 22, scope: !4490, inlinedAt: !4488)
!4495 = !DILocation(line: 361, column: 51, scope: !4472)
!4496 = !DILocation(line: 361, column: 9, scope: !4472)
!4497 = !DILocation(line: 362, column: 6, scope: !4472)
!4498 = distinct !DISubprogram(name: "needs_to_grow<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17hb3ddb38702e268e3E", scope: !1368, file: !2773, line: 360, type: !4499, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !4501)
!4499 = !DISubroutineType(types: !4500)
!4500 = !{!710, !2844, !9, !9}
!4501 = !{!4502, !4503, !4504}
!4502 = !DILocalVariable(name: "self", arg: 1, scope: !4498, file: !2773, line: 360, type: !2844)
!4503 = !DILocalVariable(name: "len", arg: 2, scope: !4498, file: !2773, line: 360, type: !9)
!4504 = !DILocalVariable(name: "additional", arg: 3, scope: !4498, file: !2773, line: 360, type: !9)
!4505 = !DILocation(line: 360, column: 22, scope: !4498)
!4506 = !DILocation(line: 360, column: 29, scope: !4498)
!4507 = !DILocation(line: 360, column: 41, scope: !4498)
!4508 = !DILocalVariable(name: "self", scope: !4509, file: !2773, line: 361, type: !9, align: 8)
!4509 = !DILexicalBlockFile(scope: !4510, file: !2773, discriminator: 0)
!4510 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h5e8f57e42e99a91fE", scope: !660, file: !659, line: 1231, type: !648, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4511)
!4511 = !{!4508, !4512}
!4512 = !DILocalVariable(name: "rhs", scope: !4509, file: !2773, line: 361, type: !9, align: 8)
!4513 = !DILocation(line: 361, column: 22, scope: !4509, inlinedAt: !4514)
!4514 = !DILocation(line: 361, column: 22, scope: !4498)
!4515 = !DILocalVariable(name: "self", scope: !4516, file: !2773, line: 361, type: !2844, align: 8)
!4516 = distinct !DISubprogram(name: "capacity<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h42871939cfff3e57E", scope: !1368, file: !2773, line: 231, type: !4517, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !4519)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!9, !2844}
!4519 = !{!4515}
!4520 = !DILocation(line: 361, column: 22, scope: !4516, inlinedAt: !4514)
!4521 = !DILocation(line: 361, column: 51, scope: !4498)
!4522 = !DILocation(line: 361, column: 9, scope: !4498)
!4523 = !DILocation(line: 362, column: 6, scope: !4498)
!4524 = distinct !DISubprogram(name: "current_memory<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h8e4257b64f7dd325E", scope: !1368, file: !2773, line: 240, type: !4525, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !4527)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!3944, !2844}
!4527 = !{!4528, !4529}
!4528 = !DILocalVariable(name: "self", arg: 1, scope: !4524, file: !2773, line: 240, type: !2844)
!4529 = !DILocalVariable(name: "layout", scope: !4530, file: !2773, line: 247, type: !283, align: 8)
!4530 = distinct !DILexicalBlock(scope: !4524, file: !2773, line: 247, column: 17)
!4531 = !DILocation(line: 240, column: 23, scope: !4524)
!4532 = !DILocalVariable(name: "self", scope: !4533, file: !2773, line: 247, type: !1628, align: 8)
!4533 = !DILexicalBlockFile(scope: !4534, file: !2773, discriminator: 0)
!4534 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h65c27538969f616dE", scope: !1628, file: !1729, line: 1520, type: !4535, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1636, retainedNodes: !4537)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!283, !1628, !973}
!4537 = !{!4532, !4538}
!4538 = !DILocalVariable(name: "t", scope: !4539, file: !2773, line: 247, type: !283, align: 8)
!4539 = !DILexicalBlockFile(scope: !4540, file: !2773, discriminator: 0)
!4540 = distinct !DILexicalBlock(scope: !4534, file: !1729, line: 1523, column: 13)
!4541 = !DILocation(line: 247, column: 30, scope: !4533, inlinedAt: !4542)
!4542 = !DILocation(line: 247, column: 30, scope: !4524)
!4543 = !DILocalVariable(name: "pointer", scope: !4544, file: !2773, line: 248, type: !223, align: 8)
!4544 = !DILexicalBlockFile(scope: !4545, file: !2773, discriminator: 0)
!4545 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h8ff2d56a0eda2c24E", scope: !4546, file: !243, line: 190, type: !4547, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !4549)
!4546 = !DINamespace(name: "{impl#11}", scope: !230)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{!229, !223}
!4549 = !{!4543}
!4550 = !DILocation(line: 248, column: 23, scope: !4544, inlinedAt: !4551)
!4551 = !DILocation(line: 137, column: 9, scope: !4552, inlinedAt: !4560)
!4552 = distinct !DISubprogram(name: "cast<i32, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h23da74a81bcc2c69E", scope: !1371, file: !243, line: 136, type: !4553, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4558, retainedNodes: !4555)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{!229, !1371}
!4555 = !{!4556}
!4556 = !DILocalVariable(name: "self", scope: !4557, file: !2773, line: 248, type: !1371, align: 8)
!4557 = !DILexicalBlockFile(scope: !4552, file: !2773, discriminator: 0)
!4558 = !{!467, !4559}
!4559 = !DITemplateTypeParameter(name: "U", type: !185)
!4560 = !DILocation(line: 248, column: 23, scope: !4530)
!4561 = !DILocation(line: 241, column: 12, scope: !4524)
!4562 = !DILocation(line: 241, column: 40, scope: !4524)
!4563 = !DILocation(line: 247, column: 49, scope: !4524)
!4564 = !DILocation(line: 242, column: 13, scope: !4524)
!4565 = !DILocation(line: 241, column: 9, scope: !4524)
!4566 = !DILocation(line: 251, column: 6, scope: !4524)
!4567 = !DILocation(line: 247, column: 30, scope: !4539, inlinedAt: !4542)
!4568 = !DILocation(line: 247, column: 21, scope: !4530)
!4569 = !DILocation(line: 248, column: 23, scope: !4557, inlinedAt: !4560)
!4570 = !DILocalVariable(name: "self", scope: !4571, file: !2773, line: 248, type: !619, align: 8)
!4571 = !DILexicalBlockFile(scope: !4572, file: !2773, discriminator: 0)
!4572 = distinct !DISubprogram(name: "cast<i32, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha361c65f546c56e5E", scope: !619, file: !217, line: 453, type: !4573, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4558, retainedNodes: !4575)
!4573 = !DISubroutineType(types: !4574)
!4574 = !{!223, !619}
!4575 = !{!4570}
!4576 = !DILocation(line: 248, column: 23, scope: !4571, inlinedAt: !4577)
!4577 = !DILocation(line: 137, column: 22, scope: !4552, inlinedAt: !4560)
!4578 = !DILocalVariable(name: "self", scope: !4579, file: !2773, line: 248, type: !619, align: 8)
!4579 = !DILexicalBlockFile(scope: !4580, file: !2773, discriminator: 0)
!4580 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfff8edc501d3c834E", scope: !619, file: !217, line: 330, type: !2858, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !4581)
!4581 = !{!4578}
!4582 = !DILocation(line: 248, column: 23, scope: !4579, inlinedAt: !4583)
!4583 = !DILocation(line: 455, column: 41, scope: !4572, inlinedAt: !4577)
!4584 = !DILocalVariable(name: "ptr", scope: !4585, file: !2773, line: 248, type: !246, align: 8)
!4585 = !DILexicalBlockFile(scope: !4586, file: !2773, discriminator: 0)
!4586 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1676b77ae4055e3cE", scope: !223, file: !217, line: 196, type: !258, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !4587)
!4587 = !{!4584}
!4588 = !DILocation(line: 248, column: 23, scope: !4585, inlinedAt: !4589)
!4589 = !DILocation(line: 455, column: 18, scope: !4572, inlinedAt: !4577)
!4590 = !DILocation(line: 247, column: 30, scope: !4591, inlinedAt: !4593)
!4591 = !DILexicalBlockFile(scope: !4592, file: !2773, discriminator: 0)
!4592 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17he1f312f356a13dedE", scope: !319, file: !318, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !23)
!4593 = !DILocation(line: 1525, column: 32, scope: !4534, inlinedAt: !4542)
!4594 = !DILocation(line: 248, column: 22, scope: !4530)
!4595 = !DILocation(line: 248, column: 17, scope: !4530)
!4596 = distinct !DISubprogram(name: "current_memory<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17he785deccb54c364eE", scope: !1463, file: !2773, line: 240, type: !4597, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !4599)
!4597 = !DISubroutineType(types: !4598)
!4598 = !{!3944, !2776}
!4599 = !{!4600, !4601}
!4600 = !DILocalVariable(name: "self", arg: 1, scope: !4596, file: !2773, line: 240, type: !2776)
!4601 = !DILocalVariable(name: "layout", scope: !4602, file: !2773, line: 247, type: !283, align: 8)
!4602 = distinct !DILexicalBlock(scope: !4596, file: !2773, line: 247, column: 17)
!4603 = !DILocation(line: 240, column: 23, scope: !4596)
!4604 = !DILocalVariable(name: "self", scope: !4605, file: !2773, line: 247, type: !1628, align: 8)
!4605 = !DILexicalBlockFile(scope: !4606, file: !2773, discriminator: 0)
!4606 = distinct !DISubprogram(name: "unwrap_unchecked<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h65c27538969f616dE", scope: !1628, file: !1729, line: 1520, type: !4535, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1636, retainedNodes: !4607)
!4607 = !{!4604, !4608}
!4608 = !DILocalVariable(name: "t", scope: !4609, file: !2773, line: 247, type: !283, align: 8)
!4609 = !DILexicalBlockFile(scope: !4610, file: !2773, discriminator: 0)
!4610 = distinct !DILexicalBlock(scope: !4606, file: !1729, line: 1523, column: 13)
!4611 = !DILocation(line: 247, column: 30, scope: !4605, inlinedAt: !4612)
!4612 = !DILocation(line: 247, column: 30, scope: !4596)
!4613 = !DILocalVariable(name: "pointer", scope: !4614, file: !2773, line: 248, type: !223, align: 8)
!4614 = !DILexicalBlockFile(scope: !4615, file: !2773, discriminator: 0)
!4615 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h8ff2d56a0eda2c24E", scope: !4546, file: !243, line: 190, type: !4547, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !4616)
!4616 = !{!4613}
!4617 = !DILocation(line: 248, column: 23, scope: !4614, inlinedAt: !4618)
!4618 = !DILocation(line: 137, column: 9, scope: !4619, inlinedAt: !4626)
!4619 = distinct !DISubprogram(name: "cast<[i32; 4], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h557964e1752c5c33E", scope: !1466, file: !243, line: 136, type: !4620, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4625, retainedNodes: !4622)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!229, !1466}
!4622 = !{!4623}
!4623 = !DILocalVariable(name: "self", scope: !4624, file: !2773, line: 248, type: !1466, align: 8)
!4624 = !DILexicalBlockFile(scope: !4619, file: !2773, discriminator: 0)
!4625 = !{!1474, !4559}
!4626 = !DILocation(line: 248, column: 23, scope: !4602)
!4627 = !DILocation(line: 241, column: 12, scope: !4596)
!4628 = !DILocation(line: 241, column: 40, scope: !4596)
!4629 = !DILocation(line: 247, column: 49, scope: !4596)
!4630 = !DILocation(line: 242, column: 13, scope: !4596)
!4631 = !DILocation(line: 241, column: 9, scope: !4596)
!4632 = !DILocation(line: 251, column: 6, scope: !4596)
!4633 = !DILocation(line: 247, column: 30, scope: !4609, inlinedAt: !4612)
!4634 = !DILocation(line: 247, column: 21, scope: !4602)
!4635 = !DILocation(line: 248, column: 23, scope: !4624, inlinedAt: !4626)
!4636 = !DILocalVariable(name: "self", scope: !4637, file: !2773, line: 248, type: !1469, align: 8)
!4637 = !DILexicalBlockFile(scope: !4638, file: !2773, discriminator: 0)
!4638 = distinct !DISubprogram(name: "cast<[i32; 4], u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hbe9d7255d2cde8b0E", scope: !1469, file: !217, line: 453, type: !4639, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4625, retainedNodes: !4641)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!223, !1469}
!4641 = !{!4636}
!4642 = !DILocation(line: 248, column: 23, scope: !4637, inlinedAt: !4643)
!4643 = !DILocation(line: 137, column: 22, scope: !4619, inlinedAt: !4626)
!4644 = !DILocalVariable(name: "self", scope: !4645, file: !2773, line: 248, type: !1469, align: 8)
!4645 = !DILexicalBlockFile(scope: !4646, file: !2773, discriminator: 0)
!4646 = distinct !DISubprogram(name: "as_ptr<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5e753c994aa390deE", scope: !1469, file: !217, line: 330, type: !2790, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !4647)
!4647 = !{!4644}
!4648 = !DILocation(line: 248, column: 23, scope: !4645, inlinedAt: !4649)
!4649 = !DILocation(line: 455, column: 41, scope: !4638, inlinedAt: !4643)
!4650 = !DILocalVariable(name: "ptr", scope: !4651, file: !2773, line: 248, type: !246, align: 8)
!4651 = !DILexicalBlockFile(scope: !4652, file: !2773, discriminator: 0)
!4652 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h1676b77ae4055e3cE", scope: !223, file: !217, line: 196, type: !258, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !4653)
!4653 = !{!4650}
!4654 = !DILocation(line: 248, column: 23, scope: !4651, inlinedAt: !4655)
!4655 = !DILocation(line: 455, column: 18, scope: !4638, inlinedAt: !4643)
!4656 = !DILocation(line: 247, column: 30, scope: !4657, inlinedAt: !4659)
!4657 = !DILexicalBlockFile(scope: !4658, file: !2773, discriminator: 0)
!4658 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17he1f312f356a13dedE", scope: !319, file: !318, line: 100, type: !21, scopeLine: 100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !23)
!4659 = !DILocation(line: 1525, column: 32, scope: !4606, inlinedAt: !4612)
!4660 = !DILocation(line: 248, column: 22, scope: !4602)
!4661 = !DILocation(line: 248, column: 17, scope: !4602)
!4662 = distinct !DISubprogram(name: "grow_amortized<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hc7bf6c415bcd1c40E", scope: !1463, file: !2773, line: 379, type: !4663, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !4666)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!2416, !4665, !9, !9}
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<[i32; 4], alloc::alloc::Global>", baseType: !1463, size: 64, align: 64, dwarfAddressSpace: 0)
!4666 = !{!4667, !4668, !4669, !4670, !4672, !4674, !4676, !4678, !4680, !4682, !4684, !4686}
!4667 = !DILocalVariable(name: "self", arg: 1, scope: !4662, file: !2773, line: 379, type: !4665)
!4668 = !DILocalVariable(name: "len", arg: 2, scope: !4662, file: !2773, line: 379, type: !9)
!4669 = !DILocalVariable(name: "additional", arg: 3, scope: !4662, file: !2773, line: 379, type: !9)
!4670 = !DILocalVariable(name: "required_cap", scope: !4671, file: !2773, line: 390, type: !9, align: 8)
!4671 = distinct !DILexicalBlock(scope: !4662, file: !2773, line: 390, column: 9)
!4672 = !DILocalVariable(name: "residual", scope: !4673, file: !2773, line: 390, type: !3970, align: 8)
!4673 = distinct !DILexicalBlock(scope: !4662, file: !2773, line: 390, column: 79)
!4674 = !DILocalVariable(name: "val", scope: !4675, file: !2773, line: 390, type: !9, align: 8)
!4675 = distinct !DILexicalBlock(scope: !4662, file: !2773, line: 390, column: 28)
!4676 = !DILocalVariable(name: "cap", scope: !4677, file: !2773, line: 394, type: !9, align: 8)
!4677 = distinct !DILexicalBlock(scope: !4671, file: !2773, line: 394, column: 9)
!4678 = !DILocalVariable(name: "cap", scope: !4679, file: !2773, line: 395, type: !9, align: 8)
!4679 = distinct !DILexicalBlock(scope: !4677, file: !2773, line: 395, column: 9)
!4680 = !DILocalVariable(name: "new_layout", scope: !4681, file: !2773, line: 397, type: !1628, align: 8)
!4681 = distinct !DILexicalBlock(scope: !4679, file: !2773, line: 397, column: 9)
!4682 = !DILocalVariable(name: "ptr", scope: !4683, file: !2773, line: 400, type: !2354, align: 8)
!4683 = distinct !DILexicalBlock(scope: !4681, file: !2773, line: 400, column: 9)
!4684 = !DILocalVariable(name: "residual", scope: !4685, file: !2773, line: 400, type: !3987, align: 8)
!4685 = distinct !DILexicalBlock(scope: !4681, file: !2773, line: 400, column: 82)
!4686 = !DILocalVariable(name: "val", scope: !4687, file: !2773, line: 400, type: !2354, align: 8)
!4687 = distinct !DILexicalBlock(scope: !4681, file: !2773, line: 400, column: 19)
!4688 = !DILocation(line: 379, column: 23, scope: !4662)
!4689 = !DILocation(line: 379, column: 34, scope: !4662)
!4690 = !DILocation(line: 379, column: 46, scope: !4662)
!4691 = !DILocalVariable(name: "self", scope: !4692, file: !2773, line: 390, type: !4710, align: 8)
!4692 = !DILexicalBlockFile(scope: !4693, file: !2773, discriminator: 0)
!4693 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h0e02a576ad2dc463E", scope: !1730, file: !1729, line: 2117, type: !4694, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4718, retainedNodes: !4724)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{!4696, !4710}
!4696 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !1734, file: !2, size: 192, align: 64, elements: !4697, templateParams: !23, identifier: "aaa47d4c01b9e814e1128564379fb1ed")
!4697 = !{!4698}
!4698 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4696, file: !2, size: 192, align: 64, elements: !4699, templateParams: !23, identifier: "52bc498f97dcf0aebe4be722096289fa", discriminator: !4709)
!4699 = !{!4700, !4705}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4698, file: !2, baseType: !4701, size: 192, align: 64, extraData: i64 0)
!4701 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4696, file: !2, size: 192, align: 64, elements: !4702, templateParams: !4704, identifier: "aa7cd1170a8c6991d015bac63ac068a0")
!4702 = !{!4703}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4701, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4704 = !{!4033, !1744}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4698, file: !2, baseType: !4706, size: 192, align: 64, extraData: i64 1)
!4706 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4696, file: !2, size: 192, align: 64, elements: !4707, templateParams: !4704, identifier: "364459b0de7a7982990d34cdf2f986eb")
!4707 = !{!4708}
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4706, file: !2, baseType: !3970, size: 128, align: 64, offset: 64)
!4709 = !DIDerivedType(tag: DW_TAG_member, scope: !4696, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!4710 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !398, file: !2, size: 192, align: 64, elements: !4711, templateParams: !23, identifier: "3631237889770fa7267d5501216770d")
!4711 = !{!4712}
!4712 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4710, file: !2, size: 192, align: 64, elements: !4713, templateParams: !23, identifier: "1d1f45ee59d9f1cfc391058ed79e0cae", discriminator: !4723)
!4713 = !{!4714, !4719}
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4712, file: !2, baseType: !4715, size: 192, align: 64, extraData: i64 0)
!4715 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4710, file: !2, size: 192, align: 64, elements: !4716, templateParams: !4718, identifier: "e350c9849d9dffdf1ffb40e48a20f918")
!4716 = !{!4717}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4715, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!4718 = !{!432, !2313}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4712, file: !2, baseType: !4720, size: 192, align: 64, extraData: i64 1)
!4720 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4710, file: !2, size: 192, align: 64, elements: !4721, templateParams: !4718, identifier: "4805f2b2529d263fd0f1d3d0e43e54f8")
!4721 = !{!4722}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4720, file: !2, baseType: !273, size: 128, align: 64, offset: 64)
!4723 = !DIDerivedType(tag: DW_TAG_member, scope: !4710, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!4724 = !{!4691, !4725, !4728}
!4725 = !DILocalVariable(name: "v", scope: !4726, file: !2773, line: 390, type: !9, align: 8)
!4726 = !DILexicalBlockFile(scope: !4727, file: !2773, discriminator: 0)
!4727 = distinct !DILexicalBlock(scope: !4693, file: !1729, line: 2119, column: 13)
!4728 = !DILocalVariable(name: "e", scope: !4729, file: !2773, line: 390, type: !273, align: 8)
!4729 = !DILexicalBlockFile(scope: !4730, file: !2773, discriminator: 0)
!4730 = distinct !DILexicalBlock(scope: !4693, file: !1729, line: 2120, column: 13)
!4731 = !DILocation(line: 390, column: 28, scope: !4692, inlinedAt: !4732)
!4732 = !DILocation(line: 390, column: 28, scope: !4662)
!4733 = !DILocalVariable(name: "self", scope: !4734, file: !2773, line: 390, type: !424, align: 8)
!4734 = !DILexicalBlockFile(scope: !4735, file: !2773, discriminator: 0)
!4735 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h4e18c564e4da173aE", scope: !424, file: !1776, line: 1051, type: !4736, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4718, retainedNodes: !4738)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!4710, !424, !273}
!4738 = !{!4733, !4739, !4740}
!4739 = !DILocalVariable(name: "err", scope: !4734, file: !2773, line: 390, type: !273, align: 8)
!4740 = !DILocalVariable(name: "v", scope: !4741, file: !2773, line: 390, type: !9, align: 8)
!4741 = !DILexicalBlockFile(scope: !4742, file: !2773, discriminator: 0)
!4742 = distinct !DILexicalBlock(scope: !4735, file: !1776, line: 1056, column: 13)
!4743 = !DILocation(line: 390, column: 28, scope: !4734, inlinedAt: !4732)
!4744 = !DILocalVariable(name: "residual", scope: !4745, file: !2773, line: 390, type: !3970, align: 8)
!4745 = !DILexicalBlockFile(scope: !4746, file: !2773, discriminator: 0)
!4746 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd5bfd247b27ca1a9E", scope: !1789, file: !1729, line: 2132, type: !4747, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4753, retainedNodes: !4749)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{!2416, !3970, !973}
!4749 = !{!4744, !4750}
!4750 = !DILocalVariable(name: "e", scope: !4751, file: !2773, line: 390, type: !273, align: 8)
!4751 = !DILexicalBlockFile(scope: !4752, file: !2773, discriminator: 0)
!4752 = distinct !DILexicalBlock(scope: !4746, file: !1729, line: 2134, column: 13)
!4753 = !{!312, !2313, !2399}
!4754 = !DILocation(line: 390, column: 28, scope: !4745, inlinedAt: !4755)
!4755 = !DILocation(line: 390, column: 28, scope: !4673)
!4756 = !DILocalVariable(name: "self", scope: !4757, file: !2773, line: 400, type: !2372, align: 8)
!4757 = !DILexicalBlockFile(scope: !4758, file: !2773, discriminator: 0)
!4758 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hefb772efa2e14a1aE", scope: !1730, file: !1729, line: 2117, type: !4759, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2380, retainedNodes: !4775)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{!4761, !2372}
!4761 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1734, file: !2, size: 192, align: 64, elements: !4762, templateParams: !23, identifier: "79c6e5125639b127cfa81db755c4cffd")
!4762 = !{!4763}
!4763 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4761, file: !2, size: 192, align: 64, elements: !4764, templateParams: !23, identifier: "bdca6637e968c25e4fe4c2dfef1c199f", discriminator: !4774)
!4764 = !{!4765, !4770}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !4763, file: !2, baseType: !4766, size: 192, align: 64, extraData: i64 0)
!4766 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !4761, file: !2, size: 192, align: 64, elements: !4767, templateParams: !4769, identifier: "15ba5a416f94883524aa415e9e484c18")
!4767 = !{!4768}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4766, file: !2, baseType: !2354, size: 128, align: 64, offset: 64)
!4769 = !{!4075, !3612}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !4763, file: !2, baseType: !4771, size: 192, align: 64, extraData: i64 1)
!4771 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !4761, file: !2, size: 192, align: 64, elements: !4772, templateParams: !4769, identifier: "e100a24ff060842f7e06542fb969c57c")
!4772 = !{!4773}
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4771, file: !2, baseType: !3987, size: 128, align: 64, offset: 64)
!4774 = !DIDerivedType(tag: DW_TAG_member, scope: !4761, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!4775 = !{!4756, !4776, !4779}
!4776 = !DILocalVariable(name: "v", scope: !4777, file: !2773, line: 400, type: !2354, align: 8)
!4777 = !DILexicalBlockFile(scope: !4778, file: !2773, discriminator: 0)
!4778 = distinct !DILexicalBlock(scope: !4758, file: !1729, line: 2119, column: 13)
!4779 = !DILocalVariable(name: "e", scope: !4780, file: !2773, line: 400, type: !270, align: 8)
!4780 = !DILexicalBlockFile(scope: !4781, file: !2773, discriminator: 0)
!4781 = distinct !DILexicalBlock(scope: !4758, file: !1729, line: 2120, column: 13)
!4782 = !DILocation(line: 400, column: 19, scope: !4757, inlinedAt: !4783)
!4783 = !DILocation(line: 400, column: 19, scope: !4681)
!4784 = !DILocalVariable(name: "residual", scope: !4785, file: !2773, line: 400, type: !3987, align: 8)
!4785 = !DILexicalBlockFile(scope: !4786, file: !2773, discriminator: 0)
!4786 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h9e639b3785c94dc5E", scope: !1789, file: !1729, line: 2132, type: !4787, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4793, retainedNodes: !4789)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!2416, !3987, !973}
!4789 = !{!4784, !4790}
!4790 = !DILocalVariable(name: "e", scope: !4791, file: !2773, line: 400, type: !270, align: 8)
!4791 = !DILexicalBlockFile(scope: !4792, file: !2773, discriminator: 0)
!4792 = distinct !DILexicalBlock(scope: !4786, file: !1729, line: 2134, column: 13)
!4793 = !{!312, !2381, !2399}
!4794 = !DILocation(line: 400, column: 19, scope: !4785, inlinedAt: !4795)
!4795 = !DILocation(line: 400, column: 19, scope: !4685)
!4796 = !DILocation(line: 383, column: 12, scope: !4662)
!4797 = !DILocation(line: 386, column: 24, scope: !4662)
!4798 = !DILocation(line: 390, column: 62, scope: !4662)
!4799 = !DILocation(line: 390, column: 28, scope: !4741, inlinedAt: !4732)
!4800 = !DILocation(line: 390, column: 28, scope: !4726, inlinedAt: !4732)
!4801 = !DILocation(line: 390, column: 28, scope: !4729, inlinedAt: !4732)
!4802 = !DILocation(line: 390, column: 28, scope: !4675)
!4803 = !DILocation(line: 390, column: 13, scope: !4671)
!4804 = !DILocation(line: 394, column: 28, scope: !4671)
!4805 = !DILocalVariable(name: "v1", scope: !4806, file: !2773, line: 394, type: !9, align: 8)
!4806 = !DILexicalBlockFile(scope: !4807, file: !2773, discriminator: 0)
!4807 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17ha8c6ec3c81f16110E", scope: !192, file: !667, line: 1278, type: !648, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !4808)
!4808 = !{!4805, !4809}
!4809 = !DILocalVariable(name: "v2", scope: !4806, file: !2773, line: 394, type: !9, align: 8)
!4810 = !DILocation(line: 394, column: 19, scope: !4806, inlinedAt: !4811)
!4811 = !DILocation(line: 394, column: 19, scope: !4671)
!4812 = !DILocation(line: 394, column: 42, scope: !4671)
!4813 = !DILocation(line: 394, column: 13, scope: !4677)
!4814 = !DILocation(line: 390, column: 79, scope: !4662)
!4815 = !DILocation(line: 390, column: 79, scope: !4673)
!4816 = !DILocation(line: 390, column: 28, scope: !4751, inlinedAt: !4755)
!4817 = !DILocalVariable(name: "kind", scope: !4818, file: !2773, line: 390, type: !273, align: 8)
!4818 = !DILexicalBlockFile(scope: !4819, file: !2773, discriminator: 0)
!4819 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf590d0dc0bf2911aE", scope: !266, file: !265, line: 116, type: !268, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4820)
!4820 = !{!4817}
!4821 = !DILocation(line: 390, column: 28, scope: !4818, inlinedAt: !4822)
!4822 = !DILocation(line: 2134, column: 27, scope: !4752, inlinedAt: !4755)
!4823 = !DILocation(line: 1, column: 1, scope: !4824)
!4824 = !DILexicalBlockFile(scope: !4662, file: !3805, discriminator: 0)
!4825 = !DILocation(line: 395, column: 52, scope: !4677)
!4826 = !DILocalVariable(name: "v2", scope: !4827, file: !2773, line: 395, type: !9, align: 8)
!4827 = !DILexicalBlockFile(scope: !4828, file: !2773, discriminator: 0)
!4828 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17ha8c6ec3c81f16110E", scope: !192, file: !667, line: 1278, type: !648, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !4829)
!4829 = !{!4830, !4826}
!4830 = !DILocalVariable(name: "v1", scope: !4827, file: !2773, line: 395, type: !9, align: 8)
!4831 = !DILocation(line: 395, column: 19, scope: !4827, inlinedAt: !4832)
!4832 = !DILocation(line: 395, column: 19, scope: !4677)
!4833 = !DILocation(line: 395, column: 13, scope: !4679)
!4834 = !DILocation(line: 397, column: 26, scope: !4679)
!4835 = !DILocation(line: 397, column: 13, scope: !4681)
!4836 = !DILocation(line: 400, column: 43, scope: !4681)
!4837 = !DILocation(line: 400, column: 66, scope: !4681)
!4838 = !DILocation(line: 400, column: 19, scope: !4777, inlinedAt: !4783)
!4839 = !DILocation(line: 400, column: 19, scope: !4780, inlinedAt: !4783)
!4840 = !DILocation(line: 400, column: 19, scope: !4687)
!4841 = !DILocation(line: 400, column: 13, scope: !4683)
!4842 = !DILocation(line: 401, column: 9, scope: !4683)
!4843 = !DILocation(line: 400, column: 82, scope: !4681)
!4844 = !DILocation(line: 400, column: 82, scope: !4685)
!4845 = !DILocation(line: 400, column: 19, scope: !4791, inlinedAt: !4795)
!4846 = !DILocation(line: 1, column: 1, scope: !4847)
!4847 = !DILexicalBlockFile(scope: !4671, file: !3805, discriminator: 0)
!4848 = !DILocation(line: 403, column: 6, scope: !4662)
!4849 = !DILocation(line: 402, column: 9, scope: !4683)
!4850 = !DILocation(line: 386, column: 20, scope: !4662)
!4851 = distinct !DISubprogram(name: "grow_amortized<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hc8b5d931c4c7ec70E", scope: !1368, file: !2773, line: 379, type: !4852, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !4855)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{!2416, !4854, !9, !9}
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<i32, alloc::alloc::Global>", baseType: !1368, size: 64, align: 64, dwarfAddressSpace: 0)
!4855 = !{!4856, !4857, !4858, !4859, !4861, !4863, !4865, !4867, !4869, !4871, !4873, !4875}
!4856 = !DILocalVariable(name: "self", arg: 1, scope: !4851, file: !2773, line: 379, type: !4854)
!4857 = !DILocalVariable(name: "len", arg: 2, scope: !4851, file: !2773, line: 379, type: !9)
!4858 = !DILocalVariable(name: "additional", arg: 3, scope: !4851, file: !2773, line: 379, type: !9)
!4859 = !DILocalVariable(name: "required_cap", scope: !4860, file: !2773, line: 390, type: !9, align: 8)
!4860 = distinct !DILexicalBlock(scope: !4851, file: !2773, line: 390, column: 9)
!4861 = !DILocalVariable(name: "residual", scope: !4862, file: !2773, line: 390, type: !3970, align: 8)
!4862 = distinct !DILexicalBlock(scope: !4851, file: !2773, line: 390, column: 79)
!4863 = !DILocalVariable(name: "val", scope: !4864, file: !2773, line: 390, type: !9, align: 8)
!4864 = distinct !DILexicalBlock(scope: !4851, file: !2773, line: 390, column: 28)
!4865 = !DILocalVariable(name: "cap", scope: !4866, file: !2773, line: 394, type: !9, align: 8)
!4866 = distinct !DILexicalBlock(scope: !4860, file: !2773, line: 394, column: 9)
!4867 = !DILocalVariable(name: "cap", scope: !4868, file: !2773, line: 395, type: !9, align: 8)
!4868 = distinct !DILexicalBlock(scope: !4866, file: !2773, line: 395, column: 9)
!4869 = !DILocalVariable(name: "new_layout", scope: !4870, file: !2773, line: 397, type: !1628, align: 8)
!4870 = distinct !DILexicalBlock(scope: !4868, file: !2773, line: 397, column: 9)
!4871 = !DILocalVariable(name: "ptr", scope: !4872, file: !2773, line: 400, type: !2354, align: 8)
!4872 = distinct !DILexicalBlock(scope: !4870, file: !2773, line: 400, column: 9)
!4873 = !DILocalVariable(name: "residual", scope: !4874, file: !2773, line: 400, type: !3987, align: 8)
!4874 = distinct !DILexicalBlock(scope: !4870, file: !2773, line: 400, column: 82)
!4875 = !DILocalVariable(name: "val", scope: !4876, file: !2773, line: 400, type: !2354, align: 8)
!4876 = distinct !DILexicalBlock(scope: !4870, file: !2773, line: 400, column: 19)
!4877 = !DILocation(line: 379, column: 23, scope: !4851)
!4878 = !DILocation(line: 379, column: 34, scope: !4851)
!4879 = !DILocation(line: 379, column: 46, scope: !4851)
!4880 = !DILocalVariable(name: "self", scope: !4881, file: !2773, line: 390, type: !4710, align: 8)
!4881 = !DILexicalBlockFile(scope: !4882, file: !2773, discriminator: 0)
!4882 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h0e02a576ad2dc463E", scope: !1730, file: !1729, line: 2117, type: !4694, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4718, retainedNodes: !4883)
!4883 = !{!4880, !4884, !4887}
!4884 = !DILocalVariable(name: "v", scope: !4885, file: !2773, line: 390, type: !9, align: 8)
!4885 = !DILexicalBlockFile(scope: !4886, file: !2773, discriminator: 0)
!4886 = distinct !DILexicalBlock(scope: !4882, file: !1729, line: 2119, column: 13)
!4887 = !DILocalVariable(name: "e", scope: !4888, file: !2773, line: 390, type: !273, align: 8)
!4888 = !DILexicalBlockFile(scope: !4889, file: !2773, discriminator: 0)
!4889 = distinct !DILexicalBlock(scope: !4882, file: !1729, line: 2120, column: 13)
!4890 = !DILocation(line: 390, column: 28, scope: !4881, inlinedAt: !4891)
!4891 = !DILocation(line: 390, column: 28, scope: !4851)
!4892 = !DILocalVariable(name: "self", scope: !4893, file: !2773, line: 390, type: !424, align: 8)
!4893 = !DILexicalBlockFile(scope: !4894, file: !2773, discriminator: 0)
!4894 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h4e18c564e4da173aE", scope: !424, file: !1776, line: 1051, type: !4736, scopeLine: 1051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4718, retainedNodes: !4895)
!4895 = !{!4892, !4896, !4897}
!4896 = !DILocalVariable(name: "err", scope: !4893, file: !2773, line: 390, type: !273, align: 8)
!4897 = !DILocalVariable(name: "v", scope: !4898, file: !2773, line: 390, type: !9, align: 8)
!4898 = !DILexicalBlockFile(scope: !4899, file: !2773, discriminator: 0)
!4899 = distinct !DILexicalBlock(scope: !4894, file: !1776, line: 1056, column: 13)
!4900 = !DILocation(line: 390, column: 28, scope: !4893, inlinedAt: !4891)
!4901 = !DILocalVariable(name: "residual", scope: !4902, file: !2773, line: 390, type: !3970, align: 8)
!4902 = !DILexicalBlockFile(scope: !4903, file: !2773, discriminator: 0)
!4903 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hd5bfd247b27ca1a9E", scope: !1789, file: !1729, line: 2132, type: !4747, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4753, retainedNodes: !4904)
!4904 = !{!4901, !4905}
!4905 = !DILocalVariable(name: "e", scope: !4906, file: !2773, line: 390, type: !273, align: 8)
!4906 = !DILexicalBlockFile(scope: !4907, file: !2773, discriminator: 0)
!4907 = distinct !DILexicalBlock(scope: !4903, file: !1729, line: 2134, column: 13)
!4908 = !DILocation(line: 390, column: 28, scope: !4902, inlinedAt: !4909)
!4909 = !DILocation(line: 390, column: 28, scope: !4862)
!4910 = !DILocalVariable(name: "self", scope: !4911, file: !2773, line: 400, type: !2372, align: 8)
!4911 = !DILexicalBlockFile(scope: !4912, file: !2773, discriminator: 0)
!4912 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hefb772efa2e14a1aE", scope: !1730, file: !1729, line: 2117, type: !4759, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2380, retainedNodes: !4913)
!4913 = !{!4910, !4914, !4917}
!4914 = !DILocalVariable(name: "v", scope: !4915, file: !2773, line: 400, type: !2354, align: 8)
!4915 = !DILexicalBlockFile(scope: !4916, file: !2773, discriminator: 0)
!4916 = distinct !DILexicalBlock(scope: !4912, file: !1729, line: 2119, column: 13)
!4917 = !DILocalVariable(name: "e", scope: !4918, file: !2773, line: 400, type: !270, align: 8)
!4918 = !DILexicalBlockFile(scope: !4919, file: !2773, discriminator: 0)
!4919 = distinct !DILexicalBlock(scope: !4912, file: !1729, line: 2120, column: 13)
!4920 = !DILocation(line: 400, column: 19, scope: !4911, inlinedAt: !4921)
!4921 = !DILocation(line: 400, column: 19, scope: !4870)
!4922 = !DILocalVariable(name: "residual", scope: !4923, file: !2773, line: 400, type: !3987, align: 8)
!4923 = !DILexicalBlockFile(scope: !4924, file: !2773, discriminator: 0)
!4924 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h9e639b3785c94dc5E", scope: !1789, file: !1729, line: 2132, type: !4787, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4793, retainedNodes: !4925)
!4925 = !{!4922, !4926}
!4926 = !DILocalVariable(name: "e", scope: !4927, file: !2773, line: 400, type: !270, align: 8)
!4927 = !DILexicalBlockFile(scope: !4928, file: !2773, discriminator: 0)
!4928 = distinct !DILexicalBlock(scope: !4924, file: !1729, line: 2134, column: 13)
!4929 = !DILocation(line: 400, column: 19, scope: !4923, inlinedAt: !4930)
!4930 = !DILocation(line: 400, column: 19, scope: !4874)
!4931 = !DILocation(line: 383, column: 12, scope: !4851)
!4932 = !DILocation(line: 386, column: 24, scope: !4851)
!4933 = !DILocation(line: 390, column: 62, scope: !4851)
!4934 = !DILocation(line: 390, column: 28, scope: !4898, inlinedAt: !4891)
!4935 = !DILocation(line: 390, column: 28, scope: !4885, inlinedAt: !4891)
!4936 = !DILocation(line: 390, column: 28, scope: !4888, inlinedAt: !4891)
!4937 = !DILocation(line: 390, column: 28, scope: !4864)
!4938 = !DILocation(line: 390, column: 13, scope: !4860)
!4939 = !DILocation(line: 394, column: 28, scope: !4860)
!4940 = !DILocalVariable(name: "v1", scope: !4941, file: !2773, line: 394, type: !9, align: 8)
!4941 = !DILexicalBlockFile(scope: !4942, file: !2773, discriminator: 0)
!4942 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17ha8c6ec3c81f16110E", scope: !192, file: !667, line: 1278, type: !648, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !4943)
!4943 = !{!4940, !4944}
!4944 = !DILocalVariable(name: "v2", scope: !4941, file: !2773, line: 394, type: !9, align: 8)
!4945 = !DILocation(line: 394, column: 19, scope: !4941, inlinedAt: !4946)
!4946 = !DILocation(line: 394, column: 19, scope: !4860)
!4947 = !DILocation(line: 394, column: 42, scope: !4860)
!4948 = !DILocation(line: 394, column: 13, scope: !4866)
!4949 = !DILocation(line: 390, column: 79, scope: !4851)
!4950 = !DILocation(line: 390, column: 79, scope: !4862)
!4951 = !DILocation(line: 390, column: 28, scope: !4906, inlinedAt: !4909)
!4952 = !DILocalVariable(name: "kind", scope: !4953, file: !2773, line: 390, type: !273, align: 8)
!4953 = !DILexicalBlockFile(scope: !4954, file: !2773, discriminator: 0)
!4954 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17hf590d0dc0bf2911aE", scope: !266, file: !265, line: 116, type: !268, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !4955)
!4955 = !{!4952}
!4956 = !DILocation(line: 390, column: 28, scope: !4953, inlinedAt: !4957)
!4957 = !DILocation(line: 2134, column: 27, scope: !4907, inlinedAt: !4909)
!4958 = !DILocation(line: 1, column: 1, scope: !4959)
!4959 = !DILexicalBlockFile(scope: !4851, file: !3805, discriminator: 0)
!4960 = !DILocation(line: 395, column: 52, scope: !4866)
!4961 = !DILocalVariable(name: "v2", scope: !4962, file: !2773, line: 395, type: !9, align: 8)
!4962 = !DILexicalBlockFile(scope: !4963, file: !2773, discriminator: 0)
!4963 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17ha8c6ec3c81f16110E", scope: !192, file: !667, line: 1278, type: !648, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !4964)
!4964 = !{!4965, !4961}
!4965 = !DILocalVariable(name: "v1", scope: !4962, file: !2773, line: 395, type: !9, align: 8)
!4966 = !DILocation(line: 395, column: 19, scope: !4962, inlinedAt: !4967)
!4967 = !DILocation(line: 395, column: 19, scope: !4866)
!4968 = !DILocation(line: 395, column: 13, scope: !4868)
!4969 = !DILocation(line: 397, column: 26, scope: !4868)
!4970 = !DILocation(line: 397, column: 13, scope: !4870)
!4971 = !DILocation(line: 400, column: 43, scope: !4870)
!4972 = !DILocation(line: 400, column: 66, scope: !4870)
!4973 = !DILocation(line: 400, column: 19, scope: !4915, inlinedAt: !4921)
!4974 = !DILocation(line: 400, column: 19, scope: !4918, inlinedAt: !4921)
!4975 = !DILocation(line: 400, column: 19, scope: !4876)
!4976 = !DILocation(line: 400, column: 13, scope: !4872)
!4977 = !DILocation(line: 401, column: 9, scope: !4872)
!4978 = !DILocation(line: 400, column: 82, scope: !4870)
!4979 = !DILocation(line: 400, column: 82, scope: !4874)
!4980 = !DILocation(line: 400, column: 19, scope: !4927, inlinedAt: !4930)
!4981 = !DILocation(line: 1, column: 1, scope: !4982)
!4982 = !DILexicalBlockFile(scope: !4860, file: !3805, discriminator: 0)
!4983 = !DILocation(line: 403, column: 6, scope: !4851)
!4984 = !DILocation(line: 402, column: 9, scope: !4872)
!4985 = !DILocation(line: 386, column: 20, scope: !4851)
!4986 = distinct !DISubprogram(name: "set_ptr_and_cap<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17h78b9aca71ada8db9E", scope: !1463, file: !2773, line: 364, type: !4987, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !4989)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{null, !4665, !2354, !9}
!4989 = !{!4990, !4991, !4992}
!4990 = !DILocalVariable(name: "self", arg: 1, scope: !4986, file: !2773, line: 364, type: !4665)
!4991 = !DILocalVariable(name: "ptr", arg: 2, scope: !4986, file: !2773, line: 364, type: !2354)
!4992 = !DILocalVariable(name: "cap", arg: 3, scope: !4986, file: !2773, line: 364, type: !9)
!4993 = !DILocation(line: 364, column: 24, scope: !4986)
!4994 = !DILocation(line: 364, column: 35, scope: !4986)
!4995 = !DILocation(line: 364, column: 55, scope: !4986)
!4996 = !DILocalVariable(name: "self", scope: !4997, file: !2773, line: 368, type: !1469, align: 8)
!4997 = !DILexicalBlockFile(scope: !4998, file: !2773, discriminator: 0)
!4998 = distinct !DISubprogram(name: "as_ptr<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h5e753c994aa390deE", scope: !1469, file: !217, line: 330, type: !2790, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !4999)
!4999 = !{!4996}
!5000 = !DILocation(line: 368, column: 51, scope: !4997, inlinedAt: !5001)
!5001 = !DILocation(line: 368, column: 51, scope: !4986)
!5002 = !DILocalVariable(name: "self", scope: !5003, file: !2773, line: 368, type: !2354, align: 8)
!5003 = !DILexicalBlockFile(scope: !5004, file: !2773, discriminator: 0)
!5004 = distinct !DISubprogram(name: "cast<[u8], [i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hf2ef22bdfc874b0bE", scope: !2354, file: !217, line: 453, type: !4338, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4341, retainedNodes: !5005)
!5005 = !{!5002}
!5006 = !DILocation(line: 368, column: 51, scope: !5003, inlinedAt: !5001)
!5007 = !DILocalVariable(name: "self", scope: !5008, file: !2773, line: 368, type: !2354, align: 8)
!5008 = !DILexicalBlockFile(scope: !5009, file: !2773, discriminator: 0)
!5009 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7d08438adddc4ef1E", scope: !2354, file: !217, line: 330, type: !3916, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !5010)
!5010 = !{!5007}
!5011 = !DILocation(line: 368, column: 51, scope: !5008, inlinedAt: !5012)
!5012 = !DILocation(line: 455, column: 41, scope: !5004, inlinedAt: !5001)
!5013 = !DILocalVariable(name: "ptr", scope: !5014, file: !2773, line: 368, type: !2746, align: 8)
!5014 = !DILexicalBlockFile(scope: !5015, file: !2773, discriminator: 0)
!5015 = distinct !DISubprogram(name: "new_unchecked<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hda689c01cd3285b7E", scope: !1469, file: !217, line: 196, type: !4353, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5016)
!5016 = !{!5013}
!5017 = !DILocation(line: 368, column: 51, scope: !5014, inlinedAt: !5018)
!5018 = !DILocation(line: 455, column: 18, scope: !5004, inlinedAt: !5001)
!5019 = !DILocalVariable(name: "ptr", scope: !5020, file: !2773, line: 368, type: !2746, align: 8)
!5020 = !DILexicalBlockFile(scope: !5021, file: !2773, discriminator: 0)
!5021 = distinct !DISubprogram(name: "new_unchecked<[i32; 4]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5779a225a6491703E", scope: !1466, file: !243, line: 85, type: !4361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5022)
!5022 = !{!5019}
!5023 = !DILocation(line: 368, column: 29, scope: !5020, inlinedAt: !5024)
!5024 = !DILocation(line: 368, column: 29, scope: !4986)
!5025 = !DILocalVariable(name: "ptr", scope: !5026, file: !2773, line: 368, type: !2746, align: 8)
!5026 = !DILexicalBlockFile(scope: !5027, file: !2773, discriminator: 0)
!5027 = distinct !DISubprogram(name: "new_unchecked<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hda689c01cd3285b7E", scope: !1469, file: !217, line: 196, type: !4353, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5028)
!5028 = !{!5025}
!5029 = !DILocation(line: 368, column: 29, scope: !5026, inlinedAt: !5030)
!5030 = !DILocation(line: 87, column: 36, scope: !5021, inlinedAt: !5024)
!5031 = !DILocation(line: 368, column: 9, scope: !4986)
!5032 = !DILocation(line: 369, column: 9, scope: !4986)
!5033 = !DILocation(line: 370, column: 6, scope: !4986)
!5034 = distinct !DISubprogram(name: "set_ptr_and_cap<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$15set_ptr_and_cap17ha19e28773325831dE", scope: !1368, file: !2773, line: 364, type: !5035, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5037)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{null, !4854, !2354, !9}
!5037 = !{!5038, !5039, !5040}
!5038 = !DILocalVariable(name: "self", arg: 1, scope: !5034, file: !2773, line: 364, type: !4854)
!5039 = !DILocalVariable(name: "ptr", arg: 2, scope: !5034, file: !2773, line: 364, type: !2354)
!5040 = !DILocalVariable(name: "cap", arg: 3, scope: !5034, file: !2773, line: 364, type: !9)
!5041 = !DILocation(line: 364, column: 24, scope: !5034)
!5042 = !DILocation(line: 364, column: 35, scope: !5034)
!5043 = !DILocation(line: 364, column: 55, scope: !5034)
!5044 = !DILocalVariable(name: "self", scope: !5045, file: !2773, line: 368, type: !619, align: 8)
!5045 = !DILexicalBlockFile(scope: !5046, file: !2773, discriminator: 0)
!5046 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfff8edc501d3c834E", scope: !619, file: !217, line: 330, type: !2858, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5047)
!5047 = !{!5044}
!5048 = !DILocation(line: 368, column: 51, scope: !5045, inlinedAt: !5049)
!5049 = !DILocation(line: 368, column: 51, scope: !5034)
!5050 = !DILocalVariable(name: "self", scope: !5051, file: !2773, line: 368, type: !2354, align: 8)
!5051 = !DILexicalBlockFile(scope: !5052, file: !2773, discriminator: 0)
!5052 = distinct !DISubprogram(name: "cast<[u8], i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h64ffe5aac1b2bf67E", scope: !2354, file: !217, line: 453, type: !4438, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !4441, retainedNodes: !5053)
!5053 = !{!5050}
!5054 = !DILocation(line: 368, column: 51, scope: !5051, inlinedAt: !5049)
!5055 = !DILocalVariable(name: "self", scope: !5056, file: !2773, line: 368, type: !2354, align: 8)
!5056 = !DILexicalBlockFile(scope: !5057, file: !2773, discriminator: 0)
!5057 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h7d08438adddc4ef1E", scope: !2354, file: !217, line: 330, type: !3916, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !5058)
!5058 = !{!5055}
!5059 = !DILocation(line: 368, column: 51, scope: !5056, inlinedAt: !5060)
!5060 = !DILocation(line: 455, column: 41, scope: !5052, inlinedAt: !5049)
!5061 = !DILocalVariable(name: "ptr", scope: !5062, file: !2773, line: 368, type: !1015, align: 8)
!5062 = !DILexicalBlockFile(scope: !5063, file: !2773, discriminator: 0)
!5063 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0e5e687d23c7ccf1E", scope: !619, file: !217, line: 196, type: !2293, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5064)
!5064 = !{!5061}
!5065 = !DILocation(line: 368, column: 51, scope: !5062, inlinedAt: !5066)
!5066 = !DILocation(line: 455, column: 18, scope: !5052, inlinedAt: !5049)
!5067 = !DILocalVariable(name: "ptr", scope: !5068, file: !2773, line: 368, type: !1015, align: 8)
!5068 = !DILexicalBlockFile(scope: !5069, file: !2773, discriminator: 0)
!5069 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h9c00466ed7a33ff0E", scope: !1371, file: !243, line: 85, type: !4458, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5070)
!5070 = !{!5067}
!5071 = !DILocation(line: 368, column: 29, scope: !5068, inlinedAt: !5072)
!5072 = !DILocation(line: 368, column: 29, scope: !5034)
!5073 = !DILocalVariable(name: "ptr", scope: !5074, file: !2773, line: 368, type: !1015, align: 8)
!5074 = !DILexicalBlockFile(scope: !5075, file: !2773, discriminator: 0)
!5075 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0e5e687d23c7ccf1E", scope: !619, file: !217, line: 196, type: !2293, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5076)
!5076 = !{!5073}
!5077 = !DILocation(line: 368, column: 29, scope: !5074, inlinedAt: !5078)
!5078 = !DILocation(line: 87, column: 36, scope: !5069, inlinedAt: !5072)
!5079 = !DILocation(line: 368, column: 9, scope: !5034)
!5080 = !DILocation(line: 369, column: 9, scope: !5034)
!5081 = !DILocation(line: 370, column: 6, scope: !5034)
!5082 = distinct !DISubprogram(name: "new_in<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h7c0ceaff3c018d8bE", scope: !1463, file: !2773, line: 121, type: !5083, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !5085)
!5083 = !DISubroutineType(types: !5084)
!5084 = !{!1463, !1378}
!5085 = !{!5086}
!5086 = !DILocalVariable(name: "alloc", arg: 1, scope: !5082, file: !2773, line: 121, type: !1378)
!5087 = !DILocation(line: 121, column: 25, scope: !5082)
!5088 = !DILocalVariable(name: "pointer", scope: !5089, file: !2773, line: 123, type: !1469, align: 8)
!5089 = !DILexicalBlockFile(scope: !5090, file: !2773, discriminator: 0)
!5090 = distinct !DISubprogram(name: "from<[i32; 4]>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17hb379781e53f5815aE", scope: !4546, file: !243, line: 190, type: !5091, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5093)
!5091 = !DISubroutineType(types: !5092)
!5092 = !{!1466, !1469}
!5093 = !{!5088}
!5094 = !DILocation(line: 123, column: 21, scope: !5089, inlinedAt: !5095)
!5095 = !DILocation(line: 73, column: 9, scope: !5096, inlinedAt: !5099)
!5096 = distinct !DISubprogram(name: "dangling<[i32; 4]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h9a1fa80c46e93555E", scope: !1466, file: !243, line: 72, type: !5097, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !23)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!1466}
!5099 = !DILocation(line: 123, column: 21, scope: !5082)
!5100 = !DILocation(line: 123, column: 21, scope: !5101, inlinedAt: !5103)
!5101 = !DILexicalBlockFile(scope: !5102, file: !2773, discriminator: 0)
!5102 = distinct !DISubprogram(name: "align_of<[i32; 4]>", linkageName: "_ZN4core3mem8align_of17he2e40d4671167328E", scope: !113, file: !907, line: 464, type: !1809, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !23)
!5103 = !DILocation(line: 95, column: 52, scope: !5104, inlinedAt: !5111)
!5104 = distinct !DISubprogram(name: "dangling<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17h925a874a1d67eaf0E", scope: !1469, file: !217, line: 90, type: !5105, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5107)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!1469}
!5107 = !{!5108}
!5108 = !DILocalVariable(name: "ptr", scope: !5109, file: !2773, line: 123, type: !2746, align: 8)
!5109 = !DILexicalBlockFile(scope: !5110, file: !2773, discriminator: 0)
!5110 = distinct !DILexicalBlock(scope: !5104, file: !217, line: 95, column: 13)
!5111 = !DILocation(line: 73, column: 20, scope: !5096, inlinedAt: !5099)
!5112 = !DILocalVariable(name: "addr", scope: !5113, file: !2773, line: 123, type: !9, align: 8)
!5113 = !DILexicalBlockFile(scope: !5114, file: !2773, discriminator: 0)
!5114 = distinct !DISubprogram(name: "invalid_mut<[i32; 4]>", linkageName: "_ZN4core3ptr11invalid_mut17h7a470ecaaa544329E", scope: !220, file: !921, line: 569, type: !5115, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5117)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{!2746, !9}
!5117 = !{!5112}
!5118 = !DILocation(line: 123, column: 21, scope: !5113, inlinedAt: !5119)
!5119 = !DILocation(line: 95, column: 23, scope: !5104, inlinedAt: !5111)
!5120 = !DILocation(line: 123, column: 21, scope: !5109, inlinedAt: !5111)
!5121 = !DILocalVariable(name: "ptr", scope: !5122, file: !2773, line: 123, type: !2746, align: 8)
!5122 = !DILexicalBlockFile(scope: !5123, file: !2773, discriminator: 0)
!5123 = distinct !DISubprogram(name: "new_unchecked<[i32; 4]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hda689c01cd3285b7E", scope: !1469, file: !217, line: 196, type: !4353, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5124)
!5124 = !{!5121}
!5125 = !DILocation(line: 123, column: 21, scope: !5122, inlinedAt: !5126)
!5126 = !DILocation(line: 96, column: 13, scope: !5110, inlinedAt: !5111)
!5127 = !DILocation(line: 123, column: 9, scope: !5082)
!5128 = !DILocation(line: 124, column: 6, scope: !5082)
!5129 = !DILocation(line: 124, column: 5, scope: !5082)
!5130 = !DILocation(line: 121, column: 5, scope: !5082)
!5131 = distinct !DISubprogram(name: "new_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h8962c42da30eb302E", scope: !1368, file: !2773, line: 121, type: !5132, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5134)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!1368, !1378}
!5134 = !{!5135}
!5135 = !DILocalVariable(name: "alloc", arg: 1, scope: !5131, file: !2773, line: 121, type: !1378)
!5136 = !DILocation(line: 121, column: 25, scope: !5131)
!5137 = !DILocalVariable(name: "pointer", scope: !5138, file: !2773, line: 123, type: !619, align: 8)
!5138 = !DILexicalBlockFile(scope: !5139, file: !2773, discriminator: 0)
!5139 = distinct !DISubprogram(name: "from<i32>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h42e8f4b59004d56fE", scope: !4546, file: !243, line: 190, type: !5140, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5142)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{!1371, !619}
!5142 = !{!5137}
!5143 = !DILocation(line: 123, column: 21, scope: !5138, inlinedAt: !5144)
!5144 = !DILocation(line: 73, column: 9, scope: !5145, inlinedAt: !5148)
!5145 = distinct !DISubprogram(name: "dangling<i32>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17ha20ab7de2778c498E", scope: !1371, file: !243, line: 72, type: !5146, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !23)
!5146 = !DISubroutineType(types: !5147)
!5147 = !{!1371}
!5148 = !DILocation(line: 123, column: 21, scope: !5131)
!5149 = !DILocation(line: 123, column: 21, scope: !5150, inlinedAt: !5152)
!5150 = !DILexicalBlockFile(scope: !5151, file: !2773, discriminator: 0)
!5151 = distinct !DISubprogram(name: "align_of<i32>", linkageName: "_ZN4core3mem8align_of17h4ae4c7024586286dE", scope: !113, file: !907, line: 464, type: !1809, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !23)
!5152 = !DILocation(line: 95, column: 52, scope: !5153, inlinedAt: !5160)
!5153 = distinct !DISubprogram(name: "dangling<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hde8862c4855eb3cdE", scope: !619, file: !217, line: 90, type: !5154, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5156)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{!619}
!5156 = !{!5157}
!5157 = !DILocalVariable(name: "ptr", scope: !5158, file: !2773, line: 123, type: !1015, align: 8)
!5158 = !DILexicalBlockFile(scope: !5159, file: !2773, discriminator: 0)
!5159 = distinct !DILexicalBlock(scope: !5153, file: !217, line: 95, column: 13)
!5160 = !DILocation(line: 73, column: 20, scope: !5145, inlinedAt: !5148)
!5161 = !DILocalVariable(name: "addr", scope: !5162, file: !2773, line: 123, type: !9, align: 8)
!5162 = !DILexicalBlockFile(scope: !5163, file: !2773, discriminator: 0)
!5163 = distinct !DISubprogram(name: "invalid_mut<i32>", linkageName: "_ZN4core3ptr11invalid_mut17h634b9bc2c452a1c3E", scope: !220, file: !921, line: 569, type: !5164, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5166)
!5164 = !DISubroutineType(types: !5165)
!5165 = !{!1015, !9}
!5166 = !{!5161}
!5167 = !DILocation(line: 123, column: 21, scope: !5162, inlinedAt: !5168)
!5168 = !DILocation(line: 95, column: 23, scope: !5153, inlinedAt: !5160)
!5169 = !DILocation(line: 123, column: 21, scope: !5158, inlinedAt: !5160)
!5170 = !DILocalVariable(name: "ptr", scope: !5171, file: !2773, line: 123, type: !1015, align: 8)
!5171 = !DILexicalBlockFile(scope: !5172, file: !2773, discriminator: 0)
!5172 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0e5e687d23c7ccf1E", scope: !619, file: !217, line: 196, type: !2293, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5173)
!5173 = !{!5170}
!5174 = !DILocation(line: 123, column: 21, scope: !5171, inlinedAt: !5175)
!5175 = !DILocation(line: 96, column: 13, scope: !5159, inlinedAt: !5160)
!5176 = !DILocation(line: 123, column: 9, scope: !5131)
!5177 = !DILocation(line: 124, column: 6, scope: !5131)
!5178 = !DILocation(line: 124, column: 5, scope: !5131)
!5179 = !DILocation(line: 121, column: 5, scope: !5131)
!5180 = distinct !DISubprogram(name: "reserve<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h5b88c90a43b306c3E", scope: !1463, file: !2773, line: 274, type: !5181, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !5183)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{null, !4665, !9, !9}
!5183 = !{!5184, !5185, !5186}
!5184 = !DILocalVariable(name: "self", arg: 1, scope: !5180, file: !2773, line: 274, type: !4665)
!5185 = !DILocalVariable(name: "len", arg: 2, scope: !5180, file: !2773, line: 274, type: !9)
!5186 = !DILocalVariable(name: "additional", arg: 3, scope: !5180, file: !2773, line: 274, type: !9)
!5187 = !DILocation(line: 274, column: 20, scope: !5180)
!5188 = !DILocation(line: 274, column: 31, scope: !5180)
!5189 = !DILocation(line: 274, column: 43, scope: !5180)
!5190 = !DILocation(line: 288, column: 12, scope: !5180)
!5191 = !DILocation(line: 291, column: 6, scope: !5180)
!5192 = !DILocation(line: 289, column: 13, scope: !5180)
!5193 = !DILocation(line: 288, column: 9, scope: !5180)
!5194 = distinct !DISubprogram(name: "reserve<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17hfc2e4c7088dac924E", scope: !1368, file: !2773, line: 274, type: !5195, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5197)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{null, !4854, !9, !9}
!5197 = !{!5198, !5199, !5200}
!5198 = !DILocalVariable(name: "self", arg: 1, scope: !5194, file: !2773, line: 274, type: !4854)
!5199 = !DILocalVariable(name: "len", arg: 2, scope: !5194, file: !2773, line: 274, type: !9)
!5200 = !DILocalVariable(name: "additional", arg: 3, scope: !5194, file: !2773, line: 274, type: !9)
!5201 = !DILocation(line: 274, column: 20, scope: !5194)
!5202 = !DILocation(line: 274, column: 31, scope: !5194)
!5203 = !DILocation(line: 274, column: 43, scope: !5194)
!5204 = !DILocation(line: 288, column: 12, scope: !5194)
!5205 = !DILocation(line: 291, column: 6, scope: !5194)
!5206 = !DILocation(line: 289, column: 13, scope: !5194)
!5207 = !DILocation(line: 288, column: 9, scope: !5194)
!5208 = distinct !DISubprogram(name: "do_reserve_and_handle<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h72b7df1220910533E", scope: !5209, file: !2773, line: 280, type: !5181, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !5211)
!5209 = !DINamespace(name: "reserve", scope: !5210)
!5210 = !DINamespace(name: "{impl#1}", scope: !210)
!5211 = !{!5212, !5213, !5214}
!5212 = !DILocalVariable(name: "slf", arg: 1, scope: !5208, file: !2773, line: 281, type: !4665)
!5213 = !DILocalVariable(name: "len", arg: 2, scope: !5208, file: !2773, line: 282, type: !9)
!5214 = !DILocalVariable(name: "additional", arg: 3, scope: !5208, file: !2773, line: 283, type: !9)
!5215 = !DILocation(line: 281, column: 13, scope: !5208)
!5216 = !DILocation(line: 282, column: 13, scope: !5208)
!5217 = !DILocation(line: 283, column: 13, scope: !5208)
!5218 = !DILocation(line: 285, column: 28, scope: !5208)
!5219 = !DILocation(line: 285, column: 13, scope: !5208)
!5220 = !DILocation(line: 286, column: 10, scope: !5208)
!5221 = distinct !DISubprogram(name: "do_reserve_and_handle<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h97d2cb74cae62b3dE", scope: !5209, file: !2773, line: 280, type: !5195, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5222)
!5222 = !{!5223, !5224, !5225}
!5223 = !DILocalVariable(name: "slf", arg: 1, scope: !5221, file: !2773, line: 281, type: !4854)
!5224 = !DILocalVariable(name: "len", arg: 2, scope: !5221, file: !2773, line: 282, type: !9)
!5225 = !DILocalVariable(name: "additional", arg: 3, scope: !5221, file: !2773, line: 283, type: !9)
!5226 = !DILocation(line: 281, column: 13, scope: !5221)
!5227 = !DILocation(line: 282, column: 13, scope: !5221)
!5228 = !DILocation(line: 283, column: 13, scope: !5221)
!5229 = !DILocation(line: 285, column: 28, scope: !5221)
!5230 = !DILocation(line: 285, column: 13, scope: !5221)
!5231 = !DILocation(line: 286, column: 10, scope: !5221)
!5232 = distinct !DISubprogram(name: "from_elem<i32, alloc::alloc::Global>", linkageName: "_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h3de17457e0983c6bE", scope: !5234, file: !5233, line: 23, type: !5236, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5238)
!5233 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/alloc/src/vec/spec_from_elem.rs", directory: "", checksumkind: CSK_MD5, checksum: "0a540c7458367f313cf051b1c5d2f659")
!5234 = !DINamespace(name: "{impl#1}", scope: !5235)
!5235 = !DINamespace(name: "spec_from_elem", scope: !1365)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{!1364, !33, !9, !1378}
!5238 = !{!5239, !5240, !5241, !5242}
!5239 = !DILocalVariable(name: "elem", arg: 1, scope: !5232, file: !5233, line: 23, type: !33)
!5240 = !DILocalVariable(name: "n", arg: 2, scope: !5232, file: !5233, line: 23, type: !9)
!5241 = !DILocalVariable(name: "alloc", arg: 3, scope: !5232, file: !5233, line: 23, type: !1378)
!5242 = !DILocalVariable(name: "v", scope: !5243, file: !5233, line: 27, type: !1364, align: 8)
!5243 = distinct !DILexicalBlock(scope: !5232, file: !5233, line: 27, column: 9)
!5244 = !DILocation(line: 23, column: 40, scope: !5232)
!5245 = !DILocation(line: 23, column: 49, scope: !5232)
!5246 = !DILocation(line: 23, column: 59, scope: !5232)
!5247 = !DILocalVariable(name: "alloc", scope: !5248, file: !5233, line: 25, type: !1378, align: 1)
!5248 = !DILexicalBlockFile(scope: !5249, file: !5233, discriminator: 0)
!5249 = distinct !DISubprogram(name: "with_capacity_zeroed_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$23with_capacity_zeroed_in17h119ea20a2043170dE", scope: !1368, file: !2773, line: 138, type: !5250, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5252)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{!1368, !9, !1378}
!5252 = !{!5253, !5247}
!5253 = !DILocalVariable(name: "capacity", scope: !5248, file: !5233, line: 25, type: !9, align: 8)
!5254 = !DILocation(line: 25, column: 31, scope: !5248, inlinedAt: !5255)
!5255 = !DILocation(line: 25, column: 31, scope: !5232)
!5256 = !DILocation(line: 27, column: 13, scope: !5243)
!5257 = !DILocalVariable(name: "alloc", scope: !5258, file: !5233, line: 27, type: !1378, align: 1)
!5258 = !DILexicalBlockFile(scope: !5259, file: !5233, discriminator: 0)
!5259 = distinct !DISubprogram(name: "with_capacity_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h0c3ceae6c5230e97E", scope: !1364, file: !2743, line: 640, type: !5260, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5262)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{!1364, !9, !1378}
!5262 = !{!5263, !5257}
!5263 = !DILocalVariable(name: "capacity", scope: !5258, file: !5233, line: 27, type: !9, align: 8)
!5264 = !DILocation(line: 27, column: 21, scope: !5258, inlinedAt: !5265)
!5265 = !DILocation(line: 27, column: 21, scope: !5232)
!5266 = !DILocalVariable(name: "alloc", scope: !5267, file: !5233, line: 27, type: !1378, align: 1)
!5267 = !DILexicalBlockFile(scope: !5268, file: !5233, discriminator: 0)
!5268 = distinct !DISubprogram(name: "with_capacity_in<i32, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17ha04a12f95fa80710E", scope: !1368, file: !2773, line: 130, type: !5250, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5269)
!5269 = !{!5270, !5266}
!5270 = !DILocalVariable(name: "capacity", scope: !5267, file: !5233, line: 27, type: !9, align: 8)
!5271 = !DILocation(line: 27, column: 21, scope: !5267, inlinedAt: !5272)
!5272 = !DILocation(line: 641, column: 20, scope: !5259, inlinedAt: !5265)
!5273 = !DILocation(line: 24, column: 9, scope: !5232)
!5274 = !DILocation(line: 24, column: 12, scope: !5232)
!5275 = !DILocation(line: 30, column: 5, scope: !5232)
!5276 = !DILocation(line: 27, column: 43, scope: !5232)
!5277 = !DILocation(line: 27, column: 46, scope: !5232)
!5278 = !DILocation(line: 25, column: 63, scope: !5232)
!5279 = !DILocation(line: 25, column: 66, scope: !5232)
!5280 = !DILocation(line: 25, column: 20, scope: !5232)
!5281 = !DILocation(line: 30, column: 6, scope: !5232)
!5282 = !DILocation(line: 28, column: 40, scope: !5243)
!5283 = !DILocation(line: 28, column: 26, scope: !5243)
!5284 = !DILocation(line: 28, column: 9, scope: !5243)
!5285 = !DILocation(line: 29, column: 9, scope: !5243)
!5286 = !DILocation(line: 23, column: 5, scope: !5232)
!5287 = distinct !DISubprogram(name: "from_elem<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17he692ac74cb4b7798E", scope: !5234, file: !5233, line: 23, type: !5288, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !5290)
!5288 = !DISubroutineType(types: !5289)
!5289 = !{!1460, !637, !9, !1378}
!5290 = !{!5291, !5292, !5293, !5294}
!5291 = !DILocalVariable(name: "elem", arg: 1, scope: !5287, file: !5233, line: 23, type: !637)
!5292 = !DILocalVariable(name: "n", arg: 2, scope: !5287, file: !5233, line: 23, type: !9)
!5293 = !DILocalVariable(name: "alloc", arg: 3, scope: !5287, file: !5233, line: 23, type: !1378)
!5294 = !DILocalVariable(name: "v", scope: !5295, file: !5233, line: 27, type: !1460, align: 8)
!5295 = distinct !DILexicalBlock(scope: !5287, file: !5233, line: 27, column: 9)
!5296 = !DILocation(line: 23, column: 40, scope: !5287)
!5297 = !DILocation(line: 23, column: 49, scope: !5287)
!5298 = !DILocation(line: 23, column: 59, scope: !5287)
!5299 = !DILocalVariable(name: "alloc", scope: !5300, file: !5233, line: 25, type: !1378, align: 1)
!5300 = !DILexicalBlockFile(scope: !5301, file: !5233, discriminator: 0)
!5301 = distinct !DISubprogram(name: "with_capacity_zeroed_in<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$23with_capacity_zeroed_in17he9dd4c578e60dacbE", scope: !1463, file: !2773, line: 138, type: !5302, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !5304)
!5302 = !DISubroutineType(types: !5303)
!5303 = !{!1463, !9, !1378}
!5304 = !{!5305, !5299}
!5305 = !DILocalVariable(name: "capacity", scope: !5300, file: !5233, line: 25, type: !9, align: 8)
!5306 = !DILocation(line: 25, column: 31, scope: !5300, inlinedAt: !5307)
!5307 = !DILocation(line: 25, column: 31, scope: !5287)
!5308 = !DILocation(line: 27, column: 13, scope: !5295)
!5309 = !DILocalVariable(name: "alloc", scope: !5310, file: !5233, line: 27, type: !1378, align: 1)
!5310 = !DILexicalBlockFile(scope: !5311, file: !5233, discriminator: 0)
!5311 = distinct !DISubprogram(name: "with_capacity_in<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17hc1624e34965490cdE", scope: !1460, file: !2743, line: 640, type: !5312, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !5314)
!5312 = !DISubroutineType(types: !5313)
!5313 = !{!1460, !9, !1378}
!5314 = !{!5315, !5309}
!5315 = !DILocalVariable(name: "capacity", scope: !5310, file: !5233, line: 27, type: !9, align: 8)
!5316 = !DILocation(line: 27, column: 21, scope: !5310, inlinedAt: !5317)
!5317 = !DILocation(line: 27, column: 21, scope: !5287)
!5318 = !DILocalVariable(name: "alloc", scope: !5319, file: !5233, line: 27, type: !1378, align: 1)
!5319 = !DILexicalBlockFile(scope: !5320, file: !5233, discriminator: 0)
!5320 = distinct !DISubprogram(name: "with_capacity_in<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h31c9eae27dce3098E", scope: !1463, file: !2773, line: 130, type: !5302, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !5321)
!5321 = !{!5322, !5318}
!5322 = !DILocalVariable(name: "capacity", scope: !5319, file: !5233, line: 27, type: !9, align: 8)
!5323 = !DILocation(line: 27, column: 21, scope: !5319, inlinedAt: !5324)
!5324 = !DILocation(line: 641, column: 20, scope: !5311, inlinedAt: !5317)
!5325 = !DILocation(line: 24, column: 9, scope: !5287)
!5326 = !DILocation(line: 24, column: 12, scope: !5287)
!5327 = !DILocation(line: 30, column: 5, scope: !5287)
!5328 = !DILocation(line: 27, column: 43, scope: !5287)
!5329 = !DILocation(line: 27, column: 46, scope: !5287)
!5330 = !DILocation(line: 25, column: 63, scope: !5287)
!5331 = !DILocation(line: 25, column: 66, scope: !5287)
!5332 = !DILocation(line: 25, column: 20, scope: !5287)
!5333 = !DILocation(line: 30, column: 6, scope: !5287)
!5334 = !DILocation(line: 28, column: 40, scope: !5295)
!5335 = !DILocation(line: 28, column: 26, scope: !5295)
!5336 = !DILocation(line: 28, column: 9, scope: !5295)
!5337 = !DILocation(line: 29, column: 9, scope: !5295)
!5338 = !DILocation(line: 23, column: 5, scope: !5287)
!5339 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<i32>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h7464d1bc1bb9736aE", scope: !2908, file: !2907, line: 271, type: !5340, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5344, retainedNodes: !5342)
!5340 = !DISubroutineType(types: !5341)
!5341 = !{!1593, !1593}
!5342 = !{!5343}
!5343 = !DILocalVariable(name: "self", arg: 1, scope: !5339, file: !2907, line: 271, type: !1593)
!5344 = !{!5345}
!5345 = !DITemplateTypeParameter(name: "I", type: !1593)
!5346 = !DILocation(line: 271, column: 18, scope: !5339)
!5347 = !DILocation(line: 273, column: 6, scope: !5339)
!5348 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<i32>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha0c076b82c67d947E", scope: !2908, file: !2907, line: 271, type: !5349, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5353, retainedNodes: !5351)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{!615, !615}
!5351 = !{!5352}
!5352 = !DILocalVariable(name: "self", arg: 1, scope: !5348, file: !2907, line: 271, type: !615)
!5353 = !{!813}
!5354 = !DILocation(line: 271, column: 18, scope: !5348)
!5355 = !DILocation(line: 273, column: 6, scope: !5348)
!5356 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<usize>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb906d45d6c85ec06E", scope: !2908, file: !2907, line: 271, type: !2911, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2914, retainedNodes: !5357)
!5357 = !{!5358}
!5358 = !DILocalVariable(name: "self", arg: 1, scope: !5356, file: !2907, line: 271, type: !1611)
!5359 = !DILocation(line: 271, column: 18, scope: !5356)
!5360 = !DILocation(line: 273, column: 6, scope: !5356)
!5361 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h457dcd0077543f47E", scope: !5362, file: !3173, line: 246, type: !5363, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5365)
!5362 = !DINamespace(name: "{impl#1}", scope: !1379)
!5363 = !DISubroutineType(types: !5364)
!5364 = !{null, !3176, !223, !283}
!5365 = !{!5366, !5367, !5368}
!5366 = !DILocalVariable(name: "self", arg: 1, scope: !5361, file: !3173, line: 246, type: !3176)
!5367 = !DILocalVariable(name: "ptr", arg: 2, scope: !5361, file: !3173, line: 246, type: !223)
!5368 = !DILocalVariable(name: "layout", arg: 3, scope: !5361, file: !3173, line: 246, type: !283)
!5369 = !DILocation(line: 246, column: 26, scope: !5361)
!5370 = !DILocation(line: 246, column: 33, scope: !5361)
!5371 = !DILocation(line: 246, column: 51, scope: !5361)
!5372 = !DILocalVariable(name: "layout", scope: !5373, file: !3173, line: 250, type: !283, align: 8)
!5373 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h9a2e705e73cae8d9E", scope: !1379, file: !3173, line: 112, type: !5374, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5376)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{null, !246, !283}
!5376 = !{!5377, !5372}
!5377 = !DILocalVariable(name: "ptr", scope: !5373, file: !3173, line: 250, type: !246, align: 8)
!5378 = !DILocation(line: 250, column: 22, scope: !5373, inlinedAt: !5379)
!5379 = !DILocation(line: 250, column: 22, scope: !5361)
!5380 = !DILocalVariable(name: "self", scope: !5381, file: !3173, line: 250, type: !1654, align: 8)
!5381 = !DILexicalBlockFile(scope: !5382, file: !3173, discriminator: 0)
!5382 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17he74ffbdf26c1f101E", scope: !1654, file: !1653, line: 82, type: !1658, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5383)
!5383 = !{!5380}
!5384 = !DILocation(line: 250, column: 22, scope: !5381, inlinedAt: !5385)
!5385 = !DILocation(line: 131, column: 9, scope: !5386, inlinedAt: !5390)
!5386 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17heeceb5986a005c33E", scope: !283, file: !1625, line: 130, type: !3305, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5387)
!5387 = !{!5388}
!5388 = !DILocalVariable(name: "self", scope: !5389, file: !3173, line: 250, type: !2390, align: 8)
!5389 = !DILexicalBlockFile(scope: !5386, file: !3173, discriminator: 0)
!5390 = !DILocation(line: 113, column: 49, scope: !5373, inlinedAt: !5379)
!5391 = !DILocalVariable(name: "self", scope: !5392, file: !3173, line: 250, type: !289, align: 8)
!5392 = !DILexicalBlockFile(scope: !5393, file: !3173, discriminator: 0)
!5393 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3mem11valid_align10ValidAlign10as_nonzero17h1ce76b02cc65dfe9E", scope: !289, file: !1666, line: 39, type: !1667, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5394)
!5394 = !{!5391}
!5395 = !DILocation(line: 250, column: 22, scope: !5392, inlinedAt: !5385)
!5396 = !DILocation(line: 247, column: 12, scope: !5361)
!5397 = !DILocalVariable(name: "self", scope: !5398, file: !3173, line: 247, type: !2390, align: 8)
!5398 = !DILexicalBlockFile(scope: !5399, file: !3173, discriminator: 0)
!5399 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h86886a5d1a0bdab8E", scope: !283, file: !1625, line: 120, type: !3305, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5400)
!5400 = !{!5397}
!5401 = !DILocation(line: 247, column: 12, scope: !5398, inlinedAt: !5396)
!5402 = !DILocation(line: 247, column: 9, scope: !5361)
!5403 = !DILocation(line: 250, column: 30, scope: !5361)
!5404 = !DILocalVariable(name: "self", scope: !5405, file: !3173, line: 250, type: !223, align: 8)
!5405 = !DILexicalBlockFile(scope: !5406, file: !3173, discriminator: 0)
!5406 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hcc8c90d2a00f914dE", scope: !223, file: !217, line: 330, type: !251, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !5407)
!5407 = !{!5404}
!5408 = !DILocation(line: 250, column: 30, scope: !5405, inlinedAt: !5403)
!5409 = !DILocation(line: 250, column: 44, scope: !5361)
!5410 = !DILocalVariable(name: "self", scope: !5411, file: !3173, line: 250, type: !2390, align: 8)
!5411 = !DILexicalBlockFile(scope: !5412, file: !3173, discriminator: 0)
!5412 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h86886a5d1a0bdab8E", scope: !283, file: !1625, line: 120, type: !3305, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5413)
!5413 = !{!5410}
!5414 = !DILocation(line: 250, column: 22, scope: !5411, inlinedAt: !5415)
!5415 = !DILocation(line: 113, column: 34, scope: !5373, inlinedAt: !5379)
!5416 = !DILocation(line: 250, column: 22, scope: !5389, inlinedAt: !5390)
!5417 = !DILocalVariable(name: "n", scope: !5418, file: !3173, line: 250, type: !9, align: 8)
!5418 = !DILexicalBlockFile(scope: !5419, file: !3173, discriminator: 0)
!5419 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17h53476ca8305fa535E", scope: !1654, file: !1653, line: 56, type: !1675, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5420)
!5420 = !{!5417, !5421}
!5421 = !DILocalVariable(name: "runtime", scope: !5422, file: !3173, line: 250, type: !1682, align: 8)
!5422 = !DILexicalBlockFile(scope: !5423, file: !3173, discriminator: 0)
!5423 = distinct !DILexicalBlock(scope: !5419, file: !1681, line: 2336, column: 13)
!5424 = !DILocation(line: 250, column: 22, scope: !5418, inlinedAt: !5425)
!5425 = !DILocation(line: 41, column: 18, scope: !5393, inlinedAt: !5385)
!5426 = !DILocation(line: 252, column: 6, scope: !5361)
!5427 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hb5e6bf8eb8b388aeE", scope: !5362, file: !3173, line: 241, type: !5428, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5430)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{!2346, !3176, !283}
!5430 = !{!5431, !5432}
!5431 = !DILocalVariable(name: "self", arg: 1, scope: !5427, file: !3173, line: 241, type: !3176)
!5432 = !DILocalVariable(name: "layout", arg: 2, scope: !5427, file: !3173, line: 241, type: !283)
!5433 = !DILocation(line: 241, column: 24, scope: !5427)
!5434 = !DILocation(line: 241, column: 31, scope: !5427)
!5435 = !DILocation(line: 242, column: 9, scope: !5427)
!5436 = !DILocation(line: 243, column: 6, scope: !5427)
!5437 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hf95103a25a543279E", scope: !5362, file: !3173, line: 255, type: !5438, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5440)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{!2346, !3176, !223, !283, !283}
!5440 = !{!5441, !5442, !5443, !5444}
!5441 = !DILocalVariable(name: "self", arg: 1, scope: !5437, file: !3173, line: 256, type: !3176)
!5442 = !DILocalVariable(name: "ptr", arg: 2, scope: !5437, file: !3173, line: 257, type: !223)
!5443 = !DILocalVariable(name: "old_layout", arg: 3, scope: !5437, file: !3173, line: 258, type: !283)
!5444 = !DILocalVariable(name: "new_layout", arg: 4, scope: !5437, file: !3173, line: 259, type: !283)
!5445 = !DILocation(line: 256, column: 9, scope: !5437)
!5446 = !DILocation(line: 257, column: 9, scope: !5437)
!5447 = !DILocation(line: 258, column: 9, scope: !5437)
!5448 = !DILocation(line: 259, column: 9, scope: !5437)
!5449 = !DILocation(line: 262, column: 18, scope: !5437)
!5450 = !DILocation(line: 263, column: 6, scope: !5437)
!5451 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hfe7a04e7bb290008E", scope: !5362, file: !3173, line: 236, type: !5428, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5452)
!5452 = !{!5453, !5454}
!5453 = !DILocalVariable(name: "self", arg: 1, scope: !5451, file: !3173, line: 236, type: !3176)
!5454 = !DILocalVariable(name: "layout", arg: 2, scope: !5451, file: !3173, line: 236, type: !283)
!5455 = !DILocation(line: 236, column: 17, scope: !5451)
!5456 = !DILocation(line: 236, column: 24, scope: !5451)
!5457 = !DILocation(line: 237, column: 9, scope: !5451)
!5458 = !DILocation(line: 238, column: 6, scope: !5451)
!5459 = distinct !DISubprogram(name: "spec_eq<i32, i32, 3>", linkageName: "_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h25ffee337b5d26ffE", scope: !5460, file: !2084, line: 148, type: !2119, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2530, retainedNodes: !5461)
!5460 = !DINamespace(name: "{impl#9}", scope: !2086)
!5461 = !{!5462, !5463, !5464}
!5462 = !DILocalVariable(name: "a", arg: 1, scope: !5459, file: !2084, line: 148, type: !63)
!5463 = !DILocalVariable(name: "b", arg: 2, scope: !5459, file: !2084, line: 148, type: !63)
!5464 = !DILocalVariable(name: "b", scope: !5465, file: !2084, line: 151, type: !63, align: 8)
!5465 = distinct !DILexicalBlock(scope: !5459, file: !2084, line: 151, column: 13)
!5466 = !DILocation(line: 148, column: 16, scope: !5459)
!5467 = !DILocation(line: 148, column: 28, scope: !5459)
!5468 = !DILocation(line: 151, column: 23, scope: !5459)
!5469 = !DILocalVariable(name: "self", scope: !5470, file: !2084, line: 151, type: !546, align: 8)
!5470 = !DILexicalBlockFile(scope: !5471, file: !2084, discriminator: 0)
!5471 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he14902a3a76d548fE", scope: !611, file: !610, line: 476, type: !2224, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5472)
!5472 = !{!5469}
!5473 = !DILocation(line: 151, column: 23, scope: !5470, inlinedAt: !5468)
!5474 = !DILocalVariable(name: "self", scope: !5475, file: !2084, line: 151, type: !622, align: 8)
!5475 = !DILexicalBlockFile(scope: !5476, file: !2084, discriminator: 0)
!5476 = distinct !DISubprogram(name: "cast<i32, [i32; 3]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hd1ca0a94c104a409E", scope: !2212, file: !2211, line: 46, type: !5477, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5481, retainedNodes: !5480)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{!5479, !622}
!5479 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 3]", baseType: !64, size: 64, align: 64, dwarfAddressSpace: 0)
!5480 = !{!5474}
!5481 = !{!467, !2549}
!5482 = !DILocation(line: 151, column: 23, scope: !5475, inlinedAt: !5468)
!5483 = !DILocation(line: 151, column: 21, scope: !5459)
!5484 = !DILocation(line: 151, column: 17, scope: !5465)
!5485 = !DILocation(line: 152, column: 13, scope: !5465)
!5486 = !DILocation(line: 154, column: 6, scope: !5459)
!5487 = distinct !DISubprogram(name: "spec_eq<i32, i32, 1>", linkageName: "_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h3c017ad696ca7813E", scope: !5460, file: !2084, line: 148, type: !2109, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2530, retainedNodes: !5488)
!5488 = !{!5489, !5490, !5491}
!5489 = !DILocalVariable(name: "a", arg: 1, scope: !5487, file: !2084, line: 148, type: !75)
!5490 = !DILocalVariable(name: "b", arg: 2, scope: !5487, file: !2084, line: 148, type: !75)
!5491 = !DILocalVariable(name: "b", scope: !5492, file: !2084, line: 151, type: !75, align: 8)
!5492 = distinct !DILexicalBlock(scope: !5487, file: !2084, line: 151, column: 13)
!5493 = !DILocation(line: 148, column: 16, scope: !5487)
!5494 = !DILocation(line: 148, column: 28, scope: !5487)
!5495 = !DILocation(line: 151, column: 23, scope: !5487)
!5496 = !DILocalVariable(name: "self", scope: !5497, file: !2084, line: 151, type: !546, align: 8)
!5497 = !DILexicalBlockFile(scope: !5498, file: !2084, discriminator: 0)
!5498 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he14902a3a76d548fE", scope: !611, file: !610, line: 476, type: !2224, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5499)
!5499 = !{!5496}
!5500 = !DILocation(line: 151, column: 23, scope: !5497, inlinedAt: !5495)
!5501 = !DILocalVariable(name: "self", scope: !5502, file: !2084, line: 151, type: !622, align: 8)
!5502 = !DILexicalBlockFile(scope: !5503, file: !2084, discriminator: 0)
!5503 = distinct !DISubprogram(name: "cast<i32, [i32; 1]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hb41dddbb0b5af96cE", scope: !2212, file: !2211, line: 46, type: !5504, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5508, retainedNodes: !5507)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!5506, !622}
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 1]", baseType: !76, size: 64, align: 64, dwarfAddressSpace: 0)
!5507 = !{!5501}
!5508 = !{!467, !2567}
!5509 = !DILocation(line: 151, column: 23, scope: !5502, inlinedAt: !5495)
!5510 = !DILocation(line: 151, column: 21, scope: !5487)
!5511 = !DILocation(line: 151, column: 17, scope: !5492)
!5512 = !DILocation(line: 152, column: 13, scope: !5492)
!5513 = !DILocation(line: 154, column: 6, scope: !5487)
!5514 = distinct !DISubprogram(name: "spec_eq<i32, i32, 6>", linkageName: "_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h3d79f9b6c556ee67E", scope: !5460, file: !2084, line: 148, type: !2129, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2530, retainedNodes: !5515)
!5515 = !{!5516, !5517, !5518}
!5516 = !DILocalVariable(name: "a", arg: 1, scope: !5514, file: !2084, line: 148, type: !99)
!5517 = !DILocalVariable(name: "b", arg: 2, scope: !5514, file: !2084, line: 148, type: !99)
!5518 = !DILocalVariable(name: "b", scope: !5519, file: !2084, line: 151, type: !99, align: 8)
!5519 = distinct !DILexicalBlock(scope: !5514, file: !2084, line: 151, column: 13)
!5520 = !DILocation(line: 148, column: 16, scope: !5514)
!5521 = !DILocation(line: 148, column: 28, scope: !5514)
!5522 = !DILocation(line: 151, column: 23, scope: !5514)
!5523 = !DILocalVariable(name: "self", scope: !5524, file: !2084, line: 151, type: !546, align: 8)
!5524 = !DILexicalBlockFile(scope: !5525, file: !2084, discriminator: 0)
!5525 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he14902a3a76d548fE", scope: !611, file: !610, line: 476, type: !2224, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5526)
!5526 = !{!5523}
!5527 = !DILocation(line: 151, column: 23, scope: !5524, inlinedAt: !5522)
!5528 = !DILocalVariable(name: "self", scope: !5529, file: !2084, line: 151, type: !622, align: 8)
!5529 = !DILexicalBlockFile(scope: !5530, file: !2084, discriminator: 0)
!5530 = distinct !DISubprogram(name: "cast<i32, [i32; 6]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hcde248eb117e2b7bE", scope: !2212, file: !2211, line: 46, type: !5531, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5535, retainedNodes: !5534)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{!5533, !622}
!5533 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 6]", baseType: !100, size: 64, align: 64, dwarfAddressSpace: 0)
!5534 = !{!5528}
!5535 = !{!467, !2603}
!5536 = !DILocation(line: 151, column: 23, scope: !5529, inlinedAt: !5522)
!5537 = !DILocation(line: 151, column: 21, scope: !5514)
!5538 = !DILocation(line: 151, column: 17, scope: !5519)
!5539 = !DILocation(line: 152, column: 13, scope: !5519)
!5540 = !DILocation(line: 154, column: 6, scope: !5514)
!5541 = distinct !DISubprogram(name: "spec_eq<i32, i32, 5>", linkageName: "_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17h4daae926dd5717a6E", scope: !5460, file: !2084, line: 148, type: !2099, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2530, retainedNodes: !5542)
!5542 = !{!5543, !5544, !5545}
!5543 = !DILocalVariable(name: "a", arg: 1, scope: !5541, file: !2084, line: 148, type: !87)
!5544 = !DILocalVariable(name: "b", arg: 2, scope: !5541, file: !2084, line: 148, type: !87)
!5545 = !DILocalVariable(name: "b", scope: !5546, file: !2084, line: 151, type: !87, align: 8)
!5546 = distinct !DILexicalBlock(scope: !5541, file: !2084, line: 151, column: 13)
!5547 = !DILocation(line: 148, column: 16, scope: !5541)
!5548 = !DILocation(line: 148, column: 28, scope: !5541)
!5549 = !DILocation(line: 151, column: 23, scope: !5541)
!5550 = !DILocalVariable(name: "self", scope: !5551, file: !2084, line: 151, type: !546, align: 8)
!5551 = !DILexicalBlockFile(scope: !5552, file: !2084, discriminator: 0)
!5552 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he14902a3a76d548fE", scope: !611, file: !610, line: 476, type: !2224, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5553)
!5553 = !{!5550}
!5554 = !DILocation(line: 151, column: 23, scope: !5551, inlinedAt: !5549)
!5555 = !DILocalVariable(name: "self", scope: !5556, file: !2084, line: 151, type: !622, align: 8)
!5556 = !DILexicalBlockFile(scope: !5557, file: !2084, discriminator: 0)
!5557 = distinct !DISubprogram(name: "cast<i32, [i32; 5]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h4e42314d2691fe46E", scope: !2212, file: !2211, line: 46, type: !5558, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5562, retainedNodes: !5561)
!5558 = !DISubroutineType(types: !5559)
!5559 = !{!5560, !622}
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 5]", baseType: !88, size: 64, align: 64, dwarfAddressSpace: 0)
!5561 = !{!5555}
!5562 = !{!467, !2585}
!5563 = !DILocation(line: 151, column: 23, scope: !5556, inlinedAt: !5549)
!5564 = !DILocation(line: 151, column: 21, scope: !5541)
!5565 = !DILocation(line: 151, column: 17, scope: !5546)
!5566 = !DILocation(line: 152, column: 13, scope: !5546)
!5567 = !DILocation(line: 154, column: 6, scope: !5541)
!5568 = distinct !DISubprogram(name: "spec_eq<i32, i32, 10>", linkageName: "_ZN69_$LT$T$u20$as$u20$core..array..equality..SpecArrayEq$LT$U$C$_$GT$$GT$7spec_eq17hacddd80052b2be27E", scope: !5460, file: !2084, line: 148, type: !2087, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2530, retainedNodes: !5569)
!5569 = !{!5570, !5571, !5572}
!5570 = !DILocalVariable(name: "a", arg: 1, scope: !5568, file: !2084, line: 148, type: !42)
!5571 = !DILocalVariable(name: "b", arg: 2, scope: !5568, file: !2084, line: 148, type: !42)
!5572 = !DILocalVariable(name: "b", scope: !5573, file: !2084, line: 151, type: !42, align: 8)
!5573 = distinct !DILexicalBlock(scope: !5568, file: !2084, line: 151, column: 13)
!5574 = !DILocation(line: 148, column: 16, scope: !5568)
!5575 = !DILocation(line: 148, column: 28, scope: !5568)
!5576 = !DILocation(line: 151, column: 23, scope: !5568)
!5577 = !DILocalVariable(name: "self", scope: !5578, file: !2084, line: 151, type: !546, align: 8)
!5578 = !DILexicalBlockFile(scope: !5579, file: !2084, discriminator: 0)
!5579 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he14902a3a76d548fE", scope: !611, file: !610, line: 476, type: !2224, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5580)
!5580 = !{!5577}
!5581 = !DILocation(line: 151, column: 23, scope: !5578, inlinedAt: !5576)
!5582 = !DILocalVariable(name: "self", scope: !5583, file: !2084, line: 151, type: !622, align: 8)
!5583 = !DILexicalBlockFile(scope: !5584, file: !2084, discriminator: 0)
!5584 = distinct !DISubprogram(name: "cast<i32, [i32; 10]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hee2b80c985c4a823E", scope: !2212, file: !2211, line: 46, type: !5585, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5589, retainedNodes: !5588)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!5587, !622}
!5587 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [i32; 10]", baseType: !43, size: 64, align: 64, dwarfAddressSpace: 0)
!5588 = !{!5582}
!5589 = !{!467, !2495}
!5590 = !DILocation(line: 151, column: 23, scope: !5583, inlinedAt: !5576)
!5591 = !DILocation(line: 151, column: 21, scope: !5568)
!5592 = !DILocation(line: 151, column: 17, scope: !5573)
!5593 = !DILocation(line: 152, column: 13, scope: !5573)
!5594 = !DILocation(line: 154, column: 6, scope: !5568)
!5595 = distinct !DISubprogram(name: "is_zero<i32, 4>", linkageName: "_ZN70_$LT$$u5b$T$u3b$$u20$N$u5d$$u20$as$u20$alloc..vec..is_zero..IsZero$GT$7is_zero17h4e5a7a79206ce1b1E", scope: !5596, file: !2712, line: 56, type: !5597, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5599)
!5596 = !DINamespace(name: "{impl#2}", scope: !2714)
!5597 = !DISubroutineType(types: !5598)
!5598 = !{!710, !640}
!5599 = !{!5600}
!5600 = !DILocalVariable(name: "self", arg: 1, scope: !5595, file: !2712, line: 56, type: !640)
!5601 = !DILocation(line: 56, column: 16, scope: !5595)
!5602 = !DILocation(line: 64, column: 9, scope: !5595)
!5603 = !DILocation(line: 64, column: 20, scope: !5595)
!5604 = !DILocalVariable(name: "self", scope: !5605, file: !2712, line: 64, type: !546, align: 8)
!5605 = !DILexicalBlockFile(scope: !5606, file: !2712, discriminator: 0)
!5606 = distinct !DISubprogram(name: "iter<i32>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h356e437823ae69e3E", scope: !611, file: !610, line: 734, type: !613, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5607)
!5607 = !{!5604}
!5608 = !DILocation(line: 64, column: 20, scope: !5605, inlinedAt: !5603)
!5609 = !DILocation(line: 65, column: 6, scope: !5595)
!5610 = distinct !DISubprogram(name: "drop<i32, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h5df701328a99ba49E", scope: !5611, file: !2743, line: 2915, type: !5612, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5614)
!5611 = !DINamespace(name: "{impl#28}", scope: !1365)
!5612 = !DISubroutineType(types: !5613)
!5613 = !{null, !2816}
!5614 = !{!5615}
!5615 = !DILocalVariable(name: "self", arg: 1, scope: !5610, file: !2743, line: 2915, type: !2816)
!5616 = !DILocation(line: 2915, column: 13, scope: !5610)
!5617 = !DILocation(line: 2920, column: 62, scope: !5610)
!5618 = !DILocalVariable(name: "data", scope: !5619, file: !2743, line: 2920, type: !1015, align: 8)
!5619 = !DILexicalBlockFile(scope: !5620, file: !2743, discriminator: 0)
!5620 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<i32>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h54e068ff219e388aE", scope: !220, file: !921, line: 727, type: !5621, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5627)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{!5623, !1015, !9}
!5623 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [i32]", file: !2, size: 128, align: 64, elements: !5624, templateParams: !23, identifier: "882e8de4e8ad4bf739e64bffb4a9228")
!5624 = !{!5625, !5626}
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5623, file: !2, baseType: !549, size: 64, align: 64)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5623, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5627 = !{!5618, !5628}
!5628 = !DILocalVariable(name: "len", scope: !5619, file: !2743, line: 2920, type: !9, align: 8)
!5629 = !DILocation(line: 2920, column: 32, scope: !5619, inlinedAt: !5630)
!5630 = !DILocation(line: 2920, column: 32, scope: !5610)
!5631 = !DILocation(line: 2920, column: 81, scope: !5610)
!5632 = !DILocalVariable(name: "self", scope: !5633, file: !2743, line: 2920, type: !1015, align: 8)
!5633 = !DILexicalBlockFile(scope: !5634, file: !2743, discriminator: 0)
!5634 = distinct !DISubprogram(name: "cast<i32, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h72e5e347475ed22bE", scope: !1540, file: !1539, line: 45, type: !5635, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5638, retainedNodes: !5637)
!5635 = !DISubroutineType(types: !5636)
!5636 = !{!1529, !1015}
!5637 = !{!5632}
!5638 = !{!467, !2513}
!5639 = !DILocation(line: 2920, column: 32, scope: !5633, inlinedAt: !5640)
!5640 = !DILocation(line: 728, column: 24, scope: !5620, inlinedAt: !5630)
!5641 = !DILocalVariable(name: "data_address", scope: !5642, file: !2743, line: 2920, type: !1529, align: 8)
!5642 = !DILexicalBlockFile(scope: !5643, file: !2743, discriminator: 0)
!5643 = distinct !DISubprogram(name: "from_raw_parts_mut<[i32]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h85d3ff21638a0b1bE", scope: !1526, file: !1525, line: 127, type: !5644, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5646)
!5644 = !DISubroutineType(types: !5645)
!5645 = !{!5623, !1529, !9}
!5646 = !{!5641, !5647}
!5647 = !DILocalVariable(name: "metadata", scope: !5642, file: !2743, line: 2920, type: !9, align: 8)
!5648 = !DILocation(line: 2920, column: 32, scope: !5642, inlinedAt: !5649)
!5649 = !DILocation(line: 728, column: 5, scope: !5620, inlinedAt: !5630)
!5650 = !DILocation(line: 2920, column: 13, scope: !5610)
!5651 = !DILocation(line: 2923, column: 6, scope: !5610)
!5652 = distinct !DISubprogram(name: "drop<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb4fef587a28f2bddE", scope: !5611, file: !2743, line: 2915, type: !5653, scopeLine: 2915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !5655)
!5653 = !DISubroutineType(types: !5654)
!5654 = !{null, !2747}
!5655 = !{!5656}
!5656 = !DILocalVariable(name: "self", arg: 1, scope: !5652, file: !2743, line: 2915, type: !2747)
!5657 = !DILocation(line: 2915, column: 13, scope: !5652)
!5658 = !DILocation(line: 2920, column: 62, scope: !5652)
!5659 = !DILocalVariable(name: "data", scope: !5660, file: !2743, line: 2920, type: !2746, align: 8)
!5660 = !DILexicalBlockFile(scope: !5661, file: !2743, discriminator: 0)
!5661 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<[i32; 4]>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17ha181dfc999554fb2E", scope: !220, file: !921, line: 727, type: !5662, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5669)
!5662 = !DISubroutineType(types: !5663)
!5663 = !{!5664, !2746, !9}
!5664 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [[i32; 4]]", file: !2, size: 128, align: 64, elements: !5665, templateParams: !23, identifier: "df9d46a5d2dc459ec096430e0a2a8bda")
!5665 = !{!5666, !5668}
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5664, file: !2, baseType: !5667, size: 64, align: 64)
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64, align: 64, dwarfAddressSpace: 0)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5664, file: !2, baseType: !9, size: 64, align: 64, offset: 64)
!5669 = !{!5659, !5670}
!5670 = !DILocalVariable(name: "len", scope: !5660, file: !2743, line: 2920, type: !9, align: 8)
!5671 = !DILocation(line: 2920, column: 32, scope: !5660, inlinedAt: !5672)
!5672 = !DILocation(line: 2920, column: 32, scope: !5652)
!5673 = !DILocation(line: 2920, column: 81, scope: !5652)
!5674 = !DILocalVariable(name: "self", scope: !5675, file: !2743, line: 2920, type: !2746, align: 8)
!5675 = !DILexicalBlockFile(scope: !5676, file: !2743, discriminator: 0)
!5676 = distinct !DISubprogram(name: "cast<[i32; 4], ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h3c6061de3d741381E", scope: !1540, file: !1539, line: 45, type: !5677, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5680, retainedNodes: !5679)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{!1529, !2746}
!5679 = !{!5674}
!5680 = !{!1474, !2513}
!5681 = !DILocation(line: 2920, column: 32, scope: !5675, inlinedAt: !5682)
!5682 = !DILocation(line: 728, column: 24, scope: !5661, inlinedAt: !5672)
!5683 = !DILocalVariable(name: "data_address", scope: !5684, file: !2743, line: 2920, type: !1529, align: 8)
!5684 = !DILexicalBlockFile(scope: !5685, file: !2743, discriminator: 0)
!5685 = distinct !DISubprogram(name: "from_raw_parts_mut<[[i32; 4]]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hbc365bb4a15c1b2eE", scope: !1526, file: !1525, line: 127, type: !5686, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5688)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!5664, !1529, !9}
!5688 = !{!5683, !5689}
!5689 = !DILocalVariable(name: "metadata", scope: !5684, file: !2743, line: 2920, type: !9, align: 8)
!5690 = !DILocation(line: 2920, column: 32, scope: !5684, inlinedAt: !5691)
!5691 = !DILocation(line: 728, column: 5, scope: !5661, inlinedAt: !5672)
!5692 = !DILocation(line: 2920, column: 13, scope: !5652)
!5693 = !DILocation(line: 2923, column: 6, scope: !5652)
!5694 = distinct !DISubprogram(name: "drop<[i32; 4], alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he52222e5fff1b3f5E", scope: !5695, file: !2773, line: 477, type: !5696, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1479, retainedNodes: !5698)
!5695 = !DINamespace(name: "{impl#3}", scope: !210)
!5696 = !DISubroutineType(types: !5697)
!5697 = !{null, !4665}
!5698 = !{!5699, !5700, !5702}
!5699 = !DILocalVariable(name: "self", arg: 1, scope: !5694, file: !2773, line: 477, type: !4665)
!5700 = !DILocalVariable(name: "ptr", scope: !5701, file: !2773, line: 478, type: !223, align: 8)
!5701 = distinct !DILexicalBlock(scope: !5694, file: !2773, line: 478, column: 60)
!5702 = !DILocalVariable(name: "layout", scope: !5701, file: !2773, line: 478, type: !283, align: 8)
!5703 = !DILocation(line: 477, column: 13, scope: !5694)
!5704 = !DILocation(line: 478, column: 38, scope: !5701)
!5705 = !DILocation(line: 478, column: 16, scope: !5701)
!5706 = !DILocation(line: 478, column: 22, scope: !5701)
!5707 = !DILocation(line: 478, column: 27, scope: !5701)
!5708 = !DILocation(line: 479, column: 22, scope: !5701)
!5709 = !DILocation(line: 481, column: 6, scope: !5694)
!5710 = !DILocation(line: 478, column: 9, scope: !5694)
!5711 = distinct !DISubprogram(name: "drop<i32, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hee40db5093132691E", scope: !5695, file: !2773, line: 477, type: !5712, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1380, retainedNodes: !5714)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{null, !4854}
!5714 = !{!5715, !5716, !5718}
!5715 = !DILocalVariable(name: "self", arg: 1, scope: !5711, file: !2773, line: 477, type: !4854)
!5716 = !DILocalVariable(name: "ptr", scope: !5717, file: !2773, line: 478, type: !223, align: 8)
!5717 = distinct !DILexicalBlock(scope: !5711, file: !2773, line: 478, column: 60)
!5718 = !DILocalVariable(name: "layout", scope: !5717, file: !2773, line: 478, type: !283, align: 8)
!5719 = !DILocation(line: 477, column: 13, scope: !5711)
!5720 = !DILocation(line: 478, column: 38, scope: !5717)
!5721 = !DILocation(line: 478, column: 16, scope: !5717)
!5722 = !DILocation(line: 478, column: 22, scope: !5717)
!5723 = !DILocation(line: 478, column: 27, scope: !5717)
!5724 = !DILocation(line: 479, column: 22, scope: !5717)
!5725 = !DILocation(line: 481, column: 6, scope: !5711)
!5726 = !DILocation(line: 478, column: 9, scope: !5711)
!5727 = distinct !DISubprogram(name: "drop", linkageName: "_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h04d8fe95e94e9f97E", scope: !5728, file: !2967, line: 25, type: !5729, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5731)
!5728 = !DINamespace(name: "{impl#1}", scope: !1447)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{null, !2997}
!5731 = !{!5732}
!5732 = !DILocalVariable(name: "self", arg: 1, scope: !5727, file: !2967, line: 25, type: !2997)
!5733 = !DILocation(line: 25, column: 13, scope: !5727)
!5734 = !DILocation(line: 26, column: 21, scope: !5727)
!5735 = !DILocation(line: 26, column: 9, scope: !5727)
!5736 = !DILocation(line: 27, column: 6, scope: !5727)
!5737 = distinct !DISubprogram(name: "last<[i32; 4]>", linkageName: "_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17h064a5f7cacac13ddE", scope: !5738, file: !2743, line: 2380, type: !5739, scopeLine: 2380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5741)
!5738 = !DINamespace(name: "{impl#4}", scope: !1365)
!5739 = !DISubroutineType(types: !5740)
!5740 = !{!637, !2884}
!5741 = !{!5742}
!5742 = !DILocalVariable(name: "self", arg: 1, scope: !5737, file: !2743, line: 2380, type: !2884)
!5743 = !DILocation(line: 2380, column: 13, scope: !5737)
!5744 = !DILocation(line: 2381, column: 9, scope: !5737)
!5745 = !DILocation(line: 2382, column: 6, scope: !5737)
!5746 = distinct !DISubprogram(name: "last<i32>", linkageName: "_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4last17hab6f0eaf516c9d1cE", scope: !5738, file: !2743, line: 2380, type: !5747, scopeLine: 2380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5749)
!5747 = !DISubroutineType(types: !5748)
!5748 = !{!33, !3016}
!5749 = !{!5750}
!5750 = !DILocalVariable(name: "self", arg: 1, scope: !5746, file: !2743, line: 2380, type: !3016)
!5751 = !DILocation(line: 2380, column: 13, scope: !5746)
!5752 = !DILocation(line: 2382, column: 6, scope: !5746)
!5753 = distinct !DISubprogram(name: "next<[i32; 4]>", linkageName: "_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17h0259fdffc749672fE", scope: !5738, file: !2743, line: 2377, type: !5754, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !5757)
!5754 = !DISubroutineType(types: !5755)
!5755 = !{!637, !5756}
!5756 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::ExtendElement<[i32; 4]>", baseType: !2884, size: 64, align: 64, dwarfAddressSpace: 0)
!5757 = !{!5758}
!5758 = !DILocalVariable(name: "self", arg: 1, scope: !5753, file: !2743, line: 2377, type: !5756)
!5759 = !DILocation(line: 2377, column: 13, scope: !5753)
!5760 = !DILocation(line: 2378, column: 9, scope: !5753)
!5761 = !DILocation(line: 2379, column: 6, scope: !5753)
!5762 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN86_$LT$alloc..vec..ExtendElement$LT$T$GT$$u20$as$u20$alloc..vec..ExtendWith$LT$T$GT$$GT$4next17h2d2d28455def80d3E", scope: !5738, file: !2743, line: 2377, type: !5763, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5766)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{!33, !5765}
!5765 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::ExtendElement<i32>", baseType: !3016, size: 64, align: 64, dwarfAddressSpace: 0)
!5766 = !{!5767}
!5767 = !DILocalVariable(name: "self", arg: 1, scope: !5762, file: !2743, line: 2377, type: !5765)
!5768 = !DILocation(line: 2377, column: 13, scope: !5762)
!5769 = !DILocation(line: 2378, column: 9, scope: !5762)
!5770 = !DILocation(line: 2379, column: 6, scope: !5762)
!5771 = distinct !DISubprogram(name: "spec_next<usize>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h013f4cf64bb64df5E", scope: !5772, file: !571, line: 620, type: !1608, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !431, retainedNodes: !5773)
!5772 = !DINamespace(name: "{impl#2}", scope: !573)
!5773 = !{!5774, !5775}
!5774 = !DILocalVariable(name: "self", arg: 1, scope: !5771, file: !571, line: 620, type: !1610)
!5775 = !DILocalVariable(name: "n", scope: !5776, file: !571, line: 623, type: !9, align: 8)
!5776 = distinct !DILexicalBlock(scope: !5771, file: !571, line: 623, column: 13)
!5777 = !DILocation(line: 620, column: 18, scope: !5771)
!5778 = !DILocation(line: 621, column: 12, scope: !5771)
!5779 = !DILocation(line: 621, column: 25, scope: !5771)
!5780 = !DILocation(line: 626, column: 13, scope: !5771)
!5781 = !DILocation(line: 621, column: 9, scope: !5771)
!5782 = !DILocation(line: 623, column: 54, scope: !5771)
!5783 = !DILocation(line: 623, column: 30, scope: !5771)
!5784 = !DILocation(line: 623, column: 17, scope: !5776)
!5785 = !DILocation(line: 624, column: 31, scope: !5776)
!5786 = !DILocation(line: 624, column: 18, scope: !5776)
!5787 = !DILocation(line: 624, column: 13, scope: !5776)
!5788 = !DILocation(line: 628, column: 6, scope: !5771)
!5789 = distinct !DISubprogram(name: "spec_next<i32>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17ha3f59215a7fe2bcfE", scope: !5772, file: !571, line: 620, type: !1579, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5790)
!5790 = !{!5791, !5792}
!5791 = !DILocalVariable(name: "self", arg: 1, scope: !5789, file: !571, line: 620, type: !1592)
!5792 = !DILocalVariable(name: "n", scope: !5793, file: !571, line: 623, type: !33, align: 4)
!5793 = distinct !DILexicalBlock(scope: !5789, file: !571, line: 623, column: 13)
!5794 = !DILocation(line: 620, column: 18, scope: !5789)
!5795 = !DILocation(line: 621, column: 12, scope: !5789)
!5796 = !DILocation(line: 621, column: 25, scope: !5789)
!5797 = !DILocation(line: 626, column: 13, scope: !5789)
!5798 = !DILocation(line: 621, column: 9, scope: !5789)
!5799 = !DILocation(line: 623, column: 54, scope: !5789)
!5800 = !DILocation(line: 623, column: 30, scope: !5789)
!5801 = !DILocation(line: 623, column: 17, scope: !5793)
!5802 = !DILocation(line: 624, column: 31, scope: !5793)
!5803 = !DILocation(line: 624, column: 18, scope: !5793)
!5804 = !DILocation(line: 624, column: 13, scope: !5793)
!5805 = !DILocation(line: 628, column: 6, scope: !5789)
!5806 = !{i32 0, i32 2}
!5807 = distinct !DISubprogram(name: "all<i32, fn(&i32) -> bool>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3all17h0fa9d248f4bf82f1E", scope: !5809, file: !5808, line: 219, type: !5810, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !5818, retainedNodes: !5813)
!5808 = !DIFile(filename: "/rustc/d394408fb38c4de61f765a3ed5189d2731a1da91/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "41903112aef4079fb81d70967f52d92d")
!5809 = !DINamespace(name: "{impl#181}", scope: !616)
!5810 = !DISubroutineType(types: !5811)
!5811 = !{!710, !5812, !1152}
!5812 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<i32>", baseType: !615, size: 64, align: 64, dwarfAddressSpace: 0)
!5813 = !{!5814, !5815, !5816}
!5814 = !DILocalVariable(name: "self", arg: 1, scope: !5807, file: !5808, line: 219, type: !5812)
!5815 = !DILocalVariable(name: "f", arg: 2, scope: !5807, file: !5808, line: 219, type: !1152)
!5816 = !DILocalVariable(name: "x", scope: !5817, file: !5808, line: 224, type: !32, align: 8)
!5817 = distinct !DILexicalBlock(scope: !5807, file: !5808, line: 224, column: 49)
!5818 = !{!467, !5819}
!5819 = !DITemplateTypeParameter(name: "F", type: !1152)
!5820 = !DILocation(line: 219, column: 23, scope: !5807)
!5821 = !DILocation(line: 219, column: 34, scope: !5807)
!5822 = !DILocation(line: 224, column: 17, scope: !5807)
!5823 = !DILocation(line: 224, column: 37, scope: !5817)
!5824 = !DILocation(line: 230, column: 13, scope: !5807)
!5825 = !DILocation(line: 224, column: 27, scope: !5817)
!5826 = !DILocation(line: 224, column: 32, scope: !5817)
!5827 = !DILocation(line: 225, column: 25, scope: !5817)
!5828 = !DILocation(line: 229, column: 17, scope: !5807)
!5829 = !DILocation(line: 230, column: 14, scope: !5807)
!5830 = !DILocation(line: 225, column: 24, scope: !5817)
!5831 = !DILocation(line: 219, column: 13, scope: !5807)
!5832 = !DILocation(line: 226, column: 32, scope: !5817)
!5833 = distinct !DISubprogram(name: "next<i32>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9766c42dda2c44abE", scope: !5809, file: !5808, line: 134, type: !5834, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5847)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{!5836, !5812}
!5836 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&i32>", scope: !425, file: !2, size: 64, align: 64, elements: !5837, templateParams: !23, identifier: "324ce9e215b65561e56a4e40dc41c26a")
!5837 = !{!5838}
!5838 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5836, file: !2, size: 64, align: 64, elements: !5839, templateParams: !23, identifier: "7a132f634b787d2ff3bb697f10bd55f1", discriminator: !5846)
!5839 = !{!5840, !5842}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5838, file: !2, baseType: !5841, size: 64, align: 64, extraData: i64 0)
!5841 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5836, file: !2, size: 64, align: 64, elements: !23, templateParams: !626, identifier: "bdbca88789dba77455c6fdf7b07427bc")
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5838, file: !2, baseType: !5843, size: 64, align: 64)
!5843 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5836, file: !2, size: 64, align: 64, elements: !5844, templateParams: !626, identifier: "c74e16f3f5ba0f0f9deeaf73819c704")
!5844 = !{!5845}
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5843, file: !2, baseType: !32, size: 64, align: 64)
!5846 = !DIDerivedType(tag: DW_TAG_member, scope: !5836, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!5847 = !{!5848}
!5848 = !DILocalVariable(name: "self", arg: 1, scope: !5833, file: !5808, line: 134, type: !5812)
!5849 = !DILocation(line: 134, column: 21, scope: !5833)
!5850 = !DILocalVariable(name: "metadata", scope: !5851, file: !5808, line: 142, type: !7, align: 1)
!5851 = !DILexicalBlockFile(scope: !5852, file: !5808, discriminator: 0)
!5852 = distinct !DISubprogram(name: "from_raw_parts_mut<u8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17he411f5a623e39798E", scope: !1526, file: !1525, line: 127, type: !1527, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !5853)
!5853 = !{!5854, !5850}
!5854 = !DILocalVariable(name: "data_address", scope: !5851, file: !5808, line: 142, type: !1529, align: 8)
!5855 = !DILocation(line: 142, column: 29, scope: !5851, inlinedAt: !5856)
!5856 = !DILocation(line: 668, column: 5, scope: !5857, inlinedAt: !5858)
!5857 = distinct !DISubprogram(name: "null_mut<u8>", linkageName: "_ZN4core3ptr8null_mut17ha34011514810011bE", scope: !220, file: !921, line: 667, type: !1535, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !23)
!5858 = !DILocation(line: 38, column: 41, scope: !5859, inlinedAt: !5863)
!5859 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h04a392b9862b5fa5E", scope: !1540, file: !1539, line: 35, type: !2832, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5860)
!5860 = !{!5861}
!5861 = !DILocalVariable(name: "self", scope: !5862, file: !5808, line: 142, type: !1015, align: 8)
!5862 = !DILexicalBlockFile(scope: !5859, file: !5808, discriminator: 0)
!5863 = !DILocation(line: 142, column: 29, scope: !5833)
!5864 = !DILocalVariable(name: "metadata", scope: !5865, file: !5808, line: 144, type: !7, align: 1)
!5865 = !DILexicalBlockFile(scope: !5866, file: !5808, discriminator: 0)
!5866 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17he156d0cd117bd5ceE", scope: !1526, file: !1525, line: 110, type: !2200, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !5867)
!5867 = !{!5868, !5864}
!5868 = !DILocalVariable(name: "data_address", scope: !5865, file: !5808, line: 144, type: !6, align: 8)
!5869 = !DILocation(line: 144, column: 33, scope: !5865, inlinedAt: !5870)
!5870 = !DILocation(line: 513, column: 5, scope: !5871, inlinedAt: !5872)
!5871 = distinct !DISubprogram(name: "null<u8>", linkageName: "_ZN4core3ptr4null17hbc6567ad10197ff6E", scope: !220, file: !921, line: 512, type: !2207, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !23)
!5872 = !DILocation(line: 39, column: 43, scope: !5873, inlinedAt: !5877)
!5873 = distinct !DISubprogram(name: "is_null<i32>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17ha3ec109805c894dfE", scope: !2212, file: !2211, line: 36, type: !2214, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5874)
!5874 = !{!5875}
!5875 = !DILocalVariable(name: "self", scope: !5876, file: !5808, line: 144, type: !622, align: 8)
!5876 = !DILexicalBlockFile(scope: !5873, file: !5808, discriminator: 0)
!5877 = !DILocation(line: 144, column: 33, scope: !5833)
!5878 = !DILocalVariable(name: "self", scope: !5879, file: !5808, line: 142, type: !619, align: 8)
!5879 = !DILexicalBlockFile(scope: !5880, file: !5808, discriminator: 0)
!5880 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfff8edc501d3c834E", scope: !619, file: !217, line: 330, type: !2858, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5881)
!5881 = !{!5878}
!5882 = !DILocation(line: 142, column: 29, scope: !5879, inlinedAt: !5863)
!5883 = !DILocation(line: 142, column: 29, scope: !5862, inlinedAt: !5863)
!5884 = !DILocalVariable(name: "self", scope: !5885, file: !5808, line: 142, type: !246, align: 8)
!5885 = !DILexicalBlockFile(scope: !5886, file: !5808, discriminator: 0)
!5886 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17he2f169ba8c14c6ddE", scope: !1540, file: !1539, line: 707, type: !1552, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !5887)
!5887 = !{!5884, !5888}
!5888 = !DILocalVariable(name: "other", scope: !5885, file: !5808, line: 142, type: !246, align: 8)
!5889 = !DILocation(line: 142, column: 29, scope: !5885, inlinedAt: !5890)
!5890 = !DILocation(line: 38, column: 9, scope: !5859, inlinedAt: !5863)
!5891 = !DILocation(line: 142, column: 29, scope: !5892, inlinedAt: !5896)
!5892 = !DILexicalBlockFile(scope: !5893, file: !5808, discriminator: 0)
!5893 = distinct !DISubprogram(name: "invalid_mut<()>", linkageName: "_ZN4core3ptr11invalid_mut17h9c745b2f2d66c28aE", scope: !220, file: !921, line: 569, type: !1561, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !5894)
!5894 = !{!5895}
!5895 = !DILocalVariable(name: "addr", scope: !5892, file: !5808, line: 142, type: !9, align: 8)
!5896 = !DILocation(line: 668, column: 24, scope: !5857, inlinedAt: !5858)
!5897 = !DILocation(line: 142, column: 28, scope: !5833)
!5898 = !DILocation(line: 142, column: 21, scope: !5833)
!5899 = !DILocation(line: 143, column: 24, scope: !5833)
!5900 = !DILocation(line: 143, column: 21, scope: !5833)
!5901 = !DILocation(line: 144, column: 33, scope: !5876, inlinedAt: !5877)
!5902 = !DILocalVariable(name: "self", scope: !5903, file: !5808, line: 144, type: !226, align: 8)
!5903 = !DILexicalBlockFile(scope: !5904, file: !5808, discriminator: 0)
!5904 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17h279a62753e3007f9E", scope: !2212, file: !2211, line: 777, type: !2233, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !5905)
!5905 = !{!5902, !5906}
!5906 = !DILocalVariable(name: "other", scope: !5903, file: !5808, line: 144, type: !226, align: 8)
!5907 = !DILocation(line: 144, column: 33, scope: !5903, inlinedAt: !5908)
!5908 = !DILocation(line: 39, column: 9, scope: !5873, inlinedAt: !5877)
!5909 = !DILocation(line: 144, column: 33, scope: !5910, inlinedAt: !5914)
!5910 = !DILexicalBlockFile(scope: !5911, file: !5808, discriminator: 0)
!5911 = distinct !DISubprogram(name: "invalid<()>", linkageName: "_ZN4core3ptr7invalid17h1abd72ee80965e36E", scope: !220, file: !921, line: 538, type: !2242, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !323, retainedNodes: !5912)
!5912 = !{!5913}
!5913 = !DILocalVariable(name: "addr", scope: !5910, file: !5808, line: 144, type: !9, align: 8)
!5914 = !DILocation(line: 513, column: 20, scope: !5871, inlinedAt: !5872)
!5915 = !DILocation(line: 144, column: 32, scope: !5833)
!5916 = !DILocation(line: 144, column: 25, scope: !5833)
!5917 = !DILocation(line: 146, column: 24, scope: !5833)
!5918 = !DILocalVariable(name: "self", scope: !5919, file: !5808, line: 146, type: !619, align: 8)
!5919 = !DILexicalBlockFile(scope: !5920, file: !5808, discriminator: 0)
!5920 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfff8edc501d3c834E", scope: !619, file: !217, line: 330, type: !2858, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5921)
!5921 = !{!5918}
!5922 = !DILocation(line: 146, column: 24, scope: !5919, inlinedAt: !5923)
!5923 = !DILocation(line: 8, column: 9, scope: !5833)
!5924 = !DILocation(line: 149, column: 30, scope: !5833)
!5925 = !DILocalVariable(name: "self", scope: !5926, file: !5808, line: 149, type: !5812, align: 8)
!5926 = distinct !DISubprogram(name: "post_inc_start<i32>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17hb07f9267253fa3fbE", scope: !615, file: !5808, line: 85, type: !5927, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5929)
!5927 = !DISubroutineType(types: !5928)
!5928 = !{!622, !5812, !335}
!5929 = !{!5925, !5930, !5931}
!5930 = !DILocalVariable(name: "offset", scope: !5926, file: !5808, line: 149, type: !335, align: 8)
!5931 = !DILocalVariable(name: "old", scope: !5932, file: !5808, line: 149, type: !1015, align: 8)
!5932 = distinct !DILexicalBlock(scope: !5926, file: !5808, line: 90, column: 21)
!5933 = !DILocation(line: 149, column: 30, scope: !5926, inlinedAt: !5934)
!5934 = !DILocation(line: 53, column: 47, scope: !5833)
!5935 = !DILocation(line: 147, column: 25, scope: !5833)
!5936 = !DILocation(line: 146, column: 21, scope: !5833)
!5937 = !DILocation(line: 152, column: 14, scope: !5833)
!5938 = !DILocalVariable(name: "self", scope: !5939, file: !5808, line: 149, type: !226, align: 8)
!5939 = !DILexicalBlockFile(scope: !5940, file: !5808, discriminator: 0)
!5940 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17hcb0187a6560a47edE", scope: !2212, file: !2211, line: 536, type: !2263, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !227, retainedNodes: !5941)
!5941 = !{!5938, !5942}
!5942 = !DILocalVariable(name: "count", scope: !5939, file: !5808, line: 149, type: !335, align: 8)
!5943 = !DILocation(line: 149, column: 30, scope: !5939, inlinedAt: !5944)
!5944 = !DILocation(line: 67, column: 29, scope: !5926, inlinedAt: !5934)
!5945 = !DILocalVariable(name: "self", scope: !5946, file: !5808, line: 149, type: !619, align: 8)
!5946 = !DILexicalBlockFile(scope: !5947, file: !5808, discriminator: 0)
!5947 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfff8edc501d3c834E", scope: !619, file: !217, line: 330, type: !2858, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5948)
!5948 = !{!5945}
!5949 = !DILocation(line: 149, column: 30, scope: !5946, inlinedAt: !5950)
!5950 = !DILocation(line: 90, column: 31, scope: !5926, inlinedAt: !5934)
!5951 = !DILocation(line: 149, column: 30, scope: !5932, inlinedAt: !5934)
!5952 = !DILocalVariable(name: "self", scope: !5953, file: !5808, line: 149, type: !619, align: 8)
!5953 = !DILexicalBlockFile(scope: !5954, file: !5808, discriminator: 0)
!5954 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfff8edc501d3c834E", scope: !619, file: !217, line: 330, type: !2858, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5955)
!5955 = !{!5952}
!5956 = !DILocation(line: 149, column: 30, scope: !5953, inlinedAt: !5957)
!5957 = !DILocation(line: 93, column: 64, scope: !5932, inlinedAt: !5934)
!5958 = !DILocalVariable(name: "self", scope: !5959, file: !5808, line: 149, type: !1015, align: 8)
!5959 = !DILexicalBlockFile(scope: !5960, file: !5808, discriminator: 0)
!5960 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h459027a2f55c249fE", scope: !1540, file: !1539, line: 465, type: !3079, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5961)
!5961 = !{!5958, !5962}
!5962 = !DILocalVariable(name: "count", scope: !5959, file: !5808, line: 149, type: !335, align: 8)
!5963 = !DILocation(line: 149, column: 30, scope: !5959, inlinedAt: !5957)
!5964 = !DILocalVariable(name: "ptr", scope: !5965, file: !5808, line: 149, type: !1015, align: 8)
!5965 = !DILexicalBlockFile(scope: !5966, file: !5808, discriminator: 0)
!5966 = distinct !DISubprogram(name: "new_unchecked<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0e5e687d23c7ccf1E", scope: !619, file: !217, line: 196, type: !2293, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5967)
!5967 = !{!5964}
!5968 = !DILocation(line: 149, column: 30, scope: !5965, inlinedAt: !5969)
!5969 = !DILocation(line: 93, column: 41, scope: !5932, inlinedAt: !5934)
!5970 = !DILocation(line: 149, column: 25, scope: !5833)
!5971 = !DILocalVariable(name: "self", scope: !5972, file: !5808, line: 149, type: !619, align: 8)
!5972 = !DILexicalBlockFile(scope: !5973, file: !5808, discriminator: 0)
!5973 = distinct !DISubprogram(name: "as_ptr<i32>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hfff8edc501d3c834E", scope: !619, file: !217, line: 330, type: !2858, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !5974)
!5974 = !{!5971}
!5975 = !DILocation(line: 149, column: 30, scope: !5972, inlinedAt: !5976)
!5976 = !DILocation(line: 88, column: 21, scope: !5926, inlinedAt: !5934)
!5977 = distinct !DISubprogram(name: "rust_entry2", scope: !5979, file: !5978, line: 30, type: !5980, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !5982)
!5978 = !DIFile(filename: "src/uninitialized.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "b8a043010b9cab60e894aef403dd1964")
!5979 = !DINamespace(name: "uninitialized", scope: !1184)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{null, !419, !1015}
!5982 = !{!5983, !5984, !5985, !5987, !5989, !5991, !5993, !5995, !5997, !6013, !6018, !6020, !6023, !6026, !6037}
!5983 = !DILocalVariable(name: "sz", arg: 1, scope: !5977, file: !5978, line: 30, type: !419)
!5984 = !DILocalVariable(name: "buf", arg: 2, scope: !5977, file: !5978, line: 30, type: !1015)
!5985 = !DILocalVariable(name: "x", scope: !5986, file: !5978, line: 31, type: !33, align: 4)
!5986 = distinct !DILexicalBlock(scope: !5977, file: !5978, line: 31, column: 5)
!5987 = !DILocalVariable(name: "p", scope: !5988, file: !5978, line: 32, type: !1015, align: 8)
!5988 = distinct !DILexicalBlock(scope: !5986, file: !5978, line: 32, column: 5)
!5989 = !DILocalVariable(name: "q1", scope: !5990, file: !5978, line: 38, type: !622, align: 8)
!5990 = distinct !DILexicalBlock(scope: !5988, file: !5978, line: 38, column: 5)
!5991 = !DILocalVariable(name: "q2", scope: !5992, file: !5978, line: 39, type: !622, align: 8)
!5992 = distinct !DILexicalBlock(scope: !5990, file: !5978, line: 39, column: 5)
!5993 = !DILocalVariable(name: "q3", scope: !5994, file: !5978, line: 40, type: !1015, align: 8)
!5994 = distinct !DILexicalBlock(scope: !5992, file: !5978, line: 40, column: 5)
!5995 = !DILocalVariable(name: "q4", scope: !5996, file: !5978, line: 41, type: !1015, align: 8)
!5996 = distinct !DILexicalBlock(scope: !5994, file: !5978, line: 41, column: 5)
!5997 = !DILocalVariable(name: "f", scope: !5998, file: !5978, line: 42, type: !5999, align: 8)
!5998 = distinct !DILexicalBlock(scope: !5996, file: !5978, line: 42, column: 5)
!5999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<unsafe extern \22C\22 fn()>", scope: !425, file: !2, size: 64, align: 64, elements: !6000, templateParams: !23, identifier: "56185c42dbbd8d93ae6e42c26d54f356")
!6000 = !{!6001}
!6001 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5999, file: !2, size: 64, align: 64, elements: !6002, templateParams: !23, identifier: "d0de43b7bc6ed01c82a002c1a646e119", discriminator: !6012)
!6002 = !{!6003, !6008}
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6001, file: !2, baseType: !6004, size: 64, align: 64, extraData: i64 0)
!6004 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5999, file: !2, size: 64, align: 64, elements: !23, templateParams: !6005, identifier: "4e80b015fd961ee5af3a668479d55524")
!6005 = !{!6006}
!6006 = !DITemplateTypeParameter(name: "T", type: !6007)
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe extern \22C\22 fn()", baseType: !21, size: 64, align: 64, dwarfAddressSpace: 0)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6001, file: !2, baseType: !6009, size: 64, align: 64)
!6009 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5999, file: !2, size: 64, align: 64, elements: !6010, templateParams: !6005, identifier: "9789a6fe10048157e51a215fa06e8d23")
!6010 = !{!6011}
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6009, file: !2, baseType: !6007, size: 64, align: 64)
!6012 = !DIDerivedType(tag: DW_TAG_member, scope: !5999, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!6013 = !DILocalVariable(name: "fs", scope: !6014, file: !5978, line: 43, type: !6015, align: 8)
!6014 = distinct !DILexicalBlock(scope: !5998, file: !5978, line: 43, column: 5)
!6015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5999, size: 128, align: 64, elements: !6016)
!6016 = !{!6017}
!6017 = !DISubrange(count: 2, lowerBound: 0)
!6018 = !DILocalVariable(name: "xs", scope: !6019, file: !5978, line: 44, type: !43, align: 4)
!6019 = distinct !DILexicalBlock(scope: !6014, file: !5978, line: 44, column: 5)
!6020 = !DILocalVariable(name: "ys", scope: !6021, file: !5978, line: 45, type: !6022, align: 4)
!6021 = distinct !DILexicalBlock(scope: !6019, file: !5978, line: 45, column: 5)
!6022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 640, align: 32, elements: !638)
!6023 = !DILocalVariable(name: "zs", scope: !6024, file: !5978, line: 46, type: !6025, align: 8)
!6024 = distinct !DILexicalBlock(scope: !6021, file: !5978, line: 46, column: 5)
!6025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 256, align: 64, elements: !638)
!6026 = !DILocalVariable(name: "my_s", scope: !6027, file: !5978, line: 47, type: !6028, align: 4)
!6027 = distinct !DILexicalBlock(scope: !6024, file: !5978, line: 47, column: 5)
!6028 = !DICompositeType(tag: DW_TAG_structure_type, name: "s", scope: !5979, file: !2, size: 96, align: 32, elements: !6029, templateParams: !23, identifier: "6d1b8075a95ccb85a034e8060f22ced7")
!6029 = !{!6030, !6035, !6036}
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "a_u", scope: !6028, file: !2, baseType: !6031, size: 32, align: 32)
!6031 = !DICompositeType(tag: DW_TAG_union_type, name: "u", scope: !5979, file: !2, size: 32, align: 32, elements: !6032, templateParams: !23, identifier: "d572b975b55f696860057206ca6ab355")
!6032 = !{!6033, !6034}
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6031, file: !2, baseType: !33, size: 32, align: 32)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !6031, file: !2, baseType: !193, size: 8, align: 8)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "a_c", scope: !6028, file: !2, baseType: !193, size: 8, align: 8, offset: 32)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "a_e", scope: !6028, file: !2, baseType: !419, size: 32, align: 32, offset: 64)
!6037 = !DILocalVariable(name: "my_u", scope: !6038, file: !5978, line: 52, type: !6031, align: 4)
!6038 = distinct !DILexicalBlock(scope: !6027, file: !5978, line: 52, column: 5)
!6039 = !DILocation(line: 30, column: 38, scope: !5977)
!6040 = !DILocation(line: 30, column: 60, scope: !5977)
!6041 = !DILocation(line: 31, column: 9, scope: !5986)
!6042 = !DILocation(line: 32, column: 9, scope: !5988)
!6043 = !DILocation(line: 42, column: 9, scope: !5998)
!6044 = !DILocation(line: 43, column: 9, scope: !6014)
!6045 = !DILocation(line: 44, column: 9, scope: !6019)
!6046 = !DILocation(line: 45, column: 9, scope: !6021)
!6047 = !DILocation(line: 46, column: 9, scope: !6024)
!6048 = !DILocation(line: 47, column: 9, scope: !6027)
!6049 = !DILocation(line: 52, column: 9, scope: !6038)
!6050 = !DILocation(line: 31, column: 24, scope: !5977)
!6051 = !DILocation(line: 32, column: 25, scope: !5986)
!6052 = !DILocation(line: 33, column: 5, scope: !5988)
!6053 = !DILocation(line: 34, column: 5, scope: !5988)
!6054 = !DILocation(line: 35, column: 8, scope: !5988)
!6055 = !DILocation(line: 38, column: 38, scope: !5988)
!6056 = !DILocation(line: 38, column: 9, scope: !5990)
!6057 = !DILocation(line: 39, column: 42, scope: !5990)
!6058 = !DILocation(line: 39, column: 9, scope: !5992)
!6059 = !DILocation(line: 40, column: 36, scope: !5992)
!6060 = !DILocation(line: 40, column: 9, scope: !5994)
!6061 = !DILocation(line: 41, column: 40, scope: !5994)
!6062 = !DILocation(line: 41, column: 9, scope: !5996)
!6063 = !DILocation(line: 42, column: 55, scope: !5996)
!6064 = !DILocation(line: 43, column: 62, scope: !5998)
!6065 = !DILocation(line: 43, column: 61, scope: !5998)
!6066 = !DILocation(line: 36, column: 16, scope: !5988)
!6067 = !DILocation(line: 36, column: 9, scope: !5988)
!6068 = !DILocation(line: 35, column: 5, scope: !5988)
!6069 = !DILocation(line: 44, column: 41, scope: !6014)
!6070 = !DILocation(line: 45, column: 46, scope: !6019)
!6071 = !DILocation(line: 45, column: 45, scope: !6019)
!6072 = !DILocation(line: 46, column: 45, scope: !6021)
!6073 = !DILocation(line: 48, column: 14, scope: !6024)
!6074 = !DILocation(line: 47, column: 23, scope: !6024)
!6075 = !DILocation(line: 52, column: 23, scope: !6027)
!6076 = !DILocation(line: 53, column: 2, scope: !5977)
!6077 = distinct !DISubprogram(name: "rust_identity", scope: !6079, file: !6078, line: 18, type: !6080, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !6082)
!6078 = !DIFile(filename: "src/typedef.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "9223d5beb5942389a3ab9dd0a75f8903")
!6079 = !DINamespace(name: "typedef", scope: !1184)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{!33, !33}
!6082 = !{!6083}
!6083 = !DILocalVariable(name: "x", arg: 1, scope: !6077, file: !6078, line: 18, type: !33)
!6084 = !DILocation(line: 18, column: 40, scope: !6077)
!6085 = !DILocation(line: 20, column: 2, scope: !6077)
!6086 = distinct !DISubprogram(name: "rust_entry", scope: !6079, file: !6078, line: 22, type: !6087, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !6089)
!6087 = !DISubroutineType(types: !6088)
!6088 = !{!33}
!6089 = !{!6090, !6092, !6094, !6096, !6098, !6100, !6102, !6118, !6120}
!6090 = !DILocalVariable(name: "x", scope: !6091, file: !6078, line: 23, type: !33, align: 4)
!6091 = distinct !DILexicalBlock(scope: !6086, file: !6078, line: 23, column: 5)
!6092 = !DILocalVariable(name: "y", scope: !6093, file: !6078, line: 24, type: !33, align: 4)
!6093 = distinct !DILexicalBlock(scope: !6091, file: !6078, line: 24, column: 5)
!6094 = !DILocalVariable(name: "z", scope: !6095, file: !6078, line: 25, type: !1015, align: 8)
!6095 = distinct !DILexicalBlock(scope: !6093, file: !6078, line: 25, column: 5)
!6096 = !DILocalVariable(name: "w", scope: !6097, file: !6078, line: 26, type: !1015, align: 8)
!6097 = distinct !DILexicalBlock(scope: !6095, file: !6078, line: 26, column: 5)
!6098 = !DILocalVariable(name: "v", scope: !6099, file: !6078, line: 27, type: !1015, align: 8)
!6099 = distinct !DILexicalBlock(scope: !6097, file: !6078, line: 27, column: 5)
!6100 = !DILocalVariable(name: "u", scope: !6101, file: !6078, line: 28, type: !1015, align: 8)
!6101 = distinct !DILexicalBlock(scope: !6099, file: !6078, line: 28, column: 5)
!6102 = !DILocalVariable(name: "t", scope: !6103, file: !6078, line: 29, type: !6104, align: 8)
!6103 = distinct !DILexicalBlock(scope: !6101, file: !6078, line: 29, column: 5)
!6104 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<unsafe extern \22C\22 fn(i32) -> i32>", scope: !425, file: !2, size: 64, align: 64, elements: !6105, templateParams: !23, identifier: "9399e3c7a046050be1a25c2f86faa0a9")
!6105 = !{!6106}
!6106 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6104, file: !2, size: 64, align: 64, elements: !6107, templateParams: !23, identifier: "41d405e6a675dc61193c3c55c0f7ca9e", discriminator: !6117)
!6107 = !{!6108, !6113}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6106, file: !2, baseType: !6109, size: 64, align: 64, extraData: i64 0)
!6109 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6104, file: !2, size: 64, align: 64, elements: !23, templateParams: !6110, identifier: "b659d10ae967d273a637e48588994c4f")
!6110 = !{!6111}
!6111 = !DITemplateTypeParameter(name: "T", type: !6112)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe extern \22C\22 fn(i32) -> i32", baseType: !6080, size: 64, align: 64, dwarfAddressSpace: 0)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6106, file: !2, baseType: !6114, size: 64, align: 64)
!6114 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6104, file: !2, size: 64, align: 64, elements: !6115, templateParams: !6110, identifier: "7a912f6ce04a0553fd034dcf993020a2")
!6115 = !{!6116}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6114, file: !2, baseType: !6112, size: 64, align: 64)
!6117 = !DIDerivedType(tag: DW_TAG_member, scope: !6104, file: !2, baseType: !115, size: 64, align: 64, flags: DIFlagArtificial)
!6118 = !DILocalVariable(name: "n", scope: !6119, file: !6078, line: 32, type: !33, align: 4)
!6119 = distinct !DILexicalBlock(scope: !6103, file: !6078, line: 32, column: 5)
!6120 = !DILocalVariable(name: "n_0", scope: !6121, file: !6078, line: 33, type: !6122, align: 8)
!6121 = distinct !DILexicalBlock(scope: !6119, file: !6078, line: 33, column: 5)
!6122 = !DIBasicType(name: "i64", size: 64, encoding: DW_ATE_signed)
!6123 = !DILocation(line: 23, column: 9, scope: !6091)
!6124 = !DILocation(line: 29, column: 9, scope: !6103)
!6125 = !DILocation(line: 23, column: 25, scope: !6086)
!6126 = !DILocation(line: 24, column: 21, scope: !6091)
!6127 = !DILocation(line: 24, column: 9, scope: !6093)
!6128 = !DILocation(line: 25, column: 26, scope: !6093)
!6129 = !DILocation(line: 25, column: 9, scope: !6095)
!6130 = !DILocation(line: 26, column: 28, scope: !6095)
!6131 = !DILocation(line: 26, column: 9, scope: !6097)
!6132 = !DILocation(line: 27, column: 28, scope: !6097)
!6133 = !DILocation(line: 27, column: 9, scope: !6099)
!6134 = !DILocation(line: 28, column: 35, scope: !6099)
!6135 = !DILocation(line: 28, column: 9, scope: !6101)
!6136 = !DILocation(line: 29, column: 32, scope: !6101)
!6137 = !DILocation(line: 32, column: 29, scope: !6103)
!6138 = !DILocation(line: 32, column: 9, scope: !6119)
!6139 = !DILocation(line: 33, column: 29, scope: !6119)
!6140 = !DILocation(line: 33, column: 9, scope: !6121)
!6141 = !DILocation(line: 35, column: 2, scope: !6086)
!6142 = distinct !DISubprogram(name: "rust_malloc_test", scope: !6144, file: !6143, line: 16, type: !5980, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !6145)
!6143 = !DIFile(filename: "src/malloc.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "8022f7f2ec4175408dd6a39daa6a2907")
!6144 = !DINamespace(name: "malloc", scope: !1184)
!6145 = !{!6146, !6147, !6148, !6150, !6154, !6156, !6158, !6160}
!6146 = !DILocalVariable(name: "buffer_size", arg: 1, scope: !6142, file: !6143, line: 17, type: !419)
!6147 = !DILocalVariable(name: "buffer", arg: 2, scope: !6142, file: !6143, line: 18, type: !1015)
!6148 = !DILocalVariable(name: "i", scope: !6149, file: !6143, line: 20, type: !33, align: 4)
!6149 = distinct !DILexicalBlock(scope: !6142, file: !6143, line: 20, column: 5)
!6150 = !DILocalVariable(name: "p", scope: !6151, file: !6143, line: 21, type: !6152, align: 8)
!6151 = distinct !DILexicalBlock(scope: !6149, file: !6143, line: 21, column: 5)
!6152 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut *mut core::ffi::c_void", baseType: !6153, size: 64, align: 64, dwarfAddressSpace: 0)
!6153 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::ffi::c_void", baseType: !198, size: 64, align: 64, dwarfAddressSpace: 0)
!6154 = !DILocalVariable(name: "ip", scope: !6155, file: !6143, line: 25, type: !1015, align: 8)
!6155 = distinct !DILexicalBlock(scope: !6151, file: !6143, line: 25, column: 5)
!6156 = !DILocalVariable(name: "fresh0", scope: !6157, file: !6143, line: 29, type: !33, align: 4)
!6157 = distinct !DILexicalBlock(scope: !6155, file: !6143, line: 29, column: 5)
!6158 = !DILocalVariable(name: "fresh1", scope: !6159, file: !6143, line: 39, type: !33, align: 4)
!6159 = distinct !DILexicalBlock(scope: !6157, file: !6143, line: 39, column: 5)
!6160 = !DILocalVariable(name: "fresh2", scope: !6161, file: !6143, line: 42, type: !33, align: 4)
!6161 = distinct !DILexicalBlock(scope: !6159, file: !6143, line: 42, column: 5)
!6162 = !DILocation(line: 17, column: 5, scope: !6142)
!6163 = !DILocation(line: 18, column: 5, scope: !6142)
!6164 = !DILocation(line: 20, column: 9, scope: !6149)
!6165 = !DILocation(line: 25, column: 9, scope: !6155)
!6166 = !DILocation(line: 20, column: 34, scope: !6142)
!6167 = !DILocation(line: 22, column: 9, scope: !6149)
!6168 = !DILocation(line: 21, column: 45, scope: !6149)
!6169 = !DILocation(line: 21, column: 9, scope: !6151)
!6170 = !DILocation(line: 24, column: 10, scope: !6151)
!6171 = !DILocation(line: 24, column: 5, scope: !6151)
!6172 = !DILocation(line: 26, column: 9, scope: !6151)
!6173 = !DILocation(line: 25, column: 40, scope: !6151)
!6174 = !DILocation(line: 28, column: 5, scope: !6155)
!6175 = !DILocation(line: 29, column: 18, scope: !6155)
!6176 = !DILocation(line: 29, column: 9, scope: !6157)
!6177 = !DILocation(line: 30, column: 9, scope: !6157)
!6178 = !DILocation(line: 30, column: 5, scope: !6157)
!6179 = !DILocation(line: 31, column: 39, scope: !6157)
!6180 = !DILocation(line: 31, column: 20, scope: !6157)
!6181 = !DILocalVariable(name: "self", arg: 1, scope: !6182, file: !1539, line: 465, type: !1015)
!6182 = distinct !DISubprogram(name: "offset<i32>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17h459027a2f55c249fE", scope: !1540, file: !1539, line: 465, type: !3079, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !6183)
!6183 = !{!6181, !6184}
!6184 = !DILocalVariable(name: "count", arg: 2, scope: !6182, file: !1539, line: 465, type: !335)
!6185 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6186)
!6186 = distinct !DILocation(line: 31, column: 6, scope: !6157)
!6187 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6186)
!6188 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6186)
!6189 = !DILocation(line: 31, column: 6, scope: !6157)
!6190 = !DILocation(line: 31, column: 5, scope: !6157)
!6191 = !DILocation(line: 33, column: 9, scope: !6157)
!6192 = !DILocation(line: 35, column: 27, scope: !6157)
!6193 = !DILocalVariable(name: "self", arg: 1, scope: !6194, file: !659, line: 1254, type: !115)
!6194 = distinct !DISubprogram(name: "wrapping_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_mul17hb98dec13d905c3dcE", scope: !6195, file: !659, line: 1254, type: !6196, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !6198)
!6195 = !DINamespace(name: "{impl#9}", scope: !588)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{!115, !115, !115}
!6198 = !{!6193, !6199}
!6199 = !DILocalVariable(name: "rhs", arg: 2, scope: !6194, file: !659, line: 1254, type: !115)
!6200 = !DILocation(line: 1254, column: 35, scope: !6194, inlinedAt: !6201)
!6201 = distinct !DILocation(line: 34, column: 9, scope: !6157)
!6202 = !DILocation(line: 1254, column: 41, scope: !6194, inlinedAt: !6201)
!6203 = !DILocation(line: 34, column: 9, scope: !6157)
!6204 = !DILocation(line: 32, column: 10, scope: !6157)
!6205 = !DILocation(line: 32, column: 5, scope: !6157)
!6206 = !DILocation(line: 37, column: 6, scope: !6157)
!6207 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6208)
!6208 = distinct !DILocation(line: 37, column: 6, scope: !6157)
!6209 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6208)
!6210 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6208)
!6211 = !DILocation(line: 37, column: 5, scope: !6157)
!6212 = !DILocation(line: 38, column: 6, scope: !6157)
!6213 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6214)
!6214 = distinct !DILocation(line: 38, column: 6, scope: !6157)
!6215 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6214)
!6216 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6214)
!6217 = !DILocation(line: 38, column: 5, scope: !6157)
!6218 = !DILocation(line: 39, column: 18, scope: !6157)
!6219 = !DILocation(line: 39, column: 9, scope: !6159)
!6220 = !DILocation(line: 40, column: 9, scope: !6159)
!6221 = !DILocation(line: 40, column: 5, scope: !6159)
!6222 = !DILocation(line: 41, column: 40, scope: !6159)
!6223 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6224)
!6224 = distinct !DILocation(line: 41, column: 40, scope: !6159)
!6225 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6224)
!6226 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6224)
!6227 = !DILocation(line: 41, column: 39, scope: !6159)
!6228 = !DILocation(line: 41, column: 20, scope: !6159)
!6229 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6230)
!6230 = distinct !DILocation(line: 41, column: 6, scope: !6159)
!6231 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6230)
!6232 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6230)
!6233 = !DILocation(line: 41, column: 6, scope: !6159)
!6234 = !DILocation(line: 41, column: 5, scope: !6159)
!6235 = !DILocation(line: 42, column: 18, scope: !6159)
!6236 = !DILocation(line: 42, column: 9, scope: !6161)
!6237 = !DILocation(line: 43, column: 9, scope: !6161)
!6238 = !DILocation(line: 43, column: 5, scope: !6161)
!6239 = !DILocation(line: 44, column: 40, scope: !6161)
!6240 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6241)
!6241 = distinct !DILocation(line: 44, column: 40, scope: !6161)
!6242 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6241)
!6243 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6241)
!6244 = !DILocation(line: 44, column: 39, scope: !6161)
!6245 = !DILocation(line: 44, column: 20, scope: !6161)
!6246 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6247)
!6247 = distinct !DILocation(line: 44, column: 6, scope: !6161)
!6248 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6247)
!6249 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6247)
!6250 = !DILocation(line: 44, column: 6, scope: !6161)
!6251 = !DILocation(line: 44, column: 5, scope: !6161)
!6252 = !DILocation(line: 45, column: 10, scope: !6161)
!6253 = !DILocation(line: 45, column: 5, scope: !6161)
!6254 = !DILocation(line: 46, column: 2, scope: !6142)
!6255 = distinct !DISubprogram(name: "rust_sizeofs", scope: !6257, file: !6256, line: 33, type: !5980, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !6258)
!6256 = !DIFile(filename: "src/sizeofs.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "757e9e8662bf11c7d7aaeef5c3678729")
!6257 = !DINamespace(name: "sizeofs", scope: !1184)
!6258 = !{!6259, !6260, !6261, !6263, !6265, !6267, !6269, !6271, !6273, !6275, !6277, !6279, !6281, !6283, !6285, !6287, !6289, !6291, !6293, !6295, !6297, !6299, !6301, !6303, !6305, !6307, !6309, !6311, !6313, !6315, !6317, !6319, !6321, !6323, !6325, !6327, !6329, !6331, !6333, !6335, !6337, !6339, !6341, !6343, !6345, !6347, !6349, !6351, !6353, !6355, !6357, !6359, !6361, !6363, !6365, !6367, !6369, !6371, !6373, !6375, !6377, !6379, !6381, !6384, !6386, !6388, !6390, !6392, !6394, !6396, !6398, !6400, !6402, !6404, !6406, !6408, !6410, !6412, !6414, !6416}
!6259 = !DILocalVariable(name: "n", arg: 1, scope: !6255, file: !6256, line: 34, type: !419)
!6260 = !DILocalVariable(name: "buffer", arg: 2, scope: !6255, file: !6256, line: 35, type: !1015)
!6261 = !DILocalVariable(name: "i", scope: !6262, file: !6256, line: 37, type: !115, align: 8)
!6262 = distinct !DILexicalBlock(scope: !6255, file: !6256, line: 37, column: 5)
!6263 = !DILocalVariable(name: "fresh0", scope: !6264, file: !6256, line: 38, type: !115, align: 8)
!6264 = distinct !DILexicalBlock(scope: !6262, file: !6256, line: 38, column: 5)
!6265 = !DILocalVariable(name: "fresh1", scope: !6266, file: !6256, line: 42, type: !115, align: 8)
!6266 = distinct !DILexicalBlock(scope: !6264, file: !6256, line: 42, column: 5)
!6267 = !DILocalVariable(name: "fresh2", scope: !6268, file: !6256, line: 46, type: !115, align: 8)
!6268 = distinct !DILexicalBlock(scope: !6266, file: !6256, line: 46, column: 5)
!6269 = !DILocalVariable(name: "fresh3", scope: !6270, file: !6256, line: 50, type: !115, align: 8)
!6270 = distinct !DILexicalBlock(scope: !6268, file: !6256, line: 50, column: 5)
!6271 = !DILocalVariable(name: "fresh4", scope: !6272, file: !6256, line: 54, type: !115, align: 8)
!6272 = distinct !DILexicalBlock(scope: !6270, file: !6256, line: 54, column: 5)
!6273 = !DILocalVariable(name: "fresh5", scope: !6274, file: !6256, line: 58, type: !115, align: 8)
!6274 = distinct !DILexicalBlock(scope: !6272, file: !6256, line: 58, column: 5)
!6275 = !DILocalVariable(name: "fresh6", scope: !6276, file: !6256, line: 62, type: !115, align: 8)
!6276 = distinct !DILexicalBlock(scope: !6274, file: !6256, line: 62, column: 5)
!6277 = !DILocalVariable(name: "fresh7", scope: !6278, file: !6256, line: 66, type: !115, align: 8)
!6278 = distinct !DILexicalBlock(scope: !6276, file: !6256, line: 66, column: 5)
!6279 = !DILocalVariable(name: "fresh8", scope: !6280, file: !6256, line: 70, type: !115, align: 8)
!6280 = distinct !DILexicalBlock(scope: !6278, file: !6256, line: 70, column: 5)
!6281 = !DILocalVariable(name: "fresh9", scope: !6282, file: !6256, line: 74, type: !115, align: 8)
!6282 = distinct !DILexicalBlock(scope: !6280, file: !6256, line: 74, column: 5)
!6283 = !DILocalVariable(name: "fresh10", scope: !6284, file: !6256, line: 78, type: !115, align: 8)
!6284 = distinct !DILexicalBlock(scope: !6282, file: !6256, line: 78, column: 5)
!6285 = !DILocalVariable(name: "fresh11", scope: !6286, file: !6256, line: 82, type: !115, align: 8)
!6286 = distinct !DILexicalBlock(scope: !6284, file: !6256, line: 82, column: 5)
!6287 = !DILocalVariable(name: "fresh12", scope: !6288, file: !6256, line: 86, type: !115, align: 8)
!6288 = distinct !DILexicalBlock(scope: !6286, file: !6256, line: 86, column: 5)
!6289 = !DILocalVariable(name: "fresh13", scope: !6290, file: !6256, line: 90, type: !115, align: 8)
!6290 = distinct !DILexicalBlock(scope: !6288, file: !6256, line: 90, column: 5)
!6291 = !DILocalVariable(name: "fresh14", scope: !6292, file: !6256, line: 94, type: !115, align: 8)
!6292 = distinct !DILexicalBlock(scope: !6290, file: !6256, line: 94, column: 5)
!6293 = !DILocalVariable(name: "fresh15", scope: !6294, file: !6256, line: 98, type: !115, align: 8)
!6294 = distinct !DILexicalBlock(scope: !6292, file: !6256, line: 98, column: 5)
!6295 = !DILocalVariable(name: "fresh16", scope: !6296, file: !6256, line: 103, type: !115, align: 8)
!6296 = distinct !DILexicalBlock(scope: !6294, file: !6256, line: 103, column: 5)
!6297 = !DILocalVariable(name: "fresh17", scope: !6298, file: !6256, line: 107, type: !115, align: 8)
!6298 = distinct !DILexicalBlock(scope: !6296, file: !6256, line: 107, column: 5)
!6299 = !DILocalVariable(name: "fresh18", scope: !6300, file: !6256, line: 112, type: !115, align: 8)
!6300 = distinct !DILexicalBlock(scope: !6298, file: !6256, line: 112, column: 5)
!6301 = !DILocalVariable(name: "fresh19", scope: !6302, file: !6256, line: 116, type: !115, align: 8)
!6302 = distinct !DILexicalBlock(scope: !6300, file: !6256, line: 116, column: 5)
!6303 = !DILocalVariable(name: "fresh20", scope: !6304, file: !6256, line: 121, type: !115, align: 8)
!6304 = distinct !DILexicalBlock(scope: !6302, file: !6256, line: 121, column: 5)
!6305 = !DILocalVariable(name: "fresh21", scope: !6306, file: !6256, line: 125, type: !115, align: 8)
!6306 = distinct !DILexicalBlock(scope: !6304, file: !6256, line: 125, column: 5)
!6307 = !DILocalVariable(name: "fresh22", scope: !6308, file: !6256, line: 129, type: !115, align: 8)
!6308 = distinct !DILexicalBlock(scope: !6306, file: !6256, line: 129, column: 5)
!6309 = !DILocalVariable(name: "fresh23", scope: !6310, file: !6256, line: 133, type: !115, align: 8)
!6310 = distinct !DILexicalBlock(scope: !6308, file: !6256, line: 133, column: 5)
!6311 = !DILocalVariable(name: "fresh24", scope: !6312, file: !6256, line: 137, type: !115, align: 8)
!6312 = distinct !DILexicalBlock(scope: !6310, file: !6256, line: 137, column: 5)
!6313 = !DILocalVariable(name: "fresh25", scope: !6314, file: !6256, line: 141, type: !115, align: 8)
!6314 = distinct !DILexicalBlock(scope: !6312, file: !6256, line: 141, column: 5)
!6315 = !DILocalVariable(name: "fresh26", scope: !6316, file: !6256, line: 145, type: !115, align: 8)
!6316 = distinct !DILexicalBlock(scope: !6314, file: !6256, line: 145, column: 5)
!6317 = !DILocalVariable(name: "fresh27", scope: !6318, file: !6256, line: 150, type: !115, align: 8)
!6318 = distinct !DILexicalBlock(scope: !6316, file: !6256, line: 150, column: 5)
!6319 = !DILocalVariable(name: "fresh28", scope: !6320, file: !6256, line: 155, type: !115, align: 8)
!6320 = distinct !DILexicalBlock(scope: !6318, file: !6256, line: 155, column: 5)
!6321 = !DILocalVariable(name: "fresh29", scope: !6322, file: !6256, line: 159, type: !115, align: 8)
!6322 = distinct !DILexicalBlock(scope: !6320, file: !6256, line: 159, column: 5)
!6323 = !DILocalVariable(name: "fresh30", scope: !6324, file: !6256, line: 163, type: !115, align: 8)
!6324 = distinct !DILexicalBlock(scope: !6322, file: !6256, line: 163, column: 5)
!6325 = !DILocalVariable(name: "fresh31", scope: !6326, file: !6256, line: 167, type: !115, align: 8)
!6326 = distinct !DILexicalBlock(scope: !6324, file: !6256, line: 167, column: 5)
!6327 = !DILocalVariable(name: "a", scope: !6328, file: !6256, line: 171, type: !419, align: 4)
!6328 = distinct !DILexicalBlock(scope: !6326, file: !6256, line: 171, column: 5)
!6329 = !DILocalVariable(name: "b", scope: !6330, file: !6256, line: 172, type: !419, align: 4)
!6330 = distinct !DILexicalBlock(scope: !6328, file: !6256, line: 172, column: 5)
!6331 = !DILocalVariable(name: "fresh32", scope: !6332, file: !6256, line: 173, type: !115, align: 8)
!6332 = distinct !DILexicalBlock(scope: !6330, file: !6256, line: 173, column: 5)
!6333 = !DILocalVariable(name: "fresh33", scope: !6334, file: !6256, line: 177, type: !115, align: 8)
!6334 = distinct !DILexicalBlock(scope: !6332, file: !6256, line: 177, column: 5)
!6335 = !DILocalVariable(name: "fresh34", scope: !6336, file: !6256, line: 181, type: !115, align: 8)
!6336 = distinct !DILexicalBlock(scope: !6334, file: !6256, line: 181, column: 5)
!6337 = !DILocalVariable(name: "fresh35", scope: !6338, file: !6256, line: 186, type: !115, align: 8)
!6338 = distinct !DILexicalBlock(scope: !6336, file: !6256, line: 186, column: 5)
!6339 = !DILocalVariable(name: "fresh36", scope: !6340, file: !6256, line: 191, type: !115, align: 8)
!6340 = distinct !DILexicalBlock(scope: !6338, file: !6256, line: 191, column: 5)
!6341 = !DILocalVariable(name: "fresh37", scope: !6342, file: !6256, line: 196, type: !115, align: 8)
!6342 = distinct !DILexicalBlock(scope: !6340, file: !6256, line: 196, column: 5)
!6343 = !DILocalVariable(name: "fresh38", scope: !6344, file: !6256, line: 200, type: !115, align: 8)
!6344 = distinct !DILexicalBlock(scope: !6342, file: !6256, line: 200, column: 5)
!6345 = !DILocalVariable(name: "fresh39", scope: !6346, file: !6256, line: 204, type: !115, align: 8)
!6346 = distinct !DILexicalBlock(scope: !6344, file: !6256, line: 204, column: 5)
!6347 = !DILocalVariable(name: "fresh40", scope: !6348, file: !6256, line: 208, type: !115, align: 8)
!6348 = distinct !DILexicalBlock(scope: !6346, file: !6256, line: 208, column: 5)
!6349 = !DILocalVariable(name: "fresh41", scope: !6350, file: !6256, line: 212, type: !115, align: 8)
!6350 = distinct !DILexicalBlock(scope: !6348, file: !6256, line: 212, column: 5)
!6351 = !DILocalVariable(name: "fresh42", scope: !6352, file: !6256, line: 216, type: !115, align: 8)
!6352 = distinct !DILexicalBlock(scope: !6350, file: !6256, line: 216, column: 5)
!6353 = !DILocalVariable(name: "fresh43", scope: !6354, file: !6256, line: 220, type: !115, align: 8)
!6354 = distinct !DILexicalBlock(scope: !6352, file: !6256, line: 220, column: 5)
!6355 = !DILocalVariable(name: "fresh44", scope: !6356, file: !6256, line: 224, type: !115, align: 8)
!6356 = distinct !DILexicalBlock(scope: !6354, file: !6256, line: 224, column: 5)
!6357 = !DILocalVariable(name: "fresh45", scope: !6358, file: !6256, line: 229, type: !115, align: 8)
!6358 = distinct !DILexicalBlock(scope: !6356, file: !6256, line: 229, column: 5)
!6359 = !DILocalVariable(name: "x1", scope: !6360, file: !6256, line: 234, type: !637, align: 4)
!6360 = distinct !DILexicalBlock(scope: !6358, file: !6256, line: 234, column: 5)
!6361 = !DILocalVariable(name: "x2", scope: !6362, file: !6256, line: 235, type: !6022, align: 4)
!6362 = distinct !DILexicalBlock(scope: !6360, file: !6256, line: 235, column: 5)
!6363 = !DILocalVariable(name: "vla", scope: !6364, file: !6256, line: 236, type: !9, align: 8)
!6364 = distinct !DILexicalBlock(scope: !6362, file: !6256, line: 236, column: 5)
!6365 = !DILocalVariable(name: "vla_0", scope: !6366, file: !6256, line: 237, type: !9, align: 8)
!6366 = distinct !DILexicalBlock(scope: !6364, file: !6256, line: 237, column: 5)
!6367 = !DILocalVariable(name: "x3", scope: !6368, file: !6256, line: 238, type: !1364, align: 8)
!6368 = distinct !DILexicalBlock(scope: !6366, file: !6256, line: 238, column: 5)
!6369 = !DILocalVariable(name: "vla_1", scope: !6370, file: !6256, line: 239, type: !9, align: 8)
!6370 = distinct !DILexicalBlock(scope: !6368, file: !6256, line: 239, column: 5)
!6371 = !DILocalVariable(name: "x4", scope: !6372, file: !6256, line: 240, type: !1460, align: 8)
!6372 = distinct !DILexicalBlock(scope: !6370, file: !6256, line: 240, column: 5)
!6373 = !DILocalVariable(name: "vla_2", scope: !6374, file: !6256, line: 241, type: !9, align: 8)
!6374 = distinct !DILexicalBlock(scope: !6372, file: !6256, line: 241, column: 5)
!6375 = !DILocalVariable(name: "vla_3", scope: !6376, file: !6256, line: 242, type: !9, align: 8)
!6376 = distinct !DILexicalBlock(scope: !6374, file: !6256, line: 242, column: 5)
!6377 = !DILocalVariable(name: "x5", scope: !6378, file: !6256, line: 243, type: !1364, align: 8)
!6378 = distinct !DILexicalBlock(scope: !6376, file: !6256, line: 243, column: 5)
!6379 = !DILocalVariable(name: "vla_4", scope: !6380, file: !6256, line: 244, type: !9, align: 8)
!6380 = distinct !DILexicalBlock(scope: !6378, file: !6256, line: 244, column: 5)
!6381 = !DILocalVariable(name: "x6", scope: !6382, file: !6256, line: 245, type: !6383, align: 8)
!6382 = distinct !DILexicalBlock(scope: !6380, file: !6256, line: 245, column: 5)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 192, align: 64, elements: !65)
!6384 = !DILocalVariable(name: "vla_5", scope: !6385, file: !6256, line: 246, type: !9, align: 8)
!6385 = distinct !DILexicalBlock(scope: !6382, file: !6256, line: 246, column: 5)
!6386 = !DILocalVariable(name: "vla_6", scope: !6387, file: !6256, line: 247, type: !9, align: 8)
!6387 = distinct !DILexicalBlock(scope: !6385, file: !6256, line: 247, column: 5)
!6388 = !DILocalVariable(name: "x7", scope: !6389, file: !6256, line: 248, type: !1015, align: 8)
!6389 = distinct !DILexicalBlock(scope: !6387, file: !6256, line: 248, column: 5)
!6390 = !DILocalVariable(name: "fresh46", scope: !6391, file: !6256, line: 251, type: !115, align: 8)
!6391 = distinct !DILexicalBlock(scope: !6389, file: !6256, line: 251, column: 5)
!6392 = !DILocalVariable(name: "fresh47", scope: !6393, file: !6256, line: 255, type: !115, align: 8)
!6393 = distinct !DILexicalBlock(scope: !6391, file: !6256, line: 255, column: 5)
!6394 = !DILocalVariable(name: "fresh48", scope: !6395, file: !6256, line: 259, type: !115, align: 8)
!6395 = distinct !DILexicalBlock(scope: !6393, file: !6256, line: 259, column: 5)
!6396 = !DILocalVariable(name: "fresh49", scope: !6397, file: !6256, line: 264, type: !115, align: 8)
!6397 = distinct !DILexicalBlock(scope: !6395, file: !6256, line: 264, column: 5)
!6398 = !DILocalVariable(name: "fresh50", scope: !6399, file: !6256, line: 269, type: !115, align: 8)
!6399 = distinct !DILexicalBlock(scope: !6397, file: !6256, line: 269, column: 5)
!6400 = !DILocalVariable(name: "fresh51", scope: !6401, file: !6256, line: 274, type: !115, align: 8)
!6401 = distinct !DILexicalBlock(scope: !6399, file: !6256, line: 274, column: 5)
!6402 = !DILocalVariable(name: "fresh52", scope: !6403, file: !6256, line: 278, type: !115, align: 8)
!6403 = distinct !DILexicalBlock(scope: !6401, file: !6256, line: 278, column: 5)
!6404 = !DILocalVariable(name: "fresh53", scope: !6405, file: !6256, line: 283, type: !115, align: 8)
!6405 = distinct !DILexicalBlock(scope: !6403, file: !6256, line: 283, column: 5)
!6406 = !DILocalVariable(name: "fresh54", scope: !6407, file: !6256, line: 287, type: !115, align: 8)
!6407 = distinct !DILexicalBlock(scope: !6405, file: !6256, line: 287, column: 5)
!6408 = !DILocalVariable(name: "fresh55", scope: !6409, file: !6256, line: 292, type: !115, align: 8)
!6409 = distinct !DILexicalBlock(scope: !6407, file: !6256, line: 292, column: 5)
!6410 = !DILocalVariable(name: "fresh56", scope: !6411, file: !6256, line: 296, type: !115, align: 8)
!6411 = distinct !DILexicalBlock(scope: !6409, file: !6256, line: 296, column: 5)
!6412 = !DILocalVariable(name: "fresh57", scope: !6413, file: !6256, line: 301, type: !115, align: 8)
!6413 = distinct !DILexicalBlock(scope: !6411, file: !6256, line: 301, column: 5)
!6414 = !DILocalVariable(name: "fresh58", scope: !6415, file: !6256, line: 306, type: !115, align: 8)
!6415 = distinct !DILexicalBlock(scope: !6413, file: !6256, line: 306, column: 5)
!6416 = !DILocalVariable(name: "fresh59", scope: !6417, file: !6256, line: 310, type: !115, align: 8)
!6417 = distinct !DILexicalBlock(scope: !6415, file: !6256, line: 310, column: 5)
!6418 = !DILocation(line: 34, column: 5, scope: !6255)
!6419 = !DILocation(line: 35, column: 5, scope: !6255)
!6420 = !DILocation(line: 37, column: 9, scope: !6262)
!6421 = !DILocation(line: 171, column: 9, scope: !6328)
!6422 = !DILocation(line: 172, column: 9, scope: !6330)
!6423 = !DILocation(line: 234, column: 9, scope: !6360)
!6424 = !DILocation(line: 235, column: 9, scope: !6362)
!6425 = !DILocation(line: 238, column: 9, scope: !6368)
!6426 = !DILocation(line: 240, column: 9, scope: !6372)
!6427 = !DILocation(line: 243, column: 9, scope: !6378)
!6428 = !DILocation(line: 245, column: 9, scope: !6382)
!6429 = !DILocation(line: 37, column: 36, scope: !6255)
!6430 = !DILocation(line: 38, column: 18, scope: !6262)
!6431 = !DILocation(line: 38, column: 9, scope: !6264)
!6432 = !DILocalVariable(name: "self", arg: 1, scope: !6433, file: !659, line: 1189, type: !115)
!6433 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$12wrapping_add17h90c3da8f79f58448E", scope: !6195, file: !659, line: 1189, type: !6196, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !6434)
!6434 = !{!6432, !6435}
!6435 = !DILocalVariable(name: "rhs", arg: 2, scope: !6433, file: !659, line: 1189, type: !115)
!6436 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6437)
!6437 = distinct !DILocation(line: 39, column: 9, scope: !6264)
!6438 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6437)
!6439 = !DILocation(line: 39, column: 9, scope: !6264)
!6440 = !DILocation(line: 39, column: 5, scope: !6264)
!6441 = !DILocation(line: 40, column: 39, scope: !6264)
!6442 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6443)
!6443 = distinct !DILocation(line: 40, column: 6, scope: !6264)
!6444 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6443)
!6445 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6443)
!6446 = !DILocation(line: 40, column: 6, scope: !6264)
!6447 = !DILocation(line: 40, column: 5, scope: !6264)
!6448 = !DILocation(line: 42, column: 18, scope: !6264)
!6449 = !DILocation(line: 42, column: 9, scope: !6266)
!6450 = !DILocation(line: 43, column: 9, scope: !6266)
!6451 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6452)
!6452 = distinct !DILocation(line: 43, column: 9, scope: !6266)
!6453 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6452)
!6454 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6452)
!6455 = !DILocation(line: 43, column: 5, scope: !6266)
!6456 = !DILocation(line: 44, column: 39, scope: !6266)
!6457 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6458)
!6458 = distinct !DILocation(line: 44, column: 6, scope: !6266)
!6459 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6458)
!6460 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6458)
!6461 = !DILocation(line: 44, column: 6, scope: !6266)
!6462 = !DILocation(line: 44, column: 5, scope: !6266)
!6463 = !DILocation(line: 46, column: 18, scope: !6266)
!6464 = !DILocation(line: 46, column: 9, scope: !6268)
!6465 = !DILocation(line: 47, column: 9, scope: !6268)
!6466 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6467)
!6467 = distinct !DILocation(line: 47, column: 9, scope: !6268)
!6468 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6467)
!6469 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6467)
!6470 = !DILocation(line: 47, column: 5, scope: !6268)
!6471 = !DILocation(line: 48, column: 39, scope: !6268)
!6472 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6473)
!6473 = distinct !DILocation(line: 48, column: 6, scope: !6268)
!6474 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6473)
!6475 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6473)
!6476 = !DILocation(line: 48, column: 6, scope: !6268)
!6477 = !DILocation(line: 48, column: 5, scope: !6268)
!6478 = !DILocation(line: 50, column: 18, scope: !6268)
!6479 = !DILocation(line: 50, column: 9, scope: !6270)
!6480 = !DILocation(line: 51, column: 9, scope: !6270)
!6481 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6482)
!6482 = distinct !DILocation(line: 51, column: 9, scope: !6270)
!6483 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6482)
!6484 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6482)
!6485 = !DILocation(line: 51, column: 5, scope: !6270)
!6486 = !DILocation(line: 52, column: 39, scope: !6270)
!6487 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6488)
!6488 = distinct !DILocation(line: 52, column: 6, scope: !6270)
!6489 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6488)
!6490 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6488)
!6491 = !DILocation(line: 52, column: 6, scope: !6270)
!6492 = !DILocation(line: 52, column: 5, scope: !6270)
!6493 = !DILocation(line: 54, column: 18, scope: !6270)
!6494 = !DILocation(line: 54, column: 9, scope: !6272)
!6495 = !DILocation(line: 55, column: 9, scope: !6272)
!6496 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6497)
!6497 = distinct !DILocation(line: 55, column: 9, scope: !6272)
!6498 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6497)
!6499 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6497)
!6500 = !DILocation(line: 55, column: 5, scope: !6272)
!6501 = !DILocation(line: 56, column: 39, scope: !6272)
!6502 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6503)
!6503 = distinct !DILocation(line: 56, column: 6, scope: !6272)
!6504 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6503)
!6505 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6503)
!6506 = !DILocation(line: 56, column: 6, scope: !6272)
!6507 = !DILocation(line: 56, column: 5, scope: !6272)
!6508 = !DILocation(line: 58, column: 18, scope: !6272)
!6509 = !DILocation(line: 58, column: 9, scope: !6274)
!6510 = !DILocation(line: 59, column: 9, scope: !6274)
!6511 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6512)
!6512 = distinct !DILocation(line: 59, column: 9, scope: !6274)
!6513 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6512)
!6514 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6512)
!6515 = !DILocation(line: 59, column: 5, scope: !6274)
!6516 = !DILocation(line: 60, column: 39, scope: !6274)
!6517 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6518)
!6518 = distinct !DILocation(line: 60, column: 6, scope: !6274)
!6519 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6518)
!6520 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6518)
!6521 = !DILocation(line: 60, column: 6, scope: !6274)
!6522 = !DILocation(line: 60, column: 5, scope: !6274)
!6523 = !DILocation(line: 62, column: 18, scope: !6274)
!6524 = !DILocation(line: 62, column: 9, scope: !6276)
!6525 = !DILocation(line: 63, column: 9, scope: !6276)
!6526 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6527)
!6527 = distinct !DILocation(line: 63, column: 9, scope: !6276)
!6528 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6527)
!6529 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6527)
!6530 = !DILocation(line: 63, column: 5, scope: !6276)
!6531 = !DILocation(line: 64, column: 39, scope: !6276)
!6532 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6533)
!6533 = distinct !DILocation(line: 64, column: 6, scope: !6276)
!6534 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6533)
!6535 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6533)
!6536 = !DILocation(line: 64, column: 6, scope: !6276)
!6537 = !DILocation(line: 64, column: 5, scope: !6276)
!6538 = !DILocation(line: 66, column: 18, scope: !6276)
!6539 = !DILocation(line: 66, column: 9, scope: !6278)
!6540 = !DILocation(line: 67, column: 9, scope: !6278)
!6541 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6542)
!6542 = distinct !DILocation(line: 67, column: 9, scope: !6278)
!6543 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6542)
!6544 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6542)
!6545 = !DILocation(line: 67, column: 5, scope: !6278)
!6546 = !DILocation(line: 68, column: 39, scope: !6278)
!6547 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6548)
!6548 = distinct !DILocation(line: 68, column: 6, scope: !6278)
!6549 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6548)
!6550 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6548)
!6551 = !DILocation(line: 68, column: 6, scope: !6278)
!6552 = !DILocation(line: 68, column: 5, scope: !6278)
!6553 = !DILocation(line: 70, column: 18, scope: !6278)
!6554 = !DILocation(line: 70, column: 9, scope: !6280)
!6555 = !DILocation(line: 71, column: 9, scope: !6280)
!6556 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6557)
!6557 = distinct !DILocation(line: 71, column: 9, scope: !6280)
!6558 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6557)
!6559 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6557)
!6560 = !DILocation(line: 71, column: 5, scope: !6280)
!6561 = !DILocation(line: 72, column: 39, scope: !6280)
!6562 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6563)
!6563 = distinct !DILocation(line: 72, column: 6, scope: !6280)
!6564 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6563)
!6565 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6563)
!6566 = !DILocation(line: 72, column: 6, scope: !6280)
!6567 = !DILocation(line: 72, column: 5, scope: !6280)
!6568 = !DILocation(line: 74, column: 18, scope: !6280)
!6569 = !DILocation(line: 74, column: 9, scope: !6282)
!6570 = !DILocation(line: 75, column: 9, scope: !6282)
!6571 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6572)
!6572 = distinct !DILocation(line: 75, column: 9, scope: !6282)
!6573 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6572)
!6574 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6572)
!6575 = !DILocation(line: 75, column: 5, scope: !6282)
!6576 = !DILocation(line: 76, column: 39, scope: !6282)
!6577 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6578)
!6578 = distinct !DILocation(line: 76, column: 6, scope: !6282)
!6579 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6578)
!6580 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6578)
!6581 = !DILocation(line: 76, column: 6, scope: !6282)
!6582 = !DILocation(line: 76, column: 5, scope: !6282)
!6583 = !DILocation(line: 78, column: 19, scope: !6282)
!6584 = !DILocation(line: 78, column: 9, scope: !6284)
!6585 = !DILocation(line: 79, column: 9, scope: !6284)
!6586 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6587)
!6587 = distinct !DILocation(line: 79, column: 9, scope: !6284)
!6588 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6587)
!6589 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6587)
!6590 = !DILocation(line: 79, column: 5, scope: !6284)
!6591 = !DILocation(line: 80, column: 40, scope: !6284)
!6592 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6593)
!6593 = distinct !DILocation(line: 80, column: 6, scope: !6284)
!6594 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6593)
!6595 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6593)
!6596 = !DILocation(line: 80, column: 6, scope: !6284)
!6597 = !DILocation(line: 80, column: 5, scope: !6284)
!6598 = !DILocation(line: 82, column: 19, scope: !6284)
!6599 = !DILocation(line: 82, column: 9, scope: !6286)
!6600 = !DILocation(line: 83, column: 9, scope: !6286)
!6601 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6602)
!6602 = distinct !DILocation(line: 83, column: 9, scope: !6286)
!6603 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6602)
!6604 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6602)
!6605 = !DILocation(line: 83, column: 5, scope: !6286)
!6606 = !DILocation(line: 84, column: 40, scope: !6286)
!6607 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6608)
!6608 = distinct !DILocation(line: 84, column: 6, scope: !6286)
!6609 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6608)
!6610 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6608)
!6611 = !DILocation(line: 84, column: 6, scope: !6286)
!6612 = !DILocation(line: 84, column: 5, scope: !6286)
!6613 = !DILocation(line: 86, column: 19, scope: !6286)
!6614 = !DILocation(line: 86, column: 9, scope: !6288)
!6615 = !DILocation(line: 87, column: 9, scope: !6288)
!6616 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6617)
!6617 = distinct !DILocation(line: 87, column: 9, scope: !6288)
!6618 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6617)
!6619 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6617)
!6620 = !DILocation(line: 87, column: 5, scope: !6288)
!6621 = !DILocation(line: 88, column: 40, scope: !6288)
!6622 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6623)
!6623 = distinct !DILocation(line: 88, column: 6, scope: !6288)
!6624 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6623)
!6625 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6623)
!6626 = !DILocation(line: 88, column: 6, scope: !6288)
!6627 = !DILocation(line: 88, column: 5, scope: !6288)
!6628 = !DILocation(line: 90, column: 19, scope: !6288)
!6629 = !DILocation(line: 90, column: 9, scope: !6290)
!6630 = !DILocation(line: 91, column: 9, scope: !6290)
!6631 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6632)
!6632 = distinct !DILocation(line: 91, column: 9, scope: !6290)
!6633 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6632)
!6634 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6632)
!6635 = !DILocation(line: 91, column: 5, scope: !6290)
!6636 = !DILocation(line: 92, column: 40, scope: !6290)
!6637 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6638)
!6638 = distinct !DILocation(line: 92, column: 6, scope: !6290)
!6639 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6638)
!6640 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6638)
!6641 = !DILocation(line: 92, column: 6, scope: !6290)
!6642 = !DILocation(line: 92, column: 5, scope: !6290)
!6643 = !DILocation(line: 94, column: 19, scope: !6290)
!6644 = !DILocation(line: 94, column: 9, scope: !6292)
!6645 = !DILocation(line: 95, column: 9, scope: !6292)
!6646 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6647)
!6647 = distinct !DILocation(line: 95, column: 9, scope: !6292)
!6648 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6647)
!6649 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6647)
!6650 = !DILocation(line: 95, column: 5, scope: !6292)
!6651 = !DILocation(line: 96, column: 40, scope: !6292)
!6652 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6653)
!6653 = distinct !DILocation(line: 96, column: 6, scope: !6292)
!6654 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6653)
!6655 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6653)
!6656 = !DILocation(line: 96, column: 6, scope: !6292)
!6657 = !DILocation(line: 96, column: 5, scope: !6292)
!6658 = !DILocation(line: 98, column: 19, scope: !6292)
!6659 = !DILocation(line: 98, column: 9, scope: !6294)
!6660 = !DILocation(line: 99, column: 9, scope: !6294)
!6661 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6662)
!6662 = distinct !DILocation(line: 99, column: 9, scope: !6294)
!6663 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6662)
!6664 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6662)
!6665 = !DILocation(line: 99, column: 5, scope: !6294)
!6666 = !DILocation(line: 100, column: 40, scope: !6294)
!6667 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6668)
!6668 = distinct !DILocation(line: 100, column: 6, scope: !6294)
!6669 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6668)
!6670 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6668)
!6671 = !DILocation(line: 100, column: 6, scope: !6294)
!6672 = !DILocation(line: 100, column: 5, scope: !6294)
!6673 = !DILocation(line: 103, column: 19, scope: !6294)
!6674 = !DILocation(line: 103, column: 9, scope: !6296)
!6675 = !DILocation(line: 104, column: 9, scope: !6296)
!6676 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6677)
!6677 = distinct !DILocation(line: 104, column: 9, scope: !6296)
!6678 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6677)
!6679 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6677)
!6680 = !DILocation(line: 104, column: 5, scope: !6296)
!6681 = !DILocation(line: 105, column: 40, scope: !6296)
!6682 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6683)
!6683 = distinct !DILocation(line: 105, column: 6, scope: !6296)
!6684 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6683)
!6685 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6683)
!6686 = !DILocation(line: 105, column: 6, scope: !6296)
!6687 = !DILocation(line: 105, column: 5, scope: !6296)
!6688 = !DILocation(line: 107, column: 19, scope: !6296)
!6689 = !DILocation(line: 107, column: 9, scope: !6298)
!6690 = !DILocation(line: 108, column: 9, scope: !6298)
!6691 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6692)
!6692 = distinct !DILocation(line: 108, column: 9, scope: !6298)
!6693 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6692)
!6694 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6692)
!6695 = !DILocation(line: 108, column: 5, scope: !6298)
!6696 = !DILocation(line: 109, column: 40, scope: !6298)
!6697 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6698)
!6698 = distinct !DILocation(line: 109, column: 6, scope: !6298)
!6699 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6698)
!6700 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6698)
!6701 = !DILocation(line: 109, column: 6, scope: !6298)
!6702 = !DILocation(line: 109, column: 5, scope: !6298)
!6703 = !DILocation(line: 112, column: 19, scope: !6298)
!6704 = !DILocation(line: 112, column: 9, scope: !6300)
!6705 = !DILocation(line: 113, column: 9, scope: !6300)
!6706 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6707)
!6707 = distinct !DILocation(line: 113, column: 9, scope: !6300)
!6708 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6707)
!6709 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6707)
!6710 = !DILocation(line: 113, column: 5, scope: !6300)
!6711 = !DILocation(line: 114, column: 40, scope: !6300)
!6712 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6713)
!6713 = distinct !DILocation(line: 114, column: 6, scope: !6300)
!6714 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6713)
!6715 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6713)
!6716 = !DILocation(line: 114, column: 6, scope: !6300)
!6717 = !DILocation(line: 114, column: 5, scope: !6300)
!6718 = !DILocation(line: 116, column: 19, scope: !6300)
!6719 = !DILocation(line: 116, column: 9, scope: !6302)
!6720 = !DILocation(line: 117, column: 9, scope: !6302)
!6721 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6722)
!6722 = distinct !DILocation(line: 117, column: 9, scope: !6302)
!6723 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6722)
!6724 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6722)
!6725 = !DILocation(line: 117, column: 5, scope: !6302)
!6726 = !DILocation(line: 118, column: 40, scope: !6302)
!6727 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6728)
!6728 = distinct !DILocation(line: 118, column: 6, scope: !6302)
!6729 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6728)
!6730 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6728)
!6731 = !DILocation(line: 118, column: 6, scope: !6302)
!6732 = !DILocation(line: 118, column: 5, scope: !6302)
!6733 = !DILocation(line: 121, column: 19, scope: !6302)
!6734 = !DILocation(line: 121, column: 9, scope: !6304)
!6735 = !DILocation(line: 122, column: 9, scope: !6304)
!6736 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6737)
!6737 = distinct !DILocation(line: 122, column: 9, scope: !6304)
!6738 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6737)
!6739 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6737)
!6740 = !DILocation(line: 122, column: 5, scope: !6304)
!6741 = !DILocation(line: 123, column: 40, scope: !6304)
!6742 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6743)
!6743 = distinct !DILocation(line: 123, column: 6, scope: !6304)
!6744 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6743)
!6745 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6743)
!6746 = !DILocation(line: 123, column: 6, scope: !6304)
!6747 = !DILocation(line: 123, column: 5, scope: !6304)
!6748 = !DILocation(line: 125, column: 19, scope: !6304)
!6749 = !DILocation(line: 125, column: 9, scope: !6306)
!6750 = !DILocation(line: 126, column: 9, scope: !6306)
!6751 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6752)
!6752 = distinct !DILocation(line: 126, column: 9, scope: !6306)
!6753 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6752)
!6754 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6752)
!6755 = !DILocation(line: 126, column: 5, scope: !6306)
!6756 = !DILocation(line: 127, column: 40, scope: !6306)
!6757 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6758)
!6758 = distinct !DILocation(line: 127, column: 6, scope: !6306)
!6759 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6758)
!6760 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6758)
!6761 = !DILocation(line: 127, column: 6, scope: !6306)
!6762 = !DILocation(line: 127, column: 5, scope: !6306)
!6763 = !DILocation(line: 129, column: 19, scope: !6306)
!6764 = !DILocation(line: 129, column: 9, scope: !6308)
!6765 = !DILocation(line: 130, column: 9, scope: !6308)
!6766 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6767)
!6767 = distinct !DILocation(line: 130, column: 9, scope: !6308)
!6768 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6767)
!6769 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6767)
!6770 = !DILocation(line: 130, column: 5, scope: !6308)
!6771 = !DILocation(line: 131, column: 40, scope: !6308)
!6772 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6773)
!6773 = distinct !DILocation(line: 131, column: 6, scope: !6308)
!6774 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6773)
!6775 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6773)
!6776 = !DILocation(line: 131, column: 6, scope: !6308)
!6777 = !DILocation(line: 131, column: 5, scope: !6308)
!6778 = !DILocation(line: 133, column: 19, scope: !6308)
!6779 = !DILocation(line: 133, column: 9, scope: !6310)
!6780 = !DILocation(line: 134, column: 9, scope: !6310)
!6781 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6782)
!6782 = distinct !DILocation(line: 134, column: 9, scope: !6310)
!6783 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6782)
!6784 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6782)
!6785 = !DILocation(line: 134, column: 5, scope: !6310)
!6786 = !DILocation(line: 135, column: 40, scope: !6310)
!6787 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6788)
!6788 = distinct !DILocation(line: 135, column: 6, scope: !6310)
!6789 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6788)
!6790 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6788)
!6791 = !DILocation(line: 135, column: 6, scope: !6310)
!6792 = !DILocation(line: 135, column: 5, scope: !6310)
!6793 = !DILocation(line: 137, column: 19, scope: !6310)
!6794 = !DILocation(line: 137, column: 9, scope: !6312)
!6795 = !DILocation(line: 138, column: 9, scope: !6312)
!6796 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6797)
!6797 = distinct !DILocation(line: 138, column: 9, scope: !6312)
!6798 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6797)
!6799 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6797)
!6800 = !DILocation(line: 138, column: 5, scope: !6312)
!6801 = !DILocation(line: 139, column: 40, scope: !6312)
!6802 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6803)
!6803 = distinct !DILocation(line: 139, column: 6, scope: !6312)
!6804 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6803)
!6805 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6803)
!6806 = !DILocation(line: 139, column: 6, scope: !6312)
!6807 = !DILocation(line: 139, column: 5, scope: !6312)
!6808 = !DILocation(line: 141, column: 19, scope: !6312)
!6809 = !DILocation(line: 141, column: 9, scope: !6314)
!6810 = !DILocation(line: 142, column: 9, scope: !6314)
!6811 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6812)
!6812 = distinct !DILocation(line: 142, column: 9, scope: !6314)
!6813 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6812)
!6814 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6812)
!6815 = !DILocation(line: 142, column: 5, scope: !6314)
!6816 = !DILocation(line: 143, column: 40, scope: !6314)
!6817 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6818)
!6818 = distinct !DILocation(line: 143, column: 6, scope: !6314)
!6819 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6818)
!6820 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6818)
!6821 = !DILocation(line: 143, column: 6, scope: !6314)
!6822 = !DILocation(line: 143, column: 5, scope: !6314)
!6823 = !DILocation(line: 145, column: 19, scope: !6314)
!6824 = !DILocation(line: 145, column: 9, scope: !6316)
!6825 = !DILocation(line: 146, column: 9, scope: !6316)
!6826 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6827)
!6827 = distinct !DILocation(line: 146, column: 9, scope: !6316)
!6828 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6827)
!6829 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6827)
!6830 = !DILocation(line: 146, column: 5, scope: !6316)
!6831 = !DILocation(line: 147, column: 40, scope: !6316)
!6832 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6833)
!6833 = distinct !DILocation(line: 147, column: 6, scope: !6316)
!6834 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6833)
!6835 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6833)
!6836 = !DILocation(line: 147, column: 6, scope: !6316)
!6837 = !DILocation(line: 147, column: 5, scope: !6316)
!6838 = !DILocation(line: 150, column: 19, scope: !6316)
!6839 = !DILocation(line: 150, column: 9, scope: !6318)
!6840 = !DILocation(line: 151, column: 9, scope: !6318)
!6841 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6842)
!6842 = distinct !DILocation(line: 151, column: 9, scope: !6318)
!6843 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6842)
!6844 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6842)
!6845 = !DILocation(line: 151, column: 5, scope: !6318)
!6846 = !DILocation(line: 152, column: 40, scope: !6318)
!6847 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6848)
!6848 = distinct !DILocation(line: 152, column: 6, scope: !6318)
!6849 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6848)
!6850 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6848)
!6851 = !DILocation(line: 152, column: 6, scope: !6318)
!6852 = !DILocation(line: 152, column: 5, scope: !6318)
!6853 = !DILocation(line: 155, column: 19, scope: !6318)
!6854 = !DILocation(line: 155, column: 9, scope: !6320)
!6855 = !DILocation(line: 156, column: 9, scope: !6320)
!6856 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6857)
!6857 = distinct !DILocation(line: 156, column: 9, scope: !6320)
!6858 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6857)
!6859 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6857)
!6860 = !DILocation(line: 156, column: 5, scope: !6320)
!6861 = !DILocation(line: 157, column: 40, scope: !6320)
!6862 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6863)
!6863 = distinct !DILocation(line: 157, column: 6, scope: !6320)
!6864 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6863)
!6865 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6863)
!6866 = !DILocation(line: 157, column: 6, scope: !6320)
!6867 = !DILocation(line: 157, column: 5, scope: !6320)
!6868 = !DILocation(line: 159, column: 19, scope: !6320)
!6869 = !DILocation(line: 159, column: 9, scope: !6322)
!6870 = !DILocation(line: 160, column: 9, scope: !6322)
!6871 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6872)
!6872 = distinct !DILocation(line: 160, column: 9, scope: !6322)
!6873 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6872)
!6874 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6872)
!6875 = !DILocation(line: 160, column: 5, scope: !6322)
!6876 = !DILocation(line: 161, column: 40, scope: !6322)
!6877 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6878)
!6878 = distinct !DILocation(line: 161, column: 6, scope: !6322)
!6879 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6878)
!6880 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6878)
!6881 = !DILocation(line: 161, column: 6, scope: !6322)
!6882 = !DILocation(line: 161, column: 5, scope: !6322)
!6883 = !DILocation(line: 163, column: 19, scope: !6322)
!6884 = !DILocation(line: 163, column: 9, scope: !6324)
!6885 = !DILocation(line: 164, column: 9, scope: !6324)
!6886 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6887)
!6887 = distinct !DILocation(line: 164, column: 9, scope: !6324)
!6888 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6887)
!6889 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6887)
!6890 = !DILocation(line: 164, column: 5, scope: !6324)
!6891 = !DILocation(line: 165, column: 40, scope: !6324)
!6892 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6893)
!6893 = distinct !DILocation(line: 165, column: 6, scope: !6324)
!6894 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6893)
!6895 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6893)
!6896 = !DILocation(line: 165, column: 6, scope: !6324)
!6897 = !DILocation(line: 165, column: 5, scope: !6324)
!6898 = !DILocation(line: 167, column: 19, scope: !6324)
!6899 = !DILocation(line: 167, column: 9, scope: !6326)
!6900 = !DILocation(line: 168, column: 9, scope: !6326)
!6901 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6902)
!6902 = distinct !DILocation(line: 168, column: 9, scope: !6326)
!6903 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6902)
!6904 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6902)
!6905 = !DILocation(line: 168, column: 5, scope: !6326)
!6906 = !DILocation(line: 169, column: 40, scope: !6326)
!6907 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6908)
!6908 = distinct !DILocation(line: 169, column: 6, scope: !6326)
!6909 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6908)
!6910 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6908)
!6911 = !DILocation(line: 169, column: 6, scope: !6326)
!6912 = !DILocation(line: 169, column: 5, scope: !6326)
!6913 = !DILocation(line: 171, column: 35, scope: !6326)
!6914 = !DILocation(line: 172, column: 35, scope: !6328)
!6915 = !DILocation(line: 173, column: 19, scope: !6330)
!6916 = !DILocation(line: 173, column: 9, scope: !6332)
!6917 = !DILocation(line: 174, column: 9, scope: !6332)
!6918 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6919)
!6919 = distinct !DILocation(line: 174, column: 9, scope: !6332)
!6920 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6919)
!6921 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6919)
!6922 = !DILocation(line: 174, column: 5, scope: !6332)
!6923 = !DILocation(line: 175, column: 40, scope: !6332)
!6924 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6925)
!6925 = distinct !DILocation(line: 175, column: 6, scope: !6332)
!6926 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6925)
!6927 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6925)
!6928 = !DILocation(line: 175, column: 6, scope: !6332)
!6929 = !DILocation(line: 175, column: 5, scope: !6332)
!6930 = !DILocation(line: 177, column: 19, scope: !6332)
!6931 = !DILocation(line: 177, column: 9, scope: !6334)
!6932 = !DILocation(line: 178, column: 9, scope: !6334)
!6933 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6934)
!6934 = distinct !DILocation(line: 178, column: 9, scope: !6334)
!6935 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6934)
!6936 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6934)
!6937 = !DILocation(line: 178, column: 5, scope: !6334)
!6938 = !DILocation(line: 179, column: 40, scope: !6334)
!6939 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6940)
!6940 = distinct !DILocation(line: 179, column: 6, scope: !6334)
!6941 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6940)
!6942 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6940)
!6943 = !DILocation(line: 179, column: 6, scope: !6334)
!6944 = !DILocation(line: 179, column: 5, scope: !6334)
!6945 = !DILocation(line: 181, column: 19, scope: !6334)
!6946 = !DILocation(line: 181, column: 9, scope: !6336)
!6947 = !DILocation(line: 182, column: 9, scope: !6336)
!6948 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6949)
!6949 = distinct !DILocation(line: 182, column: 9, scope: !6336)
!6950 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6949)
!6951 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6949)
!6952 = !DILocation(line: 182, column: 5, scope: !6336)
!6953 = !DILocation(line: 183, column: 40, scope: !6336)
!6954 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6955)
!6955 = distinct !DILocation(line: 183, column: 6, scope: !6336)
!6956 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6955)
!6957 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6955)
!6958 = !DILocation(line: 183, column: 6, scope: !6336)
!6959 = !DILocation(line: 183, column: 5, scope: !6336)
!6960 = !DILocation(line: 186, column: 19, scope: !6336)
!6961 = !DILocation(line: 186, column: 9, scope: !6338)
!6962 = !DILocation(line: 187, column: 9, scope: !6338)
!6963 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6964)
!6964 = distinct !DILocation(line: 187, column: 9, scope: !6338)
!6965 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6964)
!6966 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6964)
!6967 = !DILocation(line: 187, column: 5, scope: !6338)
!6968 = !DILocation(line: 188, column: 40, scope: !6338)
!6969 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6970)
!6970 = distinct !DILocation(line: 188, column: 6, scope: !6338)
!6971 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6970)
!6972 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6970)
!6973 = !DILocation(line: 188, column: 6, scope: !6338)
!6974 = !DILocation(line: 188, column: 5, scope: !6338)
!6975 = !DILocation(line: 191, column: 19, scope: !6338)
!6976 = !DILocation(line: 191, column: 9, scope: !6340)
!6977 = !DILocation(line: 192, column: 9, scope: !6340)
!6978 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6979)
!6979 = distinct !DILocation(line: 192, column: 9, scope: !6340)
!6980 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6979)
!6981 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6979)
!6982 = !DILocation(line: 192, column: 5, scope: !6340)
!6983 = !DILocation(line: 193, column: 41, scope: !6340)
!6984 = !DILocation(line: 194, column: 11, scope: !6340)
!6985 = !DILocation(line: 193, column: 40, scope: !6340)
!6986 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !6987)
!6987 = distinct !DILocation(line: 193, column: 6, scope: !6340)
!6988 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !6987)
!6989 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !6987)
!6990 = !DILocation(line: 193, column: 6, scope: !6340)
!6991 = !DILocation(line: 193, column: 5, scope: !6340)
!6992 = !DILocation(line: 196, column: 19, scope: !6340)
!6993 = !DILocation(line: 196, column: 9, scope: !6342)
!6994 = !DILocation(line: 197, column: 9, scope: !6342)
!6995 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !6996)
!6996 = distinct !DILocation(line: 197, column: 9, scope: !6342)
!6997 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !6996)
!6998 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !6996)
!6999 = !DILocation(line: 197, column: 5, scope: !6342)
!7000 = !DILocation(line: 198, column: 40, scope: !6342)
!7001 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7002)
!7002 = distinct !DILocation(line: 198, column: 6, scope: !6342)
!7003 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7002)
!7004 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7002)
!7005 = !DILocation(line: 198, column: 6, scope: !6342)
!7006 = !DILocation(line: 198, column: 5, scope: !6342)
!7007 = !DILocation(line: 200, column: 19, scope: !6342)
!7008 = !DILocation(line: 200, column: 9, scope: !6344)
!7009 = !DILocation(line: 201, column: 9, scope: !6344)
!7010 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7011)
!7011 = distinct !DILocation(line: 201, column: 9, scope: !6344)
!7012 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7011)
!7013 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7011)
!7014 = !DILocation(line: 201, column: 5, scope: !6344)
!7015 = !DILocation(line: 202, column: 41, scope: !6344)
!7016 = !DILocation(line: 203, column: 11, scope: !6344)
!7017 = !DILocation(line: 202, column: 40, scope: !6344)
!7018 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7019)
!7019 = distinct !DILocation(line: 202, column: 6, scope: !6344)
!7020 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7019)
!7021 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7019)
!7022 = !DILocation(line: 202, column: 6, scope: !6344)
!7023 = !DILocation(line: 202, column: 5, scope: !6344)
!7024 = !DILocation(line: 204, column: 19, scope: !6344)
!7025 = !DILocation(line: 204, column: 9, scope: !6346)
!7026 = !DILocation(line: 205, column: 9, scope: !6346)
!7027 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7028)
!7028 = distinct !DILocation(line: 205, column: 9, scope: !6346)
!7029 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7028)
!7030 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7028)
!7031 = !DILocation(line: 205, column: 5, scope: !6346)
!7032 = !DILocation(line: 206, column: 40, scope: !6346)
!7033 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7034)
!7034 = distinct !DILocation(line: 206, column: 6, scope: !6346)
!7035 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7034)
!7036 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7034)
!7037 = !DILocation(line: 206, column: 6, scope: !6346)
!7038 = !DILocation(line: 206, column: 5, scope: !6346)
!7039 = !DILocation(line: 208, column: 19, scope: !6346)
!7040 = !DILocation(line: 208, column: 9, scope: !6348)
!7041 = !DILocation(line: 209, column: 9, scope: !6348)
!7042 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7043)
!7043 = distinct !DILocation(line: 209, column: 9, scope: !6348)
!7044 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7043)
!7045 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7043)
!7046 = !DILocation(line: 209, column: 5, scope: !6348)
!7047 = !DILocation(line: 210, column: 41, scope: !6348)
!7048 = !DILocation(line: 211, column: 11, scope: !6348)
!7049 = !DILocation(line: 211, column: 24, scope: !6348)
!7050 = !DILocation(line: 210, column: 40, scope: !6348)
!7051 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7052)
!7052 = distinct !DILocation(line: 210, column: 6, scope: !6348)
!7053 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7052)
!7054 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7052)
!7055 = !DILocation(line: 210, column: 6, scope: !6348)
!7056 = !DILocation(line: 210, column: 5, scope: !6348)
!7057 = !DILocation(line: 212, column: 19, scope: !6348)
!7058 = !DILocation(line: 212, column: 9, scope: !6350)
!7059 = !DILocation(line: 213, column: 9, scope: !6350)
!7060 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7061)
!7061 = distinct !DILocation(line: 213, column: 9, scope: !6350)
!7062 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7061)
!7063 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7061)
!7064 = !DILocation(line: 213, column: 5, scope: !6350)
!7065 = !DILocation(line: 214, column: 40, scope: !6350)
!7066 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7067)
!7067 = distinct !DILocation(line: 214, column: 6, scope: !6350)
!7068 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7067)
!7069 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7067)
!7070 = !DILocation(line: 214, column: 6, scope: !6350)
!7071 = !DILocation(line: 214, column: 5, scope: !6350)
!7072 = !DILocation(line: 216, column: 19, scope: !6350)
!7073 = !DILocation(line: 216, column: 9, scope: !6352)
!7074 = !DILocation(line: 217, column: 9, scope: !6352)
!7075 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7076)
!7076 = distinct !DILocation(line: 217, column: 9, scope: !6352)
!7077 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7076)
!7078 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7076)
!7079 = !DILocation(line: 217, column: 5, scope: !6352)
!7080 = !DILocation(line: 218, column: 40, scope: !6352)
!7081 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7082)
!7082 = distinct !DILocation(line: 218, column: 6, scope: !6352)
!7083 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7082)
!7084 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7082)
!7085 = !DILocation(line: 218, column: 6, scope: !6352)
!7086 = !DILocation(line: 218, column: 5, scope: !6352)
!7087 = !DILocation(line: 220, column: 19, scope: !6352)
!7088 = !DILocation(line: 220, column: 9, scope: !6354)
!7089 = !DILocation(line: 221, column: 9, scope: !6354)
!7090 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7091)
!7091 = distinct !DILocation(line: 221, column: 9, scope: !6354)
!7092 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7091)
!7093 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7091)
!7094 = !DILocation(line: 221, column: 5, scope: !6354)
!7095 = !DILocation(line: 222, column: 40, scope: !6354)
!7096 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7097)
!7097 = distinct !DILocation(line: 222, column: 6, scope: !6354)
!7098 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7097)
!7099 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7097)
!7100 = !DILocation(line: 222, column: 6, scope: !6354)
!7101 = !DILocation(line: 222, column: 5, scope: !6354)
!7102 = !DILocation(line: 224, column: 19, scope: !6354)
!7103 = !DILocation(line: 224, column: 9, scope: !6356)
!7104 = !DILocation(line: 225, column: 9, scope: !6356)
!7105 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7106)
!7106 = distinct !DILocation(line: 225, column: 9, scope: !6356)
!7107 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7106)
!7108 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7106)
!7109 = !DILocation(line: 225, column: 5, scope: !6356)
!7110 = !DILocation(line: 226, column: 40, scope: !6356)
!7111 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7112)
!7112 = distinct !DILocation(line: 226, column: 6, scope: !6356)
!7113 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7112)
!7114 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7112)
!7115 = !DILocation(line: 226, column: 6, scope: !6356)
!7116 = !DILocation(line: 226, column: 5, scope: !6356)
!7117 = !DILocation(line: 229, column: 19, scope: !6356)
!7118 = !DILocation(line: 229, column: 9, scope: !6358)
!7119 = !DILocation(line: 230, column: 9, scope: !6358)
!7120 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7121)
!7121 = distinct !DILocation(line: 230, column: 9, scope: !6358)
!7122 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7121)
!7123 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7121)
!7124 = !DILocation(line: 230, column: 5, scope: !6358)
!7125 = !DILocation(line: 231, column: 40, scope: !6358)
!7126 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7127)
!7127 = distinct !DILocation(line: 231, column: 6, scope: !6358)
!7128 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7127)
!7129 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7127)
!7130 = !DILocation(line: 231, column: 6, scope: !6358)
!7131 = !DILocation(line: 231, column: 5, scope: !6358)
!7132 = !DILocation(line: 234, column: 40, scope: !6358)
!7133 = !DILocation(line: 235, column: 46, scope: !6360)
!7134 = !DILocation(line: 235, column: 45, scope: !6360)
!7135 = !DILocation(line: 236, column: 15, scope: !6362)
!7136 = !DILocation(line: 236, column: 9, scope: !6364)
!7137 = !DILocation(line: 237, column: 17, scope: !6364)
!7138 = !DILocation(line: 237, column: 9, scope: !6366)
!7139 = !DILocation(line: 238, column: 65, scope: !6366)
!7140 = !DILocation(line: 238, column: 40, scope: !6366)
!7141 = !DILocation(line: 239, column: 17, scope: !6368)
!7142 = !DILocation(line: 239, column: 9, scope: !6370)
!7143 = !DILocation(line: 240, column: 67, scope: !6370)
!7144 = !DILocation(line: 240, column: 45, scope: !6370)
!7145 = !DILocation(line: 340, column: 1, scope: !6366)
!7146 = !DILocation(line: 241, column: 17, scope: !6372)
!7147 = !DILocation(line: 241, column: 9, scope: !6374)
!7148 = !DILocation(line: 242, column: 17, scope: !6374)
!7149 = !DILocation(line: 242, column: 9, scope: !6376)
!7150 = !DILocation(line: 243, column: 65, scope: !6376)
!7151 = !DILocation(line: 243, column: 40, scope: !6376)
!7152 = !DILocation(line: 340, column: 1, scope: !6370)
!7153 = !DILocation(line: 244, column: 17, scope: !6378)
!7154 = !DILocation(line: 244, column: 9, scope: !6380)
!7155 = !DILocation(line: 245, column: 45, scope: !6380)
!7156 = !DILocation(line: 246, column: 17, scope: !6382)
!7157 = !DILocation(line: 246, column: 9, scope: !6385)
!7158 = !DILocation(line: 247, column: 17, scope: !6385)
!7159 = !DILocation(line: 247, column: 9, scope: !6387)
!7160 = !DILocation(line: 248, column: 40, scope: !6387)
!7161 = !DILocation(line: 248, column: 9, scope: !6389)
!7162 = !DILocation(line: 249, column: 5, scope: !6389)
!7163 = !DILocation(line: 250, column: 5, scope: !6389)
!7164 = !DILocation(line: 251, column: 19, scope: !6389)
!7165 = !DILocation(line: 251, column: 9, scope: !6391)
!7166 = !DILocation(line: 252, column: 9, scope: !6391)
!7167 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7168)
!7168 = distinct !DILocation(line: 252, column: 9, scope: !6391)
!7169 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7168)
!7170 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7168)
!7171 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7168)
!7172 = !DILocation(line: 340, column: 1, scope: !6376)
!7173 = !DILocation(line: 252, column: 5, scope: !6391)
!7174 = !DILocation(line: 316, column: 2, scope: !7175, inlinedAt: !7176)
!7175 = distinct !DISubprogram(name: "size_of<[i32; 4]>", linkageName: "_ZN4core3mem7size_of17h3982347531adb435E", scope: !113, file: !907, line: 314, type: !1809, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !23)
!7176 = distinct !DILocation(line: 253, column: 40, scope: !6391)
!7177 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7178)
!7178 = distinct !DILocation(line: 253, column: 6, scope: !6391)
!7179 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7178)
!7180 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7178)
!7181 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7178)
!7182 = !DILocation(line: 253, column: 5, scope: !6391)
!7183 = !DILocation(line: 255, column: 19, scope: !6391)
!7184 = !DILocation(line: 255, column: 9, scope: !6393)
!7185 = !DILocation(line: 256, column: 9, scope: !6393)
!7186 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7187)
!7187 = distinct !DILocation(line: 256, column: 9, scope: !6393)
!7188 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7187)
!7189 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7187)
!7190 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7187)
!7191 = !DILocation(line: 256, column: 5, scope: !6393)
!7192 = !DILocation(line: 466, column: 2, scope: !7193, inlinedAt: !7194)
!7193 = distinct !DISubprogram(name: "align_of<[i32; 4]>", linkageName: "_ZN4core3mem8align_of17he2e40d4671167328E", scope: !113, file: !907, line: 464, type: !1809, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !1473, retainedNodes: !23)
!7194 = distinct !DILocation(line: 257, column: 40, scope: !6393)
!7195 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7196)
!7196 = distinct !DILocation(line: 257, column: 6, scope: !6393)
!7197 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7196)
!7198 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7196)
!7199 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7196)
!7200 = !DILocation(line: 257, column: 5, scope: !6393)
!7201 = !DILocation(line: 259, column: 19, scope: !6393)
!7202 = !DILocation(line: 259, column: 9, scope: !6395)
!7203 = !DILocation(line: 260, column: 9, scope: !6395)
!7204 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7205)
!7205 = distinct !DILocation(line: 260, column: 9, scope: !6395)
!7206 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7205)
!7207 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7205)
!7208 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7205)
!7209 = !DILocation(line: 260, column: 5, scope: !6395)
!7210 = !DILocation(line: 316, column: 2, scope: !7211, inlinedAt: !7214)
!7211 = distinct !DISubprogram(name: "size_of<[[i32; 5]; 4]>", linkageName: "_ZN4core3mem7size_of17h3f2daa28941e70cfE", scope: !113, file: !907, line: 314, type: !1809, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !7212, retainedNodes: !23)
!7212 = !{!7213}
!7213 = !DITemplateTypeParameter(name: "T", type: !6022)
!7214 = distinct !DILocation(line: 261, column: 40, scope: !6395)
!7215 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7216)
!7216 = distinct !DILocation(line: 261, column: 6, scope: !6395)
!7217 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7216)
!7218 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7216)
!7219 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7216)
!7220 = !DILocation(line: 261, column: 5, scope: !6395)
!7221 = !DILocation(line: 264, column: 19, scope: !6395)
!7222 = !DILocation(line: 264, column: 9, scope: !6397)
!7223 = !DILocation(line: 265, column: 9, scope: !6397)
!7224 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7225)
!7225 = distinct !DILocation(line: 265, column: 9, scope: !6397)
!7226 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7225)
!7227 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7225)
!7228 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7225)
!7229 = !DILocation(line: 265, column: 5, scope: !6397)
!7230 = !DILocation(line: 466, column: 2, scope: !7231, inlinedAt: !7232)
!7231 = distinct !DISubprogram(name: "align_of<[[i32; 5]; 4]>", linkageName: "_ZN4core3mem8align_of17h88fa98d4a4db7292E", scope: !113, file: !907, line: 464, type: !1809, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !7212, retainedNodes: !23)
!7232 = distinct !DILocation(line: 266, column: 40, scope: !6397)
!7233 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7234)
!7234 = distinct !DILocation(line: 266, column: 6, scope: !6397)
!7235 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7234)
!7236 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7234)
!7237 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7234)
!7238 = !DILocation(line: 266, column: 5, scope: !6397)
!7239 = !DILocation(line: 269, column: 19, scope: !6397)
!7240 = !DILocation(line: 269, column: 9, scope: !6399)
!7241 = !DILocation(line: 270, column: 9, scope: !6399)
!7242 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7243)
!7243 = distinct !DILocation(line: 270, column: 9, scope: !6399)
!7244 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7243)
!7245 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7243)
!7246 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7243)
!7247 = !DILocation(line: 270, column: 5, scope: !6399)
!7248 = !DILocation(line: 271, column: 41, scope: !6399)
!7249 = !DILocation(line: 316, column: 2, scope: !7250, inlinedAt: !7251)
!7250 = distinct !DISubprogram(name: "size_of<i32>", linkageName: "_ZN4core3mem7size_of17h2f75f012369b2015E", scope: !113, file: !907, line: 314, type: !1809, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !23)
!7251 = distinct !DILocation(line: 272, column: 11, scope: !6399)
!7252 = !DILocation(line: 271, column: 40, scope: !6399)
!7253 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7254)
!7254 = distinct !DILocation(line: 271, column: 6, scope: !6399)
!7255 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7254)
!7256 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7254)
!7257 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7254)
!7258 = !DILocation(line: 271, column: 5, scope: !6399)
!7259 = !DILocation(line: 274, column: 19, scope: !6399)
!7260 = !DILocation(line: 274, column: 9, scope: !6401)
!7261 = !DILocation(line: 275, column: 9, scope: !6401)
!7262 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7263)
!7263 = distinct !DILocation(line: 275, column: 9, scope: !6401)
!7264 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7263)
!7265 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7263)
!7266 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7263)
!7267 = !DILocation(line: 275, column: 5, scope: !6401)
!7268 = !DILocation(line: 466, column: 2, scope: !7269, inlinedAt: !7270)
!7269 = distinct !DISubprogram(name: "align_of<i32>", linkageName: "_ZN4core3mem8align_of17h4ae4c7024586286dE", scope: !113, file: !907, line: 464, type: !1809, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !466, retainedNodes: !23)
!7270 = distinct !DILocation(line: 276, column: 40, scope: !6401)
!7271 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7272)
!7272 = distinct !DILocation(line: 276, column: 6, scope: !6401)
!7273 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7272)
!7274 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7272)
!7275 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7272)
!7276 = !DILocation(line: 276, column: 5, scope: !6401)
!7277 = !DILocation(line: 278, column: 19, scope: !6401)
!7278 = !DILocation(line: 278, column: 9, scope: !6403)
!7279 = !DILocation(line: 279, column: 9, scope: !6403)
!7280 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7281)
!7281 = distinct !DILocation(line: 279, column: 9, scope: !6403)
!7282 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7281)
!7283 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7281)
!7284 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7281)
!7285 = !DILocation(line: 279, column: 5, scope: !6403)
!7286 = !DILocation(line: 316, column: 2, scope: !7175, inlinedAt: !7287)
!7287 = distinct !DILocation(line: 281, column: 11, scope: !6403)
!7288 = !DILocation(line: 280, column: 40, scope: !6403)
!7289 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7290)
!7290 = distinct !DILocation(line: 280, column: 6, scope: !6403)
!7291 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7290)
!7292 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7290)
!7293 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7290)
!7294 = !DILocation(line: 280, column: 5, scope: !6403)
!7295 = !DILocation(line: 283, column: 19, scope: !6403)
!7296 = !DILocation(line: 283, column: 9, scope: !6405)
!7297 = !DILocation(line: 284, column: 9, scope: !6405)
!7298 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7299)
!7299 = distinct !DILocation(line: 284, column: 9, scope: !6405)
!7300 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7299)
!7301 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7299)
!7302 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7299)
!7303 = !DILocation(line: 284, column: 5, scope: !6405)
!7304 = !DILocation(line: 466, column: 2, scope: !7193, inlinedAt: !7305)
!7305 = distinct !DILocation(line: 285, column: 40, scope: !6405)
!7306 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7307)
!7307 = distinct !DILocation(line: 285, column: 6, scope: !6405)
!7308 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7307)
!7309 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7307)
!7310 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7307)
!7311 = !DILocation(line: 285, column: 5, scope: !6405)
!7312 = !DILocation(line: 287, column: 19, scope: !6405)
!7313 = !DILocation(line: 287, column: 9, scope: !6407)
!7314 = !DILocation(line: 288, column: 9, scope: !6407)
!7315 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7316)
!7316 = distinct !DILocation(line: 288, column: 9, scope: !6407)
!7317 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7316)
!7318 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7316)
!7319 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7316)
!7320 = !DILocation(line: 288, column: 5, scope: !6407)
!7321 = !DILocation(line: 289, column: 41, scope: !6407)
!7322 = !DILocation(line: 316, column: 2, scope: !7250, inlinedAt: !7323)
!7323 = distinct !DILocation(line: 290, column: 11, scope: !6407)
!7324 = !DILocation(line: 289, column: 40, scope: !6407)
!7325 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7326)
!7326 = distinct !DILocation(line: 289, column: 6, scope: !6407)
!7327 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7326)
!7328 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7326)
!7329 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7326)
!7330 = !DILocation(line: 289, column: 5, scope: !6407)
!7331 = !DILocation(line: 292, column: 19, scope: !6407)
!7332 = !DILocation(line: 292, column: 9, scope: !6409)
!7333 = !DILocation(line: 293, column: 9, scope: !6409)
!7334 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7335)
!7335 = distinct !DILocation(line: 293, column: 9, scope: !6409)
!7336 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7335)
!7337 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7335)
!7338 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7335)
!7339 = !DILocation(line: 293, column: 5, scope: !6409)
!7340 = !DILocation(line: 466, column: 2, scope: !7269, inlinedAt: !7341)
!7341 = distinct !DILocation(line: 294, column: 40, scope: !6409)
!7342 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7343)
!7343 = distinct !DILocation(line: 294, column: 6, scope: !6409)
!7344 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7343)
!7345 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7343)
!7346 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7343)
!7347 = !DILocation(line: 294, column: 5, scope: !6409)
!7348 = !DILocation(line: 296, column: 19, scope: !6409)
!7349 = !DILocation(line: 296, column: 9, scope: !6411)
!7350 = !DILocation(line: 297, column: 9, scope: !6411)
!7351 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7352)
!7352 = distinct !DILocation(line: 297, column: 9, scope: !6411)
!7353 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7352)
!7354 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7352)
!7355 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7352)
!7356 = !DILocation(line: 297, column: 5, scope: !6411)
!7357 = !DILocation(line: 316, column: 2, scope: !7358, inlinedAt: !7361)
!7358 = distinct !DISubprogram(name: "size_of<[*mut i32; 3]>", linkageName: "_ZN4core3mem7size_of17h0c24bd10b4482703E", scope: !113, file: !907, line: 314, type: !1809, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !7359, retainedNodes: !23)
!7359 = !{!7360}
!7360 = !DITemplateTypeParameter(name: "T", type: !6383)
!7361 = distinct !DILocation(line: 298, column: 40, scope: !6411)
!7362 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7363)
!7363 = distinct !DILocation(line: 298, column: 6, scope: !6411)
!7364 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7363)
!7365 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7363)
!7366 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7363)
!7367 = !DILocation(line: 298, column: 5, scope: !6411)
!7368 = !DILocation(line: 301, column: 19, scope: !6411)
!7369 = !DILocation(line: 301, column: 9, scope: !6413)
!7370 = !DILocation(line: 302, column: 9, scope: !6413)
!7371 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7372)
!7372 = distinct !DILocation(line: 302, column: 9, scope: !6413)
!7373 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7372)
!7374 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7372)
!7375 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7372)
!7376 = !DILocation(line: 302, column: 5, scope: !6413)
!7377 = !DILocation(line: 466, column: 2, scope: !7378, inlinedAt: !7379)
!7378 = distinct !DISubprogram(name: "align_of<[*mut i32; 3]>", linkageName: "_ZN4core3mem8align_of17hd20d861371d4c80bE", scope: !113, file: !907, line: 464, type: !1809, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !7359, retainedNodes: !23)
!7379 = distinct !DILocation(line: 303, column: 40, scope: !6413)
!7380 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7381)
!7381 = distinct !DILocation(line: 303, column: 6, scope: !6413)
!7382 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7381)
!7383 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7381)
!7384 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7381)
!7385 = !DILocation(line: 303, column: 5, scope: !6413)
!7386 = !DILocation(line: 306, column: 19, scope: !6413)
!7387 = !DILocation(line: 306, column: 9, scope: !6415)
!7388 = !DILocation(line: 307, column: 9, scope: !6415)
!7389 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7390)
!7390 = distinct !DILocation(line: 307, column: 9, scope: !6415)
!7391 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7390)
!7392 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7390)
!7393 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7390)
!7394 = !DILocation(line: 307, column: 5, scope: !6415)
!7395 = !DILocation(line: 316, column: 2, scope: !7396, inlinedAt: !7399)
!7396 = distinct !DISubprogram(name: "size_of<*mut i32>", linkageName: "_ZN4core3mem7size_of17hcbdd07cfc9fa5b4dE", scope: !113, file: !907, line: 314, type: !1809, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !7397, retainedNodes: !23)
!7397 = !{!7398}
!7398 = !DITemplateTypeParameter(name: "T", type: !1015)
!7399 = distinct !DILocation(line: 308, column: 40, scope: !6415)
!7400 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7401)
!7401 = distinct !DILocation(line: 308, column: 6, scope: !6415)
!7402 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7401)
!7403 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7401)
!7404 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7401)
!7405 = !DILocation(line: 308, column: 5, scope: !6415)
!7406 = !DILocation(line: 310, column: 19, scope: !6415)
!7407 = !DILocation(line: 310, column: 9, scope: !6417)
!7408 = !DILocation(line: 311, column: 9, scope: !6417)
!7409 = !DILocation(line: 1189, column: 35, scope: !6433, inlinedAt: !7410)
!7410 = distinct !DILocation(line: 311, column: 9, scope: !6417)
!7411 = !DILocation(line: 1189, column: 41, scope: !6433, inlinedAt: !7410)
!7412 = !DILocation(line: 1190, column: 13, scope: !6433, inlinedAt: !7410)
!7413 = !DILocation(line: 1191, column: 10, scope: !6433, inlinedAt: !7410)
!7414 = !DILocation(line: 311, column: 5, scope: !6417)
!7415 = !DILocation(line: 466, column: 2, scope: !7416, inlinedAt: !7417)
!7416 = distinct !DISubprogram(name: "align_of<*mut i32>", linkageName: "_ZN4core3mem8align_of17hcd712205144a57cfE", scope: !113, file: !907, line: 464, type: !1809, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !7397, retainedNodes: !23)
!7417 = distinct !DILocation(line: 312, column: 40, scope: !6417)
!7418 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7419)
!7419 = distinct !DILocation(line: 312, column: 6, scope: !6417)
!7420 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7419)
!7421 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7419)
!7422 = !DILocation(line: 473, column: 6, scope: !6182, inlinedAt: !7419)
!7423 = !DILocation(line: 312, column: 5, scope: !6417)
!7424 = !DILocation(line: 314, column: 8, scope: !6417)
!7425 = !DILocation(line: 314, column: 13, scope: !6417)
!7426 = !DILocation(line: 319, column: 15, scope: !6417)
!7427 = !DILocation(line: 327, column: 12, scope: !6417)
!7428 = !DILocation(line: 327, column: 17, scope: !6417)
!7429 = !DILocation(line: 332, column: 19, scope: !6417)
!7430 = !DILocation(line: 340, column: 2, scope: !6255)
!7431 = !DILocation(line: 332, column: 17, scope: !6417)
!7432 = !DILocation(line: 328, column: 13, scope: !6417)
!7433 = !DILocation(line: 319, column: 13, scope: !6417)
!7434 = !DILocation(line: 315, column: 9, scope: !6417)
!7435 = !DILocation(line: 33, column: 1, scope: !6255)
!7436 = distinct !DISubprogram(name: "rust_twice", scope: !7438, file: !7437, line: 11, type: !6080, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7439)
!7437 = !DIFile(filename: "src/shadowing.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "79db76febfdb77f7d188594452a30579")
!7438 = !DINamespace(name: "shadowing", scope: !1184)
!7439 = !{!7440}
!7440 = !DILocalVariable(name: "i", arg: 1, scope: !7436, file: !7437, line: 11, type: !33)
!7441 = !DILocation(line: 11, column: 37, scope: !7436)
!7442 = !DILocation(line: 12, column: 12, scope: !7436)
!7443 = !DILocation(line: 13, column: 2, scope: !7436)
!7444 = distinct !DISubprogram(name: "rust_shadow", scope: !7438, file: !7437, line: 15, type: !5980, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7445)
!7445 = !{!7446, !7447, !7448, !7450, !7452, !7454}
!7446 = !DILocalVariable(name: "buffer_size", arg: 1, scope: !7444, file: !7437, line: 16, type: !419)
!7447 = !DILocalVariable(name: "buffer", arg: 2, scope: !7444, file: !7437, line: 17, type: !1015)
!7448 = !DILocalVariable(name: "i", scope: !7449, file: !7437, line: 19, type: !33, align: 4)
!7449 = distinct !DILexicalBlock(scope: !7444, file: !7437, line: 19, column: 5)
!7450 = !DILocalVariable(name: "i_0", scope: !7451, file: !7437, line: 20, type: !33, align: 4)
!7451 = distinct !DILexicalBlock(scope: !7449, file: !7437, line: 20, column: 5)
!7452 = !DILocalVariable(name: "j", scope: !7453, file: !7437, line: 21, type: !33, align: 4)
!7453 = distinct !DILexicalBlock(scope: !7451, file: !7437, line: 21, column: 5)
!7454 = !DILocalVariable(name: "i_1", scope: !7455, file: !7437, line: 24, type: !33, align: 4)
!7455 = distinct !DILexicalBlock(scope: !7453, file: !7437, line: 24, column: 9)
!7456 = !DILocation(line: 16, column: 5, scope: !7444)
!7457 = !DILocation(line: 17, column: 5, scope: !7444)
!7458 = !DILocation(line: 20, column: 9, scope: !7451)
!7459 = !DILocation(line: 21, column: 9, scope: !7453)
!7460 = !DILocation(line: 19, column: 34, scope: !7444)
!7461 = !DILocation(line: 19, column: 9, scope: !7449)
!7462 = !DILocation(line: 20, column: 36, scope: !7449)
!7463 = !DILocation(line: 21, column: 34, scope: !7451)
!7464 = !DILocation(line: 22, column: 5, scope: !7453)
!7465 = !DILocation(line: 22, column: 12, scope: !7453)
!7466 = !DILocation(line: 22, column: 11, scope: !7453)
!7467 = !DILocation(line: 29, column: 8, scope: !7453)
!7468 = !DILocation(line: 23, column: 51, scope: !7453)
!7469 = !DILocation(line: 23, column: 40, scope: !7453)
!7470 = !DILocation(line: 23, column: 24, scope: !7453)
!7471 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7472)
!7472 = distinct !DILocation(line: 23, column: 10, scope: !7453)
!7473 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7472)
!7474 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7472)
!7475 = !DILocation(line: 23, column: 10, scope: !7453)
!7476 = !DILocation(line: 23, column: 9, scope: !7453)
!7477 = !DILocation(line: 24, column: 40, scope: !7453)
!7478 = !DILocation(line: 24, column: 13, scope: !7455)
!7479 = !DILocation(line: 25, column: 9, scope: !7455)
!7480 = !DILocation(line: 27, column: 9, scope: !7455)
!7481 = !DILocation(line: 32, column: 2, scope: !7444)
!7482 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7483)
!7483 = distinct !DILocation(line: 30, column: 10, scope: !7453)
!7484 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7483)
!7485 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7483)
!7486 = !DILocation(line: 30, column: 10, scope: !7453)
!7487 = !DILocation(line: 30, column: 9, scope: !7453)
!7488 = !DILocation(line: 29, column: 5, scope: !7453)
!7489 = distinct !DISubprogram(name: "rust_side_effect", scope: !7491, file: !7490, line: 11, type: !7492, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7494)
!7490 = !DIFile(filename: "src/exprs.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "a3fd46f1afe89137b36d8428f12ac5e9")
!7491 = !DINamespace(name: "exprs", scope: !1184)
!7492 = !DISubroutineType(types: !7493)
!7493 = !{!33, !1015}
!7494 = !{!7495}
!7495 = !DILocalVariable(name: "x", arg: 1, scope: !7489, file: !7490, line: 12, type: !1015)
!7496 = !DILocation(line: 12, column: 5, scope: !7489)
!7497 = !DILocation(line: 14, column: 5, scope: !7489)
!7498 = !DILocation(line: 16, column: 2, scope: !7489)
!7499 = distinct !DISubprogram(name: "rust_exprs", scope: !7491, file: !7490, line: 18, type: !5980, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7500)
!7500 = !{!7501, !7502, !7503, !7505}
!7501 = !DILocalVariable(name: "n", arg: 1, scope: !7499, file: !7490, line: 18, type: !419)
!7502 = !DILocalVariable(name: "buffer", arg: 2, scope: !7499, file: !7490, line: 18, type: !1015)
!7503 = !DILocalVariable(name: "i", scope: !7504, file: !7490, line: 19, type: !115, align: 8)
!7504 = distinct !DILexicalBlock(scope: !7499, file: !7490, line: 19, column: 5)
!7505 = !DILocalVariable(name: "arr", scope: !7506, file: !7490, line: 20, type: !7507, align: 1)
!7506 = distinct !DILexicalBlock(scope: !7504, file: !7490, line: 20, column: 5)
!7507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 8, align: 8, elements: !77)
!7508 = !DILocation(line: 18, column: 37, scope: !7499)
!7509 = !DILocation(line: 18, column: 58, scope: !7499)
!7510 = !DILocation(line: 20, column: 9, scope: !7506)
!7511 = !DILocation(line: 19, column: 36, scope: !7499)
!7512 = !DILocation(line: 19, column: 9, scope: !7504)
!7513 = !DILocation(line: 20, column: 42, scope: !7504)
!7514 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7515)
!7515 = distinct !DILocation(line: 21, column: 28, scope: !7506)
!7516 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7515)
!7517 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7515)
!7518 = !DILocation(line: 21, column: 28, scope: !7506)
!7519 = !DILocation(line: 21, column: 5, scope: !7506)
!7520 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7521)
!7521 = distinct !DILocation(line: 22, column: 29, scope: !7506)
!7522 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7521)
!7523 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7521)
!7524 = !DILocation(line: 22, column: 29, scope: !7506)
!7525 = !DILocation(line: 22, column: 6, scope: !7506)
!7526 = !DILocation(line: 22, column: 5, scope: !7506)
!7527 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7528)
!7528 = distinct !DILocation(line: 28, column: 45, scope: !7506)
!7529 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7528)
!7530 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7528)
!7531 = !DILocation(line: 28, column: 45, scope: !7506)
!7532 = !DILocation(line: 25, column: 13, scope: !7506)
!7533 = !DILocalVariable(name: "self", arg: 1, scope: !7534, file: !2211, line: 453, type: !2174)
!7534 = distinct !DISubprogram(name: "offset<i8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hfa545392c700faefE", scope: !2212, file: !2211, line: 453, type: !7535, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !2182, retainedNodes: !7537)
!7535 = !DISubroutineType(types: !7536)
!7536 = !{!2174, !2174, !335}
!7537 = !{!7533, !7538}
!7538 = !DILocalVariable(name: "count", arg: 2, scope: !7534, file: !2211, line: 453, type: !335)
!7539 = !DILocation(line: 453, column: 32, scope: !7534, inlinedAt: !7540)
!7540 = distinct !DILocation(line: 23, column: 7, scope: !7506)
!7541 = !DILocation(line: 453, column: 38, scope: !7534, inlinedAt: !7540)
!7542 = !DILocation(line: 458, column: 18, scope: !7534, inlinedAt: !7540)
!7543 = !DILocation(line: 23, column: 7, scope: !7506)
!7544 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7545)
!7545 = distinct !DILocation(line: 31, column: 32, scope: !7506)
!7546 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7545)
!7547 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7545)
!7548 = !DILocation(line: 31, column: 32, scope: !7506)
!7549 = !DILocation(line: 31, column: 9, scope: !7506)
!7550 = !DILocation(line: 31, column: 5, scope: !7506)
!7551 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7552)
!7552 = distinct !DILocation(line: 33, column: 32, scope: !7506)
!7553 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7552)
!7554 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7552)
!7555 = !DILocation(line: 33, column: 32, scope: !7506)
!7556 = !DILocation(line: 33, column: 9, scope: !7506)
!7557 = !DILocation(line: 33, column: 5, scope: !7506)
!7558 = !DILocation(line: 34, column: 2, scope: !7499)
!7559 = distinct !DISubprogram(name: "rust_setmem", scope: !7561, file: !7560, line: 18, type: !5980, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7562)
!7560 = !DIFile(filename: "src/strings_h.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "65b61879cfff1c7ef60e4269628e91ea")
!7561 = !DINamespace(name: "strings_h", scope: !1184)
!7562 = !{!7563, !7564}
!7563 = !DILocalVariable(name: "size", arg: 1, scope: !7559, file: !7560, line: 19, type: !419)
!7564 = !DILocalVariable(name: "buffer", arg: 2, scope: !7559, file: !7560, line: 20, type: !1015)
!7565 = !DILocation(line: 19, column: 5, scope: !7559)
!7566 = !DILocation(line: 20, column: 5, scope: !7559)
!7567 = !DILocation(line: 23, column: 9, scope: !7559)
!7568 = !DILocation(line: 25, column: 9, scope: !7559)
!7569 = !DILocation(line: 26, column: 27, scope: !7559)
!7570 = !DILocation(line: 1254, column: 35, scope: !6194, inlinedAt: !7571)
!7571 = distinct !DILocation(line: 25, column: 9, scope: !7559)
!7572 = !DILocation(line: 1254, column: 41, scope: !6194, inlinedAt: !7571)
!7573 = !DILocation(line: 1255, column: 13, scope: !6194, inlinedAt: !7571)
!7574 = !DILocation(line: 22, column: 5, scope: !7559)
!7575 = !DILocation(line: 28, column: 2, scope: !7559)
!7576 = distinct !DISubprogram(name: "rust_foo", scope: !7578, file: !7577, line: 11, type: !7579, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7581)
!7577 = !DIFile(filename: "src/lvalues.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "da7207bee4644c57b4500d1568bb0b78")
!7578 = !DINamespace(name: "lvalues", scope: !1184)
!7579 = !DISubroutineType(types: !7580)
!7580 = !{!1015, !1015}
!7581 = !{!7582}
!7582 = !DILocalVariable(name: "j", arg: 1, scope: !7576, file: !7577, line: 11, type: !1015)
!7583 = !DILocation(line: 11, column: 35, scope: !7576)
!7584 = !DILocation(line: 12, column: 9, scope: !7576)
!7585 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7586)
!7586 = distinct !DILocation(line: 12, column: 9, scope: !7576)
!7587 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7586)
!7588 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7586)
!7589 = !DILocation(line: 12, column: 5, scope: !7576)
!7590 = !DILocation(line: 13, column: 12, scope: !7576)
!7591 = !DILocation(line: 14, column: 2, scope: !7576)
!7592 = distinct !DISubprogram(name: "rust_bar", scope: !7578, file: !7577, line: 16, type: !6080, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7593)
!7593 = !{!7594}
!7594 = !DILocalVariable(name: "k", arg: 1, scope: !7592, file: !7577, line: 16, type: !33)
!7595 = !DILocation(line: 16, column: 35, scope: !7592)
!7596 = !DILocation(line: 17, column: 5, scope: !7592)
!7597 = !DILocation(line: 18, column: 12, scope: !7592)
!7598 = !DILocation(line: 19, column: 2, scope: !7592)
!7599 = distinct !DISubprogram(name: "rust_lvalue", scope: !7578, file: !7577, line: 21, type: !7600, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7602)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{null, !1015}
!7602 = !{!7603, !7604, !7606, !7608}
!7603 = !DILocalVariable(name: "buffer", arg: 1, scope: !7599, file: !7577, line: 21, type: !1015)
!7604 = !DILocalVariable(name: "n", scope: !7605, file: !7577, line: 22, type: !33, align: 4)
!7605 = distinct !DILexicalBlock(scope: !7599, file: !7577, line: 22, column: 5)
!7606 = !DILocalVariable(name: "p", scope: !7607, file: !7577, line: 24, type: !1015, align: 8)
!7607 = distinct !DILexicalBlock(scope: !7605, file: !7577, line: 24, column: 5)
!7608 = !DILocalVariable(name: "arr", scope: !7609, file: !7577, line: 28, type: !7610, align: 4)
!7609 = distinct !DILexicalBlock(scope: !7607, file: !7577, line: 28, column: 5)
!7610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 32, align: 32, elements: !77)
!7611 = !DILocation(line: 21, column: 38, scope: !7599)
!7612 = !DILocation(line: 22, column: 9, scope: !7605)
!7613 = !DILocation(line: 28, column: 9, scope: !7609)
!7614 = !DILocation(line: 22, column: 34, scope: !7599)
!7615 = !DILocation(line: 23, column: 5, scope: !7605)
!7616 = !DILocation(line: 24, column: 39, scope: !7605)
!7617 = !DILocation(line: 24, column: 9, scope: !7607)
!7618 = !DILocation(line: 25, column: 5, scope: !7607)
!7619 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7620)
!7620 = distinct !DILocation(line: 26, column: 6, scope: !7607)
!7621 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7620)
!7622 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7620)
!7623 = !DILocation(line: 26, column: 6, scope: !7607)
!7624 = !DILocation(line: 26, column: 5, scope: !7607)
!7625 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7626)
!7626 = distinct !DILocation(line: 27, column: 15, scope: !7607)
!7627 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7626)
!7628 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7626)
!7629 = !DILocation(line: 27, column: 15, scope: !7607)
!7630 = !DILocation(line: 27, column: 6, scope: !7607)
!7631 = !DILocation(line: 27, column: 5, scope: !7607)
!7632 = !DILocation(line: 28, column: 47, scope: !7607)
!7633 = !DILocation(line: 28, column: 46, scope: !7607)
!7634 = !DILocation(line: 29, column: 53, scope: !7609)
!7635 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7636)
!7636 = distinct !DILocation(line: 29, column: 6, scope: !7609)
!7637 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7636)
!7638 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7636)
!7639 = !DILocation(line: 29, column: 6, scope: !7609)
!7640 = !DILocation(line: 29, column: 5, scope: !7609)
!7641 = !DILocation(line: 30, column: 5, scope: !7609)
!7642 = !DILocation(line: 31, column: 73, scope: !7609)
!7643 = !DILocation(line: 31, column: 5, scope: !7609)
!7644 = !DILocation(line: 32, column: 53, scope: !7609)
!7645 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7646)
!7646 = distinct !DILocation(line: 32, column: 6, scope: !7609)
!7647 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7646)
!7648 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7646)
!7649 = !DILocation(line: 32, column: 6, scope: !7609)
!7650 = !DILocation(line: 32, column: 5, scope: !7609)
!7651 = !DILocation(line: 34, column: 20, scope: !7609)
!7652 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7653)
!7653 = distinct !DILocation(line: 34, column: 6, scope: !7609)
!7654 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7653)
!7655 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7653)
!7656 = !DILocation(line: 34, column: 6, scope: !7609)
!7657 = !DILocation(line: 34, column: 5, scope: !7609)
!7658 = !DILocation(line: 35, column: 2, scope: !7599)
!7659 = distinct !DISubprogram(name: "rust_swap", scope: !7661, file: !7660, line: 11, type: !7662, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7664)
!7660 = !DIFile(filename: "src/qsort.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "20510c2708f5dc97790ab861d4b41050")
!7661 = !DINamespace(name: "qsort", scope: !1184)
!7662 = !DISubroutineType(types: !7663)
!7663 = !{null, !1015, !1015}
!7664 = !{!7665, !7666, !7667}
!7665 = !DILocalVariable(name: "a", arg: 1, scope: !7659, file: !7660, line: 12, type: !1015)
!7666 = !DILocalVariable(name: "b", arg: 2, scope: !7659, file: !7660, line: 13, type: !1015)
!7667 = !DILocalVariable(name: "t", scope: !7668, file: !7660, line: 15, type: !33, align: 4)
!7668 = distinct !DILexicalBlock(scope: !7659, file: !7660, line: 15, column: 5)
!7669 = !DILocation(line: 12, column: 5, scope: !7659)
!7670 = !DILocation(line: 13, column: 5, scope: !7659)
!7671 = !DILocation(line: 15, column: 34, scope: !7659)
!7672 = !DILocation(line: 15, column: 9, scope: !7668)
!7673 = !DILocation(line: 16, column: 10, scope: !7668)
!7674 = !DILocation(line: 16, column: 5, scope: !7668)
!7675 = !DILocation(line: 17, column: 5, scope: !7668)
!7676 = !DILocation(line: 18, column: 2, scope: !7659)
!7677 = distinct !DISubprogram(name: "rust_partition", scope: !7661, file: !7660, line: 20, type: !7678, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7680)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!33, !1015, !33, !33}
!7680 = !{!7681, !7682, !7683, !7684, !7686, !7688}
!7681 = !DILocalVariable(name: "arr", arg: 1, scope: !7677, file: !7660, line: 21, type: !1015)
!7682 = !DILocalVariable(name: "low", arg: 2, scope: !7677, file: !7660, line: 22, type: !33)
!7683 = !DILocalVariable(name: "high", arg: 3, scope: !7677, file: !7660, line: 23, type: !33)
!7684 = !DILocalVariable(name: "pivot", scope: !7685, file: !7660, line: 25, type: !33, align: 4)
!7685 = distinct !DILexicalBlock(scope: !7677, file: !7660, line: 25, column: 5)
!7686 = !DILocalVariable(name: "i", scope: !7687, file: !7660, line: 26, type: !33, align: 4)
!7687 = distinct !DILexicalBlock(scope: !7685, file: !7660, line: 26, column: 5)
!7688 = !DILocalVariable(name: "j", scope: !7689, file: !7660, line: 27, type: !33, align: 4)
!7689 = distinct !DILexicalBlock(scope: !7687, file: !7660, line: 27, column: 5)
!7690 = !DILocation(line: 21, column: 5, scope: !7677)
!7691 = !DILocation(line: 22, column: 5, scope: !7677)
!7692 = !DILocation(line: 23, column: 5, scope: !7677)
!7693 = !DILocation(line: 26, column: 9, scope: !7687)
!7694 = !DILocation(line: 27, column: 9, scope: !7689)
!7695 = !DILocation(line: 25, column: 50, scope: !7677)
!7696 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7697)
!7697 = distinct !DILocation(line: 25, column: 39, scope: !7677)
!7698 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7697)
!7699 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7697)
!7700 = !DILocation(line: 25, column: 39, scope: !7677)
!7701 = !DILocation(line: 25, column: 38, scope: !7677)
!7702 = !DILocation(line: 25, column: 9, scope: !7685)
!7703 = !DILocation(line: 26, column: 34, scope: !7685)
!7704 = !DILocation(line: 27, column: 34, scope: !7687)
!7705 = !DILocation(line: 28, column: 5, scope: !7689)
!7706 = !DILocation(line: 28, column: 11, scope: !7689)
!7707 = !DILocation(line: 28, column: 16, scope: !7689)
!7708 = !DILocation(line: 38, column: 27, scope: !7689)
!7709 = !DILocation(line: 38, column: 26, scope: !7689)
!7710 = !DILocation(line: 29, column: 24, scope: !7689)
!7711 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7712)
!7712 = distinct !DILocation(line: 29, column: 13, scope: !7689)
!7713 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7712)
!7714 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7712)
!7715 = !DILocation(line: 29, column: 13, scope: !7689)
!7716 = !DILocation(line: 29, column: 12, scope: !7689)
!7717 = !DILocation(line: 34, column: 9, scope: !7689)
!7718 = !DILocation(line: 30, column: 13, scope: !7689)
!7719 = !DILocation(line: 32, column: 40, scope: !7689)
!7720 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7721)
!7721 = distinct !DILocation(line: 32, column: 29, scope: !7689)
!7722 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7721)
!7723 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7721)
!7724 = !DILocation(line: 32, column: 29, scope: !7689)
!7725 = !DILocation(line: 32, column: 70, scope: !7689)
!7726 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7727)
!7727 = distinct !DILocation(line: 32, column: 59, scope: !7689)
!7728 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7727)
!7729 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7727)
!7730 = !DILocation(line: 32, column: 59, scope: !7689)
!7731 = !DILocation(line: 32, column: 13, scope: !7689)
!7732 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7733)
!7733 = distinct !DILocation(line: 38, column: 15, scope: !7689)
!7734 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7733)
!7735 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7733)
!7736 = !DILocation(line: 38, column: 15, scope: !7689)
!7737 = !DILocation(line: 39, column: 26, scope: !7689)
!7738 = !DILocation(line: 465, column: 32, scope: !6182, inlinedAt: !7739)
!7739 = distinct !DILocation(line: 39, column: 15, scope: !7689)
!7740 = !DILocation(line: 465, column: 38, scope: !6182, inlinedAt: !7739)
!7741 = !DILocation(line: 472, column: 18, scope: !6182, inlinedAt: !7739)
!7742 = !DILocation(line: 39, column: 15, scope: !7689)
!7743 = !DILocation(line: 37, column: 5, scope: !7689)
!7744 = !DILocation(line: 41, column: 12, scope: !7689)
!7745 = !DILocation(line: 42, column: 2, scope: !7677)
!7746 = distinct !DISubprogram(name: "rust_quickSort", scope: !7661, file: !7660, line: 44, type: !7747, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7749)
!7747 = !DISubroutineType(types: !7748)
!7748 = !{null, !1015, !33, !33}
!7749 = !{!7750, !7751, !7752, !7753}
!7750 = !DILocalVariable(name: "arr", arg: 1, scope: !7746, file: !7660, line: 45, type: !1015)
!7751 = !DILocalVariable(name: "low", arg: 2, scope: !7746, file: !7660, line: 46, type: !33)
!7752 = !DILocalVariable(name: "high", arg: 3, scope: !7746, file: !7660, line: 47, type: !33)
!7753 = !DILocalVariable(name: "i", scope: !7754, file: !7660, line: 50, type: !33, align: 4)
!7754 = distinct !DILexicalBlock(scope: !7746, file: !7660, line: 50, column: 9)
!7755 = !DILocation(line: 45, column: 5, scope: !7746)
!7756 = !DILocation(line: 46, column: 5, scope: !7746)
!7757 = !DILocation(line: 47, column: 5, scope: !7746)
!7758 = !DILocation(line: 49, column: 8, scope: !7746)
!7759 = !DILocation(line: 54, column: 2, scope: !7746)
!7760 = !DILocation(line: 50, column: 38, scope: !7746)
!7761 = !DILocation(line: 50, column: 13, scope: !7754)
!7762 = !DILocation(line: 51, column: 34, scope: !7754)
!7763 = !DILocation(line: 51, column: 9, scope: !7754)
!7764 = !DILocation(line: 52, column: 29, scope: !7754)
!7765 = !DILocation(line: 52, column: 9, scope: !7754)
!7766 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests12test_sizeofs12test_sizeofs28_$u7b$$u7b$closure$u7d$$u7d$17h7ba3292778a18d8aE", scope: !1292, file: !7767, line: 14, type: !7768, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7771)
!7767 = !DIFile(filename: "src/test_sizeofs.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "d69af9ce3ba44dfd6dcdc441ebbc34c5")
!7768 = !DISubroutineType(types: !7769)
!7769 = !{null, !7770}
!7770 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_sizeofs::test_sizeofs::{closure_env#0}", baseType: !1291, size: 64, align: 64, dwarfAddressSpace: 0)
!7771 = !{!7772}
!7772 = !DILocalVariable(arg: 1, scope: !7766, file: !7767, line: 14, type: !7770)
!7773 = !DILocation(line: 14, column: 1, scope: !7766)
!7774 = !DILocation(line: 26, column: 2, scope: !7766)
!7775 = distinct !DISubprogram(name: "test_sizeofs", scope: !1293, file: !7767, line: 14, type: !21, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7776)
!7776 = !{!7777, !7782, !7784, !7786, !7788, !7791, !7792}
!7777 = !DILocalVariable(name: "buffer", scope: !7778, file: !7767, line: 15, type: !7779, align: 4)
!7778 = distinct !DILexicalBlock(scope: !7775, file: !7767, line: 15, column: 5)
!7779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 1920, align: 32, elements: !7780)
!7780 = !{!7781}
!7781 = !DISubrange(count: 60, lowerBound: 0)
!7782 = !DILocalVariable(name: "rust_buffer", scope: !7783, file: !7767, line: 16, type: !7779, align: 4)
!7783 = distinct !DILexicalBlock(scope: !7778, file: !7767, line: 16, column: 5)
!7784 = !DILocalVariable(name: "iter", scope: !7785, file: !7767, line: 23, type: !1611, align: 8)
!7785 = distinct !DILexicalBlock(scope: !7783, file: !7767, line: 23, column: 5)
!7786 = !DILocalVariable(name: "x", scope: !7787, file: !7767, line: 23, type: !9, align: 8)
!7787 = distinct !DILexicalBlock(scope: !7785, file: !7767, line: 23, column: 29)
!7788 = !DILocalVariable(name: "left_val", scope: !7789, file: !7767, line: 24, type: !32, align: 8)
!7789 = !DILexicalBlockFile(scope: !7790, file: !7767, discriminator: 0)
!7790 = distinct !DILexicalBlock(scope: !7787, file: !2622, line: 52, column: 13)
!7791 = !DILocalVariable(name: "right_val", scope: !7789, file: !7767, line: 24, type: !32, align: 8)
!7792 = !DILocalVariable(name: "kind", scope: !7793, file: !7767, line: 24, type: !203, align: 1)
!7793 = !DILexicalBlockFile(scope: !7794, file: !7767, discriminator: 0)
!7794 = distinct !DILexicalBlock(scope: !7790, file: !2622, line: 54, column: 21)
!7795 = !DILocation(line: 15, column: 9, scope: !7778)
!7796 = !DILocation(line: 16, column: 9, scope: !7783)
!7797 = !DILocation(line: 23, column: 14, scope: !7785)
!7798 = !DILocation(line: 23, column: 9, scope: !7787)
!7799 = !DILocation(line: 24, column: 9, scope: !7793)
!7800 = !DILocation(line: 15, column: 22, scope: !7775)
!7801 = !DILocation(line: 16, column: 27, scope: !7778)
!7802 = !DILocation(line: 19, column: 40, scope: !7783)
!7803 = !DILocation(line: 19, column: 9, scope: !7783)
!7804 = !DILocation(line: 20, column: 45, scope: !7783)
!7805 = !DILocation(line: 20, column: 9, scope: !7783)
!7806 = !DILocation(line: 23, column: 14, scope: !7783)
!7807 = !DILocation(line: 23, column: 5, scope: !7785)
!7808 = !DILocation(line: 26, column: 2, scope: !7775)
!7809 = !DILocation(line: 23, column: 9, scope: !7785)
!7810 = !DILocation(line: 24, column: 27, scope: !7787)
!7811 = !DILocation(line: 24, column: 20, scope: !7787)
!7812 = !DILocation(line: 24, column: 9, scope: !7787)
!7813 = !DILocation(line: 24, column: 43, scope: !7787)
!7814 = !DILocation(line: 24, column: 31, scope: !7787)
!7815 = !DILocation(line: 24, column: 9, scope: !7789)
!7816 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests18test_uninitialized11test_buffer28_$u7b$$u7b$closure$u7d$$u7d$17h55bee68f352943a6E", scope: !1182, file: !7817, line: 11, type: !7818, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7821)
!7817 = !DIFile(filename: "src/test_uninitialized.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "c303e6195b722076ec7dcca4805feaad")
!7818 = !DISubroutineType(types: !7819)
!7819 = !{null, !7820}
!7820 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_uninitialized::test_buffer::{closure_env#0}", baseType: !1181, size: 64, align: 64, dwarfAddressSpace: 0)
!7821 = !{!7822}
!7822 = !DILocalVariable(arg: 1, scope: !7816, file: !7817, line: 11, type: !7820)
!7823 = !DILocation(line: 11, column: 1, scope: !7816)
!7824 = !DILocation(line: 23, column: 2, scope: !7816)
!7825 = distinct !DISubprogram(name: "test_buffer", scope: !1183, file: !7817, line: 11, type: !21, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7826)
!7826 = !{!7827, !7829, !7831, !7833, !7836, !7837, !7840, !7843, !7844}
!7827 = !DILocalVariable(name: "buffer", scope: !7828, file: !7817, line: 12, type: !76, align: 4)
!7828 = distinct !DILexicalBlock(scope: !7825, file: !7817, line: 12, column: 5)
!7829 = !DILocalVariable(name: "rust_buffer", scope: !7830, file: !7817, line: 13, type: !76, align: 4)
!7830 = distinct !DILexicalBlock(scope: !7828, file: !7817, line: 13, column: 5)
!7831 = !DILocalVariable(name: "expected_buffer", scope: !7832, file: !7817, line: 14, type: !76, align: 4)
!7832 = distinct !DILexicalBlock(scope: !7830, file: !7817, line: 14, column: 5)
!7833 = !DILocalVariable(name: "left_val", scope: !7834, file: !7817, line: 21, type: !75, align: 8)
!7834 = !DILexicalBlockFile(scope: !7835, file: !7817, discriminator: 0)
!7835 = distinct !DILexicalBlock(scope: !7832, file: !2622, line: 39, column: 13)
!7836 = !DILocalVariable(name: "right_val", scope: !7834, file: !7817, line: 21, type: !75, align: 8)
!7837 = !DILocalVariable(name: "kind", scope: !7838, file: !7817, line: 21, type: !203, align: 1)
!7838 = !DILexicalBlockFile(scope: !7839, file: !7817, discriminator: 0)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !2622, line: 41, column: 21)
!7840 = !DILocalVariable(name: "left_val", scope: !7841, file: !7817, line: 22, type: !75, align: 8)
!7841 = !DILexicalBlockFile(scope: !7842, file: !7817, discriminator: 0)
!7842 = distinct !DILexicalBlock(scope: !7832, file: !2622, line: 39, column: 13)
!7843 = !DILocalVariable(name: "right_val", scope: !7841, file: !7817, line: 22, type: !75, align: 8)
!7844 = !DILocalVariable(name: "kind", scope: !7845, file: !7817, line: 22, type: !203, align: 1)
!7845 = !DILexicalBlockFile(scope: !7846, file: !7817, discriminator: 0)
!7846 = distinct !DILexicalBlock(scope: !7842, file: !2622, line: 41, column: 21)
!7847 = !DILocation(line: 12, column: 9, scope: !7828)
!7848 = !DILocation(line: 13, column: 9, scope: !7830)
!7849 = !DILocation(line: 14, column: 9, scope: !7832)
!7850 = !DILocation(line: 21, column: 5, scope: !7838)
!7851 = !DILocation(line: 22, column: 5, scope: !7845)
!7852 = !DILocation(line: 12, column: 22, scope: !7825)
!7853 = !DILocation(line: 13, column: 27, scope: !7828)
!7854 = !DILocation(line: 14, column: 27, scope: !7830)
!7855 = !DILocation(line: 17, column: 36, scope: !7832)
!7856 = !DILocation(line: 17, column: 9, scope: !7832)
!7857 = !DILocation(line: 18, column: 41, scope: !7832)
!7858 = !DILocation(line: 18, column: 9, scope: !7832)
!7859 = !DILocation(line: 21, column: 5, scope: !7832)
!7860 = !DILocation(line: 21, column: 5, scope: !7834)
!7861 = !DILocation(line: 22, column: 5, scope: !7832)
!7862 = !DILocation(line: 22, column: 5, scope: !7841)
!7863 = !DILocation(line: 23, column: 2, scope: !7825)
!7864 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests18test_uninitialized10test_types28_$u7b$$u7b$closure$u7d$$u7d$17h62f328f61d4fc5a7E", scope: !1337, file: !7817, line: 26, type: !7865, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7868)
!7865 = !DISubroutineType(types: !7866)
!7866 = !{null, !7867}
!7867 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_uninitialized::test_types::{closure_env#0}", baseType: !1336, size: 64, align: 64, dwarfAddressSpace: 0)
!7868 = !{!7869}
!7869 = !DILocalVariable(arg: 1, scope: !7864, file: !7817, line: 26, type: !7867)
!7870 = !DILocation(line: 26, column: 1, scope: !7864)
!7871 = !DILocation(line: 39, column: 2, scope: !7864)
!7872 = distinct !DISubprogram(name: "test_types", scope: !1183, file: !7817, line: 26, type: !21, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7873)
!7873 = !{!7874, !7878, !7879, !7882, !7885, !7886, !7889, !7892, !7893}
!7874 = !DILocalVariable(name: "left_val", scope: !7875, file: !7817, line: 27, type: !7877, align: 8)
!7875 = !DILexicalBlockFile(scope: !7876, file: !7817, discriminator: 0)
!7876 = distinct !DILexicalBlock(scope: !7872, file: !2622, line: 39, column: 13)
!7877 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !419, size: 64, align: 64, dwarfAddressSpace: 0)
!7878 = !DILocalVariable(name: "right_val", scope: !7875, file: !7817, line: 27, type: !7877, align: 8)
!7879 = !DILocalVariable(name: "kind", scope: !7880, file: !7817, line: 27, type: !203, align: 1)
!7880 = !DILexicalBlockFile(scope: !7881, file: !7817, discriminator: 0)
!7881 = distinct !DILexicalBlock(scope: !7876, file: !2622, line: 41, column: 21)
!7882 = !DILocalVariable(name: "left_val", scope: !7883, file: !7817, line: 28, type: !7877, align: 8)
!7883 = !DILexicalBlockFile(scope: !7884, file: !7817, discriminator: 0)
!7884 = distinct !DILexicalBlock(scope: !7872, file: !2622, line: 39, column: 13)
!7885 = !DILocalVariable(name: "right_val", scope: !7883, file: !7817, line: 28, type: !7877, align: 8)
!7886 = !DILocalVariable(name: "kind", scope: !7887, file: !7817, line: 28, type: !203, align: 1)
!7887 = !DILexicalBlockFile(scope: !7888, file: !7817, discriminator: 0)
!7888 = distinct !DILexicalBlock(scope: !7884, file: !2622, line: 41, column: 21)
!7889 = !DILocalVariable(name: "left_val", scope: !7890, file: !7817, line: 29, type: !7877, align: 8)
!7890 = !DILexicalBlockFile(scope: !7891, file: !7817, discriminator: 0)
!7891 = distinct !DILexicalBlock(scope: !7872, file: !2622, line: 39, column: 13)
!7892 = !DILocalVariable(name: "right_val", scope: !7890, file: !7817, line: 29, type: !7877, align: 8)
!7893 = !DILocalVariable(name: "kind", scope: !7894, file: !7817, line: 29, type: !203, align: 1)
!7894 = !DILexicalBlockFile(scope: !7895, file: !7817, discriminator: 0)
!7895 = distinct !DILexicalBlock(scope: !7891, file: !2622, line: 41, column: 21)
!7896 = !DILocation(line: 27, column: 5, scope: !7872)
!7897 = !DILocation(line: 27, column: 5, scope: !7875)
!7898 = !DILocation(line: 28, column: 5, scope: !7872)
!7899 = !DILocation(line: 28, column: 5, scope: !7883)
!7900 = !DILocation(line: 29, column: 5, scope: !7872)
!7901 = !DILocation(line: 29, column: 5, scope: !7890)
!7902 = !DILocation(line: 39, column: 2, scope: !7872)
!7903 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests14test_shadowing10test_twice28_$u7b$$u7b$closure$u7d$$u7d$17h91511127ca1da4aeE", scope: !1280, file: !7904, line: 14, type: !7905, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7908)
!7904 = !DIFile(filename: "src/test_shadowing.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "664af73680a0eb30242ed695923e4bda")
!7905 = !DISubroutineType(types: !7906)
!7906 = !{null, !7907}
!7907 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_shadowing::test_twice::{closure_env#0}", baseType: !1279, size: 64, align: 64, dwarfAddressSpace: 0)
!7908 = !{!7909}
!7909 = !DILocalVariable(arg: 1, scope: !7903, file: !7904, line: 14, type: !7907)
!7910 = !DILocation(line: 14, column: 1, scope: !7903)
!7911 = !DILocation(line: 21, column: 2, scope: !7903)
!7912 = distinct !DISubprogram(name: "test_twice", scope: !1281, file: !7904, line: 14, type: !21, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7913)
!7913 = !{!7914, !7916, !7918, !7920, !7922, !7925, !7926}
!7914 = !DILocalVariable(name: "iter", scope: !7915, file: !7904, line: 15, type: !1593, align: 4)
!7915 = distinct !DILexicalBlock(scope: !7912, file: !7904, line: 15, column: 5)
!7916 = !DILocalVariable(name: "i", scope: !7917, file: !7904, line: 15, type: !33, align: 4)
!7917 = distinct !DILexicalBlock(scope: !7915, file: !7904, line: 15, column: 20)
!7918 = !DILocalVariable(name: "double", scope: !7919, file: !7904, line: 16, type: !33, align: 4)
!7919 = distinct !DILexicalBlock(scope: !7917, file: !7904, line: 16, column: 9)
!7920 = !DILocalVariable(name: "rust_double", scope: !7921, file: !7904, line: 17, type: !33, align: 4)
!7921 = distinct !DILexicalBlock(scope: !7919, file: !7904, line: 17, column: 9)
!7922 = !DILocalVariable(name: "left_val", scope: !7923, file: !7904, line: 19, type: !32, align: 8)
!7923 = !DILexicalBlockFile(scope: !7924, file: !7904, discriminator: 0)
!7924 = distinct !DILexicalBlock(scope: !7921, file: !2622, line: 39, column: 13)
!7925 = !DILocalVariable(name: "right_val", scope: !7923, file: !7904, line: 19, type: !32, align: 8)
!7926 = !DILocalVariable(name: "kind", scope: !7927, file: !7904, line: 19, type: !203, align: 1)
!7927 = !DILexicalBlockFile(scope: !7928, file: !7904, discriminator: 0)
!7928 = distinct !DILexicalBlock(scope: !7924, file: !2622, line: 41, column: 21)
!7929 = !DILocation(line: 15, column: 14, scope: !7915)
!7930 = !DILocation(line: 16, column: 13, scope: !7919)
!7931 = !DILocation(line: 17, column: 13, scope: !7921)
!7932 = !DILocation(line: 19, column: 9, scope: !7927)
!7933 = !DILocation(line: 15, column: 14, scope: !7912)
!7934 = !DILocation(line: 15, column: 5, scope: !7915)
!7935 = !DILocation(line: 21, column: 2, scope: !7912)
!7936 = !DILocation(line: 15, column: 9, scope: !7915)
!7937 = !DILocation(line: 15, column: 9, scope: !7917)
!7938 = !DILocation(line: 16, column: 31, scope: !7917)
!7939 = !DILocation(line: 17, column: 36, scope: !7919)
!7940 = !DILocation(line: 19, column: 9, scope: !7921)
!7941 = !DILocation(line: 19, column: 9, scope: !7923)
!7942 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests14test_shadowing14test_shadowing28_$u7b$$u7b$closure$u7d$$u7d$17h21f84b91f0cde026E", scope: !1315, file: !7904, line: 24, type: !7943, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7946)
!7943 = !DISubroutineType(types: !7944)
!7944 = !{null, !7945}
!7945 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_shadowing::test_shadowing::{closure_env#0}", baseType: !1314, size: 64, align: 64, dwarfAddressSpace: 0)
!7946 = !{!7947}
!7947 = !DILocalVariable(arg: 1, scope: !7942, file: !7904, line: 24, type: !7945)
!7948 = !DILocation(line: 24, column: 1, scope: !7942)
!7949 = !DILocation(line: 36, column: 2, scope: !7942)
!7950 = distinct !DISubprogram(name: "test_shadowing", scope: !1281, file: !7904, line: 24, type: !21, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7951)
!7951 = !{!7952, !7954, !7956, !7958, !7961, !7962, !7965, !7968, !7969}
!7952 = !DILocalVariable(name: "buffer", scope: !7953, file: !7904, line: 25, type: !43, align: 4)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !7904, line: 25, column: 5)
!7954 = !DILocalVariable(name: "rust_buffer", scope: !7955, file: !7904, line: 26, type: !43, align: 4)
!7955 = distinct !DILexicalBlock(scope: !7953, file: !7904, line: 26, column: 5)
!7956 = !DILocalVariable(name: "expected_buffer", scope: !7957, file: !7904, line: 27, type: !43, align: 4)
!7957 = distinct !DILexicalBlock(scope: !7955, file: !7904, line: 27, column: 5)
!7958 = !DILocalVariable(name: "left_val", scope: !7959, file: !7904, line: 34, type: !42, align: 8)
!7959 = !DILexicalBlockFile(scope: !7960, file: !7904, discriminator: 0)
!7960 = distinct !DILexicalBlock(scope: !7957, file: !2622, line: 39, column: 13)
!7961 = !DILocalVariable(name: "right_val", scope: !7959, file: !7904, line: 34, type: !42, align: 8)
!7962 = !DILocalVariable(name: "kind", scope: !7963, file: !7904, line: 34, type: !203, align: 1)
!7963 = !DILexicalBlockFile(scope: !7964, file: !7904, discriminator: 0)
!7964 = distinct !DILexicalBlock(scope: !7960, file: !2622, line: 41, column: 21)
!7965 = !DILocalVariable(name: "left_val", scope: !7966, file: !7904, line: 35, type: !42, align: 8)
!7966 = !DILexicalBlockFile(scope: !7967, file: !7904, discriminator: 0)
!7967 = distinct !DILexicalBlock(scope: !7957, file: !2622, line: 39, column: 13)
!7968 = !DILocalVariable(name: "right_val", scope: !7966, file: !7904, line: 35, type: !42, align: 8)
!7969 = !DILocalVariable(name: "kind", scope: !7970, file: !7904, line: 35, type: !203, align: 1)
!7970 = !DILexicalBlockFile(scope: !7971, file: !7904, discriminator: 0)
!7971 = distinct !DILexicalBlock(scope: !7967, file: !2622, line: 41, column: 21)
!7972 = !DILocation(line: 25, column: 9, scope: !7953)
!7973 = !DILocation(line: 26, column: 9, scope: !7955)
!7974 = !DILocation(line: 27, column: 9, scope: !7957)
!7975 = !DILocation(line: 34, column: 5, scope: !7963)
!7976 = !DILocation(line: 35, column: 5, scope: !7970)
!7977 = !DILocation(line: 25, column: 22, scope: !7950)
!7978 = !DILocation(line: 26, column: 27, scope: !7953)
!7979 = !DILocation(line: 27, column: 27, scope: !7955)
!7980 = !DILocation(line: 30, column: 36, scope: !7957)
!7981 = !DILocation(line: 30, column: 9, scope: !7957)
!7982 = !DILocation(line: 31, column: 41, scope: !7957)
!7983 = !DILocation(line: 31, column: 9, scope: !7957)
!7984 = !DILocation(line: 34, column: 5, scope: !7957)
!7985 = !DILocation(line: 34, column: 5, scope: !7959)
!7986 = !DILocation(line: 35, column: 5, scope: !7957)
!7987 = !DILocation(line: 35, column: 5, scope: !7966)
!7988 = !DILocation(line: 36, column: 2, scope: !7950)
!7989 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests12test_typedef12test_typedef28_$u7b$$u7b$closure$u7d$$u7d$17hd7b10812bb99a067E", scope: !1207, file: !7990, line: 11, type: !7991, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7994)
!7990 = !DIFile(filename: "src/test_typedef.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "4bc16e5e35a870b5a1c3088c985762a6")
!7991 = !DISubroutineType(types: !7992)
!7992 = !{null, !7993}
!7993 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_typedef::test_typedef::{closure_env#0}", baseType: !1206, size: 64, align: 64, dwarfAddressSpace: 0)
!7994 = !{!7995}
!7995 = !DILocalVariable(arg: 1, scope: !7989, file: !7990, line: 11, type: !7993)
!7996 = !DILocation(line: 11, column: 1, scope: !7989)
!7997 = !DILocation(line: 27, column: 2, scope: !7989)
!7998 = distinct !DISubprogram(name: "test_typedef", scope: !1208, file: !7990, line: 11, type: !21, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !7999)
!7999 = !{!8000, !8002, !8004, !8007, !8008, !8011, !8014, !8015, !8018, !8020, !8022, !8025, !8026, !8029, !8031, !8033, !8036, !8037}
!8000 = !DILocalVariable(name: "ret", scope: !8001, file: !7990, line: 12, type: !33, align: 4)
!8001 = distinct !DILexicalBlock(scope: !7998, file: !7990, line: 12, column: 5)
!8002 = !DILocalVariable(name: "rust_ret", scope: !8003, file: !7990, line: 13, type: !33, align: 4)
!8003 = distinct !DILexicalBlock(scope: !8001, file: !7990, line: 13, column: 5)
!8004 = !DILocalVariable(name: "left_val", scope: !8005, file: !7990, line: 14, type: !32, align: 8)
!8005 = !DILexicalBlockFile(scope: !8006, file: !7990, discriminator: 0)
!8006 = distinct !DILexicalBlock(scope: !8003, file: !2622, line: 39, column: 13)
!8007 = !DILocalVariable(name: "right_val", scope: !8005, file: !7990, line: 14, type: !32, align: 8)
!8008 = !DILocalVariable(name: "kind", scope: !8009, file: !7990, line: 14, type: !203, align: 1)
!8009 = !DILexicalBlockFile(scope: !8010, file: !7990, discriminator: 0)
!8010 = distinct !DILexicalBlock(scope: !8006, file: !2622, line: 41, column: 21)
!8011 = !DILocalVariable(name: "left_val", scope: !8012, file: !7990, line: 15, type: !32, align: 8)
!8012 = !DILexicalBlockFile(scope: !8013, file: !7990, discriminator: 0)
!8013 = distinct !DILexicalBlock(scope: !8003, file: !2622, line: 39, column: 13)
!8014 = !DILocalVariable(name: "right_val", scope: !8012, file: !7990, line: 15, type: !32, align: 8)
!8015 = !DILocalVariable(name: "kind", scope: !8016, file: !7990, line: 15, type: !203, align: 1)
!8016 = !DILexicalBlockFile(scope: !8017, file: !7990, discriminator: 0)
!8017 = distinct !DILexicalBlock(scope: !8013, file: !2622, line: 41, column: 21)
!8018 = !DILocalVariable(name: "rust_var", scope: !8019, file: !7990, line: 17, type: !33, align: 4)
!8019 = distinct !DILexicalBlock(scope: !8003, file: !7990, line: 17, column: 5)
!8020 = !DILocalVariable(name: "c_var", scope: !8021, file: !7990, line: 18, type: !33, align: 4)
!8021 = distinct !DILexicalBlock(scope: !8019, file: !7990, line: 18, column: 5)
!8022 = !DILocalVariable(name: "left_val", scope: !8023, file: !7990, line: 19, type: !32, align: 8)
!8023 = !DILexicalBlockFile(scope: !8024, file: !7990, discriminator: 0)
!8024 = distinct !DILexicalBlock(scope: !8021, file: !2622, line: 39, column: 13)
!8025 = !DILocalVariable(name: "right_val", scope: !8023, file: !7990, line: 19, type: !32, align: 8)
!8026 = !DILocalVariable(name: "kind", scope: !8027, file: !7990, line: 19, type: !203, align: 1)
!8027 = !DILexicalBlockFile(scope: !8028, file: !7990, discriminator: 0)
!8028 = distinct !DILexicalBlock(scope: !8024, file: !2622, line: 41, column: 21)
!8029 = !DILocalVariable(name: "rptr_var", scope: !8030, file: !7990, line: 21, type: !1015, align: 8)
!8030 = distinct !DILexicalBlock(scope: !8021, file: !7990, line: 21, column: 5)
!8031 = !DILocalVariable(name: "cptr_var", scope: !8032, file: !7990, line: 22, type: !1015, align: 8)
!8032 = distinct !DILexicalBlock(scope: !8030, file: !7990, line: 22, column: 5)
!8033 = !DILocalVariable(name: "left_val", scope: !8034, file: !7990, line: 25, type: !32, align: 8)
!8034 = !DILexicalBlockFile(scope: !8035, file: !7990, discriminator: 0)
!8035 = distinct !DILexicalBlock(scope: !8032, file: !2622, line: 39, column: 13)
!8036 = !DILocalVariable(name: "right_val", scope: !8034, file: !7990, line: 25, type: !32, align: 8)
!8037 = !DILocalVariable(name: "kind", scope: !8038, file: !7990, line: 25, type: !203, align: 1)
!8038 = !DILexicalBlockFile(scope: !8039, file: !7990, discriminator: 0)
!8039 = distinct !DILexicalBlock(scope: !8035, file: !2622, line: 41, column: 21)
!8040 = !DILocation(line: 12, column: 9, scope: !8001)
!8041 = !DILocation(line: 13, column: 9, scope: !8003)
!8042 = !DILocation(line: 14, column: 5, scope: !8009)
!8043 = !DILocation(line: 15, column: 5, scope: !8016)
!8044 = !DILocation(line: 17, column: 9, scope: !8019)
!8045 = !DILocation(line: 18, column: 9, scope: !8021)
!8046 = !DILocation(line: 19, column: 5, scope: !8027)
!8047 = !DILocation(line: 25, column: 9, scope: !8038)
!8048 = !DILocation(line: 12, column: 24, scope: !7998)
!8049 = !DILocation(line: 13, column: 29, scope: !8001)
!8050 = !DILocation(line: 14, column: 5, scope: !8003)
!8051 = !DILocation(line: 14, column: 5, scope: !8005)
!8052 = !DILocation(line: 15, column: 5, scope: !8003)
!8053 = !DILocation(line: 15, column: 5, scope: !8012)
!8054 = !DILocation(line: 17, column: 32, scope: !8003)
!8055 = !DILocation(line: 18, column: 28, scope: !8019)
!8056 = !DILocation(line: 19, column: 5, scope: !8021)
!8057 = !DILocation(line: 19, column: 5, scope: !8023)
!8058 = !DILocation(line: 21, column: 29, scope: !8021)
!8059 = !DILocation(line: 21, column: 9, scope: !8030)
!8060 = !DILocation(line: 22, column: 29, scope: !8030)
!8061 = !DILocation(line: 22, column: 9, scope: !8032)
!8062 = !DILocation(line: 25, column: 9, scope: !8032)
!8063 = !DILocation(line: 25, column: 9, scope: !8034)
!8064 = !DILocation(line: 27, column: 2, scope: !7998)
!8065 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests11test_memory11test_malloc28_$u7b$$u7b$closure$u7d$$u7d$17h4c6d6ecf073736baE", scope: !1304, file: !8066, line: 16, type: !8067, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8070)
!8066 = !DIFile(filename: "src/test_memory.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "65a63f68f7dad704d149eb7356802f27")
!8067 = !DISubroutineType(types: !8068)
!8068 = !{null, !8069}
!8069 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_memory::test_malloc::{closure_env#0}", baseType: !1303, size: 64, align: 64, dwarfAddressSpace: 0)
!8070 = !{!8071}
!8071 = !DILocalVariable(arg: 1, scope: !8065, file: !8066, line: 16, type: !8069)
!8072 = !DILocation(line: 16, column: 1, scope: !8065)
!8073 = !DILocation(line: 28, column: 2, scope: !8065)
!8074 = distinct !DISubprogram(name: "test_malloc", scope: !1220, file: !8066, line: 16, type: !21, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8075)
!8075 = !{!8076, !8078, !8080, !8082, !8085, !8086, !8089, !8092, !8093}
!8076 = !DILocalVariable(name: "buffer", scope: !8077, file: !8066, line: 17, type: !64, align: 4)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !8066, line: 17, column: 5)
!8078 = !DILocalVariable(name: "rust_buffer", scope: !8079, file: !8066, line: 18, type: !64, align: 4)
!8079 = distinct !DILexicalBlock(scope: !8077, file: !8066, line: 18, column: 5)
!8080 = !DILocalVariable(name: "expected_buffer", scope: !8081, file: !8066, line: 19, type: !64, align: 4)
!8081 = distinct !DILexicalBlock(scope: !8079, file: !8066, line: 19, column: 5)
!8082 = !DILocalVariable(name: "left_val", scope: !8083, file: !8066, line: 26, type: !63, align: 8)
!8083 = !DILexicalBlockFile(scope: !8084, file: !8066, discriminator: 0)
!8084 = distinct !DILexicalBlock(scope: !8081, file: !2622, line: 39, column: 13)
!8085 = !DILocalVariable(name: "right_val", scope: !8083, file: !8066, line: 26, type: !63, align: 8)
!8086 = !DILocalVariable(name: "kind", scope: !8087, file: !8066, line: 26, type: !203, align: 1)
!8087 = !DILexicalBlockFile(scope: !8088, file: !8066, discriminator: 0)
!8088 = distinct !DILexicalBlock(scope: !8084, file: !2622, line: 41, column: 21)
!8089 = !DILocalVariable(name: "left_val", scope: !8090, file: !8066, line: 27, type: !63, align: 8)
!8090 = !DILexicalBlockFile(scope: !8091, file: !8066, discriminator: 0)
!8091 = distinct !DILexicalBlock(scope: !8081, file: !2622, line: 39, column: 13)
!8092 = !DILocalVariable(name: "right_val", scope: !8090, file: !8066, line: 27, type: !63, align: 8)
!8093 = !DILocalVariable(name: "kind", scope: !8094, file: !8066, line: 27, type: !203, align: 1)
!8094 = !DILexicalBlockFile(scope: !8095, file: !8066, discriminator: 0)
!8095 = distinct !DILexicalBlock(scope: !8091, file: !2622, line: 41, column: 21)
!8096 = !DILocation(line: 17, column: 9, scope: !8077)
!8097 = !DILocation(line: 18, column: 9, scope: !8079)
!8098 = !DILocation(line: 19, column: 9, scope: !8081)
!8099 = !DILocation(line: 26, column: 5, scope: !8087)
!8100 = !DILocation(line: 27, column: 5, scope: !8094)
!8101 = !DILocation(line: 17, column: 22, scope: !8074)
!8102 = !DILocation(line: 18, column: 27, scope: !8077)
!8103 = !DILocation(line: 19, column: 27, scope: !8079)
!8104 = !DILocation(line: 22, column: 41, scope: !8081)
!8105 = !DILocation(line: 22, column: 9, scope: !8081)
!8106 = !DILocation(line: 23, column: 46, scope: !8081)
!8107 = !DILocation(line: 23, column: 9, scope: !8081)
!8108 = !DILocation(line: 26, column: 5, scope: !8081)
!8109 = !DILocation(line: 26, column: 5, scope: !8083)
!8110 = !DILocation(line: 27, column: 5, scope: !8081)
!8111 = !DILocation(line: 27, column: 5, scope: !8090)
!8112 = !DILocation(line: 28, column: 2, scope: !8074)
!8113 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests11test_memory11test_memset28_$u7b$$u7b$closure$u7d$$u7d$17h57776ad2bc7b9083E", scope: !1219, file: !8066, line: 31, type: !8114, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8117)
!8114 = !DISubroutineType(types: !8115)
!8115 = !{null, !8116}
!8116 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_memory::test_memset::{closure_env#0}", baseType: !1218, size: 64, align: 64, dwarfAddressSpace: 0)
!8117 = !{!8118}
!8118 = !DILocalVariable(arg: 1, scope: !8113, file: !8066, line: 31, type: !8116)
!8119 = !DILocation(line: 31, column: 1, scope: !8113)
!8120 = !DILocation(line: 43, column: 2, scope: !8113)
!8121 = distinct !DISubprogram(name: "test_memset", scope: !1220, file: !8066, line: 31, type: !21, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8122)
!8122 = !{!8123, !8125, !8127, !8129, !8132, !8133, !8136, !8139, !8140}
!8123 = !DILocalVariable(name: "buffer", scope: !8124, file: !8066, line: 32, type: !88, align: 4)
!8124 = distinct !DILexicalBlock(scope: !8121, file: !8066, line: 32, column: 5)
!8125 = !DILocalVariable(name: "rust_buffer", scope: !8126, file: !8066, line: 33, type: !88, align: 4)
!8126 = distinct !DILexicalBlock(scope: !8124, file: !8066, line: 33, column: 5)
!8127 = !DILocalVariable(name: "expected_buffer", scope: !8128, file: !8066, line: 34, type: !88, align: 4)
!8128 = distinct !DILexicalBlock(scope: !8126, file: !8066, line: 34, column: 5)
!8129 = !DILocalVariable(name: "left_val", scope: !8130, file: !8066, line: 41, type: !87, align: 8)
!8130 = !DILexicalBlockFile(scope: !8131, file: !8066, discriminator: 0)
!8131 = distinct !DILexicalBlock(scope: !8128, file: !2622, line: 39, column: 13)
!8132 = !DILocalVariable(name: "right_val", scope: !8130, file: !8066, line: 41, type: !87, align: 8)
!8133 = !DILocalVariable(name: "kind", scope: !8134, file: !8066, line: 41, type: !203, align: 1)
!8134 = !DILexicalBlockFile(scope: !8135, file: !8066, discriminator: 0)
!8135 = distinct !DILexicalBlock(scope: !8131, file: !2622, line: 41, column: 21)
!8136 = !DILocalVariable(name: "left_val", scope: !8137, file: !8066, line: 42, type: !87, align: 8)
!8137 = !DILexicalBlockFile(scope: !8138, file: !8066, discriminator: 0)
!8138 = distinct !DILexicalBlock(scope: !8128, file: !2622, line: 39, column: 13)
!8139 = !DILocalVariable(name: "right_val", scope: !8137, file: !8066, line: 42, type: !87, align: 8)
!8140 = !DILocalVariable(name: "kind", scope: !8141, file: !8066, line: 42, type: !203, align: 1)
!8141 = !DILexicalBlockFile(scope: !8142, file: !8066, discriminator: 0)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !2622, line: 41, column: 21)
!8143 = !DILocation(line: 32, column: 9, scope: !8124)
!8144 = !DILocation(line: 33, column: 9, scope: !8126)
!8145 = !DILocation(line: 34, column: 9, scope: !8128)
!8146 = !DILocation(line: 41, column: 5, scope: !8134)
!8147 = !DILocation(line: 42, column: 5, scope: !8141)
!8148 = !DILocation(line: 32, column: 22, scope: !8121)
!8149 = !DILocation(line: 33, column: 27, scope: !8124)
!8150 = !DILocation(line: 34, column: 27, scope: !8126)
!8151 = !DILocation(line: 37, column: 37, scope: !8128)
!8152 = !DILocation(line: 37, column: 9, scope: !8128)
!8153 = !DILocation(line: 38, column: 42, scope: !8128)
!8154 = !DILocation(line: 38, column: 9, scope: !8128)
!8155 = !DILocation(line: 41, column: 5, scope: !8128)
!8156 = !DILocation(line: 41, column: 5, scope: !8130)
!8157 = !DILocation(line: 42, column: 5, scope: !8128)
!8158 = !DILocation(line: 42, column: 5, scope: !8137)
!8159 = !DILocation(line: 43, column: 2, scope: !8121)
!8160 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests12test_lvalues11test_lvalue28_$u7b$$u7b$closure$u7d$$u7d$17h5e512760a21da14cE", scope: !1243, file: !8161, line: 12, type: !8162, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8165)
!8161 = !DIFile(filename: "src/test_lvalues.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "8d2b3f3bb88fb11388693f2c6683aebc")
!8162 = !DISubroutineType(types: !8163)
!8163 = !{null, !8164}
!8164 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_lvalues::test_lvalue::{closure_env#0}", baseType: !1242, size: 64, align: 64, dwarfAddressSpace: 0)
!8165 = !{!8166}
!8166 = !DILocalVariable(arg: 1, scope: !8160, file: !8161, line: 12, type: !8164)
!8167 = !DILocation(line: 12, column: 1, scope: !8160)
!8168 = !DILocation(line: 24, column: 2, scope: !8160)
!8169 = distinct !DISubprogram(name: "test_lvalue", scope: !1244, file: !8161, line: 12, type: !21, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8170)
!8170 = !{!8171, !8173, !8175, !8177, !8180, !8181, !8184, !8187, !8188}
!8171 = !DILocalVariable(name: "buffer", scope: !8172, file: !8161, line: 13, type: !100, align: 4)
!8172 = distinct !DILexicalBlock(scope: !8169, file: !8161, line: 13, column: 5)
!8173 = !DILocalVariable(name: "rust_buffer", scope: !8174, file: !8161, line: 14, type: !100, align: 4)
!8174 = distinct !DILexicalBlock(scope: !8172, file: !8161, line: 14, column: 5)
!8175 = !DILocalVariable(name: "expected_buffer", scope: !8176, file: !8161, line: 15, type: !100, align: 4)
!8176 = distinct !DILexicalBlock(scope: !8174, file: !8161, line: 15, column: 5)
!8177 = !DILocalVariable(name: "left_val", scope: !8178, file: !8161, line: 22, type: !99, align: 8)
!8178 = !DILexicalBlockFile(scope: !8179, file: !8161, discriminator: 0)
!8179 = distinct !DILexicalBlock(scope: !8176, file: !2622, line: 39, column: 13)
!8180 = !DILocalVariable(name: "right_val", scope: !8178, file: !8161, line: 22, type: !99, align: 8)
!8181 = !DILocalVariable(name: "kind", scope: !8182, file: !8161, line: 22, type: !203, align: 1)
!8182 = !DILexicalBlockFile(scope: !8183, file: !8161, discriminator: 0)
!8183 = distinct !DILexicalBlock(scope: !8179, file: !2622, line: 41, column: 21)
!8184 = !DILocalVariable(name: "left_val", scope: !8185, file: !8161, line: 23, type: !99, align: 8)
!8185 = !DILexicalBlockFile(scope: !8186, file: !8161, discriminator: 0)
!8186 = distinct !DILexicalBlock(scope: !8176, file: !2622, line: 39, column: 13)
!8187 = !DILocalVariable(name: "right_val", scope: !8185, file: !8161, line: 23, type: !99, align: 8)
!8188 = !DILocalVariable(name: "kind", scope: !8189, file: !8161, line: 23, type: !203, align: 1)
!8189 = !DILexicalBlockFile(scope: !8190, file: !8161, discriminator: 0)
!8190 = distinct !DILexicalBlock(scope: !8186, file: !2622, line: 41, column: 21)
!8191 = !DILocation(line: 13, column: 9, scope: !8172)
!8192 = !DILocation(line: 14, column: 9, scope: !8174)
!8193 = !DILocation(line: 15, column: 9, scope: !8176)
!8194 = !DILocation(line: 22, column: 5, scope: !8182)
!8195 = !DILocation(line: 23, column: 5, scope: !8189)
!8196 = !DILocation(line: 13, column: 22, scope: !8169)
!8197 = !DILocation(line: 14, column: 27, scope: !8172)
!8198 = !DILocation(line: 15, column: 27, scope: !8174)
!8199 = !DILocation(line: 18, column: 16, scope: !8176)
!8200 = !DILocation(line: 18, column: 9, scope: !8176)
!8201 = !DILocation(line: 19, column: 21, scope: !8176)
!8202 = !DILocation(line: 19, column: 9, scope: !8176)
!8203 = !DILocation(line: 22, column: 5, scope: !8176)
!8204 = !DILocation(line: 22, column: 5, scope: !8178)
!8205 = !DILocation(line: 23, column: 5, scope: !8176)
!8206 = !DILocation(line: 23, column: 5, scope: !8185)
!8207 = !DILocation(line: 24, column: 2, scope: !8169)
!8208 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests14test_quicksort9test_swap28_$u7b$$u7b$closure$u7d$$u7d$17hc7ae43fd07ef6aa0E", scope: !1269, file: !8209, line: 14, type: !8210, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8213)
!8209 = !DIFile(filename: "src/test_quicksort.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "34716e2c3b98d0cf79eaa3eef4ec031e")
!8210 = !DISubroutineType(types: !8211)
!8211 = !{null, !8212}
!8212 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_quicksort::test_swap::{closure_env#0}", baseType: !1268, size: 64, align: 64, dwarfAddressSpace: 0)
!8213 = !{!8214}
!8214 = !DILocalVariable(arg: 1, scope: !8208, file: !8209, line: 14, type: !8212)
!8215 = !DILocation(line: 14, column: 1, scope: !8208)
!8216 = !DILocation(line: 28, column: 2, scope: !8208)
!8217 = distinct !DISubprogram(name: "test_swap", scope: !1196, file: !8209, line: 14, type: !21, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8218)
!8218 = !{!8219, !8221, !8222, !8225, !8226, !8229, !8232, !8233, !8236, !8239, !8240, !8243, !8246, !8247}
!8219 = !DILocalVariable(name: "a", scope: !8220, file: !8209, line: 15, type: !33, align: 4)
!8220 = distinct !DILexicalBlock(scope: !8217, file: !8209, line: 15, column: 5)
!8221 = !DILocalVariable(name: "b", scope: !8220, file: !8209, line: 15, type: !33, align: 4)
!8222 = !DILocalVariable(name: "left_val", scope: !8223, file: !8209, line: 21, type: !32, align: 8)
!8223 = !DILexicalBlockFile(scope: !8224, file: !8209, discriminator: 0)
!8224 = distinct !DILexicalBlock(scope: !8220, file: !2622, line: 39, column: 13)
!8225 = !DILocalVariable(name: "right_val", scope: !8223, file: !8209, line: 21, type: !32, align: 8)
!8226 = !DILocalVariable(name: "kind", scope: !8227, file: !8209, line: 21, type: !203, align: 1)
!8227 = !DILexicalBlockFile(scope: !8228, file: !8209, discriminator: 0)
!8228 = distinct !DILexicalBlock(scope: !8224, file: !2622, line: 41, column: 21)
!8229 = !DILocalVariable(name: "left_val", scope: !8230, file: !8209, line: 22, type: !32, align: 8)
!8230 = !DILexicalBlockFile(scope: !8231, file: !8209, discriminator: 0)
!8231 = distinct !DILexicalBlock(scope: !8220, file: !2622, line: 39, column: 13)
!8232 = !DILocalVariable(name: "right_val", scope: !8230, file: !8209, line: 22, type: !32, align: 8)
!8233 = !DILocalVariable(name: "kind", scope: !8234, file: !8209, line: 22, type: !203, align: 1)
!8234 = !DILexicalBlockFile(scope: !8235, file: !8209, discriminator: 0)
!8235 = distinct !DILexicalBlock(scope: !8231, file: !2622, line: 41, column: 21)
!8236 = !DILocalVariable(name: "left_val", scope: !8237, file: !8209, line: 26, type: !32, align: 8)
!8237 = !DILexicalBlockFile(scope: !8238, file: !8209, discriminator: 0)
!8238 = distinct !DILexicalBlock(scope: !8220, file: !2622, line: 39, column: 13)
!8239 = !DILocalVariable(name: "right_val", scope: !8237, file: !8209, line: 26, type: !32, align: 8)
!8240 = !DILocalVariable(name: "kind", scope: !8241, file: !8209, line: 26, type: !203, align: 1)
!8241 = !DILexicalBlockFile(scope: !8242, file: !8209, discriminator: 0)
!8242 = distinct !DILexicalBlock(scope: !8238, file: !2622, line: 41, column: 21)
!8243 = !DILocalVariable(name: "left_val", scope: !8244, file: !8209, line: 27, type: !32, align: 8)
!8244 = !DILexicalBlockFile(scope: !8245, file: !8209, discriminator: 0)
!8245 = distinct !DILexicalBlock(scope: !8220, file: !2622, line: 39, column: 13)
!8246 = !DILocalVariable(name: "right_val", scope: !8244, file: !8209, line: 27, type: !32, align: 8)
!8247 = !DILocalVariable(name: "kind", scope: !8248, file: !8209, line: 27, type: !203, align: 1)
!8248 = !DILexicalBlockFile(scope: !8249, file: !8209, discriminator: 0)
!8249 = distinct !DILexicalBlock(scope: !8245, file: !2622, line: 41, column: 21)
!8250 = !DILocation(line: 15, column: 10, scope: !8220)
!8251 = !DILocation(line: 15, column: 17, scope: !8220)
!8252 = !DILocation(line: 21, column: 5, scope: !8227)
!8253 = !DILocation(line: 22, column: 5, scope: !8234)
!8254 = !DILocation(line: 26, column: 5, scope: !8241)
!8255 = !DILocation(line: 27, column: 5, scope: !8248)
!8256 = !DILocation(line: 15, column: 26, scope: !8217)
!8257 = !DILocation(line: 15, column: 10, scope: !8217)
!8258 = !DILocation(line: 15, column: 17, scope: !8217)
!8259 = !DILocation(line: 18, column: 9, scope: !8220)
!8260 = !DILocation(line: 21, column: 5, scope: !8220)
!8261 = !DILocation(line: 21, column: 5, scope: !8223)
!8262 = !DILocation(line: 22, column: 5, scope: !8220)
!8263 = !DILocation(line: 22, column: 5, scope: !8230)
!8264 = !DILocation(line: 24, column: 14, scope: !8220)
!8265 = !DILocation(line: 26, column: 5, scope: !8220)
!8266 = !DILocation(line: 26, column: 5, scope: !8237)
!8267 = !DILocation(line: 27, column: 5, scope: !8220)
!8268 = !DILocation(line: 27, column: 5, scope: !8244)
!8269 = !DILocation(line: 28, column: 2, scope: !8217)
!8270 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests14test_quicksort14test_partition28_$u7b$$u7b$closure$u7d$$u7d$17he20c6d4d533c755dE", scope: !1326, file: !8209, line: 31, type: !8271, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8274)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{null, !8273}
!8273 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_quicksort::test_partition::{closure_env#0}", baseType: !1325, size: 64, align: 64, dwarfAddressSpace: 0)
!8274 = !{!8275}
!8275 = !DILocalVariable(arg: 1, scope: !8270, file: !8209, line: 31, type: !8273)
!8276 = !DILocation(line: 31, column: 1, scope: !8270)
!8277 = !DILocation(line: 43, column: 2, scope: !8270)
!8278 = distinct !DISubprogram(name: "test_partition", scope: !1196, file: !8209, line: 31, type: !21, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8279)
!8279 = !{!8280, !8282, !8284, !8286, !8289, !8290, !8293, !8296, !8297}
!8280 = !DILocalVariable(name: "buffer", scope: !8281, file: !8209, line: 32, type: !43, align: 4)
!8281 = distinct !DILexicalBlock(scope: !8278, file: !8209, line: 32, column: 5)
!8282 = !DILocalVariable(name: "rust_buffer", scope: !8283, file: !8209, line: 33, type: !43, align: 4)
!8283 = distinct !DILexicalBlock(scope: !8281, file: !8209, line: 33, column: 5)
!8284 = !DILocalVariable(name: "expected_buffer", scope: !8285, file: !8209, line: 34, type: !43, align: 4)
!8285 = distinct !DILexicalBlock(scope: !8283, file: !8209, line: 34, column: 5)
!8286 = !DILocalVariable(name: "left_val", scope: !8287, file: !8209, line: 41, type: !42, align: 8)
!8287 = !DILexicalBlockFile(scope: !8288, file: !8209, discriminator: 0)
!8288 = distinct !DILexicalBlock(scope: !8285, file: !2622, line: 39, column: 13)
!8289 = !DILocalVariable(name: "right_val", scope: !8287, file: !8209, line: 41, type: !42, align: 8)
!8290 = !DILocalVariable(name: "kind", scope: !8291, file: !8209, line: 41, type: !203, align: 1)
!8291 = !DILexicalBlockFile(scope: !8292, file: !8209, discriminator: 0)
!8292 = distinct !DILexicalBlock(scope: !8288, file: !2622, line: 41, column: 21)
!8293 = !DILocalVariable(name: "left_val", scope: !8294, file: !8209, line: 42, type: !42, align: 8)
!8294 = !DILexicalBlockFile(scope: !8295, file: !8209, discriminator: 0)
!8295 = distinct !DILexicalBlock(scope: !8285, file: !2622, line: 39, column: 13)
!8296 = !DILocalVariable(name: "right_val", scope: !8294, file: !8209, line: 42, type: !42, align: 8)
!8297 = !DILocalVariable(name: "kind", scope: !8298, file: !8209, line: 42, type: !203, align: 1)
!8298 = !DILexicalBlockFile(scope: !8299, file: !8209, discriminator: 0)
!8299 = distinct !DILexicalBlock(scope: !8295, file: !2622, line: 41, column: 21)
!8300 = !DILocation(line: 32, column: 9, scope: !8281)
!8301 = !DILocation(line: 33, column: 9, scope: !8283)
!8302 = !DILocation(line: 34, column: 9, scope: !8285)
!8303 = !DILocation(line: 41, column: 5, scope: !8291)
!8304 = !DILocation(line: 42, column: 5, scope: !8298)
!8305 = !DILocation(line: 32, column: 22, scope: !8278)
!8306 = !DILocation(line: 33, column: 27, scope: !8281)
!8307 = !DILocation(line: 34, column: 27, scope: !8283)
!8308 = !DILocation(line: 37, column: 19, scope: !8285)
!8309 = !DILocation(line: 37, column: 9, scope: !8285)
!8310 = !DILocation(line: 38, column: 24, scope: !8285)
!8311 = !DILocation(line: 38, column: 9, scope: !8285)
!8312 = !DILocation(line: 41, column: 5, scope: !8285)
!8313 = !DILocation(line: 41, column: 5, scope: !8287)
!8314 = !DILocation(line: 42, column: 5, scope: !8285)
!8315 = !DILocation(line: 42, column: 5, scope: !8294)
!8316 = !DILocation(line: 43, column: 2, scope: !8278)
!8317 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests14test_quicksort14test_quicksort28_$u7b$$u7b$closure$u7d$$u7d$17hfa9fc962a9d803daE", scope: !1195, file: !8209, line: 46, type: !8318, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8321)
!8318 = !DISubroutineType(types: !8319)
!8319 = !{null, !8320}
!8320 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_quicksort::test_quicksort::{closure_env#0}", baseType: !1194, size: 64, align: 64, dwarfAddressSpace: 0)
!8321 = !{!8322}
!8322 = !DILocalVariable(arg: 1, scope: !8317, file: !8209, line: 46, type: !8320)
!8323 = !DILocation(line: 46, column: 1, scope: !8317)
!8324 = !DILocation(line: 61, column: 2, scope: !8317)
!8325 = distinct !DISubprogram(name: "test_quicksort", scope: !1196, file: !8209, line: 46, type: !21, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8326)
!8326 = !{!8327, !8329, !8331, !8333, !8335, !8336, !8338, !8340, !8343, !8344, !8347, !8350, !8351, !8354, !8357, !8358}
!8327 = !DILocalVariable(name: "buffer", scope: !8328, file: !8209, line: 47, type: !43, align: 4)
!8328 = distinct !DILexicalBlock(scope: !8325, file: !8209, line: 47, column: 5)
!8329 = !DILocalVariable(name: "rust_buffer", scope: !8330, file: !8209, line: 48, type: !43, align: 4)
!8330 = distinct !DILexicalBlock(scope: !8328, file: !8209, line: 48, column: 5)
!8331 = !DILocalVariable(name: "expected_buffer", scope: !8332, file: !8209, line: 49, type: !43, align: 4)
!8332 = distinct !DILexicalBlock(scope: !8330, file: !8209, line: 49, column: 5)
!8333 = !DILocalVariable(name: "i1", scope: !8334, file: !8209, line: 51, type: !7, align: 1)
!8334 = distinct !DILexicalBlock(scope: !8332, file: !8209, line: 51, column: 5)
!8335 = !DILocalVariable(name: "i2", scope: !8334, file: !8209, line: 51, type: !7, align: 1)
!8336 = !DILocalVariable(name: "i1", scope: !8337, file: !8209, line: 52, type: !7, align: 1)
!8337 = distinct !DILexicalBlock(scope: !8332, file: !8209, line: 52, column: 9)
!8338 = !DILocalVariable(name: "i2", scope: !8339, file: !8209, line: 53, type: !7, align: 1)
!8339 = distinct !DILexicalBlock(scope: !8337, file: !8209, line: 53, column: 9)
!8340 = !DILocalVariable(name: "left_val", scope: !8341, file: !8209, line: 58, type: !54, align: 8)
!8341 = !DILexicalBlockFile(scope: !8342, file: !8209, discriminator: 0)
!8342 = distinct !DILexicalBlock(scope: !8334, file: !2622, line: 39, column: 13)
!8343 = !DILocalVariable(name: "right_val", scope: !8341, file: !8209, line: 58, type: !54, align: 8)
!8344 = !DILocalVariable(name: "kind", scope: !8345, file: !8209, line: 58, type: !203, align: 1)
!8345 = !DILexicalBlockFile(scope: !8346, file: !8209, discriminator: 0)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !2622, line: 41, column: 21)
!8347 = !DILocalVariable(name: "left_val", scope: !8348, file: !8209, line: 59, type: !42, align: 8)
!8348 = !DILexicalBlockFile(scope: !8349, file: !8209, discriminator: 0)
!8349 = distinct !DILexicalBlock(scope: !8334, file: !2622, line: 39, column: 13)
!8350 = !DILocalVariable(name: "right_val", scope: !8348, file: !8209, line: 59, type: !42, align: 8)
!8351 = !DILocalVariable(name: "kind", scope: !8352, file: !8209, line: 59, type: !203, align: 1)
!8352 = !DILexicalBlockFile(scope: !8353, file: !8209, discriminator: 0)
!8353 = distinct !DILexicalBlock(scope: !8349, file: !2622, line: 41, column: 21)
!8354 = !DILocalVariable(name: "left_val", scope: !8355, file: !8209, line: 60, type: !42, align: 8)
!8355 = !DILexicalBlockFile(scope: !8356, file: !8209, discriminator: 0)
!8356 = distinct !DILexicalBlock(scope: !8334, file: !2622, line: 39, column: 13)
!8357 = !DILocalVariable(name: "right_val", scope: !8355, file: !8209, line: 60, type: !42, align: 8)
!8358 = !DILocalVariable(name: "kind", scope: !8359, file: !8209, line: 60, type: !203, align: 1)
!8359 = !DILexicalBlockFile(scope: !8360, file: !8209, discriminator: 0)
!8360 = distinct !DILexicalBlock(scope: !8356, file: !2622, line: 41, column: 21)
!8361 = !DILocation(line: 47, column: 9, scope: !8328)
!8362 = !DILocation(line: 48, column: 9, scope: !8330)
!8363 = !DILocation(line: 49, column: 9, scope: !8332)
!8364 = !DILocation(line: 51, column: 10, scope: !8334)
!8365 = !DILocation(line: 51, column: 14, scope: !8334)
!8366 = !DILocation(line: 52, column: 13, scope: !8337)
!8367 = !DILocation(line: 53, column: 13, scope: !8339)
!8368 = !DILocation(line: 58, column: 5, scope: !8345)
!8369 = !DILocation(line: 59, column: 5, scope: !8352)
!8370 = !DILocation(line: 60, column: 5, scope: !8359)
!8371 = !DILocation(line: 47, column: 22, scope: !8325)
!8372 = !DILocation(line: 48, column: 27, scope: !8328)
!8373 = !DILocation(line: 49, column: 27, scope: !8330)
!8374 = !DILocation(line: 52, column: 28, scope: !8332)
!8375 = !DILocation(line: 52, column: 18, scope: !8332)
!8376 = !DILocation(line: 53, column: 33, scope: !8337)
!8377 = !DILocation(line: 53, column: 18, scope: !8337)
!8378 = !DILocation(line: 58, column: 5, scope: !8334)
!8379 = !DILocation(line: 58, column: 5, scope: !8341)
!8380 = !DILocation(line: 59, column: 5, scope: !8334)
!8381 = !DILocation(line: 59, column: 5, scope: !8348)
!8382 = !DILocation(line: 60, column: 5, scope: !8334)
!8383 = !DILocation(line: 60, column: 5, scope: !8355)
!8384 = !DILocation(line: 61, column: 2, scope: !8325)
!8385 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10misc_tests10test_exprs10test_exprs28_$u7b$$u7b$closure$u7d$$u7d$17h0597e21984baff64E", scope: !1231, file: !8386, line: 12, type: !8387, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8390)
!8386 = !DIFile(filename: "src/test_exprs.rs", directory: "/home/calvin/git/c2rust/tests/misc", checksumkind: CSK_MD5, checksum: "c836b904a6a00f966becc91d33224b49")
!8387 = !DISubroutineType(types: !8388)
!8388 = !{null, !8389}
!8389 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&misc_tests::test_exprs::test_exprs::{closure_env#0}", baseType: !1230, size: 64, align: 64, dwarfAddressSpace: 0)
!8390 = !{!8391}
!8391 = !DILocalVariable(arg: 1, scope: !8385, file: !8386, line: 12, type: !8389)
!8392 = !DILocation(line: 12, column: 1, scope: !8385)
!8393 = !DILocation(line: 24, column: 2, scope: !8385)
!8394 = distinct !DISubprogram(name: "test_exprs", scope: !1232, file: !8386, line: 12, type: !21, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !108, templateParams: !23, retainedNodes: !8395)
!8395 = !{!8396, !8398, !8400, !8402, !8404, !8407, !8408}
!8396 = !DILocalVariable(name: "buffer", scope: !8397, file: !8386, line: 13, type: !7779, align: 4)
!8397 = distinct !DILexicalBlock(scope: !8394, file: !8386, line: 13, column: 5)
!8398 = !DILocalVariable(name: "rust_buffer", scope: !8399, file: !8386, line: 14, type: !7779, align: 4)
!8399 = distinct !DILexicalBlock(scope: !8397, file: !8386, line: 14, column: 5)
!8400 = !DILocalVariable(name: "iter", scope: !8401, file: !8386, line: 21, type: !1611, align: 8)
!8401 = distinct !DILexicalBlock(scope: !8399, file: !8386, line: 21, column: 5)
!8402 = !DILocalVariable(name: "x", scope: !8403, file: !8386, line: 21, type: !9, align: 8)
!8403 = distinct !DILexicalBlock(scope: !8401, file: !8386, line: 21, column: 29)
!8404 = !DILocalVariable(name: "left_val", scope: !8405, file: !8386, line: 22, type: !32, align: 8)
!8405 = !DILexicalBlockFile(scope: !8406, file: !8386, discriminator: 0)
!8406 = distinct !DILexicalBlock(scope: !8403, file: !2622, line: 52, column: 13)
!8407 = !DILocalVariable(name: "right_val", scope: !8405, file: !8386, line: 22, type: !32, align: 8)
!8408 = !DILocalVariable(name: "kind", scope: !8409, file: !8386, line: 22, type: !203, align: 1)
!8409 = !DILexicalBlockFile(scope: !8410, file: !8386, discriminator: 0)
!8410 = distinct !DILexicalBlock(scope: !8406, file: !2622, line: 54, column: 21)
!8411 = !DILocation(line: 13, column: 9, scope: !8397)
!8412 = !DILocation(line: 14, column: 9, scope: !8399)
!8413 = !DILocation(line: 21, column: 14, scope: !8401)
!8414 = !DILocation(line: 21, column: 9, scope: !8403)
!8415 = !DILocation(line: 22, column: 9, scope: !8409)
!8416 = !DILocation(line: 13, column: 22, scope: !8394)
!8417 = !DILocation(line: 14, column: 27, scope: !8397)
!8418 = !DILocation(line: 17, column: 38, scope: !8399)
!8419 = !DILocation(line: 17, column: 9, scope: !8399)
!8420 = !DILocation(line: 18, column: 43, scope: !8399)
!8421 = !DILocation(line: 18, column: 9, scope: !8399)
!8422 = !DILocation(line: 21, column: 14, scope: !8399)
!8423 = !DILocation(line: 21, column: 5, scope: !8401)
!8424 = !DILocation(line: 24, column: 2, scope: !8394)
!8425 = !DILocation(line: 21, column: 9, scope: !8401)
!8426 = !DILocation(line: 22, column: 27, scope: !8403)
!8427 = !DILocation(line: 22, column: 20, scope: !8403)
!8428 = !DILocation(line: 22, column: 9, scope: !8403)
!8429 = !DILocation(line: 22, column: 43, scope: !8403)
!8430 = !DILocation(line: 22, column: 31, scope: !8403)
!8431 = !DILocation(line: 22, column: 9, scope: !8405)
!8432 = distinct !DISubprogram(name: "main", linkageName: "_ZN10misc_tests4main17h8e39a4ff71b49070E", scope: !1184, file: !3805, line: 1, type: !21, scopeLine: 1, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagMainSubprogram, unit: !108, templateParams: !23, retainedNodes: !23)
!8433 = !DILocation(line: 1, column: 1, scope: !8432)
